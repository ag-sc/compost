id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Alexander II, Grand Duke of Finland's birthplace
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:birthPlace ?nativePlace .

  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?sandroBirthPlace .

  # Decedent at Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?sandroBirthPlace .
  
  # Ensure the decedent is from Alexander II's birthplace
  ?decedent dbo:nativeCountry ?nativePlace .

  # Nicholas II of Russia's administration
  dbr:Nicholas_II_of_Russia dbo:countryAdministeredBy ?administeredCountry .

  # Match the native place with the country administered by Nicholas II
  FILTER (?nativePlace = ?administeredCountry)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personBirthName WHERE {
  # Find an artist from Central Region, Ghana
  ?artist dbo:nativePlace dbr:Central_Region_(Ghana) .
  ?artist a dbo:Artist .

  # Get the birth name of this person
  ?artist foaf:name ?personBirthName .

  # Identify the writer of ""The Live Anthology"" who is also a musical artist
  ?writer dbo:work dbr:The_Live_Anthology ;
          a dbo:Writer .
  FILTER EXISTS { ?writer dbo:profession dbo:MusicalArtist }

  # Find associated musical artist of $pacely (assuming $pacely refers to a known entity)
  OPTIONAL {
    ?associatedArtist dbo:associatedMusicalArtist dbr:$pacely .
  }
  
  # Ensure the person is both the writer and the associated artist
  FILTER (?writer = ?artist && ?associatedArtist = ?artist)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowAlterEgo ?lassoMoonActor ?fredericBouralyProfession WHERE {
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  
  # Find the actor associated with Lasso the Moon as both a film and work
  OPTIONAL { 
    dbr:Lasso_the_Moon dbo:actor ?lassoMoonActor .
  }
  
  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?fredericBouralyProfession .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Find USS Arcadia (ID-1605) owner
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?ussArcadiaOwner .

  # Step 2: Identify disease and societal event referred to as ""war""
  VALUES ?diseaseWar {
    dbr:HIV/AIDS
    dbr:World_War_II
  }

  # Step 3: Find Bill Clinton's work
  dbr:Bill_Clinton dbo:author ?billClintonWork .
  FILTER (strstarts(str(?billClintonWork), ""http://dbpedia.org/resource/"") && 
          strcontains(str(?billClintonWork), ""/Book"") &&
          strcontains(str(?billClintonWork), ""/Written_work""))

  # Step 4: Identify Hillary Clinton's spouse
  ?billClintonWork dbo:spouse ?hillarySpouse .

  # Step 5: Find the commander in the war (disease/societal event)
  OPTIONAL {
    ?diseaseWar dbo:commander ?commander .
  }

  FILTER (?ussArcadiaOwner = ?hillarySpouse && 
          EXISTS { ?commander a dbo:Person } &&
          ?commander != dbr:Unknown)
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Hillary Clinton as author of ""An Invitation to the White House""
  dbr:Hillary_Clinton dbo:authorOf dbr:An_Invitation_to_the_White_House .
  
  # Bill Clinton as spouse
  dbr:Bill_Clinton dbo:spouse dbr:Hillary_Clinton .

  # Hillary Clinton's grandfather, Hugh Rodham, as commander in the war (WWI)
  OPTIONAL {
    dbr:Hugh_Rodham dbo:commanderInWar ?war .
    FILTER(CONTAINS(LCASE(STR(?war)), ""world war i"") || CONTAINS(LCASE(STR(?war)), ""world war ii""))
  }

  # USS Arcadia association
  OPTIONAL {
    ?arcadia dbo:owner dbr:Hugh_Rodham .
    FILTER(STR(?arcadia) = ""USS_Arcadia_(ID-1605)"")
  }
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Constance of Burgundy's spouse and their grandchild
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  ?spouse dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # William I of Sicily's royal child
  dbr:William_I_of_Sicily dbo:child ?williamChild .
  FILTER (dbo:Monarch(?williamChild)) .

  # Roger II of Sicily and his royal child
  dbr:Roger_II_of_Sicily dbo:child ?rogerChild .
  FILTER (dbo:Monarch(?rogerChild)) .

  # The person we are looking for
  ?person dbo:parent ?grandchild .
  ?person dbo:parent ?williamChild .
  ?person dbo:child ?rogerChild .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceActor ?birthPlaceAwardee WHERE {
  # Part 1: Find the birthplace of the actor from an Indian movie featuring Dipankar De
  {
    SELECT ?actor WHERE {
      ?movie dbo:starring dbr:Dipankar_De ;
             a dbo:Film .
      FILTER EXISTS { ?movie dbo:country dbr:India }
      ?movie dbo:starring ?actor .
    }
    OPTIONAL {
      ?actor dbo:birthPlace ?birthPlaceActor .
    }
  }

  # Part 2: Find the birthplace of the awardee of the Sangeet Natak Akademi Fellowship
  UNION
  {
    SELECT ?awardee WHERE {
      ?awardee dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
    }
    OPTIONAL {
      ?awardee dbo:birthPlace ?birthPlaceAwardee .
    }
  }
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?hostInstitution WHERE {
  ?award a dbo:NobelPrizeInPhysics .
  ?award dbo:recipient ?awardee .
  
  OPTIONAL {
    ?event dbo:eventType dbr:Nobel_Prize_in_Physics_Ceremony ;
           dbo:hostedBy ?hostInstitution .
    FILTER (dbo:educationalInstitution(?hostInstitution))
  }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?writtenWork WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:United_States ;
          dbo:occupation [a dbo:MilitaryCommander ; 
                          dbo:placeOccupied dbr:Korean_War] ;
          dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard ;
          dbo:politicalParty ?party .
  OPTIONAL {
    ?person dbo:authorOf ?writtenWork .
    FILTER (STRSTARTS(STR(?writtenWork), ""http://dbpedia.org/resource/"") && 
            EXISTS { ?writtenWork a dbo:Book . })
  }
}
```",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  # Rainer Weiss and his Nobel Prize in Physics award
  dbr:Rainer_Weiss dbo:award dbr:Nobel_Prize_in_Physics .
  
  # Other awardees of the same prize
  ?otherAwardee dbo:award dbr:Nobel_Prize_in_Physics .

  # Check if any awardee is a host of a show where the host is an educational institution
  ?show dbo:host ?host .
  ?host rdf:type dbo:EducationalInstitution .
  
  FILTER (?otherAwardee = ?host)
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find George Pickett's war commanded in
  dbr:George_Pickett dbo:commandedInWar ?warCommandedIn .
  
  # Ensure the war is a societal event
  ?warCommandedIn rdf:type dbo:SocietalEvent .

  # Assume we have identified the ruling party at that time/place (this part may need historical data)
  # For demonstration, let's assume it's dbr:Democratic_Party_(United_States) 
  VALUES ?rulingParty { dbr:Democratic_Party_(United_States) }

  # Find a member of this ruling party
  ?partyMember dbo:memberOfPoliticalParty ?rulingParty .

  # Ensure the member is both a political party and an organization
  ?partyMember rdf:type dbo:PoliticalParty .
  ?partyMember rdf:type dbo:Organization .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Cecilia Renata of Austria's father and his child
  dbr:Cecilia_Renata_of_Austria dbo:father ?ceciliaFather .
  ?ceciliaFather dbo:child ?ceciliaChild .

  # Archduke Charles Joseph of Austria's parent and their child
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?charlesParent .
  ?charlesParent dbo:child ?charlesChild .

  # Commander in the Algerian War (French Army)
  dbr:Francois_Mitterrand dbo:militaryCommanderInWar ?algerianWarCommander .
  
  # Societal Event, Event, Television Show related to French Army
  ?result a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:TelevisionShow ;
         dbo:relatedMilitaryForce dbr:Francois_Mitterrand .

  # Connect the entities
  FILTER (?ceciliaChild = ?charlesChild)
  FILTER (?algerianWarCommander = ?result)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:Commander ;
             dbo:spouse dbr:Maria_Anna_of_Bavaria_(1574-1616) .
  
  OPTIONAL {
    ?child dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
    ?archduke dbo:parent ?child .
    FILTER (?archduke = dbr:Archduke_Charles_Joseph_of_Austria)
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Maria Anna of Bavaria (born 1574) and her father Albert V, Duke of Bavaria
  dbr:Maria_Anna_of_Bavaria_(1574–1616) dbo:father dbr:Albert_V,_Duke_of_Bavaria .
  
  # Commander in the Algerian War who is also a societal event, an event, and a television show
  ?person dbo:commanderOfMilitaryForce dbr:Algerian_War ;
          dbo:societalEvent dbr:Algerian_War ;
          dbo:event dbr:Algerian_War ;
          dbo:televisionShow dbr:Algerian_War .
  
  # Ferdinand III, Holy Roman Emperor and his child Leopold I
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child dbr:Leopold_I,_Holy_Roman_Emperor .
  ?person dbo:father dbr:Leopold_I,_Holy_Roman_Emperor .
  
  # Linking the person to Maria Anna's lineage
  ?person dbo:royalty dbr:Maria_Anna_of_Bavaria_(1574–1616) .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDuke ?spouseOfChild ?grandSpouse WHERE {
  # Duke Anthony Ulrich of Brunswick's child who is royalty
  VALUES ?duke { dbr:Duke_Anthony_Ulrich_of_Brunswick }
  ?duke dbo:child ?childOfDuke .
  FILTER EXISTS { ?childOfDuke rdf:type dbo:Monarch } .

  # Find the spouse of this child
  OPTIONAL {
    ?childOfDuke dbo:spouse ?spouseOfChild .
  }

  # Princess Antoinette's child who is royalty
  VALUES ?princess { dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel }
  ?princess dbo:child ?childOfPrincess .
  FILTER EXISTS { ?childOfPrincess rdf:type dbo:Monarch } .

  # Find the spouse of this child
  OPTIONAL {
    ?childOfPrincess dbo:spouse ?spouseOfChild2 .
  }

  # Find the spouse of the spouse from Princess Antoinette's lineage
  OPTIONAL {
    ?spouseOfChild2 dbo:spouse ?grandSpouse .
  }

  # Match the two entities
  FILTER (?spouseOfChild = ?grandSpouse)
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find George H. Cameron's award
  ?award dbo:recipient dbr:George_H._Cameron .
  
  # Find the political party associated with George Savage (politician)
  ?party dbo:member dbr:George_Savage_(politician) .

  # Determine the leader of this party
  ?party dbo:leader ?leader .

  # Get the residence of this leader
  ?leader dbo:residence ?residence .

  # Ensure the entity is both an organisation and a political party
  ?entity rdf:type dbo:Organization ;
          rdf:type dbo:PoliticalParty .
  
  # Match the award, residence, and entity
  FILTER (?award = ?residence)
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Richard Grant Esterhuysen, known as The Shadow
  dbr:The_Shadow dbo:birthName ""Richard Grant Esterhuysen""@en .
  
  # Ab Kya Hoga is a television show
  dbr:Ab_Kya_Hoga dbo:genre dbr:Television_series .

  # Find actors of the TV series Ab Kya Hoga
  ?tvSeriesActor dbo:actor dbr:Ab_Kya_Hoga ;
                 a dbo:Actor .
  
  # Ensure actor is also a politician
  ?tvSeriesActor dbo:occupation dbr:Politician .

  # Link to The Shadow through shared profession or connection
  OPTIONAL {
    ?sharedConnection dbo:profession dbr:The_Shadow .
    FILTER (?tvSeriesActor = ?sharedConnection)
  }
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonSpouse ?fatherOfCommonSpouse ?royalParent ?predecessorChild ?childOfPredecessorChild WHERE {
  # Maria of Bytom's spouse
  VALUES (?mariaSpouse) { 
    dbr:Maria_of_Bytom dbo:spouse ?commonSpouse .
  }
  
  # Charles II of Naples' spouse
  VALUES (?charlesIIOfNaplesSpouse) { 
    dbr:Charles_II_of_Naples dbo:spouse ?commonSpouse .
  }

  # Father of the common spouse and his royal parent
  ?commonSpouse dbo:child ?fatherOfCommonSpouse .
  ?fatherOfCommonSpouse dbo:parent ?royalParent .
  FILTER EXISTS { ?royalParent a dbo:Monarch . } # Assuming royalty is represented by Monarch

  # Predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Child of the predecessor who is royalty
  ?predecessor dbo:child ?predecessorChild .
  FILTER EXISTS { ?predecessorChild a dbo:Monarch . }

  # Child of this royal descendant
  ?predecessorChild dbo:child ?childOfPredecessorChild .

  # Connect these two parts
  FILTER (?royalParent = ?fatherOfCommonSpouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?paradiseActor ?hepburnMovie ?commonActor WHERE {
  # Actor of ""Paradise"" (2013 film)
  VALUES ?paradiseFilm { dbr:Paradise_(2013_film) }
  ?paradiseFilm dbo:starring ?paradiseActor .

  # Movie that is a work and a film with Audrey Hepburn
  ?hepburnMovie dbo:starring dbr:Audrey_Hepburn .
  
  # Spouse of an awardee from Janusz Kamiński's awards list
  ?award dbr:Janusz_Kamiński dbo:recipient ?coAwardee .
  ?coAwardee dbo:spouse ?spouse .

  # Find common actor between the two movies
  ?hepburnMovie dbo:starring ?commonActor .
  FILTER (?paradiseActor = ?commonActor)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify William Bayne
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne"" .

  # Find the military conflict where he was a commander and awarded Knight Commander of the Order of the Bath
  ?conflict dbo:militaryConflict [
    dbo:commander ?bayne ;
    dbo:awardeeOfKnightCommanderOfTheOrderOfTheBath ?bayne .
  ] .

  # Identify The Triple X's as a military force or unit
  ?tripleXs a dbo:MilitaryUnit ;
            foaf:name ""The Triple X's"" .

  # Find the war associated with both William Bayne and The Triple X's
  ?war dbo:militaryConflict [
    dbo:commander ?bayne ;
    dbo:militaryForce ?militaryForce .
  ] .

  # Link The Triple X's to the same military force
  ?tripleXs dbo:militaryForce ?militaryForce .

  FILTER (?conflict = ?war)
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?awardForce ?congressAward WHERE {
  # Henry Clay Lewis's birthplace
  VALUES ?henryClayLewis { dbr:Henry_Clay_Lewis }
  
  ?henryClayLewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Quincy Adams Gillmore's award and associated war
  VALUES ?quincyAdamsGillmore { dbr:Quincy_Adams_Gillmore }
  
  ?quincyAdamsGillmore dbo:awardReceived ?award .
  ?award dbo:associatedWar ?war .

  # Award given by United States Congress
  ?congressAward a dbo:Award ;
                dbo:awardingBody dbr:United_States_Congress .

  FILTER (?birthPlace = ?settlement)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Find GS9 member who is both an artist and a musical artist
  ?gs9Member dbo:memberOf dbr:GS9 .
  FILTER EXISTS { ?gs9Member dbo:occupation dbr:Artist . }
  FILTER EXISTS { ?gs9Member dbo:occupation dbr:MusicalArtist . }

  # Step 2: Find associated musical artists for that member
  ?gs9Member dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Identify the birth name of a native musical artist from Florida
  ?floridaNative dbo:nativePlace dbr:Florida .
  FILTER EXISTS { ?floridaNative dbo:occupation dbr:MusicalArtist . }
  ?floridaNative dbo:birthName ?birthName .

  # Step 4: Determine the award's region and state that is American and a settlement
  ?award dbo:recipient dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?region dbo:partOf dbr:Puerto_Rico .
  FILTER EXISTS { ?region rdf:type dbr:Region . }
  FILTER EXISTS { ?region rdf:type dbr:AmericanState . }
  FILTER EXISTS { ?region rdf:type dbr:Settlement . }

  # Step 5: Combine elements to find the band member of the associated musical artist
  ?associatedArtist dbo:bandMember ?bandMember .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace ?timeZone WHERE {
  # Find the time zone for Kiyosu, Japan
  dbr:Kiyosu dbo:locationInTimezone ?timeZone .

  # Identify an awardee of the Anita Borg Institute Women of Vision Awards who is Japanese and born in Japan
  ?awardee dbo:nationality dbr:Japan ;
          dbo:birthPlace ?birthPlace ;
          dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .

  # Ensure the awardee is associated with a television show
  ?awardee dbo:profession dbr:Television_director OR 
           dbo:profession dbr:Television_writer OR 
           dbo:profession dbr:Television_actor .

  FILTER (?birthPlace = ?timeZone)
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Predecessor of Stephen V of Hungary
  ?stephenVParent dbo:predecessor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Parent of the Father (Grandfather) of Charles I of Hungary
  ?charlesIGrandparent dbo:parent ?charlesIFather .
  ?charlesIFather dbo:parent dbr:Charles_I_of_Hungary .
  
  # Ensure the grandfather is royalty
  ?charlesIGrandparent a dbo:Monarch .

  # Step 3: Spouse of the Father (Grandfather) of Philip, Despot of Romania
  ?philipGrandparent dbo:parent ?philipFather .
  ?philipFather dbo:parent dbr:Philip_Despot_of_Romania .
  
  # Ensure the grandfather is royalty
  ?philipGrandparent a dbo:Monarch .

  ?spouse dbo:spouse ?philipGrandparent .

  # Step 4: Child of the Child (Grandchild) that is royalty
  ?grandchild dbo:parent ?stephenVParent .
  ?grandchild dbo:parent ?charlesIGrandparent .
  ?grandchild a dbo:Monarch .
  
  FILTER (?spouse = ?charlesIGrandparent)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?ceceBellBirthPlace ?awardeeBirthPlace WHERE {
  # Paulus Powell's birthplace and its governor
  VALUES ?paulusPowellBirthPlace { 
    dbr:Paulus_Powell dbo:birthPlace ?paulusPowellBirthPlace .
  }
  
  OPTIONAL {
    ?paulusPowellBirthPlace dbo:administrativeRegion ?region .
    ?governor dbo:governmentRole ?role .
    ?role dbo:officeHolder ?currentGovernor .
    ?currentGovernor dbo:birthPlace ?governorBirthPlace .
    FILTER (?role = dbr:Governor_of_<REGION_PLACEHOLDER>)
  }
  
  # Cece Bell's birthplace
  VALUES ?ceceBellBirthPlace { 
    dbr:Cecily_Ann_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }

  # Awardee related to Vince Gilligan (Breaking Bad)
  VALUES ?awardee {
    <http://dbpedia.org/resource/<AWARDEE_PLACEHOLDER>> # Replace with specific awardee resource
  }
  
  OPTIONAL {
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```

**Note**: 
- `<REGION_PLACEHOLDER>` should be replaced with the actual region's DBpedia resource.
- `<AWARDEE_PLACEHOLDER>` should be replaced with the specific awardee's DBpedia resource related to Vince Gilligan.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?spouse ?personBornWithParentBirthName WHERE {
  # Find the landmark at elevation of approximately 20.1168 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = 20.116800000000001347)

  # Get the ruling party member in the location of this landmark
  ?partyMember dbo:memberOf ?rulingParty ;
              dbo:location dbr:?landmarkLocation .

  # Find the actor of ""1,000 Dollars a Minute""
  ?actor dbo:film dbr:_1000_Dollars_a_Minute_1986_film ;
         rdfs:label ?actorLabel .
  FILTER(CONTAINS(LCASE(?actorLabel), ""1000 dollars a minute""))

  # Get the spouse of this actor
  ?spouse dbo:spouse ?actor .

  # Find Tisha Sterling's parent and their birth name
  ?tishaSterling dbo:parent ?parent ;
                 rdfs:label ""Tisha Sterling"" .
  ?parent dbo:birthName ?parentBirthName .

  # Find a person born with the same birth name as Tisha Sterling's parent
  ?personBornWithParentBirthName dbo:birthName ?parentBirthName .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobThompsonBirthName ?singerRole ?bandName ?alterEgo WHERE {
  # Bob Thompson's birth name and professional roles
  VALUES ?bobThompsonResource { dbr:Bob_Thompson_(musician) }
  
  OPTIONAL {
    ?bobThompsonResource dbo:birthName ?bobThompsonBirthName .
  }

  OPTIONAL {
    ?singerRole dbo:singerIn ?bandResource .
    ?bandResource rdfs:label ?bandName .
    FILTER (lang(?bandName) = ""en"")
    ?singerRole dbr:Bob_Thompson_(musician) .
  }
  
  # Walter B. Gibson's fictional character with an alter ego in comics
  VALUES ?walterBGibsonResource { dbr:Walter_B._Gibson }
  
  OPTIONAL {
    ?fictionalCharacter dbo:fictionalCreator ?walterBGibsonResource ;
                       dbo:alterEgoInComics ?alterEgo .
    ?fictionalCharacter rdfs:label ?characterName .
    FILTER (lang(?characterName) = ""en"")
  }
}
```",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Nat Levine's film
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Identify an actor from that film
  ?film dbo:starring ?actor .

  # Step 3: Find the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Step 4: Identify Tisha Sterling's parent and their birth name
  dbr:Tisha_Sterling dbo:parent ?parent .
  ?parent foaf:name ?birthName .

  # Step 5: Find a Republican Party member with the same birth name
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) ;
          foaf:name ?birthName .

  # Ensure the spouse matches the criteria
  FILTER (?spouse = ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify the successor season of 2006–07 VfL Bochum
  dbr:VfL_Bochum_in_the_2007%E2%80%9308_Bundesliga dbo:sportsTeamSeason ?successorSeason .
  
  # Find the manager for this team in that season
  ?successorSeason dbo:manager ?manager .

  # Ensure the manager is a sports manager born on 1968-08-26 and native to Germany
  ?manager dbo:nationality dbr:Germany ;
           dbo:birthDate ""1968-08-26""^^xsd:date ;
           rdf:type dbo:SportsManager .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChildRoyalty WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Step 2: Find a child of this parent who is royalty
  ?sibling dbo:parent ?parent ;
           rdf:type dbo:Monarch .

  # Step 3: Identify the child of Philipp Albrecht, Duke of Württemberg
  ?philippChild dbo:child dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Step 4: Find a predecessor (older sibling or parent) of this child
  OPTIONAL {
    ?predecessor dbo:siblingOf ?philippChild ;
                dbo:parent ?philippParent .
  }
  
  # Step 5: Trace three generations down from Alexander of Württemberg
  ?alexander dbr:Alexander_of_W%C3%BCrttemberg ;
             dbo:child ?firstChild .
  ?firstChild dbo:child ?secondChild .
  ?secondChild dbo:child ?thirdChild .

  # Final condition: The child of the child who is royalty must be a predecessor
  FILTER (?sibling = ?predecessor)
  
  BIND(?sibling AS ?childOfChildRoyalty)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfPersonBorn1945 ?nickCurranAssociatedArtist ?realNameOfKimWilsonsBand WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1945 && MONTH(?date) = 3 && DAY(?date) = 30)
  ?person dbo:musicalArtist true .

  # Find the band of this person
  ?bandMember dbo:bandMember ?bandOfPersonBorn1945 .
  
  # Find Nick Curran's associated musical artist persona
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Find Kim Wilson and his band
  dbr:Kim_Wilson dbo:bandMember ?kimWilsonBand .
  ?kimWilsonBand rdfs:label ?realNameOfKimWilsonsBand .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?paulusPowellBirthPlace ?regionOfPaulusPowellBirthPlace 
       ?ceceBellBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Paulus Powell's birthplace
  dbr:Paulus_Powell dbo:birthPlace ?paulusPowellBirthPlace .
  
  # Region of Paulus Powell's birthplace
  ?paulusPowellBirthPlace a dbo:AdministrativeRegion ;
                         rdfs:label ?regionLabel .

  # Cece Bell, author of El Deafo
  dbr:Cece_Bell dbo:birthPlace ?ceceBellBirthPlace .
  
  # Filter for American birthplace
  FILTER(CONTAINS(LCASE(?ceceBellBirthPlace), ""united states"") || CONTAINS(LCASE(?ceceBellBirthPlace), ""usa""))

  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?fabulousThunderbirdsRealName WHERE {
  # Find the person born on 1945-03-30 who is a band member of The Fabulous Thunderbirds
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:bandMember dbr:The_Fabulous_Thunderbirds .

  # Get Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Get the real name of The Fabulous Thunderbirds
  OPTIONAL {
    ?fabulousThunderbirdsRealName rdfs:label ""The Fabulous Thunderbirds""@en .
    FILTER (lang(?fabulousThunderbirdsRealName) = 'en')
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Princess Muna al-Hussein's royal child and their parent
  ?munasChild dbo:type dbo:RoyalFamilyMember .
  ?munasChild dbo:parent dbr:Princess_Muna_al-Hussein .
  ?munasChildParent dbo:child ?munasChild .
  
  # Princess Aisha bint Faisal's grandparent (royalty) and their royal child
  ?aishasGrandparent dbo:type dbo:RoyalFamilyMember .
  ?aishasParent dbo:parent ?aishasGrandparent .
  ?aishasParent dbo:child dbr:Princess_Aisha_bint_Faisal .
  ?aishasChild dbo:parent ?aishasParent .
  ?aishasChild dbo:type dbo:RoyalFamilyMember .

  # Find the common parent
  FILTER (?munasChildParent = ?commonParent)
  FILTER (?aishasChildParent = ?commonParent)
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?actorInMovie ?decedentPerson ?professionalParent WHERE {
  # Find Allan Arbus's child
  ?allanArbus dbo:child ?child .
  FILTER(?allanArbus = dbr:Allan_Arbus) .

  # Find the parent of that child
  ?child dbo:parent ?parentOfChild .

  # Actor in a movie (that is a work)
  ?actorInMovie dbo:actor ?movie .
  FILTER(STRSTARTS(STR(?movie), ""http://dbpedia.org/resource/Category:Films_by_"")) .

  # Person decedent at Los Angeles
  ?decedentPerson dbo:deathPlace dbr:Los_Angeles,_California .

  # Profession of Eugène Cattin and parent of a professional in that profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
  ?professional dbo:parent ?professionalParent .
  FILTER(?professional dbo:profession = ?eugeneProfession) .

  # Combine conditions to find the required entities
  OPTIONAL { ?actorInMovie = ?decedentPerson }
  OPTIONAL { ?parentOfChild = ?professionalParent }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?authorBirthPlace ?awardeeBirthPlace WHERE {
  # Governor of Virginia
  OPTIONAL {
    ?governor a dbo:Governor ;
              dbo:stateOrTerritory dbr:Virginia .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }
  
  # Author of ""El Deafo""
  OPTIONAL {
    ?author foaf:name ""Cece Bell"" ;
            dbo:nationality dbr:United_States ;
            dbo:birthPlace ?authorBirthPlace .
  }

  # Awardee associated with Vince Gilligan
  OPTIONAL {
    ?awardee foaf:name ""Vince Gilligan"" ;
             dbo:award ?award .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Mariclare Costello's spouse
  ?mariclareCostello dbo:spouse ?spouse .
  FILTER(STR(?mariclareCostello) = ""Mariclare_Costello"")

  # Step 2: Find the child of Mariclare Costello's spouse
  ?spouse dbo:child ?child .

  # Step 3: Determine the parent of this child
  ?parent1 dbo:child ?child .
  
  # Step 4: Identify Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .

  # Step 5: Find a professional in that same field
  ?professional dbo:profession ?eugeneProfession .

  # Step 6: Identify an actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?actor dbo:actedIn dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .
  
  # Step 7: Determine the parent of this actor
  ?parent2 dbo:child ?actor .

  # Step 8: Find the common parent from steps 3 and 7
  FILTER(?parent1 = ?parent2)
  BIND(?parent1 AS ?commonParent)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?soccerClubNickname ?player WHERE {
  # Find Denis Kolodin's associated soccer club
  OPTIONAL { 
    dbr:Denis_Kolodin dbo:associatedMusicalArtist ?soccerClub .
  }
  
  # Get the nickname of the soccer club
  OPTIONAL {
    ?soccerClub dbo:nickname ?soccerClubNickname .
  }

  # Find a work by Aleksandr Filimonov and its associated player
  OPTIONAL {
    dbr:Aleksandr_Filimonov dbo:work ?filimonovWork .
    ?filimonovWork dbo:associatedMusicalArtist ?player .
  }
  
  # Ensure the player is linked to the soccer club
  FILTER (?soccerClub = ?player)
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedMusicalArtist WHERE {
  # Find Cynthia Morgan's birth name
  VALUES ?cynthiaMorganBirthName { 
    dbr:Cynthia_Morgan#birthName
  }
  
  # Find a movie with Afeez Oyetoro and get its actors
  ?movie dbo:starring dbr:Afeez_Oyetoro .
  ?actor dbo:starring ?movie .

  # Check if any actor has the same birth name as Cynthia Morgan
  ?actor dbo:birthName ?cynthiaMorganBirthName .

  # Get associated musical artist for this person
  OPTIONAL {
    ?actor dbo:associatedMusicalArtist ?associatedMusicalArtist .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceSettlement WHERE {
  # Antonios Varthalitis's death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Awardee of an event in 1930 (assuming this refers to some award)
  OPTIONAL {
    ?awardee dbo:awardYear ""1930""^^xsd:gYear ;
            dbo:award ?award .
  }

  # Leader of the National Party of Greece
  OPTIONAL {
    ?leader dbo:partyLeader dbr:National_Party_of_Greece .
  }
  
  # Ensure that these entities are connected through wars or other contexts
  FILTER EXISTS { 
    ?deathPlaceSettlement dbo:relatedToWar ?war .
    ?awardee dbo:relatedToWar ?war .
    ?leader dbo:relatedToWar ?war .
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalAlterEgo ?movieActor ?album WHERE {
  # The Golden Master series alter ego
  ?goldenMasterSeries dbo:alterEgo ?professionalAlterEgo .
  
  # Smartbomb book author and their movie role
  ?smartbombBook dbo:author ?bookAuthor .
  ?bookAuthor dbo:actor ?movieActor .

  # T.I.'s song and its album
  ?tisSong dbo:song ?songTitle ;
           dbo:album ?album .
  
  # Connect the entities through common actors or roles
  FILTER (?movieActor = ?professionalAlterEgo)
}
```",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Find The Shadow's alter ego in comics
  VALUES ?shadowAlterEgo { 
    dbr:Lamont_Claybourne # Assuming Lamont Claybourne is the alter ego
  }
  
  # Step 2: Find Richard E. Grant's movie and TV roles
  ?movie dbo:starring dbr:Richard_E._Grant .
  OPTIONAL {
    ?tvSeries dbo:basedOn ?movie .
    ?tvActor dbo:starring ?tvSeries .
  }

  # Step 3: Find actor from ""Ab Kya Hoga"" who is also a politician
  VALUES ?abKyaHogaActor { 
    dbr:Some_Actor # Placeholder for the actual actor
  }
  
  ?actor dbo:profession ?profession .
  FILTER (?profession IN (dbr:Acting, dbr:Politics))

  # Step 4: Combine to find the professional
  FILTER (?tvActor = ?abKyaHogaActor)
  FILTER (?shadowAlterEgo = ?professional)
}
```",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?societalEvent ?militaryConflict WHERE {
  # Edmund Hakewill-Smith and his award
  dbr:Edmund_Hakewill-Smith dbo:awardReceived ?award .
  
  # Societal event related to the award
  OPTIONAL { 
    ?award dbo:awardedBy ?societalEvent .
  }
  
  # Military conflict involving the award or societal event
  OPTIONAL {
    ?militaryConflict dbo:relatedTo ?award .
    FILTER (CONTAINS(LCASE(?militaryConflict), ""sinking of prince of wales and repulse""))
  }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?retailleauParty ?successorParty WHERE {
  # Find the political party of Bruno Retailleau
  dbr:Bruno_Retailleau dbo:party ?retailleauParty .

  # Find Patrice Martin-Lalande's successor who is a politician and French
  OPTIONAL {
    ?position dbo:currentIncumbent ?successor .
    ?successor rdf:type dbo:Politician ;
               dbo:nationality dbr:France .
    
    # Assuming the position has been succeeded, we need to find this link
    ?position dbo:previousIncumbent dbr:Patrice_Martin-Lalande .
  }

  # Find the political party of the successor
  OPTIONAL {
    ?successor dbo:party ?successorParty .
  }
}
```",4,8,5,2,2,2,2,9,1,10857,0,9.209799226376865e-05,1.0,0.00018417902200939311
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?tishaSterling dbo:parent ?parent .
  FILTER (str(?tishaSterling) = ""Tisha_Sterling"") .

  # Step 2: Find films by Nat Levine and actors in those films
  ?natLevine dbo:film ?film .
  FILTER (str(?natLevine) = ""Nat_Levine"") .
  
  ?film dbo:actor ?actor .

  # Step 3: Identify the spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Step 4: Get birth name of Tisha Sterling's parent
  ?parent foaf:name ?birthName .

  # Step 5: Find landmark with specific elevation and ruling party
  ?landmark dbo:elevation ?elevation .
  FILTER (xsd:float(?elevation) = 20.1168) .

  ?landmark dbo:rulingParty ?rulingParty .
  
  # Check if the spouse is a member of the ruling party
  ?spouse dbo:partyMember ?rulingParty .

  # Ensure the person we are looking for matches all criteria
  FILTER (?birthName = ?parent && ?spouse = ?person)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfFather WHERE {
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }
  VALUES ?theShadowAlterEgo { dbr:The_Shadow#alter_ego }

  ?child dbo:parent ?baedaMaryamI .
  ?parent dbo:parent ?child .
  FILTER (dbo:royalty(?parent)) .

  ?commander dbo:participatedIn dbr:Siege_of_Mukha .
  FILTER (dbo:royalty(?commander)) .

  ?alterEgo dbo:alter_ego ?theShadowAlterEgo .

  ?fatherOfFather dbo:parent ?parent .
  FILTER (dbo:royalty(?fatherOfFather) && dbo:officeHolder(?fatherOfFather))
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfSpouse WHERE {
  # Step 1: Identify the child of Francis I, Duke of Lorraine who is royalty
  VALUES ?child { 
    dbr:Leopold_I,_Duke_of_Lorraine 
    dbr:Charles_VII,_Holy_Roman_Emperor 
    # Add other potential children if known
  }
  
  # Step 2: Find the father of this child and then the parent (grandparent) of that father
  ?child dbo:father ?father .
  ?father dbo:father|dbo:mother ?grandparent .

  # Step 3: Identify the spouse of this grandparent who is royalty and a noble
  ?grandparent dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch . }
  FILTER EXISTS { ?spouse rdf:type dbo:Noble . }

  # Step 4: Find the parent of this spouse
  ?spouse dbo:father|dbo:mother ?parentOfSpouse .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reedHowesDeathPlace ?colorMeDeadActor ?colorMeDeadActorDeathPlace ?aladdin1958Actor ?aladdin1958ActorDeathPlace WHERE {
  # Reed Howes' death place
  OPTIONAL { 
    dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
  }
  
  # Actor of ""Color Me Dead"" and their death place
  OPTIONAL {
    dbr:Color_Me_Dead dbo:actor ?colorMeDeadActor .
    ?colorMeDeadActor dbo:deathPlace ?colorMeDeadActorDeathPlace .
  }

  # Actor of ""Aladdin (1958 film)"" and their death place
  OPTIONAL {
    dbr:Aladdin_(film) dbo:actor ?aladdin1958Actor .
    ?aladdin1958Actor dbo:deathPlace ?aladdin1958ActorDeathPlace .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfFather WHERE {
  # Step 1: Identify Saw Shwe Khet's royal child
  ?sawShweKhetChild dbo:child dbr:Saw_Shwe_Khet .
  FILTER EXISTS { ?sawShweKhetChild a dbo:RoyalPerson . }

  # Step 2: Determine the father of that child and his spouse
  ?father dbo:parent ?sawShweKhetChild .
  OPTIONAL {
    ?father dbo:spouse ?spouseOfFather .
  }

  # Step 3: Identify Saw Min Phyu's royal spouse and their child
  ?minPhyuSpouse dbo:spouse dbr:Saw_Min_Phu .
  FILTER EXISTS { ?minPhyuSpouse a dbo:RoyalPerson . }
  OPTIONAL {
    ?minPhyuSpouse dbo:child ?childOfMinPhyuSpouse .
  }

  # Step 4: Find the predecessor of that child
  OPTIONAL {
    ?predecessor dbo:succession ?childOfMinPhyuSpouse .
  }

  # Step 5: Identify Minye Kyawswa's descendant
  ?minyeKyawswaChild dbo:child dbr:Minye_Kyawswa .
  OPTIONAL {
    ?parentOfMinyeKyawswaChild dbo:parent ?minyeKyawswaChild .
  }

  # Final filter to match the predecessor with the spouse of the father
  FILTER (?predecessor = ?spouseOfFather)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  ?person rdf:type/(dbo:SoccerPlayer|dbo:Athlete) .
  ?person dbo:sport/dbo:SoccerManager .
  
  ?club dbo:member ?person ;
        a dbo:SoccerClub, dbo:SportsTeam, dbo:SportsOrganization .

  FILTER (strstarts(str(?club), ""Hong Kong C""))

  ?club dbo:manager ?manager .
}
```",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraPartyLeaderOffice ?manuelPintoDaCostaCommanderOffice ?madridElectionLeaderResidence WHERE {
  # Miguel Maura's party and its leader's office
  OPTIONAL {
    ?miguelMaura dbo:party ?miguelMauraParty .
    ?miguelMauraParty dbo:leader ?partyLeader .
    ?partyLeader dbo:office ?miguelMauraPartyLeaderOffice .
  }

  # Manuel Pinto da Costa's military conflict and his commander's office
  OPTIONAL {
    ?manuelPintoDaCosta dbo:commanderOf ?conflict .
    ?conflict a dbo:MilitaryConflict .
    ?conflict dbo:commander ?manoelCommander .
    ?manoelCommander dbo:office ?manuelPintoDaCostaCommanderOffice .
  }

  # Leader of the 2003 Madrid City Council election and their residence
  OPTIONAL {
    dbr:Madrid_City_Council_election,_2003 dbo:leader ?madridElectionLeader .
    ?madridElectionLeader dbo:office ?electionLeaderOffice .
    ?madridElectionLeader dbo:residence ?madridElectionLeaderResidence .
  }
}
```",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?vinceGilliganAwardeeBirthPlace ?regionGovernorBirthPlace WHERE {
  # Cece Bell's birthplace
  dbr:C._E._Bell dbo:birthPlace ?ceceBellBirthPlace .

  # Vince Gilligan's award and awardee's birthplace
  OPTIONAL {
    dbr:Vince_Gilligan dbo:award ?vinceGilliganAward .
    ?vinceGilliganAwardee dbo:receivedAward ?vinceGilliganAward ;
                        dbo:birthPlace ?vinceGilliganAwardeeBirthPlace .
  }

  # Paulus Powell's birthplace region and its governor
  OPTIONAL {
    dbr:Paulus_Powell dbo:birthPlace ?paulusPowellBirthPlaceRegion .
    ?regionGovernor dbo:governorOf ?paulusPowellBirthPlaceRegion ;
                   dbo:birthPlace ?regionGovernorBirthPlace .
  }
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theShadowURL WHERE {
  VALUES ?lamontCranston { dbr:Lamont_Cranston_(The_Shadow) }
  ?lamontCranston dbo:alterEgo ?theShadow .
  
  OPTIONAL {
    ?theShadow dbo:father ?sirMalcolmArlen .
    ?sirMalcolmArlen dbo:child ?kingKamenzi .
    ?kingKamenzi dbo:child ?naod .
    ?naod dbo:officeHolder ""Siege of Mukha""^^xsd:string .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  VALUES ?herbMovie { 
    # Assuming we know the movie Herschel Bernardi acted in, e.g., ""The Great Escape""
    dbr:The_Great_Escape
  }
  
  ?herbMovie dbo:actor ?herbActor .
  FILTER (?herbActor = dbr:Herschel_Bernardi)

  OPTIONAL {
    dbr:Mariclare_Costello dbo:spouse ?mariclareSpouse .
    ?mariclareSpouse dbo:child ?mariclareChild .
    ?mariclareChild dbo:parent ?mariclareParent .
  }

  OPTIONAL {
    dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
    ?eugeneProfession dbo:professional ?eugeneProfessional .
    ?eugeneProfessional dbo:parent ?eugeneParent .
  }
  
  FILTER (?mariclareParent = ?eugeneParent)
  ?actor dbo:actor ?herbMovie .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfGrandparent WHERE {
  # Step 1: Identify Philip, Despot of Romania's parent who is royalty
  ?philipParent dbo:child dbr:Philip_Despot_of_Romania .
  ?philipParent a dbo:Monarch .

  # Step 2: Identify the spouse of Philip's grandparent
  ?grandparent dbo:spouse ?spouseOfGrandparent .
  ?grandparent dbo:parent ?philipParent .

  # Step 3: Identify Maria of Bytom's spouse and his parent who is royalty
  ?mariaSpouse dbo:spouse dbr:Maria_of_Bytom .
  ?fatherOfMariaSpouse dbo:child ?mariaSpouse .
  ?fatherOfMariaSpouse a dbo:Monarch .

  # Step 4: Identify the child of Maria's spouse's father who is royalty
  ?grandchild dbo:parent ?fatherOfMariaSpouse .
  ?grandchild a dbo:Monarch .

  # Step 5: Identify Stephen V of Hungary's predecessor and their child who is royalty
  ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
  ?royalChild dbo:parent ?predecessor .
  ?royalChild a dbo:Monarch .

  # Step 6: Identify the parent of Stephen V's predecessor's royal child
  ?grandparentOfRoyalChild dbo:child ?royalChild .

  # Final condition: Match the spouse of Philip's grandparent with the grandparent of Stephen V's predecessor's royal child
  FILTER (?spouseOfGrandparent = ?grandparentOfRoyalChild)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  # Identify Bill Clinton
  ?billClinton a dbo:Person ;
               dbo:spouse dbr:Hillary_Clinton ;
               dbo:residence dbr:Chappaqua,_New_York .

  # Confirm his role during the Gulf War
  ?gulfWar a dbo:SocietalEvent ;
           dbo:commander ?billClinton .
  
  # Identify books authored by Bill Clinton
  ?book dbo:author ?billClinton ;
        a dbo:Book .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dawitChild ?shadowAlterEgo ?baedaMaryamChild ?royaltyOfficeHolder WHERE {
  # Dawit I's child
  ?dawitI dbo:child ?dawitChild .
  FILTER (str(?dawitI) = ""Dawit_I"")

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo ?shadowAlterEgo .

  # Baeda Maryam I's child
  ?baedaMaryamI dbo:child ?baedaMaryamChild .
  FILTER (str(?baedaMaryamI) = ""Baeda_Maryam_I"")

  # Father of Baeda Maryam I's child, who is a royalty and office holder
  ?baedaMaryamChild dbo:father ?royaltyOfficeHolder .
  
  # Connect Dawit I's child to Lamont Cranston's alter ego through the lineage
  FILTER (?dawitChild = ?shadowAlterEgo)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderChild WHERE {
  ?siege dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?siege), ""Padua_Siege""))
  
  ?commander dbo:child ?commanderChild .
  ?commanderChild a dbo:Monarch .

  ?isabella dbo:parent ?commanderChild ;
            rdfs:label ""Isabella of Austria""@en .
  
  ?philipI dbo:parent ?royalChild .
  ?royalChild a dbo:Monarch .
  FILTER(STRSTARTS(STR(?philipI), ""Philip_I_of_Castile""))
  
  ?commanderChild dbo:child ?royalChild .

}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's child who is a politician
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
  ?child dbo:occupation dbr:Politician .

  # Edward Stanley, 17th Earl of Derby's parent who was a politician and office holder
  ?parent dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?parent dbo:occupation dbr:Politician .
  ?parent dbo:officeHolder ?office .

  # The father of the child (politician) from Frederick Stanley's lineage
  ?father dbo:spouse ?mother .
  ?child dbo:parent ?father .
  
  # Ensure the child is related to the Rodney Lees award awardee
  ?awardee dbo:award dbr:Rodney_Lees_Award .
  ?child dbo:relatedTo ?awardee .

  FILTER (?child = ?politicianChild)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine and his spouse
  VALUES ?francisI { dbr:François_Ier,_Duke_of_Lorraine }
  
  ?francisI dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch } .
  FILTER EXISTS { ?spouse rdf:type dbo:NoblePerson } .

  # Step 2: Find their child who is royalty
  ?child dbo:parent ?francisI ;
         dbo:parent ?spouse .
  FILTER EXISTS { ?child rdf:type dbo:Monarch } .

  # Step 3: Identify the father of this child (either Francis I or his spouse)
  OPTIONAL {
    ?father dbo:child ?child .
    VALUES ?father { ?francisI ?spouse }
  }

  # Step 4: Find the parent of this father
  OPTIONAL {
    ?parentOfFather dbo:child ?father .
  }

  # Ensure we get a valid result for the parent who is royalty and noble
  FILTER EXISTS { ?parentOfFather rdf:type dbo:Monarch } .
  FILTER EXISTS { ?parentOfFather rdf:type dbo:NoblePerson } .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Step 1: Identify the leader of West Germany
  ?leader dbo:country dbr:West_Germany .
  
  # Step 2: Determine the country of administration
  ?administration dbo:headLeader ?leader .
  
  # Step 3: Find the person born on 1968-08-26, who is a sports manager and manager of VfL Bochum
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager ;
          dbo:managerOfTeam dbr:VfL_Bochum .
  
  # Step 4: Identify the soccer club season managed by this person
  ?teamSeason dbo:seasonType dbo:SoccerClubSeason ;
              dbo:managedBy ?person .
  
  # Step 5: Find the current manager of this team
  ?manager dbo:managesTeam ?teamSeason .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find Hu Jieqing's spouse who is a writer
  dbr:Hu_Jieqing dbo:spouse ?writerSpouse .
  FILTER (dbo:Writer IN (rdf:type/rdfs:subClassOf*)) .

  # Get the works and their countries for this writer
  ?writerSpouse dbo:work ?work .
  ?work dbo:country ?country .

  # Find a person who died in Taipei
  ?decedent dbo:deathPlace dbr:Taipei .

  # Identify children of this decedent who are politicians
  ?decedent dbo:child ?politicianChild .
  FILTER (dbo:Politician IN (rdf:type/rdfs:subClassOf*)) .

  # Ensure the politician child is related to Hu Jieqing's spouse's work country
  ?work dbo:country ?relatedCountry .
  FILTER (?country = ?relatedCountry) .

  # Get the birthplace of this politician child
  ?politicianChild dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?war WHERE {
  # Find the commander and military force of the French campaign in Egypt and Syria
  ?campaign dbo:societalEvent true ;
            dbo:militaryConflict ?conflict .
  
  FILTER (CONTAINS(LCASE(STR(?campaign)), ""french campaign egypt syria""))
  
  ?conflict dbo:commander ?commander ;
           dbo:militaryForce ?militaryForce .

  # Find the military conflict associated with William Bayne's award
  dbr:William_Bayne dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?bayneConflict dbo:militaryConflict true ;
                 dbo:awardRecipient dbr:William_Bayne .
  
  # Ensure that the military force in both contexts is related
  FILTER (?militaryForce = ?conflict)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find Rodney Lees' award
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Step 2: Find the parent of the awardee
  OPTIONAL { 
    ?awardRecipient dbo:parent ?parent .
  }
  
  # Step 3: Identify the alumnus of Eton College
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  # Step 4: Determine the child that is a politician
  OPTIONAL {
    ?politician dbo:childOf ?alumnus ;
                rdf:type dbo:Politician .
  }
  
  # Step 5: Find Frederick Stanley, 16th Earl of Derby's child
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .
  
  # Step 6: Identify the parent of this child
  OPTIONAL {
    ?parentOfFrederickChild dbo:child ?frederickChild ;
                           rdf:type dbo:Person .
  }
  
  # Combine relationships to find a common entity
  FILTER (?politician = ?frederickChild)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Commander in the Siege of Mukha and their parent
  ?commander dbo:event dbr:Siege_of_Mukha .
  ?commanderParent dbo:child ?commander .
  
  # Find common ancestor (grandfather)
  ?commonAncestor dbo:parent ?child ;
                  dbo:parent ?commanderParent ;
                  a dbo:Monarch ;
                  dbo:officeHolder true .

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo ?shadow .
  
  FILTER (?grandfather = ?commonAncestor)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonActor WHERE {
  # Actor of Shelby Oaks
  VALUES ?shelbyOaksResource { dbr:Shelby_Oaks }
  ?shelbyOaksResource dbo:actor ?shelbyOaksActor .

  # Album related to T.I. that is a song and musical work
  ?album dbo:musicalArtist dbr:T.I. ;
         rdf:type dbo:Songs .
  ?song dbo:partOfAlbum ?album ;
        rdf:type dbo:Song .

  # Actor of the album's songs
  ?song dbo:actor ?albumActor .

  # Professional in the alter ego of ""The Golden Master""
  VALUES ?goldenMasterResource { dbr:The_Golden_Master }
  ?goldenMasterResource dbo:character ?alterEgo .
  ?alterEgo dbo:profession ?professionalRole .
  ?professionalRole dbo:agent ?goldenMasterActor .

  # Find common actor
  FILTER (?shelbyOaksActor = ?albumActor)
  OPTIONAL {
    FILTER (?albumActor = ?goldenMasterActor)
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Myat Hpone Pyo's father who is royalty
  ?myatHponePyo dbo:father ?royalFather .
  ?royalFather a dbo:Royal .

  # Spouse of Myat Hpone Pyo's royal father
  ?royalFather dbo:spouse ?spouse .

  # Saw Min Phyu and her royal spouse
  ?sawMinPhyu dbo:spouse ?royalSpouse .
  ?royalSpouse a dbo:Royal .

  # Child of Saw Min Phyu's royal spouse
  ?royalSpouse dbo:child ?childOfSawMinPhyu .

  # Predecessor to the child of Saw Min Phyu's royal spouse
  ?predecessor dbo:precedes ?childOfSawMinPhyu .

  # Ensure the spouse is the predecessor
  FILTER (?spouse = ?predecessor)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rodArgentProfession ?pacelyAssociatedArtist ?eboTaylorAssociatedArtist WHERE {
  # Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?rodArgentProfession .
  
  # $pacely (Paul McCartney) associated musical artist
  VALUES ?pacely { 
    dbr:James_Paul_McCartney 
  }
  OPTIONAL {
    ?pacely dbo:associatedMusicalArtist ?pacelyAssociatedArtist .
  }

  # Ebo Taylor's associated musical artist
  VALUES ?eboTaylor { 
    dbr:Ebo_Taylor 
  }
  OPTIONAL {
    ?eboTaylor dbo:nativePlace dbr:Central_Region,_Ghana ;
               dbo:associatedMusicalArtist ?eboTaylorAssociatedArtist .
  }

  # Ensure the associated artists are the same
  FILTER (?pacelyAssociatedArtist = ?eboTaylorAssociatedArtist)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burhanBelgeBirthplace ?charlesParsonsAward WHERE {
  # Find Burhan Belge's birthplace
  dbr:Burhan_Belge dbo:birthPlace ?burhanBelgeBirthplace .
  
  # Find Charles Parsons' award
  dbr:Charles_Parsons_(British_Army_officer) dbo:award ?charlesParsonsAward .
}
```",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?galanCountry ?barrerasParty ?petroFatherParty WHERE {
  # Daniel Elahi Galán's country of birth
  dbr:Dani_El%C3%A1i_Gal%C3%A1n dbo:birthPlace ?galanCountry .

  # Roy Leonardo Barreras Montealegre's party affiliation
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:partyAffiliation ?barrerasParty .

  # Sofía Petro's father and his party affiliation
  OPTIONAL {
    dbr:Sof%C3%ADa_Petro dbo:father ?petroFather .
    ?petroFather dbo:partyAffiliation ?petroFatherParty .
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?zervasWar ?stalingradAwardeeWar ?varthalitisDeathPlace WHERE {
  # Wars involving Nikolaos Zervas
  ?zervas dbo:associatedWith ?zervasWar .
  FILTER CONTAINS(LCASE(STR(?zervas)), ""nikolaos zervas"") .

  # War of the awardee of 30 (likely related to Stalingrad)
  ?stalingradAwardee dbo:awardReceived dbr:Order_of_Saint_George_4th_class .
  FILTER CONTAINS(LCASE(STR(?stalingradAwardee)), ""order of saint george"") .
  ?stalingradAwardee dbo:associatedWith ?stalingradAwardeeWar .

  # Antonios Varthalitis' death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?varthalitisDeathPlace .
  FILTER (?varthalitisDeathPlace rdf:type dbp:PopulatedPlace) .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  ?person dbp:residence ?settlement .
  
  # Filter for settlements in the EET region
  VALUES ?eetRegion { 
    dbr:Bulgaria 
    dbr:Greece 
    dbr:Romania 
    dbr:Ukraine 
    dbr:Moldova 
    dbr:Georgia 
    dbr:Armenia 
    dbr:Azerbaijan 
    dbr:Russia
  }
  
  ?settlement dbo:country ?eetRegion .
  
  # Get the birthplace of the person
  ?person dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor season of the 2006–07 VfL Bochum season
  VALUES ?vflBochumSeason { dbr:2006%E2%80%9307_VfL_Bochum_season }
  ?successor dbo:follows ?vflBochumSeason .
  
  # Find the manager of Thomas Letsch's team during that successor season
  ?letschTeam dbo:manager ?manager .
  ?letschTeam dbo:season ?successor .
  dbr:Thomas_Letsch dbo:managedSportTeam ?letschTeam .

  # Filter managers based on nationality linked to the country that administered West Germany
  ?manager dbo:nationality ?nationality .
  ?adminCountry dbo:administratedBy dbr:West_Germany .
  ?nationality rdfs:label ?countryLabel .
  FILTER (CONTAINS(LCASE(?countryLabel), ""the "") || LCASE(?countryLabel) = LCASE(?adminCountry))
}
```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet's child
  ?sawShweKhetChild dbo:childOf dbr:Saw_Shwe_Khet .
  
  # Step 2: Identify Minye Kyawswa's child and his parent (Minye Kyawswa)
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa ;
                    a dbo:RoyalPerson .

  # Step 3: Find the predecessor of Saw Shwe Khet's child
  ?predecessor dbo:predecessor ?sawShweKhetChild .
  
  # Ensure all individuals are royalty
  FILTER (?sawShweKhetChild a dbo:RoyalPerson && 
          ?minyeKyawswaChild a dbo:RoyalPerson &&
          ?predecessor a dbo:RoyalPerson)

  # Step 4: Identify the father of Saw Shwe Khet's child (who is also royalty)
  ?father dbo:child ?sawShweKhetChild .
  
  # Step 5: Find the spouse of this father
  ?father dbo:spouse ?spouse .

  # Ensure the father is a predecessor of Minye Kyawswa's child
  FILTER (?predecessor = ?father)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandMemberURL WHERE {
  dbr:Jamie_T dbo:bandMember ?bandMember .
  BIND(?bandMember AS ?bandMemberURL)
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?commander dbo:officeHolderOf dbr:Korean_War .
  ?commander dbo:author ?author .

  ?work dbo:author ?author ;
        a dbo:Book ;
        dbo:language ""English""^^xsd:string .

  OPTIONAL {
    ?bidenWork dbo:author ?author .
    ?bidenWork dbo:subject dbr:Joe_Biden .
  }

  FILTER EXISTS { ?commander dbo:officeHolderOf dbr:Korean_War }
  FILTER EXISTS { ?work a dbo:Book }
  FILTER EXISTS { ?bidenWork dbo:subject dbr:Joe_Biden }
}
```",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  # Step 1: Find the landmark with the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""20.1168""^^xsd:float .
  
  # Step 2: Determine the ruling party of the location of the landmark
  ?location dbo:location ?landmark ;
            dbo:rulingParty ?party .

  # Step 3: Find a member of this ruling party
  ?member dbo:memberOf ?party ;
          rdf:type dbo:Politician ;
          rdfs:label ?partyMemberLabel .
  
  # Step 4: Identify films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .

  # Step 5: Find actors of these films
  ?actor dbo:actedIn ?film .

  # Step 6: Determine the spouse of the actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Step 7: Identify Ann Sothern's birth name and find a person with that birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName ;
          rdfs:label ?partyMemberLabel .

  # Combine the information to match the party member, spouse of actor, and person born as Ann Sothern's birth name
  FILTER (?spouse = ?member && ?member = ?person)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Archduchess Margarete Sophie of Austria's parent and sibling
  ?parent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  ?sibling dbo:parent ?parent .
  
  # Duke Philipp of Württemberg's grandchildren
  ?grandparent dbo:child dbr:Duke_Philipp_of_Württemberg .
  ?grandchild dbo:parent ?grandparent .
  ?greatGrandchild dbo:parent ?grandchild .

  # Archduchess Helena of Austria's spouse and their royal child
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?royalChild dbo:parent ?spouse .
  
  # Find the intersection where these relationships meet
  OPTIONAL {
    ?sibling dbo:child ?royalChild .
  }
  FILTER (?royalChild = ?greatGrandchild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?toyotomiChildWar ?yamazaBirthPlaceEntity ?koichiroWar WHERE {
  # Toyotomi Hideyoshi's child involved in a war
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  ?child dbo:associatedWith ?toyotomiChildWar .

  # Yamaza Enjirō's birthplace entity
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:wikiPageRedirects ?yamazaBirthPlaceEntity .

  # Person born as Koichirō and their associated war
  ?koichiro dbo:birthName dbr:Koichirō .
  ?koichiro dbo:associatedWith ?koichiroWar .
}
```",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find Tupac Shakur's associated artists by birth name
  VALUES ?tupacBirthName { dbr:Lesane_Parish_Crooks }
  ?tupacBirthName dbo:associatedMusicalArtist ?artist1 .

  # Find the writer of ""The Live Anthology"" who is a musical artist
  ?anthologyWriter dbo:work dbr:The_Live_Anthology .
  FILTER EXISTS { ?anthologyWriter rdf:type dbo:Musician . }
  ?anthologyWriter dbo:associatedMusicalArtist ?artist2 .

  # Find Joey Belladonna's associated artists by birth name
  VALUES ?joeyBirthName { dbr:Joseph_Michael_Bellardini }
  ?joeyBirthName dbo:associatedMusicalArtist ?artist3 .

  # Ensure the artist is common to all three conditions
  FILTER (?artist1 = ?artist2 && ?artist2 = ?artist3)
  BIND(?artist1 AS ?associatedArtist)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Constance of Burgundy and her spouse, Roger II of Sicily
  dbr:Constance_of_Burgundy dbo:spouse dbr:Roger_II_of_Sicily .
  
  # Their child who is royalty
  dbr:Roger_II_of_Sicily dbo:child ?child1 .
  ?child1 a dbo:Monarch .

  # Matilda of Savona, daughter of Roger II's child
  ?child1 dbo:child dbr:Matilda_of_Savona .
  
  # Matilda's connection to William I through marriage
  dbr:William_I dbo:spouse dbr:Matilda_of_Savona .

  # Father of Matilda of Savona
  dbr:Matilda_of_Savona dbo:father ?father .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerNative ?writerNative WHERE {
  # Find the producer of ""Storm in a Teacup"" (film)
  ?stormFilm dbo:productionCompany ?company .
  ?company dbo:producer ?producer .
  
  # Get birthplace and native of the producer
  ?producer dbo:birthPlace ?producerBirthPlace .
  ?producerBirthPlace dbo:nativeOf ?producerNative .

  # Find Steven Kapur's musical work and its writer
  dbr:Steven_Kapur dbo:work ?musicalWork .
  ?musicalWork dbo:writer ?writer .

  # Get birthplace and native of the writer
  ?writer dbo:birthPlace ?writerBirthPlace .
  ?writerBirthPlace dbo:nativeOf ?writerNative .

  # Filter for ""Storm in a Teacup"" (film)
  FILTER(STRSTARTS(STR(?stormFilm), STR(dbr:Storm_in_a_Tea_Cup_(film))))
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?countryOfWork WHERE {
  # Find Chiang Ching-kuo's child who is a politician
  ?child dbo:parent dbr:Chiang_Chiing-kuo .
  ?child dbo:occupation dbr:Politician .

  # Get the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .

  # Find Hu Jieqing's spouse who is a writer
  ?spouse dbo:spouse dbr:Hu_Jieqing .
  ?spouse dbo:occupation dbr:Writer .

  # Determine the country associated with the work of this writer
  OPTIONAL {
    ?work dbo:author ?spouse ;
          dbo:location ?countryOfWork .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?actor .
  
  ?actor a dbo:SoccerPlayer ;
         a dbo:Actor ;
         a dbo:Athlete .

  OPTIONAL { 
    ?teamMember dbo:birthday ?sarmientoBirthday .
    FILTER (?teamMember = dbr:Marcelo_Sarmiento) .
    ?teamMember a dbo:SoccerPlayer ;
               a dbo:SoccerManager .
  }
  
  OPTIONAL {
    ?anotherTeamMember dbo:birthday ""1955-02-22""^^xsd:date .
    ?team ?member ?actor .
    ?team ?member ?teamMember .
    ?team ?member ?anotherTeamMember .
  }

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?actorPolitician ?commonProfession WHERE {
  # The Shadow (video game) alter ego that is a comics character
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow .
  dbr:The_Shadow dbo:characterName ?alterEgo .

  # Actor from Ab Kya Hoga who is also a politician
  dbr:Ab_Kya_Hoga dbo:actor ?actorPolitician .
  ?actorPolitician dbo:occupation dbr:Politician .

  # Richard Grant Esterhuysen's professions and associated TV show
  dbr:Richard_Grant_Esterhuysen dbo:birthName ""Richard Grant Esterhuysen"" .
  OPTIONAL { 
    dbr:Richard_Grant_Esterhuysen dbo:profession ?commonProfession .
  }
  
  # Linking the actor's profession to Richard Grant Esterhuysen's professions
  FILTER (?actorPolitician = ?commonProfession)
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherOfDorothea ?fatherOfPhilipI WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?dorotheasParent .
  
  # Parent of Dorothea
  ?dorotheasParent dbo:parent ?grandfatherOfDorothea .
  
  # Commander in Siege of Padua (historical context)
  FILTER EXISTS {
    ?commander dbo:wikiPageWikiLink dbr:Siege_of_Padua_(1509) .
    ?commander rdfs:label ?labelCommander .
    FILTER(CONTAINS(LCASE(?labelCommander), ""john""))
  }
  
  # Ensure the grandfather is royalty
  ?grandfatherOfDorothea a dbo:Monarch .

  # Philip I of Castile
  dbr:Philip_I_of_Castile dbo:parent ?fatherOfPhilipI .
  
  # Ensure the father is royalty
  ?fatherOfPhilipI a dbo:Monarch .

  # Linking the grandfather to the commander
  FILTER(?grandfatherOfDorothea = ?commander)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfAwardee ?award ?forceOfAward ?birthPlace WHERE {
  # Find the award given by U.S. Congress related to a war
  ?award dbo:awardingBody dbr:United_States_Congress ;
         dbo:relatedEvent ?war .
  
  # Find Quincy Adams Gillmore's associated award
  ?gillmoreAward dbo:recipient dbr:Quincy_Adams_Gillmore ;
                 dbo:relatedEvent ?forceOfAward .

  # Ensure the awards are related
  FILTER (?award = ?gillmoreAward)

  # Get Quincy Adams Gillmore's birthplace and ensure it is an American settlement
  dbr:Quincy_Adams_Gillmore dbo:birthPlace ?birthPlace ;
                           dbo:deathDate ""1850-08-05""^^xsd:date .

  # Ensure the birthplace is a settlement in the United States
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Victor Stanley's parent who is a politician
  ?victorStanleyParent dbo:child dbr:Victor_Stanley_(Royal_Navy_officer) .
  ?victorStanleyParent dbo:occupation dbr:Politician .

  # Edward Stanley's parent who is both a politician and an office holder
  ?edwardStanleyParent dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .
  ?edwardStanleyParent dbo:occupation dbr:Politician .
  ?edwardStanleyParent dbo:officeHolder true .

  # Eton College alumnus whose child's parent is a politician and an office holder
  ?etonAlumnus dbo:almaMater dbr:Eton_College .
  ?childOfEtonAlumnus dbo:parent ?etonAlumnus .
  ?politicianOfficeHolderParent dbo:child ?childOfEtonAlumnus .
  ?politicianOfficeHolderParent dbo:occupation dbr:Politician .
  ?politicianOfficeHolderParent dbo:officeHolder true .

  # Find the common ancestor
  VALUES ?commonAncestor {
    ?victorStanleyParent
    ?edwardStanleyParent
    ?politicianOfficeHolderParent
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alexander II, Grand Duke of Finland
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nativePlace ?alexanderNative .
  
  # Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nicholasNative .

  # Find a common administrative region (native place)
  FILTER (?alexanderNative = ?nicholasNative)

  # Person deceased in Switzerland and native to the above region
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nativePlace ?commonNative .
  
  # Ensure the person's native place matches the common administrative region
  FILTER (?commonNative = ?alexanderNative)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerOfAlwaysTheLoveSongs ?successorCommander WHERE {
  # Find the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:creator ?writerOfAlwaysTheLoveSongs .

  # Identify Michał Kazimierz Pac as a commander in the Battle of Vienna
  dbr:Battle_of_Vienna dbo:commander ?michaKazimierzPac .
  
  # Find the successor who is also a politician and office holder
  OPTIONAL {
    ?successorCommander dbo:succeededBy ?michaKazimierzPac ;
                       rdf:type dbo:Politician ;
                       dbo:officeHolder ?office .
  }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName ?countryOfResidence WHERE {
  # Find the leader associated with PSOE during the 2009 Galician regional election
  ?election dbo:electionResult ?result .
  ?result dbo:winnerParty dbr:Spanish_Socialist_Workers'_Party .
  ?result dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?result)), ""galicia""))
  
  # Identify the leader of PSOE
  ?party dbo:leader ?leader .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  # Ensure the leader is a Spanish citizen
  ?leader dbo:nationality dbr:Spain .

  # Find the country of residence
  OPTIONAL {
    ?leader dbo:residence ?countryOfResidence .
  }

  BIND(STR(?leader) AS ?leaderName)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Alfonso VI's grandchild
  ?alfonsoVIChild dbo:child ?alfonsoVIGrandchild .
  VALUES ?alfonsoVI { dbr:Alfonso_VI_of_León_and_Castile }
  ?alfonsoVI dbo:child ?alfonsoVIChild .

  # Roger II of Sicily's parent (himself) and connection to William I
  ?rogerIIChild dbo:parent ?rogerII .
  VALUES ?rogerII { dbr:Roger_II_of_Sicily }
  ?officeHolder dbo:royalty true ;
                dbo:officeHolder true ;
                dbo:relatedTo dbr:William_I .

  # Common individual who is royalty and fits all criteria
  ?alfonsoVIGrandchild = ?commonIndividual .
  ?rogerII = ?commonIndividual .
  ?officeHolder = ?commonIndividual .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFaisalChild ?parentOfMunaGrandchild WHERE {
  # Find Prince Faisal bin Hussein's child who is royalty
  ?faisalChild dbo:child dbr:Prince_Faisal_bin_Hussein .
  ?faisalChild a dbo:RoyalFamilyMember .

  # Determine the parent of this royal child
  OPTIONAL { 
    ?parentOfFaisalChild dbo:spouse ?faisalChild .
    FILTER EXISTS { ?parentOfFaisalChild a dbo:RoyalFamilyMember }
  }

  # Find Princess Muna al-Hussein's grandchild who is royalty
  ?munaGrandchild dbo:child ?munaChild .
  ?munaChild dbo:child dbr:Princess_Muna_al-Hussein .
  ?munaGrandchild a dbo:RoyalFamilyMember .

  # Determine the parent of this royal grandchild
  OPTIONAL {
    ?parentOfMunaGrandchild dbo:spouse ?munaGrandchild .
    FILTER EXISTS { ?parentOfMunaGrandchild a dbo:RoyalFamilyMember }
  }

  # Return results for both queries
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?councilLeaderResidenceTenant ?conservativePartyLeaderOffice WHERE {
  # Find the office of commander for Manuel Pinto da Costa
  dbr:Manuel_Pinto_da_Costa dbo:militaryCommander ?commanderOffice .

  # Find the leader of the 2003 Madrid City Council election and their residence tenant
  OPTIONAL {
    ?councilLeader dbo:electedAs dbr:Madrid_City_Council_election,_2003 .
    ?councilLeader dbo:residence ?leaderResidence .
    ?leaderResidence dbo:tenant ?councilLeaderResidenceTenant .
  }

  # Find the office of the leader of the Conservative Republican Party (Spain)
  OPTIONAL {
    dbr:Conservative_Republican_Party_(Spain) dbo:leader ?conservativePartyLeader .
    ?conservativePartyLeader dbo:officeHolder ?conservativePartyLeaderOffice .
  }
  
  # Ensure all roles are connected through their political and office holder status
  FILTER (?commanderOffice = ?councilLeaderResidenceTenant && 
          ?councilLeaderResidenceTenant = ?conservativePartyLeaderOffice)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Bob Thompson's birth name and associated musical artist
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:birthName ?bobBirthName .
    ?bobBirthName dbo:associatedMusicalArtist ?artist .
  }

  # The Shadow as a fictional character created by Walter B. Gibson
  OPTIONAL {
    dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
    ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  }

  # Producer of Coke Studio Philippines and their profession
  OPTIONAL {
    dbr:Coke_Studio_Philippines dbo:producer ?producer .
    ?producer dbo:profession ?profession .
  }

  # Linking the band through professions
  FILTER (?artist = ?band)
  FILTER (?shadowAlterEgo = ?band)
  FILTER (?profession = ?band)
}
```",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?actor .
  
  ?actor a dbo:SoccerPlayer ;
         a dbo:Actor ;
         a dbo:Athlete .

  OPTIONAL { 
    ?person1 dbo:birthday ?birthdayPollio .
    ?team dbo:member ?person1 .
    ?team dbo:member ?actor .
    FILTER (?birthdayPollio = dbr:Marty_Polio_birthday) # Replace with actual URI
  }

  OPTIONAL {
    ?person2 dbo:birthday ?birthdaySarmiento .
    ?team2 dbo:member ?person2 .
    ?team2 dbo:member ?actor .
    FILTER (?birthdaySarmiento = dbr:Marcelo_Sarmiento_birthday) # Replace with actual URI
  }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfCommander WHERE {
  ?manuelPinto daCosta dbo:officeHolder ?officeOfCommander .
  ?officeOfCommander a dbo:MilitaryConflict .

  OPTIONAL {
    ?albertoRuizGallardon dbo:residence ?residence .
    ?officeOfCommander dbo:location ?residence .
  }

  OPTIONAL {
    ?miguelMaura dbo:leader ?partyLeaderOffice .
    ?partyLeaderOffice a dbo:PoliticalParty .
    ?officeOfCommander dbo:relatedTo ?partyLeaderOffice .
  }
  
  FILTER (?manuelPinto daCosta = dbr:Manuel_Pinto_da_Costa)
  FILTER (?albertoRuizGallardon = dbr:Alberto_Ruiz-Gallardón)
  FILTER (?miguelMaura = dbr:Miguel_Maura)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberOfProducer ?bandMemberOfAssociatedArtist WHERE {
  # Find the producer of ""Nothing to Gein"" who is an organization and a group
  ?producer dbo:produced dbr:Nothing_to_Gein .
  FILTER (dbo:Organization IN { ?producer } && dbo:MusicalGroup IN { ?producer }) .

  # Get band members of this producer
  ?producer dbo:bandMember ?bandMemberOfProducer .

  # Find Nate Newton's associated musical artist that is a band and an organization
  dbr:Nate_Newton dbo:associatedBand ?nateNewtonAssociatedArtist .
  FILTER (dbo:Organization IN { ?nateNewtonAssociatedArtist } && dbo:MusicalGroup IN { ?nateNewtonAssociatedArtist }) .

  # Get the associated musical artist of this band
  ?nateNewtonAssociatedArtist dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is a band and an organization
  FILTER (dbo:Organization IN { ?associatedArtist } && dbo:MusicalGroup IN { ?associatedArtist }) .

  # Get band members of this associated musical artist
  ?associatedArtist dbo:bandMember ?bandMemberOfAssociatedArtist .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military conflict involving ""The Triple X's""
  OPTIONAL { 
    ?tripleXs dbo:militaryConflict ?conflict1 .
  }
  
  # Find Robert Calder's associated military force and its event
  OPTIONAL {
    dbr:Robert_Calder dbo:militaryForce ?force1 ;
                      dbo:associatedEvent ?event1 .
  }

  # Find William Bayne's referenced war and its commander
  OPTIONAL {
    dbr:William_Bayne dbo:militaryConflict ?conflict2 .
    ?conflict2 dbo:commander ?commander .
  }
  
  # Link the conflicts to find a common commander if possible
  FILTER (?conflict1 = ?conflict2)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?quintana a dbo:OfficeHolder ;
            dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party ;
            dbo:nationality dbr:Spain .
  
  FILTER (?quintana = dbr:Anxo_Quintana)
  
  OPTIONAL { 
    ?quintana dbo:country ?country .
  }
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?alfonsoIV { dbr:Alfonso_IV_of_Aragon }
  VALUES ?peterIII { dbr:Peter_III_of_Aragon }

  ?child dbo:parent ?alfonsoIV .
  ?child dbo:parent ?peterIII .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # The Shadow's alter ego in comics
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Actor of the movie and TV show adaptation of The Shadow
  dbr:The_Shadow_Movie_1994 dbo:starring dbr:Robert_Townsend .
  dbr:The_Shadow_TV_Series dbo:starring dbr:Robert_Townsend .

  # Person born as Richard Grant Esterhuysen (Errol Flynn)
  dbr:Errol_Flynn dbo:birthName ""Richard Grant Esterhuysen""^^xsd:string .

  # Profession of Shatrughan Sinha
  dbr:Shatrughan_Sinha a dbo:Actor .
  
  # Ensure the person is an actor like Shatrughan Sinha
  ?actor a dbo:Actor ;
         rdfs:label ""Errol Flynn""@en .
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfCurran ?associatedArtist ?kimsBandName WHERE {
  # Find Nicholas Michael Curran and his band membership
  ?curran a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  
  OPTIONAL { 
    ?curran dbo:bandMemberOf ?bandOfCurran .
  }
  
  OPTIONAL {
    ?curran dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Find Kim Wilson and his band
  ?kim a dbo:MusicalArtist ;
       rdfs:label ""Kim Wilson""@en .

  OPTIONAL {
    ?kim dbo:bandMemberOf ?kimsBand .
    ?kimsBand rdfs:label ?kimsBandName .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentLocation WHERE {
  ?artist a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:deathDate ""2020-06-18""^^xsd:date .
  
  ?location dbo:country dbr:England ;
            a dbo:Settlement ;
            dbo:nativeOf ?artist .

  ?movie dbo:author ?artist ;
         a dbo:Film ;
         a dbo:TelevisionShow .

  OPTIONAL {
    ?location dbo:parentCountry ?parentLocation .
  }
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Linda Sue Cobb's DBpedia resource
  VALUES ?lindaSueCobb { 
    dbr:Linda_Sue_Cobb 
  }
  
  # Query for her spouse
  ?lindaSueCobb dbo:spouse ?spouse .
}
```

Note: The query above assumes that Linda Sue Cobb's DBpedia entry is `dbr:Linda_Sue_Cobb`. If this is incorrect, the query will need to be adjusted based on the correct resource identifier. Additionally, further queries would be needed to verify her role as a producer and the connection to Ian Gregson's award.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager WHERE {
  ?person rdf:type dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date .
  
  ?player dbo:playsFor dbr:VfL_Bochum ;
          dbo:teamSeason dbr:2007–08_VfL_Bochum_season .

  ?person dbo:managerOfTeam ?team ;
          dbo:manages ?player .

  ?leader dbo:country dbr:West_Germany .
  
  ?admin dbo:administrationLeader ?leader .
  ?admin rdf:type dbo:Civilization ;
         rdfs:label ""Germany""@en .

  FILTER (?person = ?manager)
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Find a member of Khlyst who is also a musical artist
  ?khlystMember dbo:member dbr:Khlyst .
  FILTER (dbo:musicalArtist ?khlystMember) .

  # Step 2: Find the associated musical artist of this member
  ?khlystMember dbo:associatedMusicalArtist ?firstAssociatedArtist .

  # Step 3: Find a band that this first associated artist is a member of
  ?firstAssociatedArtist dbo:bandMember ?intermediateBand .

  # Step 4: Find a reference to ""Burnt by the Sun"" that is a group, band, and organization
  ?burntBySunReference dbo:reference dbr:Burnt_by_the_Sun .
  FILTER (dbo:group ?burntBySunReference) .
  FILTER (dbo:musicalBand ?burntBySunReference) .
  FILTER (dbo:organization ?burntBySunReference) .

  # Step 5: Find the associated musical artist of this reference
  ?burntBySunReference dbo:associatedMusicalArtist ?finalAssociatedArtist .

  # Ensure that the final associated artist is also a band member of the intermediate band
  ?finalAssociatedArtist dbo:bandMember ?intermediateBand .
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?bobbyBirthName .
  
  # Step 2: Identify an award associated with a region and state in New York
  ?award dbo:awardee ?band ;
         dbo:location ?region .
  FILTER (CONTAINS(LCASE(?region), ""new york"") && 
          CONTAINS(LCASE(STR(?region)), ""state"") &&
          CONTAINS(LCASE(STR(?region)), ""settlement""))

  # Step 3: Find the band from New York
  ?band dbo:bandMember ?member .
  
  # Step 4: Identify the band member who is also an artist associated with GS9
  ?member dbo:associatedMusicalArtist dbr:GS9 ;
          dbo:birthName ?bobbyBirthName .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?soccerPlayerManager ?film WHERE {
  # Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?team .

  # Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .

  # Person born on the same day as Marcelo Sarmiento who is a soccer player and manager
  ?soccerPlayerManager dbo:birthday ?sameBirthday .
  FILTER (?sameBirthday = ?marceloSarmientoBirthday)
  ?soccerPlayerManager rdf:type dbo:SoccerPlayer .
  ?soccerPlayerManager rdf:type dbo:SportsManager .

  # Films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Actor in the film who is also a soccer player and athlete
  ?actor dbo:actorInFilm ?film ;
         rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:Athlete .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Find Bobby Shmurda's associated musical artist and their band member
  OPTIONAL {
    dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .
    ?artist dbo:member ?bandMember .
    FILTER (?bandMember != dbr:Bobby_Shmurda)
  }

  # Step 2: Find a musician from Florida by birth name
  OPTIONAL {
    ?floridaMusician dbo:nativePlace dbr:Florida .
    ?floridaMusician dbo:birthName ?birthName .
    FILTER EXISTS { ?floridaMusician rdf:type dbo:MusicalArtist }
  }

  # Step 3: Find an award related to New York and its awardee band
  OPTIONAL {
    ?award dbo:region dbr:New_York_(state) ;
           dbo:country dbr:United_States ;
           dbo:settlement ?settlement .
    ?band dbo:award ?award .
    FILTER EXISTS { ?band rdf:type dbo:Band }
  }

  # Step 4: Combine conditions
  VALUES ?commonEntity {
    ?bandMember
    ?birthName
  }
  
  FILTER (?commonEntity = ?bandMember && ?commonEntity = ?birthName)
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceURL WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:award dbr:Gillmore_Medal .
  ?gillmoreMedal dbo:associatedWith ?war .
  ?person dbo:birthPlace ?birthPlace .

  FILTER (STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?birthPlace a dbo:Settlement } &&
          EXISTS { ?birthPlace dbo:country dbr:United_States })

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?awardee WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:commander ?commander .
  
  OPTIONAL {
    ?sinkingEvent dbo:partOf ?war ;
                  rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  }
  
  OPTIONAL {
    ?awardee dbo:awardReceived dbr:Commander_of_the_Order_of_the_British_Empire ;
             dbo:militaryForce ?force .
    
    FILTER EXISTS { ?commander dbo:militaryForce ?force }
  }
}
```",5,7,6,3,2,3,2,20,1,50973,0,1.961784439125829e-05,1.0,3.92349190779794e-05
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .
  
  # Identify the child of Mariclare and her spouse
  OPTIONAL { ?child dbo:parent ?spouse . }
  OPTIONAL { ?child dbo:parent ?mariclareCostello . }

  # Find Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .

  # Identify professionals in the same field as Eugène Cattin and their parents
  ?professional dbo:profession ?eugeneProfession .
  OPTIONAL { ?parent dbo:child ?professional . }

  # Find individuals who died in Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles .

  # Ensure the decedent is related to both Mariclare's family and Eugène Cattin's profession
  FILTER (?decedent = ?spouse || ?decedent = ?mariclareCostello || ?decedent = ?parent)

  # Find the work (movie) associated with this person
  ?work dbo:actor ?actor .
  OPTIONAL { ?work dbo:subject ?decedent . }

}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the successor of Yurii Khmelnytsky
  ?successor dbo:successorOf dbr:Yuri_Khmelnytsky .
  
  # Identify the commander in the Battle of Vienna
  ?commander dbo:commanderInBattle dbr:Battle_of_Vienna .

  # Check if this person is associated with a television show and societal event
  OPTIONAL { ?person dbo:associatedWithTelevisionShow ?tvShow . }
  OPTIONAL { ?person dbo:associatedWithSocietalEvent ?event . }

  # Ensure the person fits all roles
  FILTER (?successor = ?commander && ?person = ?successor)

  # Link to George Ducas's work
  ?work dbo:writer dbr:George_Ducas .
  OPTIONAL { ?work dbo:associatedPerson ?person . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChildURL WHERE {
  # Step 1: Identify a child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?childFerdinandAlbert2 dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  
  # Step 2: Find the spouse of that child
  ?spouseChildFerdinandAlbert2 dbo:spouse ?childFerdinandAlbert2 .

  # Step 3: Identify a child of Princess Antoinette who is royalty
  ?royalChildAntoinette dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .
  FILTER (EXISTS { ?royalChildAntoinette rdf:type dbo:Monarch } || EXISTS { ?royalChildAntoinette rdf:type dbo:RoyalFamilyMember })

  # Step 4: Find the spouse of that royal child
  ?spouseRoyalChildAntoinette dbo:spouse ?royalChildAntoinette .

  # Step 5: Determine the parent of Ferdinand Albert II's child
  ?parentFerdinandAlbert2 dbo:child ?childFerdinandAlbert2 .

  # Step 6: Identify a child of that parent who is royalty
  ?royalChildParentFerdinandAlbert2 dbo:parent ?parentFerdinandAlbert2 .
  FILTER (EXISTS { ?royalChildParentFerdinandAlbert2 rdf:type dbo:Monarch } || EXISTS { ?royalChildParentFerdinandAlbert2 rdf:type dbo:RoyalFamilyMember })

  # Ensure the spouse of Ferdinand Albert II's child is the same as the spouse of Princess Antoinette's royal child
  FILTER (?spouseChildFerdinandAlbert2 = ?spouseRoyalChildAntoinette)
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?country WHERE {
  # Find commanders in the French Revolutionary Wars
  ?commander dbo:nationality dbr:Poland .
  ?commander dbo:participatedIn ?war .
  FILTER regex(str(?war), ""French Revolutionary War"", ""i"") .

  # Find athletes from Łódź who are Polish
  ?athlete dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź .

  # Determine the country of residence or association for these athletes
  OPTIONAL { ?athlete dbo:residence ?country . }
  FILTER (isLiteral(?country) = false)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # GS9 member who is an artist and a musical artist
  ?gs9Member dbo:member dbr:GS9 .
  FILTER EXISTS { ?gs9Member a dbo:Artist . }
  FILTER EXISTS { ?gs9Member a dbo:MusicalArtist . }

  # Associated musical artist of the GS9 member
  OPTIONAL {
    ?gs9Member dbo:associatedMusicalArtist ?associatedArtist .
    FILTER (?associatedArtist a dbo:MusicalArtist)
  }

  # Award that is a region, American, state, and settlement
  ?award dbo:region dbr:United_States ;
         a dbo:Award , dbo:State , dbo:Settlement .

  # Awardee of the award who is a band from New York (state)
  ?awardee dbo:recipient ?award ;
           dbo:originPlace dbr:New_York_(state) .
  FILTER EXISTS { ?awardee a dbo:Band . }

  # Person born with birth name, native of Florida
  ?person dbo:nativeCountry dbr:United_States ;
          dbo:nativePlace dbr:Florida ;
          dbo:birthName ?birthName .

  # Native of the award is a musical artist
  FILTER EXISTS { ?native a dbo:MusicalArtist . }

  # Linking all components together
  OPTIONAL {
    ?associatedArtist dbo:award ?award .
    ?awardee dbo:member ?person .
    ?person dbo:nativePlace ?nativePlace .
    ?nativePlace dbr:Florida .
  }
}
```",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Identify Pickett's Charge and its commander
  dbr:Picketts_Charge dbo:commander ?commander .
  
  # Find the military force involved in Pickett's Charge
  ?militaryForce dbo:participatedInSocietalEvent dbr:Picketts_Charge .

  # Ensure the commander is associated with this military force
  ?commander dbo:commandedMilitaryForce ?militaryForce .
  
  # Find the ruling party of the commander
  ?party dbo:member ?commander ;
         rdf:type dbo:PoliticalParty, dbo:Organization .

  # Identify a member of that political party
  ?partyMember dbo:member ?party .
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Algerian War Commander
  ?algerianWar dbo:commander ?commander .
  VALUES ?algerianWar { dbr:Algerian_War }

  # Maria Anna of Bavaria's lineage
  ?mariaAnna dbo:child ?royalChild .
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  
  ?royalChild dbo:parent ?fatherOfRoyalChild .
  ?fatherOfRoyalChild a dbo:Royalty .

  # Archduke Charles Joseph's lineage
  ?charlesJosephParent dbo:child ?archdukeCharlesJoseph .
  VALUES ?archdukeCharlesJoseph { dbr:Archduke_Charles_Joseph_of_Austria }

  ?archdukeCharlesJosephParent dbo:parent ?fatherOfOtherChild .
  ?otherChild dbo:parent ?archdukeCharlesJosephParent .

  # Combine to find the commander
  FILTER (?commander = ?fatherOfRoyalChild && ?commander = ?fatherOfOtherChild)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify William Bayne and his associated military conflicts
  VALUES ?williamBayne { dbr:William_Bayne_(Royal_Navy_officer) }
  
  OPTIONAL {
    ?williamBayne dbo:militaryConflict ?war .
    
    # Find the military force involved in these wars
    ?militaryForce dbo:militaryConflict ?war .
    
    # Identify awardees of Knight Commander of the Order of the Bath
    ?awardee dbo:awardReceived dbr:Knight_Commander_of_the_Order_of_the_Bath .
    
    # Link the military force to ""The Triple X's""
    VALUES ?tripleXs { dbr:The_Triple_X_s }
    OPTIONAL {
      ?militaryForce rdfs:label ?tripleXsLabel .
      FILTER (CONTAINS(LCASE(?tripleXsLabel), LCASE(""the triple x's"")))
    }
    
    # Find the commander of this military force
    ?commander dbo:commanderOf ?militaryForce .
  }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalDescendant WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parentOfMargarete .
  
  # Predecessor of Carl, Duke of Württemberg
  dbr:Claude_Frederick_Carl,_Duke_of_W%C3%BCrttemberg dbo:predecessor ?predecessorOfCarl .

  # Child of the child of the child of Alexander of Württemberg (1804-1881)
  dbr:Aleksander_Ivanovich_of_W%C3%BCrttemberg dbo:child ?firstChild .
  ?firstChild dbo:child ?secondChild .
  ?secondChild dbo:child ?thirdChild .

  # Find the intersection of these relationships
  FILTER (?parentOfMargarete = ?predecessorOfCarl)
  FILTER (?thirdChild = ?royalDescendant)

  # Ensure the descendant is royalty
  ?royalDescendant a dbo:Monarch .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?commonActor WHERE {
  # Step 1: Find awards associated with Janusz Kamiński
  ?award dbo:recipient dbr:Janusz_Kamiński .
  
  # Step 2: Find spouse of the awardee (if any)
  OPTIONAL { 
    ?award dbo:recipient ?awardee .
    ?awardee dbo:spouse ?spouse .
  }
  
  # Step 3: Find movies featuring Audrey Hepburn
  ?movieAudrey dbo:starring dbr:Audrey_Hepburn ;
               a dbo:Film .

  # Step 4: Find movies featuring Iliza Shlesinger
  ?movieIliza dbo:starring dbr:Iliza_Shlesinger ;
              a dbo:Film .
  
  # Step 5: Find common actor in both sets of movies
  ?commonActor dbo:starring ?movieAudrey ;
               dbo:starring ?movieIliza .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalty WHERE {
  # Predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Child of the predecessor
  ?child dbo:childOf ?predecessor .

  # Parent of the father (that is royalty)
  ?father dbo:parent ?royalty .
  ?child dbo:parent ?father .
  FILTER (?royalty rdf:type dbo:Monarch) .

  # Spouse of Maria of Bytom
  dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .

  # Father of Philip I, Prince of Taranto
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .

  # Spouse of the father of Philip I
  ?philipFather dbo:spouse ?tarantoSpouse .

  # Find common royalty
  FILTER (?royalty = ?mariaSpouse && ?royalty = ?tarantoSpouse)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist WHERE {
  # Step 1: Find R.E.M.'s associated musical artists
  VALUES ?rem { dbr:R.E.M. }
  
  OPTIONAL {
    ?rem dbo:associatedMusicalArtist ?firstAssociatedArtist .
    
    # Step 2: For each first associated artist, find their associated musical artists
    OPTIONAL {
      ?firstAssociatedArtist dbo:associatedMusicalArtist ?secondAssociatedArtist .
      
      # Step 3: Identify the writer(s) of the album ""Sappy""
      VALUES ?sappyAlbum { dbr:Sappy_(album) }
      ?sappyAlbum dbo:writer ?writer .
      
      # Step 4: Find band members of these writers
      OPTIONAL {
        ?writer dbo:bandMember ?finalArtist .
        
        # Ensure the final artist is one of the second associated artists
        FILTER (?secondAssociatedArtist = ?finalArtist)
      }
    }
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Golden Master Series alter ego
  VALUES ?goldenMasterAlterEgo { 
    dbr:The_Golden_Master_series#Alter_Ego_Character
  }
  
  # T.I.'s song ""What You Know"" album and its actors
  ?album dbo:artist ?actor .
  FILTER (str(?album) = str(dbr:Urban_Cowboys_(T.I._album)))
  
  # Smartbomb book author and their movies
  dbr:Smartbomb dbo:author ?smartbombAuthor .
  ?movie dbo:starring ?smartbombActor .
  FILTER (?smartbombAuthor = ?actor)
  
  # Find the common professional
  VALUES ?professional { 
    ?goldenMasterAlterEgo
    ?actor
    ?smartbombActor
  }
}
```",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?jeanBaptistCommander ?successorPolitician ?georgeDucasWork WHERE {
  # Find the commander role of Jean Baptist, Comte d'Arco in a military conflict
  OPTIONAL { 
    dbr:Jean_Baptiste_Comte_d%27Arco dbo:commander ?jeanBaptistCommander .
  }
  
  # Identify Michał Kazimierz Pac's involvement in the same or related force (military conflict)
  OPTIONAL {
    dbr:Miko%C5%82aj_Kazimierz_Pa%C5%84ski dbo:commander ?force .
    FILTER (?jeanBaptistCommander = ?force) # Ensure it is the same military conflict
  }
  
  # Find successor who is a politician and office holder
  OPTIONAL {
    ?jeanBaptistCommander dbo:successor ?successorPolitician .
    ?successorPolitician rdf:type dbo:OfficeHolder .
  }

  # Reference to the work of George Ducas
  OPTIONAL {
    dbr:George_Ducas dbo:work ?georgeDucasWork .
  }
}
```",8,14,9,3,3,3,3,71,0,125210,1,0.0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfAdministration ?countryOfResidence ?eventOfLeader WHERE {
  # Find the tenant of the administration for PSOE
  dbr:Spanish_Socialist_Workers'_Party dbo:head ?tenantOfAdministration .
  
  # Find the country where Álvaro Quiros resides
  dbr:Álvaro_Quiros dbo:country ?countryOfResidence .

  # Find the event related to Anxo Quintana's leadership role
  dbr:Anxo_Quintana dbo:office ?eventOfLeader .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kimWilsonBandURL ?ericClaptonBandMemberURL ?nickCurranAssociatedArtistURL WHERE {
  # Find the band associated with Kim Wilson
  dbr:Kim_Wilson dbo:associatedBand ?kimWilsonBand .
  BIND(IRI(?kimWilsonBand) AS ?kimWilsonBandURL)

  # Find a band member of Eric Clapton's band
  dbr:Eric_Clapton dbo:bandMember ?ericClaptonBandMember .
  BIND(IRI(?ericClaptonBandMember) AS ?ericClaptonBandMemberURL)

  # Find the associated musical artist for Nick Curran
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  BIND(IRI(?nickCurranAssociatedArtist) AS ?nickCurranAssociatedArtistURL)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?lassoMoonAlbum { dbr:Lasso_the_Moon }
  
  # Find works/films related to the album ""Lasso the Moon""
  ?work dbo:album ?lassoMoonAlbum .
  ?film dbo:work ?work .

  # Identify the alter ego of ""The Shadow""
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .

  # Find works associated with the alter ego
  ?alterWork dbo:work ?shadowAlterEgo .

  # Find actors who acted in both the film and the work related to the alter ego
  ?film dbo:actor ?actor .
  ?alterWork dbo:actor ?actor .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?bobThompsonBand ?shadowAlterEgo WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Ensure the producer is a musical artist
  ?producer rdf:type dbo:MusicalArtist .

  # Find Bob Thompson's band
  ?bobThompson dbr:Bob_Thompson_(musician) dbo:birthName ""Bob Thompson"" .
  ?bobThompson dbo:musicalArtist ?bobThompsonBand .
  
  # Ensure the band is a musical artist
  ?bobThompsonBand rdf:type dbo:MusicalArtist .

  # Find the professional with an alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  ?shadowAlterEgo rdf:type dbo:MusicalArtist .
  
  # Match the producer and band to the shadow alter ego's profession
  FILTER (?producer = ?bobThompsonBand)
}
```",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?royBarrerasParty ?sofiaPetroFatherParty WHERE {
  # Daniel Elahi Galán's country
  dbr:Daniel_El%C3%A1i_Gal%C3%A1n dbo:country ?country .
  
  # Roy Barreras' party affiliation
  dbr:Roy_Barreras dbo:partyAffiliation ?royBarrerasParty .

  # Sofía Petro's father and his party affiliation
  OPTIONAL {
    dbr:Sof%C3%ADa_Petro dbo:father ?sofiaPetroFather .
    ?sofiaPetroFather dbo:partyAffiliation ?sofiaPetroFatherParty .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfParent WHERE {
  # Step 1: Identify Philip's father who is royalty
  OPTIONAL { 
    dbr:Philip_Despot_of_Romania dbo:father ?philipFather .
    FILTER EXISTS { ?philipFather a dbo:Monarch . }
  }

  # Step 2: Find the spouse of Philip's royal father
  OPTIONAL {
    ?philipFather dbo:spouse ?spouseOfParent .
  }

  # Step 3: Identify Béla IV's child who is royalty
  OPTIONAL { 
    dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
    FILTER EXISTS { ?belasChild a dbo:Monarch . }
  }

  # Step 4: Find the parent (father) of Béla IV's royal child
  OPTIONAL {
    ?belasChild dbo:parent ?belasChildParent .
    FILTER EXISTS { ?belasChildParent a dbo:Monarch . }
  }

  # Step 5: Identify the spouse of Maria of Bytom and their father who is royalty
  OPTIONAL {
    dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .
  }
  OPTIONAL {
    ?mariaSpouse dbo:parent ?mariaSpouseFather .
    FILTER EXISTS { ?mariaSpouseFather a dbo:Monarch . }
  }

  # Step 6: Connect the relationships
  FILTER (?belasChildParent = ?philipFather)
}
```",8,11,9,3,3,3,3,71,0,28,1,0.0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Hillary Clinton's work
  VALUES ?hillaryWork { 
    dbr:Living_History_(book) 
  }
  
  # Author of the work is Hillary Clinton
  ?hillaryWork dbo:author dbr:Hillary_Clinton .
  
  # Spouse of Hillary Clinton who is a politician and office holder
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  # Ensure the spouse is a politician and office holder
  ?spouse a dbo:Politician ;
          dbo:officeHolderOf ?office .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Step 1: Paulus Powell's birth place
  VALUES ?paulusPowell { dbr:Paulus_Powell }
  
  ?paulusPowell dbo:birthPlace ?birthPlace .
  
  # Step 2: Check if the birth place is a region and administrative region
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:AdministrativeRegion .

  # Step 3: Find the governor of that region who is also a politician
  ?regionGovernor dbo:governor ?birthPlace .
  ?regionGovernor rdf:type dbo:Politician .
  
  ?regionGovernor dbo:birthPlace ?governorBirthPlace .

  # Step 4 & 5: Vince Gilligan's awards and awardee's birth place
  VALUES ?vinceGilligan { dbr:Vince_Gilligan }
  
  ?award dbo:recipient ?awardee .
  ?award dbo:receivedBy ?vinceGilligan .
  
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Step 6: Author of the reference to El Deafo
  VALUES ?elDeafo { dbr:El_Deafo }
  
  ?reference dbo:subject ?elDeafo ;
             dbo:author ?author .
  
  ?author rdf:type dbo:AmericanAuthor .
  
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Saw Min Phyu's spouse and their royal child
  OPTIONAL { 
    dbr:Saw_Min_Phyu dbo:spouse ?spouse .
    ?spouse dbo:child ?royalChild .
    FILTER EXISTS { ?royalChild a dbo:Royalty } 
  }

  # Step 2: Min Hla Htut of Pyakaung's parent and their child
  OPTIONAL {
    dbr:Min_Hla_Htut_of_Pyakaung dbo:parent ?parent .
    ?parent dbo:child ?minHlaChild .
  }

  # Step 3: Saw Shwe Khet's royal child, their father, and his spouse
  OPTIONAL {
    dbr:Saw_Shwe_Khet dbo:child ?sawShweKhetChild .
    FILTER EXISTS { ?sawShweKhetChild a dbo:Royalty }
    ?sawShweKhetChild dbo:parent ?royalFather .
    ?royalFather dbo:spouse ?fatherSpouse .
  }

  # Step 4: Find the predecessor of the royal child from step 1
  OPTIONAL {
    ?royalChild dbo:predecessor ?predecessor .
  }

  # Ensure the predecessor matches the spouse from step 3
  FILTER (?predecessor = ?fatherSpouse)
}
```",8,11,9,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Find parent of Hon. Mary Frances Bowes-Lyon
  ?maryFrances a dbo:Person ;
               dbo:parent ?parentMaryFrances .

  # Find child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne who is native of Middlesex
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?childClaude .
  ?childClaude dbo:nativePlace dbr:Middlesex .

  # Find parent of the child identified above
  ?childClaude dbo:parent ?parentChildClaude .

  # Determine if there is a common parent
  FILTER (?parentMaryFrances = ?parentChildClaude)
  BIND(?parentMaryFrances AS ?commonParent)
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?actorName ?productionWork WHERE {
  # Find the alter ego of Kent Allard
  OPTIONAL { 
    dbr:Kent_Allard dbo:alterEgo ?alterEgo .
  }
  
  # Identify the actor from High Society Blues and their production work
  ?highSocietyBlues dbo:actor ?actorResource .
  ?actorResource rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')
  
  OPTIONAL {
    ?actorResource dbo:producer ?productionWork .
  }
  
  # Find the connection to Cora Sue Collins
  ?coraSueCollins dbo:work ?productionWork .
  dbr:Cora_Sue_Collins ?coraSueCollins .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Tony Hollings' birthday
  ?tonyHollings dbo:birthday ?birthday .
  FILTER (str(?tonyHollings) = ""Tony_Hollings"") .

  # Find players with the same birthday and roles
  ?player dbo:birthday ?sameBirthday ;
          a dbo:Athlete, dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
          dbo:playerInTeamOrClub ?teamOrClub .
  
  FILTER (?birthday = ?sameBirthday) .

  # Find manager of the player who is also a sports manager and soccer manager
  ?manager dbo:sportsManagerOf ?player ;
           a dbo:SportsManager, dbo:SoccerManager .

  # Ensure the manager is linked to an organization that is a sports club, team, and specifically a soccer club in Hong Kong
  ?teamOrClub dbo:organization ?organization .
  FILTER (str(?organization) = ""Hong_Kong_C"") .
  FILTER (?organization a dbo:SportsTeam ;
          ?organization a dbo:SoccerClub ;
          ?organization a dbo:Organization)
}
```",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalMusicalArtist WHERE {
  # Step 1: Find a member of Khlyst who is also a musical artist
  ?khlystMember dbo:member dbr:Khlyst .
  FILTER (dbo:musicalArtist ?khlystMember) .

  # Step 2: Find the associated musical artist of this member
  ?khlystMember dbo:associatedMusicalArtist ?firstAssociatedArtist .

  # Step 3: Find a band that is a ""band,"" ""group,"" and ""organisation"" for this first associated artist
  ?firstAssociatedArtist dbo:member ?secondBand .
  FILTER (
    { ?secondBand rdf:type <http://dbpedia.org/ontology/Band> }
    && { ?secondBand rdf:type <http://dbpedia.org/ontology/MusicalGroup> }
    && { ?secondBand rdf:type <http://dbpedia.org/ontology/Organisation> }
  )

  # Step 4: Find a band member of this second band who is also a musical artist
  ?finalMusicalArtist dbo:member ?secondBand .
  FILTER (dbo:musicalArtist ?finalMusicalArtist)
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?publicEnemyProducer ?kentuckianProducer WHERE {
  # Find the actor who played Johnny Doughboy in ""The Public Enemy""
  ?actor dbo:character dbr:Johnny_Doughboy .
  ?actor dbo:film dbr:The_Public_Enemy .

  # Find the producer of ""The Public Enemy""
  ?publicEnemyProducer dbo:produced dbr:The_Public_Enemy .

  # Find Janet Gaynor's role in ""The Kentuckian"" and its producer
  ?kentuckyFilm dbo:starring dbr:Janet_Gaynor .
  ?kentuckyFilm rdfs:label ""The Kentuckian""@en .
  
  ?kentuckianProducer dbo:produced ?kentuckyFilm .

}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceOfWar ?societalEvent WHERE {
  # Find the war in which William Bayne was a commander for the 30th Regiment of Foot
  OPTIONAL {
    dbr:William_Bayne dbo:commanderInMilitaryConflict ?war .
    ?war dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  }
  
  # Find the military force (army or battles) involved in that war
  OPTIONAL {
    ?war dbo:militaryForce ?militaryForceOfWar .
  }

  # Identify the awardee of Knight Commander of the Order of the Bath associated with a societal event
  OPTIONAL {
    ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
    ?societalEvent dbo:event ?awardee .
    FILTER (isLiteral(?societalEvent))
  }

  # Link the military force of the war to the societal event
  OPTIONAL {
    FILTER (?militaryForceOfWar = ?societalEvent)
  }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?samConcepcionProfession ?bobThompsonBand ?fictionalCharacterProfession WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samConcepcionProfession .

  # Bob Thompson (musician) and his band
  VALUES ?bobThompson { 
    dbr:Bob_Thompson_(musician)
  }
  OPTIONAL {
    ?bobThompson dbo:associatedBand ?bobThompsonBand .
  }

  # Confirming birth name of Bob Thompson as musician
  ?bobThompson foaf:name ""Bob Thompson""@en .

  # Fictional character created by Walter B. Gibson
  VALUES ?fictionalCharacter { 
    dbr:The_Shadow_(character)
  }
  OPTIONAL {
    ?fictionalCharacter dbo:creator dbr:Walter_B._Gibson .
  }

  # Profession of the fictional character
  OPTIONAL {
    ?fictionalCharacter dbo:profession ?fictionalCharacterProfession .
  }

  FILTER (?bobThompsonBand != """" && ?fictionalCharacterProfession != """")
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Archduchess Helena of Austria's spouse and their royal child
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?royalChild dbo:child ?spouse ;
              a dbo:Monarch ; # Assuming Monarch as a proxy for royalty

  # Predecessor of the royal child
  ?predecessor dbo:successor ?royalChild .

  # Archduke Charles Louis of Austria's grandchild who is royalty
  ?charlesChild dbo:child dbr:Archduke_Charles_Louis_of_Austria ;
                a dbo:Monarch .
  ?grandchild dbo:child ?charlesChild ;
              a dbo:Monarch .

  # Great-grandchild of Alexander of Württemberg who is royalty
  ?alexanderChild dbo:child dbr:Alexander_I_of_W%C3%BCrttemberg ;
                  a dbo:Monarch .
  ?grandchild2 dbo:child ?alexanderChild ;
               a dbo:Monarch .
  ?greatGrandchild dbo:child ?grandchild2 ;
                   a dbo:Monarch .

  # Find common ancestor
  FILTER (?predecessor = ?commonAncestor)
  OPTIONAL { ?charlesChild dbo:parent ?commonAncestor . }
  OPTIONAL { ?greatGrandchild dbo:parent ?commonAncestor . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonProducer WHERE {
  # High Society Blues actor
  ?highSocietyBluesActor dbo:starring dbr:High_Society_Blues .
  
  # The Shadow alter ego
  ?theShadowAlterEgo rdfs:label ""The Shadow""@en .
  
  # Johnny Doughboy actor
  ?johnnyDoughboyActor dbo:starring dbr:Johnny_Doughboy .

  # Producers for High Society Blues
  OPTIONAL { 
    dbr:High_Society_Blues dbo:producer ?highSocietyBluesProducer .
  }
  
  # Producer for The Shadow's work
  OPTIONAL {
    ?theShadowWork dbo:producer ?shadowProducer .
    ?theShadowAlterEgo dbo:associatedMusicalArtist ?theShadowWork .
  }

  # Producers for Johnny Doughboy
  OPTIONAL {
    dbr:Johnny_Doughboy dbo:producer ?johnnyDoughboyProducer .
  }
  
  # Find common producer
  FILTER (?highSocietyBluesProducer = ?shadowProducer && 
          ?highSocietyBluesProducer = ?johnnyDoughboyProducer)
  
  BIND(?highSocietyBluesProducer AS ?commonProducer)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?goldenSwordRecipient ?warOfGoldenSword ?awardee25 ?warOfAwardee25 WHERE {
  # Find recipients of the Golden Sword for Bravery and their associated wars
  ?recipient dbo:award dbr:Golden_Sword_for_Bravery .
  OPTIONAL { ?recipient dbo:participatedIn ?warOfGoldenSword . }

  # Find the entity associated with ""awardee of 25"" and their associated war
  ?awardee25 dbo:award dbr:Award_25 ;  # Assuming Award_25 is a placeholder for the actual resource
             dbo:participatedIn ?warOfAwardee25 .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?profession ?alterEgo WHERE {
  # Find actor for Dispatches from Elsewhere
  VALUES ?dispatchesFromElsewhere { dbr:Dispatches_from_Elsewhere }
  
  ?dispatchesFromElsewhere dbo:actor ?actor .
  ?actor rdfs:label ?actorName .

  # Check if the actor is a politician
  OPTIONAL {
    ?actor dbo:profession ?profession .
    FILTER (CONTAINS(LCASE(?profession), ""politician""))
  }

  # Find alter ego for The Shadow video game character
  VALUES ?theShadowGame { dbr:The_Shadow_(video_game) }
  
  ?theShadowGame dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ?alterEgoLabel .

  FILTER (?actor = ?dispatchesFromElsewhereActor)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardNativeRegion ?bandName WHERE {
  ?award dbo:nativeOf ?nativeRegion .
  FILTER (STRSTARTS(STR(?nativeRegion), ""http://dbpedia.org/resource/"") && 
          STRCONTAINS(STR(?nativeRegion), ""/United_States"") &&
          STRCONTAINS(STR(?nativeRegion), ""/State"") &&
          STRCONTAINS(STR(?nativeRegion), ""/Settlement""))
  
  ?band dbo:origin dbr:New_York_(state) .
  ?band dbo:name ?bandName .

  OPTIONAL {
    ?bandMember dbo:birthName ?birthName .
    ?bandMember dbo:nativePlace dbr:Florida .
    ?bandMember dbo:bandMember dbr:Uncle_Murda .
    
    ?musicalArtist dbo:birthName ?birthName .
    ?musicalArtist dbo:nativePlace dbr:Florida .
  }
  
  FILTER (?bandMember = ?musicalArtist)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle ?commander WHERE {
  VALUES ?author { dbr:Hillary_Clinton }
  VALUES ?spouse { dbr:Bill_Clinton }
  VALUES ?residence { dbr:Chappaqua,_New_York }

  ?book dbo:author ?author .
  ?book dbo:title ?bookTitle .

  ?spouse dbo:spouse ?author .
  ?spouse dbo:residence ?residence .

  OPTIONAL {
    ?commander dbo:officeHolder ?office .
    FILTER EXISTS { ?office dbo:name ""United_States_Navy"" }
    FILTER EXISTS { ?office dbo:relatedTo dbr:AIDS_epidemic }
  }

  FILTER (?spouse = dbr:Bill_Clinton)
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?child dbo:childOf dbr:Saw_Shwe_Khet .
  FILTER EXISTS { ?child a dbo:RoyalPerson . }
  
  OPTIONAL { 
    ?father dbo:parent ?child .
    FILTER EXISTS { ?father a dbo:RoyalPerson . }
    
    OPTIONAL {
      ?father dbo:spouse ?spouse .
      FILTER EXISTS { ?spouse a dbo:RoyalPerson . }
      
      ?predecessor dbo:successorOf ?child .
      ?spouseChild dbo:childOf ?spouse .
      FILTER (?predecessor = ?spouseChild)
    }
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?actorSpouse WHERE {
  # Step 1: Identify the ruling party in Central, Louisiana
  ?centralLocation dbo:location dbr:Central,_Louisiana .
  ?rulingParty dbo:hasMember ?partyMember .
  
  # Step 2: Find a notable member of this party (assuming we have such data)
  
  # Step 3: Identify films produced by Nat Levine and find an actor
  ?natLevineFilm dbo:producer dbr:Nat_Levine .
  ?natLevineFilm dbo:actor ?actor .

  # Step 4: Find the spouse of this actor
  OPTIONAL {
    ?actor dbo:spouse ?actorSpouse .
  }

  # Step 5: Identify Tisha Sterling's parent and their birth name
  ?tishaSterling dbo:parent ?parent .
  ?parent foaf:name ?birthName .

  # Find a person with the same birth name
  ?personWithSameBirthName foaf:name ?birthName .

  # Combine conditions to find the desired individual
  FILTER (?partyMember = ?actorSpouse)
  FILTER (?actorSpouse = ?personWithSameBirthName)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieActor ?albumArtist WHERE {
  # Find an actor from ""The Fast and the Furious"" series
  VALUES ?fastAndFuriousSeries { 
    dbr:The_Fast_and_the_Furious_(film) 
    dbr:2Fast_2Furious 
    dbr:Fast_and_Furious:_Tokyo_Drift 
    dbr:Fast_Four_Way 
    dbr:Fast_and_Furious_5 
    dbr:Fast_and_Furious_6 
    dbr:Furious_7 
    dbr:The_Fast_and_the_Furious_(2015_film) 
  }
  
  ?movie dbo:actor ?movieActor .
  FILTER (?movie IN ?fastAndFuriousSeries)

  # Find T.I.'s song that is also a musical work
  VALUES ?tiSong { 
    dbr:Whatever_You_Say_I'm_Na (assuming this is the song)
  }
  
  ?album dbo:musicalArtist ?albumArtist .
  ?song dbo:title ?tiSong .
  FILTER (?song = ?tiSong)

  # Linking the album to T.I.
  ?album dbo:artist dbr:T.I. .

}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find Cynthia Morgan's birth name
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
  
  # Identify Nse Ikpe Etim (Afeez Oyetoro) and his role in ""Half of a Yellow Sun""
  dbr:Nse_Ikpe_Etim dbo:actorInFilm dbr:Half_of_a_Yellow_Sun .
  
  # Find associated musical artist for Cynthia Morgan's birth name
  ?birthName dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is linked to Nse Ikpe Etim
  OPTIONAL {
    dbr:Nse_Ikpe_Etim dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eleonoraAlmaMater ?eleonoraAlmaMaterFoundingDate 
     ?luizaAlmaMater ?luizaAlmaMaterFoundingDate WHERE {
  # Eleonora Menicucci's alma mater
  dbr:Eleonora_Menicucci dbo:almaMater ?eleonoraAlmaMater .
  ?eleonoraAlmaMater a dbo:University ;
                   dbo:foundingDate ?eleonoraAlmaMaterFoundingDate .

  # Luiza Erundina's alma mater
  dbr:Luiza_Erundina dbo:almaMater ?luizaAlmaMater .
  ?luizaAlmaMater a dbo:University ;
                 dbo:foundingDate ?luizaAlmaMaterFoundingDate .
}
```",6,10,7,3,2,3,2,20,1,3,0,0.25,1.0,0.4
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find the writer of Wizards of Waverly Place (soundtrack) who is a musical artist
  OPTIONAL { 
    dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:writer ?writer .
    FILTER EXISTS { ?writer dbo:musicalArtist true }
  }

  # Step 2: Find the associated musical artist of Stuart Tosh
  OPTIONAL {
    dbr:Stuart_Tosh dbo:associatedMusicalArtist ?stuartAssociatedArtist .
  }

  # Step 3: Find the band member of the associated musical artist of David Paton
  OPTIONAL {
    dbr:David_Paton dbo:associatedMusicalArtist ?davidAssociatedArtist .
    ?davidAssociatedArtist dbo:bandMember ?bandMember .
  }

  # Combine results to find the final associated artist
  FILTER (?writer = ?stuartAssociatedArtist && ?stuartAssociatedArtist = ?bandMember)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?foundingDate WHERE {
  # Find Eleonora Menicucci's alma mater
  OPTIONAL {
    ?person a dbo:Politician ;
            foaf:name ""Eleonora Menicucci""@en ;
            dbo:almaMater ?almaMater .
  }
  
  # Find the founding date of Federal University of Paraíba
  ?university a dbo:University ;
              foaf:name ""Federal University of Paraíba""@pt ;
              dbo:foundingDate ?foundingDate .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stuartMcbeathTosh WHERE {
  ?stuartMcbeathTosh a dbo:MusicalArtist ;
                     rdfs:label ""Stuart McBeath Tosh""@en .
  
  OPTIONAL {
    ?davidPatonAssociatedArtist dbo:associatedMusicalArtist ?stuartMcbeathTosh .
    ?davidPaton dbo:associatedMusicalArtist ?davidPatonAssociatedArtist .
    FILTER (str(?davidPaton) = str(dbr:David_Paton))
  }
  
  OPTIONAL {
    ?wizardsWriterArtist dbo:writer ?wizardsSoundtrack ;
                        dbo:artist ?wizardsSoundtrack .
    ?wizardsSoundtrack rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .
    
    ?stuartMcbeathTosh dbo:associatedMusicalArtist ?wizardsWriterArtist .
  }
}
```",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaName ?japanTimeZoneRegion WHERE {
  VALUES ?mitaka { dbr:Mitaka }
  VALUES ?tokyo { dbr:Tokyo }
  VALUES ?japan { dbr:Japan }

  ?mitaka dbo:partOfCity ?tokyo .
  ?tokyo dbo:country ?japan .

  ?japan dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?japanTimeZoneRegion .

  ?mitaka rdfs:label ?mitakaName .
  
  FILTER (lang(?mitakaName) = 'en')
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildOfSpouse WHERE {
  # Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Spouse's child who is royalty
  ?spouse dbo:child ?childOfSpouse .
  ?childOfSpouse rdf:type dbo:Monarch .

  # Grandchild of the spouse who is royalty
  ?childOfSpouse dbo:child ?grandchildOfSpouse .
  ?grandchildOfSpouse rdf:type dbo:Monarch .

  # Reference entity related to William I, both royalty and office holder
  ?referenceEntity dbo:officeHolder ?office .
  ?referenceEntity dbo:spouse dbr:William_I .
  ?referenceEntity rdf:type dbo:Monarch .

  # Child of the reference entity who is royalty
  ?referenceEntity dbo:child ?childOfReference .
  ?childOfReference rdf:type dbo:Monarch .

  # Parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRogerIII .

  # Ensure the grandchild is related to the child of the reference entity
  FILTER (?grandchildOfSpouse = ?childOfReference)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?jonHallDeathPlace ?georgeRaftDeathPlace ?douglasFairbanksJrDeathPlace WHERE {
  OPTIONAL { 
    dbr:Jon_Hall dbo:deathPlace ?jonHallDeathPlace .
  }
  OPTIONAL { 
    dbr:George_Raft dbo:deathPlace ?georgeRaftDeathPlace .
  }
  OPTIONAL { 
    dbr:Douglas_Fairbanks_Jr dbo:deathPlace ?douglasFairbanksJrDeathPlace .
  }
}
```",6,6,7,2,3,2,3,28,0,1,1,0.0,0.0,0
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandGrandChild WHERE {
  # Alexander of Württemberg's child
  ?child1 dbo:spouseOrPartner dbr:Alexander_of_Württemberg_(1804-1881) .
  
  # Child of the child
  ?child2 dbo:parent ?child1 .

  # Grandchild of the grandchild
  ?grandGrandChild dbo:parent ?child2 .

  # Archduchess Margarete Sophie's parent
  ?margareteParent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Child of the child of Margarete's parent
  ?margareteGrandChild dbo:parent ?margareteParent .

  # Archduchess Helena's spouse and their royal child
  ?helenaSpouse dbo:spouseOrPartner dbr:Archduchess_Helena_of_Austria .
  ?royalChild dbo:parent ?helenaSpouse .
  
  # Predecessor of the royal child
  ?predecessor dbo:succeededBy ?royalChild .

  # Ensure all are royalty
  FILTER (dbo:RoyalFamilyMember(?grandGrandChild) && 
          dbo:RoyalFamilyMember(?margareteGrandChild) &&
          dbo:RoyalFamilyMember(?predecessor))
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?toyotomiChildWar ?ieyasuWar WHERE {
  # Toyotomi Hideyoshi's child involved in a war
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  ?child dbo:participatedIn ?toyotomiChildWar .

  # Tokugawa Ieyasu (born as Koichirō) involved in a war
  ?ieyasu dbo:birthName ""Matsudaira_Takechiyo""@en ;
         dbo:participatedIn ?ieyasuWar .
  
  FILTER (?toyotomiChildWar != ?ieyasuWar)
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?carrieSymonds { 
    dbr:Carrie_Symonds 
  }
  ?carrieSymonds dbo:spouse ?spouse .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  
  ?person dbo:birthPlace ?birthPlaceEntity .
  ?birthPlaceEntity a dbo:Settlement ;
                   dbo:country dbr:United_States_of_America .

  OPTIONAL { 
    ?quincyGillmore dbo:award dbr:Quincy_Adams_Gillmore_Award .
    ?quincyGillmore dbo:militaryForce ?force .
  }

  OPTIONAL {
    ?medalOfHonorAwardee dbo:award dbr:Medal_of_Honor ;
                         dbo:conflict ?war .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Ada Jane Low's birth date
  VALUES ?adaJaneLowBirthDate { 
    dbr:Ada_Jane_Low dbo:birthDate ?date .
  }
  
  # Find politicians born before Ada Jane Low
  ?politician dbo:birthDate ?politicianBirthDate .
  FILTER (?politicianBirthDate < ?date)
  FILTER EXISTS { ?politician a dbo:Politician . }

  # Find Mark Tournier's birth place
  VALUES ?markTournierBirthPlace {
    dbr:Mark_Tournier dbo:birthPlace ?place .
  }
  
  # Find decedents at Mark Tournier's birth place
  ?decedent dbo:deathPlace ?decedentDeathPlace .
  FILTER (?decedentDeathPlace = ?place)

  # Combine conditions to find a common entity
  BIND(?politician AS ?predecessor)
  FILTER EXISTS { ?decedent = ?politician }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  # Find a notable person associated with an EET region
  ?person dbo:residence ?eetRegion .
  ?eetRegion dbo:timeZone dbr:Eastern_European_Time .

  # Find an alumnus of Plovdiv University ""Paisius of Hilendar""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_of_Hilendarski .

  # Match their birthplaces
  ?person dbo:birthPlace ?birthPlace .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marceloSarmientoTeam ?martyPollioAthlete ?actorSoccerPlayerTeam WHERE {
  VALUES ?marceloSarmiento (dbr:Marcelo_Sarmiento) {
    ?marceloSarmiento
  }
  OPTIONAL {
    ?marceloSarmiento dbo:sportTeam ?marceloSarmientoTeam .
  }

  VALUES ?martyPollio (dbr:Marty_Pollio) {
    ?martyPollio
  }
  OPTIONAL {
    ?martyPollio dbo:birthDate ?martyPollioBirthDate .
    ?athlete dbo:birthDate ?martyPollioBirthDate .
    ?athlete dbo:sportTeam ?martyPollioAthlete .
  }

  VALUES ?allOrNothing (dbr:All_or_Nothing:_Manchester_City) {
    ?allOrNothing
  }
  OPTIONAL {
    ?actor dbo:actorInFilm ?allOrNothing ;
           a dbo:SoccerPlayer, dbo:Athlete .
    ?actor dbo:sportTeam ?actorSoccerPlayerTeam .
  }

  FILTER (?marceloSarmiento = dbr:Marcelo_Sarmiento)
  FILTER (?martyPollio = dbr:Marty_Pollio)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist1 ?associatedArtist2 WHERE {
  # Tupac Shakur's associated musical artists
  OPTIONAL {
    dbr:Tupac_Shakur dbo:birthName ""Tupac Amaru Shakur""@en .
    dbr:Tupac_Shakur dbo:associatedMusicalArtist ?associatedArtist1 .
  }

  # Notable artist from Central Region, Ghana
  OPTIONAL {
    ?centralRegionArtist dbo:birthPlace dbr:Central_Region,_Ghana ;
                         a dbo:Artist ;
                         dbo:associatedMusicalArtist ?associatedArtist2 .
  }
  
  # Writer of The Live Anthology who is also a musical artist
  OPTIONAL {
    ?writer dbo:title ""The Live Anthology""@en ;
            dbo:profession dbr:Musician ;
            dbo:associatedMusicalArtist ?associatedArtist3 .
  }

  FILTER (?associatedArtist1 = ?associatedArtist2 || ?associatedArtist1 = ?associatedArtist3 || ?associatedArtist2 = ?associatedArtist3)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?societalEvent ?georgeDucasWork ?successor WHERE {
  VALUES ?battleOfVienna { dbr:Battle_of_Vienna_(1683) }
  VALUES ?russoPolishWar { dbr:Russo-Polish_War_(1654–1667) }

  ?commander dbo:commander ?battleOfVienna .
  
  OPTIONAL {
    ?tvShow dbo:associatedMusicalArtist ?commander .
  }
  
  OPTIONAL {
    ?societalEvent dbo:relatedEvent ?battleOfVienna .
  }
  
  ?georgeDucas dbo:author ?georgeDucasWork .
  FILTER (str(?georgeDucas) = ""George Ducas"")
  
  ?successor dbo:successor ?commander ;
             a dbo:Politician ;
             dbo:officeHolder ?russoPolishWar .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find awards associated with George Hamilton Cameron
  ?award dbo:recipient dbr:George_Hamilton_Cameron .
  
  # Identify the political party related to George Savage (politician)
  ?party dbo:member dbr:George_Savage_(politician) ;
         rdf:type dbo:PoliticalParty .

  # Determine the leader of this party
  ?leader dbo:positionHeld ?party ;
          dbo:residence ?residence .
  
  # Ensure the entity is both a political party and an organization
  ?entity rdf:type dbo:Organization, dbo:PoliticalParty ;
          rdfs:label ?label .

  FILTER (?award = ?entity || ?residence = ?entity)
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFatherRoyalty ?commanderEventShow WHERE {
  # Step 1: Find Maria Anna of Bavaria's children
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  
  ?mariaAnna dbo:child ?child .
  
  # Step 2: Find the father of one of these children who is royalty
  ?child dbo:parent ?father .
  FILTER EXISTS { ?father a dbo:RoyalFamilyMember . }

  # Step 3: Identify Archduke Charles Joseph's parent
  VALUES ?archdukeCharlesJoseph { dbr:Archduke_Charles_Joseph_of_Austria }
  ?archdukeCharlesJoseph dbo:parent ?parent .

  # Step 4: Find the commander in the war associated with this parent
  ?parent dbo:militaryCommander ?commander .
  
  # Step 5: Link this commander to a societal event, an event, and a television show related to the 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?commander dbo:societalEvent ?event .
    FILTER EXISTS { ?event dbo:relatedTo dbr:2nd_Dragoon_Regiment_(France) }
    FILTER EXISTS { ?event dbo:type dbr:TelevisionShow . }
  }

  # Final result
  BIND(?child AS ?childOfFatherRoyalty)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?spouse .
  
  # Child of the spouse
  ?child dbo:parent ?spouse .
  
  # Photographer parent
  ?photographer dbo:profession dbr:Photographer ;
                dbo:parent ?child .
  
  # Person decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles,_California ;
            dbo:actorIn ?movie .
  
  # Movie involving both the decedent and the photographer
  ?movie dbo:actor ?photographer ;
         dbo:actor ?decedent .
  
  # Actor of the movie
  ?movie dbo:actor ?actor .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Edward Stanley, 17th Earl of Derby's parent
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parentOfEarl.

  # Step 2: Child of that Parent who is a politician and an office holder
  ?childOfParent dbo:parent ?parentOfEarl .
  ?childOfParent a dbo:Politician ;
                 dbo:officeHolder ?office .

  # Step 3: Parent of the child (politician/office holder)
  ?result dbo:parent ?childOfParent .

  # Step 4: Awardee of Commander of the Royal Victorian Order
  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .
  ?awardeeParent dbo:parent ?awardee .

  # Step 5: Alumnus of Eton College who is a politician
  ?alumnus dbo:almaMater dbr:Eton_College ;
           a dbo:Politician .
  ?fatherOfAlumnus dbo:child ?alumnus .

  # Final condition to match the parent from Step 3 with the awardee's parent and father of alumnus
  FILTER (?result = ?awardeeParent && ?result = ?fatherOfAlumnus)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?princeChristianAdministration ?mayorOfDuchyAdministration ?territoryAdministeredFromCopenhagen WHERE {
  # Find the administration of Prince Christian
  OPTIONAL {
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:positionHeld ?princeChristianAdministration .
  }
  
  # Find the mayor of Duchy of Schleswig and their administration
  OPTIONAL {
    dbr:Mayor_of_the_Duchy_of_Schleswig dbo:positionHeld ?mayorOfDuchyAdministration .
  }

  # Find territories administered from Copenhagen
  OPTIONAL {
    ?territory dbo:administrativeUnit dbr:Copenhagen ;
               dbo:administeredBy ?territoryAdministeredFromCopenhagen .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find the producer of ""Storm in a Teacup""
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
  
  # Determine the birthplace of the producer
  ?producer dbo:birthPlace ?birthPlace .

  # Identify Apache Indian's musical work
  ?musicalWork dbo:artist dbr:Apache_Indian ;
              dbo:writer ?writer .

  # Filter to find a writer whose work is associated with the birthplace of the producer
  FILTER EXISTS {
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?actor ?film WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:sport dbr:Soccer ;
           dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:managerOfTeam ?team .
  
  # Actor who is also a soccer player and athlete, played in a film by Manuel Huerga
  ?actor dbo:sport dbr:Soccer ;
         dbo:sport dbr:Athletics ;
         dbo:actedIn ?film .
  
  ?film dbo:director dbr:Manuel_Huerga .

  # Person born on Marty Pollio's birthday who is an athlete
  ?person2 dbo:birthDate ?martyPollioBirthDate ;
           dbo:sport ?sport .
  
  # Get Marty Pollio's birthdate
  ?martyPollio dbo:birthDate ?martyPollioBirthDate .

  FILTER (?actor = ?person1)
  FILTER (?person2 = ?actor)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find David Luckman's residence
  ?davidLuckman dbo:residence ?residence .
  
  # Identify Jamie McCunnie and his manager
  ?jamieMcCunnie dbo:manager ?manager .
  
  # Ensure the manager is associated with a soccer club
  ?manager dbo:sport dbr:Soccer ;
           rdf:type dbo:SportsClub .

  # Find the native place of this sports club
  ?manager dbo:nativePlace ?nativePlace .

  FILTER (?davidLuckman = dbr:David_Luckman)
  FILTER (?jamieMcCunnie = dbr:Jamie_McCunnie)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?nativePerson WHERE {
  # Step 1: Find a child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  VALUES ?claudeBowesLyon { dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne }
  
  # Step 2: Find the parent of that child (should be Claude Bowes-Lyon)
  ?child dbo:parent ?parentOfChild .
  FILTER (?claudeBowesLyon = ?parentOfChild)

  # Step 3: Determine William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?gaynerBirthPlace .

  # Step 4: Identify a person native to this place (region and country)
  ?nativePerson dbo:nativeCountry ?gaynerBirthPlace .
  
  # Step 5: Find the parent of Hon. Mary Frances Bowes-Lyon
  dbr:Hon._Mary_Frances_Bowes-Lyon dbo:parent ?parentOfChild .

  # Ensure the native person is also a parent of Hon. Mary Frances Bowes-Lyon
  FILTER (?nativePerson = ?parentOfChild)
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonProducer WHERE {
  # Find the actor of High Society Blues
  ?highSocietyBluesActor dbo:starring dbr:High_Society_Blues .
  
  # Find the claim to fame (a work) of this actor
  ?highSocietyBluesActor dbo:claimToFame ?work1 .

  # Find the producer of this work
  ?work1 dbo:producer ?producer1 .

  # Find the actor of Johnny Doughboy
  ?johnnyDoughboyActor dbo:starring dbr:Johnny_Doughboy .
  
  # Find the claim to fame (a work) of this actor
  ?johnnyDoughboyActor dbo:claimToFame ?work2 .

  # Find the producer of this work
  ?work2 dbo:producer ?producer2 .

  # Ensure the producers are the same
  FILTER (?producer1 = ?producer2)
  
  BIND(?producer1 AS ?commonProducer)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # The writer of ""The Live Anthology"" who is also a musical artist
  dbr:The_Live_Anthology dbo:writer ?person .
  ?person dbo:musicalArtist ?musicalArtist .

  # Native to Central Region, Ghana
  ?person dbo:nativePlace dbr:Central_Region,_Ghana .

  # Associated musical artist of Elorm Kabu Amenyah
  OPTIONAL {
    dbr:Elorm_Kabu_Amenyah dbo:associatedMusicalArtist ?associatedArtist .
    FILTER (?person = ?associatedArtist)
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?movieAuthor WHERE {
  ?movie a dbo:Film ;
         dbo:televisionSeries ?tvShow .
  
  ?tvShow dbo:starring dbr:Vera_Lynn .

  ?artist dbo:parentProject ?movie ;
          a dbo:Artist, dbo:MusicalArtist .

  ?location dbo:nativeOf ?artist ;
            a dbo:Settlement ;
            dcterms:language ""English"" .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer1Label ?producer2Label WHERE {
  # High Society Blues actor
  ?highSocietyBlues a dbo:Film ;
                    dbo:starring ?actorHSB .
  
  # Producer of the claim to fame (work) of the High Society Blues actor
  ?claimToFame1 dbo:creator ?actorHSB ;
               dbo:producer ?producer1 .
  
  # Johnny Doughboy actor
  ?johnnyDoughboy a dbo:Film ;
                  dbo:starring ?actorJD .
  
  # Producer of the claim to fame (work) of the Johnny Doughboy actor
  ?claimToFame2 dbo:creator ?actorJD ;
               dbo:producer ?producer2 .

  # Alter ego of Kent Allard
  ?kentAllard a dbo:FictionalCharacter ;
              dbo:alterEgo ?fictionalCharacter .
  
  # Professional role of the fictional character
  ?fictionalCharacter dbo:profession ?profession .

  # Get labels for producers
  ?producer1 rdfs:label ?producer1Label .
  FILTER (lang(?producer1Label) = 'en')
  
  ?producer2 rdfs:label ?producer2Label .
  FILTER (lang(?producer2Label) = 'en')

  # Ensure the same producer is found in both cases
  FILTER (?producer1 = ?producer2)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?nativeCountry .

  OPTIONAL {
    # Identify the sports manager born on 1968-08-26
    ?manager a dbo:SportsManager ;
            dbo:birthDate ""1968-08-26""^^xsd:date .
    
    # Find the soccer club managed by this person in a specific season
    ?season a dbo:SoccerLeagueSeason ;
            dbo:team ?soccerClub ;
            dbo:manager ?manager .

    # Determine the successor of 2006–07 VfL Bochum season
    dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succeededBy ?successorSeason .
    
    # Ensure the manager is associated with the team in the successor season
    FILTER (?season = ?successorSeason)
  }
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?nateNewton { dbr:Nate_Newton_(musician) }
  VALUES ?nothingToGein { dbr:Nothing_to_Gein }

  ?nateNewton dbo:associatedMusicalArtist ?artist .
  FILTER (dbo:Band(?artist) && dbo:Organization(?artist))

  ?producer dbo:producer ?nothingToGein .
  FILTER (dbo:Organization(?producer) && dbo:Group(?producer))

  ?producer dbo:bandMember ?bandMember .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Shirley Stoler's resource
  dbr:Shirley_Stoler dbo:spouse ?spouse .
  
  # Assuming spouse might lead to children (not direct in DBpedia)
  OPTIONAL { ?spouse dbo:children ?child . }
  
  # Filter for American nationality
  FILTER EXISTS { ?child dbo:nationality dbr:United_States_of_America . }

  # Identify an award related to New York State that is also a settlement
  ?award dbo:location dbr:New_York_(state) .
  ?award rdf:type dbo:Settlement .

  # Assuming the child might be associated with this award (hypothetical link)
  OPTIONAL { ?child dbo:awardee ?award . }
}
```",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderURL ?successorURL ?tvShow ?societalEvent ?pacsConflict ?ducasWork WHERE {
  # Commander in the Battle of Vienna
  VALUES ?battleOfVienna { dbr:Battle_of_Vienna_(1683) }
  
  ?battleOfVienna dbo:commander ?commander .
  ?commander rdfs:label ?commanderLabel .

  OPTIONAL {
    ?commander dbo:depicts ?tvShow .
    ?commander dbo:depicts ?societalEvent .
  }

  # Successor of the commander
  ?successor dbo:successorOf ?commander .
  ?successor rdfs:label ?successorLabel .

  OPTIONAL {
    ?successor dbo:associatedWith ?politician .
    ?politician rdf:type dbo:Politician .
    ?politician dbo:officeHolder ?office .
  }

  # Michał Kazimierz Pac's military conflict
  dbr:Michał_Kazimierz_Pac dbo:militaryConflict ?pacsConflict .

  # George Ducas's work referencing these events
  ?ducasWork dbo:about ?battleOfVienna ;
             dbo:author dbr:George_Ducas .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardURL ?childOfShirleyStoler WHERE {
  VALUES ?coroURL { 
    dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico
  }
  
  OPTIONAL {
    ?coroURL dbo:awardedBy ?award .
    ?award dbo:nationality dbr:United_States_of_America ;
           a dbo:Settlement .
  }

  VALUES ?shirleyStolerURL { 
    dbr:Shirley_Stoler
  }
  
  OPTIONAL {
    ?shirleyStolerURL dbo:profession ?profession .
    ?childOfShirleyStoler dbo:professionalChild ?shirleyStolerURL .
  }

  FILTER (?award = ?awardURL)
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfAmasaTracy ?forceOfQuincyAdamsGillmoreAward ?birthPlaceSettlement WHERE {
  # Amasa Tracy's involvement in a war
  dbr:Amasa_Tracy dbo:participatedIn ?warOfAmasaTracy .

  # Quincy Adams Gillmore's award and associated force
  dbr:Quincy_Adams_Gillmore dbo:award ?quincyAdamsGillmoreAward .
  ?forceOfQuincyAdamsGillmoreAward dbo:associatedWith ?quincyAdamsGillmoreAward .

  # Person deceased on 1850-08-05 and their birthplace
  ?person dbo:dateOfBirth ?birthDate ;
          dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?birthPlace .
  
  FILTER (YEAR(?birthDate) < 1850)
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?actorBirthPlace WHERE {
  # Find the birthplace of an awardee of Sangeet Natak Akademi Fellowship
  ?person dbo:award ""Sangeet_Natak_Akademi_Fellowship"" .
  ?person dbo:birthPlace ?awardeeBirthPlace .

  # Find a movie featuring Dipankar De and another actor's birthplace from that movie
  ?movie dbo:starring dbr:Dipankar_De ;
         dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
  
  FILTER EXISTS { ?person dbo:award ""Sangeet_Natak_Akademi_Fellowship"" }
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?playerName WHERE {
  # Find the Russia national football team and its nickname
  VALUES ?team { dbr:Russia_national_football_team }
  
  ?team dbo:officialName ?nickname .
  
  # Find players who are also writers
  ?player dbo:nationality dbr:Russia ;
          dbo:sport dbr:Football ;
          dbo:occupation dbr:Writer .

  # Check if the player has written a work associated with Aleksandr Filimonov
  OPTIONAL {
    ?work dbo:author ?player .
    ?work dbo:wikiPageWikiLink dbr:Aleksandr_Filimonov .
  }
  
  BIND(?player AS ?playerName)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoURL WHERE {
  # Step 1: Find Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo ?shadow .
  
  # Step 2: Identify Yeshaq I's child who is royalty and an office holder
  dbr:Yeshaq_I dbo:child ?yeshaqsChild .
  ?yeshaqsChild rdf:type dbo:Monarch ;
                dbo:officeHolder ?office .

  # Step 3: Trace Baeda Maryam I's lineage to find his child, then their father (Yeshaq I)
  dbr:Baeda_Maryam_I dbo:child ?baedasChild .
  ?baedasChild dbo:father ?yeshaqsFather .
  
  FILTER (?yeshaqsFather = dbr:Yeshaq_I)

  # Step 4: Match the alter ego of Lamont Cranston with Yeshaq I's child
  FILTER (?shadow = ?yeshaqsChild)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?office WHERE {
  # Find the administration related to PSOE
  ?administration dbo:headOfState ?leader .
  ?administration dbo:country dbr:Spain .

  # Ensure the leader is associated with PSOE
  ?leader dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .

  # Identify Alberto Núñez Feijóo's office
  OPTIONAL {
    dbr:Alberto_Núñez_Feijóo dbo:office ?office .
  }

  # Ensure the administration is related to Spain
  FILTER (?administration = ?leader)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChildURL ?realNamePeterIV WHERE {
  # Find Martin of Aragon
  VALUES ?martinOfAragon { dbr:Martin_of_Aragon }

  # Determine Martin's parent
  ?martinOfAragon dbo:parent ?parent .

  # Find a child of the parent who is royalty
  ?parent dbo:child ?royalChild .
  ?royalChild dbo:royalTitle ?title .

  # Get real name of Peter IV of Aragon
  VALUES ?peterIV { dbr:Peter_IV_of_Aragon }
  ?peterIV rdfs:label ?realNamePeterIV FILTER (LANG(?realNamePeterIV) = ""en"")

}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict ?tvShowCommander ?athleteCountry WHERE {
  # Maria I of Portugal's military conflict
  dbr:Maria_I_of_Portugal dbo:militaryConflict ?militaryConflict .

  # Television show ""The War of the Worlds"" and its commander or entity related to a war
  OPTIONAL {
    dbr:The_War_of_the_Worlds dbo:character ?tvShowCommander .
    FILTER EXISTS { ?tvShowCommander dbo:associatedMusicalArtist ?militaryConflict }
  }

  # Native Polish athlete from Łódź and their country of residence
  OPTIONAL {
    ?athlete dbo:nativePlace dbr:Łódź ;
             dbo:nationality dbr:Poland .
    ?athlete dbo:residenceCountry ?athleteCountry .
  }

  FILTER (?militaryConflict = ?tvShowCommander)
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?territory WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen
  ?hansen dbo:deathPlace ?deathPlace .
  dbr:Christian_Ditlev_Ammenhorst_Hansen ?hansen .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find if this place is administered by someone who was mayor of Duchy of Schleswig
  ?mayor dbo:administers ?territory .
  ?mayor dbo:officeHolderOf dbr:Duchy_of_Schleswig_mayors .
  
  # Ensure the territory is also the birthplace of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?prince dbo:birthPlace ?territory .
  ?prince rdf:type dbo:Royalty .
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck ?prince .

  # Ensure the territory is a settlement
  ?territory rdf:type dbo:Settlement .

  # Link death place and birthplace to the same territory
  FILTER (?deathPlace = ?territory)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraPartyLeaderOffice ?madridTenantOffice ?manuelPintoDaCostaConflict WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura dbo:memberOf ?politicalParty .
  FILTER (str(?miguelMaura) = ""Miguel_Maura"")

  # Find the leader's office of that political party
  OPTIONAL {
    ?politicalPartyLeader dbo:partyLeader ?politicalParty ;
                         dbo:officeHolder ?miguelMauraPartyLeaderOffice .
  }

  # Find the tenant (leader) of Madrid in the same political party
  OPTIONAL {
    ?madridTenant dbo:memberOf ?politicalParty ;
                  dbo:officeHolder ?madridTenantOffice .
    FILTER (str(?madridTenant) = ""Madrid"")
  }
  
  # Find Manuel Pinto da Costa's military conflict as a commander
  OPTIONAL {
    ?manuelPintoDaCosta dbo:commander ?militaryConflict .
    FILTER (str(?manuelPintoDaCosta) = ""Manuel_Pinto_da_Costa"")
    BIND(str(?militaryConflict) AS ?manuelPintoDaCostaConflict)
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:occupation dbr:Television_show .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?location dbo:timeZone dbr:Japan_Standard_Time .
    ?birthPlace dbo:locatedIn ?location .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movieProducer WHERE {
  # Step 1: Find Ian Gregson's award
  ?ianGregson dbo:award ?award .
  
  # Step 2: Link the award to a movie
  ?award dbo:associatedFilm ?movie .

  # Step 3: Find Linda Bruckheimer's birth name and spouse
  dbr:Linda_Bruckheimer foaf:name ?lindaBirthName .
  ?spouse foaf:name ?lindaBirthName .
  
  # Link the spouse to Linda Bruckheimer
  ?spouse dbo:spouse dbr:Linda_Bruckheimer .

  # Step 4: Find the producer of the movie
  ?movie dbo:producer ?movieProducer .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Kid Rock's associated band
  dbr:Kid_Rock dbo:associatedBand ?band .

  # The Shadow as a fictional and comics character created by Walter B. Gibson
  VALUES ?shadowResource { 
    dbr:The_Shadow_(comics) 
  }
  ?shadowResource dbo:creator dbr:Walter_B._Gibson .
  
  # Ryan Cayabyab's profession as a producer
  dbr:Ryan_Cayabyab dbo:profession dbr:Music_producer .

  # Ensure the band is associated with Kid Rock, who is linked to The Shadow through professional roles
  FILTER EXISTS {
    ?band dbo:associatedMusicalArtist dbr:Kid_Rock .
  }
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?bandURL ?nickCurranAssociatedArtist WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person rdf:type dbo:MusicalArtist .

  # Determine which band they were part of
  ?person dbo:bandMemberOf ?bandURL .

  # Check for any connection between this band and The Fabulous Thunderbirds
  OPTIONAL {
    ?bandURL dbo:reference dbr:The_Fabulous_Thunderbirds .
  }

  # Find associated musical artists with Nick Curran
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
  
  FILTER (?person = ?nickCurranAssociatedArtist)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedMusicalArtist WHERE {
  VALUES ?lotusSong { dbr:Lotus_(R.E.M._song) }
  VALUES ?sappyAlbum { dbr:Sappy_(album) }

  ?producer dbo:producedBy ?lotusSong .
  FILTER (dbo:Organization IN (rdf:type/rdfs:subClassOf*)) .
  FILTER (dbo:Band IN (rdf:type/rdfs:subClassOf*)) .

  OPTIONAL {
    ?producer dbo:associatedMusicalArtist ?associatedMusicalArtist .
  }

  ?sappyAlbum dbo:writer ?writer .
  ?writer dbo:bandMember ?band .

  FILTER (?associatedMusicalArtist = ?band)
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  
  ?awardee dbo:associatedWithWar ?war .

  ?elena dbo:birthPlace ?birthPlace .
  ?entityInBirthPlace dbo:locatedIn ?birthPlace .
  FILTER (?entityInBirthPlace IN (dbr:Entity1, dbr:Entity2)) # Replace with actual entities related to the birthplace

  OPTIONAL {
    ?war dbo:associatedWith ?entityInBirthPlace .
  }
  
  VALUES ?elena { dbr:Elena_Žalinkevičaitė-Petrauskienė }
}
```

Note: The query assumes that `dbo:associatedWithWar` is the correct property to link individuals with wars. You may need to adjust this based on actual DBpedia properties. Additionally, replace `dbr:Entity1, dbr:Entity2` with specific entities related to Elena's birthplace.",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Lamont Cranston as The Shadow's alter ego
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .

  # Author of Smartbomb and associated movie
  dbr:Smartbomb dbo:author ?smartbombAuthor .
  ?movie dbo:writer ?smartbombAuthor .

  # T.I.'s song as a musical work and its album
  dbr:T.I. dbo:song ?tiSong .
  ?album dbo:track ?tiSong .
  
  # Actor associated with the album
  ?actor dbo:actedInAlbum ?album .

  # Linking all together to find the professional role of Lamont Cranston
  OPTIONAL {
    dbr:Lamont_Cranston dbo:profession ?professional .
  }

  FILTER (?smartbombAuthor IN (dbr:Movie_Author_1, dbr:Movie_Author_2)) # Placeholder for actual author resource
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee ?politicianParent WHERE {
  # Step 1: Find the award Rodney Lees received and its awardee's parent
  ?award dbo:recipient ?awardee .
  FILTER(?award = dbr:Award_of_Rodney_Lees) .
  OPTIONAL { ?awardee dbo:parent ?parentOfAwardee . }

  # Step 2: Find the Eton College alumnus with a child who is a politician and office holder
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?child dbo:parent ?alumnus .
  FILTER(?child rdf:type dbpedia-owl:Politician) .
  OPTIONAL { ?child dbo:officeHolder ?office . }

  # Step 3: Find Edward Stanley, 17th Earl of Derby's parent and their child
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?edwardParent .
  OPTIONAL { ?edwardChild dbo:parent ?edwardParent } .
  FILTER(?edwardChild rdf:type dbpedia-owl:Politician) .
  OPTIONAL { ?edwardChild dbo:officeHolder ?office2 . }

  # Combine the results to find the intersection
  VALUES ?politicianParent {
    ?parentOfAwardee
    ?alumnus
    ?edwardParent
  }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?madridLeaderResidence ?carCommanderOffice ?partyLeaderOffice WHERE {
  # Leader of the 2003 Madrid City Council election
  OPTIONAL {
    ?madridLeader dbo:officeHolder [
      a dbo:ElectedOfficial ;
      dbo:election dbr:Madrid_City_Council_election,_2003 .
    ].
    ?madridLeader dbo:residence ?madridLeaderResidence .
  }

  # Commander in the Central African Republic Civil War
  OPTIONAL {
    ?carCommander dbo:officeHolder [
      a dbo:MilitaryPerson ;
      dbo:politicalAffiliation ?carCommanderParty .
    ].
    ?carCommander dbo:residence ?carCommanderOffice .
    FILTER EXISTS { ?carCommander dbo:occupation dbr:Central_African_Republic_Civil_War }
  }

  # Leader of Miguel Maura's party
  OPTIONAL {
    ?miguelMauraParty dbo:headquarters ?partyLeaderOffice ;
                      dbo:leader ?partyLeader .
    ?miguelMauraParty dbo:member dbr:Miguel_Maura .
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Find Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Step 2: Find the child of Constance's spouse
  ?spouse dbo:child ?child .

  # Step 3: Find the grandchild (child of the child) who is royalty
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .

  # Step 4: Identify reference related to William I, who is royalty and an office holder
  dbr:William_I dbo:officeHolder ?reference .
  ?reference a dbo:Monarch .

  # Step 5: Find the parent of Roger II of Sicily's child who is royalty
  dbr:Roger_II_of_Sicily dbo:child ?rogerChild .
  ?rogerChild dbo:parent ?parentOfRogerChild .
  ?parentOfRogerChild a dbo:Monarch .

  # Step 6: Find the father of the reference's child (royalty)
  ?reference dbo:child ?referenceChild .
  ?referenceChild a dbo:Monarch .
  ?referenceChild dbo:father ?result .

  FILTER (?grandchild = ?parentOfRogerChild) 
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Anxo Quintana's association with the Spanish Socialist Workers' Party
  VALUES ?anxoQuintana { dbr:Anxo_Quintana }
  VALUES ?psOE { dbr:Spanish_Socialist_Workers'_Party }

  ?anxoQuintana dbo:memberOf ?psOE .

  # Find the country associated with Anxo Quintana or PSOE
  OPTIONAL {
    ?psOE dbo:country ?country .
  }
  
  OPTIONAL {
    ?anxoQuintana dbo:nationality ?nationality .
    ?nationality rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = ""en"")
  }

  # Find any administrative role or event where Anxo Quintana was a leader
  OPTIONAL {
    ?administration dbo:leader ?anxoQuintana .
    ?administration rdf:type dbo:Event .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tupacAssociatedArtist ?joeyBadassAssociatedArtist WHERE {
  VALUES ?tupacBirthName { dbr:Lesane_Parish_Crooks }
  OPTIONAL {
    ?tupacBirthName dbo:associatedMusicalArtist ?tupacAssociatedArtist .
  }

  VALUES ?joeyBadassBirthName { dbr:Jo-Vaughn_Virginie_Scott }
  OPTIONAL {
    ?joeyBadassBirthName dbo:associatedMusicalArtist ?joeyBadassAssociatedArtist .
  }

  FILTER EXISTS { 
    dbr:Rod_Argent a dbo:Musician .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedMusicalArtist dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  # Ensure the native place of the award is an American state and settlement
  ?nativePlace dbo:nativePlace ?award .
  FILTER (STRSTARTS(STR(?nativePlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?nativePlace a dbo:State . } &&
          EXISTS { ?nativePlace a dbo:Settlement . })

  # Find GS9 members who are artists
  ?gs9Member dbo:memberOf dbr:GS9 .
  FILTER (?gs9Member a dbo:Artist || ?gs9Member a dbo:MusicalArtist)

  # Find associated musical artist of the GS9 member
  ?gs9Member dbo:associatedMusicalArtist ?musicalArtist .

  # Identify band members born as Rondell Beekman (Bobby Shmurda)
  ?bandMember dbo:birthName dbr:Bobby_Shmurda .
  FILTER (?bandMember a dbo:BandMember)

  # Ensure the band member is associated with the musical artist
  ?musicalArtist dbo:associatedMusicalArtist ?bandMember .

}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Actor in ""Ab Kya Hoga""
  ?actor dbo:actedIn dbr:Ab_Kya_Hoga .
  
  # Politician profession
  ?actor dbo:profession dbr:Politician .

  # Movie/show with Richard E. Grant that is also a TV show
  ?movie dbo:starring dbr:Richard_E._Grant ;
         a dbo:TelevisionShow .
  ?actor dbo:actedIn ?movie .

  # Professional alter ego of The Shadow
  OPTIONAL {
    ?person dbo:alterEgo dbr:The_Shadow .
  }

  FILTER (?actor = ?person)
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfAward WHERE {
  ?award dbo:settlement ?settlement .
  ?settlement dbo:country dbr:United_States_of_America .
  
  ?recipient dbo:recipient ?award .
  ?recipient dbo:nationality dbr:New_York_(state) .

  ?parent dbo:child ?recipient ;
          dbo:occupation dbr:Actress .

  ?nativeOfAward dbo:nativePlace ?settlement .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  # Antonios Varthalitis death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Konstantinos Ventiris associated war
  OPTIONAL { 
    dbr:Konstantinos_Ventiris dbo:associatedWith ?konstantinosWar .
  }

  # Leader of National Party of Greece and their associated war
  OPTIONAL {
    dbr:National_Party_of_Greece dbo:leader ?partyLeader .
    ?partyLeader dbo:associatedWith ?nationalPartyWar .
  }
  
  # Ensure the death place is related to both wars
  FILTER EXISTS { ?konstantinosWar dbo:location ?deathPlace . }
  FILTER EXISTS { ?nationalPartyWar dbo:location ?deathPlace . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceURL ?settlementName WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Settlement ;
               dbo:country dbr:United_States_of_America .
    BIND(?birthPlace AS ?birthPlaceURL)
  }
  
  OPTIONAL {
    ?medalOfHonorAwardee dbo:associatedWith ?person .
    ?medalOfHonorAwardee dbo:relatedToWar ?war .
  }

  OPTIONAL {
    ?gillmoreMedalAwardee dbo:associatedWith ?person .
    ?gillmoreMedalAwardee dbo:partOfForce ?force .
  }
  
  FILTER EXISTS { ?birthPlaceURL }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?partyMember ?personWithBirthName WHERE {
  # Spouse of Roger Pryor (actor)
  OPTIONAL {
    dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .
  }

  # Party member of the ruling party in a landmark at elevation 20.116800000000001347
  OPTIONAL {
    ?landmark dbo:elevation ""20.1168""^^xsd:float ;
              dbo:rulingParty ?rulingParty .
    ?partyMember dbo:memberOf ?rulingParty .
  }

  # Person born as the birth name of the parent of Tisha Sterling
  OPTIONAL {
    dbr:Tisha_Sterling dbo:parent ?parent .
    ?parent foaf:birthdayName ?birthName .
    ?personWithBirthName foaf:birthdayName ?birthName .
  }
  
  FILTER (?spouse = ?partyMember && ?partyMember = ?personWithBirthName)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stuartAssociatedArtist ?wizardsWriterAssociatedArtist ?alanParsonsBandMember WHERE {
  # Find the associated musical artist of Stuart Mcbeath Tosh
  OPTIONAL {
    dbr:Stuart_McBeath_Tosh dbo:associatedMusicalArtist ?stuartAssociatedArtist .
  }

  # Find the writer of Wizards of Waverly Place (soundtrack) who is also a musical artist and an artist, then their associated musical artist
  OPTIONAL {
    ?wizardsWriter dbo:writer dbr:Wizards_of_Waverly_Place_(soundtrack) ;
                  rdf:type dbo:MusicalArtist , dbo:Artist .
    ?wizardsWriter dbo:associatedMusicalArtist ?wizardsWriterAssociatedArtist .
  }

  # Find a band member of The Alan Parsons Project
  OPTIONAL {
    ?alanParsonsBandMember dbo:bandMember dbr:The_Alan_Parsons_Project .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?laurynHillBirthplace ?ethanIversonWorkBirthplace WHERE {
  # Lauryn Hill's birthplace
  dbr:Lauryn_Hill dbo:birthPlace ?laurynHillBirthplace .
  
  # Ethan Iverson's associated work (musical artist)
  OPTIONAL {
    dbr:Ethan_Iverson dbo:associatedMusicalArtist ?ethanIversonWork .
    ?ethanIversonWork a dbo:Album ;
                     dbo:birthPlace ?ethanIversonWorkBirthplace .
  }
}
```",4,7,5,2,2,2,2,9,0,1,1,0.0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Richard E. Grant
  dbr:Richard_E._Grant dbo:birthName ""Richard Grant Esterhuysen""@en .
  
  # The Shadow video game's comics character alter ego
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow_(comics_character) .

  # Television show that is also a movie
  ?tvShow dbo:genre dbr:Television_series ;
          dbo:adaptationOf ?movie .
  
  # Actor who played in both the TV show/movie and The Shadow comics character
  ?actor dbo:profession dbr:Actor ;
         dbo:actedIn ?tvShow ;
         dbo:actedIn dbr:The_Shadow_(comics_character) .

  FILTER (?actor = dbr:Richard_E._Grant)
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
  # Christian Ditlev Ammentorp Hansen's death place
  dbr:Christian_Ditlev_Ammenhorst_Hansen dbo:deathPlace ?hansenDeathPlace .
  FILTER (rdf:type(?hansenDeathPlace, dbo:Settlement)) .

  # Territories administered from Hansen's death place
  ?territory dbo:administeredBy ?hansenDeathPlace .

  # Olaf I of Denmark and territories he administered
  dbr:Olaf_I_of_Denmark dbo:administers ?olafAdministeredTerritory .
  
  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck's birthplace
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:birthPlace ?princeBirthPlace .
  FILTER (rdf:type(?princeBirthPlace, dbo:Settlement)) .

  # Territories administered from Prince Christian's birthplace
  ?territory dbo:administeredBy ?princeBirthPlace .

  # Find common territories
  VALUES ?olafAdministeredTerritory { ?olafAdministeredTerritory }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?aStarIsBornProducer ?claimToFameProducer WHERE {
  # Producer of ""A Star Is Born"" (1937)
  VALUES ?aStarIsBorn { dbr:A_Star_Is_Born_(1937_film) }
  ?aStarIsBorn dbo:producer ?aStarIsBornProducer .

  # Actor of ""Johnny Doughboy""
  VALUES ?johnnyDoughboy { dbr:Johnny_Doughboy_(film) }
  ?johnnyDoughboy dbo:starring ?actor .
  
  # Claim to fame (work) of the actor
  OPTIONAL {
    ?actor dbo:notableWork ?claimToFame .
    ?claimToFame dbo:producer ?claimToFameProducer .
  }

  # Fictional character associated with Kent Allard
  VALUES ?kentAllard { dbr:Kent_Allard }
  ?kentAllard dbo:fictionalCharacter ?fictionalCharacter .

  FILTER (?actor = ?fictionalCharacter)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraPartyLeaderOffice ?centralAfricanRepublicCommanderOffice ?albertoRuizGallardonResidenceTenant WHERE {
  # Find Miguel Maura's political party
  OPTIONAL { 
    dbr:Miguel_Maura dbo:party ?miguelMauraParty .
    
    # Find the leader of that party and their office
    ?miguelMauraParty dbo:leader ?partyLeader .
    ?partyLeader dbo:office ?miguelMauraPartyLeaderOffice .
  }
  
  # Find a politician who was a commander in the Central African Republic Civil War
  OPTIONAL {
    ?commander dbo:office ?centralAfricanRepublicCommanderOffice ;
               dbo:occupation dbr:Military_person .
    
    FILTER(CONTAINS(LCASE(?centralAfricanRepublicCommanderOffice), ""central african republic civil war""))
  }
  
  # Find Alberto Ruiz-Gallardón's residence and its tenant
  OPTIONAL {
    dbr:Alberto_Ruiz-Gallardón dbo:residence ?albertoRuizGallardonResidence .
    ?albertoRuizGallardonResidence dbo:tenant ?albertoRuizGallardonResidenceTenant .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany ;
          rdf:type dbo:SportsManager .
  
  ?player dbo:managedBy ?person ;
          rdf:type dbo:SportsClub .

  ?season dbo:succeededBy dbr:2006–07_VfL_Bochum_season ;
          rdf:type dbo:FootballLeagueSeason .

  ?team dbo:participatedIn ?season ;
        dbo:manager ?manager .
  
  FILTER EXISTS { ?player dbo:member ?team }
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego
  VALUES ?shadowAlterEgo { dbr:The_Shadow }
  
  # Cora Sue Collins' claim to fame (work)
  ?coraSueCollins dbo:claimToFame ?collinsWork .
  
  # High Society Blues actor
  ?highSocietyBlues dbo:actor ?hsbActor .

  # Producer of Cora Sue Collins' work
  ?collinsWork dbo:producer ?professional .

  # Producer of the movie and work related to the actor of High Society Blues
  OPTIONAL {
    ?hsbActor dbo:claimToFame ?hsbWork .
    ?hsbWork dbo:producer ?professional .
  }

  # Ensure the professional is linked to both works
  FILTER (?collinsWork != ?hsbWork)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumURL ?actor WHERE {
  ?album a dbo:Album ;
         dbo:title ""Lasso the Moon"" ;
         dbo:film [] ;
         dbo:work [] .
  
  ?album dbo:artist ?actor .

  ?actor dbo:profession ?profession1 .
  dbr:Frédéric_Bouraly dbo:profession ?profession2 .

  FILTER (?profession1 = ?profession2)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tripleXCommander ?bayneMilitaryForce ?calderEvent WHERE {
  # Find the commander of The Triple X's in a military conflict
  OPTIONAL {
    ?tripleX dbr:The_Triple_Xs dbo:militaryConflict ?conflict .
    ?conflict dbo:commander ?tripleXCommander .
  }

  # Find the military force associated with William Bayne
  OPTIONAL {
    dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryForce ?bayneMilitaryForce .
  }

  # Find the event associated with Robert Calder
  OPTIONAL {
    dbr:Robert_Calder dbo:event ?calderEvent .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthCountry ?institution WHERE {
  # Find Little Hat Jones's birth place that is a country
  OPTIONAL {
    dbr:Little_Hat_Jones dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
    BIND(?birthPlace AS ?birthCountry)
  }
  
  # Find an institution in the administration of Brian Kemp
  OPTIONAL {
    dbr:Brian_Kemp dbo:positionHeld ?position .
    ?position dbo:organization ?institution .
  }
}
```",4,5,5,2,2,2,2,9,0,1,346,0.0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonArtist WHERE {
  # Find Stuart McBeath Tosh's associated musical artist
  dbr:Stuart_McBeath_Tosh dbo:associatedMusicalArtist ?stuartArtist .
  
  # Find David Paton's associated musical artist
  dbr:David_Paton dbo:associatedMusicalArtist ?davidArtist .
  
  # Find Billy Lyall's associated musical artist
  dbr:Billy_Lyall dbo:associatedMusicalArtist ?billyArtist .

  # Ensure all are the same musical artist
  FILTER (?stuartArtist = ?davidArtist)
  FILTER (?davidArtist = ?billyArtist)

  # Bind the common artist to a variable for output
  BIND(?davidArtist AS ?commonArtist)
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warURL ?tvShowURL ?countryOfResidence WHERE {
  # Find the war associated with Maria I of Portugal
  dbr:Maria_I_of_Portugal dbo:associatedWith ?war .
  
  # Check if this war is depicted in a TV show
  OPTIONAL { 
    ?war dbo:depicts ?tvShow .
    ?tvShow dbo:title ?tvShowURL .
  }
  
  # Find Dawid Olejniczak's country of residence
  dbr:Dawid_Olejniczak foaf:nationality ?countryOfResidence .
  
  # Bind the war URL for clarity in results
  BIND(?war AS ?warURL)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Béla IV of Hungary's child
  ?belasChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Child of Béla IV's child who is a royalty
  ?childOfChild dbo:parent ?belasChild .
  FILTER EXISTS { ?childOfChild rdf:type dbo:Monarch . }
  
  # Philip I, Prince of Taranto's father and his spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
  OPTIONAL {
    ?philipFather dbo:spouse ?philipSpouse .
  }

  # Spouse of Maria of Bytom and their parent who is a royalty
  ?mariaSpouse dbo:spouse dbr:Maria_of_Bytom .
  ?mariaSpouseParent dbo:parent ?mariaSpouse .
  FILTER EXISTS { ?mariaSpouseParent rdf:type dbo:Monarch . }

  # Linking the conditions together
  FILTER (?childOfChild = ?philipFather)
  FILTER (?philipSpouse = ?mariaSpouseParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Spouse of Saw Min Phyu
  ?spouse dbo:spouse dbr:Saw_Min_Phyu .
  
  # Child of the spouse (that is a royalty) of Saw Min Phyu
  ?child dbo:child ?spouse .
  FILTER EXISTS { ?spouse dbo:royalty . }
  
  # Predecessor of this child
  ?predecessor dbo:predecessor ?child .

  # Parent of Min Hla Htut of Pyakaung
  ?parent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .
  
  # Child of this parent
  ?anotherChild dbo:child ?parent .

  # Father of Myat Hpone Pyo
  ?father dbo:child dbr:Myat_Hpone_Pyo .
  
  # Spouse of this father (that is a royalty)
  ?royalSpouse dbo:spouse ?father .
  FILTER EXISTS { ?royalSpouse dbo:royalty . }

  # Ensure the predecessor matches the royal spouse
  FILTER (?predecessor = ?royalSpouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  VALUES ?londonNicknames { 
    ""The Heart of Pakistan"" 
    ""Paris of the East"" 
    ""City of Gardens"" 
    ""City of Literature""
  }
  
  ?city dbo:nickName ?londonNicknames .
  FILTER(?city = dbr:Lahore)
  
  OPTIONAL {
    ?show dbo:performer ?anumtaQureshi .
    ?anumtaQureshi rdfs:label ""Anumta Qureshi""@en .
    ?show dbo:subject ?city .
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark's parent (her father)
  dbr:Dorothea_of_Denmark dbo:parent ?dorotheasFather .
  
  # Parent of Dorothea's father (Dorothea's grandfather)
  ?dorotheasFather dbo:parent ?grandfather .

  # Grandfather is a commander in the Siege of Padua
  ?grandfather dbo:commanderInBattle dbr:Siege_of_Padua .

  # Grandfather is the father of Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:parent ?grandfather .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Duke Philipp of Württemberg's grandchild
  ?philippChild dbo:child ?grandchild1 .
  dbr:Duke_Philipp_of_Württemberg dbo:child ?philippChild .

  # Predecessor of the child of Philipp Albrecht, Duke of Württemberg
  ?albrechtChild dbo:child ?predecessor .
  dbr:Philipp_Albrecht,_Duke_of_Württemberg dbo:child ?albrechtChild .
  
  # Archduchess Margarete Sophie's grandchild
  ?margareteParent dbo:child ?margareteGrandparent .
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?margareteParent .
  ?margareteGrandparent dbo:child ?grandchild2 .

  # The individual must be the same in all three roles
  FILTER (?grandchild1 = ?predecessor && ?predecessor = ?grandchild2)

  # Ensure the individual is royalty
  ?individual rdf:type dbo:Monarch .
  FILTER (?individual = ?grandchild1)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfFinland ?decedentAtBirthplace ?nativeOfNicholasIIAdmin WHERE {
  # Person native to the Grand Duchy of Finland
  VALUES ?grandDuchyOfFinland { dbr:Grand_Duchy_of_Finland }
  
  ?person dbo:nativePlace ?grandDuchyOfFinland .
  BIND(?person AS ?nativeOfFinland)
  
  # Sandro Bertaggia's birthplace and decedent
  ?sandroBertaggia dbo:birthPlace ?birthPlaceCountry .
  FILTER (isBlank(?birthPlaceCountry) = false && a ?birthPlaceCountry <http://dbpedia.org/ontology/Country>)
  
  ?decedent dbo:deathPlace ?birthPlaceCountry .
  BIND(?decedent AS ?decedentAtBirthplace)
  
  # Nicholas II's administration country and native
  ?nicholasII dbo:administrativePost ?adminRole .
  ?adminRole dbo:country ?adminCountry .
  FILTER (a ?adminCountry <http://dbpedia.org/ontology/Country>)
  
  ?nativePerson dbo:nativePlace ?adminCountry .
  BIND(?nativePerson AS ?nativeOfNicholasIIAdmin)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfPeterIVURL ?realNameAlfonsoIVChild WHERE {
  VALUES ?peterIV { dbr:Peter_IV_of_Aragon }
  
  # Find the child of Peter IV who is royalty
  ?childOfPeterIV dbo:parent ?peterIV .
  FILTER EXISTS { ?childOfPeterIV a dbo:Monarch . }

  BIND(?childOfPeterIV AS ?childOfPeterIVURL)

  VALUES ?alfonsoIV { dbr:Alfonso_IV_of_Aragon }
  
  # Find the real name of the child of Alfonso IV who is royalty
  ?alfonsoIVChild dbo:parent ?alfonsoIV .
  FILTER EXISTS { ?alfonsoIVChild a dbo:Monarch . }

  BIND(str(?alfonsoIVChild) AS ?realNameAlfonsoIVChild)
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alfonso VI of León and Castile's child
  ?alfonsoVIChild dbo:childOf dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile .
  
  # Grandchild (child of the child)
  ?grandchild dbo:childOf ?alfonsoVIChild .

  # Parent of the grandchild
  ?parent dbo:parentOf ?grandchild .

  # Ensure this person is royalty and an office holder related to William I
  ?person dbo:royalty true .
  ?person dbo:officeHolder true .
  ?person dbo:relatedTo dbr:William_I_of_Aquitaine .

  # Parent of Roger III, Duke of Apulia
  ?rogerIIIParent dbo:parentOf dbr:Roger_III,_Duke_of_Apulia .

  # Find the common person fitting all criteria
  FILTER (?parent = ?person && ?person = ?rogerIIIParent)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowAlterEgo ?kidRockBand ?cokeStudioProducerProfession WHERE {
  # The Shadow's alter ego
  OPTIONAL { 
    dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  }
  
  # Kid Rock's band
  OPTIONAL {
    dbr:Kid_Rock dbo:associatedBand ?kidRockBand .
  }

  # Producer of Coke Studio Philippines' profession
  OPTIONAL {
    dbr:Coke_Studio_Philippines dbo:producer ?cokeStudioProducer .
    ?cokeStudioProducer dbo:profession ?cokeStudioProducerProfession .
  }
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfEricClapton ?fabulousThunderbirdsURL ?nickCurranAssociatedArtist WHERE {
  # Find bands associated with Eric Clapton
  VALUES ?ericClapton { dbr:Eric_Clapton }
  ?bandOfEricClapton dbo:bandMember ?ericClapton .

  # Reference to The Fabulous Thunderbirds' real name
  VALUES ?fabulousThunderbirdsURL { dbr:The_Fabulous_Thunderbirds }

  # Find associated musical artist of Nick Curran
  VALUES ?nickCurran { dbr:Nick_Curran }
  OPTIONAL {
    ?nickCurran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationEvent WHERE {
  VALUES ?anxoQuintana { dbr:Anxo_Quintana }
  VALUES ?alvaroQuirós { dbr:Álvaro_Quirós }
  VALUES ?spanishCountry { dbr:Spain }
  VALUES ?spanishSocialistWorkersParty { dbr:Spanish_Socialist_Workers'_Party }

  ?administrationEvent dbo:leader ?anxoQuintana .
  ?administrationEvent dbo:member ?alvaroQuirós .
  ?administrationEvent dbo:country ?spanishCountry .
  ?administrationEvent dbo:party ?spanishSocialistWorkersParty .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bidenWorkAuthor ?commanderBook WHERE {
  # Find works authored by Joe Biden
  ?work dbo:author dbr:Joe_Biden .
  
  # Ensure the work is a book and American
  ?work rdf:type dbo:Book ;
        dbo:country dbr:United_States .

  # Find the commander of North Carolina Air National Guard who is an office holder and politician
  ?commander dbo:officeHolder ?position ;
            dbo:positionHeld dbr:North_Carolina_Air_National_Guard_Commander ;
            rdf:type dbo:Politician .
  
  # Ensure the commander's work is a book and American
  ?commanderBook dbo:author ?commander ;
                 rdf:type dbo:Book ;
                 dbo:country dbr:United_States .

  # Bind Joe Biden's authorship to the commander's book
  FILTER (?work = ?commanderBook)
  
  BIND(dbr:Joe_Biden AS ?bidenWorkAuthor)
}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAthens WHERE {
  # Find the leader of the National Party of Greece
  ?leader dbo:partyLeader dbr:National_Party_of_Greece .
  
  # Find wars associated with this leader
  ?war dbo:associatedWith ?leader .

  # Find the awardee in 1930 and their associated wars
  ?awardee dbo:award dbr:Nobel_Prize_in_1930 .
  ?war2 dbo:associatedWith ?awardee .

  # Ensure both entities are linked to Athens
  ?entityInAthens dbo:location dbr:Athens .
  
  FILTER (?leader = ?entityInAthens || ?awardee = ?entityInAthens)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfGrandparent WHERE {
  # Identify Saw Shwe Khet and his child
  ?sawShweKhet a dbo:Person ;
               dbo:child ?childSawShweKhet .
  
  # Find Min Hla Htut's parent and predecessor
  ?minHlaHtutParent a dbo:Person ;
                    dbo:parentOf dbr:Min_Hla_Htut_of_Pyakaung ;
                    dbo:predecessor ?predecessor .

  # Ensure the child of Saw Shwe Khet is royalty
  ?childSawShweKhet dbo:title ?royaltyTitle .
  
  # Find the father (grandparent) of Saw Shwe Khet's child
  ?fatherOfChild a dbo:Person ;
                dbo:child ?childSawShweKhet ;
                dbo:spouse ?spouseOfGrandparent .

  # Ensure the spouse is royalty
  ?spouseOfGrandparent dbo:title ?royaltyTitle2 .
  
  # Link Saw Shwe Khet's child to Min Hla Htut's predecessor
  FILTER (?childSawShweKhet = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rustlersActor ?shadowProfessional ?fredericProfession WHERE {
  # Actor of Rustlers' Rhapsody
  OPTIONAL { 
    dbr:Rustlers'_Rhapsody dbo:starring ?rustlersActor .
  }
  
  # Professional known as The Shadow
  OPTIONAL {
    ?shadowProfessional rdfs:label ""The Shadow""@en ;
                        a dbo:Agent .
  }

  # Frédéric Bouraly's profession
  OPTIONAL {
    dbr:Frédéric_Bouraly dbo:profession ?fredericProfession .
  }
  
  # Check if they are the same individual
  FILTER (?rustlersActor = ?shadowProfessional && ?rustlersActor = ?fredericProfession)
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorURL ?battleCommander ?successorPolitician WHERE {
  # Find the author of ""Always the Love Songs""
  OPTIONAL { 
    ?work dbo:title ""Always the Love Songs"" .
    ?work dbo:author ?authorURL .
  }
  
  # Identify the commander in the Battle of Vienna
  OPTIONAL {
    ?battle dbr:Battle_of_Vienna ;
            dbo:commander ?battleCommander .
  }

  # Find the successor who is a politician involved in the Russo-Polish War
  OPTIONAL {
    ?successorPolitician dbo:successorOf ?battleCommander ;
                         dbo:officeHolder ""Russo-Polish War (1654–1667)""^^xsd:string .
  }
  
  FILTER (?authorURL = ?battleCommander || ?authorURL = ?successorPolitician)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?santiagoTenant ?residenceCountry ?anxoEvent WHERE {
  # Tenant of Santiago de Compostela
  OPTIONAL { 
    dbr:Santiago_de_Compostela dbo:tenant ?santiagoTenant .
  }
  
  # Residence country of a Spanish citizen
  OPTIONAL {
    ?spanishCitizen dbo:nationality dbr:Spain ;
                   dbo:residenceCountry ?residenceCountry .
  }

  # Events related to Anxo Quintana's office
  OPTIONAL {
    dbr:Anxo_Quintana dbo:office ?anxoEvent .
  }
}
```",7,10,8,3,3,3,3,71,0,2,1,0.0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Find Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa .

  # Step 2: Find the parent of that child (Minye Kyawswa or his spouse)
  ?parent dbo:spouse ?minyeKyawswa .
  FILTER (?minyeKyawswa = dbr:Minye_Kyawswa || ?minyeKyawswaChild = ?parent)

  # Step 3: Find Myat Hpone Pyo's predecessor
  ?myatHponePyo dbo:predecessor ?predecessor .

  # Step 4: Identify Saw Shwe Khet's child that is royalty
  ?sawShweKhetChild dbo:childOf dbr:Saw_Shwe_Khet .
  FILTER (?sawShweKhetChild rdf:type dbo:Monarch)

  # Step 5: Find the father of that child and his spouse
  ?father dbo:spouse ?sawShweKhetChildFatherSpouse .
  FILTER (?sawShweKhetChild = ?father || ?sawShweKhetChildFatherSpouse rdf:type dbo:Monarch)

  # Step 6: Combine these relationships to find the result
  VALUES ?result { ?predecessor ?parent ?sawShweKhetChildFatherSpouse }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?commanderName ?ownerName ?spouseName ?bookTitle WHERE {
  # Step 1: Find the author of ""Back to Work""
  VALUES ?backToWork { dbr:Back_to_Work_(2011_book) }
  ?backToWork dbo:author ?author .
  ?author rdfs:label ?authorName .

  # Step 2: Find the commander in a war that is a disease and societal event
  # This step requires interpretation; assuming it refers to a historical figure like Winston Churchill during WWII
  VALUES ?commander { dbr:Winston_Churchill }
  ?commander rdfs:label ?commanderName .

  # Step 3: Find the owner of USS Arcadia (ID-1605)
  VALUES ?ussArcadia { dbr:USS_Arcadia_(ID-1605) }
  ?ussArcadia dbo:owner ?owner .
  ?owner rdfs:label ?ownerName .

  # Step 4: Find the spouse of the author
  OPTIONAL {
    ?author dbo:spouse ?spouse .
    ?spouse rdfs:label ?spouseName .
  }

  # Step 5: Check if the spouse is a politician and office holder
  OPTIONAL {
    ?spouse dbo:officeHolder ?office .
    FILTER EXISTS { ?office rdf:type dbo:PoliticalOffice }
  }

  # Step 6: Find Hillary Clinton's book
  VALUES ?hillaryBook { dbr:It_Took_a_Village }
  ?hillaryBook rdfs:label ?bookTitle .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Constance of Burgundy's lineage
  dbr:Constance_of_Burgundy dbo:spouse dbr:Robert_I_of_France .
  dbr:Robert_I_of_France dbo:child dbr:Henry_I_of_France .
  dbr:Henry_I_of_France dbo:child ?matildaOfFrance .
  ?matildaOfFrance a dbo:Monarch .

  # Roger II of Sicily's lineage
  ?matildaOfFrance dbo:spouse dbr:Roger_II_of_Sicily .
  ?royalChild dbo:parent ?matildaOfFrance ;
              dbo:parent dbr:Roger_II_of_Sicily ;
              a dbo:Monarch .

  # William II of Sicily
  ?royalChild dbo:child dbr:William_II_of_Sicily .
  
  FILTER (?individual = ?royalChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Yandamuri Veerendranath's birthplace
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .

  # Australian Laureate Fellowship awardees who are scientists and Australian
  ?awardee dbo:nationality dbr:Australia ;
          dbo:occupation dbo:Scientist ;
          dbo:awardReceived dbr:Australian_Laureate_Fellowship .
  
  # Alma mater of the awardee
  ?awardee dbo:almaMater ?entity .

  # Match alma mater with Yandamuri Veerendranath's birthplace
  FILTER (?entity = ?birthPlace)
}
```",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace 
       ?skyRangerActor ?skyRangerActorDeathPlace 
       ?colorMeDeadActor ?colorMeDeadActorDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # The Sky Ranger (1928) actor and their death place
  OPTIONAL {
    dbr:The_Sky_Ranger_1928 dbo:starring ?skyRangerActor .
    ?skyRangerActor dbo:deathPlace ?skyRangerActorDeathPlace .
  }

  # Color Me Dead actor and their death place
  OPTIONAL {
    dbr:Color_Me_Dead dbo:starring ?colorMeDeadActor .
    ?colorMeDeadActor dbo:deathPlace ?colorMeDeadActorDeathPlace .
  }
}
```",5,5,6,2,3,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?doonArbusParent ?eugeneCattinProfession ?actorOfMovie ?movie WHERE {
  # Find parent of Doon Arbus
  OPTIONAL { 
    dbr:Doon_Arbus dbo:parent ?doonArbusParent .
  }
  
  # Find profession of Eugène Cattin
  OPTIONAL {
    dbr:Eugène_Cattin dbo:occupation ?eugeneCattinProfession .
  }

  # Find actor of a movie where someone died in Los Angeles
  OPTIONAL {
    ?movie dbo:actor ?actorOfMovie ;
           dbo:deathPlace dbr:Los_Angeles, California .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?alumnus dbo:alumnus dbr:Eton_College .
  ?child dbo:parent ?alumnus .
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order ;
           dbo:parent ?alumnus .
  ?derbyChild dbo:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby ;
              dbo:parent ?alumnus .
  ?politician dbo:child ?alumnus ;
              a dbo:Politician .
  ?father dbo:child ?politician .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalSpouse WHERE {
  # Step 1: Find Duchess Luise's spouse
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?luiseSpouse .

  # Step 2: The spouse of the spouse is Duchess Luise herself, so we skip to her child's parent who is royalty

  # Step 3: Find Ferdinand Albert II's child
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?ferdinandChild .

  # Step 4: Identify the parent of that child who is royalty
  ?ferdinandChild dbo:parent ?royalParent .
  FILTER EXISTS { ?royalParent rdf:type dbo:Monarch }

  # Step 5: Find the spouse of this royal parent
  ?royalParent dbo:spouse ?finalSpouse .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfCommander ?grandfather ?childOfBaedaMaryamI WHERE {
  VALUES ?siege { dbr:Siege_of_Mukha }
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }

  ?commander dbo:commanderOf ?siege .
  FILTER (dbo:royalty(?commander)) .

  ?childOfCommander dbo:child ?commander .
  FILTER (dbo:royalty(?childOfCommander)) .

  ?grandfather dbo:parent ?childOfCommander .
  FILTER (dbo:royalty(?grandfather) && dbo:officeHolder(?grandfather)) .

  ?childOfBaedaMaryamI dbo:child ?baedaMaryamI .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Allan Arbus's child and their parent
  ?allanArbusChild dbo:childOf dbr:Allan_Arbus .
  ?parentOfChild dbo:parentOf ?allanArbusChild .

  # Eugène Cattin's profession and a professional in that field, then their parent
  ?eugeneCattin dbo:profession ?profession .
  ?professionalInProfession dbo:profession ?profession .
  ?parentOfProfessional dbo:parentOf ?professionalInProfession .

  # Herschel Bernardi's movie and its work
  ?movie dbo:actor dbr:Herschel_Bernardi .
  ?work dbo:work ?movie .

  # Find the common entity among these paths
  VALUES ?commonEntity {
    ?parentOfChild
    ?parentOfProfessional
    ?work
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find the author of ""An Invitation to the White House""
  ?book dbo:author ?author .
  FILTER(STR(?book) = ""An_Invitation_to_the_White_House"")

  # Step 2: Check if the author is a politician and office holder
  OPTIONAL { ?author dbo:officeHolder ?office . }
  
  # Step 3: Find the spouse of this author
  ?author dbo:spouse ?spouse .

  # Step 4: Identify the commander in the war related to ""United States Navy""
  ?war dbo:commander ?commander .
  FILTER(STR(?war) = ""American_Civil_War"") # Assuming Civil War for historical context

  # Step 5: Link this commander to a disease and societal event
  OPTIONAL { ?disease dbo:societalEvent ?societalEvent . }
  OPTIONAL { ?commander dbo:associatedWith ?disease . }

  # Step 6: Identify the author of a work related to a resident of Chappaqua, New York
  ?resident dbo:livesIn dbr:Chappaqua,_New_York .
  ?work dbo:author ?commander .
  
  FILTER(?author = ?commander)
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the movie that is Janet Gaynor's claim to fame
  VALUES ?janetGaynorMovie { 
    dbr:The_Janet_Gaynor_Claim_to_Fame_Movie # Placeholder for actual resource
  }
  
  # The producer of this movie
  ?janetGaynorMovie dbo:producer ?producer .
  
  # Find the connection to The Shadow
  OPTIONAL {
    ?shadowEntity dbo:alterEgo dbr:The_Shadow .
    ?shadowEntity dbo:producedWork ?janetGaynorMovie .
  }
  
  # Identify Johnny Doughboy's work and its producer
  VALUES ?johnnyDoughboy { 
    dbr:Johnny_Doughboy # Placeholder for actual resource
  }
  
  ?johnnyDoughboyWork dbo:starring ?johnnyDoughboy .
  ?johnnyDoughboyWork dbo:producer ?sameProducer .
  
  FILTER (?producer = ?sameProducer)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?skyRangerActorDeathPlace ?carolynJonesDeathPlace ?aladdinActorDeathPlace WHERE {
  # Find the actor of ""The Sky Ranger"" (1928) and their death place
  OPTIONAL {
    ?movie dbo:title ""The Sky Ranger""@en .
    FILTER(YEAR(?movie dbo:releaseDate) = 1928)
    ?movie dbo:actor ?skyRangerActor .
    ?skyRangerActor dbo:deathPlace ?skyRangerActorDeathPlace .
  }

  # Find Carolyn Jones's death place
  OPTIONAL {
    dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
  }
  
  # Find the actor of ""Aladdin"" (1958) and their death place
  OPTIONAL {
    ?movie2 dbo:title ""Aladdin""@en .
    FILTER(YEAR(?movie2 dbo:releaseDate) = 1958)
    ?movie2 dbo:actor ?aladdinActor .
    ?aladdinActor dbo:deathPlace ?aladdinActorDeathPlace .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalChild WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?predecessor dbo:predecessor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Identify Philip, Despot of Romania's parent (father)
  ?philipParent dbo:child dbr:Philip_Despot_of_Romania ;
               a dbo:Man .

  # Find the spouse of this father
  ?spouse dbo:spouse ?philipParent .
  
  # Step 3: Identify Charles Martel of Anjou's parent
  ?charlesParent dbo:child dbr:Charles_Martel_of_Anjou ;
                 a dbo:Man .

  # Ensure the spouse is also a royalty and related to Charles Martel's parent
  FILTER (?spouse = ?charlesParent) .
  
  # Step 4: Find child of this spouse (from step 2)
  ?childOfSpouse dbo:child ?spouse ;
                a dbo:Person .

  # Find the child of this child
  ?finalChild dbo:child ?childOfSpouse ;
              a dbo:Person .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?spouseName WHERE {
  # Find Bill Clinton's book ""An Invitation to the White House""
  VALUES ?book { dbr:An_Invitation_to_the_White_House }
  
  # Identify Bill Clinton as the author
  ?book dbo:author ?billClinton .
  ?billClinton rdfs:label ?authorName .

  # Find Hillary Clinton as his spouse and verify her roles
  ?billClinton dbo:spouse ?hillaryClinton .
  ?hillaryClinton rdfs:label ?spouseName .
  
  # Verify Hillary Clinton's role as a politician and office holder
  ?hillaryClinton dbo:officeHolder ?office .

  # Find USS Arcadia and its association with World War I
  dbr:USS_Arcadia_(ID-1605) dbo:owner dbr:United_States .
  dbr:World_War_I dbo:commander ?commander .

  # Ensure the commander is associated with USS Arcadia
  OPTIONAL {
    ?commander dbo:ship ?arcadia .
    FILTER (?arcadia = dbr:USS_Arcadia_(ID-1605))
  }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?christianIXAdministration ?hansenDeathPlace ?mayorOfSchleswig WHERE {
  # Administration related to Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:administeredBy ?christianIXAdministration .

  # Place of death for Christian Ditlev Ammentorp Hansen that is a settlement
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:placeOfDeath ?hansenDeathPlace .
  FILTER (isBlank(?hansenDeathPlace) || (
    ?hansenDeathPlace dbo:type dbr:Settlement
  ))

  # Mayor of Duchy of Schleswig
  OPTIONAL {
    dbr:Duchy_of_Schleswig dbo:mayor ?mayorOfSchleswig .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfRoyalParent WHERE {
  # Step 1: Identify Philip, Despot of Romania
  VALUES ?philip { dbr:Philip_Despot_of_Romania }

  # Step 2: Find his parent that is royalty
  ?philip dbo:parent ?royalParent .
  
  # Assuming a property or class to identify royalty (e.g., dbo:monarch)
  ?royalParent rdf:type dbo:Monarch .

  # Step 3: Determine the spouse of this royal parent
  ?royalParent dbo:spouse ?spouseOfRoyalParent .

  # Step 4: Identify Maria of Bytom
  VALUES ?maria { dbr:Maria_of_Bytom }

  # Step 5: Find her spouse
  ?maria dbo:spouse ?spousesMaria .

  # Step 6: Identify the father of this spouse that is royalty
  ?spousesMaria dbo:parent ?royalFather .
  
  ?royalFather rdf:type dbo:Monarch .

  # Step 7: Determine the child of Stephen V of Hungary
  VALUES ?stephenV { dbr:Stephen_V_of_Hungary }
  ?stephenV dbo:child ?royalChild .
  
  FILTER (?royalChild = ?royalFather)

  # Step 8: Find the spouse of this royal child
  ?royalChild dbo:spouse ?spouseOfRoyalParent .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the fictional character associated with Kent Allard
  OPTIONAL { 
    dbr:Kent_Allard dbo:fictionalAlterEgo ?fictionalCharacter .
  }
  
  # Identify a work related to Cora Sue Collins
  OPTIONAL {
    ?coraSueWork dbo:creator dbr:Cora_Sue_Collins .
  }

  # Identify a movie involving Janet Gaynor
  OPTIONAL {
    ?janetGaynorMovie dbo:starring dbr:Janet_Gaynor .
  }
  
  # Find the professional linked to all these entities
  ?professional dbo:creator ?coraSueWork ;
                dbo:director ?janetGaynorMovie ;
                dbo:fictionalAlterEgo ?fictionalCharacter .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?manager a dbo:SoccerManager ;
           dbo:sportsManager true ;
           dbo:manager dbr:Hong_Kong_C_Team .
  
  ?player dbo:playerInTeam dbr:Hong_Kong_C_Team ;
          a dbo:Athlete, dbo:SoccerPlayer ;
          dbo:birthday ?birthday .

  ?hollings dbo:birthday ?birthday ;
            rdfs:label ""Tony Hollings""@en .

  FILTER (?manager = ?player)
}
```",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producerMusicalArtistURL ?bobThompsonBand ?bobThompsonBirthName WHERE {
  # Find the producer of Coke Studio Philippines who is a musical artist
  ?cokeStudio dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer foaf:name ?producerName ;
            dbo:musicalArtist ?producerMusicalArtistURL .

  # Find Bob Thompson's band and birth name
  ?bobThompson dbr:Bob_Thompson_(musician) dbo:band ?bobThompsonBand ;
               foaf:name ?bobThompsonBirthName .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip's father who is royalty
  ?philip dbo:child ?father .
  ?father rdf:type dbpedia-owl:Monarch .

  # Step 2: Identify the spouse of Philip's father
  ?father dbo:spouse ?spouse .

  # Step 3: Identify Béla IV's child who is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  ?belasChild rdf:type dbpedia-owl:Monarch .

  # Step 4: Identify the parent (father) of Béla IV's child's child who is royalty
  ?belasGrandchild dbo:child ?parentOfBelasGrandchild .
  ?parentOfBelasGrandchild rdf:type dbpedia-owl:Monarch .

  # Step 5: Identify Charles I's father who is royalty
  dbr:Charles_I_of_Hungary dbo:father ?charlesFather .
  ?charlesFather rdf:type dbpedia-owl:Monarch .

  # Connecting the relationships
  FILTER (?parentOfBelasGrandchild = ?charlesFather)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nobelPrizeURL ?hostInstitution WHERE {
  VALUES ?rainerWeiss { dbr:Rainer_Weiss }
  
  ?award dbo:recipient ?rainerWeiss .
  ?award a dbo:NobelPrizeInPhysics .
  BIND(?award AS ?nobelPrizeURL)
  
  OPTIONAL {
    ?award dbo:hostInstitution ?hostInstitution .
  }
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?awardShowAward ?gillmoreMedalForce WHERE {
  # Henry Clay Lewis's birthplace that is an American settlement
  OPTIONAL {
    dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Settlement ;
               dbo:country dbr:United_States .
    BIND(?birthPlace AS ?settlement)
  }
  
  # Award show of United States Congress and its awardee
  OPTIONAL {
    ?awardShow dbo:organizer dbr:United_States_Congress ;
              dbo:award ?awardShowAward .
    ?awardShowAward dbo:recipient ?awardee .
  }

  # Gillmore Medal and the force of its awardee
  OPTIONAL {
    dbr:Gillmore_Medal dbo:recipient ?gillmoreRecipient .
    ?gillmoreRecipient dbo:militaryForce ?gillmoreMedalForce .
  }
}
```",7,10,8,3,3,3,3,71,0,1,1,0.0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor WHERE {
  # Identify the Great Turkish War event
  VALUES ?greatTurkishWar { dbr:The_Great_Turkish_War }

  # Find the commander of the force in this war
  ?force dbo:partOfEvent ?greatTurkishWar .
  ?force dbo:commander ?commander .

  # Identify the successor who is a politician and office holder
  OPTIONAL {
    ?successor dbo:succeededBy ?commander ;
              a dbo:Politician ;
              dbo:officeHolder true .
  }

  # Ensure the successor is linked to George Ducas' work
  ?work dbo:author ?successor ;
        dbo:wikiPageRedirects dbr:George_Ducas .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderResidence ?georgeHamiltonCameronHonour WHERE {
  # Find the leader of the Ulster Unionist Party and their residence
  ?party dbo:leader ?leader .
  FILTER (str(?party) = ""Ulster_Unionist_Party"")
  ?leader dbo:residence ?leaderResidence .

  # Find George Hamilton Cameron's honours
  dbr:George_Hamilton_Cameron dbo:honours ?georgeHamiltonCameronHonour .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?samProfession ?robertBand ?fictionalCharacter WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Band associated with Robert Lamar Thompson (born as such)
  ?person foaf:name ""Robert Lamar Thompson""@en .
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  ?person dbo:associatedBand ?robertBand .
  
  # Fictional character created by Walter B. Gibson
  dbr:Walter_B._Gibson dbo:creator ?fictionalCharacter .
  ?fictionalCharacter a dbo:FictionalCharacter ;
                     dbo:fictionalWork ?comicsWork .
  ?comicsWork a dbo:ComicBook .

  # Linking through professional roles or associations
  FILTER (?samProfession = ?robertBand || ?samProfession = ?fictionalCharacter)
}
```",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Find the parent of Roger III, Duke of Apulia
  ?rogerIII dbo:child dbr:Roger_III,_Duke_of_Apulia .
  ?parent dbo:child ?rogerIII .

  # Step 2: Find the child of this parent
  ?childOfParent dbo:parent ?parent .

  # Step 3: Identify Constance of Burgundy's spouse and their child who is royalty
  dbr:Constance_of_Burgundy dbo:spouse ?constanceSpouse .
  ?royaltyChild dbo:parent ?constanceSpouse .
  FILTER (dbo:Person ?royaltyChild) .

  # Step 4: Find the father of this royal child
  ?fatherOfRoyaltyChild dbo:child ?royaltyChild .

  # Step 5: Identify William I of Sicily's child who is royalty and their father
  dbr:William_I_of_Sicily dbo:child ?williamIChild .
  FILTER (dbo:Person ?williamIChild) .
  ?fatherOfWillChild dbo:child ?williamIChild .

  # Final step: Match the conditions to find the result
  FILTER (?childOfParent = ?fatherOfRoyaltyChild)
  FILTER (?fatherOfWillChild = ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfAdministration WHERE {
  # Find the administration associated with PSOE
  ?administration dbo:associatedParty dbr:Spanish_Socialist_Workers'_Party .
  
  # Ensure the administration is Spanish
  ?administration dbo:country dbr:Spain .

  # Find Álvaro Quirós's office in the 2009 Galician regional election
  ?office dbo:election dbr:2009_Galician_regional_election ;
          dbo:incumbent dbr:Álvaro_Quirós .
  
  # Ensure the office is related to the administration found above
  ?office dbo:partOf ?administration .

  # Find Álvaro Quirós's residence country
  dbr:Álvaro_Quirós dbo:residence ?residenceCountry .
  
  # Ensure the residence country is a country entity
  ?residenceCountry rdf:type dbo:Country .
  
  # Bind the administration as the tenant of interest
  BIND(?administration AS ?tenantOfAdministration)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandChildOfYeshaqI ?parentOfBaedaMaryamIClone WHERE {
  # Yeshaq I's child who is royalty
  ?yeshaqIChild dbo:child dbr:Yeshaq_I ;
                a dbo:Monarch .
  
  # Grandchild of Yeshaq I (child of his child) who is royalty and an office holder
  ?grandChildOfYeshaqI dbo:child ?yeshaqIChild ;
                      a dbo:Monarch ;
                      dbo:officeHolder ?office .

  # Baeda Maryam I's child
  ?baedaMaryamIClone dbo:child dbr:Baeda_Maryam_I .
  
  # Parent of Baeda Maryam I's child who is royalty and an office holder
  ?parentOfBaedaMaryamIClone dbo:child ?baedaMaryamIClone ;
                            a dbo:Monarch ;
                            dbo:officeHolder ?office2 .

  # The Shadow's alter ego or reference
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  }

  FILTER (?grandChildOfYeshaqI = ?parentOfBaedaMaryamIClone)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lamontCranston ?jonathanManaloProfession ?bobThompsonBand WHERE {
  VALUES ?lamontCranston { 
    dbr:Lamont_Cranston
  }
  VALUES ?jonathanManaloProfession { 
    dbr:Jonathan_Manalo dbo:profession dbr:Music_producer .
  }
  VALUES ?bobThompsonBand { 
    dbr:The_Shadows dbo:bandMember dbr:Bob_Thompson .
  }
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?person WHERE {
  # Find ruling party in Central, Louisiana
  ?centralLocation a dbo:City ;
                   dbo:country dbr:United_States ;
                   dbo:stateOrProvince dbr:Louisiana .
  
  ?rulingParty dbo:location ?centralLocation ;
               dbo:member ?partyMember .

  # Identify Tisha Sterling's parent and their birth name
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling""^^xsd:string .
  
  ?parent dbo:child ?tishaSterling ;
          dbo:birthName ?birthName .

  # Find the actor of ""1,000 Dollars a Minute"" and their spouse
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?actor dbo:actedIn ?movie ;
         dbo:spouse ?spouse .

  # Linking conditions
  FILTER (?person = ?birthName && ?partyMember = ?spouse)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumActor ?movieActor WHERE {
  # Find T.I.'s album which is both a song and a musical work
  VALUES ?tiAlbum { 
    dbr:T.I.#<insert_album_resource_here> # Placeholder for the specific album resource
  }
  
  ?tiAlbum dbo:artist dbr:T.I. .
  ?tiAlbum a dbo:Song ;
           a dbo:MusicalWork .

  OPTIONAL {
    ?albumActor dbo:actorIn ?tiAlbum .
  }

  # Find The Shadow's alter ego and associated movie
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .
  
  ?movie dbo:starring ?shadowMovieActor ;
         dbo:character dbr:The_Shadow .

  OPTIONAL {
    ?shadowMovieActor rdfs:label ?actorLabel .
    FILTER (CONTAINS(LCASE(?actorLabel), ""lamont cranston""))
  }

  # Find common actor
  VALUES ?commonActor { 
    ?albumActor
    ?shadowMovieActor
  }
  
  FILTER (?albumActor = ?shadowMovieActor)
}
```

Note: The placeholder `<insert_album_resource_here>` should be replaced with the specific DBpedia resource for T.I.'s album that fits the criteria.",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Identify José Luis Rodríguez Zapatero
  VALUES ?zapatero { dbr:José_Luis_Rodríguez_Zapatero }
  
  # Ensure he is a Spanish citizen and associated with PSOE
  ?zapatero dbo:nationality dbr:Spain .
  ?zapatero dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .

  # Find his role in the 2009 Galician regional election
  ?zapatero dbo:office dbr:Prime_Minister_of_Spain ;
            dbo:termStart ?start ;
            dbo:termEnd ?end .
  
  FILTER (?start <= ""2009-01-01""^^xsd:date && ?end >= ""2009-12-31""^^xsd:date)

  # Determine his place of residence and its country
  ?zapatero dbo:residence ?residence .
  ?residence dbo:country ?country .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerOfTeam ?playerManaged WHERE {
  # Thomas Letsch as manager in 2007-08 VfL Bochum season
  VALUES ?vflBochumSeason { 
    dbr:2007–08_VfL_Bochum_season 
  }
  
  ?vflBochumSeason dbo:manager ?letsch .
  ?letsch foaf:name ""Thomas Letsch"" .

  # VfL Bochum as a soccer club and organization
  ?vflBochumSeason dbo:sportTeam dbr:VfL_Bochum .
  
  OPTIONAL {
    ?player dbo:playsFor dbr:VfL_Bochum ;
            dbo:manager ?letsch .
    BIND(?letsch AS ?managerOfTeam)
    BIND(?player AS ?playerManaged)
  }
  
  # Leader of West Germany (likely a chancellor) and their native country
  ?leader foaf:nationality ?nativeCountry .
  ?leader rdf:type dbo:Chancellor ;
          dbo:country dbr:West_Germany .

  FILTER (?nativeCountry = <http://dbpedia.org/resource/Some_Country>) # Replace with actual country URI if known

}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInWarTVShowEvent ?successorCommanderPolitician ?forceEventMilitaryConflict ?writerAlwaysTheLoveSongs WHERE {
  OPTIONAL {
    ?jeanBaptist dbr:Jean_Baptiste,_Comte_d'Arco dbo:commander ?commanderInWarTVShowEvent .
    ?commanderInWarTVShowEvent (dbo:genre|dbo:category) dbr:Television_show ;
                                 (dbo:genre|dbo:category) dbr:Societal_event .
  }
  
  OPTIONAL {
    ?michalKazimierzPac dbr:Mikołaj_Kazimierz_Paszczyński dbo:commander ?forceEventMilitaryConflict .
    ?successorCommanderPolitician dbo:officeHolder ?michalKazimierzPac ;
                                  dbo:commander ?forceEventMilitaryConflict .
  }
  
  OPTIONAL {
    dbr:Always_the_Love_Songs dbo:author ?writerAlwaysTheLoveSongs .
  }

  FILTER (?jeanBaptist = ?successorCommanderPolitician)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Philipp Albrecht's child
  ?philippChild dbo:childOf dbr:Philipp_Albrecht,_Duke_of_Württemberg .
  
  # Grandchild of Philipp Albrecht
  ?grandchild dbo:childOf ?philippChild .

  # Alexander's great-grandchild
  ?alexanderGreatGrandchild dbo:greatGrandchildOf dbr:Aleksander_Karol_Józef_Ludwik_Wilhelm_Zygmunt_August_Maria_of_Württemberg .
  
  # Great-great-grandchild of Alexander
  ?greatGreatGrandchild dbo:childOf ?alexanderGreatGrandchild .

  # Archduke Charles Louis's great-grandchild
  ?archdukeGreatGrandchild dbo:greatGrandChildOf dbr:Charles_Louis,_Archduke_of_Austria .
  
  # Great-great-grandchild of Archduke Charles Louis
  ?greatGreatGrandchildArchduke dbo:childOf ?archdukeGreatGrandchild .

  # Find the common individual who is both a grandchild of Philipp Albrecht and a great-great-grandchild of Alexander, and also a descendant of Archduke Charles Louis
  FILTER (?grandchild = ?greatGreatGrandchild && ?greatGreatGrandchild = ?greatGreatGrandchildArchduke)

  # Ensure the person is royalty
  ?commonIndividual dbo:royalty true .

  # Find the predecessor (parent) of this individual
  ?predecessor dbo:parentOf ?commonIndividual .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?glennYoungkinBirthPlace ?vinceGilliganAwardeeBirthPlace ?elDeafoAuthorBirthPlace WHERE {
  # Glenn Youngkin's birthplace
  dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .

  # Vince Gilligan's award and the awardee of that same award
  dbr:Vince_Gilligan dbo:award ?vinceGilliganAward .
  ?otherPerson dbo:award ?vinceGilliganAward .
  ?otherPerson dbo:birthPlace ?vinceGilliganAwardeeBirthPlace .

  # El Deafo's reference book and its American author
  dbr:El_Deafo dbo:referenceBook ?elDeafoReferenceBook .
  ?elDeafoReferenceBook dbo:author ?elDeafoAuthor .
  ?elDeafoAuthor dbo:nationality dbr:United_States .
  ?elDeafoAuthor dbo:birthPlace ?elDeafoAuthorBirthPlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's politician child
  ?child1 dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby ;
          a dbo:Politician .

  # Edward Stanley, 17th Earl of Derby's parent who was a politician and office holder
  ?parent2 dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby ;
           a dbo:Politician ;
           dbo:officeHolder ?office .

  # Commander of the Royal Victorian Order awardee related to Frederick Stanley's child
  ?awardee dbo:recipientOfAward dbr:Commander_of_the_Royal_Victorian_Order ;
          dbo:parent ?child1 .

  # Common ancestor (father) between these lines
  ?father dbo:child ?child1 .
  ?father dbo:child ?parent2 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?actor WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?profession .
  
  # Richard Grant Esterhuysen (The Shadow) and his professional identity
  VALUES ?theShadow { 
    dbr:The_Shadow_(radio_character)
  }
  ?person dbo:birthName ""Richard Grant Esterhuysen""@en ;
          dbo:alterEgo ?theShadow .
  
  # Find the actor who is both in Shatrughan Sinha's profession and acted in a movie that is a television show
  OPTIONAL {
    ?actor dbo:occupation ?profession ;
           dbo:film ?movie .
    ?movie dbo:type dbr:Television_show .
    
    FILTER (?person = ?actor)
  }
}
```",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego is Lamont Cranston
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .

  # Rodger A. Cooley, author of Smartbomb
  dbr:Smartbomb dbo:author dbr:Rodger_A._Cooley .

  # Find a movie involving Rodger A. Cooley
  ?movie dbo:writer dbr:Rodger_A._Cooley .
  
  # Actor from the album ""Urban Legend""
  dbr:Urban_Legend dbo:albumArtist ?actorFromAlbum .

  # Find an actor common to both the movie and the album
  ?movie dbo:starring ?commonActor .
  FILTER (?commonActor = ?actorFromAlbum)

  # The professional we are looking for is this common actor
  BIND(?commonActor AS ?professional)
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorBirthplace ?awardeeBirthplace WHERE {
  # Find the actor of ""Akaler Shandhaney""
  OPTIONAL {
    dbr:Akaler_Shandhaney dbo:starringActor ?actor .
    ?actor dbo:birthPlace ?actorBirthplace .
  }
  
  # Find a notable awardee of Sangeet Natak Akademi Fellowship
  OPTIONAL {
    dbr:Sangeet_Natak_Akademi_Fellowship dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthplace .
  }
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?medalOfHonorWar WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and in America
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Quincy Adams Gillmore's Medal of Honor award
  dbr:Quincy_Adams_Gillmore dbo:award ?medalOfHonorAward .
  
  # Find the war associated with the Medal of Honor
  ?medalOfHonorAward dbo:conflict ?medalOfHonorWar .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?maximilian1 { dbr:Maximilian_I,_Holy_Roman_Emperor }
  VALUES ?dorothea { dbr:Dorothea_of_Denmark_(1513-1571) }
  VALUES ?philip1 { dbr:Philip_I_of_Castile }

  ?child dbo:parent ?maximilian1 .
  
  ?grandparent dbo:parent ?dorothea .
  ?father dbo:parent ?dorothea .
  FILTER (?grandparent = ?father) .

  ?royaltyChild dbo:parent ?philip1 .
  FILTER (EXISTS { ?child dbo:spouse ?royaltyChild . } || 
          EXISTS { ?child dbo:child ?royaltyChild . })

  FILTER (?child = ?grandparent)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete ?film ?team WHERE {
  # Get Marty Pollio's birthdate
  VALUES ?martyPollioBirthDate { 
    dbr:Marty_Polio dbo:birthDate ?martyPollioBirthDate .
  }
  
  # Find athletes with the same birthdate as Marty Pollio
  ?athlete dbo:birthDate ?athleteBirthDate .
  FILTER (?athleteBirthDate = ?martyPollioBirthDate)
  
  # Get films directed by Manuel Huerga and find actors in those films
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?actor .
  
  # Find teams associated with Pablo Aimar
  dbr:Pablo_Aimar dbo:team ?team .

  # Filter athletes who are soccer players and match the criteria
  FILTER EXISTS { 
    ?athlete a dbo:SoccerPlayer .
  }
  
  OPTIONAL {
    ?actor dbo:birthDate ?actorBirthDate .
    FILTER (?actorBirthDate = ?martyPollioBirthDate)
  }

  # Ensure the athlete is associated with both the film and team
  FILTER EXISTS { 
    ?film dbo:actor ?athlete .
    ?team dbo:player ?athlete .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfCommander WHERE {
  ?manuelPinto daCosta dbo:officeHolder ?office .
  ?office dbo:militaryConflictOrSocietalEvent ?event .
  
  OPTIONAL {
    ?miguelMaura dbo:officeHolder ?madridOffice .
    ?madridOffice dbo:election dbr:2003_Madrid_City_Council_election .
    ?madridOffice dbo:residence ?leaderResidence .
    
    ?manuelPinto daCosta dbo:tenantOf ?leaderResidence .
  }
  
  FILTER (?office = ?officeOfCommander)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFatherRoyalty ?commanderInWarEventTVShow WHERE {
  # Maria Anna of Bavaria's father and his child who is royalty
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavary_(1574) }
  OPTIONAL {
    ?mariaAnna dbo:father ?father .
    ?father dbo:child ?childOfFatherRoyalty .
    FILTER EXISTS { ?childOfFatherRoyalty dbo:royalty true }
  }

  # Commander in the war, societal event, and television show related to 2nd Dragoon Regiment
  VALUES ?dragoonRegiment { dbr:2nd_Dragoon_Regiment_(France) }
  OPTIONAL {
    ?commanderInWarEventTVShow dbo:commanderOfMilitaryUnit ?dragoonRegiment .
    FILTER EXISTS { 
      ?event dbo:societalEvent true ;
             dbo:eventType ?eventType .
      ?eventType rdfs:label ""Television show""@en .
    }
  }

  # Ferdinand III's child's father
  VALUES ?ferdinandIII { dbr:Ferdinand_III,_Holy_Roman_Emperor }
  OPTIONAL {
    ?ferdinandIIIChild dbo:child ?ferdinandIIIChild .
    ?ferdinandIIIChild dbo:father ?ferdinandIIIFather .
  }

  # Final filter to match the conditions
  FILTER (?childOfFatherRoyalty = ?commanderInWarEventTVShow)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Step 1: Find Linda Bruckheimer's birth name
  dbr:Linda_Bruckheimer dbo:birthName ?birthName .
  
  # Step 2: Find her spouse using the birth name
  ?person dbo:birthName ?birthName ;
          dbo:spouse ?spouse .

  # Step 3: Identify a movie produced by this spouse and get its producer
  ?movie dbo:producer ?spouse ;
         dbo:producer ?producer .
}
```",5,5,6,3,2,3,2,20,1,18,0,0.05263157894736842,1.0,0.1
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:militaryUnitCommander dbr:Quincy_Adams_Gillmore .
  ?award dbo:recipient ?person ;
         dbo:givenBy dbr:United_States_Congress ;
         dbo:relatedEvent ?war .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Settlement . }
  FILTER EXISTS { ?birthPlace dbo:country dbr:United_States_of_America . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession ?commonProject WHERE {
  # The Shadow's alter ego in comics
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?profession .
  
  # Common project involving Richard E. Grant and Shatrughan Sinha
  ?commonProject dbo:starring dbr:Richard_E._Grant ;
                dbo:starring dbr:Shatrughan_Sinha .

  FILTER (?profession = dbr:Actor)
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personBirthName WHERE {
  ?person dbo:nativePlace ?floridaRegion .
  ?floridaRegion a dbo:State ;
                rdfs:label ""Florida""@en .
  
  OPTIONAL { 
    ?coroGroup dbo:bandMember ?person .
    ?coroGroup dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  }
  
  OPTIONAL {
    ?bobbyShmurdaArtist dbo:associatedMusicalArtist ?artist .
    ?bobbyShmurdaArtist dbr:Bobby_Shmurda .
    ?artist dbo:bandMember ?person .
  }

  ?person dbo:birthName ?personBirthName .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieActor ?albumArtist ?seriesProfessional WHERE {
  # Find an actor of a movie with ""and"" in its title
  ?movie dbr:The_Movie_With_And_In_Title dbo:starring ?movieActor .
  
  # Find the artist of the album for T.I.'s song ""What You Know""
  ?album dbo:title ""T.I. - What You Know""@en ;
         dbo:artist ?albumArtist .

  # Find the professional role in the series ""The Golden Master""
  ?series dbr:The_Golden_Master dbo:profession ?seriesProfessional .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBirthplace ?artist WHERE {
  # Find Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?victorsBirthplace .
  
  # Find who is native to Victor Saville's birthplace
  ?person dbo:nativeOf ?victorsBirthplace .
  BIND(?person AS ?nativeOfBirthplace)
  
  # Find Steven Kapur's musical work that represents his ""true self""
  dbr:Steven_Kapur dbo:work ?musicalWork .
  FILTER(STRSTARTS(LCASE(?musicalWork), ""http://dbpedia.org/resource/"") && 
         (CONTAINS(LCASE(str(?musicalWork)), ""musical"") || CONTAINS(LCASE(str(?musicalWork)), ""song"")))
  
  # Find the artist of this musical work
  ?musicalWork dbo:composer ?artist .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?luizaAlmaMater ?eleonoraAlmaMater ?luizaFoundingDate ?eleonoraFoundingDate WHERE {
  # Luiza Erundina's alma mater
  OPTIONAL { 
    dbr:Luiza_Erundina dbo:almaMater ?luizaAlmaMater .
    ?luizaAlmaMater dbo:foundingDate ?luizaFoundingDate .
  }
  
  # Eleonora Menicucci de Oliveira's alma mater
  OPTIONAL {
    dbr:Eleonora_Menicucci dbo:almaMater ?eleonoraAlmaMater .
    ?eleonoraAlmaMater dbo:foundingDate ?eleonoraFoundingDate .
  }
}
```",5,9,6,3,2,3,2,20,1,3,0,0.25,1.0,0.4
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildOfPhilipp ?royalGrandchildOfCharlesLouis ?predecessor WHERE {
  # Find grandchild of Duke Philipp of Württemberg
  ?philippChild dbo:child ?philippGrandchild .
  dbr:Duke_Philipp_of_Württemberg dbo:child ?philippChild .
  
  # Find royal grandchild of Archduke Charles Louis of Austria
  ?charlesLouisChild dbo:child ?royalGrandchildOfCharlesLouis .
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?charlesLouisChild .
  ?royalGrandchildOfCharlesLouis rdf:type dbo:Monarch .

  # Find predecessor of the child of the spouse of Archduchess Helena
  ?helenaSpouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?helenaSpouseChild dbo:child ?predecessor .
  ?predecessor rdf:type dbo:Monarch .

  # Match the required conditions
  FILTER (?grandchildOfPhilipp = ?royalGrandchildOfCharlesLouis)
  FILTER (?royalGrandchildOfCharlesLouis = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa .
  
  # Saw Shwe Khet's spouse
  ?sawShweKhetSpouse dbo:spouse dbr:Saw_Shwe_Khet .

  # Predecessor of Saw Shwe Khet's Spouse's Child
  ?sawShweKhetChild dbo:childOf ?sawShweKhetSpouse .
  ?predecessor dbo:predecessor ?sawShweKhetChild .

  # Child of Saw Min Phyu's spouse
  ?sawMinPhyu dbr:Saw_Min_Phu .
  ?sawMinPhyuSpouse dbo:spouse ?sawMinPhyu .
  ?childOfSawMinPhyuSpouse dbo:childOf ?sawMinPhyuSpouse .

  # Ensure the result is royalty
  ?result a dbo:Monarch ;
         dbo:predecessor ?predecessor ;
         dbo:child ?childOfSawMinPhyuSpouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eleonoreFather WHERE {
  # Find Maria Anna of Bavaria's father
  dbr:Maria_Anna_of_Bavaria dbo:father ?mariaAnnaFather .
  
  # Find the child of Maria Anna's father who is a royalty and Eleonore's father
  ?mariaAnnaFather dbo:child ?eleonoreFather .
  ?eleonoreFather rdf:type dbo:Monarch .

  # Ensure this person is Eleonore of Austria's father
  dbr:Eleonore_of_Austria dbo:father ?eleonoreFather .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?kimWilsonBand ?bandMember ?bandMemberRealName WHERE {
  # Find Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Find Kim Wilson's band
  dbr:Kim_Wilson dbo:associatedMusicalArtist ?kimWilsonBand .

  # Find a member of Kim Wilson's band
  ?bandMember dbo:memberOf ?kimWilsonBand .

  # Filter the band member by birth date and ensure they are a musical artist
  FILTER (?bandMember dbo:birthDate ""1945-03-30""^^xsd:date)
  
  # Get the real name of the band member
  OPTIONAL { ?bandMember rdfs:label ?bandMemberRealName . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfPhotographer ?childOfAllanArbus ?actorOfMovie ?decedentInLA WHERE {
  # Find the parent class of Photographer
  dbo:Photographer rdfs:subClassOf+ ?parentOfPhotographer .

  # Identify children or related works of Allan Arbus
  OPTIONAL { 
    dbr:Allan_Arbus dbo:child ?childOfAllanArbus .
  }

  # Find movies and their actors
  OPTIONAL {
    ?movie dbo:actor ?actorOfMovie .
    FILTER (rdf:type(?movie, dbo:Film))
  }

  # Locate individuals who have died in Los Angeles
  OPTIONAL {
    ?decedent dbo:deathPlace dbr:Los_Angeles .
    FILTER (rdf:type(?decedent, dbo:Person))
  }
  
  # Connect the elements logically
  FILTER (?childOfAllanArbus = ?actorOfMovie)
  FILTER (?decedentInLA = ?actorOfMovie)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicianParent ?awardAwardeeParent WHERE {
  # Frederick Stanley, 16th Earl of Derby's child
  VALUES ?frederickChild { 
    dbr:Frederick_Stanley,_17th_Earl_of_Derby 
  }
  
  # Parent of the child who is a politician
  ?politicianParent dbo:spouse|dbo:parent ?frederickChild .
  FILTER EXISTS {
    ?politicianParent dbo:occupation dbr:Politician .
  }

  # Rodney Lees and his award
  VALUES ?rodneyLees { 
    dbr:Rodney_Lees 
  }
  ?rodneyLees dbo:award ?award .

  # Awardee of the same award
  ?awardAwardee dbo:award ?award .
  
  # Parent of the awardee of that award
  ?awardAwardeeParent dbo:parent|dbo:spouse ?awardAwardee .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sadeAduURL ?liveAnthologyWriter WHERE {
  VALUES ?sadeAduURL { 
    dbr:Sade_Adu 
  }
  
  ?sadeAdu dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  FILTER (isMusicalArtist(?sadeAdu)) .

  ?liveAnthology dbo:writer ?liveAnthologyWriter .
  FILTER (isMusicalArtist(?liveAnthologyWriter)) .

  VALUES ?tupacURL { 
    dbr:Tupac_Shakur 
  }
  
  OPTIONAL {
    ?tupacURL dbo:associatedMusicalArtist ?associatedArtist .
    FILTER (?sadeAduURL = ?associatedArtist)
  }

  BIND (true AS ?isMusicalArtist(?sadeAdu))
  BIND (true AS ?isMusicalArtist(?liveAnthologyWriter))
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?spouse WHERE {
  VALUES ?work { dbr:Living_History }
  
  ?work dbo:author ?author .
  ?author a dbo:Person ;
          rdfs:label ""Hillary Clinton""@en .

  OPTIONAL {
    ?author dbo:spouse ?spouse .
    ?spouse a dbo:Person ;
            rdfs:label ""Bill Clinton""@en ;
            dbo:officeHolder ?office .
  }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gelawdewos ?walattaGiyorgis WHERE {
  # Na'od's father and his father (Susenyos I and Gelawdewos)
  VALUES ?naodFather { dbr:Susenyos_I }
  VALUES ?susenyosI_Father { dbr:Gelawdewos }

  # Susenyos I's father
  ?susenyosI dbo:father ?gelawdewos .
  
  # Gelawdewos is royalty and an office holder
  ?gelawdewos a dbo:Monarch ;
              dbo:officeHolder true .

  # Commander in Siege of Mukha (Ahmed Gragn) and his parent (Walatta Giyorgis)
  VALUES ?ahmedGragn { dbr:Ahmad_ibn_Ibrahim_al-Ghazi }
  ?ahmedGragn dbo:mother ?walattaGiyorgis .
  
  # Walatta Giyorgis is royalty
  ?walattaGiyorgis a dbo:Monarch .

  # Lamont Cranston as The Shadow's alter ego
  VALUES ?lamontCranston { dbr:Lamont_Cranston }
  ?lamontCranston rdfs:label ""The Shadow""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:musicalArtist true .
  ?person dbo:birthName ?bobThompsonBirthName .
  ?samConcepcion dbo:profession ?profession .
  ?person dbo:profession ?profession .
  ?person dbo:alterEgo dbr:The_Shadow .

  FILTER (?samConcepcion = dbr:Sam_Concepcion)
  
  # Assuming we have a way to get Bob Thompson's birth name
  VALUES ?bobThompsonBirthName { ""Bob Thompson"" } 

  OPTIONAL {
    ?person dbo:band ?band .
  }
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royParty ?danielCountry ?gustavoParty WHERE {
  # Find the political party of Roy Leonardo Barreras Montealegre
  OPTIONAL { 
    dbr:Roy_Leonardo_Barreras_Montealegre dbo:partyAffiliation ?royParty .
  }
  
  # Confirm the country associated with Daniel Elahi Galán (Colombia)
  OPTIONAL {
    dbr:Dani_Elái_Galán dbo:nationality dbr:Colombia .
    BIND(dbr:Colombia AS ?danielCountry)
  }

  # Find the political party of Gustavo Petro
  OPTIONAL {
    dbr:Gustavo_Petro dbo:partyAffiliation ?gustavoParty .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucasURL ?successorURL WHERE {
  VALUES ?georgeDucasURL { 
    dbr:George_Ducas 
  }
  
  OPTIONAL {
    ?commanderRole dbo:commander ?battleOfVienna .
    ?battleOfVienna a dbo:MilitaryConflict ;
                   rdfs:label ""Battle of Vienna""@en .
    
    ?successor dbo:successor ?commanderRole ;
               dbo:officeHolder ?office ;
               dbo:politician ?politics .

    FILTER (?georgeDucasURL = ?commanderRole)
  }
  
  VALUES ?battleOfVienna { 
    dbr:Battle_of_Vienna_(1683) 
  }

  OPTIONAL {
    ?michałKazimierzPac dbo:commander ?battleOfVienna .
    FILTER (?michałKazimierzPac = ?commanderRole)
  }
  
  FILTER (?successorURL = ?georgeDucasURL)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentClass WHERE {
  ?artist a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:nativePlace dbr:London ;
          dbo:deathDate ""2020-06-18""^^xsd:date .
  
  ?movie dbo:workType [a dbo:Film, dbo:TelevisionShow] ;
         dbo:author ?artist .

  ?artist rdfs:subClassOf+ ?parentClass .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Find Princess Aisha bint Faisal's parent who is royalty
  ?aisha a dbo:Person ;
         dbo:child ?princessAisha .
  ?princessAisha rdfs:label ""Princess Aisha bint Faisal""@en .

  OPTIONAL { ?parent1 dbo:spouse ?aisha . }
  OPTIONAL { ?parent2 dbo:spouse ?aisha . }

  # Find Prince Faisal bin Hussein's child who is royalty
  ?faisal a dbo:Person ;
          dbo:child ?princeFaisalChild .
  ?princeFaisalChild rdfs:label ""Prince Faisal bin Hussein""@en .

  OPTIONAL { ?parent3 dbo:spouse ?princeFaisalChild . }
  OPTIONAL { ?parent4 dbo:spouse ?princeFaisalChild . }

  # Find the common parent of these two royals
  FILTER (?parent1 = ?parent3 || ?parent1 = ?parent4 || ?parent2 = ?parent3 || ?parent2 = ?parent4)
  
  BIND(?parent1 AS ?commonParent) .
  OPTIONAL { BIND(?parent2 AS ?commonParent) . }
}
```",5,8,6,3,2,3,2,20,0,1,1,0.0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Richard Grant Esterhuysen and his profession as an actor
  ?esterhuysen a dbo:Person ;
               foaf:name ""Richard Grant Esterhuysen"" ;
               dbo:profession ?actorProfession .
  
  FILTER (?actorProfession = dbr:Actor)

  # Identify television shows that are also movies
  ?tvShow dbo:type [ 
    a dbo:Class ; 
    rdfs:subClassOf* dbo:TelevisionSeries ;
    rdfs:subClassOf* dbo:Film
  ] .

  # Find actors of ""Ab Kya Hoga"" who are politicians
  ?abKyaHogaActor a dbo:Person ;
                  dbo:profession dbr:Politician ;
                  dbo:actedIn dbr:Ab_Kya_Hoga .
  
  # Match the actor from Ab Kya Hoga with the television show/movie
  ?tvShow dbo:actor ?actor .
  FILTER (?actor = ?abKyaHogaActor)
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tomSawyerProducer ?claimToFameProducer WHERE {
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  VALUES ?tomSawyerFilm { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) }
  ?tomSawyerFilm dbo:producer ?tomSawyerProducer .

  # Actor of ""High Society Blues""
  VALUES ?highSocietyBlues { dbr:High_Society_Blues }
  ?highSocietyBlues dbo:starring ?actor .
  
  # Claim to fame (movie and work) of the actor
  OPTIONAL {
    ?actor dbo:notableWorkOrEvent ?claimToFame .
    ?claimToFame dbo:producer ?claimToFameProducer .
  }

  # Fictional character related to ""Kent Allard""
  VALUES ?kentAllard { dbr:Kent_Allard }
  ?kentAllard dbo:fictionalCharacter ?fictionalCharacter .

  FILTER EXISTS {
    ?actor rdfs:label ?actorLabel .
    ?claimToFame rdfs:label ?claimToFameLabel .
    ?fictionalCharacter rdfs:label ?fictionalCharacterLabel .
  }

  # Ensure the claim to fame is a movie and work
  FILTER (STRSTARTS(STR(?claimToFame), ""http://dbpedia.org/resource/"") && 
          STRSTARTS(STR(?actor), ""http://dbpedia.org/resource/""))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?nickCurranAssociatedArtist ?bandMemberName ?realNameOfFabulousThunderbirds WHERE {
  # Find the associated musical artist of Nicholas Michael Curran
  dbr:Nicholas_Michael_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Find a band member born on 1945-03-30 who is part of The Fabulous Thunderbirds
  ?bandMember dbo:birthDate ?birthDate .
  FILTER (xsd:date(?birthDate) = ""1945-03-30""^^xsd:date)
  ?bandMember dbo:bandMember dbr:The_Fabulous_Thunderbirds .

  # Get the real name of The Fabulous Thunderbirds
  OPTIONAL {
    dbr:The_Fabulous_Thunderbirds rdfs:label ?realNameOfFabulousThunderbirds .
    FILTER (lang(?realNameOfFabulousThunderbirds) = ""en"")
  }

  # Ensure the associated musical artist matches with the band member's band
  FILTER (?nickCurranAssociatedArtist = dbr:The_Fabulous_Thunderbirds)

  # Get the name of the band member for clarity in results
  ?bandMember rdfs:label ?bandMemberName .
  FILTER (lang(?bandMemberName) = ""en"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  # Step 2: Find a movie with Audrey Hepburn and the spouse of Janusz Kamiński
  ?movie dbo:starring dbr:Audrey_Hepburn ;
         dbo:starring ?spouse .
  
  # Step 3: Find an actor in that movie who also acted in a movie with Iliza Shlesinger
  ?movie dbo:starring ?actor .

  OPTIONAL {
    ?otherMovie dbo:starring dbr:Iliza_Shlesinger ;
                dbo:starring ?actor .
  }
  
  FILTER EXISTS { ?otherMovie dbo:starring dbr:Iliza_Shlesinger . }
}
```",5,9,6,2,3,2,3,28,1,0,0,1.0,1.0,1.0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeName ?birthPlaceLabel ?regionEntity WHERE {
  # Find Japanese awardees of the Anita Borg Institute Women of Vision Awards
  ?awardee dbo:nationality dbr:Japan ;
          dbo:awardReceived dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  
  # Get their names and birthplaces
  ?awardee rdfs:label ?awardeeName ;
          dbp:birthPlace ?birthPlace .

  # Filter for the region/time zone of Kiyosu (Aichi Prefecture)
  OPTIONAL {
    ?regionEntity dbo:location dbr:Aichi_Prefecture .
    FILTER regex(?birthPlaceLabel, ""Aichi"", ""i"")
  }

  # Bind labels to variables
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent ?alterEgo WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander dbo:commanderInBattle dbr:Siege_of_Mukha .
  FILTER EXISTS { ?commander a dbo:RoyalFamily . }

  # Identify the parent of this royal commander
  ?parent dbo:child ?commander .

  # Ensure the parent is also royalty
  FILTER EXISTS { ?parent a dbo:RoyalFamily . }

  # Find the child of this royal parent
  ?childOfParent dbo:parent ?parent .

  # Ensure this child is the father of Baeda Maryam I
  ?baedaMaryamI dbo:father ?childOfParent .
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }

  # Find the alter ego of Lamont Cranston
  ?lamontCranston dbo:alterEgo ?alterEgo .
  VALUES ?lamontCranston { dbr:Lamont_Cranston_(radio) }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Manager of VfL Bochum in the 2007–08 season
  ?vflBochumSeason dbo:club dbr:VfL_Bochum ;
                   dbo:season ""2007–08""^^xsd:string .
  
  ?vflBochumSeason dbo:manager ?manager .

  # Manager's nationality is Germany
  ?manager dbo:nationality dbr:Germany .

  # Manager has managed Thomas Letsch's team
  ?letschTeam dbo:manager ?manager ;
              dbo:club dbr:Thomas_Letsch .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?amyArbusParent ?mariclareCostelloChildParent ?movieActor WHERE {
  # Find the parent of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?amyArbusParent .
  }

  # Find Mariclare Costello's spouse, their child, and that child's parent
  OPTIONAL {
    dbr:Mariclare_Costello dbo:spouse ?mariclareSpouse .
    ?mariclareSpouse dbo:child ?mariclareChild .
    ?mariclareChild dbo:parent ?mariclareCostelloChildParent .
  }

  # Find a movie with an actor where there is a person decedent at Los Angeles
  OPTIONAL {
    ?movie dbo:actor ?movieActor ;
           a dbo:Film .
    ?decedent dbo:deceasedAtLocation dbr:Los_Angeles .
    ?decedent dbo:appearedIn ?movie .
  }
}
```",7,8,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?playerInAgüeroTeam WHERE {
  VALUES ?sergioAgüero { dbr:Sergio_Agüero }
  VALUES ?marceloSarmiento { dbr:Marcelo_Sarmiento_(footballer) }
  VALUES ?martyPollio { dbr:Marty_Pollio }

  # Get Sergio Agüero's team
  ?sergioAgüero dbo:team ?agüeroTeam .

  # Find a person who is both a soccer player and manager, born on Marcelo Sarmiento's birthday
  ?person1 rdf:type dbo:SoccerPlayer ;
           rdf:type dbo:SoccerManager ;
           dbo:birthDate ?marceloSarmientoBirthDate .
  
  # Get Marcelo Sarmiento's birth date
  ?marceloSarmiento dbo:birthDate ?marceloSarmientoBirthDate .

  # Find an athlete born on Marty Pollio's birthday
  ?person2 rdf:type dbo:Athlete ;
           dbo:birthDate ?martyPollioBirthDate .
  
  # Get Marty Pollio's birth date
  ?martyPollio dbo:birthDate ?martyPollioBirthDate .

  # Ensure the person is a player in Sergio Agüero's team
  FILTER (?person1 = ?playerInAgüeroTeam || ?person2 = ?playerInAgüeroTeam)
  ?playerInAgüeroTeam dbo:team ?agüeroTeam .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAlbrecht ?grandChild WHERE {
  # Find child of Albrecht, Duke of Württemberg
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?childOfAlbrecht .
  
  # Find grandchild who is royalty
  ?childOfAlbrecht dbo:child ?grandChild .
  ?grandChild rdf:type dbo:Monarch .

  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parentOfMargareteSophie .

  # Spouse's child (who is royalty) of Archduchess Helena of Austria
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouseHelena .
  ?spouseHelena dbo:child ?childOfSpouseHelena .
  ?childOfSpouseHelena rdf:type dbo:Monarch .

  # Ensure grandChild is a predecessor to both
  ?grandChild dbo:predecessor ?parentOfMargareteSophie .
  ?grandChild dbo:predecessor ?childOfSpouseHelena .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?leaderOfCRPOffice ?tenantResidence WHERE {
  # Office of the Commander in Central African Republic Civil War
  OPTIONAL {
    ?commander a dbo:OfficeHolder ;
               dbo:politician true ;
               dbo:office ?commanderOffice .
    FILTER EXISTS { ?commander dbo:memberOf dbr:Central_African_Republic_Civil_War }
  }

  # Office of the Leader of Conservative Republican Party (Spain)
  OPTIONAL {
    ?leaderOfCRP a dbo:Politician ;
                 dbo:leader true ;
                 dbo:office ?leaderOfCRPOffice .
    FILTER EXISTS { ?leaderOfCRP dbo:member dbr:Conservative_Republican_Party_(Spain) }
  }

  # Tenant of the Residence of the Leader in 2003 Madrid City Council Election
  OPTIONAL {
    ?madridLeader a dbo:OfficeHolder ;
                  dbo:politician true ;
                  dbo:office ?madridElectionOffice .
    FILTER EXISTS { ?madridLeader dbo:electedDuring dbr:2003_Madrid_City_Council_election }
    ?residence dbo:tenant ?tenantResidence .
    FILTER EXISTS { ?madridLeader dbo:residence ?residence }
  }

  # Ensure the entities are linked correctly
  OPTIONAL {
    FILTER (?commander = ?leaderOfCRP)
    FILTER (?leaderOfCRP = ?madridLeader)
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shattaWaleArtist ?centralRegionArtist WHERE {
  # Find Shatta Wale's associated musical artists
  dbr:Shatta_Wale dbo:associatedMusicalArtist ?shattaWaleArtist .
  
  # Find a musician from Central Region, Ghana with a connection to Rod Argent or The Zombies
  ?person dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region,_Ghana ;
          dbo:profession dbr:Singer ;
          dbo:associatedMusicalArtist ?centralRegionArtist .
  
  # Ensure the person is associated with Rod Argent or The Zombies
  OPTIONAL {
    ?person dbo:associatedBandMember dbr:The_Zombies .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?nickname WHERE {
  # Find the author of ""The First Glove""
  ?work dbo:author dbr:Denis_Kolodin .
  FILTER (str(?work) = ""The_First_Glove"") .

  # Identify players associated with Denis Kolodin
  OPTIONAL {
    ?player dbo:nickname ?nickname .
    ?player dbo:associatedWith dbr:Denis_Kolodin .
    
    # Filter for nicknames that are soccer clubs
    VALUES ?nickname {
      dbr:Arsenal_F.C.
      dbr:Chelsea_F.C.
      dbr:Liverpool_F.C.
      dbr:Manchester_United_F.C.
      dbr:Real_Madrid_C.F.
      # Add more clubs as needed
    }
  }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?joeyB { dbr:Joey_B }
  VALUES ?liveAnthologyWriter { 
    SELECT ?writer WHERE {
      dbr:The_Live_Anthology dbo:author ?writer .
      ?writer a dbo:MusicalArtist .
    } LIMIT 1
  }

  OPTIONAL {
    ?joeyB dbo:associatedMusicalArtist ?artistJoeyB .
  }
  
  OPTIONAL {
    ?liveAnthologyWriter dbo:associatedMusicalArtist ?artistLiveAnthologyWriter .
  }

  FILTER (?artistJoeyB = ?artistLiveAnthologyWriter)
  BIND(?artistJoeyB AS ?associatedArtist)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?goldenSwordWar ?baggovutWar ?birthPlaceEntity WHERE {
  # Find the war associated with the Golden Sword for Bravery awardee
  ?person dbo:award dbr:Golden_Sword_for_Bravery .
  ?person dbo:participatedIn ?goldenSwordWar .

  # Find the war in which Karl Gustav von Baggovut participated
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?baggovutWar .

  # Determine the birthplace entity of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceEntity .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumActor ?movieActor ?professionalField WHERE {
  # Find T.I.'s album that is a song and musical work
  ?album dbo:artist dbr:T.I. ;
         rdf:type dbo:Album ;
         dbo:song ?song .
  
  ?song rdf:type dbo:MusicalWork .

  # Find the actor associated with this album
  OPTIONAL {
    ?albumActor dbo:actorIn ?album .
  }

  # Identify the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?smartbombAuthor .

  # Find a movie that features both the album's actor and the book's author
  ?movie dbo:starring ?albumActor ;
         dbo:starring ?smartbombAuthor .

  # Get the professional field of the person involved (assuming it's the album actor)
  OPTIONAL {
    ?albumActor dbo:profession ?professionalField .
  }
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?bayneWar ?tripleXsCommander WHERE {
  # Military forces in the Battle of Cape Finisterre (1805)
  VALUES ?battleEvent { dbr:Battle_of_Cape_Finisterre_(1805) }
  ?battleEvent dbo:participatedIn ?battleMilitaryForce .

  # War involving William Bayne as a commander
  ?bayneWar dbo:commander dbr:William_Bayne .
  
  # The Triple X's and their role in a war
  ?tripleXsCommander rdfs:label ""The Triple X's""@en .
  OPTIONAL {
    ?warEvent dbo:commander ?tripleXsCommander .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Saw Shwe Khet's child
  ?sawShweKhetChild dbo:childOf dbr:Saw_Shwe_Khet .
  
  # Minye Kyawswa and his child (Minye Kyawswa himself)
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa .
  FILTER (?minyeKyawswaChild = dbr:Minye_Kyawswa) 

  # Myat Hpone Pyo's father and spouse (mother)
  ?myatHponePyoFather dbo:spouse ?myatHponePyoSPOUSE .
  ?myatHponePyoFather dbo:child ?myatHponePyo .

  # Find the royalty that fits these relationships
  VALUES ?royalty {
    ?sawShweKhetChild
    ?minyeKyawswaChild
    ?myatHponePyoSPOUSE
  }
  
  FILTER (?royalty = ?sawShweKhetChild && ?royalty = ?myatHponePyoSPOUSE)

  # Find the predecessor of this royalty
  ?royalty dbo:predecessor ?predecessor .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?rulingParty WHERE {
  # Pickett's Charge as an event
  dbr:Picketts_Charge dbo:participatedIn ?battle .
  
  # Commander associated with the charge
  ?battle dbo:commandedBy ?commander .

  # Political party connection (historical context)
  OPTIONAL {
    ?commander dbo:memberOf ?rulingParty .
    FILTER EXISTS { 
      ?rulingParty a dbo:PoliticalParty ;
                   dbo:country dbr:United_States .
    }
  }

  # Optional filter for Westport, Connecticut
  OPTIONAL {
    ?commander dbo:birthPlace dbr:Westport,_Connecticut .
  }
}
```",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent ?fatherOfChild WHERE {
  VALUES ?rogerII { dbr:Roger_II_of_Sicily }
  VALUES ?williamI { dbr:William_I_of_Sicily }
  VALUES ?elvira { dbr:Elvira_of_Castile }

  # Find Roger II's child who is royalty
  ?child dbo:parent ?rogerII .
  ?child a dbo:Monarch .

  # Find the parent of this child (should be Roger II)
  ?parent dbo:child ?child .

  # Find William I's child who is royalty and associated with Elvira
  ?williamChild dbo:parent ?williamI .
  ?williamChild dbo:spouse ?elvira .
  ?williamChild a dbo:Monarch .

  # Determine the father of this child (should be William I)
  ?father dbo:child ?williamChild .

  # Find the child of the parent of Roger II's child
  ?parentChild dbo:parent ?parent .
  ?parentChild a dbo:Monarch .

  FILTER (?parent = ?rogerII && ?father = ?williamI)

  BIND(?parentChild AS ?childOfParent)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?natLevineFilm { 
    # Assuming a known film by Nat Levine, e.g., ""The Maltese Falcon""
    dbr:The_Maltese_Falcon
  }
  
  ?natLevineFilm dbo:actor ?actor .
  
  ?actor dbo:spouse ?spouse .

  OPTIONAL {
    ?landmark dbo:elevation ?elevation .
    FILTER(?elevation = 20.1168)
    
    ?partyMember dbo:memberOfParty ?rulingParty .
    ?spouse dbo:memberOfParty ?rulingParty .
    
    ?rulingParty dbo:location ?landmark .
  }
  
  VALUES ?harrietteArleneLake { 
    dbr:Harriette_Arlene_Lake
  }

  FILTER(?spouse != ?harrietteArleneLake)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # VfL Bochum 2007-08 Season
  ?season dbo:sportTeam dbr:VfL_Bochum ;
          dbo:startDate ?start ;
          dbo:endDate ?end .
  
  FILTER (YEAR(?start) = 2007 && YEAR(?end) = 2008)

  # Manager of VfL Bochum during the season
  ?season dbo:manager ?manager .

  # Theodor Heuss's country of administration
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .
  
  # Sports manager born on 1968-08-26 and native to Germany
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:Germany ;
          rdf:type dbo:SportsManager .

  FILTER (?manager = ?person)
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Nat Levine's film
  dbr:Nat_Levine dbo:film ?natFilm .
  
  # Actor of the film
  ?natFilm dbo:actor ?actor .
  
  # Spouse of the actor
  ?actor dbo:spouse ?person .

  # Person is a party member in Central, Louisiana
  OPTIONAL {
    ?person dbo:memberOfPartyInLocation dbr:Central,_Louisiana .
  }

  FILTER (?birthName = ""Ann Sothern""^^xsd:string)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tupacAssociatedArtist ?eboTaylorAssociatedArtist WHERE {
  VALUES ?lesaneParishCrooks { 
    dbr:Lesane_Parish_Crooks 
  }
  OPTIONAL {
    ?lesaneParishCrooks dbo:associatedMusicalArtist ?tupacAssociatedArtist .
  }

  VALUES ?eboTaylor { 
    dbr:Ebo_Taylor
  }
  OPTIONAL {
    ?eboTaylor dbo:associatedMusicalArtist ?eboTaylorAssociatedArtist .
  }
}
```",7,8,8,3,3,3,3,71,0,4,1,0.0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?arthurStanleyFather ?rodneyLeesAwardeeParent ?edwardStanleyChildsPoliticianParent WHERE {
  # Arthur Stanley's father
  dbr:Arthur_Stanley_(politician) dbo:father ?arthurStanleyFather .

  # Rodney Lees' award and awardee's parent
  OPTIONAL {
    dbr:Rodney_Lees dbo:award ?rodneyLeesAward .
    ?rodneyLeesAward dbo:recipient ?awardee .
    ?awardee dbo:fatherOrMother ?rodneyLeesAwardeeParent .
  }

  # Edward Stanley, 17th Earl of Derby's child's parent who is a politician
  OPTIONAL {
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?edwardChild .
    ?edwardChild dbo:fatherOrMother ?edwardStanleysParent .
    FILTER EXISTS { ?edwardStanleysParent dbo:officeHolder ?office . }
    FILTER EXISTS { ?edwardStanleysParent dbo:politicalPartyMember ?party . }
    BIND(?edwardStanleysParent AS ?edwardStanleyChildsPoliticianParent)
  }

  # Ensure the same person is returned for all conditions
  FILTER (?arthurStanleyFather = ?rodneyLeesAwardeeParent && ?arthurStanleyFather = ?edwardStanleyChildsPoliticianParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?designer WHERE {
  # Query for members of Der Blau
  {
    VALUES ?derBlau { dbr:Der_Blau }
    ?member dbo:memberOf ?derBlau .
  }

  UNION

  # Query for designer of Aston Martin AMR1
  {
    VALUES ?amr1 { dbr:Aston_Martin_AMR_1 }
    ?amr1 dbo:designer ?designer .
  }
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?bobbyBirthName .

  # Step 2: Find the associated musical artist of Bobby Shmurda
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedBand .
  
  # Step 3: Identify a band member who is also a musical artist
  ?bandMember dbo:memberOf ?associatedBand ;
              rdf:type dbo:MusicalArtist .

  # Step 4: Find an award related to New York (state)
  ?award dbo:location dbr:New_York_(state) .
  
  # Step 5: Identify the native region, state, and settlement of the awardee
  ?bandMember dbo:award ?award ;
              dbo:nativePlace ?nativeRegion ;
              dbo:stateOrProvince ?nativeState ;
              dbo:settlement ?nativeSettlement .

  FILTER (?nativeState = dbr:New_York_(state) && 
          ?nativeSettlement a dbo:Settlement &&
          ?nativeRegion a dbo:Region)

  # Ensure the person is American
  ?bandMember dbo:nationality dbr:United_States .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  VALUES ?birthDate { ""1979-11-03""^^xsd:date }
  
  ?person dbo:birthDate ?birthDate .
  ?person dbo:sport dbr:Soccer .
  OPTIONAL { ?person dbo:occupation dbr:Soccer_manager . }

  # Find Marty Pollio's birthdate
  ?martyPollio dbo:birthDate ?martyBirthDate .

  # Find the actor in ""All or Nothing: Manchester City"" who is also an athlete and soccer player
  ?actor dbo:actorIn dbr:All_or_Nothing:_Manchester_City .
  ?actor dbo:sport dbr:Soccer .
  ?actor dbo:sport dbr:Athlete .

  # Find the team of the person born on 1979-11-03
  OPTIONAL { ?person dbo:team ?team . }
  
  FILTER (?person = ?martyPollio)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the player in ""All or Nothing: Manchester City"" who is an actor and a soccer player/athlete
  ?player dbo:actorIn dbr:All_or_Nothing:_Manchester_City .
  ?player dbo:soccerPlayer true .
  ?player dbo:athlete true .

  # Find the person born on 1955-02-22 who is an athlete
  ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
          dbo:athlete true .

  # Ensure the player is associated with this person
  ?player dbo:team ?person .

  # Find Marcelo Sarmiento's birthdate and his team
  dbr:Marcelo_Sarmiento dbo:birthDate ?marceloSarmientoBirthDate .
  ?manager dbo:birthDate ?marceloSarmientoBirthDate ;
           dbo:soccerPlayer true ;
           dbo:soccerManager true .

  # Ensure the player is part of Marcelo Sarmiento's team
  ?player dbo:team ?manager .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commanderForce ?award WHERE {
  # Find the war associated with the sinking event
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:partOfWar ?war .
  
  # Identify the commander and their force
  OPTIONAL {
    ?event dbo:commander ?commander .
    ?commander dbo:militaryBranch ?commanderForce .
  }
  
  # Find the award received by Edmund Hakewill-Smith
  dbr:Edmund_Hakewill-Smith dbo:awardReceived ?award .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfFloridaBandMember WHERE {
  # Step 1: Identify GS9 members who are both artists and musical artists
  ?gs9Member dbo:member dbr:GS9 .
  FILTER EXISTS { ?gs9Member a dbo:Artist . }
  FILTER EXISTS { ?gs9Member a dbo:MusicalArtist . }

  # Step 2: Find their associated musical artist
  ?gs9Member dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Identify if the associated artist is native of Florida and also a band member
  OPTIONAL {
    ?associatedArtist dbo:nativePlace dbr:Florida .
  }
  FILTER EXISTS { ?associatedArtist dbo:member ?band . }

  # Step 4: Ensure the person is both a musical artist and an artist
  FILTER EXISTS { ?associatedArtist a dbo:MusicalArtist . }
  FILTER EXISTS { ?associatedArtist a dbo:Artist . }

  # Resulting native of Florida band member
  BIND(?associatedArtist AS ?nativeOfFloridaBandMember)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find works by George Ducas
  ?work dbo:author dbr:George_Ducas .
  
  # Connect the work to Jean Baptist, Comte d'Arco
  ?work dbo:about dbr:Jean_Baptist_Comte_d'Arco .

  # Identify Jean Baptist, Comte d'Arco's role in the Russo-Polish War and as a commander
  OPTIONAL {
    ?jeanBaptist dbo:commanderOf dbr:Russo-Polish_War_(1654–1667) .
  }
  
  # Find his successor who is a politician and office holder
  OPTIONAL {
    ?successor dbo:predecessor dbr:Jean_Baptist_Comte_d'Arco ;
               a dbo:Politician ;
               dbo:officeHolder ?office .
  }

  # Ensure the writer of George Ducas's work is connected to Jean Baptist, Comte d'Arco
  FILTER EXISTS { ?work dbo:about dbr:Jean_Baptist_Comte_d'Arco }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find a child of Toyotomi Hideyoshi
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  
  # Find the birthplace of Yamaza Enjirō
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Find wars involving Toyotomi Hidenaga
  ?war dbo:participatedIn ?toyotomiHidenagaWar .
  ?toyotomiHidenagaWar dbo:participant dbr:Toyotomi_Hidenaga .

  # Check if the child of Toyotomi Hideyoshi participated in the same war
  OPTIONAL {
    ?child dbo:participatedIn ?war .
  }

  FILTER EXISTS { ?child dbo:birthPlace ?birthPlace }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?gillmoreAward WHERE {
  ?award dbo:awardingBody dbr:United_States_Congress .
  OPTIONAL { 
    ?award dbo:location dbr:Charleston,_South_Carolina .
  }
  ?gillmoreAward dbo:awardee dbr:Quincy_A._Gillmore .
  FILTER (?award = ?gillmoreAward)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?countryOfWork WHERE {
  # Find a person who died in Taipei
  ?decedent dbo:deathPlace dbr:Taipei .
  
  # Identify their child who is a politician
  ?child dbo:parent ?decedent ;
         dbo:occupation dbr:Politician .

  # Get the birthplace of this politician
  ?child dbo:birthPlace ?birthPlace .

  # Find Lao She's notable work and its country
  ?work dbo:author dbr:Lao_She .
  ?work dbo:location ?countryOfWork .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Alexander of Württemberg's lineage
  ?alexanderChild dbo:childOf dbr:Alexander_of_W%C3%BCrttemberg ;
                  dbo:child ?grandchild1 .
  ?grandchild1 dbo:childOf ?alexanderChild ;
               dbo:child ?greatGrandchild1 .
  ?greatGrandchild1 dbo:childOf ?grandchild1 ;
                    dbo:child ?greatGreatGrandchild .

  # Archduchess Margarete Sophie of Austria's child
  ?margareteSophieChild dbo:childOf dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Predecessor of the child of the spouse of Archduchess Helena of Austria
  ?helenaSpouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?childOfHelenaSpouse dbo:childOf ?helenaSpouse ;
                       dbo:predecessor ?predecessor .

  # Find the intersection and ensure royalty
  FILTER (?greatGreatGrandchild = ?margareteSophieChild && ?greatGreatGrandchild = ?predecessor)
  FILTER EXISTS { ?greatGreatGrandchild a dbo:RoyalFamilyMember }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?authorBirthPlace ?awardeeBirthPlace WHERE {
  # Governor of Virginia
  OPTIONAL {
    ?governor a dbo:Governor ;
              dbo:stateOrTerritory dbr:Virginia ;
              dbo:birthPlace ?governorBirthPlace .
  }
  
  # Author of ""El Deafo""
  OPTIONAL {
    dbr:Cecily_Ann_Bell dbo:birthPlace ?authorBirthPlace .
  }

  # Awardee of Vince Gilligan's awards
  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",7,9,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfEdwardStanley ?awardAwardee ?politicianChildFather WHERE {
  # Find the parent of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parentOfEdwardStanley .
  }

  # Find the awardee of Rodney Lees' award
  OPTIONAL {
    ?award dbo:recipient ?awardAwardee ;
           dbo:name ""Rodney Lees""^^xsd:string .
  }

  # Find a politician who is a child of an Eton College alumnus and their father
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Eton_College ;
             dbo:child ?politicianChild .
    ?politicianChild rdf:type dbo:Politician ;
                     dbo:father ?politicianChildFather .
  }

  # Ensure the parent of Edward Stanley is also the awardee and the father
  FILTER (?parentOfEdwardStanley = ?awardAwardee && ?parentOfEdwardStanley = ?politicianChildFather)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander30thRegiment ?militaryConflict ?williamBayneForce ?robertCalderEvent WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot during a military conflict
  OPTIONAL {
    dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:commander ?commander30thRegiment .
    ?militaryConflict dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
    ?commander30thRegiment dbo:associatedWith ?militaryConflict .
  }

  # Find the military force associated with William Bayne
  OPTIONAL {
    dbr:William_Bayne dbo:militaryForce ?williamBayneForce .
  }

  # Find the societal event or military force related to Robert Calder
  OPTIONAL {
    dbr:Robert_Calder dbo:associatedEvent ?robertCalderEvent .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Bill_Clinton dbo:spouse ?spouse .
  OPTIONAL { 
    ?spouse dbo:author ?work .
  }
  FILTER EXISTS {
    ?work a dbo:Book .
  }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  OPTIONAL {
    ?nickCurran dbo:birthPlace ?birthPlace .
    ?nickCurran a dbo:MusicalArtist .
    ?nickCurran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }

  FILTER (?fabulousThunderbirdsURL = ?nickCurranAssociatedArtist)
}
```",7,8,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfRegionCountry WHERE {
  # Find William Gayner's birthplace
  ?williamGayner dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:AdministrativeTerritory ;
              rdfs:subClassOf* dbo:Country .

  # Identify Patrick Bowes-Lyon's parent who is also Hon. Mary Frances Bowes-Lyon's parent
  ?patrickBowesLyon dbo:parent ?commonParent .
  ?maryFrancesBowesLyon dbo:parent ?commonParent .

  # Find the native of the birthplace (region and country) of William Gayner
  ?commonParent dbo:nativeOf ?nativePlace .
  
  FILTER (?nativePlace = ?birthPlace)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William I of Sicily's royal child
  VALUES ?williamI { dbr:William_I_of_Sicily }
  OPTIONAL {
    ?williamChild dbo:childOf ?williamI .
    FILTER EXISTS { ?williamChild a dbo:Monarch . }
  }

  # Identify Alfonso VI's grandchild who is royalty
  VALUES ?alfonsoVI { dbr:Alfonso_VI_of_León_and_Castile }
  OPTIONAL {
    ?alfonsoGrandchild dbo:childOf ?williamChild .
    FILTER EXISTS { ?alfonsoGrandchild a dbo:Monarch . }
    ?alfonsoGrandparent dbo:childOf ?alfonsoVI .
    FILTER (?alfonsoGrandchild = ?alfonsoGrandparent)
  }

  # Identify Roger II's child who is royalty and their parent
  VALUES ?rogerII { dbr:Roger_II_of_Sicily }
  OPTIONAL {
    ?rogerChild dbo:childOf ?rogerII .
    FILTER EXISTS { ?rogerChild a dbo:Monarch . }
    ?rogerParent dbo:parent ?rogerChild .
  }

  # Find the father of the individual who fits both paths
  FILTER (?alfonsoGrandchild = ?rogerParent)
  OPTIONAL {
    ?father dbo:parent ?alfonsoGrandchild .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBandMember WHERE {
  # Find organizations associated with Cavalera Conspiracy
  VALUES ?cavaleraConspiracy { dbr:Cavalera_Conspiracy }
  
  OPTIONAL {
    ?cavaleraConspiracy dbo:associatedMusicalArtist ?organization .
    FILTER (isLiteral(?organization) = false)
    
    # Find band members of these organizations
    ?bandMember dbo:bandMember ?organization .
  }

  # Find the producer of ""Nothing to Gein"" that is an organization and a group
  VALUES ?nothingToGein { dbr:Nothing_to_Gein }
  
  OPTIONAL {
    ?nothingToGein dbo:producer ?producer .
    FILTER (isLiteral(?producer) = false)
    
    # Ensure the producer is also considered a group
    ?producer rdf:type dbo:MusicalGroup .

    # Find band members of this producer
    ?bandMember dbo:bandMember ?producer .
  }

  # Identify common band members in both contexts
  FILTER (?organization = ?producer)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?governorOfRegion ?ceceBellBirthPlace WHERE {
  # Vince Gilligan's award (Emmy)
  VALUES ?emmyAward { dbr:Primetime_Emmy_Award }

  # Awardees of the same award
  ?person dbo:awardReceived ?emmyAward .
  
  # Birthplace of an awardee
  ?person dbo:birthPlace ?awardeeBirthPlace .

  # Governor of the region where the awardee was born
  OPTIONAL {
    ?region dbo:governor ?governorOfRegion .
    FILTER (?awardeeBirthPlace = ?region)
  }

  # Paulus Powell's birthplace and its governor
  dbr:Paulus_Powell dbo:birthPlace ?paulusPowellBirthPlace .
  OPTIONAL {
    ?paulusPowellBirthPlace dbo:governor ?governorOfRegion .
  }
  
  # Cece Bell's birthplace
  dbr:Cecilie_Ann_Bell_Larsen dbo:birthPlace ?ceceBellBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?barrerasBirthPlace ?barrerasParty ?petroFathersParty WHERE {
  # Roy Leonardo Barreras Montealegre's birthplace in Colombia and his party
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:birthPlace ?barrerasBirthPlace .
  FILTER (STRSTARTS(STR(?barrerasBirthPlace), ""http://dbpedia.org/resource/Colombia""))

  OPTIONAL {
    dbr:Roy_Leonardo_Barreras_Montealegre dbo:memberOf ?barrerasParty .
  }

  # Sofía Petro's father and his party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?petroFather .
    ?petroFather dbo:memberOf ?petroFathersParty .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bayneWarURL ?regimentCommander ?kcbAwardeeForce WHERE {
  # Find the military conflict associated with William Bayne
  OPTIONAL { 
    dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?bayneWar .
    BIND(STR(?bayneWar) AS ?bayneWarURL)
  }
  
  # Find the commander of the 30th Regiment of Foot in a military conflict
  OPTIONAL {
    dbr:30th_Regiment_of_Foot dbo:commander ?regimentCommander .
  }

  # Find the awardee of Knight Commander of the Order of the Bath and their associated force
  OPTIONAL {
    ?kcbAwardee dbo:title ""Knight Commander of the Order of the Bath""@en ;
               dbo:militaryForce ?kcbAwardeeForce .
  }
  
  # Ensure that the military conflict for William Bayne is the same as the one involving the regiment's commander
  FILTER (?bayneWar = ?regimentCommander)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?commonActor WHERE {
  # Movies featuring Iliza Shlesinger
  VALUES ?ilizaMovie { 
    ?x WHERE { dbr:Iliza_Shlesinger dbo:starring ?x }
  }

  # Actor from ""Always (1989 film)""
  VALUES ?alwaysActor { 
    ?y WHERE { dbr:Always_(film) dbo:starring ?y }
  }

  # Spouse of Janusz Kamiński
  VALUES ?januszSpouse { 
    ?z WHERE { dbr:Janusz_Kamiński dbo:spouse ?z }
  }

  # Find a common actor in a movie with Iliza Shlesinger and an actor from ""Always""
  ?movieURL dbo:starring ?commonActor .
  
  FILTER (?commonActor IN(?ilizaMovie, ?alwaysActor))

  # Ensure the movie also features Janusz Kamiński's spouse
  OPTIONAL { 
    ?movieURL dbo:starring ?januszSpouse .
  }

  FILTER EXISTS {
    ?movieURL dbo:starring ?januszSpouse .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?event WHERE {
  # Leopold V, Archduke of Austria (father of Cecilia Renata)
  dbr:Cecilia_Renata_of_Austria dbo:father dbr:Leopold_V,_Archduke_of_Austria .

  # Ferdinand III's child who was a commander
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child dbr:Leopold_I,_Holy_Roman_Empire .
  
  # Common child of Leopold V and Leopold I
  dbr:Leopold_V,_Archduke_of_Austria dbo:child ?commonChild .
  dbr:Leopold_I,_Holy_Roman_Empire dbo:child ?commonChild .

  # Identify the societal event/television show related to Algerian War
  ?commonChild rdfs:label ""Maria Anna of Spain""@en .
  
  OPTIONAL {
    ?event dbo:relatedEvent ?commonChild ;
           a dbo:SocietalEvent, dbo:TelevisionShow ;
           dbo:militaryForce dbr:Military_force_of_the_Algerian_War .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shobhnaBirthCountry ?jamsetjiWorkNative WHERE {
  # Query for Shobhna Samarth's birthplace country
  OPTIONAL {
    dbr:Shobhna_Samarth dbo:birthPlace ?shobhnaBirthPlace .
    ?shobhnaBirthPlace dbo:country ?shobhnaBirthCountry .
  }
  
  # Query for Jamsetji Tata's notable Indian work and its native
  OPTIONAL {
    dbr:Jamsetji_Tata dbo:notableWork ?jamsetjiNotableWork .
    FILTER (CONTAINS(LCASE(STR(?jamsetjiNotableWork)), ""india""))
    ?jamsetjiNotableWork dbo:native ?jamsetjiWorkNative .
  }
}
```",4,6,5,2,2,2,2,9,0,1,22,0.0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?soccerPlayerTeam WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Soccer_Manager .
  
  # Person born on 1955-02-22 who is an athlete
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:sport ?sport .

  # Actor who is a soccer player and athlete in Manuel Huerga's film
  ?actor dbo:sport dbr:Soccer ;
         dbo:sport ?athleteSport ;
         dbo:film ?film .
  
  ?film dbo:director dbr:Manuel_Huerga .

  # Find the team of the soccer player who is also a manager and played with the athlete
  ?person1 dbo:team ?soccerPlayerTeam .
  ?athlete dbo:team ?soccerPlayerTeam .

  FILTER (?athleteSport = dbr:Soccer)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?governorBirthPlace ?paulusPowellBirthPlace ?ceceBellBirthPlace WHERE {
  # Vince Gilligan's awards and birthplace
  VALUES ?vinceGilligan { dbr:Vince_Gilligan }
  ?vinceGilligan dbo:award ?award .
  
  OPTIONAL {
    ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }

  # Governor of Vince Gilligan's birth place
  OPTIONAL {
    ?region dbo:administrativeRegion ?vinceGilliganBirthPlace .
    ?governor dbo:governmentRole dbr:Governor_of_?region .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }

  # Paulus Powell's birthplace
  VALUES ?paulusPowell { dbr:Paulus_Powell }
  OPTIONAL {
    ?paulusPowell dbo:birthPlace ?paulusPowellBirthPlace .
    FILTER (isIRI(?paulusPowellBirthPlace))
  }

  # Author of El Deafo and her birthplace
  VALUES ?ceceBell { dbr:Cecelia_A._""Cece""_Bell }
  OPTIONAL {
    ?ceceBell dbo:birthPlace ?ceceBellBirthPlace .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hashibaHidekatsuWar ?yamazaEnjirōBirthPlaceEntity ?koichirōPerson ?koichirōWar WHERE {
  # Wars associated with Hashiba Hidekatsu
  OPTIONAL {
    dbr:Hashiba_Hidekatsu dbo:associatedWith ?hashibaHidekatsuWar .
  }
  
  # Birthplace of Yamaza Enjirō
  OPTIONAL {
    dbr:Yamaza_Enjirō dbo:birthPlace ?yamazaEnjirōBirthPlaceEntity .
  }

  # Person born as Koichirō and their associated war
  OPTIONAL {
    ?koichirōPerson foaf:name ""Koichirō""@en .
    ?koichirōPerson dbo:associatedWith ?koichirōWar .
  }
}
```",5,5,6,2,3,2,3,28,0,2,2,0.0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  ?event dbo:agent ?person ;
         a dbo:PoliticalEvent .

  ?event dbo:positionHeld ?office ;
         dbo:country dbr:Spain ;
         dbo:party dbr:Spanish_Socialist_Workers'_Party .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  VALUES ?annSothernBirthName { dbr:Ann_Sothern }
  
  # Actor of ""1,000 Dollars a Minute""
  ?actor dbo:title ""1,000 Dollars a Minute""@en .
  
  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Landmark at elevation 20.1168
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)

  # Ruling party in the location of the landmark
  ?location dbo:location ?landmark .
  ?party dbo:country ?location .
  ?member dbo:memberOf ?party .

  # Combine information to find the person who is both spouse and ruling party member
  FILTER(?spouse = ?member)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find writers of ""No Alternative""
  VALUES ?noAlternative { dbr:No_Alternative }
  
  ?noAlternative dbo:writer ?writer .
  
  # Step 2: Find band members of the writer
  ?writer dbo:bandMember ?bandMember .

  # Step 3: Find associated musical artists for each band member
  OPTIONAL {
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Step 4: Identify producer of ""Lotus"" by R.E.M.
  VALUES ?lotus { dbr:Lotus_(R.E.M._song) }
  
  ?lotus dbo:producer ?producer .

  # Ensure the producer is an organization and also a band/group
  FILTER EXISTS { ?producer a dbo:Organization . }
  FILTER EXISTS { ?producer a (dbo:Band | dbo:MusicalGroup) . }

  # Step 5: Find artist associated with this producer
  OPTIONAL {
    ?producer dbo:associatedMusicalArtist ?artist .
    FILTER (?artist = ?bandMember)
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Author of ""El Deafo""
  OPTIONAL {
    dbr:El_Deafo dbo:author ?author .
    ?author dbo:birthPlace ?authorBirthPlace .
  }

  # Governor of Virginia
  OPTIONAL {
    dbr:Governor_of_Virginia dbo:officeHolder ?governor .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }
  
  # Awardee associated with Vince Gilligan (assuming Emmy Awards)
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Actor_in_a_Drama_Series .
    ?awardee dbo:awardReceived dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Actor_in_a_Drama_Series .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",7,8,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherURL ?yeshaqParentURL ?shadowAlterEgo WHERE {
  # Find Na'od's father
  ?naod a dbo:Person ;
        dbo:father ?naodsFather .

  # Find Na'od's grandfather (father of Na'od's father)
  ?naodsFather dbo:father ?grandfather .
  
  # Ensure the grandfather is both royalty and office holder
  ?grandfather rdf:type dbo:Monarch, dbo:OfficeHolder ;
               rdfs:label ?grandfatherLabel .

  # Find Yeshaq I's parent who is a royalty
  dbr:Yeshaq_I dbo:parent ?yeshaqParent .
  ?yeshaqParent rdf:type dbo:Monarch .

  # Link Lamont Cranston to ""The Shadow""
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow ;
                      rdfs:label ?shadowAlterEgoLabel .

  FILTER (CONTAINS(LCASE(?grandfatherLabel), ""na'od"") && 
          CONTAINS(LCASE(?yeshaqParentURL), ""yeshaq i""))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel WHERE {
  # Charles I of Hungary's father and grandfather
  dbr:Charles_I_of_Hungary dbo:father dbr:Charles_Martel_of_Anjou .
  dbr:Charles_Martel_of_Anjou dbo:father dbr:Charles_II_of_Naples .

  # Philip I, Prince of Taranto's father and spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
  ?philipFather dbo:spouse ?catherineOfValoisCourtenay .
  FILTER (str(?catherineOfValoisCourtenay) = ""Catherine of Valois-Courtenay"")

  # Stephen V's predecessor and their lineage
  dbr:Ladislaus_IV_of_Hungary dbo:successor dbr:Stephen_V_of_Hungary .
  dbr:Ladislaus_IV_of_Hungary dbo:child dbr:Elizabeth_of_Poland,_Queen_of_Hungary .
  dbr:Elizabeth_of_Poland,_Queen_of_Hungary dbo:child ?maryOfHungary .

  # Check if Charles II is royalty and matches the spouse
  FILTER (str(dbr:Charles_II_of_Naples) = str(?catherineOfValoisCourtenay))
  
  BIND(dbr:Charles_II_of_Naples AS ?parentOfCharlesMartel)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOffice ?ruizGallardonResidence ?militaryConflict WHERE {
  # Leader of the Conservative Republican Party (Spain)
  VALUES ?conservativeRepublicanParty { 
    dbr:Conservative_Party_(Spain) 
  }
  
  ?conservativeRepublicanParty dbo:leader ?leader .
  ?leader dbo:officeHolder ?leaderOffice .

  # Residence associated with Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizGallardonResidence .

  # Military conflict involving Manuel Pinto da Costa as a commander
  VALUES ?manuelPintoDaCosta { 
    dbr:Manuel_Pinto_da_Costa 
  }
  
  ?militaryConflict dbo:militaryCommander ?manuelPintoDaCosta .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Sandro Bertaggia's birthplace which is a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthCountry .
  FILTER (dbo:country(?birthCountry)) .

  # Alexander II, Grand Duke of Finland native to Russian Empire
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nativeCountry dbr:Russian_Empire .

  # Person who died at the birthplace of Sandro Bertaggia and was native to Russian Empire
  ?personDecedent dbo:deceasedAt ?birthCountry .
  ?personDecedent dbo:nativeCountry dbr:Russian_Empire .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Identify French Montana as a member of GS9
  dbr:French_Montana dbo:memberOfGroup dbr:GS9 .

  # Step 2: Find the award associated with New York (state)
  ?award dbo:location dbr:New_York_(state) .
  
  # Ensure the location is also a region, American state, and settlement
  ?award dbo:region dbr:New_York_(state) .
  ?award dbo:country dbr:United_States .
  ?award dbo:settlement dbr:New_York_City .

  # Step 3: Identify the awardee band
  ?award dbo:awardee ?band .

  # Ensure the awardee is a band
  ?band rdf:type dbo:Band .

  # Step 4: Find associated musical artist of GS9 member (French Montana)
  OPTIONAL {
    dbr:French_Montana dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Step 5: Identify the band members of that associated musical artist
  ?associatedArtist dbo:bandMember ?bandMember .

  # Ensure the associated artist is a musical artist
  ?associatedArtist rdf:type dbo:MusicalArtist .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity ?warOfAlexanderDavydov ?warOfAwardee25 WHERE {
  # Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceEntity .

  # Alexander Lvovich Davydov's associated war
  dbr:Aleksandr_Davydov dbo:associatedWithWar ?warOfAlexanderDavydov .

  # War of the Awardee of 25 (assuming it refers to a specific award or event)
  OPTIONAL {
    ?award dbo:relatedToWar ?warOfAwardee25 .
    FILTER regex(str(?award), ""25"", ""i"") # Assuming '25' is part of the award's name
  }

  # Linking the wars if needed (assuming there might be a connection to explore)
  OPTIONAL {
    ?warOfAlexanderDavydov dbo:relatedToWar ?warOfAwardee25 .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Identify the leader of West Germany (Chancellor)
  ?leader dbo:position ""Chancellor""@en .
  ?leader dbo:country dbr:West_Germany .

  # Manager of SBV Vitesse for 2020–21
  ?manager dbo:managedTeam dbr:SBV_Vitesse ;
           dbo:managementPeriod ?period1 .
  FILTER (STRSTARTS(STR(?period1), ""2020""))

  # Successor team/league of VfL Bochum's 2006-07 season and its manager
  ?successorTeam dbo:succeededBy dbr:VfL_Bochum ;
                 dbo:manager ?manager .
  FILTER (EXISTS { ?player dbo:playsFor ?successorTeam })

  # Ensure the same person is identified in all roles
  FILTER (?leader = ?manager)

  # Find native country of this person
  ?leader dbo:nationality ?nativeCountry .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residentOfSofiaBirthplace ?alumnusBirthplace WHERE {
  # Find a notable person associated with Sofia
  ?person dbo:residence dbr:Sofia .
  
  # Get the birthplace of this person
  ?person dbo:birthPlace ?residentOfSofiaBirthplace .

  # Find an alumnus of Пловдивски университет „Паисий Хилендарски“
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisius_of_Hilendar .
  
  # Get the birthplace of this alumnus
  ?alumnus dbo:birthPlace ?alumnusBirthplace .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?tripleXsWar ?tripleXsMilitaryForce WHERE {
  # Military force involved in Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:militaryForce ?battleMilitaryForce .

  # Awardee of Knight Commander of the Order of the Bath who was a commander in a war
  ?awardee dbo:awardeeOfOrder dbr:Knight_Commander_of_the_Order_of_the_Bath ;
           dbo:commanderInWar ?tripleXsWar .
  
  # The Triple X's as a historical figure and their military force
  dbr:The_Triple_X_s dbo:commanderInWar ?tripleXsWar ;
                    dbo:militaryForce ?tripleXsMilitaryForce .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedMusicalArtist WHERE {
  VALUES ?cynthiaMorgan { dbr:Cynthia_Morgan_(singer) }
  
  OPTIONAL {
    ?cynthiaMorgan dbo:associatedMusicalArtist ?associatedMusicalArtist .
  }

  OPTIONAL {
    ?movie dbo:starring ?cynthiaMorgan .
    ?movie dbo:reference Afeez_Oyetoro .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Find the alter ego in ""The Golden Master"" series
  ?alterEgo dbo:alterEgo ?professional .
  FILTER(STRSTARTS(LCASE(?alterEgo), LCASE(""the golden master"")))

  # Step 2: Identify the author of ""Smartbomb""
  ?smartbomb dbo:author ?author .

  # Step 3: Find actors from the film ""ATL""
  ?atl dbo:actor ?atlasActor .

  # Step 4: Locate a common movie where both the author and an ATL actor acted
  ?commonMovie dbo:starring ?author ;
              dbo:starring ?atlasActor .

  # Ensure the professional is linked to this common movie
  ?professional dbo:film ?commonMovie .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies with Herschel Bernardi as an actor
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Step 2: Identify Mariclare Costello and trace her spouse's child to a professional photographer
  ?mariclare dbo:spouse ?spouse .
  ?child dbo:parent ?spouse ;
         dbo:parent ?mariclare .
  ?photographer dbo:parent ?child ;
                rdf:type dbo:Photographer .

  # Step 3: Find actors of the movie identified in step 1
  ?movie dbo:starring ?actor .
  
  FILTER(?photographer != dbr:Herschel_Bernardi) # Ensure it's not Herschel Bernardi again
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military force involved in the Algerian War
  ?algerianWar dbo:militaryForce ?militaryForce .
  FILTER regex(str(?algerianWar), ""Algerian War"", ""i"") .

  # Identify a commander who is also a societal event, an event, and appeared on a television show
  ?commander dbo:memberOf ?militaryForce ;
            a dbo:SocietalEvent ;
            a dbo:Event ;
            dbo:appearanceOnTelevisionShow ?tvShow .

  # Ferdinand II's child (Archduke Leopold V)
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child dbr:Archduke_Leopold_V_of_Austria .
  
  # Archduke Charles Joseph of Austria
  dbr:Archduke_Leopold_V_of_Austria dbo:child ?parentOfCharlesJoseph .

  # The commander should be a child of Ferdinand II's child (i.e., Leopold V)
  ?commander dbo:child ?parentOfCharlesJoseph .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?ericClaptonBand ?kimWilsonBand WHERE {
  # Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Eric Clapton's band members and their bands
  ?ericClaptonBandMember dbo:bandMember ?ericClaptonBand .
  ?ericClaptonBand dbo:member ?ericClaptonBandMember .
  FILTER (str(?ericClaptonBandMember) = ""Eric Clapton"") .

  # Kim Wilson's band
  dbr:Kim_Wilson dbo:associatedMusicalArtist ?kimWilsonBand .
  FILTER (str(?kimWilsonBand) = ""The Fabulous Thunderbirds"")
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find James Plotkin's associated musical artist
  dbr:James_Plotkin dbo:associatedMusicalArtist ?artist1 .
  
  # From this artist, find another associated musical artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Ensure the final entity is a band, group, and organization
  ?artist2 rdf:type dbo:Band ;
           rdf:type dbo:Group ;
           rdf:type dbo:Organization .
  
  # Optional: Filter for Burnt by the Sun if needed
  OPTIONAL { 
    VALUES ?burntByTheSun { dbr:Burnt_by_the_Sun }
    FILTER (?artist2 = ?burntByTheSun)
  }

  # Return the band member of this final entity
  ?artist2 dbo:bandMember ?bandMember .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marianoRajoyOffice ?partyLeaderOffice ?madridElectionLeaderResidence WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .

  # Miguel Maura's political party and its leader's office
  dbr:Miguel_Maura dbo:politicalParty ?miguelMauraParty .
  ?partyLeader dbo:leader ?miguelMauraParty ;
               dbo:office ?partyLeaderOffice .

  # Leader of the 2003 Madrid City Council election and their residence
  dbr:2003_Madrid_City_Council_election dbo:leader ?madridElectionLeader .
  ?madridElectionLeader dbo:residence ?madridElectionLeaderResidence .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Find a child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?child dbo:parent dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne .
  
  # Find the parent of Mary Elphinstone, Lady Elphinstone
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?maryParent .

  # Ensure the common parent is also a parent to both individuals
  ?child dbo:parent ?commonParent .
  ?maryParent = ?commonParent .

  # Find William Gayner's birthplace and ensure it is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?gaynerBirthPlace .
  
  # Ensure the birthplace is classified as both a region and a country
  ?gaynerBirthPlace rdf:type dbo:Region ;
                   rdf:type dbo:Country .

  # The common parent must be native to this place
  ?commonParent dbo:nativePlace ?gaynerBirthPlace .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata dbo:father ?fatherOfCecilia .
  VALUES ?ceciliaRenata { dbr:Cecilia_Renata_of_Austria }

  # Archduke Charles Joseph's parent (father)
  ?charlesJoseph dbo:parent ?parentOfCharles .
  VALUES ?charlesJoseph { dbr:Archduke_Charles_Joseph_of_Austria }
  
  # Commander in war
  ?commander dbo:commanderInWar ?war .
  ?commander dbo:associatedWith ?dragoonRegiment .
  FILTER (?dragoonRegiment = dbr:2nd_Dragoon_Regiment_(France))

  # Societal event, event, and television show
  ?entity dbo:societalEvent ?societalEvent .
  ?entity dbo:event ?event .
  ?entity dbo:televisionShow ?tvShow .

  # Relationships
  FILTER (?fatherOfCecilia = ?parentOfCharles)
  FILTER (?commander = ?entity)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?royaltyChild .
  
  # Child is royalty
  ?royaltyChild rdf:type dbo:Monarch .

  # Parent of Dorothea of Lorraine
  ?parent dbo:child dbr:Dorothea_of_Lorraine .
  ?royaltyChild dbo:parent ?parent .

  # Spouse of the parent, who must be royalty and noble
  ?parent dbo:spouse ?spouse .
  
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch . }
  FILTER EXISTS { ?spouse rdf:type dbo:Noble . }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieClaimToFame ?workClaimToFame WHERE {
  dbr:Janet_Gaynor dbo:filmDebut ?movieClaimToFame .
  OPTIONAL { 
    dbr:Janet_Gaynor dbo:notableWork ?workClaimToFame .
  }
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName ?politicalParty ?colombianEntity WHERE {
  # Find Sofia Petro's father
  dbr:Sofía_Petro dbo:father ?father .
  
  # Get the name of her father
  ?father rdfs:label ?fatherName .

  # Determine the political party associated with her father
  OPTIONAL { 
    ?father dbo:partyAffiliation ?politicalParty .
  }

  # Find a relevant entity in Colombia related to this context
  OPTIONAL {
    ?colombianEntity dbo:country dbr:Colombia .
    FILTER (CONTAINS(LCASE(?fatherName), ""colombia"") || CONTAINS(LCASE(?politicalParty), ""colombia""))
  }
  
  # Filter results for human-readable labels in English
  FILTER (LANG(?fatherName) = 'en')
  FILTER (langMatches(lang(?politicalParty), 'EN'))
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?associatedArtist WHERE {
  # Nick Curran as a musical artist
  dbr:Nick_Curran rdf:type dbo:MusicalArtist .
  
  # Associated musical artist of Nick Curran
  dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is connected to The Fabulous Thunderbirds
  OPTIONAL {
    ?associatedArtist dbo:bandMember dbr:The_Fabulous_Thunderbirds .
  }

  # Reference Kim Wilson's band, which is The Fabulous Thunderbirds
  dbr:Kim_Wilson dbo:bandMember dbr:The_Fabulous_Thunderbirds .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?actor WHERE {
  VALUES ?rustlersRhapsody { 
    dbr:Rustlers'_Rhapsody 
  }
  
  OPTIONAL {
    ?rustlersRhapsody dbo:director ?professionalRole .
  }

  OPTIONAL {
    ?rustlersRhapsody dbo:starring ?actor .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shaggyAssociatedArtist ?joeyBAssociatedArtist WHERE {
  VALUES ?shaggyResource { 
    dbr:Shaggy_(musician) 
  }
  OPTIONAL {
    ?shaggyResource dbo:associatedMusicalArtist ?shaggyAssociatedArtist .
  }

  VALUES ?joeyBResource { 
    dbr:Joey_B 
  }
  OPTIONAL {
    ?joeyBResource dbo:associatedMusicalArtist ?joeyBAssociatedArtist .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  dbr:Iliza_Shlesinger dbo:starring ?movie .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # GS9 as the starting point
  VALUES ?gs9 { dbr:GS9 }
  
  # Find members of GS9 who are both artists and musical artists
  ?member dbo:member ?gs9 .
  FILTER (?member != ?gs9) .
  ?member rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .

  # For each member, find their associated musical artists
  OPTIONAL {
    ?member dbo:associatedMusicalArtist ?associatedArtist .
    
    # Find band members of these associated musical artists
    OPTIONAL {
      ?bandMember dbo:member ?associatedArtist .
      FILTER (?bandMember != ?associatedArtist) .
      
      # Ensure the band member is a musical artist
      ?bandMember rdf:type dbo:MusicalArtist .
    }
  }
  
  # Return only those entities that are valid band members
  FILTER EXISTS { ?bandMember . }
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonArtist WHERE {
  # Find associated musical artists of Nick Curran
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  
  # Find the band (The Fabulous Thunderbirds) associated with Kim Wilson
  dbr:The_Fabulous_Thunderbirds dbo:leadSinger dbr:Kim_Wilson ;
                               dbo:associatedMusicalArtist ?thBandAssociatedArtist .

  # Filter to find common artists between Nick Curran and The Fabulous Thunderbirds
  FILTER (?nickCurranAssociatedArtist = ?thBandAssociatedArtist)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?leaderOffice WHERE {
  # Find administrations associated with PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  # Find the leader of the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  ?election dbo:headOfGovernment ?leader .

  # Get the office of the leader
  ?leader dbo:office ?leaderOffice .

  # Ensure the administration is Spanish
  ?administration dbo:country dbr:Spain .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumActor ?movieActor WHERE {
  # Find the album of ""What You Know"" by T.I.
  ?song dbo:title ""What You Know"" ;
        dbo:artist dbr:T.I. ;
        dbo:album ?album .
  
  # Find actors associated with the album
  OPTIONAL { 
    ?album dbo:actor ?albumActor .
  }
  
  # Find the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb"" ;
        dbo:author ?author .

  # Find movies featuring this author as an actor
  OPTIONAL {
    ?movie dbo:starring ?author ;
           dbo:actor ?movieActor .
  }

  FILTER (?albumActor = ?movieActor)
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Myat Hpone Pyo's predecessor
  ?predecessor dbo:predecessor dbr:Myat_Hpone_Pyo .
  
  # Ensure the person is a child of Saw Min Hla
  ?child dbo:parent dbr:Saw_Min_Hla .
  
  # Identify Myat Hpone Pyo's father and his spouse who is royalty
  dbr:Myat_Hpone_Pyo dbo:father ?father .
  ?father dbo:spouse ?royalSpouse .
  FILTER (?royalSpouse rdf:type dbo:RoyalFamilyMember) .

  # Match the person across all conditions
  FILTER (?predecessor = ?child && ?child = ?royalSpouse)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?singerProfession ?shadowAlterEgo ?bandName WHERE {
  # Find Robert Lamar Thompson in DBpedia
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  
  # Check if he has a profession as a singer
  OPTIONAL { 
    ?person dbo:profession ?singerProfession .
    FILTER(CONTAINS(LCASE(STR(?singerProfession)), ""singer""))
  }
  
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .

  # Check if Robert Lamar Thompson is associated with a band as a musical artist
  OPTIONAL {
    ?person dbo:associatedBand ?band .
    ?band rdf:type dbo:MusicalArtist .
    BIND(STR(?band) AS ?bandName)
  }
}
```",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?birthName WHERE {
  ?artist dbo:musicalArtist true .
  ?artist dbo:birthPlace dbr:Florida .
  ?artist dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,59,0,0.0,0
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInTeam ?person WHERE {
  # Get Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?team .
  
  # Find players in that team
  ?playerInTeam dbo:playerInTeam ?team .

  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthDate ?birthdate .

  # Filter for a person who is both a soccer player and manager, born on the same date as Marcelo Sarmiento
  ?person rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SoccerManager ;
          dbo:birthDate ?birthdate .
  
  # Ensure the person is also in Juan Carlos Molina's team
  FILTER (?playerInTeam = ?person)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingPartyMember ?actorSpouse WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""20.1168""^^xsd:float .
  
  # Identify the ruling party associated with this landmark
  ?partyMember dbo:memberOf ?party ;
               dbo:officeHolder ?landmark .

  # Find the actor of ""1,000 Dollars a Minute""
  ?film dbo:title ""1,000 Dollars a Minute""@en ;
        dbo:actor ?actor .
  
  # Identify Harriette Arlene Lake
  ?person foaf:name ""Harriette Arlene Lake"" ;
          rdf:type dbo:Person .

  # Check if the actor is the same person as Harriette Arlene Lake
  FILTER (?actor = ?person)

  # Find the spouse relationship between the ruling party member and the actor
  OPTIONAL {
    ?rulingPartyMember dbo:spouse ?actorSpouse .
    FILTER (?actorSpouse = ?partyMember)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award a dbo:Award ;
         dbo:location ?location .
  
  FILTER (?location = dbr:United_States_of_America) .

  OPTIONAL { 
    ?award dbo:settlement ?settlement .
    FILTER EXISTS { ?settlement a dbo:Settlement }
  }

  ?recipient dbo:awardedAward ?award .
  ?recipient dbo:birthPlace ?birthPlace .
  
  FILTER (?birthPlace = dbr:New_York_(state))
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?doonArbusParent ?eugeneCattinProfessionParent WHERE {
  # Find parent of Doon Arbus
  OPTIONAL {
    dbr:Doon_Arbus dbo:parent ?doonArbusParent .
  }
  
  # Identify Eugène Cattin's profession
  OPTIONAL {
    dbr:Eugène_Cattin dbo:profession ?eugeneCattinProfession .
    
    # Find a professional in the same field and their parent
    ?professional dbo:profession ?eugeneCattinProfession .
    ?professional dbo:parent ?eugeneCattinProfessionParent .
  }
}
```",4,4,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobThompsonBand ?bobThompsonProfession 
       ?cokeStudioProducer ?producerProfession WHERE {
  OPTIONAL {
    # Find Bob Thompson's associated band and profession
    dbr:Bob_Thompson_(musician) dbo:associatedBand ?bobThompsonBand .
    dbr:Bob_Thompson_(musician) dbo:profession ?bobThompsonProfession .
  }
  
  OPTIONAL {
    # Find the producer of Coke Studio Philippines and their profession
    dbr:Coke_Studio_Philippines dbo:producer ?cokeStudioProducer .
    ?cokeStudioProducer dbo:profession ?producerProfession .
  }
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?shelbyOaks { 
    dbr:Shelby_Oaks_(TV_series) # Assuming this is the correct resource
  }
  VALUES ?goldenMaster { 
    dbr:The_Golden_Master # Assuming this is the correct resource
  }

  ?shelbyOaks dbo:starring ?actor .
  ?goldenMaster dbo:starring ?actor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Nicholas_Curran dbo:birthDate ?birthDate .
  OPTIONAL { 
    dbr:Nicholas_Curran a dbo:MusicalArtist .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Mariclare_Costello dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Find Duke Anthony Ulrich of Brunswick's resource
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:parent ?parent .

  # From the parent, find children who are royalty
  ?parent dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild rdf:type dbo:Monarch }
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find children of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht dbo:child ?child .
  FILTER (str(?philippAlbrecht) = ""Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg"")

  # For each child, find their parent (predecessor)
  ?child dbo:parent ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Archduke Charles Louis of Austria
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?child .
  
  # Child's child (Grandchild)
  ?child dbo:child ?grandchild .

  # Check if the grandchild is royalty
  ?grandchild dbo:royalTitle ?title .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Find wars associated with the 2nd Dragoon Regiment (France)
  dbr:2nd_Dragoon_Regiment_(France) dbp:participatedInWar ?war .

  # Ensure the war is a societal event
  ?war dbo:socialEvent true .

  # Check if there is a television show depicting this war
  OPTIONAL {
    ?tvShow dbo:depicts ?war .
    FILTER EXISTS { ?tvShow }
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work rdf:type dbo:Book .
  ?work rdf:type dbo:WrittenWork .
  ?work dbo:country dbr:United_States .
  ?work dbo:author dbr:Joe_Biden .
  
  OPTIONAL {
    ?promiseMeDad dbo:author dbr:Joe_Biden .
    FILTER (?work = ?promiseMeDad)
  }
}
```",3,7,4,2,2,3,2,20,0,1,1,0.0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Theodor Heuss's native country
  OPTIONAL { 
    dbr:Theodor_Heuss dbo:birthPlace ?heussBirthPlace .
    ?heussBirthPlace dbo:country ?heussNativeCountry .
  }

  # Manager of 2020–21 SBV Vitesse season
  OPTIONAL {
    dbr:2020%E2%80%9321_SBV_Vitesse_season dbo:manager ?vitesseManager .
    ?vitesseManager dbo:birthPlace ?vitesseManagerBirthPlace .
    ?vitesseManagerBirthPlace dbo:country ?vitesseManagerNativeCountry .
  }

  # Manager of VfL Bochum
  OPTIONAL {
    dbr:VfL_Bochum dbo:manager ?bochumManager .
    ?bochumManager dbo:birthPlace ?bochumManagerBirthPlace .
    ?bochumManagerBirthPlace dbo:country ?bochumManagerNativeCountry .
  }

  # Filter to find common native country
  FILTER (
    (?heussNativeCountry = ?vitesseManagerNativeCountry) &&
    (?vitesseManagerNativeCountry = ?bochumManagerNativeCountry)
  )
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?deathPlace WHERE {
  # Identify the DBpedia resource for ""Aladdin (1958 film)""
  VALUES ?aladdinFilm { 
    dbr:Aladdin_(1958_film) 
  }
  
  # Find actors who starred in this film
  ?aladdinFilm dbo:starring ?actor .
  
  # Get actor's name and death place
  ?actor rdfs:label ?actorName ;
         dbo:deathPlace ?deathPlace .
  
  FILTER (LANG(?actorName) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  VALUES ?janetGaynor { dbr:Janet_Gaynor }
  VALUES ?seventhHeaven { dbr:7th_Heaven_(1927_film) }

  ?seventhHeaven dbo:starring ?janetGaynor .
  ?seventhHeaven dbo:producer ?producer .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?snoopDoggAssociatedArtist ?joeyBAssociatedArtist WHERE {
  VALUES ?calvinBroadus { 
    dbr:Calvin_Cordozar_Broadus_Jr.
  }
  OPTIONAL {
    ?calvinBroadus dbo:associatedMusicalArtist ?snoopDoggAssociatedArtist .
  }

  VALUES ?josephAning { 
    dbr:Joseph_Aning
  }
  OPTIONAL {
    ?josephAning dbo:associatedMusicalArtist ?joeyBAssociatedArtist .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfTheCampusQueen ?associatedMusicalArtistOfCynthiaMorgan WHERE {
  OPTIONAL {
    dbr:The_Campus_Queen dbo:actor ?actorOfTheCampusQueen .
  }
  OPTIONAL {
    dbr:Cynthia_Morgan dbo:associatedMusicalArtist ?associatedMusicalArtistOfCynthiaMorgan .
  }
}
```",2,2,3,1,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?duchyAdmin ?christianIXPosition WHERE {
  OPTIONAL {
    # Attempt to find any administrative role related to the Duchy of Schleswig
    ?duchyAdmin dbo:administrativeRole ?role .
    FILTER(CONTAINS(LCASE(STR(?role)), ""schleswig""))
  }
  
  # Retrieve positions held by Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:positionHeld ?christianIXPosition .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?theTripleXs { 
    dbr:The_Triple_Xs 
  }
  ?theTripleXs dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfCarrieJohnson ?birthNameOfJohnBoxer WHERE {
  # Query for the spouse of Carrie Johnson
  OPTIONAL {
    dbr:Carrie_Johnson dbo:spouse ?spouseOfCarrieJohnson .
  }
  
  # Query for the birth name of John Boxer
  OPTIONAL {
    dbr:John_Boxer foaf:name ?birthNameOfJohnBoxer .
  }
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?awardURL WHERE {
  VALUES ?awardURL { 
    dbr:War_of_the_Awardee_of_25 
    dbr:Golden_Sword_for_Bravery 
  }
}
```",4,4,5,2,2,2,3,28,0,2,1,0.0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tomSawyerProducer ?seventhHeavenProducer WHERE {
  VALUES ?tomSawyerFilm { 
    dbr:The_Adventures_of_Tom_Sawyer_(1938_film) 
  }
  ?tomSawyerFilm dbo:producer ?tomSawyerProducer .

  VALUES ?seventhHeavenWork { 
    dbr:Seventh_Heaven_(1927_film)
  }
  ?seventhHeavenWork dbo:producer ?seventhHeavenProducer .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Russian_Empire .
  ?entity dbo:award ?award .
  
  # Assuming there is a property or way to identify the awardee number
  FILTER (strafter(str(?award), ""Awardee Number "") = ""25"")
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherURL WHERE {
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }
  ?baedaMaryamI dbo:father ?father .
  BIND(STR(?father) AS ?fatherURL)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?ceceBellBirthPlace WHERE {
  VALUES ?vinceGilliganResource { dbr:Vince_Gilligan }
  VALUES ?ceceBellResource { dbr:Cecily_Bell }

  OPTIONAL {
    ?vinceGilliganResource dbo:birthPlace ?vinceGilliganBirthPlace .
  }
  
  OPTIONAL {
    ?ceceBellResource dbo:birthPlace ?ceceBellBirthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:High_Society_Blues dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find children of Ferdinand II, Holy Roman Emperor
  ?child dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  # Ensure the child was a commander in the Thirty Years' War
  ?child dbo:occupation dbr:Thirty_Years_War_commander .

  # Find children of Ferdinand III, Holy Roman Emperor
  ?grandChild dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Ensure the commander is also a parent of one of Ferdinand III's children
  ?commander dbo:child ?grandChild .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreAwardeeForce ?amasaTracyWar ?deceasedPersonBirthplace WHERE {
  # Gillmore Medal Awardee
  ?gillmoreAwardee dbo:award dbr:Gillmore_Medal .
  
  # Force associated with the awardee (assuming military rank or unit)
  OPTIONAL { 
    ?gillmoreAwardee dbo:militaryRank ?rank ;
                     dbo:memberOf ?unit .
    BIND(CONCAT(?rank, "" "", ?unit) AS ?gillmoreAwardeeForce)
  }
  
  # Amasa Tracy's War
  dbr:Amasa_Tracy dbo:participatedIn ?amasaTracyWar .

  # Person deceased on 1850-08-05
  ?deceasedPerson dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
                  dbo:birthPlace ?birthplace .
  
  # Birthplace is a settlement and American
  ?birthplace rdf:type dbo:Settlement ;
              dbo:nationality dbr:United_States .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award WHERE {
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?award dbo:recipient ?awardee .
  OPTIONAL { 
    ?awardee dbo:location dbr:Charleston,_South_Carolina .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?commander { dbr:Charles_de_Gaulle }
  
  # Check if Charles de Gaulle was involved in the Algerian War
  OPTIONAL {
    ?commander dbo:militaryConflict dbr:Algerian_War .
  }

  # Verify lineage connections (hypothetical properties for demonstration)
  OPTIONAL {
    ?commander dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor .
  }
  
  OPTIONAL {
    ?parent dbo:child dbr:Ferdinand_III,_Holy_Roman_Empire ;
            dbo:father ?commander .
  }

  FILTER EXISTS { ?commander dbo:militaryConflict dbr:Algerian_War }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writerOfDucasWork ?greatTurkishWarCommander WHERE {
  # Russo-Polish War Commander
  ?commander dbo:occupation ""Military commander""@en .
  ?commander dbo:participatedInBattle [
    dbo:conflict dbr:Russo-Polish_War_(1654%E2%80%931667)
  ] .

  # Successor who is a politician and office holder
  OPTIONAL {
    ?successor dbo:succeededBy ?commander .
    ?successor dbo:occupation ""Politician""@en ;
              dbo:officeHolder true .
  }

  # Writer of George Ducas' work
  ?ducasWork dbo:author ?writerOfDucasWork .
  ?ducasWork dbo:title ""George Ducas""@en .

  # Commander in the Great Turkish War
  ?greatTurkishWarCommander dbo:occupation ""Military commander""@en ;
                           dbo:participatedInBattle [
                             dbo:conflict dbr:Great_Turkish_War_(1683%E2%80%931689)
                           ] .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?force WHERE {
  ?person dbo:honour ""Commander of the Order of the British Empire""@en .
  ?event dbo:commander ?person ;
         rdf:type dbo:MilitaryEngagement ;
         rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  OPTIONAL { ?person dbo:militaryForce ?force . }
  FILTER (lang(?event) = 'en')
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?shadowAlterEgo WHERE {
  # Find the actor of ""Dispatches from Elsewhere""
  ?dispatchesFromElsewhere dbo:starring ?actor .
  FILTER (strstarts(str(?dispatchesFromElsewhere), ""http://dbpedia.org/resource/Dispatches_from_Elsewhere""))

  # Find the alter ego related to The Shadow in video games
  ?shadowVideoGame dbo:characterName ?shadowAlterEgo .
  FILTER (strstarts(str(?shadowVideoGame), ""http://dbpedia.org/resource/The_Shadow_(video_game)""))
  
  # Check if there's any professional connection between the actor and the alter ego
  OPTIONAL {
    ?actor dbo:profession ?profession .
    FILTER (?profession IN (dbr:Actor, dbr:Comics_character))
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  dbr:Maria_of_Bytom dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerMusicalArtist WHERE {
  # Find the writer(s) of ""The Live Anthology"" who are also musical artists
  VALUES ?album { dbr:The_Live_Anthology }
  
  ?album dbo:composer ?writer .
  ?writer a dbo:Musician ;
          dbo:profession dbr:Writer .

  # Find Tupac Shakur's associated musical artist
  VALUES ?tupacBirthName { dbr:Lesane_Parish_Crooks }
  ?tupacBirthName rdfs:label ""Tupac Shakur""@en .
  
  OPTIONAL {
    ?tupacBirthName dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Match the writer who is a musical artist with Tupac's associated musical artist
  FILTER (?writer = ?associatedArtist)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
  FILTER (
    ?birthPlace IN (
      dbr:Bavaria, 
      dbr:Hesse, 
      dbr:North_Rhine-Westphalia, 
      dbr:Lower_Saxony, 
      dbr:Baden-Württemberg, 
      dbr:Rhineland-Palatinate, 
      dbr:Saxony-Anhalt, 
      dbr:Schleswig-Holstein, 
      dbr:Hamburg, 
      dbr:Bremen, 
      dbr:Berlin_West,
      dbr:Hesse_(state),
      dbr:Saarland
    )
  )
}
```",1,1,2,1,1,3,3,71,0,0,5170,0,0.0,0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration WHERE {
  VALUES ?person { 
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck 
    dbr:Olaf_I_of_Denmark
  }
  OPTIONAL {
    ?person dbo:reign ?administration .
  }
}
```",3,4,4,2,2,2,3,28,0,2,1,0.0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 2 && DAY(?date) = 22)
  ?person dbo:occupation ?occupation .
  FILTER (?occupation = dbr:Athlete || ?occupation = dbr:Sports_player)
}
```",2,3,3,2,1,3,3,71,0,0,18,0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfCommandersParent WHERE {
  # Step 1: Identify the commander in Siege of Mukha
  ?siegeEvent dbo:commander ?commander .
  FILTER(STRSTARTS(LCASE(?siegeEvent), ""mukha siege""))

  # Step 2: Find the parent of this commander who is a royalty
  ?commander dbo:parent ?royalParent .
  ?royalParent rdf:type dbo:Monarch .

  # Step 3: Determine the child of this royal parent
  ?royalParent dbo:child ?childOfCommandersParent .

  # Step 4: Identify Baeda Maryam I's child
  dbr:Baeda_Maryam_I dbo:child ?baedaChild .

  # Step 5: Find the father of Baeda Maryam I's child who is both a royalty and an office holder
  ?baedaChild dbo:father ?royalOfficeHolder .
  ?royalOfficeHolder rdf:type dbo:Monarch ;
                     dbo:officeHolder ?office .

  # Ensure the person found in step 3 matches the one in step 5
  FILTER(?childOfCommandersParent = ?royalOfficeHolder)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?associatedMusicalArtist WHERE {
  VALUES ?ackquillePollard { 
    dbr:Akon 
  }
  
  ?person dbo:birthName ""Ackquille Jean Pollard""@en .
  FILTER (?person = ?ackquillePollard)
  
  ?bandMember dbo:member ?person .
  
  ?gs9Member rdf:type dbo:MusicalArtist ;
             dbo:member dbr:GS9 .
  
  ?gs9Member rdf:type dbo:Artist .
  
  ?gs9Member dbo:associatedMusicalArtist ?associatedMusicalArtist .
  
  FILTER (?bandMember = ?gs9Member)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kiyosuTimeZone ?region WHERE {
  dbr:Kiyosu dbo:timeZone ?kiyosuTimeZone .
  OPTIONAL { 
    ?kiyosuTimeZone dbo:region ?region .
  }
}
```",3,3,4,3,1,3,2,20,0,1,8916,0.0,0.0,0
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Amy Arbus's parent
  dbr:Amy_Arbus dbo:parent ?parent .

  # Find the decedent associated with Los Angeles
  ?decedent dbo:placeOfDeath dbr:Los_Angeles .
  
  # Identify the work/movie involving both individuals
  ?work dbo:starring ?actor ;
        dbo:starring ?parent ;
        dbo:starring ?decedent .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor WHERE {
  # Identify the Great Turkish War event
  VALUES ?greatTurkishWar { dbr:The_Great_Turkish_War }

  # Find the military force or conflict related to this war
  ?force dbo:partOfEvent ?greatTurkishWar .
  
  # Determine the commander associated with Michał Kazimierz Pac
  ?commander dbo:commanderOfMilitaryForce ?force ;
             dbo:associatedWith dbr:Michał_Kazimierz_Pac .

  # Identify the successor who is a politician and an office holder
  OPTIONAL {
    ?successor dbo:successorOf ?commander .
    FILTER EXISTS { ?successor dbo:officeHolder true . }
    FILTER EXISTS { ?successor dbo:politician true . }
  }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?actorName ?actorDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # Actors in ""The Sky Ranger"" (1928 film)
  OPTIONAL {
    dbr:The_Sky_Ranger_1928_film dbo:starring ?actor .
    ?actor rdfs:label ?actorName .
    FILTER(LANG(?actorName) = 'en')
    
    # Actor's death place
    OPTIONAL {
      ?actor dbo:deathPlace ?actorDeathPlace .
    }
  }
}
```",3,3,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaURL WHERE {
  VALUES ?mitakaURL { 
    dbr:Mitaka 
  }
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?colorMeDeadActor ?aladdinActor ?deathPlaceColorMeDead ?deathPlaceAladdin WHERE {
  # Find the actors in ""Color Me Dead""
  OPTIONAL {
    dbr:Color_Me_Dead dbo:starring ?colorMeDeadActor .
    ?colorMeDeadActor dbo:deathPlace ?deathPlaceColorMeDead .
  }
  
  # Find the actors in ""Aladdin (1958 film)""
  OPTIONAL {
    dbr:Aladdin_(film) dbo:starring ?aladdinActor .
    ?aladdinActor dbo:deathPlace ?deathPlaceAladdin .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party ?actor WHERE {
  VALUES ?harriette { dbr:Harriette_Arlene_Lake }
  
  # Find Harriette Arlene Lake's political party
  ?harriette dbo:memberOfParty ?party .
  
  # Identify the ruling party in Central, Louisiana
  ?centralLocation a dbo:Place ;
                  dbo:country dbr:United_States ;
                  rdfs:label ""Central, Louisiana""@en .
  ?rulingParty dbo:isRulingPartyIn ?centralLocation .

  FILTER (?party = ?rulingParty)

  # Find the actor of ""1,000 Dollars a Minute""
  VALUES ?movie { dbr:_1,_000_Dollars_a_Minute }
  ?actor dbo:actedIn ?movie .
  
  # Check if Harriette Arlene Lake is married to this actor
  OPTIONAL {
    ?harriette dbo:spouse ?actor .
  }

  FILTER EXISTS { ?harriette dbo:spouse ?actor }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Ebrahim_Alkazi dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?coraSueCollins a dbo:MusicalArtist ;
                  foaf:name ""Cora Sue Collins""@en .
  
  ?work dbo:artist ?coraSueCollins ;
        a dbo:Work .

  ?work dbo:producer ?producer .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSettlement WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Find the awardee of the Gillmore Medal and their associated force
  ?gillmoreAwardee dbo:awardReceived dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:militaryForce ?force .
  
  # Link the person to the force through the Gillmore Medal awardee
  FILTER (?person = ?gillmoreAwardee)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Russia_national_football_team dbo:commonName ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?otherProfessional WHERE {
  VALUES ?shirleyStoler { dbr:Shirley_Stoler }
  
  ?shirleyStoler dbo:occupation ?profession .
  
  ?otherIndividual a dbo:Person ;
                  dbo:occupation ?profession .
  
  FILTER(?otherIndividual != ?shirleyStoler)
}
```",2,2,3,2,1,3,2,20,0,0,19241,0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?christianIXReign ?olafIReign ?administeredTerritory WHERE {
  # Christian IX of Denmark's reign
  OPTIONAL { 
    dbr:Christian_IX_of_Denmark dbo:reign ?christianIXReign .
  }
  
  # Olaf I of Denmark's reign
  OPTIONAL { 
    dbr:Olaf_I_of_Denmark dbo:reign ?olafIReign .
  }

  # Territories administered from Copenhagen (hypothetical property)
  OPTIONAL {
    ?administeredTerritory dbo:administrativeCenter dbr:Copenhagen .
  }
}
```",3,3,4,1,3,2,3,28,0,3,1,0.0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfCharlesII ?childOfSpouse ?belaIV WHERE {
  # Find the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .
  
  # Find a child of this spouse who is also royalty
  ?spouseOfCharlesII dbo:child ?childOfSpouse .
  ?childOfSpouse rdf:type dbo:Monarch .

  # Ensure the child is also a child of Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:child ?belaIV .
  FILTER (?childOfSpouse = ?belaIV)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?billClinton WHERE {
  ?billClinton a dbo:Person ;
               dbo:spouse dbr:Hillary_Clinton ;
               dbo:author dbr:Back_to_Work_(book) .
  
  OPTIONAL { 
    ?billClinton dbo:militaryService dbr:United_States_Navy .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?title WHERE {
  VALUES ?richardEGrant { dbr:Richard_E._Grant }
  
  ?work dbo:actor ?richardEGrant .
  ?work rdfs:label ?title .
  FILTER (LANG(?title) = 'en')
  
  OPTIONAL {
    ?work rdf:type ?type .
    FILTER (
      ?type IN (dbo:Film, dbo:TelevisionSeries)
    )
  }
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  ?book dbo:author dbr:Bill_Clinton .
  OPTIONAL {
    dbr:Bill_Clinton dbo:commanderInChiefOf dbr:The_Gulf_War .
  }
}
```",4,9,5,2,2,3,3,71,0,7,1,0.0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandGrandChild WHERE {
  # Step 1: Find Alexander of Württemberg's grand-grandchild
  VALUES ?alexander { dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) }
  
  ?alexander dbo:child ?child1 .
  ?child1 dbo:child ?child2 .
  ?child2 dbo:child ?grandGrandChild .

  # Step 2: Find Archduchess Helena's spouse's child
  VALUES ?helena { dbr:Archduchess_Helena_of_Austria }
  
  ?helena dbo:spouse ?spouse .
  ?spouse dbo:child ?spouseChild .

  # Step 3: Find predecessor of the spouse's child
  ?predecessor dbo:succ ?spouseChild .

  # Step 4: Ensure both individuals are royalty
  ?grandGrandChild rdfs:subClassOf* dbo:Royal .
  ?predecessor rdfs:subClassOf* dbo:Royal .

  # Step 5: Match the grand-grandchild with the predecessor
  FILTER (?grandGrandChild = ?predecessor)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edward { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  # Step 2: Find his parent
  ?parent dbo:child ?edward .
  
  # Step 3: Consider any child of this parent (including Edward)
  ?sibling dbo:parent ?parent .
  
  # Step 4: The parent of the sibling is still the original parent
  # Step 5: Ensure this person is both a politician and an office holder
  ?person rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
  
  FILTER (?person = ?parent)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?person .
  
  # Ensure this person is a child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?person .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeURL WHERE {
  dbr:Nobel_Prize_in_Physics dbo:laureate ?awardeeURL .
}
```",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Max_Born dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?frédéricBouralyProfession ?anotherProfessional (SAMPLE(?anotherProfessionalLabel) AS ?anotherProfessionalName)
WHERE {
  # Get Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?frédéricBouralyProfession .
  
  # Find another professional in the same field
  ?anotherProfessional a dbo:Person ;
                     rdfs:label ?anotherProfessionalLabel ;
                     dbo:profession ?frédéricBouralyProfession .
  
  FILTER(LANG(?anotherProfessionalLabel) = 'en')
  FILTER(?anotherProfessional != dbr:Frédéric_Bouraly)
}
LIMIT 1
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoURL WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ""Lamont Cranston""@en .
  ?alterEgo foaf:page ?alterEgoURL .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Myat Hpone Pyo and his predecessor Saw Shwe Khet
  ?myatHponePyo dbo:predecessor ?sawShweKhet .
  
  FILTER (str(?sawShweKhet) = ""Saw_Shwe_Khet""^^xsd:string)
  
  # Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Royal .

  # Find the father of this child (who should be Saw Shwe Khet)
  ?father dbo:child ?child .
  
  FILTER (?father = ?sawShweKhet)

  # Find the spouse of this father
  ?father dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse a dbo:Royal .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?producer WHERE {
  VALUES ?film { 
    dbr:A_Star_Is_Born_(1937_film) 
  }
  
  ?collins dbo:profession ?professionalRole .
  ?collins dbo:producer ?producer .

  FILTER (?producer = ?film)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gustavoPetroParty ?royBarrerasParty WHERE {
  dbr:Gustavo_Petro dbo:partyAffiliation ?gustavoPetroParty .
  dbr:Roy_Barreras dbo:partyAffiliation ?royBarrerasParty .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:India .
}
```",1,1,2,1,1,2,2,9,8977,0,0,1.0,1.0,1.0
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Elvira_of_Castile dbo:spouse dbr:Ferdinand_III_of_Sicily .
  OPTIONAL { 
    dbr:Elvira_of_Castile dbo:child ?child .
  }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?otherActor WHERE {
  dbr:Herschel_Bernardi dbo:starring ?movie .
  ?movie dbo:actor ?otherActor .
  FILTER (?otherActor != dbr:Herschel_Bernardi)
}
```",2,3,3,2,1,3,3,71,0,0,67,0,0.0,0
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?margareteChild ?philippAlbrechtChild ?alexanderGreatGrandchild WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  OPTIONAL { 
    dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?margareteChild .
  }

  # Find the child of Philipp Albrecht, Duke of Württemberg
  OPTIONAL {
    dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippAlbrechtChild .
  }
  
  # Trace back to Alexander of Württemberg's great-grandchild
  OPTIONAL {
    dbr:Aleksander_Karol_Józef_Ludwik_Franciszek_Xawery_W%C3%BCrttemberski dbo:child ?alexanderChild .
    ?alexanderChild dbo:child ?alexanderGrandchild .
    ?alexanderGrandchild dbo:child ?alexanderGreatGrandchild .
  }

  # Ensure the predecessor relationship
  FILTER (?philippAlbrechtChild = ?alexanderGreatGrandchild)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?headquarter ?tenantCountry WHERE {
  # Find the office held by Alberto Núñez Feijóo
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en ;
          dbo:nationality dbr:Spain .
  
  ?office dbo:officeHolder ?person ;
          dbo:headquarter ?headquarter .

  # Find the tenant of the headquarter
  ?headquarter dbo:tenant ?tenantCountry .

  # Ensure the tenant is a country
  ?tenantCountry a dbo:Country .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryOfWork ?winstonChangBirthPlace WHERE {
  # Find the country associated with a work by Lao She
  OPTIONAL {
    dbr:Rickshaw_Boy dbo:country ?countryOfWork .
  }
  
  # Find the birthplace of Winston Chang
  OPTIONAL {
    dbr:Winston_Chang dbo:birthPlace ?winstonChangBirthPlace .
  }
}
```",3,3,4,2,2,3,2,20,1,3,0,0.25,1.0,0.4
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eventURL ?redirectedEvent WHERE {
  VALUES ?eventURL { 
    dbr:Sinking_of_Prince_of_Wales_and_Repulse 
  }
  OPTIONAL {
    ?eventURL dbo:wikiPageRedirects ?redirectedEvent .
  }
  FILTER EXISTS {
    ?redirectedEvent rdf:type dbo:MilitaryConflict .
    # Check if it is also a societal event
    OPTIONAL { ?redirectedEvent rdf:type dbo:SocietalEvent . }
  }
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusBirthplace ?renetaKamberovaBirthplace WHERE {
  # Find the birthplace of Boyko Borisov, an alumnus of Plovdiv University ""Paisii Hilendarski""
  dbr:Boyko_Borisov dbo:birthPlace ?alumnusBirthplace .
  
  # Find the birthplace of Reneta Kamberova
  dbr:Reneta_Kamberova dbo:birthPlace ?renetaKamberovaBirthplace .
}
```",3,3,4,2,2,3,2,20,1,3,0,0.25,1.0,0.4
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName WHERE {
  # Resource for Siege of Padua
  dbr:Siege_of_Padua dbo:commander ?commander .
  
  # Check if the commander is a monarch (royalty)
  ?commander rdf:type dbo:Monarch .

  # Get the name of the commander
  ?commander rdfs:label ?commanderName .
  
  FILTER(LANG(?commanderName) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfResidence WHERE {
  ?davidLuckman a dbo:Person ;
                foaf:name ""David Luckman""@en .
  
  ?davidLuckman dbo:residence ?residence .

  ?person dbo:nativePlace ?residence .
  BIND(?person AS ?nativeOfResidence)
}
```",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?commander .
  
  # Eleonore of Austria, Queen of Poland's father
  dbr:Eleonore_of_Austria_Queen_of_Poland dbo:father ?commander .

  # Commander of the 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?dragoonRegiment dbo:commander ?commander .
    FILTER(STRSTARTS(STR(?dragoonRegiment), ""http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)""))
  }

  # Associated with a societal event
  OPTIONAL {
    ?societalEvent dbo:associatedWith ?commander .
  }
  
  # Associated with an event or television show
  OPTIONAL {
    ?eventOrShow dbo:associatedWith ?commander .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify the TV show featuring Richard E. Grant
  ?tvShow dbo:starring dbr:Richard_E._Grant .
  
  # Step 2: Find actors in this TV show
  ?tvShow dbo:starring ?actor .

  # Step 3: Identify The Shadow's alter ego and related roles
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Step 4: Find any professional role related to Lamont Cranston in media
  OPTIONAL {
    ?role dbo:characterName dbr:Lamont_Cranston ;
          dbo:actor ?actor .
  }
}
```",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?show { 
    dbr:Dispatches_from_Elsewhere_(TV_series) 
  }
  
  ?show dbo:castMember ?actor .
  ?actor a dbo:Actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?worldWarIIURL ?sinkingEvent WHERE {
  VALUES ?worldWarIIURL { 
    dbr:World_War_II 
  }
  
  OPTIONAL {
    ?worldWarIIURL dbo:wikiPageWikiLink ?sinkingEvent .
    FILTER (CONTAINS(LCASE(STR(?sinkingEvent)), ""sinking of prince of wales and repulse""))
  }
}
```",3,5,4,3,1,3,2,20,0,1,12,0.0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?singerURL WHERE {
  ?singerURL rdf:type dbo:Singer .
}
```",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfParent ?spouseOfSawShweKhet ?predecessor WHERE {
  # Min Hla Htut of Pyakaung and his parent
  ?minHlaHtut dbo:parent ?parent .
  FILTER(STR(?minHlaHtut) = ""Min_Hla_Htut_of_Pyakaung"")

  # Child of the parent (grandchild of Min Hla Htut)
  ?parent dbo:child ?childOfParent .

  # Saw Shwe Khet and his spouse
  ?sawShweKhet dbo:spouse ?spouseOfSawShweKhet .
  FILTER(STR(?sawShweKhet) = ""Saw_Shwe_Khet"")

  # Ensure the child of Min Hla Htut's parent is also Saw Shwe Khet's spouse
  FILTER(?childOfParent = ?spouseOfSawShweKhet)

  # Saw Shwe Khet and his child
  ?sawShweKhet dbo:child ?childOfSawShweKhet .

  # Predecessor relationship (assuming a predecessor property exists)
  OPTIONAL {
    ?predecessor dbo:predecessor ?childOfSawShweKhet .
    FILTER(?predecessor = ?spouseOfSawShweKhet)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonArtist WHERE {
  # E.L.'s associated musical artist
  OPTIONAL { 
    dbr:E_L dbo:associatedMusicalArtist ?elAssociatedArtist .
  }
  
  # Writer of ""The Live Anthology"" who is a musical artist
  OPTIONAL {
    dbr:The_Live_Anthology dbo:writer ?anthologyWriter .
    ?anthologyWriter rdf:type dbo:Musician .
    ?anthologyWriter dbo:associatedMusicalArtist ?anthologyAssociatedArtist .
  }
  
  # D'banj's associated musical artists
  OPTIONAL {
    dbr:D_Banj dbo:associatedMusicalArtist ?dbanjAssociatedArtist .
  }

  # Find common artist among the associations
  VALUES ?commonArtist { 
    ?elAssociatedArtist 
    ?anthologyAssociatedArtist 
    ?dbanjAssociatedArtist 
  }
  
  FILTER (?elAssociatedArtist = ?anthologyAssociatedArtist && ?elAssociatedArtist = ?dbanjAssociatedArtist)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  VALUES ?chappaqua { dbr:Chappaqua,_New_York }
  
  ?person dbo:residence ?chappaqua .
  OPTIONAL { 
    ?person dbo:officeHolder ?office .
    FILTER EXISTS { ?office dbo:officeName ?officeName . FILTER regex(?officeName, ""politician"", ""i"") }
  }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowURL ?yeshaqsParent WHERE {
  VALUES ?lamontCranston { dbr:Lamont_Cranston_(The_Shadow) }
  
  OPTIONAL {
    ?lamontCranston dbo:alias ?shadow .
    ?shadow rdfs:label ""The Shadow""@en .
    ?shadow dbo:url ?shadowURL .
  }

  VALUES ?yeshaqI { dbr:Yeshaq_I_of_Ethiopia }
  ?yeshaqI dbo:parent ?yeshaqsParent .
  
  OPTIONAL {
    ?yeshaqsParent dbo:royaltyStatus ?royaltyStatus .
    FILTER (?royaltyStatus != """")
  }

  # Assuming we need to find a connection between the two entities
  # This part is speculative as there might not be a direct link in DBpedia
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?birthplace WHERE {
  ?awardee dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  OPTIONAL { 
    ?awardee dbo:birthPlace ?birthplace .
  }
}
```",2,2,3,2,1,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?ericClaptonsBand WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  # Find associated musical artist of Nick Curran
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  
  # Filter to check if the associated artist is The Fabulous Thunderbirds
  FILTER (?nickCurranAssociatedArtist = ?fabulousThunderbirdsURL)
  
  # Optionally find a band that includes Eric Clapton as a member
  OPTIONAL {
    dbr:Eric_Clapton dbo:bandMember ?ericClaptonsBand .
  }
}
```",6,7,7,2,3,3,3,71,1,0,0,1.0,1.0,1.0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardForce ?war WHERE {
  # Find awards associated with Quincy Adams Gillmore
  ?gillmoreAward dbo:recipient dbr:Quincy_Adams_Gillmore .
  
  # Get the force or entity related to the award
  OPTIONAL { 
    ?gillmoreAward dbo:associatedWith ?awardForce .
  }
  
  # Find wars associated with the awardee of the award
  OPTIONAL {
    ?awardee dbo:militaryService ?war .
    FILTER (?awardee = dbr:Quincy_Adams_Gillmore)
  }

  # Identify awards given by United States Congress
  ?congressAward dbo:givenBy dbr:United_States_Congress .
  
  # Check if the same award or related context exists
  OPTIONAL {
    FILTER (?gillmoreAward = ?congressAward)
  }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonCountry WHERE {
  # Álvaro Quirós's residence
  dbr:Álvaro_Quirós dbo:residence ?alvaroResidence .
  
  # Leader of the 2009 Galician regional election and office holder in Santiago de Compostela
  ?leader dbo:officeHolder dbr:Santiago_de_Compostela .
  ?electionLeader dbo:electedAsLeaderOf ?galiciaElection .
  FILTER (YEAR(?electionDate) = 2009 && ?electionLeader = ?leader)
  
  # Leader's residence
  ?leader dbo:residence ?leaderResidence .

  # Check if both residences are in the same country
  ?alvaroResidence dbo:country ?commonCountry .
  ?leaderResidence dbo:country ?commonCountry .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:title ""Knight Commander of the Order of the Bath""@en .
  ?person dbo:militaryCommanderOf ?war .
  ?war a dbo:MilitaryConflict .

  ?regiment dbo:participatedIn ?war ;
            a dbo:MilitaryUnit ;
            rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .

  ?battle dbo:participatingMilitaryForce ?militaryForce ;
          a dbo:Battle ;
          rdfs:label ""Battle of Fort Royal""@en .

  FILTER (?person = ?commander)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  VALUES ?book { dbr:Promises_to_Keep_(Joe_Biden_book) }
  ?book dbo:author ?person .
  ?person rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
}

UNION

SELECT ?workTitle WHERE {
  VALUES ?commander { dbr:Douglas_MacArthur }
  ?commander dbo:officeHolderOf ?office .
  ?office rdfs:label ?officeLabel .
  FILTER CONTAINS(LCASE(?officeLabel), ""korean war"")
  
  OPTIONAL {
    ?commander dbo:work ?work .
    ?work rdfs:label ?workTitle .
    FILTER (lang(?workTitle) = 'en')
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Edmund_Hakewill-Smith dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,7,3570,0.0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?event WHERE {
  ?awardee dbo:honorificTitle ""Knight Commander of the Order of the Bath""@en .
  ?awardee dbo:event ?event .
  ?event rdf:type dbo:Event .
  FILTER EXISTS { ?event dbo:isSocietalEvent true } # Assuming there's a property indicating societal events
}
```",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?humanRemainsMember ?khlystAssociatedArtist WHERE {
  VALUES ?humanRemainsBand { dbr:Human_Remains_(band) }
  
  # Find members of Human Remains
  ?humanRemainsMember dbo:bandMember ?humanRemainsBand .
  
  # For each member, find their associated musical artists
  OPTIONAL {
    ?humanRemainsMember dbo:associatedMusicalArtist ?firstAssociatedArtist .
    
    # From these associated artists, find further associated musical artists that are also musical artists
    OPTIONAL {
      ?firstAssociatedArtist dbo:associatedMusicalArtist ?khlystAssociatedArtist .
      
      # Ensure the final artist is associated with Khlyst
      FILTER EXISTS { 
        ?khlystBand dbr:Khlyst ;
                    dbo:bandMember ?khlystAssociatedArtist .
      }
    }
  }
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  dbr:Federal_University_of_Para%C3%ADba dbo:foundingDate ?foundingDate .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find the military conflict involving William Bayne as a commander
  ?bayneCommanderEvent dbo:commander dbr:William_Bayne .
  
  # Identify the military force involved in that event
  ?bayneCommanderEvent dbo:militaryConflict ?conflict .
  ?conflict dbo:militaryForce ?militaryForce .

  # Find the conflict related to The Triple X's
  ?tripleXEvent dbo:reference dbr:The_Triple_Xs .
  FILTER (?tripleXEvent = ?bayneCommanderEvent)
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?birthPlace WHERE {
  # Find wars Karl Gustav von Baggovut participated in
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .
  
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?actor rdfs:label ""Actor""@en .
  ?actor rdf:type dbo:Agent .
}
```",1,1,2,1,1,3,3,71,0,0,21580,0,0.0,0
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?parentEntity WHERE {
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
  OPTIONAL { 
    ?awardee dbo:occupation ?parentEntity .
  }
}
```",2,2,3,2,1,3,3,71,0,138,1,0.0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  dbr:Omar_bin_Faisal_of_Najd dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?martinOfAragon { 
    dbr:Martin_of_Aragon 
  }
  ?martinOfAragon dbo:father|dbo:mother|dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Ferdinand III's child who was a commander in the Thirty Years' War
  VALUES ?ferdinandIII { dbr:Ferdinand_III,_Holy_Roman_Emperor }
  ?child dbo:parent ?ferdinandIII .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") && CONTAINS(LCASE(?occupation), ""thirty years war""))

  # Step 2: Ferdinand III is the father of this child
  BIND(?ferdinandIII AS ?father)

  # Step 3: Maria Anna of Bavaria's father's child who is royalty
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  ?mariaAnnaParent dbo:child ?mariaAnna .
  ?royalChild dbo:parent ?mariaAnnaParent .
  ?royalChild dbo:royalTitle ?title .

  # Step 4: Ensure the father from Step 2 is related to the royalty child
  FILTER(?father = ?ferdinandIII)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:birthPlace dbr:Bristol .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,971,0,0.0,0
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfAdministration ?leaderEvent WHERE {
  # Spanish Socialist Workers' Party
  VALUES ?spanishSocialistWorkersParty { 
    dbr:Spanish_Socialist_Workers'_Party 
  }
  
  # Administration associated with the party
  ?administration dbo:party ?spanishSocialistWorkersParty .
  
  # Tenant of the administration
  ?administration dbo:headOfGovernment ?tenantOfAdministration .

  # An event where Anxo Quintana is a leader in this context
  ?leaderEvent dbo:leader dbr:Anxo_Quintana ;
               dbo:relatedAdministrativeBody ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?party dbo:country dbr:Spain .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:hasMember ?party .
}
```",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee ?parent WHERE {
  # Find Rodney Lees and his awards
  VALUES ?rodneyLees { dbr:Rodney_Lees }
  
  ?rodneyLees dbo:award ?award .
  
  # Find the awardee of each award
  ?award dbo:recipient ?awardee .
  
  # Find the parent class or resource of the awardee
  OPTIONAL {
    ?awardee rdfs:subClassOf+ ?parent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  FILTER (strstarts(str(?award), ""Anita Borg Institute Women of Vision Award""))
  ?awardee dbo:nationality dbr:Japan .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Identify Philipp Albrecht, Duke of Württemberg and his children
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippChild .
  
  # Identify Archduchess Margarete Sophie of Austria and her children with Philipp Albrecht
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?margareteChild .

  # Find the common child between both parents
  FILTER (?philippChild = ?margareteChild)

  # Identify this child's predecessor (parent)
  ?commonChild dbo:parent ?predecessor .
  
  # Bind the common child to ensure it is the correct individual
  VALUES ?commonChild { ?philippChild }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  VALUES ?elDeafo { 
    dbr:El_Deafio 
  }
  ?elDeafo dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?recipient WHERE {
  # Identify ""The Triple X"" and its commander in a military conflict
  OPTIONAL {
    ?tripleX dbo:militaryConflict ?conflict .
    ?tripleX dbo:commander ?commander .
  }
  
  # Find the recipient of the Knight Commander of the Order of the Bath
  ?recipient dbo:recipientOfAward dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  # Link the recipient to a military force and societal event
  OPTIONAL {
    ?recipient dbo:militaryForce ?militaryForce .
    ?recipient dbo:societalEvent ?societalEvent .
  }
  
  # Ensure the commander is linked to the same conflict as the recipient's military force
  FILTER (?commander = ?recipient)
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  VALUES ?fellowship { 
    dbr:Sangeet_Natak_Akademi_Fellowship 
  }
  ?fellowship dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:director ?director .
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherURL WHERE {
  # Find Na'od's father
  ?naod a dbo:Person ;
        dbo:child ?father .
  
  # Find the grandfather (father of Na'od's father)
  ?father a dbo:Person ;
          dbo:parent ?grandfather .

  # Ensure the grandfather is royalty or an office holder
  OPTIONAL { ?grandfather dbo:royalTitle ?title . }
  OPTIONAL { ?grandfather dbo:officeHolder ?office . }

  FILTER EXISTS { ?grandfather dbo:royalTitle ?title } ||
              EXISTS { ?grandfather dbo:officeHolder ?office }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:birthPlace ?native .
}
```",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album WHERE {
  VALUES ?albumLabel { ""Sappy"" }
  
  ?album rdfs:label ?albumLabel .
  FILTER (lang(?albumLabel) = 'en')
  
  ?album a dbo:MusicalWork ;
         a dbo:Work ;
         a dbo:Album .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?phantomsmasherURL ?associatedArtist WHERE {
  VALUES ?phantomsmasherURL { 
    dbr:Phantomsmasher 
  }
  ?phantomsmasherURL dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,11,1,0,0.9166666666666666,1.0,0.9565217391304348
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild WHERE {
  ?mariclareCostello a dbo:Person ;
                     foaf:name ""Mariclare Costello""@en .
  
  ?mariclareCostello dbo:spouse ?spouse .

  ?child dbo:parent ?spouse ;
         a dbo:Person .

  ?child dbo:parent ?parentOfChild .
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandchild WHERE {
  ?duke a dbo:Duke ;
        foaf:name ""Philipp of Württemberg""@en .
  
  ?duke dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Victor Saville""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rogerPryorSpouse ?annSothernPerson WHERE {
  # Find the spouse of Roger Pryor (actor)
  OPTIONAL {
    dbr:Roger_Pryor_(actor) dbo:spouse ?rogerPryorSpouse .
  }
  
  # Find a person born as Ann Sothern
  OPTIONAL {
    ?annSothernPerson dbo:birthName ""Ann Sothern""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nobelPrizeURL ?laureateAward WHERE {
  VALUES ?nobelPrizeURL { 
    dbr:Nobel_Prize_in_Physics 
  }
  ?nobelPrizeURL dbo:laureate ?laureate .
  ?laureate dbo:award ?laureateAward .
}
```",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Bob Thompson's birth name and associated band
  VALUES ?bobThompson { dbr:Bob_Thompson_(musician) }
  ?bobThompson dbo:birthName ?birthName .
  ?bobThompson dbo:associatedBand ?band .

  # Identify the producer of Coke Studio Philippines and their profession
  ?cokeStudioProducer dbo:profession ?producerProfession .
  ?cokeStudioProducer dbo:worksFor dbr:Coke_Studio_Philippines .

  # Find a professional who matches both criteria
  ?professional dbo:profession ?producerProfession ;
                dbo:associatedBand ?band .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?paradiseActor ?alwaysActor WHERE {
  OPTIONAL {
    dbr:Paradise_(2013_film) dbo:starring ?paradiseActor .
  }
  OPTIONAL {
    dbr:Always_(film) dbo:starring ?alwaysActor .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?zaraYaqobURL WHERE {
  VALUES ?lamontCranston { 
    dbr:Lamont_Cranston 
  }
  OPTIONAL {
    ?yeshaqI dbo:childOf ?zaraYaqob .
    ?na'od dbo:father ?lebnaDengel .
    ?lebnaDengel dbo:parent ?yeshaqI .
    FILTER (?yeshaqI = dbr:Yeshaq_I)
  }
  ?zaraYaqob a dbo:Monarch ;
             rdfs:label ""Zara Yaqob""@en .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?amyArbusParent ?allanArbusParent ?movie WHERE {
  # Find the parent of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?amyArbusParent .
  }
  
  # Allan Arbus is his own child's parent
  OPTIONAL {
    dbr:Allan_Arbus dbo:child ?allanChild .
    ?allanChild dbo:parent ?allanArbusParent .
  }

  # Find the movie Herschel Bernardi acted in
  OPTIONAL {
    dbr:Herschel_Bernardi dbo:actor ?movie .
    FILTER (dbo:workType(?movie) = dbo:Film)
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Edward Stanley's child who is a politician
  OPTIONAL { 
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?edwardChild .
    FILTER EXISTS { ?edwardChild dbo:politician . }
  }

  # Step 2: Identify Frederick Stanley's child who is a politician
  OPTIONAL {
    dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .
    FILTER EXISTS { ?frederickChild dbo:politician . }
  }

  # Step 3: Find the parent of Edward's child (who is a politician)
  OPTIONAL {
    ?edwardChild dbo:parent ?edwardParent .
  }

  # Step 4: Find the grandparent of Edward's child
  OPTIONAL {
    ?edwardParent dbo:parent ?grandparent .
  }

  # Ensure the grandparent is both a politician and an office holder
  FILTER EXISTS { 
    ?grandparent dbo:politician . 
    ?grandparent dbo:officeHolder . 
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?administration a dbo:Administration .
  ?administration dbo:leader dbr:Anxo_Quintana .
  dbr:Anxo_Quintana dbo:office ?office .
}
```",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?eleonore dbo:father ?commander .
  ?commander dbo:commanderInWar dbr:Thirty_Years'_War .

  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  
  OPTIONAL {
    ?mariaAnna dbo:child ?eleonore .
    ?mariaAnna dbo:parent ?ancestor .
    ?ancestor rdf:type dbo:Monarch .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentBirthName WHERE {
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling""@en .
  
  OPTIONAL { 
    ?parent dbo:child ?tishaSterling .
    ?parent foaf:name ?parentBirthName .
  }
}
```",2,2,3,2,1,3,3,71,0,3,3,0.0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?miguelMauraResidence WHERE {
  VALUES ?miguelMaura { dbr:Miguel_Maura }
  
  ?miguelMaura dbo:office ?office .
  
  OPTIONAL {
    ?miguelMaura dbo:residenceLocation ?miguelMauraResidence .
    FILTER (?miguelMauraResidence = dbr:Madrid)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentURL ?parentName WHERE {
  VALUES ?kateDimbleby { 
    dbr:Kate_Dimbleby 
  }
  ?kateDimbleby dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?patrickBowesLyon { 
    dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne 
  }
  ?patrickBowesLyon dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Tisha Sterling's parent
  dbr:Tisha_Sterling dbo:parent ?parent .
  
  # Get the birth name of the parent
  ?parent foaf:name ?birthName .

  # Identify the actor of ""1,000 Dollars a Minute""
  dbr:1000_Dollars_a_Minute dbo:actor ?actor .

  # Find the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Match the birth name with the spouse's birth name
  ?spouse foaf:name ?name .
  FILTER (?birthName = ?name)
  
  # Return the person who matches both conditions
  BIND(?spouse AS ?person)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?greatGrandfather WHERE {
  # Baeda Maryam I's child
  ?baedaChild dbo:parent dbr:Baeda_Maryam_I .
  
  # Yeshaq I's parent who is royalty
  ?yeshaqParent dbo:child dbr:Yeshaq_I ;
                a dbo:Monarch .

  # Child of Yeshaq I's royal parent
  ?commonChild dbo:parent ?yeshaqParent .

  # Common child between Baeda Maryam I and Yeshaq I's lineage
  FILTER (?baedaChild = ?commonChild)

  # Father of the common child
  ?father dbo:child ?commonChild .

  # Great-grandfather (Father of the father)
  ?greatGrandfather dbo:child ?father .

  # Ensure great-grandfather is royalty and an office holder
  ?greatGrandfather a dbo:Monarch ;
                   dbo:officeHolder ?office .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?minyeKyawswaPredecessor WHERE {
  dbr:Minye_Kyawswa dbo:predecessor ?minyeKyawswaPredecessor .
  
  OPTIONAL {
    dbr:Saw_Shwe_Khet dbo:spouse ?sawShweKhetSpouse .
    FILTER (?minyeKyawswaPredecessor = ?sawShweKhetSpouse)
  }
}
```",6,6,7,3,3,3,3,71,0,1,1,0.0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Stone_Sour dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucas ?successor ?russoPolishCommander ?battleOfViennaCommander WHERE {
  # Find George Ducas and his successor who is a politician and office holder
  VALUES ?georgeDucas { dbr:George_Ducas }
  OPTIONAL {
    ?georgeDucas dbo:successor ?successor .
    ?successor rdf:type dbo:Politician ;
               dbo:officeHolder ?office .
  }

  # Find commanders in the Russo-Polish War
  VALUES ?russoPolishCommander { 
    ?commander .
  }
  ?commander dbo:commanderOf dbr:Russo-Polish_War_(1654–1667) .

  # Find commanders in the Battle of Vienna
  VALUES ?battleOfViennaCommander { 
    ?battleCommander .
  }
  ?battleCommander dbo:commanderOf dbr:Battle_of_Vienna .

  # Filter to ensure the successor is a politician and office holder
  FILTER (?successor = ?russoPolishCommander || ?successor = ?battleOfViennaCommander)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Identify Saw Shwe Khet and their royal child
  ?sawShweKhet a dbo:Person ;
               rdfs:label ""Saw Shwe Khet""@en .
  
  ?royalChild dbo:childOf ?sawShweKhet ;
              a dbo:Monarch .

  # Identify the father of this royal child
  ?father dbo:spouse ?mother ;
          dbo:parent ?royalChild .

  # Identify the spouse of the father
  ?spouse dbo:spouse ?father .

  # Find the predecessor (title) of the spouse
  ?spouse dbo:title ?predecessor .

  # Ensure the child is also a royalty and child of Saw Min Hla
  ?sawMinHla a dbo:Person ;
             rdfs:label ""Saw Min Hla""@en .
  
  ?royalChild2 dbo:childOf ?sawMinHla ;
               a dbo:Monarch .

  FILTER (?royalChild = ?royalChild2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?personName WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  ?person rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
  OPTIONAL { 
    ?person dbo:partyAffiliation dbr:Republican_Party_(United_States) .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfAnxoQuintana ?countryOfAlvaroQuiros WHERE {
  ?anxoQuintana dbo:office ?officeOfAnxoQuintana .
  ?alvaroQuiros dbo:country ?countryOfAlvaroQuiros .
  
  FILTER (str(?anxoQuintana) = ""Anxo_Quintana"")
  FILTER (str(?alvaroQuiros) = ""Álvaro_Quirós"")
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  dbr:Bruno_Retailleau dbp:politicalParty ?party .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?princess { dbr:Princess_Aisha_bint_Faisal }
  ?princess dbo:parent ?parent .
  OPTIONAL {
    ?parent rdf:type dbo:RoyalFamilyMember .
  }
}
```",1,2,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find the resource for Jean Baptist, Comte d'Arco
  VALUES ?jeanBaptist { 
    dbr:Jean_Baptiste,_Comte_d%27Arco 
  }
  
  # Find the resource for Michał Kazimierz Pac
  VALUES ?michaPac { 
    dbr:Miko%C5%82aj_Kazimierz_Pa%C5%84czowski 
  }

  # Identify the role of Jean Baptist, Comte d'Arco as a commander in some event
  ?jeanBaptist dbo:commander ?event .

  # Find Michał Kazimierz Pac's role in the same or related event
  ?michaPac dbo:commander ?sameEvent .

  # Identify the successor relationship
  OPTIONAL {
    ?jeanBaptist dbo:successor ?successor .
  }

  FILTER (?successor != ?jeanBaptist)
  
  # Ensure the successor is also a commander in the same or related event
  ?successor dbo:commander ?relatedEvent .

  # Link the events to ensure they are connected
  OPTIONAL {
    ?sameEvent dbo:sameAs ?relatedEvent .
  }
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify ""The Golden Master"" series
  VALUES ?goldenMasterSeries { 
    dbr:The_Golden_Master_series # Placeholder, replace with actual resource if available
  }
  
  # Find the character with an alter ego that is professional
  ?character dbo:partOfSeries ?goldenMasterSeries .
  ?character dbo:alterEgo ?professionalAlterEgo .
  ?professionalAlterEgo a dbo:Professional .

  # Identify the actor of this character
  ?character dbo:portrayedBy ?actor .
}
```

Note: The query assumes that ""The Golden Master"" series and its characters are correctly identified in DBpedia. If these entities do not exist, they need to be added or corrected.",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  # Manager of SBV Vitesse for the 2020-21 season
  ?vitesseTeam a dbo:SoccerClub ;
               dbo:season ?vitesseSeason .
  FILTER (STRSTARTS(STR(?vitesseSeason), ""2020–21"") && STRCONTAINS(STR(?vitesseTeam), ""SBV Vitesse""))
  
  ?manager dbo:managedSportTeam ?vitesseTeam ;
           foaf:name ?managerName .

  # Manager's nationality
  ?manager dbo:nationality dbr:Germany_Western .
  
  # Player managed by the same manager who played for VfL Bochum in 2006-07
  OPTIONAL {
    ?player dbo:playedForSportTeam ?bochumTeam ;
            dbo:season ?bochumSeason .
    FILTER (STRSTARTS(STR(?bochumSeason), ""2006–07"") && STRCONTAINS(STR(?bochumTeam), ""VfL Bochum""))
    
    ?manager dbo:managedSportTeam ?player .
  }
  
  # Ensure the club is a sports club, organisation, and soccer club
  ?vitesseTeam a dbo:SportsClub ;
               a dbo:Organisation ;
               a dbo:SoccerClub .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentURL ?childURL WHERE {
  VALUES ?yeshaqI { dbr:Yeshaq_I }
  
  ?yeshaqI dbo:childOf ?parent .
  ?parent a dbo:Monarch ;
          dbo:country ?country .

  OPTIONAL {
    ?parent dbo:child ?child .
    FILTER (?child = ?yeshaqI)
  }

  BIND(?parent AS ?parentURL)
  BIND(?yeshaqI AS ?childURL)
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?joeyBBirthName ?stonebwoyAssociatedArtist WHERE {
  # Find Joey B's birth name
  dbr:Joey_B a dbo:Person ;
             foaf:givenName ?joeyBFirstName ;
             foaf:familyName ?joeyBLastName .
  
  BIND(CONCAT(?joeyBFirstName, "" "", ?joeyBLastName) AS ?joeyBBirthName)
  
  # Find Stonebwoy's associated musical artist
  dbr:Stonebwoy dbo:associatedMusicalArtist ?stonebwoyAssociatedArtist .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession WHERE {
  VALUES ?theShadow { dbr:The_Shadow }
  ?theShadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?profession .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dispatchesActor ?shadowAlterEgo WHERE {
  # Find the actor from ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:actor ?dispatchesActor .

  # Find the alter ego of The Shadow in the video game
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  
  FILTER EXISTS { ?dispatchesActor a dbo:Agent . }
  FILTER EXISTS { ?shadowAlterEgo a dbo:Agent . }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaURL WHERE {
  dbr:Tokyo dbo:district ?mitaka .
  FILTER (str(?mitaka) = ""Mitaka"")
  BIND(?mitaka AS ?mitakaURL)
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfBirthPlace WHERE {
  # Find the producer of ""Storm in a Teacup""
  ?film dbo:producer ?producer .
  
  # Ensure we are looking at the correct film
  VALUES ?film { dbr:Storm_in_a_Tea_Cup_(film) }
  
  # Get the birth place of the producer
  ?producer dbo:birthPlace ?birthPlace .

  # Find a notable person native to that birth place
  ?nativeOfBirthPlace dbo:nativeOf ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?clubLabel WHERE {
  dbr:Denis_Kolodin dbo:playsFor ?club .
  ?club rdfs:label ?clubLabel .
  FILTER (LANG(?clubLabel) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet a dbo:Person ;
               dbo:spouse ?spouseOfSawShweKhet .

  # Find Min Hla Htut of Pyakaung's parent
  ?minHlaHtut dbr:Pyakaung dbo:child ?parentOfMinHlaHtut .

  # Link Saw Shwe Khet's spouse to Min Hla Htut's parent
  FILTER (?spouseOfSawShweKhet = ?parentOfMinHlaHtut)

  # Find Saw Min Phyu's spouse and their child
  ?sawMinPhyu a dbo:Person ;
              dbo:spouse ?spouseOfSawMinPhyu .
  OPTIONAL {
    ?spouseOfSawMinPhyu dbo:child ?childOfSpouse .

    # Find the predecessor of the child who is royalty
    ?predecessor dbo:successor ?childOfSpouse ;
                a dbo:Royalty .
    
    # Result should be this predecessor
    BIND(?predecessor AS ?result)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:West_Germany .
  ?person dbo:manager dbr:VfL_Bochum .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Nat Levine's resource
  VALUES ?natLevine { dbr:Nat_Levine }

  # Step 2: Find films produced by Nat Levine
  ?film dbo:producer ?natLevine .

  # Step 3: Identify actors of these films
  ?film dbo:actor ?actor .

  # Step 4: Find spouses of these actors
  ?actor dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,62,0,0.0,0
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }

  # Step 2: Find the child of Saw Shwe Khet who is a royalty
  OPTIONAL {
    ?sawShweKhet dbo:child ?royalChild .
    ?royalChild rdf:type dbo:Royalty .
  }

  # Step 3: Identify the predecessor of this royal child
  OPTIONAL {
    ?royalChild dbo:predecessor ?predecessor .
  }

  # Step 4: Find the father of the predecessor
  OPTIONAL {
    ?predecessor dbo:child ?fatherOfPredecessor .
  }

  # Step 5: Identify the spouse of this father, ensuring they are royalty
  OPTIONAL {
    ?fatherOfPredecessor dbo:spouse ?spouse .
    ?spouse rdf:type dbo:Royalty .
  }
}
```",5,7,6,3,2,3,3,71,1,6471,0,0.00015451174289245981,1.0,0.00030897574540398573
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?guillaumePeltierParty ?brunoRetailleauParty WHERE {
  OPTIONAL { 
    dbr:Guillaume_Peltier dbo:partyAffiliation ?guillaumePeltierParty .
  }
  OPTIONAL { 
    dbr:Bruno_Retailleau dbo:partyAffiliation ?brunoRetailleauParty .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoURL WHERE {
  VALUES ?theShadowURL { 
    dbr:The_Shadow_(radio_character) 
  }
  ?theShadowURL dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ""Lamont Cranston""@en .
  BIND(STR(?alterEgo) AS ?alterEgoURL)
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:George_H._Cameron dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,2,0,3,1.0,0.4,0.5714285714285715
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be constructed due to lack of specific information in the question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?almaMater WHERE {
  ?awardee dbo:award dbr:Australian_Laureate_Fellowship .
  ?awardee dbo:nationality dbr:Australia .
  ?awardee dbo:occupation dbo:Scientist .
  
  # Assuming there's a property or resource that links the awardee to an entity in Andhra Pradesh
  OPTIONAL {
    ?awardee dbo:associatedWith dbr:Andhra_Pradesh_Entity .
  }
  
  ?awardee dbo:almaMater ?almaMater .
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?williamBaynesMilitaryForce ?tripleXsCommander WHERE {
  # Find the military force associated with William Bayne
  OPTIONAL {
    dbr:William_Bayne dbo:militaryForce ?williamBaynesMilitaryForce .
  }
  
  # Assuming ""The Triple X's"" refers to a known alliance or group, find its commander
  OPTIONAL {
    dbr:The_Triple_Alliance dbo:commander ?tripleXsCommander .
  }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find Nicholas II's native place
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nativeCountry .
  
  # Ensure the native country is Russia
  FILTER (?nativeCountry = dbr:Russia)

  # Find where Nicholas II died
  dbr:Nicholas_II_of_Russia dbo:deathPlace ?deathPlace .

  # Ensure the death place is Switzerland
  FILTER (?deathPlace = dbr:Switzerland)

  # Find persons who are native of Russia and deceased in Switzerland
  ?personDecedent dbo:nativePlace ?nativeCountry .
  ?personDecedent dbo:deathPlace ?deathPlace .

  # Filter to match the criteria
  FILTER (?nativeCountry = dbr:Russia && ?deathPlace = dbr:Switzerland)
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Find Yeshaq I's parent
  dbr:Yeshaq_I dbo:parent ?yeshaqParent .
  
  # Ensure the parent is a royalty
  ?yeshaqParent rdf:type dbo:Royalty .

  # Find the child of this royal parent who is also a royalty and father of Baeda Maryam I
  ?yeshaqParent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Royalty .
  ?royalChild dbo:spouseOrPartner* dbr:Baeda_Maryam_I .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI WHERE {
  # Dawit I's child
  dbr:Dawit_I dbo:child ?childOfDawitI .
  
  # Na'od's father and his father (Zara Yaqob)
  ?naodFather dbo:father ?zaraYaqob .
  dbr:Na'od_of_Ethiopia dbo:father ?naodFather .

  # Check if the person is a royalty and an office holder
  ?childOfDawitI rdf:type dbo:Monarch ;
                dbo:officeHolder ?office .

  FILTER (?childOfDawitI = ?zaraYaqob)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander ?tvShow ?societalEvent WHERE {
  # Yurii Khmelnytsky's successor
  VALUES ?yuriikhmelnytsky { dbr:Yurii_Khmelnytsky }
  ?yuriikhmelnytsky dbo:successor ?successor .

  # Commander of the Battle of Vienna
  VALUES ?battleOfVienna { dbr:Battle_of_Vienna_(1683) }
  ?commander dbo:commanderOfMilitaryConflict ?battleOfVienna .

  # Successor and commander should be the same person
  FILTER (?successor = ?commander)

  # Television show association
  OPTIONAL {
    ?successor dbo:associatedWith ?tvShow .
    ?tvShow a dbo:TelevisionSeries .
  }

  # Societal event association
  OPTIONAL {
    ?successor dbo:associatedWith ?societalEvent .
    ?societalEvent a dbo:SocietalEvent .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelMauraPartyLeaderOffice ?marianoRajoyPartyLeaderOffice WHERE {
  # Find Miguel Maura's party and its leader's office
  ?miguelMaura dbo:member ?miguelMauraParty .
  ?miguelMauraParty dbo:leader ?miguelMauraPartyLeader .
  ?miguelMauraPartyLeader dbo:office ?miguelMauraPartyLeaderOffice .
  
  # Find Mariano Rajoy's party and its leader's office
  ?marianoRajoy dbo:member ?marianoRajoyParty .
  ?marianoRajoyParty dbo:leader ?marianoRajoyPartyLeader .
  ?marianoRajoyPartyLeader dbo:office ?marianoRajoyPartyLeaderOffice .

  # Filter offices located in Madrid
  FILTER EXISTS {
    ?miguelMauraPartyLeaderOffice dbo:location dbr:Madrid .
  }
  FILTER EXISTS {
    ?marianoRajoyPartyLeaderOffice dbo:location dbr:Madrid .
  }

  # Bind specific individuals to their DBpedia resources
  VALUES ?miguelMaura { dbr:Miguel_Maura }
  VALUES ?marianoRajoy { dbr:Mariano_Rajoy }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residenceCountry ?warCommanded WHERE {
  # Find Dawid Olejniczak's residence and check if it is a country
  dbr:Dawid_Olejniczak dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .

  # Identify a commander from the French Revolutionary Wars and any wars they commanded
  ?commander dbo:commanderOfWar ?warCommanded .
  FILTER EXISTS { 
    ?warCommanded dbo:participatingWars dbr:French_Revolutionary_Wars .
  }
  
  # Ensure that the residence country is related to a war commanded by someone from the French Revolutionary Wars
  FILTER (?residenceCountry = ?warCommanded)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  dbr:Saw_Shwe_Khet dbo:spouse ?spouse .
  OPTIONAL { 
    dbr:Myat_Hpone_Pyo dbo:predecessor ?spouse .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  # Filter children by native place (Middlesex)
  ?child dbo:nativePlace dbr:Middlesex .

  # Find the parent of this child
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Yeshaq_I dbo:parent ?parent .
  FILTER EXISTS { ?parent rdf:type dbo:Monarch . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Harriette Arlene Lake
  VALUES ?harriette { dbr:Harriette_Arlene_Lake }
  
  # Step 2: Find films by Nat Levine and their actors
  ?film dbo:producer ?natLevine .
  ?natLevine rdfs:label ""Nat Levine""@en .
  ?film dbo:actor ?actor .

  # Step 3: Find the spouse of the actor
  ?actor dbo:spouse ?person .

  # Step 4: Check if this person is a party member in Central, Louisiana
  OPTIONAL {
    ?person dbo:memberOf ?party .
    ?party dbo:location dbr:Central,_Louisiana .
  }

  FILTER (?harriette = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?jstRegion ?mitakaResource WHERE {
  # Find the region associated with Japan Standard Time
  OPTIONAL { 
    dbr:Japan_Standard_Time dbo:region ?jstRegion .
  }
  
  # Find the DBpedia resource for Mitaka, Tokyo
  OPTIONAL {
    ?mitakaResource rdfs:label ""Mitaka""@en .
    FILTER(CONTAINS(LCASE(str(?mitakaResource)), ""tokyo""))
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maxBornAward ?rainerWeissHost WHERE {
  # Find Max Born's award
  dbr:Max_Born dbo:award ?maxBornAward .
  
  # Find the institution that hosted Rainer Weiss's award ceremony
  ?rainerWeissAward dbo:awardedBy ?rainerWeissHost .
  dbr:Rainer_Weiss dbo:award ?rainerWeissAward .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thomasLetschManager ?vflBochumManager WHERE {
  # Thomas Letsch's managed team
  OPTIONAL {
    ?team dbo:manager dbr:Thomas_Letsch .
    ?team a dbo:SoccerClubSeason ;
          a dbo:SportsTeamSeason ;
          a dbo:SportsSeason .
    ?thomasLetschManager dbo:managedTeam ?team .
  }
  
  # VfL Bochum's manager
  OPTIONAL {
    dbr:VfL_Bochum dbo:manager ?vflBochumManager .
    ?vflBochumManager a dbo:SoccerClubSeason ;
                      a dbo:SportsTeamSeason ;
                      a dbo:SportsSeason .
  }
  
  # Theodor Heuss's native country
  OPTIONAL {
    dbr:Theodor_Heuss dbo:nationality ?theodorHeussCountry .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  VALUES ?lassoTheMoon { dbr:Lasso_the_Moon }
  
  ?album dbo:artist ?lassoTheMoon .
  ?album a dbo:Album ;
         a dbo:Film ;
         a dbo:CreativeWork .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?gillmoreForce ?medalOfHonorWar WHERE {
  # Henry Clay Lewis's birthplace that is a settlement and American
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  ?birthPlace dbo:country dbr:United_States .

  # Gillmore Medal awardee force
  ?gillmoreAwardee dbo:awardReceived dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:militaryForce ?gillmoreForce .

  # Medal of Honor awardee war
  ?medalOfHonorAwardee dbo:awardReceived dbr:Medal_of_Honor .
  ?medalOfHonorAwardee dbo:associatedWar ?medalOfHonorWar .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedMusicalArtist WHERE {
  # Identify $pacely, assuming it refers to Tupac Shakur
  VALUES ?person { 
    dbr:Tupac_Shakur 
  }
  
  # Find the birth name of the person
  ?person dbo:birthName ?birthName .

  # Find associated musical artists for this person
  ?person dbo:associatedMusicalArtist ?associatedMusicalArtist .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?residenceCountry WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:country ?residenceCountry .
}
```",3,5,4,3,1,3,3,71,0,11,1184,0.0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?alwaysActor ?ilizaMovie WHERE {
  # Find spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
  
  # Find actors in the film ""Always"" (1989)
  dbr:Always_(film) dbo:castMember ?alwaysActor .

  # Find a movie featuring Iliza Shlesinger and check if it has common actors
  dbr:Iliza_Shlesinger dbo:actedIn ?ilizaMovie .
  ?ilizaMovie dbo:castMember ?commonActor .
  
  # Ensure the actor is in both ""Always"" and the movie with Iliza Shlesinger
  FILTER (?alwaysActor = ?commonActor)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify the resource for T.I.
  VALUES ?tI { dbr:T.I. }

  # Find albums by T.I.
  ?album dbo:artist ?tI .

  # For each album, find songs that are musical works
  ?song dbo:album ?album ;
        a dbo:Songs .

  # Check if there is an actor associated with the song or album
  OPTIONAL {
    ?actor dbo:associatedMusicalArtist ?song .
  }
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hashibaHidekatsuWar ?toyotomiHidenagaWar WHERE {
  VALUES ?hashibaHidekatsu { 
    dbr:Hashiba_Hidetsugu 
  }
  VALUES ?toyotomiHidenaga { 
    dbr:Toyotomi_Hidenaga 
  }

  OPTIONAL {
    ?hashibaHidekatsu dbo:participatedIn ?hashibaHidekatsuWar .
  }
  
  OPTIONAL {
    ?toyotomiHidenaga dbo:participatedIn ?toyotomiHidenagaWar .
  }
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award ?band WHERE {
  VALUES ?person { dbr:Akron_Family }
  
  ?award dbo:awardedTo ?person .
  ?award dbo:location ?location .
  
  ?location a dbo:Region ;
            a dbo:State ;
            a dbo:Settlement .

  OPTIONAL {
    ?band dbo:basedIn dbr:New_York_(state) .
    ?award dbo:awardedTo ?band .
  }
  
  FILTER (?person = dbr:Akron_Family)
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida .
  
  OPTIONAL { 
    ?coro dbo:award ?award .
    FILTER (str(?coro) = ""Coro de la Pontificia Universidad Católica de Puerto Rico"")
  }
  
  ?person dbo:birthName ?birthName .
}
```",5,10,6,3,2,3,3,71,0,4,59,0.0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?associatedMusicalArtist WHERE {
  # Find the producer of the song ""Lotus"" by R.E.M.
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Check if the producer is an organisation, band, or group
  ?producer rdf:type ?type .
  FILTER (
    ?type = dbo:Band || 
    ?type = dbo:MusicalGroup || 
    ?type = dbo:Organization
  )

  # Find associated musical artists of this producer
  ?producer dbo:musicalArtist ?associatedMusicalArtist .

  # Ensure the associated artist is indeed an artist
  ?associatedMusicalArtist rdf:type dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Identify books written by Hillary Clinton
  ?book dbo:author dbr:Hillary_Clinton .
  
  # Find the authors of those books
  ?book dbo:author ?author .

  # Check if the author is a politician and office holder
  OPTIONAL { ?author dbo:officeHolder ?office . }
  FILTER EXISTS { ?author dbo:officeHolder ?office }

  # Retrieve the spouse of such an author
  OPTIONAL { ?author dbo:spouse ?spouse . }
  
  # Ensure the spouse is also a politician or office holder
  OPTIONAL { ?spouse dbo:officeHolder ?spouseOffice . }
  FILTER EXISTS { ?spouse dbo:officeHolder ?spouseOffice }

}
```",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherURL WHERE {
  # Baeda Maryam I's child
  ?baedaChild dbo:parent dbr:Baeda_Maryam_I .
  
  # Yeshaq I's grandchild (Yeshaq I's parent is royalty)
  ?yeshaqParent dbo:royalty true .
  ?yeshaqGrandchild dbo:parent ?yeshaqParent .
  ?yeshaqParent dbo:parent dbr:Yeshaq_I .

  # Common child
  ?commonChild dbo:parent ?baedaChild ;
               dbo:parent ?yeshaqGrandchild .

  # Father of the common child (must be royalty and office holder)
  ?father dbo:royalty true ;
          dbo:officeHolder true ;
          dbo:child ?commonChild .

  # Grandfather of the common child
  ?grandfatherURL dbo:child ?father .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:David_Paton dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?showMovieURL ?actorName ?musicalArtist WHERE {
  ?showMovie a dbo:Film ;
             a dbo:TelevisionSeries .
  
  OPTIONAL { 
    ?showMovie dbo:starring ?actor .
    ?actor foaf:name ""Afeez Oyetoro"" .
    BIND(?actor AS ?actorName)
  }
  
  OPTIONAL {
    dbr:Cynthia_Morgan dbo:associatedMusicalArtist ?musicalArtist .
  }

  FILTER EXISTS { ?showMovie dbo:starring ?actor . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?maryElphinstone a dbo:Person ;
                   dbo:nationality dbr:Middlesex ;
                   dbo:parent ?parent .
  
  ?patrickBowesLyon a dbo:Person ;
                    dbo:parent ?parent .

  FILTER (?maryElphinstone = dbr:Mary_Elphinstone_Lady_Elphinstone)
  FILTER (?patrickBowesLyon = dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne)
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  VALUES ?annSothernBirthName { 
    dbr:Ann_Sothern dbo:birthName ?annSothernBirthName .
  }

  # Landmark with specific elevation
  SELECT ?landmark ?rulingParty WHERE {
    ?landmark dbo:elevation ?elevation .
    FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
    OPTIONAL { ?landmark dbo:governingParty ?rulingParty }
  } LIMIT 1

  # Roger Pryor's spouse
  VALUES ?rogerPryorsSpouse {
    dbr:Roger_Pryor dbo:spouse ?rogerPryorsSpouse .
  }

  # Person matching all criteria
  ?person dbo:birthName ?annSothernBirthName ;
          dbo:memberOfParty ?rulingParty ;
          dbo:spouse ?rogerPryorsSpouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
  ?birthPlace dbo:country dbr:United_States .
}
```",3,5,4,3,1,3,3,71,0,1,12,0.0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?adaJaneLow a dbo:Politician ;
              foaf:name ""Ada Jane Low"" ;
              dbo:dateOfDeath ?deathDate ;
              dbo:deathPlace dbr:Melbourne .
  
  OPTIONAL {
    ?role dbo:officeHolder ?adaJaneLow ;
          dbo:predecessor ?predecessor .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandChild WHERE {
  # Find children of Archduke Charles Louis of Austria
  ?child dbo:parent dbr:Archduke_Charles_Louis_of_Austria .
  
  # Find grandchildren (children of the child)
  ?grandChild dbo:parent ?child .

  # Ensure the grandchild is a royalty
  ?grandChild dbo:royaltyTitle ?title .

  # Ensure the grandchild is a predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:C._Friedrich_Wilhelm_Carl_Duke_of_Württemberg .
  FILTER (?grandChild = ?predecessor)

  # Find children of Duke Philipp of Württemberg
  ?childOfPhilipp dbo:parent dbr:Duke_Philipp_of_Württemberg .

  # Ensure the grandchild is a great-grandchild of Duke Philipp of Württemberg
  ?grandChild dbo:parent ?childOfPhilipp .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?thirdTaiwanStraitCrisisRole ?book WHERE {
  VALUES ?billClinton { dbr:Bill_Clinton }
  
  # Spouse of Hillary Clinton
  ?billClinton dbo:spouse ?spouse .
  
  # Commander in Third Taiwan Strait Crisis
  ?billClinton dbo:commanderInThirdTaiwanStraitCrisis ?thirdTaiwanStraitCrisisRole .
  
  # Author of a book by Bill Clinton
  ?billClinton dbo:author ?book .
  FILTER (rdf:type(?book, dbo:Book))
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?claimToFame WHERE {
  # Find Kent Allard's alter ego
  dbr:Kent_Allard dbo:alterEgo ?alterEgo .
  
  # Identify the actor of ""High Society Blues""
  OPTIONAL {
    dbr:High_Society_Blues dbo:actor ?actor .
    
    # Find the claim to fame (movie or work) associated with this actor
    ?actor dbo:film|dbo:work ?claimToFame .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfParent WHERE {
  # Identify Philip, Despot of Romania
  dbr:Philip_Despot_of_Romania dbo:child ?philipParent .
  
  # Ensure the parent is associated with royalty
  ?philipParent a dbo:Monarch .

  # Find the father of this royal parent
  ?philipParent dbo:father ?fatherOfParent .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL ?nickCurranAssociatedArtist ?kimWilsonBand WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }

  OPTIONAL {
    dbr:Kim_Wilson dbo:band ?kimWilsonBand .
    FILTER (?kimWilsonBand = ?fabulousThunderbirdsURL)
  }
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfVictorStanley WHERE {
  # Victor Stanley's parent
  dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?parentOfVictorStanley .
  
  # The alumnus of Eton College who is a politician and has a child that is the parent of Victor Stanley
  ?alumnus dbo:alumni dbr:Eton_College ;
           rdf:type dbo:Politician ;
           dbo:child ?parentOfVictorStanley .

  # Ensure this person is also the parent of Edward Stanley, 17th Earl of Derby
  ?alumnus dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?siegeURL ?commander ?royalParent WHERE {
  VALUES ?siegeURL { dbr:Siege_of_Mukha }
  
  ?siege dbo:commander ?commander .
  ?commander rdfs:label ?commanderLabel .
  FILTER CONTAINS(LCASE(?commanderLabel), ""royalty"") .

  ?commander dbo:parent ?royalParent .
  ?royalParent rdfs:label ?royalParentLabel .
  FILTER CONTAINS(LCASE(?royalParentLabel), ""royalty"") .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlaceEntity .
}
```",2,2,3,2,1,2,2,9,0,3,166,0.0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Richard E. Grant in DBpedia
  VALUES ?richardEGrant { 
    dbr:Richard_E._Grant 
  }
  
  # Find works associated with him
  ?work dbo:starring ?richardEGrant .
  
  # Ensure the work is both a movie and a television show
  ?work rdf:type ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow))
  
  # Retrieve actors from this work
  ?work dbo:starring ?actor .
}
```",3,4,4,3,1,3,3,71,47,288,6,0.14029850746268657,0.8867924528301887,0.24226804123711343
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?doonArbusParent ?movieWork ?photographerParent WHERE {
  # Find Doon Arbus's parent
  dbr:Doon_Arbus dbo:parent ?doonArbusParent .
  
  # Find the movie (work) Herschel Bernardi acted in
  ?movieWork dbo:starring dbr:Herschel_Bernardi .
  
  # Find the professional parent of a Photographer
  dbr:Photographer dbo:parent ?photographerParent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?party { 
    dbr:Republican_Party_(United_States) 
  }
  ?person dbo:memberOf ?party .
}
```",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?medalOfHonorRecipient ?war WHERE {
  # Identify Quincy Adams Gillmore
  dbr:Quincy_A._Gillmore a dbo:MilitaryPerson .

  # Find Medal of Honor recipients
  ?medalOfHonorRecipient dbo:recipientOf dbr:Medal_of_Honor .
  
  # Determine the war associated with each recipient
  ?medalOfHonorRecipient dbo:militaryConflict ?war .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Shirley_Stoler dbo:profession ?profession .
  OPTIONAL { 
    dbr:Shirley_Stoler dbo:child ?child .
  }
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonDescendant WHERE {
  # Elvira of Castile's child
  ?elviraChild dbo:childOf dbr:Elvira_of_Castile,_Queen_of_Sicily .
  
  # Roger III's parent and their child
  ?rogerParent dbo:parentOf dbr:Roger_III,_Duke_of_Apulia .
  ?rogerParentChild dbo:childOf ?rogerParent .

  # Common descendant of Elvira's child and Roger's parent's child
  ?commonDescendant dbo:childOf ?elviraChild ;
                   dbo:childOf ?rogerParentChild .

  # Ensure the common descendant is royalty and an office holder related to William I
  ?commonDescendant dbo:royalTitle ?royalty .
  ?commonDescendant dbo:officeHolder ?office .
  
  FILTER EXISTS { ?commonDescendant dbo:relatedTo dbr:William_I }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceSettlement ?administeredTerritory ?princeBirthplace ?administeredByPrince WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen
  ?hansen dbo:deathPlace ?deathPlace .
  
  FILTER(?hansen = dbr:Christian_Ditlev_Ammenheuser) # Assuming this is his DBpedia resource

  # Check if the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find territories administered from this settlement
  OPTIONAL {
    ?administeredTerritory dbo:administeredByTerritory ?deathPlaceSettlement .
  }

  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck's birthplace and check for royalty status
  ?prince dbo:birthPlace ?princeBirthplace .
  
  FILTER(?prince = dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck)

  # Check if he is a royalty
  ?prince rdf:type dbo:Royalty .

  # Find territories administered by Prince Christian
  OPTIONAL {
    ?administeredByPrince dbo:administeredByTerritory ?princeBirthplace .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?prince { 
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck 
  }
  ?prince dbo:child ?parent .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  VALUES ?party { dbr:Spanish_Socialist_Workers'_Party }
  
  ?party dbo:leader ?tenant .
  ?tenant dbo:nationality dbr:Spain .
  ?tenant dbo:country dbr:Spain .
}
```",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseURL ?spouseName WHERE {
  VALUES ?duchessLuise { 
    dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel
  }
  ?duchessLuise dbo:spouse ?spouse .
  OPTIONAL { ?spouse rdfs:label ?spouseName . FILTER (lang(?spouseName) = ""en"") }
  BIND(STR(?spouse) AS ?spouseURL)
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carolynJonesDeathPlace ?aladdinActorName ?aladdinActorDeathPlace WHERE {
  # Query for Carolyn Jones' death place
  dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .

  # Query for the actor of Aladdin (1958) and their death place
  OPTIONAL {
    dbr:Aladdin_(film) dbo:starring ?aladdinActor .
    ?aladdinActor rdfs:label ?aladdinActorName .
    FILTER(LANG(?aladdinActorName) = ""en"")
    ?aladdinActor dbo:deathPlace ?aladdinActorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution ?usEntity WHERE {
  VALUES ?brianKemp { dbr:Brian_Kemp }
  
  ?brianKemp dbo:officeHolder ?institution .
  
  ?usEntity a dbo:State ;
            dbo:country dbr:United_States_of_America .
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:sportsManager true .
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  VALUES ?sawMinHla { dbr:Saw_Min_Hla }
  VALUES ?myatHponePyo { dbr:Myat_Hpone_Pyo }

  OPTIONAL {
    ?person dbo:childOf ?sawMinHla .
  }
  
  OPTIONAL {
    ?myatHponePyo dbo:predecessor ?person .
  }
  
  FILTER (?person != ?sawMinHla && ?person != ?myatHponePyo)
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Lao_She dbo:creator ?work .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraOffice ?commanderOffice ?force ?ruizGallardonResidence WHERE {
  # Office of Miguel Maura
  dbr:Miguel_Maura dbo:office ?miguelMauraOffice .

  # Office of the commander who is an office holder and a politician
  ?commander a dbo:Politician ;
            dbo:office ?commanderOffice .
  
  # Force involving Manuel Pinto da Costa
  dbr:Manuel_Pinto_da_Costa dbo:militaryConflict ?force .

  # Residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizGallardonResidence .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowURL WHERE {
  VALUES ?lamontCranstonURL { 
    dbr:Lamont_Cranston_(radio) 
    dbr:Lamont_Cranston_(film_and_television)
  }
  ?lamontCranstonURL dbo:alterEgo ?shadowURL .
}
```",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reedHowesDeathPlace ?salMineoDeathPlace WHERE {
  OPTIONAL { 
    dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
  }
  OPTIONAL { 
    dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  }
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?presidentOfSpain ?galicianLeaderOffice ?psoeLeader WHERE {
  # President of Spain in 2009
  ?presidentOfSpain dbo:office ""President of Spain""@en .
  ?presidentOfSpain dbo:termStart ?startYear .
  FILTER (?startYear <= ""2009-12-31""^^xsd:date && ?startYear >= ""2009-01-01""^^xsd:date)

  # President of the Xunta de Galicia in 2009
  ?galicianLeader dbo:electedAs dbr:President_of_the_Xunta_de_Galicia .
  ?galicianLeader dbo:office ?galicianLeaderOffice .
  ?galicianLeader dbo:termStart ?startYearGalicia .
  FILTER (?startYearGalicia <= ""2009-12-31""^^xsd:date && ?startYearGalicia >= ""2009-01-01""^^xsd:date)

  # Leader of the Spanish Socialist Workers' Party (PSOE)
  ?psoeLeader dbo:leader dbr:Spanish_Socialist_Workers'_Party .
  ?psoeLeader dbo:office ""President of Spain""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorURL WHERE {
  VALUES ?elDeafoResource { 
    dbr:El_Deafo 
  }
  
  ?elDeafoResource dbo:author ?author .
  ?author a dbo:Writer ;
          dbo:nationality dbr:United_States .

  BIND(?author AS ?authorURL)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavary_(1574-1616) }
  
  ?mariaAnna dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }

  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?actress a dbo:Actress ;
           dbo:birthPlace dbr:New_York_(state) .
  
  OPTIONAL {
    ?spouse dbo:spouse ?actress .
    ?spouse dbo:child ?child .
  }
}
```",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  dbr:Royal_Swedish_Academy_of_Sciences dbo:associatedEvent ?show .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the resource for Наши парни / Nashi parni
  VALUES ?nashiParniResource { 
    dbr:Nashi_Parni_(film)  # Assuming this is the correct DBpedia resource for the film
  }
  
  # Identify Aleksandr Filimonov's works
  ?work dbo:author dbr:Aleksandr_Filimonov .
  
  # Match the work to Наши парни / Nashi parni
  FILTER (?work = ?nashiParniResource)
  
  # Find players/actors in the work
  ?nashiParniResource dbo:actor ?player .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samConcepcionProfession ?otherProfessional WHERE {
  dbr:Sam_Concepcion dbo:profession ?samConcepcionProfession .
  
  OPTIONAL {
    ?otherProfessional a dbo:Person ;
                      dbo:profession ?samConcepcionProfession .
    FILTER(?otherProfessional != dbr:Sam_Concepcion)
  }
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?commanderInWar ?societalEvent ?tvShow WHERE {
  VALUES ?ferdinandII { dbr:Ferdinand_II,_Holy_Roman_Emperor }
  
  ?child dbo:parent ?ferdinandII .
  OPTIONAL { ?child dbo:commanderInWar ?commanderInWar . }
  OPTIONAL { ?societalEvent dbo:associatedWith ?child . }
  OPTIONAL { ?tvShow dbo:subject ?child . }

  # Assuming a property for military connection, e.g., dbo:militaryUnit
  OPTIONAL { ?militaryConnection dbo:member ?child .
              FILTER regex(str(?militaryConnection), ""2nd Dragoon Regiment (France)"") }
  
  FILTER EXISTS { ?commanderInWar } 
  FILTER EXISTS { ?societalEvent }
  FILTER EXISTS { ?tvShow }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Identify GS9 member who is an artist and a musical artist
  ?gs9Artist dbo:member dbr:GS9 .
  FILTER (CONTAINS(LCASE(STR(?gs9Artist)), ""artist"") && CONTAINS(LCASE(STR(?gs9Artist)), ""musical artist"")) .

  # Step 2: Find the associated musical artist for that GS9 member
  ?gs9Artist dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Determine band members of this associated musical artist who are also musical artists
  ?bandMember dbo:bandMember ?associatedArtist .
  FILTER (CONTAINS(LCASE(STR(?bandMember)), ""musical artist"")) .

  # Step 4: Identify New York (state) award that is a region, American, state, and settlement
  ?award dbo:location dbr:New_York_(state) ;
         rdf:type dbo:Award .
  FILTER (CONTAINS(LCASE(STR(?award)), ""region"") && CONTAINS(LCASE(STR(?award)), ""american"") &&
          CONTAINS(LCASE(STR(?award)), ""state"") && CONTAINS(LCASE(STR(?award)), ""settlement"")) .

  # Step 5: Find the awardee band
  ?award dbo:recipient ?bandAwardee .
  FILTER (CONTAINS(LCASE(STR(?bandAwardee)), ""band"")) .

  # Step 6: Ensure the native region of the awardee matches the award's location
  ?bandAwardee dbo:nativePlace dbr:New_York_(state) .
}
```",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Step 1: Find the resource for ""Johnny Doughboy""
  VALUES ?johnnyDoughboy { 
    dbr:Johnny_Doughboy_(film) 
  }
  
  # Step 2: Identify the actor of ""Johnny Doughboy""
  ?johnnyDoughboy dbo:actor ?actor .
  
  # Step 3: Find a notable work (claim to fame) for this actor
  OPTIONAL {
    ?actor dbo:notableWork ?notableWork .
  }
  
  # Step 4: Identify the producer of that notable work
  ?notableWork dbo:producer ?producer .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?award dbo:recipient dbr:Ian_Gregson .
  ?award dbo:relatedWork ?movie .
}
```",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?davidLuckman a dbo:Person ;
                foaf:name ""David Luckman"" ;
                dbo:manager dbr:Hartlepool_United_F.C. ;
                dbo:residence ?residence .
  
  ?residence dbo:nativePlace ?nativePlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorURL WHERE {
  dbr:Promise_Me_Dad dbo:author ?authorURL .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?davydovWar ?baggovutWar WHERE {
  VALUES ?davydov { dbr:Alexander_Lvovich_Davydov }
  VALUES ?baggovut { dbr:Karl_Gustav_von_Baggovut }

  OPTIONAL {
    ?davydov dbo:participatedIn ?davydovWar .
  }
  
  OPTIONAL {
    ?baggovut dbo:participatedIn ?baggovutWar .
  }

  FILTER (?davydovWar = ?baggovutWar)
  BIND(?davydovWar AS ?war)

  OPTIONAL {
    ?war dbo:country dbr:Russian_Empire .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Aleksandr_Filimonov dbo:work ?work .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreAwardeeForce ?charlestonEntity WHERE {
  # Find the awardee of the Gillmore Medal and their associated force
  ?gillmoreAwardee dbo:awardReceived dbr:Gillmore_Medal .
  OPTIONAL { 
    ?gillmoreAwardee dbo:militaryUnit ?gillmoreAwardeeForce .
  }

  # Find an entity in Charleston, South Carolina
  ?charlestonEntity dbo:location dbr:Charleston,_South_Carolina .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  VALUES ?lahore { 
    dbr:Lahore 
  }
  
  ?native dbo:nativePlace ?lahore .
  FILTER EXISTS { ?native a dbo:Person . }
}
```",2,4,3,2,1,2,2,9,0,0,881,0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Minye_Kyawswa dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Arthur Stanley's father
  OPTIONAL { 
    dbr:Arthur_Stanley_(politician) dbo:father ?father .
  }
  
  # Find the parent of the awardee of Commander of the Royal Victorian Order
  OPTIONAL {
    ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order ;
             dbo:parent ?father .
  }

  FILTER (?father = ?father) # Ensure both conditions refer to the same person
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the owner or associated person with USS Arcadia
  ?arcadia dbo:owner ?person1 .
  FILTER (str(?arcadia) = ""USS_Arcadia_(ID-1605)"")

  # Identify the author of ""Back to Work""
  ?book dbo:author ?person2 .
  FILTER (str(?book) = ""Back_to_Work_(book)"")

  # Check if there's a common link between these two entities
  VALUES (?commonPerson) { 
    ?person1
    ?person2
  }

  # Determine the commander of a war that is both a disease and societal event
  ?war dbo:commander ?commander .
  FILTER (str(?war) IN (""World_War_I"", ""World_War_II""))
  
  # Ensure the common person is the commander
  FILTER (?commonPerson = ?commander)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?war WHERE {
  # Find the children of Toyotomi Hideyoshi
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  
  # Find wars associated with each child
  ?child dbo:participatedIn ?war .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Quincy_A._Gillmore dbo:award ?award .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?stevenkapur a dbo:Artist ;
               foaf:name ""Steven Kapur"" ;
               dbo:birthPlace dbr:Birmingham .
  
  ?musicalWork dbo:musicalArtist ?stevenkapur ;
               dbo:composer ?writer .

}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?otherProfessional WHERE {
  # Find Jamie T's profession
  dbr:Jamie_T dbo:occupation ?profession .
  
  # Find other professionals with the same occupation
  ?otherProfessional a dbo:Person ;
                    dbo:occupation ?profession .
  
  FILTER (?otherProfessional != dbr:Jamie_T)
}
```",2,2,3,2,1,2,2,9,0,0,44694,0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1945 && MONTH(?date) = 3 && DAY(?date) = 30)
  
  ?person a dbo:MusicalArtist .

  OPTIONAL { 
    ?person dbo:bandMember ?band .
  }

  OPTIONAL {
    ?band dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
  }
}
```",4,5,5,3,2,3,3,71,0,16,1,0.0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderResidence WHERE {
  VALUES ?electionEvent { 
    dbr:2003_Madrid_municipal_election 
  }
  
  ?officeHolder dbo:electedDuring ?electionEvent .
  ?officeHolder a dbo:Mayor .
  OPTIONAL {
    ?officeHolder dbo:residence ?leaderResidence .
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?fatherOfReference WHERE {
  # Step 1: Identify Roger II of Sicily's children who are royalty
  ?child dbo:child dbr:Roger_II_of_Sicily .
  FILTER EXISTS { ?child a dbo:Monarch . }

  # Step 2: Find the parent of this royal child (another child of Roger II)
  ?parentOfChild dbo:child ?child .

  # Step 3: Identify William I
  ?reference dbo:officeHolder dbr:William_I_of_Sicily .
  FILTER EXISTS { ?reference a dbo:Monarch . }

  # Step 4: Find the father of this royal reference
  ?fatherOfReference dbo:child ?reference .

  # Step 5: Match the parent from step 2 with the father from step 4
  FILTER (?parentOfChild = ?fatherOfReference)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .

  # Step 2: Identify awards related to the associated artist
  ?associatedArtist dbo:award ?award .

  # Step 3: Determine the state of origin for the awardee band
  ?award dbo:awardee ?band .
  ?band dbo:nativePlace ?nativePlace .
  ?nativePlace a dbo:State ;
               rdfs:label ""New York""@en .

  # Step 4: Find a band member who is also a musical artist and native of New York
  ?band dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .
  ?bandMember dbo:nativePlace ?nativePlace .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?societalEvent WHERE {
  VALUES ?jeanBaptist { dbr:Jean_Baptiste,_Comte_d'Arco }
  VALUES ?yuriiKhmelnytsky { dbr:Yuri_Khmelnytsky }

  ?commander dbo:successor ?jeanBaptist .
  ?commander dbo:predecessor ?yuriiKhmelnytsky .

  OPTIONAL {
    ?tvShow dbo:depicts ?commander .
  }
  
  OPTIONAL {
    ?societalEvent dbo:relatedEvent ?commander .
  }

  FILTER EXISTS { ?commander dbo:relatedTo dbr:George_Ducas }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?album { 
    dbr:No_Alternative_(album) 
  }
  OPTIONAL {
    ?album dbo:lyricsBy ?writer .
  }
  OPTIONAL {
    ?album dbo:musicalArtist ?writer .
  }
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  ?institution dbo:location dbr:Georgia_(U.S._state) .
  ?institution dbo:country dbr:United_States .
}
```",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?actor WHERE {
  VALUES ?movieURL { 
    # Replace with the specific movie resource, e.g., dbr:The_Matrix
  }
  ?movieURL dbo:starring ?actor .
}
```",2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?promisesToKeepURL ?authorOfPromisesToKeep ?otherWorkURL WHERE {
  VALUES ?promisesToKeepURL { 
    dbr:Promises_to_Keep_(book) 
  }
  
  # Find the author of ""Promises to Keep""
  ?promisesToKeepURL dbo:author ?authorOfPromisesToKeep .
  
  # Optionally find other written works by Joe Biden
  OPTIONAL {
    ?otherWork dbo:creator dbr:Joe_Biden ;
              a dbo:CreativeWork .
    FILTER (?otherWork != ?promisesToKeepURL)
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?attacker ?defender WHERE {
  dbr:Battle_of_Cape_Finisterre_(1805) 
    dbo:attacker ?attacker ;
    dbo:defender ?defender .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies with ""and"" in their title
  ?movie dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""and""))

  # Find actors of the movie ATL
  OPTIONAL { 
    dbr:ATL dbo:starring ?atlActor .
  }

  # Ensure the actor is also starring in a movie with ""and"" in its title
  ?movie dbo:starring ?actor .

  # Filter to ensure the actor from ATL is involved
  FILTER(?actor = ?atlActor)
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Medal_of_Honor dbo:recipient ?person .
  FILTER (isLiteral(?person) = false)
}
```",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the child of Saw Shwe Khet who is royalty
  ?sawChild dbo:child dbr:Saw_Shwe_Khet ;
            a dbo:Royal .

  # Find Minye Kyawswa's grandchild who is royalty
  ?minyeParent dbo:child dbr:Minye_Kyawswa .
  ?minyeGrandchild dbo:child ?minyeParent ;
                   a dbo:Royal .

  # Ensure the child of Saw Shwe Khet and Minye Kyawswa's grandchild are the same person
  FILTER (?sawChild = ?minyeGrandchild)

  # Find the father of this royal child
  ?father dbo:spouse ?mother ;
          dbo:child ?sawChild .

  # Get the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  ?person dbo:nativePlace dbr:London .
  ?person a dbo:Artist ;
          a dbo:MusicalArtist .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonore_of_Austria_(1574–1625) dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:birthPlace ?place .
  
  VALUES ?place {
    dbr:Russian_Empire 
    dbr:Grand_Duchy_of_Finland
  }
  
  FILTER (
    EXISTS { ?person dbo:birthPlace dbr:Russian_Empire . } &&
    EXISTS { ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland . }
  )
}
```",2,2,3,1,2,2,3,28,126,0,0,1.0,1.0,1.0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  VALUES ?theShadow { 
    dbr:The_Shadow_(radio_character) 
  }
  
  OPTIONAL {
    ?theShadow dbo:creator ?professional .
  }
  
  OPTIONAL {
    ?theShadow dbo:portrayedBy ?professional .
  }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  ?rulingParty rdf:type dbo:PoliticalParty ;
               rdf:type dbo:Organization ;
               dbo:locatedIn dbr:Westport,_Connecticut .
  
  ?partyMember dbo:member ?rulingParty .

  dbr:George_Pickett dbo:commanderOf ?war .
  
  OPTIONAL {
    ?partyMember dbo:commanderOf ?war .
  }
}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rodArgentProfession ?shaggyProfession WHERE {
  dbr:Rod_Argent dbo:profession ?rodArgentProfession .
  dbr:Darryl_Paa_Kwesi_Bannerman-Martin dbo:profession ?shaggyProfession .
  FILTER (?rodArgentProfession = ?shaggyProfession)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthPlace WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:occupation ?occupation .
  FILTER EXISTS { 
    ?occupation rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""television""))
  }
  ?person dbo:birthPlace ?awardeeBirthPlace .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES (?unit ?battle) { 
    (dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbr:Battle_of_Cape_Finisterre_(1805))
  }
  
  OPTIONAL {
    ?unit dbo:commander ?commander .
  }
  
  OPTIONAL {
    ?battle dbo:commander ?commander .
  }

  FILTER (?commander = ?commander)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?parent WHERE {
  # Find actors in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  VALUES ?film { dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg }
  ?film dbo:starring ?actor .

  # Find children of Allan Arbus
  dbr:Allan_Arbus dbp:child ?child .
  
  # Find the parent of Allan Arbus's child (should be Allan Arbus himself)
  ?child dbo:parent ?parent .
  
  # Filter to find if the actor is also a parent of Allan Arbus's child
  FILTER (?actor = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandChildOfDukePhilipp WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  ?childOfMargareteSophie dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Find the child of Duke Philipp of Württemberg
  ?childOfDukePhilipp dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Find the grandchild (child of the child) of Duke Philipp of Württemberg
  ?grandChildOfDukePhilipp dbo:parent ?childOfDukePhilipp .

  # Return the grandchild if it matches the child of Archduchess Margarete Sophie of Austria
  FILTER (?grandChildOfDukePhilipp = ?childOfMargareteSophie)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?battle1 { dbr:Battle_of_Cape_Finisterre_(1805) }
  VALUES ?battle2 { dbr:Battle_of_Fort_Royal }

  OPTIONAL {
    ?battle1 dbo:commander ?commander .
  }
  
  OPTIONAL {
    ?battle2 dbo:commander ?commander .
  }

  FILTER (?commander != null)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find the leader of West Germany around 2007-08
  ?leader dbo:position ""Chancellor""@en .
  ?leader dbo:country dbr:West_Germany .

  # Find the manager of VfL Bochum in 2007-08
  ?manager dbo:managedTeam dbr:VfL_Bochum ;
           dbo:managementPeriod ?period .
  
  FILTER (YEAR(?period) = 2007 || YEAR(?period) = 2008)

  # Establish a connection between the leader and the manager
  ?leader dbo:nativeCountry ?nativeCountry .
  OPTIONAL {
    ?manager dbo:associatedPerson ?leader .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?politicianRole WHERE {
  VALUES ?abKyaHoga { dbr:Ab_Kya_Hoga }
  VALUES ?dispatchesFromElsewhere { dbr:Dispatches_from_Elsewhere }

  ?actor dbo:starringIn ?abKyaHoga .
  ?actor dbo:starringIn ?dispatchesFromElsewhere .

  OPTIONAL {
    ?actor dbo:profession ?politicianRole .
    FILTER (CONTAINS(LCASE(STR(?politicianRole)), ""politician""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  VALUES ?andhraPradesh { dbr:Andhra_Pradesh }
  ?entity dbo:state ?andhraPradesh .
}
```",1,1,2,1,1,2,2,9,166,0,0,1.0,1.0,1.0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (
    ?birthPlace IN { 
      dbr:Russian_Empire, 
      dbr:Ukraine, 
      dbr:Belarus, 
      dbr:Lithuania, 
      dbr:Latvia, 
      dbr:Estonia,
      dbr:Poland, 
      dbr:Finland
    }
  )
}
```",2,2,3,1,2,2,3,28,0,0,36,0,0.0,0
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?koichiroWar ?toyotomiChildWar WHERE {
  # Assuming Koichirō refers to Koichiro Matsuura
  OPTIONAL {
    dbr:Koichiro_Matsuura dbo:participatedIn ?koichiroWar .
  }
  
  # Toyotomi Hideyoshi's child, focusing on Toyotomi Hideyori
  OPTIONAL {
    dbr:Toyotomi_Hideyori dbo:participatedIn ?toyotomiChildWar .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePerson WHERE {
  # Step 1: Identify 2 Chainz's associated musical artists through GS9
  VALUES ?gs9Member { dbr:GS9 }
  ?gs9Member dbo:member dbr:2_Chainz .
  
  OPTIONAL {
    dbr:2_Chainz dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Step 2: Find the associated musical artist of Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:associatedMusicalArtist ?coroAssociatedArtist .

  # Step 3: Identify band members of the associated musical artist of Coro
  OPTIONAL {
    ?coroAssociatedArtist dbo:bandMember ?bandMember .
  }

  # Step 4: Find the award native to a region that is also an American state and settlement
  ?award dbo:nativePlace ?nativeRegion .
  FILTER (STRSTARTS(STR(?nativeRegion), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?nativeRegion dbo:state dbr:United_States } &&
          EXISTS { ?nativeRegion a dbo:Settlement })

  # Step 5: Find the native person of this region who is also a band member
  FILTER (?bandMember = ?nativePerson)
  OPTIONAL {
    ?nativePerson dbo:nativePlace ?nativeRegion .
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?commanderInWar ?societalEvent ?tvShow WHERE {
  # Ferdinand II, Holy Roman Emperor
  VALUES ?ferdinand { dbr:Ferdinand_II,_Holy_Roman_Emperor }
  
  # Find children of Ferdinand II
  ?ferdinand dbo:child ?child .
  
  # Filter for those who were commanders in war
  ?child dbo:commanderInWar ?commanderInWar .

  # Check association with a societal event
  ?child dbo:societalEvent ?societalEvent .

  # Check association with a television show
  ?child dbo:televisionShow ?tvShow .
  
  # Link to Algerian War military force (hypothetical property)
  OPTIONAL {
    ?commanderInWar dbo:militaryForce dbr:Algerian_War_Military_Force .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # GS9 resource
  VALUES ?gs9 { dbr:GS9 }

  # Find members of GS9 who are both artists and musical artists
  ?member dbo:memberOfGroup ?gs9 .
  ?member a dbo:MusicalArtist .
  ?member a dbo:Artist .

  # Retrieve associated musical artists for these members
  OPTIONAL {
    ?member dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorURL ?profession ?otherProfessional WHERE {
  VALUES ?show { dbr:Ab_Kya_Hoga }
  
  ?castMember dbo:castMember ?show .
  ?castMember rdfs:label ?actor FILTER (LANG(?actor) = ""en"") .

  OPTIONAL {
    ?castMember dbo:occupation ?profession .
    FILTER (?profession IN (dbr:Actor, dbr:Politician))
  }
  
  OPTIONAL {
    ?castMember dbo:otherOccupation ?otherProfessional .
  }

  FILTER EXISTS { 
    ?castMember dbo:occupation dbr:Politician .
  }
}
```",4,5,5,3,2,3,3,71,0,0,39640,0,0.0,0
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Step 1: Identify Baeda Maryam I
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }

  # Step 2: Find one of his children
  ?child dbo:parent ?baedaMaryamI .
  
  # Step 3: Determine the father of that child (Baeda Maryam I's son-in-law or another male relative)
  ?father dbo:child ?child .

  # Step 4: Identify the grandfather (father of the father)
  ?grandfather dbo:child ?father .

  # Step 5: Ensure he was royalty and an office holder
  ?grandfather dbo:royaltyTitle ?title .
  OPTIONAL { ?grandfather dbo:officeHolder ?office . }
  
  FILTER EXISTS { ?grandfather dbo:royaltyTitle ?title } .
  FILTER EXISTS { ?grandfather dbo:officeHolder ?office . }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?colombianEntity WHERE {
  # Find the political party of Gustavo Petro
  dbr:Gustavo_Petro dbo:member ?party .
  
  # Find an entity in Colombia related to this party
  ?party dbo:country dbr:Colombia .
  ?party dbo:location ?colombianEntity .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?henryI WHERE {
  # Roger II's child who is also William II's father
  dbr:Henry_I_of_Sicily dbo:childOf dbr:Roger_II_of_Sicily .
  dbr:William_II_of_Sicily dbo:father dbr:Henry_I_of_Sicily .

  # Constance of Burgundy's spouse and their royal child
  OPTIONAL {
    dbr:Constance_of_Burgundy dbo:spouse dbr:Roger_II_of_Sicily .
    ?child dbo:childOf dbr:Constance_of_Burgundy ;
           a dbo:Monarch .
    FILTER (?child = dbr:Henry_I_of_Sicily)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?award dbo:awardedBy dbr:Peabody_Award .
  ?award dbo:recipient ?show .
  OPTIONAL {
    ?show dbo:subject dbr:United_States_Congress .
  }
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerBandMember WHERE {
  # Find the producer of ""Nothing to Gein""
  ?nothingToGein dbo:productionCompany ?producer .
  
  # Ensure the producer is an organization or group
  ?producer a dbo:MusicalArtist ;
            dbo:bandMember ?producerBandMember .

  # Find band members of Stone Sour
  dbr:Stone_Sour dbo:bandMember ?stoneSourMember .

  # Identify common member
  FILTER (?producerBandMember = ?stoneSourMember)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderResidenceTenant ?miguelMauraOffice ?marianoRajoyOffice WHERE {
  # Find the leader of Madrid City Council in 2003
  ?madridLeader dbo:officeHolder [
    a dbo:Mayor ;
    dbo:termStart ?start ;
    dbo:termEnd ?end .
  ].
  
  FILTER (?start <= ""2003-01-01""^^xsd:date && ?end >= ""2003-12-31""^^xsd:date).
  
  # Find Miguel Maura's office
  dbr:Miguel_Maura_Maura dbo:officeHolder ?miguelMauraOffice.
  
  # Find Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:officeHolder ?marianoRajoyOffice.

  # Get the residence of the Madrid leader and its tenant
  ?madridLeader dbo:residence ?leaderResidence.
  ?leaderResidence dbo:tenant ?leaderResidenceTenant.

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?residenceCountry ?administration WHERE {
  VALUES ?person { dbr:Álvaro_Quirós }
  
  OPTIONAL {
    ?person dbo:office ?office .
    FILTER regex(str(?office), ""2009 Galician regional election"", ""i"")
  }

  OPTIONAL {
    ?person dbo:residence ?residence .
    ?residence dbo:country ?residenceCountry .
  }

  OPTIONAL {
    ?person dbo:member ?partyMembership .
    ?partyMembership dbo:organization dbr:Spanish_Socialist_Workers'_Party ;
                    dbo:country dbr:Spain .
    BIND(dbr:Spanish_Socialist_Workers'_Party AS ?administration)
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?baggovutWar ?davydovWar ?elenaBirthPlace WHERE {
  VALUES ?baggovut { dbr:Karl_Gustav_von_Baggovut }
  VALUES ?davydov { dbr:Alexander_Lvovich_Davydov }

  ?baggovut dbo:participatedIn ?baggovutWar .
  ?davydov dbo:participatedIn ?davydovWar .

  OPTIONAL {
    ?elena dbr:Elena_Žalinkevičaitė-Petrauskienė .
    ?elena dbo:birthPlace ?elenaBirthPlace .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?catCountryCountry ?winstonChangBirthPlace WHERE {
  VALUES ?catCountryResource { 
    dbr:Cat_Country_(novel) 
  }
  OPTIONAL {
    ?catCountryResource dbo:country ?catCountryCountry .
  }

  VALUES ?winstonChangResource { 
    dbr:Winston_Chang 
  }
  OPTIONAL {
    ?winstonChangResource dbo:birthPlace ?winstonChangBirthPlace .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfMaximilian WHERE {
  # Find children of Maximilian I, Holy Roman Emperor
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?childOfMaximilian .
  
  # Determine the father of Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:father ?dorotheasFather .

  # Determine the father of Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria_(1507–1578) dbo:father ?catherinesFather .
  
  # Find common individual who is both fathers and a child of Maximilian I
  FILTER (?childOfMaximilian = ?dorotheasFather && ?childOfMaximilian = ?catherinesFather)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?birthplace WHERE {
  VALUES ?person { dbr:Quincy_A._Gillmore }
  
  ?person dbo:militaryRank ?force .
  ?person dbo:deathDate ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05""^^xsd:date)
  
  ?person dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peterIVURL WHERE {
  VALUES ?alFonsoIV { 
    dbr:Alfonso_IV_of_Aragon 
  }
  VALUES ?peterIVURL { 
    dbr:Peter_IV_of_Aragon 
  }
  ?peterIVURL dbo:childOf ?alFonsoIV .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?band WHERE {
  VALUES ?bobThompson { 
    dbr:Bob_Thompson_(musician) 
  }
  
  ?bobThompson dbo:birthName ?birthName .
  
  OPTIONAL {
    ?bobThompson dbo:associatedBand ?band .
  }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?fabulousThunderbirdsResource WHERE {
  VALUES ?ericClapton { dbr:Eric_Clapton }
  
  ?ericClapton dbo:bandMember ?band .
  
  ?resource rdfs:label ""The Fabulous Thunderbirds""@en .
  FILTER (lang(?resource) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?resource), "" "", ""_""))) AS ?fabulousThunderbirdsResource)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoURL WHERE {
  VALUES ?lamontCranston { dbr:Lamont_Cranston_(The_Shadow) }
  
  # Find the alter ego of Lamont Cranston
  ?lamontCranston dbo:alterEgo ?shadow .
  
  # Find Sir Walter Cranston, father of Lamont Cranston
  ?shadow dbo:father ?sirWalterCranston .
  
  # Connect Sir Walter Cranston to a royalty or office holder related to Na'od
  OPTIONAL {
    ?sirWalterCranston dbo:relatedTo ?naodRelatedEntity .
    ?naodRelatedEntity rdfs:label ""Na'od""@en .
  }
  
  FILTER EXISTS { ?sirWalterCranston dbo:officeHolder ?office . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Find Mary Elphinstone's parent who is a native of Middlesex
  ?maryElphinstone dbo:parent ?potentialParent .
  ?potentialParent dbo:nativePlace dbr:Middlesex .

  # Find Claude Bowes-Lyon's child
  ?claudelionChild dbo:childOf ?potentialParent .

  FILTER (?maryElphinstone = dbr:Mary_Elphinstone_Lady_Elphinstone)
  FILTER (?claudelionChild dbo:childOf dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne)

  BIND(?potentialParent AS ?commonParent)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeName WHERE {
  VALUES ?albertoNunezFeijoo { dbr:Alberto_Núñez_Feijóo }
  VALUES ?santiagoDeCompostela { dbr:Santiago_de_Compostela }

  ?albertoNunezFeijoo dbo:office ?office .
  ?office dbo:name ?officeName .

  OPTIONAL {
    ?albertoNunezFeijoo dbo:location ?santiagoDeCompostela .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find the political party associated with Miguel Maura
  dbr:Miguel_Maura dbo:memberOf ?party .
  
  # Find the leader of that political party
  ?party dbo:leader ?leader .

  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party WHERE {
  # Find the commander of Pickett's Charge
  dbr:Picketts_Charge dbo:commander ?commander .
  
  # Check if the commander is associated with a political party or organization
  OPTIONAL { 
    ?commander dbo:memberOfPartyOrOrganization ?party .
    FILTER (isLiteral(?party) && regex(str(?party), ""political party|organization""))
  }
  
  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .

  # Ensure the ruling party is in the same settlement as John McDermott's death place
  OPTIONAL {
    ?party dbo:location ?partyLocation .
    FILTER (?partyLocation = ?deathPlace)
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  ?margareteSophie dbo:parent ?parent .

  # Identify Carl, Duke of Württemberg's predecessor
  ?carlPredecessor dbo:succeededBy dbr:Claude_Frederick_Carl,_Duke_of_W%C3%BCrttemberg .
  
  # Find the child of the predecessor (that is a royalty)
  ?predecessorChild dbo:childOf ?carlPredecessor ;
                   rdf:type dbo:Royal .

  # Find the royal child of that child
  ?royalChild dbo:parent ?predecessorChild ;
              rdf:type dbo:Royal .
  
  FILTER (?margareteSophie = dbr:Margarete_Sophie_of_Austria)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alfonsoII WHERE {
  ?elvira dbo:spouse ?rogerII .
  ?rogerII rdf:type dbo:Monarch .
  ?alfonsoII dbo:childOf ?elvira ;
             dbo:childOf ?rogerII ;
             dbo:parent ?williamII ;
             rdf:type dbo:Monarch .

  VALUES ?elvira { dbr:Elvira_of_Castile }
  VALUES ?rogerII { dbr:Roger_II_of_Sicily }
  VALUES ?williamII { dbr:William_II_of_Sicily }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William II of Sicily's father
  dbr:William_II_of_Sicily dbo:father ?father .
  
  # Roger III, Duke of Apulia's parent (Roger II)
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?roger2 .

  # Elvira of Castile's child
  ?elviraChild dbo:childOf dbr:Elvira_of_Castile .
  
  FILTER (?father = ?roger2 && ?father = ?elviraChild)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?album rdf:type dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  ?album dbo:film ?film .
  ?film rdf:type dbo:Film .

  ?album dbo:work ?work .
  ?work rdf:type dbo:Work .

  ?album dbo:actor ?actor .
  ?actor rdf:type dbo:Actor ;
         dbo:profession dbr:Actor .
}
```",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Saw_Shwe_Khet dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Stephen_V_of_Hungary dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,1,0,0.8333333333333334,1.0,0.9090909090909091
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Eleonora_Menicucci dbo:birthName ?birthName .
}
```",1,2,2,1,1,3,2,20,0,1,1,0.0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personURL ?birthName WHERE {
  ?person dbo:birthPlace dbr:Central_Region_(Ghana) .
  ?person dbo:profession dbr:Musician .
  OPTIONAL { 
    ?person foaf:name ?birthName .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:The_Shadow dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fictionalCharacter WHERE {
  ?kentAllard a dbo:Agent .
  ?kentAllard rdfs:label ""Kent Allard""@en .
  OPTIONAL { 
    ?kentAllard dbo:character ?fictionalCharacter .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workURL ?producer WHERE {
  VALUES ?person { 
    dbr:Cora_Sue_Collins 
    dbr:Janet_Gaynor 
  }
  
  OPTIONAL {
    ?work dbo:creatorOrPerformer ?person .
    ?work dbo:producer ?producer .
  }

  FILTER (?person IN (dbr:Cora_Sue_Collins, dbr:Janet_Gaynor))
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyURL WHERE {
  VALUES ?partyURL { 
    dbr:Spanish_Socialist_Workers'_Party 
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?birthPlace WHERE {
  # Identify Quincy Adams Gillmore's award
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .
  
  # Find other awardees of the same award and their associated force
  ?person dbo:awardReceived ?award .
  OPTIONAL { ?person dbo:militaryService ?force . }
  
  # Determine Quincy Adams Gillmore's birthplace, ensuring it is a settlement in America
  dbr:Quincy_Adams_Gillmore dbo:birthPlace ?birthPlace ;
                            dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  
  FILTER (dbo:isPartOf ?birthPlace dbr:United_States) .
  FILTER EXISTS { ?birthPlace a dbo:Settlement . }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerNativeCountry WHERE {
  # Find the soccer club managed by Thomas Letsch
  ?team dbo:manager dbr:Thomas_Letsch .
  
  # Get the manager of that team
  ?team dbo:manager ?manager .

  # Find the native country of this manager
  ?manager dbo:nationality ?managerNativeCountry .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfSpain ?officeOfLeader ?event WHERE {
  # Find Anxo Quintana's office
  VALUES ?anxoQuintana { dbr:Anxo_Quintana }
  
  ?anxoQuintana dbo:office ?officeOfLeader .
  
  # Find the tenant of Spain (Prime Minister) during his tenure
  ?tenantOfSpain dbo:headOfState ?officeOfLeader .

  # Find events related to this office
  OPTIONAL {
    ?event dbo:relatedThroughTime ?officeOfLeader .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationEvent WHERE {
  dbr:Anxo_Quintana dbo:positionHeld ?position .
  ?position dbo:administrationOf ?administrationEvent .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalty WHERE {
  # Step 1: Find a child of Stephen V of Hungary
  VALUES ?stephenVChild { 
    dbr:Elizabeth_of_Hungary_(1207–1231) 
    dbr:Andrew_III_of_Hungary 
    dbr:Béla_IV_of_Hungary 
    # Add other known children if necessary
  }
  
  # Step 2: Find Philip, Despot of Romania and his parent (father)
  ?philip dbo:parent ?philipsFather .
  VALUES ?philip { dbr:Philip_Despot_von_Schleswig-Holstein-Sonderburg-Glücksburg }

  # Step 3: Find the grandparent of Philip
  ?philipsFather dbo:parent ?philipsGrandparent .

  # Step 4: Find the spouse of this grandparent
  ?philipsGrandparent dbo:spouse ?grandparentsSpouse .
  
  # Step 5: Ensure the person is royalty and matches one of Stephen V's children
  FILTER (?stephenVChild = ?grandparentsSpouse)
  OPTIONAL { ?grandparentsSpouse rdf:type dbo:Monarch . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alumnus WHERE {
  dbr:Plovdiv_University_'Paisii_Hilendarski'_University dbo:alumni ?alumnus .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?carolineResource { 
    # Assuming Caroline Louise Bevan Symonds is known as Rishi Sunak's spouse in DBpedia
    dbr:Rishi_Sunak dbo:spouse ?carolineResource .
  }
  ?carolineResource rdfs:label ""Caroline Louise Bevan Symonds""@en.
  OPTIONAL {
    ?carolineResource dbo:spouse ?spouse .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  # Saw Min Phyu's spouse who is a monarch
  ?spousePhyu dbo:spouse dbr:Saw_Min_Phyu .
  FILTER (?spousePhyu rdf:type dbo:Monarch) .

  # Myat Hpone Pyo's father and his royal spouse
  ?fatherMyat dbo:child dbr:Myat_Hpone_Pyo .
  ?royalSpouseFather dbo:spouse ?fatherMyat .
  FILTER (?royalSpouseFather rdf:type dbo:Monarch) .

  # Child of the royal spouse of Myat Hpone Pyo's father
  ?childRoyalSpouse dbo:child ?royalSpouseFather .

  # Predecessor of that child
  ?predecessor dbo:predecessor ?childRoyalSpouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceURL WHERE {
  ?edmundHakewillSmith a dbo:Person ;
                       foaf:name ""Edmund Hakewill-Smith""@en .
  
  ?edmundHakewillSmith dbo:award ?award .

  ?award dbo:force ?force .
  
  BIND(?force AS ?forceURL)
}
```",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?myatHponePyo ?predecessor WHERE {
  VALUES ?myatHponePyo { 
    dbr:Myat_Hpone_Pyo 
  }
  OPTIONAL {
    ?myatHponePyo dbo:predecessor ?predecessor .
  }
}
```",1,1,2,1,1,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoName WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ?alterEgoName .
  FILTER (LANG(?alterEgoName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?collinsProducer ?gaynorProducer WHERE {
  # Cora Sue Collins' claim to fame and its producer
  OPTIONAL {
    dbr:Cora_Sue_Collins dbo:claimToFame ?collinsWork .
    ?collinsWork dbo:producer ?collinsProducer .
  }
  
  # Janet Gaynor's claim to fame (movie/work) and its producer
  OPTIONAL {
    dbr:Janet_Gaynor dbo:claimToFame ?gaynorWork .
    ?gaynorWork a dbo:Film ; 
                dbo:producer ?gaynorProducer .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the book ""Smartbomb"" and its author
  ?book a dbo:Book ;
        rdfs:label ""Smartbomb""@en .
  
  ?book dbo:author ?author .

  # Find movies written by this author
  ?movie dbo:writer ?author ;
         dbo:starring ?actor .
}
```",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow WHERE {
  VALUES ?richardGrieco { dbr:Richard_Grieco }
  
  ?work dbo:starring ?richardGrieco .
  ?work a ?type .
  
  FILTER (
    (CONTAINS(LCASE(STR(?type)), ""movie"") && CONTAINS(LCASE(STR(?type)), ""television show""))
  )
  
  OPTIONAL {
    ?work dbo:title ?tvShow .
  }
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobThompsonsBand ?shadowProfessional WHERE {
  # Find the band associated with Bob Thompson (musician)
  dbr:Bob_Thompson_(musician) dbo:musicalArtist ?band .
  BIND(?band AS ?bobThompsonsBand)

  # Identify The Shadow as a creation of Walter B. Gibson
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .

  # Find professionals associated with portraying The Shadow
  OPTIONAL {
    ?professional dbo:profession dbr:Actor ; 
                  dbo:portrayal dbr:The_Shadow .
    BIND(?professional AS ?shadowProfessional)
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:George_H._Cameron dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,2,87241,0.0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?track ?writer WHERE {
  VALUES ?album { dbr:Always_the_Love_Songs }
  
  ?album dbo:hasPart ?track .
  OPTIONAL {
    ?track dbo:lyricist ?writer .
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reedHowesDeathPlace ?carolynJonesDeathPlace WHERE {
  OPTIONAL { 
    dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
  }
  OPTIONAL { 
    dbr:Carolyn_Jones_(actress) dbo:deathPlace ?carolynJonesDeathPlace .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?royaltyStatus WHERE {
  VALUES ?peterIV { dbr:Peter_IV_of_Aragon }
  
  ?peterIV dbo:father ?father .
  
  OPTIONAL {
    ?father dbo:monarch ?country .
    BIND(""Monarch"" AS ?royaltyStatus)
  }
  
  OPTIONAL {
    ?father dbo:royalTitle ?title .
    FILTER EXISTS { ?title rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen"")) }
    BIND(""Has Royal Title"" AS ?royaltyStatus)
  }
  
  FILTER (?royaltyStatus != """")
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stuartToshAssociatedArtist ?wizardsOfWaverlyPlaceWriter WHERE {
  # Find the associated musical artist of Stuart Tosh
  OPTIONAL {
    dbr:Stuart_Tosh dbo:associatedMusicalArtist ?stuartToshAssociatedArtist .
  }
  
  # Find the writer who is both a musical artist and an artist for Wizards of Waverly Place (soundtrack)
  OPTIONAL {
    ?wizardsOfWaverlyPlaceWriter dbo:composer dbr:Wizards_of_Waverly_Place_(soundtrack) ;
                                 rdf:type dbo:MusicalArtist, dbo:Artist .
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?madridConnection WHERE {
  ?person dbo:participatedIn dbr:Central_African_Republic_Civil_War .
  ?person dbo:officeHolder ?office .
  ?person dbo:politicalPartyMember ?party .
  OPTIONAL { 
    ?person dbo:residence ?place .
    FILTER(CONTAINS(LCASE(STR(?place)), ""madrid""))
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerURL ?successorURL WHERE {
  # Find the writer of ""Always the Love Songs""
  VALUES ?alwaysTheLoveSongs { 
    dbr:Always_the_Love_Songs
  }
  ?alwaysTheLoveSongs dbo:author ?writer .

  # Identify the commander in the Russo-Polish War and their successor
  ?warEvent dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:dateStart ?startYear ;
    dbo:dateEnd ?endYear .
  ] FILTER (?startYear >= ""1654""^^xsd:gYear && ?endYear <= ""1667""^^xsd:gYear)
  
  ?commander dbo:commanded ?warEvent .
  ?successor dbo:succeededBy ?commander .

  # Ensure the successor is a politician and office holder
  ?successor dbo:officeHolder ?office ;
            (dbo:politicalPartyMember|dbo:memberOfPoliticalBody) ?party .

  FILTER (?writer = ?successor)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfMarianoRajoyIn2003MadridCouncil ?leaderOfConservativeRepublicanParty WHERE {
  VALUES ?marianoRajoy { dbr:Mariano_Rajoy }
  
  # Find Mariano Rajoy's office in the 2003 Madrid City Council election
  ?officeOfMarianoRajoyIn2003MadridCouncil dbo:officeHolder ?marianoRajoy .
  ?officeOfMarianoRajoyIn2003MadridCouncil dbo:electedAs [
    dbo:date ""2003"" ;
    dbo:place dbr:Madrid_City_Council
  ] .

  # Find Mariano Rajoy's leadership role in the Conservative Republican Party (Spain)
  ?leaderOfConservativeRepublicanParty dbo:leader ?marianoRajoy .
  ?leaderOfConservativeRepublicanParty rdf:type dbo:PoliticalParty ;
    rdfs:label ""Conservative Republican Party (Spain)""@en .

  # Ensure both roles are associated with being an office holder
  FILTER EXISTS { ?officeOfMarianoRajoyIn2003MadridCouncil a dbo:Office . }
  FILTER EXISTS { ?leaderOfConservativeRepublicanParty a dbo:PoliticalParty . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?album dbo:title ""No Alternative""@en .
  ?album dbo:artist ?band .
  ?band a dbo:Band .
  ?band dbo:bandMember ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?originalChild ?spouseOfSpouse WHERE {
  # Identify the child of Princess Antoinette and Ferdinand Albert II who is royalty
  ?child dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .
  ?child dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttle .
  ?child rdf:type dbo:Monarch .

  # Find the spouse of this child
  ?child dbo:spouse ?firstSpouse .

  # Find the spouse of that spouse (i.e., the original child)
  ?firstSpouse dbo:spouse ?spouseOfSpouse .

  # Ensure the spouse of the spouse is the same as the original child
  FILTER (?originalChild = ?child)
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  ?paulusPowell dbo:birthPlace ?paulusBirthPlace .
  
  # Step 2: Ensure the birth place is a region and administrative region
  ?paulusBirthPlace rdf:type dbo:Region ;
                    rdf:type dbo:AdministrativeRegion .

  # Step 3: Find Vince Gilligan's awardee
  ?vinceGilligan dbo:award ?awardee .
  
  # Step 4: Get the birth place of the awardee
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Step 5: Ensure the awardee's birth place matches Paulus Powell's birth place
  FILTER (?paulusBirthPlace = ?awardeeBirthPlace)

  # Step 6: Find the governor of this region
  ?governor dbo:governs ?region .
  ?region rdfs:label ?birthPlaceLabel .

  FILTER (CONTAINS(LCASE(?birthPlaceLabel), LCASE(str(?paulusBirthPlace))))
  
  # Get the birth place of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  ?person dbo:spouse dbr:Roger_Pryor_(actor) .
  OPTIONAL { 
    ?person dbo:partyAffiliation dbr:Republican_Party_(United_States) .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:nationality dbr:Australia .
  ?person dbo:occupation dbr:Scientist .
  ?person dbo:award dbr:Australian_Laureate_Fellowship .
  ?person dbo:almaMater ?almaMater .
}
```",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?konstantinosVentiris dbo:birthPlace dbr:Athens .
  ?konstantinosVentiris dbo:participatedInBattle ?battle .
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""war"") && CONTAINS(LCASE(?label), ""konstantinos ventiris""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?region dbo:timezone dbr:Asia/Tokyo .
    ?birthPlace dbo:locatedIn ?region .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Bob_Crewe dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerProfession ?alterEgoProfession WHERE {
  # Find the producer of Coke Studio Philippines and their profession
  ?cokeStudio dbr:Coke_Studio_Philippines .
  ?cokeStudio dbo:producer ?producer .
  ?producer dbo:profession ?producerProfession .

  # Find the alter ego of The Shadow and their profession
  ?shadow dbr:The_Shadow .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?alterEgoProfession .
}
```",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Nothing_to_Gein dbo:producer ?producer .
  FILTER (
    { ?producer rdf:type dbo:Organization . }
    && { ?producer rdf:type dbo:MusicalGroup . }
  )
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorManager WHERE {
  # Identify the ""2006–07 VfL Bochum season""
  VALUES ?vflBochumSeason { 
    dbr:2006%E2%80%9307_VfL_Bochum_season
  }
  
  # Find its successor season
  ?vflBochumSeason dbo:successor ?successorSeason .
  
  # Determine the manager of that successor season
  ?successorSeason dbo:manager ?successorManager .

  # Identify a person born on 1968-08-26 who is a sports manager
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .
  
  # Find the soccer club season and team associated with this person, then determine their manager
  OPTIONAL {
    ?teamSeason dbo:manager ?person .
    FILTER (?successorManager = ?person)
  }
}
```",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?olafAdministration ?copenhagenTerritory ?princeChristian WHERE {
  # Olaf I of Denmark's administration
  dbr:Olaf_I_of_Denmark dbo:ruledBy ?olafAdministration .
  
  # Territory administered from Copenhagen
  OPTIONAL {
    ?copenhagenTerritory dbo:capital dbr:Copenhagen ;
                        dbo:ruledBy ?olafAdministration .
  }
  
  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck's details
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck 
    a dbo:RoyalPerson ;
    dbo:birthPlace ?princeChristianBirthPlace .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Janet Gaynor's most famous work
  dbr:Janet_Gaynor dbo:mostFamousWork ?claimToFame .
  
  # The professional associated with The Shadow
  OPTIONAL { 
    ?shadowActor a dbo:Actor ;
                 dbo:characterName ""The Shadow"" .
  }
  
  # Producer of The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(film) dbo:producer ?producer .

  # Check if the producer is common among these entities
  OPTIONAL {
    ?claimToFame dbo:producer ?producer .
  }
  
  OPTIONAL {
    ?shadowActor dbo:producedWork ?work ;
                 dbo:producer ?producer .
  }

  FILTER (?producer = ?producer)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?primeMinister WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?primeMinister dbo:memberOf ?party ;
                 dbo:positionHeld dbr:Prime_Minister_of_Spain .

  OPTIONAL { 
    ?feijoo dbo:officeHolder dbr:President_of_Galicia .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?season dbo:sportTeam dbr:VfL_Bochum ;
          dbo:season ""2007–08"" .
  
  ?manager dbo:manager ?season ;
           dbo:nationality dbr:West_Germany ;
           dbo:birthDate ""1968-08-26""^^xsd:date .

}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Kiyosu dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName ?polishEntity WHERE {
  ?commander dbo:country dbr:France .
  ?commander dbo:commanderOf ?war .
  ?war dbo:name ?warName .
  FILTER regex(?warName, ""French Revolutionary Wars"", ""i"") .

  ?entity dbo:location dbr:Poland .
  ?commander dbo:associatedWith ?entity .

  BIND (str(?commander) AS ?commanderName)
  BIND (str(?entity) AS ?polishEntity)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tomPhillipsWar ?williamTennantForce WHERE {
  # Resource for Tom Phillips (Royal Navy officer)
  dbr:Tom_Phillips_(Royal_Navy_officer) dbo:commanded ?tomPhillipsWar .
  
  # Resource for William Tennant (Royal Navy officer)
  dbr:William_Tennant_(Royal_Navy_officer) dbo:commanded ?williamTennantForce .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookURL WHERE {
  VALUES ?author { dbr:Hillary_Clinton }
  ?book dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?book dbo:wikiPageRedirects ?redirect . }
  ?book dbo:author ?author .
  FILTER NOT EXISTS { ?book dbo:abstract ?abstract . FILTER regex(?abstract, ""non-fiction"", ""i"") }
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  VALUES ?producer { 
    # Placeholder for the producer of ""Storm in a Teacup (film)""
  }
  VALUES ?writer { 
    # Placeholder for the writer of ""Boom Shack-A-Lak""
  }

  FILTER (?producer = ?writer)

  ?person dbo:birthPlace ?birthplace .

  ?native dbo:nativeCountry ?country .
  ?birthplace dbr:COUNTRY ?country .

}
```

Note: The placeholders for `?producer` and `?writer` need to be replaced with the actual DBpedia resources once identified. This query assumes that there is a common individual who fulfills both roles, which needs verification.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  VALUES ?team { dbr:Hong_Kong_C_Team }
  
  ?team dbo:manager ?manager .
  
  OPTIONAL {
    ?manager dbo:sport dbr:Soccer .
  }
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alumnus WHERE {
  dbr:Eton_College dbo:alumni ?alumnus .
}
```",1,1,2,1,1,3,3,71,0,0,211,0,0.0,0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# This query cannot be constructed due to the lack of specific information in the question.
```",1,1,2,1,1,3,2,20,0,0,39790,0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Bobby_Shmurda dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  ?person dbo:nativePlace dbr:Florida .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Step 1: Find Charles II of Naples' spouse
  ?charlesII dbr:Charles_II_of_Naples .
  ?charlesII dbo:spouse ?spouseOfCharlesII .

  # Step 2: Find the parent of the father (grandparent) of Charles II's spouse
  ?fatherOfSpouse dbp:motherOrFather ?spouseOfCharlesII .
  ?grandparentOfSpouse dbp:motherOrFather ?fatherOfSpouse .

  # Step 3: Find Maria of Bytom's spouse
  ?maria dbr:Maria_of_Bytom .
  ?maria dbo:spouse ?spouseOfMaria .

  # Step 4: Find the parent of the father (grandparent) of Maria of Bytom's spouse
  ?fatherOfSpouse2 dbp:motherOrFather ?spouseOfMaria .
  ?grandparentOfSpouse2 dbp:motherOrFather ?fatherOfSpouse2 .

  # Step 5: Ensure commonality and royalty
  FILTER (?grandparentOfSpouse = ?grandparentOfSpouse2)
  FILTER EXISTS { ?commonAncestor dbo:royalty . }

  # Step 6: Ensure the person is a child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?commonAncestor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather WHERE {
  # Maria Anna of Bavaria's child who is royalty and a commander in the war
  ?mariaChild dbo:spouseOrPartner dbr:Maria_Anna_of_Bavaria .
  ?mariaChild a dbo:RoyalFamilyMember .
  ?mariaChild dbo:militaryCommander ?commanderRole .

  # Father of Maria Anna's child (her spouse)
  ?father dbo:spouseOrPartner dbr:Maria_Anna_of_Bavaria .

  # Child of the father who is associated with societal events, events, and a TV show related to the 2nd Dragoon Regiment
  ?childOfFather dbo:spouseOrPartner ?father .
  ?event dbo:associatedWith ?childOfFather ;
         dbo:relatedEvent dbr:Societal_Event ;
         dbo:relatedEvent dbr:Event ;
         dbo:relatedEvent dbr:Television_Show .
  ?tvShow dbo:relatedTo ?childOfFather ;
          dbo:relatedTo dbr:2nd_Dragoon_Regiment_(France) .

}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?singerName ?singerURL WHERE {
  ?singer a dbo:Singer .
  ?singer rdfs:label ?singerName .
  FILTER (LANG(?singerName) = 'en') # Ensure the label is in English
  OPTIONAL { ?singer foaf:name ?singerName . } # Use foaf:name if available for better accuracy
  BIND(<http://dbpedia.org/resource/> AS ?baseURL)
  BIND(CONCAT(STR(?baseURL), STR(?singer)) AS ?singerURL)
}
ORDER BY ?singerName
```",1,1,2,1,1,2,2,9,0,0,10364,0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find movies starring Audrey Hepburn
  VALUES ?audreyMovie { 
    ?movie . 
  }
  dbr:Audrey_Hepburn dbo:starring ?audreyMovie .
  
  # Identify Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbo:spouse ?januszSpouse .

  # Find a movie that is both a film and a work, starring Audrey Hepburn and involving Janusz Kamiński's spouse
  ?movie dbo:film true .
  ?movie dbo:work true .
  
  OPTIONAL {
    ?januszSpouse dbo:starring ?movie .
  }
  
  # Extract actors from the identified movie
  ?movie dbo:starring ?actor .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Bill_Clinton dbo:author ?work .
  ?work a dbo:Book ;
        a dbo:Work .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonChild WHERE {
  VALUES ?parent1 { dbr:Albrecht,_Duke_of_W%C3%BCrttemberg }
  VALUES ?parent2 { dbr:Archduchess_Margarete_Sophie_of_Austria }

  ?commonChild dbo:childOf ?parent1 .
  ?commonChild dbo:childOf ?parent2 .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  ?birthPlace dbo:country dbr:United_States .
}
```",2,4,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Álvaro Quirós""@en .
  
  OPTIONAL { 
    ?person dbo:office ?office .
  }
  
  OPTIONAL {
    ?person dbo:residence ?residence .
    ?residence rdf:type dbr:Countries .
    ?residence rdfs:label ?country .
  }

  FILTER EXISTS {
    ?election dbo:leader ?person ;
              dbo:electionDate ?date .
    FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galician""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumActor ?shelbyOaksActor WHERE {
  # Find T.I.'s album
  VALUES ?tIAlbum { 
    dbr:T.I.#<specific_album_resource> # Replace with actual resource if known
  }
  
  # Get the actor of the album
  ?tIAlbum dbo:actor ?albumActor .
  
  # Find Shelby Oaks and its actors
  dbr:Shelby_Oaks dbo:actor ?shelbyOaksActor .
  
  # Check for professional connection
  OPTIONAL {
    ?albumActor dbo:profession ?profession .
    FILTER (?albumActor = ?shelbyOaksActor)
  }
}
```

Note: The placeholder `<specific_album_resource>` should be replaced with the actual DBpedia resource identifier for one of T.I.'s albums if known. This query assumes that such a resource is available in DBpedia.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?joeyBBirthName { dbr:Joey_B }
  VALUES ?rodArgentProfession { dbr:Rod_Argent }
  VALUES ?pacelyAssociatedArtist { dbr:$Pacely }

  ?joeyB dbo:birthName ?joeyBBirthName .
  ?person dbo:birthName ?joeyBBirthName .

  ?rodArgent dbo:profession ?rodArgentProfession .
  ?person dbo:profession ?rodArgentProfession .

  ?pacely dbo:associatedMusicalArtist ?pacelyAssociatedArtist .
  ?person dbo:associatedMusicalArtist ?pacelyAssociatedArtist .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Sappy dbo:composer ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find the award Rodney Lees received and its awardee
  ?award dbo:recipient dbr:Rodney_Lees .
  ?award dbo:awardedBy ?awardee .

  # Step 2: Identify Frederick Stanley's child who is a politician
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby ;
         dbo:occupation dbr:Politician .

  # Step 3: Determine the parent of this politician
  ?child dbo:parent ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find Kate Dimbleby's parent
  dbr:Kate_Dimbleby dbo:parent ?parent .
  
  # Find movies featuring Vera Lynn that are both a work and a television show
  ?movie dbo:starring dbr:Vera_Lynn ;
         rdf:type dbo:Film ;
         rdf:type dbo:TelevisionShow .

  # Ensure the movie is associated with Kate Dimbleby's parent
  ?parent dbo:associatedWith ?movie .
  
  # Get the author of the movie
  ?movie dbo:creator ?author .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:The_Shadow dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lindaSueCobb ?spouseName WHERE {
  VALUES ?lindaSueCobb { 
    dbr:Linda_Sue_Cobb 
  }
  ?lindaSueCobb dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER (LANG(?spouseName) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Guillaume_Peltier dbo:memberOf ?party .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicianChildBirthPlace WHERE {
  # Find a person who died in Taipei
  ?person dbo:deathPlace dbr:Taipei .
  
  # Link ""Cat Country"" to its country (Liu Binyan's novel is associated with China)
  ?catCountry dbo:nationality dbr:China .

  # Ensure the person is linked to Cat Country through nationality or other relevant properties
  ?person dbo:nationality ?catCountry .
  
  # Find a child of this person who is a politician
  ?child dbo:parent ?person ;
         dbo:occupation dbr:Politician .
  
  # Get the birthplace of this politician child
  ?child dbo:birthPlace ?politicianChildBirthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?stuartMcbeathTosh { 
    dbr:Stuart_McBeath_Tosh 
  }
  
  ?stuartMcbeathTosh dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?birthPlace WHERE {
  VALUES ?letsch { dbr:Thomas_Letsch }
  
  # Find managers associated with Thomas Letsch's clubs
  ?club dbo:manager ?manager .
  OPTIONAL {
    ?manager dbo:birthPlace ?birthPlace .
  }

  # Check if the manager is also a manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?manager .

  # Filter managers born in West Germany
  FILTER (
    EXISTS { 
      ?birthPlace rdfs:label ?placeLabel .
      FILTER (CONTAINS(LCASE(?placeLabel), ""west germany""))
    }
  )

  # Ensure the manager is not Thomas Letsch himself
  FILTER (?manager != ?letsch)

  # Return the name of the manager and their birth place
  ?manager foaf:name ?managerName .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Archduchess Helena's spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  
  # Find the children of the spouse
  ?spouse dbo:child ?child .

  # Filter for royalty status among these children
  ?child rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?authorBirthPlace WHERE {
  # Find the governor of Virginia and their birthplace
  ?governor a dbo:Governor ;
            dbo:stateOrTerritory dbr:Virginia ;
            dbo:birthPlace ?governorBirthPlace .
  
  # Find the author of ""El Deafo"" and her birthplace
  ?author dbo:title ""El Deafo""@en ;
          dbo:birthPlace ?authorBirthPlace ;
          a dbo:Writer .

  FILTER (str(?author) = str(dbr:C._E._Bell))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?alterEgo WHERE {
  # Find Baeda Maryam I and Dawit I
  VALUES (?baedaMaryamI) { dbr:Baeda_Maryam_I }
  VALUES (?dawitI) { dbr:Dawit_I }

  # Identify their children
  ?child dbo:parent ?baedaMaryamI .
  ?child dbo:parent ?dawitI .

  # Find the father of this child
  ?father dbo:child ?child .

  # Find the grandfather (father's father)
  ?grandfather dbo:child ?father .

  # Check if the grandfather was royalty and an office holder
  ?grandfather a dbo:Monarch .
  OPTIONAL { ?grandfather dbo:officeHolder ?office . }

  # Reference to The Shadow's alter ego, Lamont Cranston
  dbr:Lamont_Cranston rdfs:label ""The Shadow's alter ego""@en .

  FILTER EXISTS {
    ?grandfather rdfs:seeAlso ?alterEgo .
    ?alterEgo rdfs:label ""Lamont Cranston""@en .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shatrughanSinhaURL ?profession WHERE {
  VALUES ?shatrughanSinhaURL { 
    dbr:Shatrughan_Sinha 
  }
  ?shatrughanSinhaURL dbo:occupation ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Identify Constance of Burgundy
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Find the child of Constance's spouse
  ?spouse dbo:child ?child .

  # Find the grandchild (child of the child) who is royalty
  ?child dbo:child ?grandchild .
  
  # Ensure the grandchild is a member of royalty
  ?grandchild rdf:type dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Linda_Bruckheimer dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorURL WHERE {
  VALUES ?virginia { dbr:Virginia }
  ?virginia dbo:governor ?governor .
  ?governor rdf:type dbo:Politician .
  BIND(?governor AS ?governorURL)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?landmarkName ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""20.1168""^^xsd:float .
  
  # Find Harriette Arlene Lake and her political affiliation
  ?person foaf:givenName ""Harriette"" ;
          foaf:surname ""Lake"" ;
          dbo:memberOf ?partyMember .

  # Optional: Link the landmark to a specific context if needed (e.g., location)
  OPTIONAL { 
    ?landmark dbo:location ?location .
  }

  # Return the name of the landmark and the party member
  VALUES ?landmarkName { ?landmark }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?guruAssociatedArtist ?rankingJoeAssociatedArtist WHERE {
  OPTIONAL {
    dbr:Guru dbo:associatedMusicalArtist ?guruAssociatedArtist .
  }
  OPTIONAL {
    dbr:Ranking_Joe dbo:associatedMusicalArtist ?rankingJoeAssociatedArtist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfStephenV WHERE {
  # Step 1: Find Maria of Bytom's spouse
  dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .

  # Step 2: Determine the father of Maria of Bytom's spouse
  ?mariaSpouse dbo:father ?fatherOfSpouse .

  # Step 3: Identify Stephen V of Hungary's children
  dbr:Stephen_V_of_Hungary dbo:child ?childOfStephenV .

  # Step 4: Match the conditions
  FILTER (?fatherOfSpouse = ?childOfStephenV)
  
  # Ensure the person is a member of royalty
  ?childOfStephenV rdf:type dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildFather WHERE {
  # Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?firstChild .
  
  # Child's child (Grandchild)
  ?firstChild dbo:child ?secondChild .

  # Father of the grandchild
  ?secondChild dbo:father ?grandchildFather .

  # Reference related to William I who is both royalty and office holder
  ?reference dbo:royaltyTitle ?title .
  ?reference dbo:officeHolder ?office .
  ?reference dbo:relatedTo dbr:William_I_of_Aquitaine .

  # Child of the reference that is also royalty
  ?reference dbo:child ?childOfReference .
  ?childOfReference dbo:royaltyTitle ?childTitle .

  FILTER (?grandchildFather = ?childOfReference)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?photographerParent ?doonArbusParent ?movieActor ?decedent WHERE {
  # Parent of Photographer
  dbr:Photography dbo:wikiPageRedirects ?photographerParent .
  
  # Parent of Doon Arbus
  dbr:Doon_Arbus dbo:parentOrganisationOrPerson ?doonArbusParent .

  # Actor of the movie that is a work
  ?movie dbo:starring ?movieActor .
  FILTER (isLiteral(?movie) && contains(str(?movie), ""film""))

  # Person decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles .

  # Optional matching of the movie actor with the decedent
  OPTIONAL {
    ?movieActor rdfs:label ?actorLabel .
    FILTER (CONTAINS(LCASE(?actorLabel), ""actor""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalInAlterEgo ?actorOfSong WHERE {
  # Find The Shadow's professional identity (alter ego)
  dbr:The_Shadow dbo:alterEgo ?professionalInAlterEgo .
  
  # Identify a song from T.I.'s album
  ?album dbo:artist dbr:T.I. ;
         dbo:song ?song .
  
  # Ensure the song is both a song and a musical work
  ?song rdf:type dbo:Songs .

  # Find the actor of the song
  ?actorOfSong dbo:performedIn ?song .

  # Connect the professional identity with the actor of the song
  FILTER (?professionalInAlterEgo = ?actorOfSong)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?rustlersRhapsody { 
    dbr:Rustler's_Rhapsody 
  }
  ?rustlersRhapsody dbo:starring|dbo:castMember ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  VALUES ?copenhagen { 
    dbr:Copenhagen 
  }
  ?territory dbo:administrativeCapital ?copenhagen .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeOfLeader ?tenantOfSpain WHERE {
  # Find the leader of the 2009 Galician regional election
  ?leader dbo:office ?office .
  ?office dbo:startDate ?startDate ;
          dbo:endDate ?endDate .
  
  FILTER (YEAR(?startDate) <= 2009 && YEAR(?endDate) >= 2009)
  FILTER EXISTS { ?leader dbp:name ""Alberto Núñez Feijóo""@en } # Assuming Alberto Núñez Feijóo was the leader
  BIND(?office AS ?officeOfLeader)

  # Find the tenant of Spain
  dbr:Spain dbp:country ?tenant .
  BIND(dbr:Spain AS ?tenantOfSpain)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtistOfBand ?remAssociatedArtist ?artistOfRemAssociatedArtist WHERE {
  # Step 1: Find Mark Eitzel's band
  VALUES ?markEitzel { dbr:Mark_Eitzel }
  
  ?markEitzel dbo:bandMember ?bandMember .
  
  # Step 2: Find associated musical artists of the band
  OPTIONAL {
    ?bandMember dbo:associatedMusicalArtist ?associatedArtistOfBand .
  }

  # Step 3: Find R.E.M.'s associated musical artist
  VALUES ?rem { dbr:R.E.M. }
  
  ?rem dbo:associatedMusicalArtist ?remAssociatedArtist .

  # Step 4: Find artists associated with R.E.M.'s associated artist that are also artists
  OPTIONAL {
    ?remAssociatedArtist dbo:associatedMusicalArtist ?artistOfRemAssociatedArtist .
    FILTER EXISTS { ?artistOfRemAssociatedArtist rdf:type dbo:Artist }
  }

  # Ensure the associated musical artist of Mark Eitzel's band is the same as R.E.M.'s associated artist
  FILTER (?associatedArtistOfBand = ?remAssociatedArtist)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Scott_LaFaro dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtistURL WHERE {
  VALUES ?burntByTheSun { 
    dbr:Burnt_by_the_Sun_(film) 
  }
  
  ?burntByTheSun dbo:associatedMusicalArtist ?artist .
  
  OPTIONAL { ?artist dbo:type dbr:Band . }
  OPTIONAL { ?artist dbo:type dbr:Group . }
  OPTIONAL { ?artist dbo:type dbr:Organization . }

  FILTER EXISTS { ?artist dbo:type dbr:Band . }
  FILTER EXISTS { ?artist dbo:type dbr:Group . }
  FILTER EXISTS { ?artist dbo:type dbr:Organization . }
}
```",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify a child of Ferdinand III
  ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Ensure the child shares a common ancestor with Cecilia Renata (Ferdinand II)
  ?commonAncestor dbo:child ?child .
  ?commonAncestor dbo:child dbr:Cecilia_Renata_of_Austria .

  # Retrieve the father of this child
  ?father dbo:parent ?child .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?territory WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  dbr:Christian_Ditlev_Ammenhorst_Hansen dbo:deathPlace ?hansenDeathPlace .
  
  # Ensure the death place is a settlement
  ?hansenDeathPlace rdf:type dbp:Settlement .

  # Find Olaf I of Denmark's administered territories
  dbr:Olaf_I_of_Denmark dbo:administers ?olafAdministeredTerritory .

  # Ensure the territory is also a settlement
  ?olafAdministeredTerritory rdf:type dbp:Settlement .

  # Match the same territory from both places
  FILTER (?hansenDeathPlace = ?olafAdministeredTerritory)
  
  BIND(?olafAdministeredTerritory AS ?territory)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  dbr:Russia_national_football_team rdfs:label ?nickname .
  FILTER (LANG(?nickname) = 'en')
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?rogerPryorSpouse WHERE {
  OPTIONAL {
    ?person dbo:member dbr:Republican_Party_(United_States) .
    ?person rdfs:label ?partyMember .
    FILTER (LANG(?partyMember) = ""en"")
  }
  
  OPTIONAL {
    dbr:Roger_Pryor dbo:spouse ?rogerPryorSpouse .
    ?rogerPryorSpouse rdfs:label ?spouseLabel .
    FILTER (LANG(?spouseLabel) = ""en"")
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?country WHERE {
  dbr:Lao_She dbo:work ?work .
  ?work dbo:country ?country .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?presidentOfSpain ?mayorOfSantiagoDeCompostela ?anxoQuintanaOffice WHERE {
  # Find the President of Spain
  ?presidentOfSpain dbo:office dbr:President_of_Spain .
  
  # Find the Mayor of Santiago de Compostela
  ?mayorOfSantiagoDeCompostela dbo:office dbr:Mayor_of_Santiago_de_Compostela .

  # Find offices held by Anxo Quintana that are associated with events
  ?anxoQuintanaOffice dbo:holder dbr:Anxo_Quintana .
  OPTIONAL {
    ?anxoQuintanaEvent dbo:event ?anxoQuintanaOffice .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraOffice ?leaderResidence WHERE {
  # Find Miguel Maura's office
  dbr:Miguel_Maura dbo:officeHolder ?miguelMauraOffice .
  
  # Identify the leader of the 2003 Madrid City Council election
  ?leader a dbo:Mayor ;
          dbo:electedDuring ?electionEvent .

  # Ensure the election event is related to the 2003 Madrid City Council election
  ?electionEvent rdfs:label ""Madrid City Council election, 2003""@en .
  
  # Find the residence of this leader
  ?leader dbo:residence ?leaderResidence .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shattaWaleAssociatedArtist ?centralRegionMusicianAssociatedArtist WHERE {
  VALUES ?shattaWale { dbr:Shatta_Wale }
  OPTIONAL {
    ?shattaWale dbo:associatedMusicalArtist ?shattaWaleAssociatedArtist .
  }

  # Assuming we identify a musician from the Central Region, Ghana
  # For example, let's assume it is Ebo Taylor (a known artist from that region)
  VALUES ?centralRegionMusician { dbr:Ebo_Taylor }
  OPTIONAL {
    ?centralRegionMusician dbo:associatedMusicalArtist ?centralRegionMusicianAssociatedArtist .
  }
}
```",6,7,7,3,3,3,3,71,0,21,1,0.0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  dbr:Allan_Arbus dbo:child ?child .
  ?child rdfs:label ?childLabel .
  FILTER (lang(?childLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ulsterUnionistPartyLeader WHERE {
  dbr:Ulster_Unionist_Party dbo:leader ?ulsterUnionistPartyLeader .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William I of Sicily
  VALUES ?williamI { dbr:William_I_of_Sicily }
  
  # Identify Roger II of Sicily
  VALUES ?rogerII { dbr:Roger_II_of_Sicily }
  
  # Identify Elvira of Castile, Queen of Sicily
  VALUES ?elvira { dbr:Elvira_of_Castile,_Queen_of_Sicily }

  # Establish that William I is a child of Roger II and Elvira
  ?williamI dbo:childOf ?rogerII .
  ?williamI dbo:childOf ?elvira .

  # Find the father (Roger II) based on these relationships
  ?father dbo:spouse ?elvira .
  ?father dbo:child ?williamI .
  
  FILTER (?father = ?rogerII)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?stoneSourBandMember WHERE {
  # Find the producer of Nothing to Gein
  dbr:Nothing_to_Gein dbo:producer ?producer .
  
  # Ensure the producer is both an organization and a group
  ?producer rdf:type dbo:Organization ;
            rdf:type dbo:Band .

  # Find band members of Stone Sour
  dbr:Stone_Sour dbo:bandMember ?stoneSourBandMember .

  # Check if any band member of Stone Sour is associated with the producer
  OPTIONAL {
    ?stoneSourBandMember dbo:associatedMusicalArtist ?producer .
  }
  
  FILTER (?stoneSourBandMember != ?producer)
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  dbr:Judgment_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalAlterEgo ?claimToFame WHERE {
  # Find the alter ego of Kent Allard (print)
  VALUES ?kentAllard { dbr:Kent_Allard_(comics) }
  ?kentAllard dbo:alterEgo ?professionalAlterEgo .

  # Identify the actor for Johnny Doughboy
  VALUES ?johnnyDoughboy { dbr:Johnny_Doughboy }
  ?actor dbo:character ?johnnyDoughboy .
  
  # Find the claim to fame of this actor
  ?actor dbo:work ?claimToFame .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfAlbum ?movie WHERE {
  # Step 1: Identify T.I.'s album that is a song and musical work
  VALUES ?album { 
    dbr:T.I.#<replace_with_specific_album_resource>
  }
  
  # Step 2: Find the actor associated with this album
  ?album dbo:song ?song .
  ?song dbo:musicalWork ?musicalWork .
  OPTIONAL {
    ?album dbo:actor ?actorOfAlbum .
  }

  # Step 3: Identify the author of ""Smartbomb""
  VALUES ?author { 
    dbr:John_Smith_<replace_with_actual_author_resource>
  }
  
  # Step 4: Find a movie featuring both the actor and the author
  ?movie dbo:starring ?actorOfAlbum .
  ?movie dbo:starring ?author .
}
```

Note: Replace `<replace_with_specific_album_resource>` with the specific DBpedia resource for T.I.'s album, and `dbr:John_Smith_<replace_with_actual_author_resource>` with the actual DBpedia resource for the author of ""Smartbomb.""",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Identify Patrice Martin-Lalande
  dbr:Patrice_Martin-Lalande dbo:successor ?successor .
  
  # Ensure the successor is a politician
  ?successor rdf:type dbo:Politician .

  # Ensure the successor is French
  OPTIONAL { 
    ?successor dbo:nationality dbr:France .
  }
}
```",1,3,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?christianIXAdministration ?schleswigMayor ?copenhagenAdmin WHERE {
  # Administration of Christian IX of Denmark
  OPTIONAL {
    dbr:Christian_IX_of_Denmark dbo:monarch ?country .
    ?country dbo:administrativeUnit ?christianIXAdministration .
  }
  
  # Mayor of Duchy of Schleswig
  OPTIONAL {
    dbr:Duchy_of_Schleswig dbo:mayor ?schleswigMayor .
  }

  # Territories administered from Copenhagen
  OPTIONAL {
    ?copenhagenAdmin dbo:administrativeUnit ?territory .
    ?territory dbo:administeredBy dbr:Copenhagen .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentURL ?parentLabel WHERE {
  VALUES ?francisI { 
    dbr:François_Ier,_Duke_of_Lorraine 
  }
  ?francisI dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER (lang(?parentLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?personWithBirthName WHERE {
  # Find Tisha Sterling's parent(s)
  dbr:Tisha_Sterling dbo:parent ?parent .

  # Get the birth name of the parent
  ?parent dbo:birthName ?birthName .

  # Find a person with that birth name
  ?person dbo:birthName ?birthName .
  
  # Ensure this person is associated with the Republican Party in the United States
  ?person dbo:party dbr:Republican_Party_(United_States) .

  BIND(?person AS ?partyMember)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?billClintonBook WHERE {
  # Find the commander in the Third Taiwan Strait Crisis
  OPTIONAL {
    dbr:Third_Taiwan_Strait_Crisis dbo:commander ?commander .
  }
  
  # Find books authored by Bill Clinton
  OPTIONAL {
    ?billClintonBook a dbo:Book ;
                     dbo:author dbr:Bill_Clinton .
  }

  # Ensure the book is also classified as a written work
  FILTER EXISTS { 
    ?billClintonBook a dbo:WrittenWork .
  }
}
```",3,6,4,2,2,3,3,71,1,24,0,0.04,1.0,0.07692307692307693
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?maximilianI { dbr:Maximilian_I,_Holy_Roman_Emperor }
  VALUES ?catherineOfAustria { dbr:Catherine_of_Austria_(1507–1578) }

  ?child dbo:parent ?maximilianI .
  ?catherineOfAustria dbo:parent ?child .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?producerProfession ?otherProfessional WHERE {
  # Find the producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Determine the profession of the producer
  ?producer dbo:profession ?producerProfession .

  # Find other professionals in the same field as the producer
  ?otherProfessional a ?producerProfession .
  FILTER(?otherProfessional != ?producer)
}
```",4,4,5,3,2,3,3,71,0,0,39640,0,0.0,0
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?universityName ?foundingDate WHERE {
  VALUES ?luizaErundina { dbr:Luiza_Erundina }
  ?luizaErundina dbo:almaMater ?university .
  ?university rdfs:label ?universityName .
  ?university dbo:foundingDate ?foundingDate .
  FILTER (lang(?universityName) = 'en')
}
```",3,6,4,3,1,3,2,20,0,2,1,0.0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professionParent ?decedent WHERE {
  # Find Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
  
  # Find the parent class of his profession
  ?eugeneProfession rdfs:subClassOf* ?professionParent .

  # Find the movie he acted in
  OPTIONAL {
    dbr:Eugène_Cattin dbo:starring ?movie .
    FILTER (isLiteral(?movie) = false)
  }

  # Identify a person who died in Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles .

  # Ensure the movie is linked to the decedent
  OPTIONAL {
    ?decedent dbo:starring ?movie .
  }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Frederick Stanley, 16th Earl of Derby's child and their parent
  ?child dbo:parent ?frederickStanleyChildParent .
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Rodney Lees' award awardee and their parent
  ?awardee dbo:awardReceived <http://dbpedia.org/resource/Rodney_Lees_Award> .
  ?awardee dbo:parent ?rodneyLeesAwardeeParent .

  # Arthur Stanley (politician) and his father
  dbr:Arthur_Stanley_(politician) dbo:father ?arthurStanleyFather .

  # Find the common parent
  FILTER (?frederickStanleyChildParent = ?rodneyLeesAwardeeParent)
  FILTER (?frederickStanleyChildParent = ?arthurStanleyFather)

  BIND(?frederickStanleyChildParent AS ?commonParent)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?universityName ?foundingDate WHERE {
  VALUES ?luizaErundina { dbr:Luiza_Erundina }
  
  ?luizaErundina dbo:almaMater ?university .
  ?university a dbo:University ;
              rdfs:label ?universityName ;
              dbo:foundingDate ?foundingDate .

  FILTER (lang(?universityName) = 'en')
}
```",2,5,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorDeathPlace ?salMineoDeathPlace ?carolynJonesDeathPlace WHERE {
  # Actor of The Sky Ranger (1928 film)
  OPTIONAL {
    ?film dbo:starring ?actor .
    ?actor dbo:deathPlace ?actorDeathPlace .
    FILTER(STRSTARTS(STR(?film), ""http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)""))
  }
  
  # Sal Mineo
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # Carolyn Jones
  dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
}
```",4,4,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildPredecessor WHERE {
  # Duke Philipp of Württemberg's child
  ?dukePhilippChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Grandchild (child of the child)
  ?grandchild dbo:parent ?dukePhilippChild .

  # Archduchess Helena of Austria's spouse
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria .

  # Child of the spouse
  ?childOfSpouse dbo:parent ?spouse .
  
  # Predecessor of the child (assuming predecessor means older sibling)
  ?olderSibling dbo:parent ?spouse .
  FILTER (?olderSibling != ?childOfSpouse)

  # Match grandchild's predecessor with older sibling of Archduchess Helena's spouse's child
  VALUES ?grandchildPredecessor { ?olderSibling }
  
  # Ensure the individual is royalty
  ?grandchildPredecessor rdf:type dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  # Filter children who are royalty
  ?child rdf:type dbo:Monarch .

  # Find the parent of that child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Parent of Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:parent ?person .
  
  # Spouse of Charles II of Naples
  ?person dbo:spouse dbr:Charles_II_of_Naples .

  # Child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?person .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?personDecedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthCountry .
  
  # Ensure the birthplace is a country
  ?birthCountry rdf:type dbpedia-owl:Country .

  # Find individuals born in the same place and native to Grand Duchy of Finland
  ?personDecedent dbo:birthPlace ?birthCountry ;
                  dbo:nationality dbr:Grand_Duchy_of_Finland .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  ?institution dbo:location dbr:Georgia_(U.S._state) .
}
```",1,1,2,1,1,2,2,9,0,0,941,0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?personWithBirthName WHERE {
  # Part 1: Party member of the ruling party in Central, Louisiana
  OPTIONAL {
    ?centralPolitician dbo:location dbr:Central,_Louisiana .
    ?centralPolitician dbo:memberOf ?rulingParty .
    ?rulingParty dbo:member ?partyMember .
  }

  # Part 2: Person born as the birth name of the parent of Tisha Sterling
  OPTIONAL {
    dbr:Tisha_Sterling dbo:parent ?tishasParent .
    ?tishasParent dbo:birthName ?birthName .
    ?personWithBirthName dbo:birthName ?birthName .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?miguelMaura a dbo:Politician ;
               foaf:name ""Miguel Maura"" .
  
  ?miguelMaura dbo:associatedParty ?politicalParty .

  ?politicalParty dbo:leader ?partyLeader .

  ?partyLeader dbo:officeHeld ?office .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?lindaMiller a dbo:Person ;
              foaf:name ""Linda Miller""@en .
  
  ?lindaMiller dbo:child ?child .

  ?child dbo:nativePlace dbr:New_York_(state) .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?parentArtist WHERE {
  # Find the author of ""A Picture of Britain""
  dbr:A_Picture_of_Britain dbo:author ?author .

  # Find a person who is both an artist and a musical artist
  ?person a dbo:Artist ;
          a dbo:MusicalArtist .

  # Ensure this person is associated with an English settlement
  ?location dbo:settlementType ?settlementType ;
            dbo:country dbr:England .
  
  # Link the person to the location
  ?person dbo:associatedWith ?location .

  # Find the parent of the native (artist)
  ?native dbo:nativePlace ?location .
  ?parentArtist dbo:child ?native .

  # Ensure the artist is linked to the location
  FILTER (?person = ?parentArtist)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?profession ?band WHERE {
  # Find the producer of Coke Studio Philippines
  ?show dbo:producer ?producer .
  FILTER(STRSTARTS(STR(?show), ""http://dbpedia.org/resource/Coke_Studio_Philippines""))

  # Get the profession of the producer
  ?producer a ?profession .

  # Ensure the producer is involved in a band
  ?band dbo:member ?producer .

  # Find Robert Lamar Thompson and ensure he is a musical artist
  ?robert a dbo:MusicalArtist .
  FILTER(STR(?robert) = ""http://dbpedia.org/resource/Robert_Lamar_Thompson"")

  # Ensure the producer's profession matches that of a band member who is a musical artist
  OPTIONAL {
    ?bandMember a dbo:MusicalArtist .
    ?band dbo:member ?bandMember .
    FILTER(?producer = ?bandMember)
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?politicianChild .
  
  # Politician child who is a parent of both an awardee and Edward Stanley, 17th Earl of Derby
  ?politicianChild rdf:type dbo:Politician ;
                  dbo:parent ?awardAwardee ;
                  dbo:parent dbr:Edward_Stanley,_17th_Earl_of_Derby .
  
  # Awardee of the Commander of the Royal Victorian Order
  ?awardAwardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order .

  # Father of the politician child
  ?politicianChild dbo:parent ?father .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?royalTitle WHERE {
  VALUES ?parent { 
    dbr:Faisal_bin_Hussein_(born_1975) 
  }
  
  ?child dbo:childOf ?parent .
  OPTIONAL { ?child dbo:royalTitle ?royalTitle . }
  
  FILTER EXISTS { ?child dbo:royalTitle ?royalTitle }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalty WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:C._Duke_of_W%C3%BCrttemberg .

  # Child of the child of Duke Philipp of Württemberg
  ?grandchild dbo:parent ?child .
  ?child dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .

  # The royalty that fits all criteria
  FILTER (?parent = ?predecessor)
  FILTER (?royalty = ?grandchild)

  # Ensure the result is a royalty
  ?royalty rdf:type dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeInMadrid ?militaryConflict WHERE {
  ?person dbo:officeHolder ?officeInMadrid .
  ?officeInMadrid dbo:location dbr:Madrid .

  OPTIONAL {
    ?person dbo:politicalAffiliation dbr:Conservative_Republican_Party_(Spain) .
  }

  ?conflict dbo:participant ?person ;
            dbo:participant dbr:Manuel_Pinto_da_Costa .
  
  FILTER EXISTS { 
    ?officeInMadrid a dbo:MilitaryCommander .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?chancellor WHERE {
  VALUES ?westGermany { 
    dbr:West_Germany 
  }
  ?westGermany dbo:headOfGovernment ?chancellor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eleonoreFather WHERE {
  dbr:Eleonore_of_Austria dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .
  dbr:Eleonore_of_Austria dbo:father ?eleonoreFather .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?establishment ?eleonoraAlmaMater WHERE {
  VALUES ?date { ""1955-12-02""^^xsd:date }
  
  # Find the establishment with the given date
  ?establishment dbo:established ?date .
  
  # Find Eleonora Menicucci's alma mater
  dbr:Eleonora_Menicucci dbo:almaMater ?eleonoraAlmaMater .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfCommandersParent WHERE {
  # Step 1: Identify the commander in Siege of Mukha
  ?siegeEvent dbo:commander ?commander .
  FILTER(STRSTARTS(LCASE(?siegeEvent), ""siege_of_mukha""))

  # Step 2: Find the parent of this commander who is a royalty
  ?parent rdfs:childOf ?commander ;
          a dbo:Monarch .

  # Step 3: Determine the child of this royal parent, who is also a royalty
  ?childOfCommandersParent rdfs:childOf ?parent ;
                          a dbo:Monarch .

  # Step 4: Identify Na'od and find his father's father
  dbr:Na'od rdfs:childOf ?naodsFather .
  ?naodsFather rdfs:childOf ?naodsGrandfather .

  # Step 5: Ensure the grandfather is both a royalty and an office holder
  FILTER(?naodsGrandfather = ?parent) .
  ?naodsGrandfather a dbo:Monarch ;
                   dbo:officeHolder ?office .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find commanders involved in the Korean War
  ?commander dbo:militaryCommanderOf ?koreanWar .
  
  # Ensure the commander is linked to the Korean War resource
  ?koreanWar rdfs:label ""Korean War""@en .

  # Check if the commander was an office holder (e.g., political leader or military leader)
  OPTIONAL {
    ?commander dbo:officeHolderOf ?office .
  }
  
  FILTER EXISTS { ?commander dbo:officeHolderOf ?office . }
}
```",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  # Find the actor from ""Dispatches from Elsewhere""
  VALUES ?dispatchesFromElsewhere { dbr:Dispatches_from_Elsewhere }
  
  ?dispatchesFromElsewhere dbo:actor ?actor .
  ?actor foaf:name ?actorName .

  OPTIONAL {
    # Find the professional identity of The Shadow
    VALUES ?theShadow { dbr:The_Shadow_(radio_series) }
    
    ?theShadow dbo:portrayedBy ?shadowActor .
    FILTER (?shadowActor = ?actor)
  }

}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?singerURL ?singerName ?otherProfession WHERE {
  ?singer a dbo:Singer ;
          foaf:name ?singerName .
  
  OPTIONAL {
    ?singer dbo:occupation ?otherProfession .
  }
  
  FILTER(?otherProfession != dbo:Singer)
}
ORDER BY ?singerName
LIMIT 10
```",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfAwardee ?karlGustavWar WHERE {
  # Find wars associated with recipients of the Golden Sword for Bravery
  ?recipient dbo:award dbr:Golden_Sword_for_Bravery .
  ?recipient dbo:participatedInBattle ?warOfAwardee .

  # Find wars associated with Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggovut dbo:participatedInBattle ?karlGustavWar .

  # Return the wars that are common to both sets of entities
  FILTER (?warOfAwardee = ?karlGustavWar)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?rustlersRhapsody { dbr:Rustlers'_Rhapsody }
  VALUES ?theShadowCharacter { dbr:The_Shadow_(character) }

  OPTIONAL {
    ?rustlersRhapsody dbo:starring ?actor .
  }
  
  OPTIONAL {
    ?theShadowCharacter dbo:portrayedBy ?actor .
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?profession WHERE {
  # Find the DBpedia resource for ""Dispatches from Elsewhere""
  VALUES ?dispatchesFromElsewhere { 
    dbr:Dispatches_from_Elsewhere
  }
  
  # Retrieve actors starring in the show
  ?dispatchesFromElsewhere dbo:starring ?actor .
  
  # Get actor's name and profession
  ?actor rdfs:label ?actorName .
  OPTIONAL {
    ?actor dbo:profession ?profession .
  }

  FILTER (lang(?actorName) = 'en')
}
```",2,2,3,1,2,3,3,71,0,5,2,0.0,0.0,0
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBirthPlace ?juniorMurvin WHERE {
  # Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?victorsBirthPlace .
  
  # Native of Victor Saville's birthplace
  ?person dbo:nativeOf ?victorsBirthPlace .
  BIND(?person AS ?nativeOfBirthPlace)
  
  # Junior Murvin as the writer of ""Boom Shack-A-Lak""
  dbr:Junior_Murvin dbo:occupation dbr:Singer-songwriter ;
                    dbo:work dbr:Boom_Shack-a-Lak .
  BIND(dbr:Junior_Murvin AS ?juniorMurvin)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Linda_Bruckheimer dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  # William II of Sicily's father
  dbr:William_II_of_Sicily dbo:father ?father .
  
  # Ensure the father is a child of Roger II of Sicily
  ?father dbo:child dbr:Roger_II_of_Sicily .

  # Check if one of his children (or grandchildren) is a child of Alfonso VI
  OPTIONAL {
    ?intermediateChild dbo:child ?father .
    ?intermediateChild dbo:child dbr:Alfonso_VI_of_León_and_Castile .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid SPARQL query can be generated due to lack of specific information in the question.
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify GS9
  VALUES ?gs9 { dbr:GS9 }
  
  # Step 2: Find a member of GS9 who is an artist and musical artist, native to Florida
  ?member dbo:member ?gs9 .
  ?member rdf:type dbo:Artist .
  ?member rdf:type dbo:MusicalArtist .
  ?member dbo:nativePlace dbr:Florida .

  # Step 3: Find the associated musical artist of this member
  ?member dbo:associatedMusicalArtist ?associatedArtist .

  # Step 4: Identify band members of the associated musical artist who are also musical artists
  ?bandMember dbo:member ?associatedArtist .
  ?bandMember rdf:type dbo:MusicalArtist .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Algerian War military force (France)
  ?algerianWar dbo:militaryForce dbr:French_Army .
  
  # Societal event, event, and television show
  ?societalEvent a dbo:SocietalEvent ;
                dbo:subject ?commander .
  ?event a dbo:Event ;
         dbo:subject ?commander .
  ?tvShow a dbo:TelevisionShow ;
          dbo:subject ?commander .

  # Eleonore of Austria's father
  dbr:Eleonore_of_Austria_Queen_of_Poland dbo:father ?eleonoreFather .
  
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?ceciliaRenataFather .

  # Cardinal Richelieu as the commander
  dbr:Cardinal_Richelieu dbo:commanderOfMilitaryForce ?algerianWar ;
                        dbo:subject ?societalEvent, ?event, ?tvShow .
  
  # Father relationships
  ?eleonoreFather rdfs:label ""Philip III of Spain""@en .
  ?ceciliaRenataFather rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .

  FILTER (?commander = dbr:Cardinal_Richelieu)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?profession WHERE {
  VALUES ?person { dbr:Richard_E._Grant }
  
  ?person dbo:profession ?profession .
  FILTER (?profession = dbo:Actor)
  
  ?person dbo:actor ?movie .
  ?movie a ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow))
  
  BIND(?movie AS ?movieURL)
}
```",4,5,5,3,2,3,3,71,0,0,13,0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfRegionAndCountry WHERE {
  # Find William Gayner's birthplace as a region and country
  dbr:William_Gayner dbo:birthPlace ?region .
  ?region dbo:country ?country .

  # Identify Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's child
  dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?claudesChild .

  # Find the parent of Claude's child
  ?parent dbo:child ?claudesChild .
  
  # Check if this parent is a native of William Gayner's birthplace region and country
  ?parent dbo:nativePlace ?nativePlace .
  FILTER (?nativePlace = ?region && ?nativePlace dbo:country ?country)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samConcepcionProfession ?bobThompsonBand WHERE {
  VALUES ?samConcepcionResource { dbr:Sam_Concepcion }
  VALUES ?bobThompsonResource { dbr:Bob_Thompson_(musician) }

  OPTIONAL {
    ?samConcepcionResource dbo:profession ?samConcepcionProfession .
  }
  
  OPTIONAL {
    ?bobThompsonResource dbo:associatedBand ?bobThompsonBand .
  }
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mitakaName WHERE {
  ?mitaka a dbo:District ;
          rdfs:label ?mitakaName ;
          dbo:partOf dbr:Tokyo .
  FILTER (lang(?mitakaName) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  ?person dbo:sport dbr:Soccer ;
          dbo:birthDate ?birthdate .
  
  FILTER (YEAR(?birthdate) = 1979 && MONTH(?birthdate) = 11 && DAY(?birthdate) = 3)
  
  ?person dbo:teamMember ?team .
  
  ?agüero dbo:teamMember ?team ;
          rdfs:label ""Sergio Agüero""@en .

  OPTIONAL {
    ?person dbo:managerOf ?managedTeam .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse ?royalChild WHERE {
  # Step 1: Find Duchess Luise's spouse
  VALUES ?duchessLuise { dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel }
  
  ?duchessLuise dbo:spouse ?luisesSpouse .
  
  # Step 2: Find the spouse of that person
  OPTIONAL {
    ?luisesSpouse dbo:spouse ?spouseOfSpouse .
  }

  # Step 3: Identify Duke Anthony Ulrich's parent(s)
  VALUES ?dukeAnthony { dbr:Duke_Anthony_Ulrich_of_Brunswick }
  
  ?dukeAnthony dbo:parent ?parent .

  # Step 4: Find a child who is royalty
  OPTIONAL {
    ?parent dbo:child ?royalChild .
    FILTER EXISTS { ?royalChild dbo:title ?title . FILTER regex(?title, ""King|Queen|Duke|Duchess"", ""i"") }
  }

  # Check if the spouse from step 2 and the royal child are the same
  FILTER (?spouseOfSpouse = ?royalChild)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  dbr:Vince_Gilligan dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the actor in ""High Society Blues""
  ?highSocietyBlues dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?highSocietyBlues), STR(dbr:High_Society_Blues_(film))))

  # Find another notable work (movie) by this actor
  ?claimToFame dbo:starring ?actor .
  FILTER(?claimToFame != ?highSocietyBlues)

  # Get the producer of that claim to fame movie
  ?claimToFame dbo:producer ?producer .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName ?deathPlace WHERE {
  VALUES ?film { dbr:The_Sky_Ranger_(1928_film) }
  
  ?film dbo:starring ?actor .
  ?actor a dbo:Actor ;
         rdfs:label ?actorName ;
         dbo:deathPlace ?deathPlace .

  FILTER (lang(?actorName) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?bobThompsonsBand ?commonProfessional WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Find Bob Thompson's associated band
  ?bobThompson dbr:Bob_Thompson_(musician) dbo:associatedBand ?bobThompsonsBand .

  # Check for a common professional link
  OPTIONAL {
    ?commonProfessional dbo:profession ?producerProfession .
    FILTER (?producerProfession = ?producer)
    ?commonProfessional dbo:member ?bandMember .
    FILTER (?bandMember = ?bobThompsonsBand)
  }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Golden Sword for Bravery""@en .
  
  ?recipient dbo:recipientOf ?award .
  
  ?recipient dbo:participatedIn ?war .
}
```",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Elorm Kabu Amenyah""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  VALUES ?russianEmpire { dbr:Russian_Empire }
  
  OPTIONAL {
    ?entity dbo:locatedIn ?russianEmpire .
  }
  
  OPTIONAL {
    ?entity dbo:partOf ?russianEmpire .
  }

  FILTER (?entity != ?russianEmpire)
}
```",1,1,2,1,1,2,3,28,0,0,87,0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find movies featuring Herschel Bernardi
  VALUES ?herbMovie { 
    ?movieHerschelBernardi .
  }
  dbr:Herschel_Bernardi dbo:actedIn ?herbMovie .

  # Find Allan Arbus's children
  dbr:Allan_Arbus dbo:child ?allanChild .

  # Find the parent of Allan Arbus's child
  ?parent dbo:child ?allanChild .
  
  # Check if this parent acted in the same movie as Herschel Bernardi
  ?parent dbo:actedIn ?herbMovie .

  # Return the actor who is also a parent of Allan Arbus's child
  BIND(?parent AS ?actor)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfAlways ?januszSpouse WHERE {
  VALUES ?alwaysFilm { dbr:Always_(1989_film) }
  
  # Find the actor of Always (1989 film)
  ?alwaysFilm dbo:starring ?actorOfAlways .
  
  # Find the spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?januszSpouse .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeInMadrid ?partyRole WHERE {
  VALUES ?marianoRajoy { dbr:Mariano_Rajoy }
  
  # Find the office in Madrid
  ?marianoRajoy dbo:office ?office .
  ?office dbo:location dbr:Madrid .
  BIND(?office AS ?officeInMadrid)
  
  # Find his role within the Conservative Republican Party (Spain)
  OPTIONAL {
    ?marianoRajoy dbo:memberOfPoliticalParty ?party .
    ?party rdfs:label ""Partido Popular""@en .
    ?marianoRajoy dbo:positionHeld ?partyRole .
    FILTER(lang(?partyRole) = 'en')
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonActor WHERE {
  # Find T.I.'s albums and songs
  VALUES ?tiAlbum { 
    dbr:Trap_Muzik 
    dbr:T.I._(album) 
    dbr:I'm_Amazin' 
    dbr:T.I. vs. T.I.P.
    dbr:T.I._(album)
    # Add more albums if necessary
  }
  
  ?tiAlbum dbo:artist dbr:T.I. ;
           dbo:genre ?songGenre .
  
  OPTIONAL {
    ?tiAlbum dbo:associatedMusicalArtist ?actor .
  }

  # Find actors from Shelby Oaks
  VALUES ?shelbyOaks { 
    dbr:Shelby_Oaks 
  }
  
  ?shelbyOaks dbo:castMember ?shelbyActor .

  # Check for common actor
  FILTER (?actor = ?shelbyActor)
  BIND(?actor AS ?commonActor)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?glennYoungkinBirthPlace ?awardeeBirthPlace ?ceceBellBirthPlace WHERE {
  # Glenn Youngkin's birth place
  OPTIONAL { 
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
  
  # Awardee of Vince Gilligan's awards
  OPTIONAL {
    # Assuming we are looking for a specific award, e.g., Emmy Award
    dbr:Vince_Gilligan dbo:awardReceived dbr:Emmy_Award .
    ?emmyAward dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
  
  # Cece Bell's birth place (author of ""El Deafo"")
  OPTIONAL {
    dbr:C._E._Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName ?awardee WHERE {
  ?award dbo:givenBy dbr:United_States_Congress .
  ?award dbo:name ?awardName .
  ?award dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?descendant WHERE {
  # Identify Alexander II, Grand Duke of Finland
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nationality dbr:Russian_Empire .

  # Find a descendant who died in Switzerland and was originally from the Russian Empire
  ?descendant dbo:parent dbr:Alexander_II,_Grand_Duke_of_Finland .
  ?descendant dbo:deathPlace dbr:Switzerland .
  ?descendant dbo:nationality dbr:Russian_Empire .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonFather WHERE {
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:father ?catherineFather .
  dbr:Isabella_of_Austria dbo:father ?isabellaFather .
  
  FILTER (?catherineFather = ?isabellaFather)
  BIND(?catherineFather AS ?commonFather)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeForce WHERE {
  # Find the award associated with Quincy Adams Gillmore
  dbr:Quincy_A._Gillmore dbo:award ?award .
  
  # Find other awardees of that same award
  ?otherAwardee dbo:award ?award .

  # Determine the ""force"" related to these awardees
  OPTIONAL {
    ?otherAwardee dbo:memberOf ?awardeeForce .
  }
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerURL ?successorURL WHERE {
  # Find the writer of ""Always the Love Songs""
  VALUES ?alwaysTheLoveSongs { dbr:Always_the_Love_Songs }
  ?alwaysTheLoveSongs dbo:writer ?writer .

  # Identify successor in Russo-Polish War (1654–1667) who is a politician and office holder
  OPTIONAL {
    ?warCommander dbo:succeededBy ?successor .
    FILTER EXISTS { ?successor dbo:officeHolder ?_ . }
    FILTER EXISTS { ?successor dbo:politician ?_ . }
    VALUES ?warCommander { dbr:Russo-Polish_War_(1654–1667) }
  }

  # Identify Jean Baptist, Comte d'Arco's role
  OPTIONAL {
    ?jeanBaptist dbr:Jean_Baptiste,_Comte_d%27Arco dbo:commanderOf ?tvShow .
    FILTER EXISTS { ?tvShow rdf:type dbo:TelevisionShow . }
    FILTER EXISTS { ?tvShow rdf:type dbo:SocietalEvent . }
  }

  # Ensure the successor is also linked to Jean Baptist, Comte d'Arco's role
  FILTER (?successor = ?jeanBaptist)
  
  BIND(?writer AS ?writerURL)
  BIND(?successor AS ?successorURL)
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?politician { 
    dbr:Chiang_Hsiao-wen 
  }
  ?politician dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,1,1,0.0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Arthur Stanley's father
  OPTIONAL { 
    dbr:Arthur_Stanley_(politician) dbo:father ?arthurFather .
  }
  
  # Victor Stanley's parent
  OPTIONAL { 
    dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?victorParent .
  }

  # Frederick Stanley, 16th Earl of Derby's grandchild's parent (Frederick's child)
  OPTIONAL {
    ?frederickChild dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
    ?frederickChild dbo:parent ?grandchildParent .
  }

  # Unifying the common ancestor
  FILTER (?arthurFather = ?victorParent && ?victorParent = ?grandchildParent)
  
  BIND(?victorParent AS ?commonAncestor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne""@en .
  
  ?event dbo:participant ?bayne ;
         a dbo:MilitaryConflict .

  ?event dbo:militaryForce ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?actorSpouse WHERE {
  # Find members of the Republican Party (United States)
  ?partyMember dbo:memberOf dbr:Republican_Party_(United_States) .

  # Find films produced by Nat Levine
  ?film dbo:filmProducer dbr:Nat_Levine .
  
  # Find actors in those films
  ?film dbo:actor ?actor .

  # Get Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?annSothernBirthName .

  # Match actor with Ann Sothern's birth name and find their spouse
  FILTER (?actor = ?annSothernBirthName)
  OPTIONAL {
    ?actor dbo:spouse ?actorSpouse .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?alexanderII { dbr:Alexander_II,_Grand_Duke_of_Finland }
  
  ?alexanderII dbo:deathPlace dbr:Switzerland .
  ?alexanderII dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLeader WHERE {
  # Find George Savage's political party
  dbr:George_Savage dbo:member ?politicalParty .
  
  # Ensure the entity is a political party and an organization
  ?politicalParty rdf:type dbo:PoliticalParty ;
                  rdf:type dbo:Organization .

  # Get the leader of that political party
  ?politicalParty dbo:leader ?partyLeader .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Joey_B dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Ackquille Jean Pollard"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?birthName WHERE {
  ?artist a dbo:Artist .
  ?artist dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .
  FILTER NOT EXISTS { ?artist dbo:deathDate ?date } # Ensure the artist is alive
  OPTIONAL { ?artist dbo:birthName ?birthName }
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Yurii_Khmelnytsky dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherURL ?theShadowAlterEgo WHERE {
  # Find Na'od's father
  ?naod a dbo:Person ;
        dbo:parent ?naodsFather .

  # Find Na'od's grandfather who is royalty and an office holder
  ?naodsFather dbo:parent ?grandfather .
  ?grandfather a dbo:Monarch ; 
               dbo:officeHolder true .

  # Find Lamont Cranston's alter ego (The Shadow)
  dbr:Lamont_Cranston dbo:alterEgo ?theShadowAlterEgo .

  # Find Dawit I and his child
  dbr:Dawit_I dbo:child ?dawitChild .
  
  # Ensure the grandfather is also a child of Dawit I
  FILTER (?grandfather = ?dawitChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?williamTennantRank ?sinkingCommander WHERE {
  VALUES ?williamTennantResource { 
    dbr:William_Tennant_(Royal_Navy_officer) 
  }
  
  OPTIONAL {
    ?williamTennantResource dbo:rank ?williamTennantRank .
  }

  VALUES ?sinkingEventResource { 
    dbr:Sinking_of_Prince_of_Wales_and_Repulse
  }
  
  OPTIONAL {
    ?sinkingEventResource dbo:commander ?sinkingCommander .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES (?regiment ?battle) { 
    (dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbr:Battle_of_Fort_Royal)
  }
  
  OPTIONAL {
    ?regiment dbo:commander ?commander .
  }
  
  OPTIONAL {
    ?battle dbo:commander ?commander .
  }

  FILTER (?commander != '' && (BOUND(?commander) || BOUND(?commander)))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:GS9 dbo:member ?member .
  ?member a dbo:MusicalArtist .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify the 2006–07 VfL Bochum season and its successor
  dbr:VfL_Bochum_season_2006-07 dbo:sportsTeamInSeason ?successorSeason .
  
  # Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason rdf:type dbo:SoccerLeagueSeason ;
                   rdf:type dbo:SportsTeamSeason ;
                   rdf:type dbo:SportsSeason .

  # Find the manager of the team in that successor season
  ?successorSeason dbo:manager ?manager .
  
  # Verify Theodor Heuss's native country as Germany
  dbr:Theodor_Heuss dbo:nativeCountry dbr:Germany .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samConcepcionProfession ?bobThompsonBand WHERE {
  VALUES ?samConcepcionResource { dbr:Sam_Concepcion }
  OPTIONAL {
    ?samConcepcionResource dbo:occupation ?samConcepcionProfession .
  }

  VALUES ?bobThompsonResource { dbr:Bob_Thompson_(musician) }
  OPTIONAL {
    ?bobThompsonResource dbo:associatedBand ?bobThompsonBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  VALUES ?bobbyShmurdaURL { dbr:Bobby_Shmurda }
  VALUES ?ackquilleJeanPollardURL { dbr:6ix9ine }

  OPTIONAL {
    ?bobbyShmurdaURL dbo:associatedMusicalArtist ?artist .
    FILTER (?artist != ?bobbyShmurdaURL)
  }
  
  OPTIONAL {
    ?ackquilleJeanPollardURL dbo:associatedMusicalArtist ?artist .
    FILTER (?artist != ?ackquilleJeanPollardURL)
  }

  VALUES ?commonArtist { 
    ?artist
  }

  ?commonArtist a dbo:MusicalArtist ;
               dbo:bandMember ?bandMember .

  FILTER (?bobbyShmurdaURL = ?bobbyShmurdaURL && ?ackquilleJeanPollardURL = ?ackquilleJeanPollardURL)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warTVShow ?jeanBaptistRole ?loveSongsWriter WHERE {
  # Find Jean Baptist, Comte d'Arco and his role as a commander in a war that is also a TV show
  OPTIONAL {
    dbr:Jean_Baptiste,_Comte_d%27Arco dbo:commander ?warTVShow .
  }
  
  # Ensure the war is both a societal event and a television show
  FILTER EXISTS { 
    ?warTVShow dbo:wikiPageWikiLink dbr:Category:Television_series_based_on_real_events .
    ?warTVShow dbo:wikiPageWikiLink dbr:Category:Historical_fiction_television_programs .
  }
  
  # Find the writer of ""Always the Love Songs""
  OPTIONAL {
    dbr:Always_the_Love_Songs dbo:writer ?loveSongsWriter .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty WHERE {
  ?sofiaPetro dbo:birthName ""Sofía Petro"" .
  ?sofiaPetro dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?spouse WHERE {
  VALUES ?movie { dbr:1_000_Dollars_a_Minute }
  ?movie dbo:starring ?actor .
  OPTIONAL { 
    ?actor dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maryParent ?childOfClaude ?parentOfChild WHERE {
  # Parent of Mary Elphinstone, Lady Elphinstone
  OPTIONAL {
    dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?maryParent .
  }

  # Child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  OPTIONAL {
    dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?childOfClaude .
    
    # Parent of the child of Claude Bowes-Lyon
    ?childOfClaude dbo:parent ?parentOfChild .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vflBochumManager ?sportsManager WHERE {
  # Find VfL Bochum manager
  dbr:VfL_Bochum dbo:manager ?vflBochumManager .

  # Find sports manager born on 1968-08-26 and native of Germany
  ?sportsManager a dbo:SportsManager ;
                dbo:birthday ""1968-08-26""^^xsd:date ;
                dbo:nationality dbr:Germany .
  
  # Check if the same person is both managers
  FILTER (?vflBochumManager = ?sportsManager)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?georgeDucasWork { 
    dbr:George_Ducas # Replace with specific works if known
  }
  
  ?georgeDucasWork dbo:author ?writer .
  
  OPTIONAL {
    dbr:Yurii_Khmelnytsky dbo:successor ?writer .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?singerProfession ?band WHERE {
  VALUES ?bobThompson { dbr:Bob_Thompson_(musician) }
  
  ?bobThompson dbo:birthName ?birthName .
  ?bobThompson dbo:profession ?singerProfession .
  FILTER(CONTAINS(LCASE(?singerProfession), ""singer""))
  
  OPTIONAL {
    ?bobThompson dbo:band ?band .
  }

  FILTER EXISTS { 
    ?bobThompson a dbo:MusicalArtist .
  }
}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel ?grandchildRoyalty WHERE {
  # Find Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .

  # Find Béla IV of Hungary's grandchild who is a royalty
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  ?belasChild dbo:child ?grandchildRoyalty .
  
  # Check if the grandchild has a royalty title or similar property
  OPTIONAL { ?grandchildRoyalty dbo:royaltyTitle ?title . }
  
  # Ensure that the parent of Charles Martel is the same as the grandchild who is a royalty
  FILTER (?parentOfCharlesMartel = ?grandchildRoyalty)
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dawidOlejniczakURL ?residenceCountry WHERE {
  VALUES ?dawidOlejniczakURL { 
    dbr:Dawid_Olejniczak
  }
  ?dawidOlejniczakURL dbo:residence ?residence .
  ?residence rdf:type dbp:Country .
  BIND(?residence AS ?residenceCountry)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse WHERE {
  # Identify the disease/societal event
  VALUES ?diseaseEvent { 
    dbr:HIV/AIDS  # Example of a disease that is also a societal event
  }
  
  # Find the commander associated with this event
  ?commander dbo:relatedTo ?diseaseEvent .
  ?commander rdf:type dbo:NavyOfficer .

  # Identify the author of ""Back to Work""
  ?author dbo:author dbr:Back_to_Work_(book) .
  
  # Ensure the commander is the author
  FILTER (?commander = ?author)

  # Find the spouse who is a politician and office holder
  ?spouse dbo:spouse ?author .
  ?spouse rdf:type dbo:Politician .
  ?spouse dbo:officeHolder ?office .

  # Link to Hillary Clinton's work
  dbr:Back_to_Work_(book) dbo:relatedTo dbr:Hillary_Clinton .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Find Mary Frances Bowes-Lyon's parent
  dbr:Mary_Frances_Bowes-Lyon dbo:parent ?maryParent .
  
  # Find Patrick Bowes-Lyon's parent
  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?patrickParent .

  # Ensure they have the same parent
  FILTER (?maryParent = ?patrickParent)

  # Check if this common parent is native to Middlesex
  ?commonParent dbo:nativePlace dbr:Middlesex .
  
  # Link the common parent to both individuals
  OPTIONAL { ?commonParent dbo:parent ?maryParent . }
  OPTIONAL { ?commonParent dbo:parent ?patrickParent . }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeRegion WHERE {
  ?band a dbo:Band ;
        dbo:location dbr:New_York_(state) .
  
  ?member dbo:bandMember ?band ;
          rdfs:label ""Uncle Murda""@en .

  ?award dbo:recipient ?band ;
         dbo:nativePlace ?nativeRegion .

  FILTER (lang(?bandLabel) = 'en' && lang(?memberLabel) = 'en')
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceName ?commander WHERE {
  # Find Maria I of Portugal
  dbr:Maria_I_of_Portugal dbo:spouse ?person .
  
  # Look for a force that is both a television show and a military conflict
  ?force dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ?forceName .
  FILTER(CONTAINS(LCASE(?forceName), ""commander"") || CONTAINS(LCASE(?forceName), ""force""))
  
  # Check if the force is related to both a TV show and a military conflict
  OPTIONAL { ?force dbo:wikiPageWikiLink dbr:Category:Television_shows . }
  OPTIONAL { ?force dbo:wikiPageWikiLink dbr:Category:Military_conflicts . }
  
  # Find the commander of this force
  ?force dbo:commander ?commander .
}
```",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find people native to the Russian Empire
  ?personDecedent dbo:nativePlace dbr:Russian_Empire .

  # Match the person's birthplace with Sandro Bertaggia's birthplace
  ?personDecedent dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find the leader of PSOE
  dbr:Spanish_Socialist_Workers'_Party dbo:leader ?tenant .
  
  # Ensure the tenant is Spanish and resides in Spain
  ?tenant dbo:nationality dbr:Spanish_people ;
          dbo:residence dbr:Spain .

}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dougBeattieResidence ?georgeHamiltonCameronAward WHERE {
  dbr:Doug_Beattie dbo:residence ?dougBeattieResidence .
  OPTIONAL { 
    dbr:George_Hamilton_Cameron dbo:award ?georgeHamiltonCameronAward .
  }
}
```",4,4,5,3,2,3,2,20,2,0,0,1.0,1.0,1.0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  VALUES ?bobThompson { 
    dbr:Bob_Thompson_(musician) 
  }
  ?bobThompson dbo:associatedBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?colorMeDeadActor ?actorDeathPlace ?reedHowesDeathPlace WHERE {
  # Sal Mineo's death place
  OPTIONAL { 
    dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  }
  
  # Actor of ""Color Me Dead"" and their death place
  OPTIONAL {
    dbr:Color_Me_Dead dbo:starring ?colorMeDeadActor .
    OPTIONAL {
      ?colorMeDeadActor dbo:deathPlace ?actorDeathPlace .
    }
  }

  # Reed Howes' death place
  OPTIONAL {
    dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
  }
}
```",4,4,5,2,3,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?promiseMeDadAuthor ?promisesToKeepAuthor WHERE {
  VALUES ?books { 
    dbr:Promise_Me,_Dad 
    dbr:Promises_to_Keep_(book)
  }
  
  ?books dbo:author ?author .
  
  OPTIONAL {
    ?books rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""promise me, dad""))
    BIND(?author AS ?promiseMeDadAuthor)
  }

  OPTIONAL {
    ?books rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""promises to keep (biden book)""))
    BIND(?author AS ?promisesToKeepAuthor)
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Joe_Biden dbo:literaryWork ?work .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?harrietteArleneLake ?rogerPryorsSpouse WHERE {
  # Find the ruling party member in Central, Louisiana
  OPTIONAL {
    ?centralLocation a dbo:Place ;
                     dbo:country dbr:United_States ;
                     rdfs:label ""Central, Louisiana""@en .
    ?partyMember dbo:memberOfParty ?rulingParty ;
                 dbo:location ?centralLocation .
    # Assuming the ruling party is identified separately
  }
  
  # Find Harriette Arlene Lake
  OPTIONAL {
    ?harrietteArleneLake a dbo:Person ;
                         foaf:name ""Harriette Arlene Lake""@en ;
                         dbo:birthday ?birthDate .
  }

  # Find Roger Pryor's spouse
  OPTIONAL {
    dbr:Roger_Pryor (dbo:spouse|dbo:partner) ?rogerPryorsSpouse .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  VALUES ?alanParsonsProject { 
    dbr:The_Alan_Parsons_Project 
  }
  
  ?bandMember dbo:bandMember ?alanParsonsProject .
  
  OPTIONAL {
    dbr:Billy_Lyall dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?juanCarlosPlayer ?actorAthlete WHERE {
  # Find players associated with Juan Carlos Molina
  OPTIONAL {
    dbr:Juan_Carlos_Molina dbo:player ?juanCarlosPlayer .
  }
  
  # Find actor from ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  OPTIONAL {
    ?actorAthlete dbo:actorInFilmOrTVSeries dbr:All_or_Nothing:_Manchester_City .
    ?actorAthlete dbo:sport dbr:Soccer .
    ?actorAthlete dbo:athlete ?true .
    FILTER (?true != """")
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?conservativeLeaderOffice WHERE {
  # Find the office of the commander in Central African Republic Civil War
  OPTIONAL {
    ?person dbo:officeHolder ?commanderOffice .
    ?person dbo:politicalPartyMember ?party .
    ?war dbr:Central_African_Republic_Civil_War .
    ?person dbo:occupation ?occupation .
    FILTER CONTAINS(LCASE(?occupation), ""commander"") .
  }
  
  # Find the office of the leader of Conservative Republican Party (Spain)
  OPTIONAL {
    ?leader dbo:leader ?conservativeLeaderOffice .
    ?leader dbo:politicalPartyMember dbr:Conservative_Republican_Party_(Spain) .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfMaximilian ?fatherOfPhilip WHERE {
  VALUES ?maximilian { dbr:Maximilian_I,_Holy_Roman_Emperor }
  VALUES ?philip { dbr:Philip_I_of_Castile }

  ?childOfMaximilian dbo:parent ?maximilian .
  ?fatherOfPhilip dbo:child ?philip .

  FILTER (?childOfMaximilian = ?fatherOfPhilip)
  
  OPTIONAL {
    ?childOfMaximilian dbo:royalTitle ?title .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athleteName WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
          a dbo:Athlete .
  
  ?person rdfs:label ?athleteName .

  OPTIONAL {
    ?team dbo:member ?person .
    ?pabloAimarTeam dbo:member dbr:Pablo_Aimar .
    
    FILTER EXISTS { ?team = ?pabloAimarTeam }
  }

  FILTER (lang(?athleteName) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Konstantinos_Ventiris dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?movie WHERE {
  # Identify ""Ab Kya Hoga"" and its actors
  dbr:Ab_Kya_Hoga dbo:castMember ?actor .
  
  # Filter actors who are also politicians
  ?actor dbo:profession dbr:Politician .

  # Get the name of the actor
  ?actor rdfs:label ?actorName .

  # Find movies featuring both Richard E. Grant and the identified actor
  ?movie dbo:castMember ?actor .
  ?movie dbo:castMember dbr:Richard_E._Grant .

  FILTER(LANG(?actorName) = 'en')
}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nothingToGeinURL WHERE {
  VALUES ?nothingToGeinURL { 
    dbr:Nothing_to_Gein 
  }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo ?profession WHERE {
  VALUES ?game { dbr:The_Shadow_(video_game) }
  
  ?game dbo:basedOn ?series .
  ?series dbo:wikiPageDisambiguates ?character .

  OPTIONAL {
    ?character dbo:alias ?alterEgo .
  }

  OPTIONAL {
    ?character dbo:profession ?profession .
  }

  FILTER EXISTS { ?character rdf:type dbo:ComicsCharacter }
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find members of GS9 who are both an artist and a musical artist
  ?gs9Member dbo:member dbr:GS9 .
  FILTER EXISTS { ?gs9Member rdf:type dbo:Artist . }
  FILTER EXISTS { ?gs9Member rdf:type dbo:MusicalArtist . }

  # Find associated musical artists of these members
  OPTIONAL {
    ?gs9Member dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Identify the award's native region (Puerto Rico)
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativePlace ?nativePlace .
  FILTER (
    ?nativePlace = dbr:Puerto_Rico &&
    ?nativePlace rdf:type dbo:Region &&
    ?nativePlace rdf:type dbo:AmericanState &&
    ?nativePlace rdf:type dbo:Settlement
  )

  # Find band members of the associated musical artist
  OPTIONAL {
    ?associatedArtist dbo:bandMember ?bandMember .
  }
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Chiang_Ching-kuo dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(?occupation), ""politician"")
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the work associated with Cora Sue Collins
  ?work dbo:writer dbr:Cora_Sue_Collins .
  
  # Find the producer of A Star Is Born (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?starProducer .

  # Find the professional identity of The Shadow
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  
  # Check if the producer is common among these entities
  OPTIONAL { ?work dbo:producer ?producer . }
  OPTIONAL { ?shadowAlterEgo dbo:producer ?producer . }

  FILTER (?producer = ?starProducer)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucasURL ?commanderInWar ?tvShowSocietalEvent WHERE {
  VALUES ?georgeDucasURL { 
    dbr:George_Ducas 
  }
  
  OPTIONAL {
    ?georgeDucasURL dbo:commander ?commanderInWar .
  }

  OPTIONAL {
    ?commanderInWar dbo:associatedMusicalArtist|dbo:genre ?tvShowSocietalEvent .
  }

  FILTER EXISTS { 
    ?battleOfVienna dbo:participatingMilitaryForce ?commanderInWar .
    VALUES ?battleOfVienna { dbr:Battle_of_Vienna }
  }

  OPTIONAL {
    ?yuriiKhmelnytsky dbo:successor ?georgeDucasURL .
    VALUES ?yuriiKhmelnytsky { dbr:Yurii_Khmelnytsky }
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Step 2: Determine the war associated with this owner
  ?war dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:country ?owner .

  # Step 3: Identify the commander of that war
  ?commander dbo:commanded ?war .

  # Step 4: Check if this commander is linked to both a disease and a societal event
  OPTIONAL { ?commander dbo:associatedDisease ?disease . }
  OPTIONAL { ?commander dbo:associatedEvent ?event . }

  FILTER EXISTS { ?commander dbo:associatedDisease ?disease }
  FILTER EXISTS { ?commander dbo:associatedEvent ?event }
}
```",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?greatGrandchild WHERE {
  VALUES ?alexanderOfWuerttemberg { 
    dbr:Alexander_of_Württemberg_(1804-1881) 
  }
  
  OPTIONAL {
    ?alexanderOfWuerttemberg dbo:child ?child .
    
    OPTIONAL {
      ?child dbo:child ?grandChild .
      
      OPTIONAL {
        ?grandChild dbo:child ?greatGrandchild .
      }
    }
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territoryAdministeredFromCopenhagen ?mayorOfSchleswig WHERE {
  # Territories administered from Copenhagen
  ?territory dbo:administrativeCenter dbr:Copenhagen .
  
  # Administration of the mayor related to Duchy of Schleswig
  OPTIONAL {
    ?schleswig dbo:mayor ?mayorOfSchleswig .
    FILTER (CONTAINS(LCASE(STR(?schleswig)), ""duchy of schleswig""))
  }
  
  BIND(?territory AS ?territoryAdministeredFromCopenhagen)
}
```",3,3,4,2,2,2,3,28,0,3,1,0.0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peterIVRealName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child dbr:Peter_IV_of_Aragon .
  dbr:Peter_IV_of_Aragon rdfs:label ?peterIVRealName .
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Little_Hat_Jones dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && regex(str(?birthPlace), ""Country""))
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kimWilsonBandURL ?nickCurranAssociatedArtist WHERE {
  VALUES ?kimWilson { dbr:Kim_Wilson }
  OPTIONAL {
    ?kimWilson dbo:associatedBand ?kimWilsonBand .
    BIND(STR(?kimWilsonBand) AS ?kimWilsonBandURL)
  }

  VALUES ?nickCurran { dbr:Nick_Curran }
  OPTIONAL {
    ?nickCurran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
}
```",6,7,7,3,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?finalChild WHERE {
  # Step 1: Identify Minye Kyawswa
  dbr:Minye_Kyawswa dbo:child ?minyeKyawswaChild .

  # Step 2: Find the parent of this child
  ?minyeKyawswaChild dbo:parent ?grandParent .

  # Step 3: Identify the child of this grandparent
  ?grandParent dbo:child ?finalChild .
}
```",3,3,4,3,1,3,3,71,5,0,0,1.0,1.0,1.0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalParent WHERE {
  # Step 1: Identify Maria of Bytom
  VALUES ?mariaOfBytom { dbr:Maria_of_Bytom }

  # Step 2: Find her spouse
  ?mariaOfBytom dbo:spouse ?spouse .

  # Step 3: Determine the father of the spouse
  OPTIONAL {
    ?spouse dbo:father ?father .
  }

  # Step 4: Identify the parent of the father
  OPTIONAL {
    ?father dbo:parent ?royalParent .
  }

  # Step 5: Check for royalty
  FILTER EXISTS { 
    ?royalParent dbo:title ?title .
    FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"")
  }
}
```",3,4,4,3,1,3,3,71,0,1183,2,0.0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         a dbo:TelevisionShow .
  
  ?person dbo:deathDate ""2020-06-18""^^xsd:date ;
          a dbo:Artist, dbo:MusicalArtist ;
          dbo:parent dbr:Kate_Dimbleby .

  ?movie dbo:author ?author .
  
  FILTER (?person = ?author)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify movies featuring Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Step 2: Find actors in those movies
  ?movie dbo:starring ?actor .

  # Step 3: Determine the parent of Photographer profession
  ?photographerCategory rdfs:subClassOf* ?parentCategory .
  FILTER (str(?photographerCategory) = ""Photographer"")

  # Step 4: Find actors related to this parent category
  OPTIONAL {
    ?actor dbo:profession ?relatedProfession .
    ?relatedProfession rdfs:subClassOf* ?parentCategory .
  }
}
```",4,5,5,2,2,3,3,71,1,70,0,0.014084507042253521,1.0,0.02777777777777778
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
  ?child dbo:royalTitle ?title .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childLabel WHERE {
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  VALUES ?emiliaYanchevaValeva { 
    dbr:Emilia_Yancheva_Valeva 
  }
  ?emiliaYanchevaValeva dbo:profession ?profession .
  FILTER (
    str(?profession) CONTAINS ""Singer"" ||
    str(?profession) CONTAINS ""Band Member""
  )
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Sal_Mineo dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  OPTIONAL { 
    ?birthPlace dbp:country dbr:United_States .
  }
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?film rdfs:label ""Akaler Shandhaney""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
}
```",1,1,2,1,1,3,2,20,0,3,9,0.0,0.0,0
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Hillary_Clinton dbo:spouse ?spouse .
}

UNION

SELECT ?commander WHERE {
  ?event dbo:commander ?commander .
  FILTER regex(str(?event), ""Third Taiwan Strait Crisis"", ""i"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Steven Kapur""@en .
  
  ?work dbo:performer ?artist ;
        a dbo:MusicalWork .

  ?work dbo:composer ?writer .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Spouse's child
  OPTIONAL { ?spouse dbo:child ?child . }
  
  # Grandchild (child of spouse's child)
  OPTIONAL { ?child dbo:child ?grandchild . }
  
  # Ensure grandchild is royalty
  FILTER EXISTS { ?grandchild rdf:type dbo:Monarch . }
  
  # Grandchild is father of William II of Sicily
  ?grandchild dbo:child dbr:William_II_of_Sicily .
  
  # Parent of Roger III, Duke of Apulia
  OPTIONAL { 
    dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .
    ?parent dbo:child ?grandchild .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  VALUES ?movie { dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg }
  ?actor dbo:actedIn ?movie .

  # Parent of a Photographer
  ?photographer rdf:type dbo:Photographer .
  ?parent dbo:spouseOrPartner ?photographer ; 
          dbo:child ?entity .

  # Child of Allan Arbus
  dbr:Allan_Arbus dbo:child ?entity .

  FILTER (?actor = ?entity)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  VALUES ?joeBiden { dbr:Joe_Biden }
  
  ?book rdf:type dbo:Work ;
        rdf:type dbo:WrittenWork ;
        rdf:type dbo:Book ;
        dbo:author ?joeBiden ;
        dbo:country dbr:United_States .

}
```",2,6,3,2,1,3,2,20,0,1,1,0.0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award dbr:Commander_of_the_Order_of_the_British_Empire .
}
```",1,1,2,1,1,3,2,20,838,63,15,0.93007769145394,0.9824150058616647,0.9555302166476626
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?jeanBaptist { 
    dbr:Jean_Baptiste,_Comte_d'Arco 
  }
  
  ?jeanBaptist dbo:associatedWith ?war .
  
  ?war a dbo:War ;
      dbo:genre ?genre .
  
  FILTER (?genre IN (dbr:Television_show, dbr:Societal_event))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  VALUES ?alvaroQuirós { dbr:Álvaro_Quirós }
  OPTIONAL {
    ?alvaroQuirós dbo:residence ?residence .
    ?residence rdf:type dbo:Country .
    BIND(?residence AS ?country)
  }
  UNION
  OPTIONAL {
    ?alvaroQuirós dbo:nationality ?nationality .
    ?nationality rdf:type dbo:Country .
    BIND(?nationality AS ?country)
  }
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?filthyFriends { dbr:Filthy_Friends }
  VALUES ?markEitzel { dbr:Mark_Eitzel }

  OPTIONAL {
    ?filthyFriends dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  OPTIONAL {
    ?band dbo:bandMember ?markEitzel .
    ?band dbo:associatedMusicalArtist ?associatedArtist .
  }

  FILTER (?associatedArtist != dbr:Filthy_Friends && ?associatedArtist != dbr:Mark_Eitzel)
}
```",2,2,3,1,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?glennYoungkinBirthPlace WHERE {
  # Find Cece Bell's birthplace
  OPTIONAL {
    ?ceceBell dbo:nationality dbr:United_States .
    ?ceceBell dbo:author dbr:El_Deafo .
    ?ceceBell dbo:birthPlace ?ceceBellBirthPlace .
  }
  
  # Find Glenn Youngkin's birthplace
  OPTIONAL {
    ?glennYoungkin a dbo:Person ;
                  rdfs:label ""Glenn Youngkin""@en .
    ?glennYoungkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Prince Faisal bin Hussein's resource
  dbr:Prince_Faisal_bin_Hussein dbo:child ?child .
  
  # Ensure the child has a royalty title
  ?child dbo:royaltyTitle ?title .

  # Identify the parent of this royal child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samConcepcionProfession ?robertThompsonProfession ?robertThompsonBand WHERE {
  VALUES ?samConcepcionResource { dbr:Sam_Concepcion }
  OPTIONAL {
    ?samConcepcionResource dbo:profession ?samConcepcionProfession .
  }

  VALUES ?robertThompsonResource { 
    dbr:Robert_Lamar_Thompson
    dbr:Robert_Thompson_(musician)
  }
  
  OPTIONAL {
    ?robertThompsonResource dbo:profession ?robertThompsonProfession .
  }
  
  OPTIONAL {
    ?robertThompsonResource dbo:associatedBand ?robertThompsonBand .
  }

}
```",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathPlace dbr:Taipei .
  ?child dbo:parent ?person ;
         rdf:type dbo:Politician .
  ?child dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,7,5,0.0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Eleonora_Menicucci dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:Hartlepool_United_F.C. dbo:manager ?manager .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hidenagaWar ?hideyoshiWar WHERE {
  VALUES ?hidenaga { dbr:Toyotomi_Hidenaga }
  VALUES ?hideyoshi { dbr:Toyotomi_Hideyoshi }

  OPTIONAL {
    ?hidenaga dbo:associatedWith ?hidenagaWar .
  }
  
  OPTIONAL {
    ?hideyoshi dbo:associatedWith ?hideyoshiWar .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse for the 2020-21 season
  ?vitesseTeam dbo:manager ?manager .
  ?vitesseTeam rdfs:label ""SBV Vitesse""@en .

  # Native of West Germany
  ?manager dbo:nationality dbr:Germany_West .

  # Manager of VfL Bochum
  OPTIONAL {
    ?bochumTeam dbo:manager ?manager .
    ?bochumTeam rdfs:label ""VfL Bochum""@en .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?jeanBaptistCommander ?successorCommander WHERE {
  # Find the commander associated with Jean Baptist, Comte d'Arco
  ?jeanBaptistCommander dbo:commanderOf ?event .
  ?event rdfs:label ""Jean Baptist, Comte d'Arco""@en .

  OPTIONAL {
    # Find the successor of a commander related to Michał Kazimierz Pac
    ?michaPacCommander dbo:commanderOf ?conflict .
    ?conflict rdfs:label ""Michał Kazimierz Pac""@en .
    
    ?michaPacCommander dbo:succeededBy ?successorCommander .
  }

  OPTIONAL {
    # Find the predecessor of a commander related to George Ducas
    ?georgeDucasCommander dbo:commanderOf ?conflict2 .
    ?conflict2 rdfs:label ""George Ducas""@en .

    ?georgeDucasCommander dbo:succeededBy ?jeanBaptistCommander .
  }

  FILTER (?successorCommander = ?jeanBaptistCommander)
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeURL WHERE {
  ?awardee dbo:award dbr:Australian_Laureate_Fellowship .
  ?awardee dbo:nationality dbr:Australia .
  ?awardee dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""scientist""))
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?janetGaynorProducer ?johnnyDoughboyActor ?johnnyDoughboyProducer WHERE {
  # Janet Gaynor's claim to fame (e.g., ""7th Heaven"")
  VALUES ?janetGaynorClaimToFame { 
    dbr:7th_Heaven_(1927_film) 
  }
  
  # Producer of Janet Gaynor's claim to fame
  ?janetGaynorClaimToFame dbo:producer ?janetGaynorProducer .
  
  # Actor who played Johnny Doughboy in ""Johnny Doughboy""
  dbr:Johnny_Doughboy dbo:actor ?johnnyDoughboyActor .
  
  # Producer of the work associated with Johnny Doughboy's actor
  OPTIONAL {
    ?work dbo:actor ?johnnyDoughboyActor ;
          dbo:producer ?johnnyDoughboyProducer .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  dbr:William_II_of_Sicily dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?managerName WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  VALUES ?vflBochumSeason { 
    dbr:2006%E2%80%9307_VfL_Bochum_season 
  }
  
  ?successor dbo:succeeds ?vflBochumSeason .
  
  # Find the club associated with the successor season
  ?successor dbo:team ?club .

  # Thomas Letsch's association with the club as a manager
  dbr:Thomas_Letsch dbo:manager ?club .

  # Get native country of Thomas Letsch
  dbr:Thomas_Letsch dbo:nativeCountry ?nativeCountry .
  
  # Ensure the native country is West Germany
  FILTER (?nativeCountry = dbr:Germany_West)

  # Get manager name
  OPTIONAL {
    ?manager dbo:name ?managerName .
    ?club dbo:manager ?manager .
  }
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?movieTitle ?profession WHERE {
  # Find the author of Smartbomb (book)
  ?smartbombBook dbo:author ?author .
  
  # Get the name of the author
  ?author rdfs:label ?authorName .

  # Find movies where this author acted
  ?movie dbo:starring ?author ;
         rdfs:label ?movieTitle .

  # Get the profession of the author
  ?author dbo:occupation ?profession .
  
  FILTER (lang(?authorName) = 'en')
  FILTER (lang(?movieTitle) = 'en')
}
```",4,4,5,3,2,3,3,71,0,16461,7802,0.0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?grandchild WHERE {
  # Find Carl, Duke of Württemberg's predecessor
  dbr:C._of_Württemberg dbo:predecessor ?predecessor .

  # Find Albrecht, Duke of Württemberg and his child (Carl)
  dbr:Albrecht_Duke_of_Württemberg dbo:child dbr:C._of_Württemberg .
  
  # Find the parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_Archduchess_of_Austria dbo:parent ?parent .

  # Find a grandchild of the parent who is royalty
  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
  FILTER (?grandchild != dbr:Margarete_Sophie_Archduchess_of_Austria)
  ?grandchild rdf:type dbo:Monarch .

  # Ensure the grandchild is related to Albrecht's lineage
  OPTIONAL {
    ?grandchild dbo:parent* dbr:Albrecht_Duke_of_Württemberg .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  VALUES ?catherine { dbr:Catherine_of_Austria_(1507–1578) }
  VALUES ?isabella { dbr:Isabella_of_Austria_(1501–1526) }
  VALUES ?maximilian { dbr:Maximilian_I,_Holy_Roman_Emperor }

  ?catherine dbo:father ?father .
  ?isabella dbo:father ?father .
  ?father dbo:childOf ?maximilian .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Alexander of Württemberg (1804-1881)
  VALUES ?alexander { dbr:Aleksandr_of_W%C3%BCrttemberg_(1804%E2%80%931881) }
  
  # Find a child of Alexander
  ?child dbo:childOf ?alexander .
  
  # Find a grandchild (child of the child)
  ?grandchild dbo:childOf ?child .
  
  # Find a great-grandchild (child of the grandchild)
  ?greatGrandchild dbo:childOf ?grandchild .

  # Identify Carl, Duke of Württemberg
  VALUES ?carl { dbr:C_Wilhelm_Alexander_of_W%C3%BCrttemberg }

  # Find the predecessor of Carl (parent of Carl)
  ?predecessor dbo:childOf ?greatGrandchild .
  
  FILTER (?carl = ?greatGrandchild)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalChild WHERE {
  # Ferdinand Albert II, Duke of Brunswick-Lüneburg
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?child1 .
  
  # Prince Augustus William of Prussia and his spouse
  dbr:Prince_Augustus_William_of_Prussia dbo:spouse ?spouse .
  
  # The spouse is also a child of Ferdinand Albert II
  ?spouse dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .

  # Find the royalty among the children
  OPTIONAL {
    ?child1 dbo:royalTitle ?title .
  }
  
  # Ensure the spouse is one of Ferdinand Albert II's children
  FILTER (?spouse = ?child1)

  # Find the child of this royal person
  ?child1 dbo:child ?finalChild .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?margareteSophie { dbr:Archduchess_Margarete_Sophie_of_Austria }
  
  ?margareteSophie dbo:child ?child .
  
  OPTIONAL {
    ?predecessor dbo:successor dbr:Carl,_Duke_of_Württemberg .
    FILTER (?child = ?predecessor)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?associatedArtist WHERE {
  VALUES ?person { 
    dbr:Snoop_Dogg 
    dbr:Akon
  }
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,4,5,3,2,3,3,71,0,2,1,0.0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?chancellor a dbo:Chancellor ;
              dbo:officeHolderOf dbr:Federal_Republic_of_Germany .
  ?chancellor dbo:country ?country .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Juan_Carlos_Molina dbo:playedFor ?team .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?actor WHERE {
  # Find movies featuring Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Find the parent of Amy Arbus
  ?parent dbo:child dbr:Amy_Arbus .

  # Find Mariclare Costello's spouse, their child, and the parent of that child
  ?spouse dbo:spouse dbr:Mariclare_Costello .
  ?child dbo:parent ?spouse ;
         dbo:parent ?grandParent .

  # Match these entities to find a common movie (work)
  FILTER (?parent = ?grandParent)

  # Retrieve the actors of this movie
  ?movie dbo:starring ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  VALUES (?father ?spouse) { 
    dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel dbr:Prince_Augustus_William_of_Prussia
  }
  
  ?child dbo:parent ?father .
  ?spouse dbo:spouse ?child .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .
  ?war dbo:country dbr:Russian_Empire .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Napoleon's_Egyptian_Campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,48,0,0.0,0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the professional alter ego of The Shadow
  VALUES ?shadowActor { 
    dbr:James_McCaffrey_(actor) # Assuming James McCaffrey is known for playing The Shadow
  }
  
  # Check if this actor was in ATL (2006)
  ?atlFilm dbo:starring ?actor .
  FILTER (?atlFilm = dbr:ATL_(film))
  
  # Ensure the actor has acted in another movie
  ?otherMovie dbo:starring ?actor .
  FILTER(?otherMovie != dbr:ATL_(film))
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlaceLabel ?ceceBellBirthPlaceLabel WHERE {
  # Vince Gilligan's birthplace
  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Cece Bell's birthplace
  OPTIONAL {
    dbr:C._E._Bell dbo:birthPlace ?ceceBellBirthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  BIND (IF(BOUND(?vinceGilliganBirthPlace), STR(?vinceGilliganBirthPlaceLabel), ""Unknown"") AS ?vinceGilliganBirthPlaceLabel)
  BIND (IF(BOUND(?ceceBellBirthPlace), STR(?ceceBellBirthPlaceLabel), ""Unknown"") AS ?ceceBellBirthPlaceLabel)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  dbr:Kiyosu dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?album ?movie ?actor ?professional WHERE {
  # Find a song by T.I.
  VALUES ?artist { dbr:T.I. }
  
  ?song dbo:artist ?artist .
  ?song rdf:type dbo:Songs .

  # Get the album of that song
  ?song dbo:album ?album .

  # Find movies related to the album name or theme
  OPTIONAL {
    ?movie dbo:title ?albumTitle .
    FILTER(CONTAINS(LCASE(?albumTitle), LCASE(str(?album)))) 
  }

  # Get actors from those movies
  OPTIONAL {
    ?actor dbo:actedIn ?movie .
    ?actor rdf:type dbo:Actor .
  }
  
  # Find professionals involved in the movie (e.g., directors, producers)
  OPTIONAL {
    ?professional dbo:directed ?movie ;
                  a dbo:FilmDirector .
    UNION
    ?professional dbo:produced ?movie ;
                  a dbo:Producer .
  }

  FILTER(?song != """" && ?album != """")
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:director ?director .
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfRegionCountry ?parentName WHERE {
  # Find William Gayner's birthplace
  VALUES (?williamGayner) { dbr:William_Gayner }
  ?williamGayner dbo:birthPlace ?gaynerBirthPlace .
  
  # Ensure the birthplace is both a region and a country
  ?gaynerBirthPlace rdf:type dbo:Region ;
                   rdf:type dbo:Country .

  # Find Hon. Mary Frances Bowes-Lyon's parents
  VALUES (?maryFrances) { dbr:Mary_Frances_Bowes-Lyon }
  ?parent dbo:child ?maryFrances .
  
  # Match the parent's birthplace with William Gayner's birthplace
  ?parent dbo:birthPlace ?gaynerBirthPlace .

  # Get the name of the parent
  ?parent rdfs:label ?parentName .
  
  BIND(?gaynerBirthPlace AS ?nativeOfRegionCountry)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Napoleon Bonaparte as Knight Commander of the Order of the Bath and commander in Egypt-Syria campaign
  dbr:Napoleon_Bonaparte 
    dbo:awardReceived dbr:Knight_Commander_of_the_Order_of_the_Bath ;
    dbo:militaryCommanderOf dbr:Egyptian_Campaign ; # or dbr:Syrian_Campaign

  # Find the military force associated with Napoleon
  ?militaryForce dbo:commander dbr:Napoleon_Bonaparte .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Johnny Doughboy""@en .
  
  ?film dbo:starring ?actor ;
        dbo:productionCompany ?company .

  OPTIONAL { 
    ?film dbo:producer ?producer .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?parent { dbr:Faisal_bin_Hussein }
  ?child dbo:childOf ?parent .
  
  OPTIONAL {
    ?child dbo:royalTitle ?title .
  }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Vince_Gilligan dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Identify the Russo-Polish War (1654–1667)
  dbr:Russo-Polish_War_(1654%E2%80%931667) dbo:commander ?commander .
  
  # Find the successor of the commander
  ?commander dbo:successor ?successor .

  # Ensure the successor is a politician and an office holder
  ?successor dbo:officeHolder ?_ .
  ?successor dbo:politician ?_ .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find people with profession Actor and another unspecified profession
  ?person dbo:profession dbr:Actor .
  ?person dbo:profession ?otherProfession .

  # Find cast members of Dispatches from Elsewhere
  OPTIONAL { 
    dbr:Dispatches_from_Elsewhere dbo:castMember ?person .
  }
}
```",3,3,4,1,3,3,3,71,0,15,1,0.0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personURL ?war WHERE {
  ?person foaf:givenName ""Koichirō"" .
  OPTIONAL { 
    ?person dbo:participatedIn ?war .
  }
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Nick_Curran dbo:birthDate ?birthDate .
  OPTIONAL { 
    dbr:Nick_Curran a dbo:MusicalArtist .
  }
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardAwardeeBirthPlace ?authorBirthPlace WHERE {
  # Find the birthplace of Vince Gilligan's award-winning work awardee
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardedBy ?award .
    ?award dbo:recipient ?awardAwardee .
    ?awardAwardee dbo:birthPlace ?awardAwardeeBirthPlace .
  }
  
  # Find the birthplace of Cece Bell, author of El Deafo
  OPTIONAL {
    dbr:El_Deafo dbo:author ?author .
    ?author rdfs:label ""Cece Bell""@en .
    ?author dbo:birthPlace ?authorBirthPlace .
  }
}
```",6,7,7,3,2,3,3,71,1,0,0,1.0,1.0,1.0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?party WHERE {
  VALUES ?rogerPryor { 
    dbr:Roger_Pryor_(actor) 
  }
  
  OPTIONAL {
    ?rogerPryor dbo:spouse ?spouse .
  }

  OPTIONAL {
    ?rogerPryor dbo:partyMember ?party .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Bobby_Shmurda dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Book ;
        dbo:nationality dbr:United_States .
  
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:memberOf dbr:North_Carolina_Air_National_Guard ;
             dbo:works ?work .

}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http{http://dbpedia.org/resource/>>

SELECT ?theodorHeussBirthPlace ?vflBochumManager WHERE {
  VALUES ?theodorHeussResource { dbr:Theodor_Heuss }
  VALUES ?vflBochumResource { dbr:VfL_Bochum }

  ?theodorHeussResource dbo:birthPlace ?theodorHeussBirthPlace .
  FILTER (isBlank(?theodorHeussBirthPlace) || ?theodorHeussBirthPlace a dbo:Country)

  ?vflBochumResource dbo:manager ?vflBochumManager .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Identify the ruling party in that settlement
  ?deathPlace dbo:country ?country .
  ?country dbo:rulingParty ?rulingParty .

  # Find a member of this ruling party who is both a political party and an organization
  ?partyMember dbo:member ?rulingParty ;
               rdf:type dbo:PoliticalParty, dbo:Organization .
}
```",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherURL WHERE {
  # Find the child of Baeda Maryam I
  ?child1 dbo:parent dbr:Baeda_Maryam_I .
  
  # Find the child of Dawit I
  ?child2 dbo:parent dbr:Dawit_I .
  
  # Ensure they are the same person
  FILTER (?child1 = ?child2)
  
  # Find the father of this common child
  ?father dbo:child ?commonChild .
  FILTER (?commonChild = ?child1)

  # Find the grandfather (father's father)
  ?grandfather dbo:parent ?father .

  # Ensure the grandfather is royalty and an office holder
  OPTIONAL { ?grandfather dbo:royalTitle ?title . }
  OPTIONAL { ?grandfather dbo:officeHolder ?office . }

  FILTER EXISTS { ?grandfather dbo:royalTitle ?title } .
  FILTER EXISTS { ?grandfather dbo:officeHolder ?office } .

  BIND(?grandfather AS ?grandfatherURL)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  VALUES (?player1 ?player2) { 
    (dbr:Juan_Carlos_Molina_(footballer) dbr:Pablo_Aimar)
  }
  
  OPTIONAL {
    ?player1 dbo:team ?team .
  }
  
  OPTIONAL {
    ?player2 dbo:team ?team .
  }

  FILTER (?player1 != ?player2)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Step 1: Identify Charles I of Hungary's father
  ?charlesI dbo:father ?charlesIFather .
  
  # Step 2: Find the parent (grandfather) of Charles I's father and ensure he is royalty
  ?charlesIFather dbo:father|dbo:mother ?charlesIGrandfather .
  ?charlesIGrandfather dbo:royalTitle ?title .

  # Step 3: Identify Stephen V of Hungary's predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?stephenVPredecessor .

  # Step 4: Find the child (son) of Stephen V's predecessor and ensure he is royalty
  ?stephenVPredecessor dbo:child|dbo:daughter ?stephenVSon .
  ?stephenVSon dbo:royalTitle ?title2 .

  # Step 5: Determine the child of the son identified in step 4 (grandchild)
  ?stephenVSon dbo:child|dbo:daughter ?stephenVGrandchild .
  ?stephenVGrandchild dbo:royalTitle ?title3 .

  # Step 6: Find commonality between Charles I's grandfather and Stephen V's great-grandchild
  FILTER (?charlesIGrandfather = ?commonAncestor)
  FILTER (?stephenVGrandchild = ?commonAncestor)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?termStart ?termEnd WHERE {
  VALUES ?brianKemp { dbr:Brian_Kemp }
  ?brianKemp dbo:office ?office .
  FILTER (?office = dbr:Governor_of_Georgia)
  OPTIONAL { ?office dbo:termStart ?termStart . }
  OPTIONAL { ?office dbo:termEnd ?termEnd . }
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?maximilian { dbr:Maximilian_I,_Holy_Roman_Emperor }
  
  ?child dbo:parent ?maximilian .
  ?child a dbo:Monarch .

  OPTIONAL {
    ?isabella dbo:parent ?child .
    FILTER (?isabella = dbr:Isabella_of_Austria)
  }

  OPTIONAL {
    ?philip dbo:parent ?child .
    FILTER (?philip = dbr:Philip_I_of_Castile)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?singerRole ?bandRole WHERE {
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:birthName ""Robert Lamar Thompson"" .
  
  OPTIONAL { 
    ?person dbo:singerOf ?singerRole .
  }
  
  OPTIONAL {
    ?person dbo:musicalBand ?bandRole .
  }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?calderSocietalEvent WHERE {
  # Find the military force involved in the Battle of Fort Royal
  VALUES ?battleResource { 
    dbr:Battle_of_Fort_Royal_(1795) 
  }
  ?battleResource dbo:militaryForce ?battleMilitaryForce .

  # Find a societal event associated with Robert Calder
  VALUES ?calderResource {
    dbr:Robert_Calder
  }
  OPTIONAL {
    ?calderResource dbo:associatedEvent ?societalEvent .
    ?societalEvent rdf:type dbo:SocietalEvent .
    BIND(?societalEvent AS ?calderSocietalEvent)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  VALUES ?carl { dbr:Carl_I,_Duke_of_Württemberg }
  
  ?carl dbo:predecessor ?predecessor .
  
  OPTIONAL {
    ?philipp dbo:child ?parentOfCarl .
    ?parentOfCarl dbo:child ?carl .
    
    VALUES ?philipp { dbr:Duke_Philipp_of_Württemberg }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  # Match the film ""ATL"" and its actors
  dbr:ATL_(film) dbo:starring ?actor .
  
  # Find a professional field associated with these actors
  OPTIONAL { 
    ?actor dbo:profession ?profession .
  }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander WHERE {
  # Find the author of ""Back to Work""
  OPTIONAL {
    dbr:Back_to_Work_(book) dbo:author ?author .
  }
  
  # Identify a war that is both a disease and a societal event
  OPTIONAL {
    ?war dbo:wikiPageRedirects ?diseaseEvent .
    ?diseaseEvent rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""war on drugs"") || CONTAINS(LCASE(?label), ""drug war""))
  }
  
  # Find a commander associated with this war in the United States Navy
  OPTIONAL {
    ?commander dbo:rank ?navyRank ;
              dbo:memberOf dbr:United_States_Navy ;
              dbo:commanded ?war .
    FILTER EXISTS { ?navyRank rdfs:label ?rankLabel . FILTER (CONTAINS(LCASE(?rankLabel), ""admiral"") || CONTAINS(LCASE(?rankLabel), ""commander"")) }
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalSinger WHERE {
  # Walter B. Gibson's creation with an alter ego
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # Bob Thompson as a musician associated with the character or its creator
  OPTIONAL {
    dbr:Bob_Thompson_Musician dbo:associatedMusicalArtist ?professionalSinger .
  }
  
  # Professional in Singer linked to The Shadow
  ?professionalSinger dbo:singer true .
  ?professionalSinger dbo:associatedWith dbr:The_Shadow .

  FILTER EXISTS { ?professionalSinger dbo:profession dbr:Singer }
}
```",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?lassoTheMoon { 
    dbr:Lasso_the_Moon 
  }
  
  ?lassoTheMoon a dbo:Film .
  ?lassoTheMoon a dbo:Album .

  ?lassoTheMoon dbo:actor ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Archduke Charles Joseph of Austria
  ?charlesJoseph dbo:parent ?parent .
  
  # Find the parent of Archduke Charles Joseph
  ?parent dbo:child ?child .

  # Determine the father of this child
  ?child dbo:father ?commander .

  # Filter to ensure the commander was active during the Thirty Years' War (1618-1648)
  ?commander dbo:dateOfBirth ?dob .
  ?commander dbo:dateOfDeath ?dod .
  
  FILTER (?dob <= ""1648-12-31""^^xsd:date && (?dod >= ""1618-01-01""^^xsd:date || ?dod = """"))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writtenWork WHERE {
  ?politician a dbo:OfficeHolder ;
              dbo:residence dbr:Chappaqua,_New_York .
  
  ?politician dbo:writtenWork ?writtenWork .
  
  ?writtenWork a dbo:Book .
}
```",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shelbyOaksActor ?whatYouKnowAlbumActor ?goldenMasterAlterEgoProfessional WHERE {
  # Actor of Shelby Oaks
  OPTIONAL {
    dbr:Shelby_Oaks dbo:actor ?shelbyOaksActor .
  }

  # Album of What You Know (T.I. song) and its actor
  OPTIONAL {
    dbr:What_You_Know_(T.I._song) dbo:albumOfSong ?whatYouKnowAlbum .
    ?whatYouKnowAlbum dbo:actor ?whatYouKnowAlbumActor .
  }

  # Alter ego in The Golden Master series and associated professional
  OPTIONAL {
    dbr:The_Golden_Master_series dbo:alterEgo ?goldenMasterAlterEgo .
    ?goldenMasterAlterEgo dbo:professional ?goldenMasterAlterEgoProfessional .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderURL WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commander ?commander .
  ?commander rdfs:label ""Admiral Sir Tom Phillips""@en .
}
```",2,4,3,2,1,3,2,20,0,0,6,0,0.0,0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?institution WHERE {
  # Find the award received by Rainer Weiss
  ?rainerWeiss dbo:award ?award .
  
  # Identify the show that hosts this award
  ?award dbo:hostedBy ?show .

  # Ensure the host is an educational institution
  ?show dbo:type dbr:Educational_institution .

  # Bind Rainer Weiss to his DBpedia resource
  VALUES ?rainerWeiss { dbr:Rainer_Weiss }
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?myatHponePyoPredecessor ?minyeKyawswaChildOfParentChild WHERE {
  # Step 1: Find Myat Hpone Pyo's predecessor
  dbr:Myat_Hpone_Pyo dbo:predecessor ?myatHponePyoPredecessor .

  # Step 2: Find Minye Kyawswa's child
  dbr:Minye_Kyawswa dbo:child ?minyeKyawswaChild .

  # Step 3: Determine the parent of that child
  ?minyeKyawswaChild dbo:parent ?minyeKyawswaChildParent .

  # Step 4: Identify the child of this parent
  ?minyeKyawswaChildParent dbo:child ?minyeKyawswaChildOfParentChild .

  # Step 5: Check if Myat Hpone Pyo's predecessor is the same as the child from step 4
  FILTER (?myatHponePyoPredecessor = ?minyeKyawswaChildOfParentChild)
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:1_000_Dollars_a_Minute dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  VALUES ?afeezOyetoro { dbr:Afeez_Oyetoro }
  
  ?show a dbo:Film ;
        a dbo:TelevisionShow .
  
  ?show dbo:starring ?afeezOyetoro .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rodArgentProfession ?shaggyAssociatedArtist WHERE {
  # Find Rod Argent's profession
  dbr:Rod_Argent dbo:occupation ?rodArgentProfession .
  
  # Find Shaggy's associated musical artist
  dbr:Shaggy dbo:associatedMusicalArtist ?shaggyAssociatedArtist .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Dorothea_of_Lorraine dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Eric_Claptom dbo:bandMember ?band .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?pacelyAssociatedArtist ?ghanaianArtistAssociatedArtist WHERE {
  # Find the associated musical artist for Pacely
  OPTIONAL {
    dbr:Pacely dbo:associatedMusicalArtist ?pacelyAssociatedArtist .
  }

  # Identify a notable artist from Central Region, Ghana
  OPTIONAL {
    ?ghanaianArtist dbo:nativePlace dbr:Central_Region_(Ghana) ;
                   rdf:type dbo:Person ;
                   dbo:birthName ?birthName .

    # Find the associated musical artist for this person
    ?ghanaianArtist dbo:associatedMusicalArtist ?ghanaianArtistAssociatedArtist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfAlways ?spouseOfAwardee WHERE {
  # Get actors from the film ""Always"" (1989)
  VALUES ?alwaysFilm { dbr:Always_(film) }
  ?alwaysFilm dbo:starring ?actorOfAlways .

  # Get awards received by Janusz Kamiński
  VALUES ?januszKaminski { dbr:Janusz_Kamiński }
  ?award dbo:recipient ?januszKaminski .
  
  OPTIONAL {
    # Find awardees of the same award (if different from Kamiński)
    ?award dbo:recipient ?awardee .
    FILTER (?awardee != ?januszKaminski)

    # Get spouse of the awardee
    ?awardee dbo:spouse ?spouseOfAwardee .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Janusz Kamiński's spouse
  OPTIONAL { 
    dbr:Janusz_Kamiński dbo:spouse ?januszSpouse .
  }
  
  # Identify actors in the film ""Paradise (2013)""
  ?film dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?film), STR(dbr:Paradise_(2013_film))))
  
  # Get spouse of each actor
  OPTIONAL {
    ?actor dbo:spouse ?actorSpouse .
  }
  
  # Check if the spouses are the same
  VALUES ?commonSpouse { 
    ?januszSpouse 
    ?actorSpouse 
  }
  FILTER(?commonSpouse != dbr:Janusz_Kamiński && ?commonSpouse != ?actor)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?charlestonEntity ?medalOfHonorWar ?gillmoreMedalForce WHERE {
  # Entity in Charleston, South Carolina
  VALUES ?charlestonEntity { 
    dbr:Charleston,_South_Carolina 
  }
  
  OPTIONAL {
    ?person dbo:award dbr:Medal_of_Honor .
    ?person dbo:war ?medalOfHonorWar .
  }

  OPTIONAL {
    ?gillmoreRecipient dbo:award dbr:Gillmore_Medal .
    ?gillmoreRecipient dbo:militaryForce ?gillmoreMedalForce .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find awards associated with Edmund Hakewill-Smith
  ?award dbo:recipient dbr:Edmund_Hakewill-Smith .
  
  # Find wars Tom Phillips participated in
  ?war dbo:participatedIn dbr:Tom_Phillips_(Royal_Navy_officer) .

  # Identify the force (military unit) associated with both the award and the war
  ?award dbo:associatedWith ?force .
  ?war dbo:associatedWith ?force .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Chennupati_Jagadish dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person rdf:type dbo:Athlete .
  ?person dbo:birthDate ""1955-02-22""^^xsd:date .
}
```",1,2,2,1,1,3,3,71,10,0,0,1.0,1.0,1.0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  VALUES ?movie { 
    # Replace 'Movie_Title' with the actual DBpedia resource for the movie, e.g., dbr:The_Shawshank_Redemption
    dbr:Movie_Title 
  }
  ?movie dbo:producer ?producer .
}
```",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dawitIURL ?child WHERE {
  VALUES ?dawitIURL { 
    dbr:Dawit_I_(king_of_Ethiopia) 
  }
  ?dawitIURL dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  VALUES ?hongKongC { 
    dbr:Hong_Kong_C
  }
  
  ?hongKongC dbo:manager ?manager .
  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .
}
```",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?book a dbo:Book ;
        rdfs:label ""Smartbomb""@en .
  
  ?book dbo:author ?author .

  OPTIONAL {
    ?author dbo:filmography ?movie .
  }
}
```",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  dbr:Peter_IV_of_Aragon foaf:name ?realName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  ?work dbo:starring dbr:Vera_Lynn .
  ?work a ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionShow)) .
  
  OPTIONAL { 
    ?work dbo:workExample ?relatedWork .
    ?relatedWork a ?relatedType .
    FILTER (?relatedType IN (dbo:Film, dbo:TelevisionShow))
  }
  
  ?work dbo:creator ?author .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Archduchess Helena of Austria's spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .

  # Step 2: Find the child of the spouse who is royalty
  ?child dbo:parent ?spouse .
  FILTER EXISTS { ?child a dbo:RoyalFamilyMember } .

  # Step 3: Determine predecessor of this royal child
  ?predecessor dbo:successor ?child .

  # Step 4: Identify Archduchess Margarete Sophie's child
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?margareteChild .

  # Step 5: Find the grandchild of Duke Philipp of Württemberg
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?philippChild .
  ?grandchild dbo:parent ?philippChild .

  # Step 6: Connect predecessor with the grandchild
  FILTER (?predecessor = ?grandchild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stuartToshArtist ?billyLyallArtist ?davidPatonArtist ?bandMember WHERE {
  OPTIONAL {
    dbr:Stuart_Tosh dbo:associatedMusicalArtist ?stuartToshArtist .
  }
  
  OPTIONAL {
    dbr:Billy_Lyall dbo:associatedMusicalArtist ?billyLyallArtist .
  }

  OPTIONAL {
    dbr:David_Paton dbo:associatedMusicalArtist ?davidPatonArtist .
    ?davidPatonArtist dbo:bandMember ?bandMember .
  }
}
```",4,4,5,2,3,2,3,28,2,6,0,0.25,1.0,0.4
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName ?war WHERE {
  # Identify Tom Phillips' DBpedia resource
  VALUES ?tomPhillips { dbr:Tom_Phillips_(Royal_Navy_officer) }
  
  # Find the award ""Commander of the Order of the British Empire""
  ?tomPhillips dbo:award ?award .
  ?award rdfs:label ?awardName .
  FILTER (CONTAINS(LCASE(?awardName), ""commander of the order of the british empire""))

  # Find wars associated with Tom Phillips
  OPTIONAL {
    ?tomPhillips dbo:militaryConflict ?war .
    ?war rdfs:label ?warLabel .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  VALUES ?label { ""Lahore"" }
  ?city rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  
  OPTIONAL {
    ?city dbo:wikiPageWikiLink ?alias .
    VALUES ?aliasLabel { 
      ""The Heart of Pakistan""
      ""Paris of the East""
      ""City of Gardens""
      ""City of Literature""
    }
    ?alias rdfs:label ?aliasLabel .
    FILTER (lang(?aliasLabel) = 'en')
  }
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sadeAduURL ?sholaAmaAssociatedArtist WHERE {
  VALUES ?sadeAduURL { 
    dbr:Sade_(band) # Assuming Sade Adu is linked to the band Sade
  }
  
  ?sadeAdu dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  ?sholaAma dbo:birthName ""Elorm Kabu Amenyah""@en .
  OPTIONAL {
    ?sholaAma dbo:associatedMusicalArtist ?artist .
    ?artist dbo:profession dbr:Rod_Argent .
    BIND(?artist AS ?sholaAmaAssociatedArtist)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfMartin ?royalChild ?peterIV WHERE {
  # Find Martin of Aragon's parent
  dbr:Martin_of_Aragon dbo:parent ?parentOfMartin .
  
  # Ensure the parent is royalty
  ?parentOfMartin rdf:type dbo:Monarch .

  # Find children of this royal parent who are also royalty
  ?parentOfMartin dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Establish connection with Peter IV
  ?peterIV dbo:spouseOrCivilPartner ?royalChild .
  FILTER (?peterIV = dbr:Peter_IV_of_Aragon)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?child dbo:almaMater dbr:Eton_College .
  ?child dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(str(?occupation)), ""politician"")
  
  ?parent dbo:parent ?child .
  ?parent a dbo:Person .

  BIND(?parent AS ?father)
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Philip I of Castile's children who are royalty
  VALUES ?philipChild { 
    ?child1
  }
  dbr:Philip_I_of_Castile dbo:child ?philipChild .
  ?philipChild a dbo:Royal .

  # Commander in Siege of Padua who is royalty
  VALUES ?commanderChild { 
    ?child2
  }
  ?commander a dbo:CommanderInSiegeOfPadua ;
             dbo:child ?commanderChild .
  ?commanderChild a dbo:Royal .

  # Find the common child
  FILTER (?philipChild = ?commanderChild)

  # Get the father of this child
  ?commonChild dbo:father ?father .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  VALUES ?party { 
    dbr:Spanish_Socialist_Workers'_Party 
  }
  ?party dbo:country dbr:Spain .
  OPTIONAL {
    ?party dbo:leader ?leader .
  }
}
```",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Archduke Charles Joseph of Austria's parent
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?charlesParent .
  
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:parent ?ceciliaFather .

  # Find a commander in the Thirty Years' War who is also the parent of Charles Joseph
  ?commander a dbo:Commander ;
             dbo:parent ?charlesParent .
  
  # Ensure this commander is also related to Cecilia Renata's father
  FILTER (?commander = ?ceciliaFather)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?creation WHERE {
  dbr:Walter_B._Gibson dbo:creator ?creation .
  ?creation rdf:type dbo:FictionalCharacter .
  ?creation rdf:type dbo:ComicsCharacter .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Lauryn_Hill dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,1,2,0.0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  VALUES ?vflBochum { dbr:VfL_Bochum }
  
  ?player dbo:memberOfTeam ?vflBochum .
  FILTER(YEAR(?vflBochumSeasonStart) = 2007 && YEAR(?vflBochumSeasonEnd) = 2008)
  
  OPTIONAL {
    ?player rdf:type dbo:SoccerClub .
  }
  OPTIONAL {
    ?player rdf:type dbo:SportsTeam .
  }
  OPTIONAL {
    ?player rdf:type dbo:Organization .
  }

  FILTER((?player rdf:type dbo:SoccerClub) && (?player rdf:type dbo:SportsTeam) && (?player rdf:type dbo:Organization))
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  OPTIONAL {
    # Find the associated musical artist for David Paton
    dbr:David_Paton dbo:associatedMusicalArtist ?artist1 .
    # Find band members of this associated musical artist
    ?artist1 dbo:bandMember ?bandMember .
  }
  
  OPTIONAL {
    # Find the associated musical artist for Billy Lyall
    dbr:Billy_Lyall dbo:associatedMusicalArtist ?artist2 .
    # Find band members of this associated musical artist
    ?artist2 dbo:bandMember ?bandMember .
  }
}
```",3,3,4,2,2,2,3,28,0,3,3,0.0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?film dbo:director dbr:Manuel_Huerga ;
        a dbo:Film .
  
  ?athlete dbo:starring ?film ;
           a dbo:Athlete, dbo:SoccerPlayer .

  ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
          dbo:associatedWith ?athlete .

  FILTER (?athlete = ?player)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Reneta_Kamberova dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation ?associatedBand WHERE {
  VALUES ?bobThompson { 
    dbr:Bob_Thompson_(musician) 
  }
  
  ?bobThompson dbo:occupation ?occupation .
  OPTIONAL {
    ?bobThompson dbo:associatedBand ?associatedBand .
  }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorOfYuriiKhmelnytsky ?warCommandedByJeanBaptist WHERE {
  # Part 1: Successor of Yurii Khmelnytsky
  OPTIONAL {
    dbr:Yuri_Khmelnytsky dbo:successor ?successorOfYuriiKhmelnytsky .
  }

  # Part 2: Commander in the war that is a television show and societal event of Jean Baptist, Comte d'Arco
  OPTIONAL {
    dbr:Jean_Baptiste,_Comte_d%27Arco dbo:militaryCommand ?warCommandedByJeanBaptist .
    ?warCommandedByJeanBaptist dbo:associatedTVShow ?tvShow .
    ?warCommandedByJeanBaptist dbo:societalEvent ?societalEvent .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  # Maria Anna of Bavaria and her children
  dbr:Maria_Anna_of_Bavaria dbo:child ?mariaChild .
  
  # The father of the child (Maria's husband)
  ?mariaChild dbo:father ?father .

  # Find a child of this father who is royalty and commander in war
  ?father dbo:child ?candidateChild .
  ?candidateChild rdf:type dbo:Monarch .
  
  # Check if the candidate child was a commander in an event related to Algerian War
  ?candidateChild dbo:commander ?commanderRole .
  ?commanderRole dbo:associatedEvent ?event .
  
  # Ensure the event is both a societal event and a television show
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:TelevisionShow .

  # Filter events related to Algerian War
  FILTER(CONTAINS(LCASE(STR(?event)), ""algerian war""))
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Stephen V of Hungary's predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Find the child of the predecessor
  ?predecessor dbo:child ?child .

  # Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is a royalty
  ?grandchild rdf:type dbo:Monarch .

  # Find Charles II of Naples' spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Match the grandchild with the spouse
  FILTER (?grandchild = ?spouse)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerBirthPlace WHERE {
  # Identify the film ""Storm in a Teacup""
  VALUES ?film { 
    dbr:Storm_in_a_Teacup_(film) 
  }
  
  # Find the producer(s) of the film
  ?film dbo:producer ?producer .
  
  # Get the birth place of the producer
  ?producer dbo:birthPlace ?producerBirthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonChild WHERE {
  # Find the parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Sicily dbo:parent ?rogerParent .

  # Find children of this parent
  ?rogerParent dbo:child ?childOfRogetParent .

  # Find Elvira of Castile and her children
  dbr:Elvira_of_Castile_Queen_of_Sicily dbo:child ?elviraChild .

  # Find a common child between the two sets
  FILTER (?childOfRogetParent = ?elviraChild)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?ncAirNationalGuard dbo:commander ?commander .
  FILTER (str(?ncAirNationalGuard) = ""North_Carolina_Air_National_Guard"")
  
  ?commander a dbo:OfficeHolder ;
             a dbo:Politician .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  VALUES ?team { 
    dbr:Hong_Kong_C_Team 
  }
  
  ?team dbo:manager ?manager .
  
  ?manager rdf:type dbo:SoccerManager .
  ?manager rdf:type dbo:SportsManager .
}
```",2,4,3,2,1,3,2,20,0,1,4,0.0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residenceURL ?conflictEvent WHERE {
  # Find the residence of Alberto Ruiz-Gallardón
  VALUES ?albertoRuizGallardon { dbr:Alberto_Ruiz-Gallardón }
  
  ?albertoRuizGallardon dbo:residence ?residence .
  BIND(?residence AS ?residenceURL)
  
  # Find the military conflict or societal event involving Manuel Pinto da Costa
  VALUES ?manuelPintoDaCosta { dbr:Manuel_Pinto_da_Costa }
  
  ?manuelPintoDaCosta dbo:officeHolder ?office .
  ?office dbo:militaryConflict ?conflictEvent .
  
  # Ensure the office is related to a military force or societal event
  OPTIONAL {
    ?office dbo:politicalAffiliation ?affiliation .
    FILTER EXISTS { ?affiliation rdf:type dbo:MilitaryForce }
  }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  
  ?war a dbo:MilitaryConflict ;
       dbo:participatedIn ?regiment .

  ?commander a dbo:MilitaryPerson ;
             rdfs:label ""William Bayne""@en ;
             dbo:commanderOf ?regiment .

  ?militaryForce dbo:participatedIn ?war .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?country WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:residence dbr:Santiago_de_Compostela .
  ?person dbo:officeHolder [
    dbo:election dbr:2009_Galician_regional_election ;
    dbo:position dbr:President_of_the_Galician_Parliament
  ] .
  ?person dbo:country ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?royalTitle WHERE {
  dbr:Princess_Muna_al-Hussein dbo:child ?child .
  OPTIONAL { ?child dbo:royalTitle ?royalTitle . }
  FILTER EXISTS { ?child dbo:royalTitle ?royalTitle }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the commander in the Great Turkish War
  ?war dbo:name ""Great Turkish War""@en .
  ?commander dbo:commanderOf ?war .

  # Find Yurii Khmelnytsky's successor
  dbr:Yuri_Khmelnytsky dbo:successor ?person .

  # Ensure they are the same person
  FILTER (?commander = ?person)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicalPartyURL WHERE {
  dbr:Miguel_Maura dbo:partyAffiliation ?politicalPartyURL .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityURL ?entityLabel WHERE {
  ?entity dbo:country dbr:Poland .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,108,0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland .
  ?person dbo:birthPlace dbr:Russian_Empire .
  ?person dbo:deathPlace dbr:Switzerland .
}
```",3,3,4,1,3,2,3,28,1,0,0,1.0,1.0,1.0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceEntity .
}
```",2,2,3,2,1,2,3,28,0,3,87,0.0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?actor ?associatedArtist WHERE {
  # Find movies/shows featuring Afeez Oyetoro
  VALUES ?afeezOyetoro { dbr:Afeez_Oyetoro }
  
  ?movie dbo:starring ?afeezOyetoro .
  ?movie dbo:starring ?actor .

  # Find associated musical artist of Nicki Minaj (Cynthia Ikponmwenosa Morgan)
  VALUES ?nickiMinaj { dbr:Nicki_Minaj }
  
  ?nickiMinaj dbo:associatedMusicalArtist ?associatedArtist .

  # Check for common actor
  FILTER (?actor = ?associatedArtist)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?member WHERE {
  dbr:Der_Blau dbo:member ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eleonoresFather ?mariaAnnesChildsFather WHERE {
  # Eleonore of Austria's father
  dbr:Eleonora_of_Austria dbo:father ?eleonoresFather .

  # Maria Anna of Bavaria's children who are royalty
  dbr:Maria_Anna_of_Bavaria_(1574) dbo:child ?mariaAnnesChild .
  FILTER EXISTS { ?mariaAnnesChild rdf:type dbo:Monarch }

  # The father of Maria Anna of Bavaria's child (who is royalty)
  ?mariaAnnesChild dbo:father ?mariaAnnesChildsFather .

  # Find the intersection
  FILTER (?eleonoresFather = ?mariaAnnesChildsFather)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Promises_to_Keep_(book) dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowAlterEgo ?abKyaHogaActor ?dispatchesFromElsewhereActor WHERE {
  # Find The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  
  # Find the actor of ""Ab Kya Hoga"" and check if they are a politician
  OPTIONAL {
    dbr:Ab_Kya_Hoga dbo:actor ?abKyaHogaActor .
    ?abKyaHogaActor dbo:profession ?politicianRole .
    FILTER(CONTAINS(LCASE(STR(?politicianRole)), ""politician""))
  }
  
  # Find the actor of ""Dispatches from Elsewhere""
  OPTIONAL {
    dbr:Dispatches_from_Elsewhere dbo:actor ?dispatchesFromElsewhereActor .
  }

  # Check if there is a common professional link
  FILTER (?abKyaHogaActor = ?dispatchesFromElsewhereActor)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?chancellorNativeCountry WHERE {
  # Thomas Letsch managed VfL Bochum during the 2018-2019 season
  dbr:Thomas_Letsch dbo:managerOfTeamSeason dbr:VfL_Bochum_Soccer_Club_Season_2018–19 .
  
  # Find the Chancellor of West Germany during that period (Helmut Kohl)
  dbr:Helmut_Kohl dbo:officeHolder dbr:Chancellor_of_West_Germany .

  # Get Helmut Kohl's native country
  dbr:Helmut_Kohl dbo:nationality ?chancellorNativeCountry .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?actor rdfs:label ""Actor""@en .
  ?actor rdf:type dbo:Agent .
}
```",1,1,2,1,1,2,3,28,0,0,21580,0,0.0,0
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBandMember WHERE {
  # Find David Paton's associated musical artist
  OPTIONAL { 
    dbr:David_Paton dbo:associatedMusicalArtist ?davidPatonAssociated .
  }
  
  # Find the writer(s) of ""Wizards of Waverly Place (soundtrack)"" and their associated musical artists
  OPTIONAL {
    dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:writer ?wizardsWriter .
    ?wizardsWriter dbo:associatedMusicalArtist ?wizardsAssociated .
  }
  
  # Find a common band member who is both an associated musical artist for David Paton and one of the writers' associated musical artists
  FILTER (?davidPatonAssociated = ?commonBandMember)
  FILTER (?wizardsAssociated = ?commonBandMember)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusBirthPlace ?residentBirthPlace WHERE {
  # Find an alumnus of Plovdiv University ""Paisii Hilendarski""
  ?alumnus dbo:alumniOf dbr:Plovdiv_University_Paisii_Hilendarski .
  
  # Get the birthplace of the alumnus
  ?alumnus dbo:birthPlace ?alumnusBirthPlace .

  # Find a resident of Sofia
  ?resident dbo:residence dbr:Sofia .
  
  # Get the birthplace of the resident
  ?resident dbo:birthPlace ?residentBirthPlace .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?occupation WHERE {
  VALUES ?stevenKapur { 
    dbr:Steven_Kapur 
  }
  OPTIONAL {
    ?stevenKapur dbo:birthName ?birthName .
  }
  OPTIONAL {
    ?stevenKapur dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""artist""))
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?williamBayneMilitaryForce ?battleOfCapeFinisterreForce ?thirtiethRegimentCommander WHERE {
  # Military force associated with William Bayne
  OPTIONAL {
    dbr:William_Bayne_(Royal_Navy_officer) dbo:commander ?williamBayneMilitaryConflict .
    ?williamBayneMilitaryConflict dbo:militaryUnit ?williamBayneMilitaryForce .
  }

  # Military force involved in the Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedIn ?battleOfCapeFinisterreConflict .
    ?battleOfCapeFinisterreConflict dbo:militaryUnit ?battleOfCapeFinisterreForce .
  }

  # Commander of the 30th (Cambridgeshire) Regiment of Foot
  OPTIONAL {
    dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:commander ?thirtiethRegimentCommander .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseURL ?royalTitle WHERE {
  VALUES ?sawMinPhyu { dbr:Saw_Min_Phu }
  ?sawMinPhyu dbo:spouse ?spouse .
  ?spouse a dbo:Person ;
          rdfs:label ?spouseLabel .
  OPTIONAL {
    ?spouse dbo:royalTitle ?royalTitle .
  }
  BIND(STR(?spouse) AS ?spouseURL)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .

  # Ensure the parent is both a politician and an office holder
  ?parent rdf:type dbo:Politician ;
          rdf:type dbo:OfficeHolder .

  # Find the child of this parent
  ?parent dbo:child ?child .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find Theodor Heuss's resource
  dbr:Theodor_Heuss a dbo:Person .

  # Identify his administration and the country associated with it
  OPTIONAL { 
    ?office dbo:country ?adminCountry .
    ?heussOffice dbo:positionHeldBy ?theoHeuss .
    ?theoHeuss dbr:Theodor_Heuss .
    FILTER(?adminCountry != ?nativeCountry) # Ensure we don't select the same country
  }

  # Determine his native country
  ?theoHeuss dbo:nationality ?nativeCountry .
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
  FILTER (?nickCurranAssociatedArtist = ?fabulousThunderbirdsURL)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing""@en .
  
  ?huJieqing dbo:spouse ?spouse .

  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""writer""))

  ?work dbo:author ?spouse ;
        dbo:locationCreated ?location .

  OPTIONAL {
    ?location dbo:countryName ?country .
  }
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rodArgentsProfession ?associatedMusicalArtist WHERE {
  dbr:Rod_Argent dbo:profession ?rodArgentsProfession .
  
  OPTIONAL {
    dbr:The_Pacemakers dbo:associatedMusicalArtist ?associatedMusicalArtist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:birthPlace dbr:Grand_Duchy_of_Finland .
}
```",2,2,3,1,2,2,3,28,2,0,0,1.0,1.0,1.0
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1979 && MONTH(?date) = 11 && DAY(?date) = 3)
  
  ?person dbo:sport dbr:Soccer .
  
  OPTIONAL { 
    ?person dbo:managerTeam ?team .
  }
  
  OPTIONAL {
    ?playerForMolina dbo:playerForTeam ?team .
    ?playerForMolina rdfs:label ""Juan Carlos Molina""@en .
  }
  
  OPTIONAL {
    ?playerForAgüero dbo:playerForTeam ?team .
    ?playerForAgüero rdfs:label ""Sergio Agüero""@en .
  }

  FILTER EXISTS { 
    ?person dbo:managerTeam ?team . 
    UNION
    ?playerForMolina dbo:playerForTeam ?team .
    UNION
    ?playerForAgüero dbo:playerForTeam ?team .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?saraParent ?omarParent WHERE {
  OPTIONAL { 
    dbr:Sara_bint_Faisal dbo:parent ?saraParent .
  }
  OPTIONAL { 
    dbr:Omar_bin_Faisal dbo:parent ?omarParent .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather WHERE {
  # Find the father of Charles I of Hungary
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  # Identify the parent (either mother or father) of this father
  OPTIONAL { ?father dbo:mother ?parentOfFather . }
  OPTIONAL { ?father dbo:father ?parentOfFather . }

  # Ensure that the parent is royalty
  ?parentOfFather a dbo:Monarch .

  # Check if this royal person is also a spouse of Charles II of Naples
  ?parentOfFather dbo:spouse dbr:Charles_II_of_Naples .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLeader WHERE {
  VALUES ?party { 
    dbr:People's_Party_(Spain) 
  }
  ?party dbo:leader ?partyLeader .
  
  OPTIONAL {
    ?partyLeader rdf:type dbo:Politician .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?party { 
    dbr:Republican_Party_(United_States) 
  }
  ?person dbo:memberOf ?party .
}
```",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName WHERE {
  # Find the father of Philip I, Prince of Taranto
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?father .
  
  # Find the spouse of this father
  ?father dbo:spouse ?spouse .

  # Ensure the spouse has a child who is royalty and also a child of Béla IV
  ?spouse dbo:child ?royalChild .
  dbr:Béla_IV_of_Hungary dbo:child ?royalChild .
  
  # Filter to ensure the child is royalty
  ?royalChild rdf:type dbo:Monarch .

  # Return the spouse's name
  ?spouse rdfs:label ?spouseName .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?philipI dbo:father ?father .
  ?father dbo:spouse ?spouse .
  
  VALUES ?philipI { 
    dbr:Philip_I,_Prince_of_Taranto
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?fabulousThunderbirdsResource WHERE {
  VALUES ?kimWilson { dbr:Kim_Wilson }
  
  ?band dbo:member ?kimWilson .
  
  VALUES ?fabulousThunderbirdsResource { 
    dbr:The_Fabulous_Thunderbirds
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfAmyArbus ?actorInJudgment WHERE {
  VALUES ?amyArbus { dbr:Amy_Arbus }
  
  # Find the parent of Amy Arbus
  ?amyArbus dbo:parent ?parentOfAmyArbus .
  
  # Find actors in the film Judgment: The Trial of Julius and Ethel Rosenberg
  VALUES ?judgmentFilm { dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg }
  ?judgmentFilm dbo:starring ?actorInJudgment .
  
  # Check if there is any overlap between the parent and actors
  FILTER (?parentOfAmyArbus = ?actorInJudgment)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?personName WHERE {
  # Find Marty Pollio's birthdate
  VALUES ?martyPollioURL { dbr:Marty_Pollio }
  ?martyPollio dbo:birthDate ?birthdate .

  # Find other people born on the same date as Marty Pollio
  ?person dbo:birthDate ?birthdate .
  
  # Ensure that these persons are athletes
  OPTIONAL {
    ?person dbo:sport ?sport .
  }

  FILTER EXISTS { ?person dbo:sport ?sport }
  
  # Exclude Marty Pollio from results
  FILTER (?person != ?martyPollioURL)

  # Return the URL and name of the person
  SERVICE <http://dbpedia.org/sparql> {
    ?person rdfs:label ?personName .
  }

  BIND (STR(?person) AS ?personURL)
}
```",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Alexander of Württemberg's third-generation descendant
  OPTIONAL { 
    ?alexanderChild dbo:child ?grandchild1 .
    ?grandchild1 dbo:child ?greatGrandchild1 .
    ?greatGrandchild1 dbo:child ?thirdGenerationDescendant .
    dbr:Alexander_of_Württemberg dbo:child ?alexanderChild .
  }
  
  # Archduke Charles Louis of Austria's grandchild who is royalty
  OPTIONAL {
    ?charlesLouisChild dbo:child ?grandchild2 .
    ?grandchild2 dbo:child ?royalGrandchild .
    dbr:Archduke_Charles_Louis_of_Austria dbo:child ?charlesLouisChild .
    ?royalGrandchild a dbo:RoyalFamilyMember .
  }
  
  # Predecessor of Carl, Duke of Württemberg
  OPTIONAL {
    ?thirdGenerationDescendant dbo:predecessor dbr:Carl,_Duke_of_Württemberg .
  }

  # Find common ancestor fitting both criteria
  FILTER (?thirdGenerationDescendant = ?royalGrandchild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfChild WHERE {
  ?minyeKyawswa dbo:child ?child .
  FILTER (str(?minyeKyawswa) = ""Minye_Kyawswa"") .

  ?child dbo:parent ?parentOfChild .
  
  FILTER (?parentOfChild != ?minyeKyawswa)
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bayneConflict ?regimentConflict ?calderForce WHERE {
  OPTIONAL {
    # Find the military conflict associated with William Bayne
    ?bayne dbr:William_Bayne_(Royal_Navy_officer) .
    ?bayne dbo:commander ?bayneConflict .
  }
  
  OPTIONAL {
    # Find the military conflict associated with the 30th (Cambridgeshire) Regiment of Foot
    ?regiment dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
    ?regiment dbo:militaryConflict ?regimentConflict .
  }

  OPTIONAL {
    # Find the military force or event associated with Robert Calder
    ?calder dbr:Robert_Calder .
    ?calder dbo:associatedMusicalArtist ?calderForce .
  }
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:timeZone dbr:Japan_Standard_Time .
}
```",2,2,3,2,1,3,2,20,2080,175,6836,0.9223946784922394,0.23328847016599372,0.37239280279294606
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  FILTER EXISTS { ?deathPlace rdf:type ?settlementType . 
                 VALUES ?settlementType { dbp:City dbp:Town } }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?ferdinandAlbertII { dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel }
  VALUES ?duchessLuise { dbr:Louisa_of_Braunschweig-Wolfenbüttel }

  ?child dbo:parent ?ferdinandAlbertII .
  
  OPTIONAL {
    ?duchessLuise dbo:spouse ?husband .
    FILTER (?husband = ?ferdinandAlbertII)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Colombia .
}
```",1,1,2,1,1,2,3,28,2141,0,0,1.0,1.0,1.0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?awardee WHERE {
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Identify the awardee of the specific class of the Order of Vytautas the Great related to 25 years
  OPTIONAL {
    ?orderClass a dbo:OrderOfVytautasTheGreat ;
                dbo:class ""25th anniversary"" ; # Assuming this is how it's represented in DBpedia
                dbo:awardee ?awardee .
  }

  # Link the birthplace with the awardee entity
  FILTER (?birthPlace = ?awardee)
}
```",4,4,5,2,2,2,3,28,0,3,2,0.0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:parent ?parent .

  # Find the spouse of his parent
  ?parent dbo:spouse ?spouse .

  # Ensure the spouse is royalty and a noble
  ?spouse dbo:royalTitle ?royalty .
  ?spouse dbo:nobleTitle ?nobility .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?actor WHERE {
  VALUES ?audreyHepburn { dbr:Audrey_Hepburn }
  VALUES ?januszKaminski { dbr:Janusz_Kamiński }

  # Find Audrey Hepburn's movies
  ?movie dbo:starring ?audreyHepburn .
  
  # Find Janusz Kamiński's spouse
  ?januszKaminski dbo:spouse ?spouse .

  # Check if the spouse acted in any of Audrey Hepburn's movies
  ?movie dbo:starring ?actor .
  FILTER (?actor = ?spouse)
}
```",3,5,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?sofiaPetroURL ?father WHERE {
  VALUES ?sofiaPetroURL { 
    dbr:Sofía_Petro 
  }
  ?sofiaPetroURL dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucasURL ?successorURL WHERE {
  VALUES ?georgeDucasURL { 
    dbr:George_Ducas 
  }
  
  OPTIONAL {
    ?commander dbo:successor ?successor .
    FILTER (?commander = ?georgeDucasURL)
    
    ?successor a dbo:Politician ;
              a dbo:OfficeHolder .
              
    ?militaryConflict dbo:participant ?commander ;
                      a dbo:MilitaryConflict .
                      
    ?militaryConflict dbo:participant dbr:Micha%C5%82_Kazimierz_Pac .
  }
  
  FILTER (?successorURL = ?successor)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?occupation ?spouse WHERE {
  dbr:Carrie_Johnson dbo:occupation ?occupation .
  OPTIONAL { dbr:Carrie_Johnson dbo:spouse ?spouse . }
}
```",2,2,3,1,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather ?societalEvent ?tvShow WHERE {
  # Step 1: Identify Maria Anna of Bavaria (born 1574)
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  
  # Step 2: Find her child who is royalty
  ?child dbo:parent ?mariaAnna .
  ?child dbo:royaltyTitle ?title .

  # Step 3: Determine the father of this royal child (Maria Anna's spouse)
  ?father dbo:spouse ?mariaAnna .
  
  # Step 4: Identify the child of this father who is royalty
  ?childOfFather dbo:parent ?father .
  ?childOfFather dbo:royaltyTitle ?title2 .

  # Step 5: Find societal event and television show related to 2nd Dragoon Regiment (France)
  ?societalEvent dbo:associatedWith dbr:2nd_Dragoon_Regiment_(France) .
  ?tvShow dbo:associatedWith dbr:2nd_Dragoon_Regiment_(France) .

  # Ensure the child of the father is related to both societal event and television show
  FILTER (?childOfFather = ?societalEvent && ?childOfFather = ?tvShow)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Shirley_Stoler dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Dawit_I dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warURL WHERE {
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?war .
  ?war rdfs:label ?warLabel .
  FILTER (CONTAINS(LCASE(?warLabel), ""war""))
  BIND(STR(?war) AS ?warURL)
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Jamsetji_Tata dbo:nationality dbr:India .
  dbr:Jamsetji_Tata dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,0,68,0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?glennYoungkinBirthPlace ?vinceGilliganBirthPlace WHERE {
  OPTIONAL { 
    dbr:Cecily_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
  OPTIONAL { 
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
  OPTIONAL { 
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandURL WHERE {
  dbr:Kim_Wilson dbo:associatedBand ?bandURL .
}
```",2,2,3,2,1,3,3,71,0,5,2,0.0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRoyalty WHERE {
  # Step 1: Identify Martin of Aragon
  VALUES ?martinOfAragon { dbr:Martin_of_Aragon }

  # Step 2: Find the parent of Martin of Aragon
  ?parent dbo:child ?martinOfAragon .

  # Step 3: Determine the father of this parent
  ?father dbo:child ?parent .

  # Step 4: Identify the child of this father that is a royalty
  ?childRoyalty dbo:child ?father .
  ?childRoyalty dbo:royalTitle ?title .
}
```",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorOfChild ?grandchildRoyalty WHERE {
  # Archduchess Helena of Austria's spouse and their child who is a royalty
  VALUES ?helena { dbr:Helena_of_Austria_(1842–1922) }
  ?spouse dbo:spouse ?helena .
  OPTIONAL {
    ?child dbo:parent ?spouse ;
           dbo:parent ?helena .
    FILTER EXISTS { ?child rdfs:subClassOf* dbo:Royalty . }
    ?predecessorOfChild dbo:parent ?child .
  }

  # Archduke Charles Louis of Austria's child who is a royalty and their grandchild
  VALUES ?charlesLouis { dbr:Charles_Louis_of_Austria_(1833–1896) }
  OPTIONAL {
    ?royaltyChild dbo:parent ?charlesLouis .
    FILTER EXISTS { ?royaltyChild rdfs:subClassOf* dbo:Royalty . }
    ?grandchild dbo:parent ?royaltyChild .
    FILTER EXISTS { ?grandchild rdfs:subClassOf* dbo:Royalty . }
  }

  # Return the results
  VALUES (?predecessorOfChild ?grandchildRoyalty) {
    (OPTIONAL {?predecessorOfChild} OPTIONAL {?grandchild})
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?associatedMusicalArtist WHERE {
  VALUES ?snoopDogg { 
    dbr:Calvin_Broadus 
  }
  
  ?snoopDogg dbo:profession ?professionalRole .
  FILTER (str(?professionalRole) = ""Musician"")

  OPTIONAL {
    ?snoopDogg dbo:associatedMusicalArtist ?associatedMusicalArtist .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?aStarIsBornProducer ?adventuresOfTomSawyerProducer ?fictionalCharacter WHERE {
  # Producers of ""A Star Is Born"" (1937)
  VALUES ?aStarIsBornFilm { dbr:A_Star_Is_Born_(1937_film) }
  ?aStarIsBornFilm dbo:producer ?aStarIsBornProducer .

  # Producers of ""The Adventures of Tom Sawyer"" (1938)
  VALUES ?adventuresOfTomSawyerFilm { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) }
  ?adventuresOfTomSawyerFilm dbo:producer ?adventuresOfTomSawyerProducer .

  # Fictional character alter ego of Kent Allard
  VALUES ?kentAllard { dbr:Kent_Allard }
  OPTIONAL {
    ?kentAllard dbo:alterEgo ?fictionalCharacter .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?actor WHERE {
  # Find T.I.'s songs
  ?song dbo:artist dbr:T.I. ;
        a dbo:Song .
  
  # Determine the album of each song
  ?song dbo:album ?album .

  # Check if there are any actors associated with the album
  OPTIONAL { 
    ?album dbo:actor ?actor .
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""artist""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthPlace ?smitaPatilBirthPlace WHERE {
  # Find the birthplace of an awardee of Sangeet Natak Akademi Fellowship
  ?person dbo:specialization [dbo:award ""Sangeet_Natak_Akademi_Fellowship""] .
  ?person dbo:birthPlace ?awardeeBirthPlace .

  # Find the birthplace of Smita Patil
  dbr:Smita_Patil dbo:birthPlace ?smitaPatilBirthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Cavalera_Conspiracy dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (isLiteral(?associatedArtist) = false)
  OPTIONAL { 
    ?associatedArtist a dbo:Organization .
  }
}
```",1,2,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:VfL_Bochum dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?markTournier dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) = false)
  ?birthPlace a dbo:Settlement .
  
  VALUES ?markTournier { 
    dbr:Mark_Tournier
  }
}
```",1,2,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel ?royalChild ?spouseOfCharlesII WHERE {
  # Find Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .

  # Find Stephen V of Hungary's predecessor and their child who is royalty
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  ?predecessor dbo:child ?royalChild .
  FILTER (dbo:Monarch IN (rdf:type ?royalChild)) .

  # Find the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .

  # Combine conditions to find the individual who satisfies all criteria
  FILTER (?parentOfCharlesMartel = ?spouseOfCharlesII)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherURL ?theShadowReference WHERE {
  # Baeda Maryam I and his father Dawit II
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }
  ?baedaMaryamI dbo:childOf ?dawitII .
  
  # Dawit II's father (Baeda Maryam I's grandfather)
  ?dawitII dbo:father ?grandfather .
  FILTER EXISTS { ?grandfather a dbo:Monarch . } # Ensure he is royalty
  FILTER EXISTS { ?grandfather dbo:officeHolderOf ?office . } # Ensure he holds an office
  
  BIND(?grandfather AS ?grandfatherURL)
  
  # Lamont Cranston's alter ego, The Shadow
  VALUES ?lamontCranston { dbr:Lamont_Cranston }
  ?lamontCranston dbo:alterEgo ?theShadow .
  BIND(?theShadow AS ?theShadowReference)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hashibaHidekatsuWar ?koichiroPerson ?koichiroWar WHERE {
  # Query for Hashiba Hidekatsu's war involvement
  OPTIONAL {
    dbr:Hashiba_Hidekatsu dbo:participatedInMilitaryConflict ?hashibaHidekatsuWar .
  }
  
  # Query for the person born as Koichirō and their war involvement
  OPTIONAL {
    ?koichiroPerson dbo:birthName ""Koichirō""@en ;
                    dbo:participatedInMilitaryConflict ?koichiroWar .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:birthName ""Roy Leonardo Barreras Montealegre""@en .
  ?person a dbo:Politician .
  OPTIONAL { 
    ?person dbo:partyAffiliation ?party .
  }
}
```",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .
}
```",2,3,3,2,1,2,3,28,0,1,12,0.0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Prince_Augustus_William_of_Prussia dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lesaneAssociatedArtist ?amakyeDedeAssociatedArtist WHERE {
  VALUES ?lesaneBirthName { dbr:Lesane_Parish_Crooks }
  OPTIONAL {
    ?lesaneBirthName dbo:associatedMusicalArtist ?lesaneAssociatedArtist .
  }

  VALUES ?amakyeDede { dbr:Amakye_Dede }
  OPTIONAL {
    ?amakyeDede dbo:associatedMusicalArtist ?amakyeDedeAssociatedArtist .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?book WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?person a dbo:Politician .
  OPTIONAL { 
    ?event dbo:commanderOf ?person .
    FILTER (CONTAINS(LCASE(str(?event)), ""third taiwan strait crisis""))
  }
  OPTIONAL {
    ?book dbo:author ?person .
    FILTER EXISTS { ?book a dbo:Book . }
  }
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  VALUES ?club { dbr:VfL_Bochum }
  
  ?manager dbo:manager ?club .
  ?manager dbo:nationality dbr:West_Germany .
  ?manager dbo:birthday ""1968-08-26""^^xsd:date .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeRegion WHERE {
  # Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  OPTIONAL { 
    dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  }
  
  # Identify Bobby Shmurda's birthplace
  dbr:Bobby_Shmurda dbo:birthPlace ?bobbyBirthPlace .

  # Find a region that is an American state and settlement
  ?nativeRegion a dbo:State ;
               a dbo:Settlement ;
               dbo:country dbr:United_States_of_America ;
               ?relation ?bobbyBirthPlace .
  
  # Check if the award is associated with someone from this native region
  OPTIONAL {
    ?award dbo:recipient ?person .
    ?person dbo:birthPlace ?nativeRegion .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?derBlauURL ?bandMember WHERE {
  VALUES ?derBlauURL { 
    dbr:Der_Blau 
  }
  ?derBlauURL dbo:bandMember ?bandMember .
}
```",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personBirthName WHERE {
  # Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .
  
  # Find band members of the associated musical artist
  ?associatedArtist dbo:bandMember ?bandMember .

  # Filter for those born in Florida
  ?bandMember dbo:birthPlace dbr:Florida .

  # Get their birth name
  ?bandMember dbo:birthName ?personBirthName .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShowTitle WHERE {
  ?work dbo:type dbo:TVSeries .
  ?work dbo:actor dbr:Richard_E._Grant .
  ?work rdfs:label ?tvShowTitle .
  FILTER (LANG(?tvShowTitle) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI ?grandfatherOfNaod WHERE {
  # Find Dawit I's child
  VALUES ?dawitI { dbr:Dawit_I }
  ?dawitI dbo:child ?childOfDawitI .

  # Identify Na'od and his father, then grandfather
  VALUES ?naod { dbr:Na'ad_I }
  ?naod dbo:father ?fatherOfNaod .
  ?fatherOfNaod dbo:father ?grandfatherOfNaod .

  # Ensure the grandfather is royalty and an office holder
  ?grandfatherOfNaod rdf:type dbo:Monarch .
  OPTIONAL { ?grandfatherOfNaod dbo:officeHolder ?office . }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?atlActor ?commonMovie WHERE {
  # Find the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .
  
  # Find an actor from ""ATL""
  dbr:ATL (dbo:starring|dbo:actor) ?atlActor .

  # Find a common movie where both have acted
  ?commonMovie (dbo:starring|dbo:actor) ?author ;
               (dbo:starring|dbo:actor) ?atlActor .
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfCommander ?alterEgo WHERE {
  # Find the commander of Siege of Mukha who is royalty
  ?commander dbo:commanderOf dbr:Siege_of_Mukha .
  ?commander dbo:royaltyTitle ?royalTitle .

  # Find their child who is also royalty
  ?child dbo:parent ?commander ;
         dbo:royaltyTitle ?childRoyalTitle .

  # Reference to Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo ?alterEgo .
  
  # Bind the child of the commander as the result
  BIND(?child AS ?childOfCommander)
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alfonso VI's child (Person A)
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?personA .
  
  # Person A's child (Person B)
  ?personA dbo:child ?person .

  # William I of Sicily's royal child (Person C)
  dbr:William_I_of_Sicily dbo:child ?personC .
  FILTER EXISTS { ?personC a dbo:RoyalFamily . }

  # Father of Person C
  ?personC dbo:parent ?fatherOfC .

  # Roger III, Duke of Apulia's parent (Person D)
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?personD .

  # The person must be both Person B and the father of Person C
  FILTER (?person = ?fatherOfC)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?bandMember ?associatedArtist WHERE {
  VALUES ?alanParsonsProject { dbr:The_Alan_Parsons_Project }
  
  # Find band members of The Alan Parsons Project
  ?bandMember dbo:bandMember ?alanParsonsProject .
  
  OPTIONAL {
    # Check if Stuart McBeath Tosh is a musical artist and find associated artists
    VALUES ?stuartMcbeathTosh { dbr:Stuart_McBeath_Tosh }
    
    ?stuartMcbeathTosh rdf:type dbo:MusicalArtist .
    ?stuartMcbeathTosh dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity ?honoraryTitle WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlaceEntity .
  OPTIONAL { 
    dbr:Burhan_Belge dbo:honoraryTitle ?honoraryTitle .
    FILTER(CONTAINS(LCASE(STR(?honoraryTitle)), ""order of the medjidie""))
  }
}
```",3,3,4,2,2,2,2,9,0,2,1,0.0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Father of William II of Sicily
  ?williamII dbo:father ?father .
  FILTER(STRSTARTS(STR(?williamII), ""http://dbpedia.org/resource/William_II_of_Sicily""))

  # Child of Alfonso VI's child
  ?alfonsoVIChild dbo:child ?alfonsoVII .
  ?alfonsoVII dbo:child ?grandchildOfAlfonsoVI .

  # Child of Roger III's parent
  ?rogerIII dbo:parent ?parentOfRogerIII .
  ?parentOfRogerIII dbo:child ?childOfParentOfRogerIII .

  # Find the person who satisfies all conditions
  FILTER(?father = ?grandchildOfAlfonsoVI && ?father = ?childOfParentOfRogerIII)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?ceceBellBirthPlace WHERE {
  OPTIONAL { 
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
  OPTIONAL {
    dbr:Cecily_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
}
```",4,4,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfParent WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:parent ?parent .

  # Parent's father (Dorothea's grandfather)
  ?parent dbo:father ?fatherOfParent .

  # Commander in Siege of Padua
  ?commander dbo:wikiPageWikiLink dbr:Siege_of_Padua .
  
  # Ensure the commander is royalty and has a child who is Dorothea's parent
  ?commander rdf:type dbo:RoyalFamilyMember .
  ?commander dbo:child ?parent .

  FILTER (?fatherOfParent != ?parent)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?kimWilsonBand WHERE {
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
  OPTIONAL {
    dbr:Kim_Wilson dbo:musicalBand ?kimWilsonBand .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?showHost ?educationalInstitution WHERE {
  ?host dbo:award ?nobelPrize .
  ?nobelPrize dbo:awardingBody dbr:Nobel_Committee_for_Physics .
  
  OPTIONAL { 
    ?host dbo:almaMater ?educationalInstitution .
  }
  
  ?show dbo:hostedBy ?host .
  
  OPTIONAL {
    ?maxBornAward dbo:name ""Max Born Award""@en ;
                  dbo:awardedTo ?recipient .
    FILTER (?recipient = ?host)
  }

  FILTER EXISTS { ?nobelPrize dbo:year ?year . FILTER(?year > 1901) }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Hon. Mary Frances Bowes-Lyon""@en .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?alumnus dbo:alumni dbr:Eton_College .
  ?alumnus dbo:child ?victorStanley .
  ?victorStanley rdfs:label ""Victor Stanley (Royal Navy officer)""@en .

  ?alumnus dbo:child ?politicianChild .
  ?politicianChild dbo:occupation dbr:Politician .

  ?politicianChild dbo:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,3,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?playerName WHERE {
  # Find the nickname of the Russia national football team
  VALUES ?teamURL { dbr:Russia_national_football_team }
  
  ?teamURL dbo:officialName ?nickname .
  
  # Find players associated with this team who are authors of ""The First Glove""
  ?player dbo:nationalTeam ?teamURL ;
          foaf:name ?playerName ;
          dbo:author dbr:The_First_Glove .

}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  VALUES ?regiment { 
    dbr:30th_(Cambridgeshire)_Regiment_of_Foot 
  }
  
  ?regiment dbo:participatedIn ?war .
  ?war dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?occupation WHERE {
  dbr:John_Boxer dbo:birthName ?birthName .
  OPTIONAL { dbr:John_Boxer dbo:occupation ?occupation . }
}
```",2,2,3,2,1,2,2,9,0,2,39640,0.0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person rdf:type dbo:Athlete .
  ?person rdf:type dbo:SoccerPlayer .
  ?person rdf:type dbo:SportsManager .
  ?person rdf:type dbo:SoccerManager .
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
}
```",1,5,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfKimWilson ?realNameNickCurran ?nickCurranAssociatedArtist WHERE {
  # Find the band associated with Kim Wilson
  dbr:Kim_Wilson dbo:associatedBand ?bandOfKimWilson .
  
  # Ensure the band is The Fabulous Thunderbirds
  FILTER (?bandOfKimWilson = dbr:The_Fabulous_Thunderbirds)
  
  # Find Nick Curran's real name and associated musical artists
  OPTIONAL {
    dbr:Nicholas_Michael_Curran dbo:birthName ?realNameNickCurran .
  }
  OPTIONAL {
    dbr:Nicholas_Michael_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?settlement WHERE {
  # Linda Miller (actress) and her child
  VALUES ?lindaMiller { dbr:Linda_Miller_(actress) }
  ?lindaMiller dbo:child ?child .

  # Award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:recipient ?coro .
  ?coro rdfs:label ""Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico""@en .

  # Ensure the child is associated with the award
  ?child dbo:award ?award .

  # The result should be American and a settlement
  ?settlement dbo:nativePlace ?child .
  FILTER (CONTAINS(LCASE(?settlement), ""american"") && CONTAINS(LCASE(STR(?settlement)), ""settlement""))
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  dbr:Santiago_de_Compostela dbo:mayor ?mayor .
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .
  ?actor dbo:profession ?profession .
  FILTER CONTAINS(LCASE(?profession), ""actor"")
}
```",2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandURL ?realName WHERE {
  VALUES ?bandURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  ?bandURL dbo:name ?realName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?profession WHERE {
  VALUES ?cokeStudioPhilippines { 
    dbr:Coke_Studio_Philippines 
  }
  
  ?cokeStudioPhilippines dbo:producer ?producer .
  ?producer rdf:type ?profession .
}
```",2,2,3,2,1,3,3,71,0,20,12,0.0,0.0,0
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manuelOffice ?miguelPartyLeaderOffice WHERE {
  # Find the office of Manuel Pinto da Costa in a military conflict
  dbr:Manuel_Pinto_da_Costa dbo:office ?manuelOffice .
  
  OPTIONAL {
    ?manuelOffice dbo:relatedEvent ?conflict .
    ?conflict rdf:type dbo:MilitaryConflict .
  }
  
  # Find the political party led by Miguel Maura and its leader's office
  dbr:Miguel_Maura dbo:leaderOfParty ?miguelParty .
  ?miguelPartyLeader dbo:office ?miguelPartyLeaderOffice .
  FILTER (?miguelPartyLeader = dbr:Miguel_Maura)
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find child of the spouse
  ?child dbo:parent ?spouse .
  
  # Step 3: Determine parent of the child (could be same as spouse or another)
  ?child dbo:parent ?parent .

  # Step 4: Find works involving Herschel Bernardi and the identified parent
  ?work dbo:actor dbr:Herschel_Bernardi ;
        dbo:actor ?parentActor .
  
  FILTER (?parentActor = ?parent)

  # Step 5: Identify actor in this movie
  ?work dbo:actor ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerURL ?managerName WHERE {
  # Identify VfL Bochum and its manager during the 2007-08 season
  dbr:VfL_Bochum dbo:manager ?manager .
  
  # Ensure the manager is from West Germany
  ?manager dbo:nationality dbr:Germany .

  # Link Thomas Letsch to the team managed by this person
  OPTIONAL {
    ?letsch dbo:team dbr:VfL_Bochum ;
            dbo:player ?manager .
    FILTER (str(?letsch) = ""Thomas_Letsch"")
  }

  # Return manager's URL and name
  BIND(STR(?manager) AS ?managerURL)
  OPTIONAL { ?manager rdfs:label ?managerName . }
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?archduke { dbr:Charles_Louis,_Archduke_of_Austria }
  ?archduke dbo:child ?child .
  ?child dbo:royalTitle ?title .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify the child of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrechtChild dbo:child dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Step 2: Identify the grandchild (child of the child) of Philipp Albrecht
  ?grandchild1 dbo:child ?philippAlbrechtChild .

  # Step 3: Identify the child and then the grandchild of Duke Philipp of Württemberg
  ?dukePhilippChild dbo:child dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  ?grandchild2 dbo:child ?dukePhilippChild .

  # Step 4: Identify the grandchild (child of the child) of Archduke Charles Louis of Austria who is a royalty
  ?archdukeChild dbo:child dbr:Archduke_Charles_Louis_of_Austria .
  ?grandchild3 dbo:child ?archdukeChild .
  FILTER EXISTS { ?grandchild3 rdf:type dbo:RoyalFamilyMember }

  # Find the predecessor of the grandchild1 that matches any of the grandchildren from steps 3 or 4
  ?predecessor dbo:parent ?grandchild1 .
  
  # Ensure the predecessor is a royalty and matches one of the identified grandchildren
  FILTER EXISTS { ?predecessor rdf:type dbo:RoyalFamilyMember }
  VALUES ?matchingGrandchild {
    ?grandchild2
    ?grandchild3
  }
  FILTER (?predecessor = ?matchingGrandchild)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:The_Sky_Ranger_(1928_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  # Find actor(s) of Rustlers' Rhapsody
  VALUES ?rustlersRhapsody { dbr:Rustler's_Rhapsody }
  
  ?rustlersRhapsody dbo:starring ?actor .
  
  # Find profession of Frédéric Bouraly
  dbr:Frédéric_Bouraly dbo:profession ?profession .

  # Filter to find commonality between actor and profession
  FILTER (?actor = ?profession)
}
```",3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOccupationURL WHERE {
  ?photographer a dbo:Occupation ;
                rdfs:label ""Photographer""@en .
  ?photographer rdfs:subClassOf+ ?parentOccupation .
  ?parentOccupation a dbo:Occupation ;
                    rdfs:label ?parentLabel .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist rdf:type dbo:MusicalArtist .
  ?artist dbo:birthPlace dbr:Florida .
}
```",1,2,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerOfAlwaysTheLoveSongs ?commanderInWar WHERE {
  # Find the writer of Always the Love Songs
  OPTIONAL {
    dbr:Always_the_Love_Songs dbo:creator ?writerOfAlwaysTheLoveSongs .
  }
  
  # Find the commander in the Battle of Vienna
  OPTIONAL {
    dbr:Battle_of_Vienna dbo:commander ?commanderInWar .
  }
}
```",5,7,6,3,2,3,3,71,1,19,0,0.05,1.0,0.09523809523809523
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderResidence WHERE {
  ?party dbo:leader ?leader .
  ?party rdfs:label ""Ulster Unionist Party""@en .
  
  OPTIONAL { 
    ?leader dbo:residence ?leaderResidence .
  }
}
```",2,2,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Algerian War and its commander
  dbr:Algerian_War dbo:militaryCommander ?commander .
  
  # French Army involved in the Algerian War
  dbr:French_Army dbo:participatedInMilitaryConflict dbr:Algerian_War .

  # Societal event or television show related to the war
  OPTIONAL {
    ?event dbo:subject dbr:Algerian_War .
    ?show dbo:subject ?event .
  }

  # Genealogical tracing for Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
  ?child dbo:parent ?parent .
  ?child dbo:father ?commander .

  FILTER EXISTS { ?show }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?bobThompson dbr:Bob_Thompson_(musician) .
  ?bobThompson dbo:birthName ?birthName .
  ?bobThompson dbo:associatedBand ?band .
  OPTIONAL { 
    ?bobThompson dbo:musicalArtistRole ?role .
    FILTER (CONTAINS(LCASE(?role), ""singer""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?alterEgo WHERE {
  # Step 1: Identify Na'od
  VALUES ?naod { dbr:Na'od }

  # Step 2: Find the father of Na'od
  ?naod dbo:father ?father .

  # Step 3: Find the grandfather (father's father) of Na'od
  ?father dbo:father ?grandfather .

  # Step 4: Check if the grandfather is a royalty or office holder
  OPTIONAL { ?grandfather dbo:royalTitle ?title . }
  OPTIONAL { ?grandfather dbo:officeHolder ?office . }

  FILTER EXISTS { ?grandfather dbo:royalTitle|dbo:officeHolder ?_ }

  # Step 5: Identify The Shadow's alter ego
  VALUES ?shadow { dbr:The_Shadow }
  ?shadow dbo:alterEgo ?alterEgo .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?williamBayne { 
    dbr:William_Bayne 
  }
  OPTIONAL {
    ?williamBayne dbo:wikiPageRedirects ?reference .
  }
  UNION
  OPTIONAL {
    ?williamBayne dbo:alias ?reference .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?lassoTheMoon WHERE {
  dbr:Frédéric_Bouraly dbo:profession ?profession .
  
  OPTIONAL {
    ?lassoTheMoon dbo:albumTitle ""Lasso the Moon"" ;
                  a dbo:Film .
    
    ?lassoTheMoon dbo:actor dbr:Frédéric_Bouraly .
  }
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Ian_Gregson dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birminghamURL ?musicalWork WHERE {
  VALUES ?apacheIndian { dbr:Apache_Indian }
  
  ?apacheIndian dbo:birthPlace ?birmingham .
  FILTER (?birmingham = dbr:Birmingham)
  
  OPTIONAL {
    ?musicalWork dbo:composer ?apacheIndian .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  VALUES ?kentAllard { 
    # Assuming we have the resource for Kent Allard, e.g., dbr:Kent_Allard
    # Replace with actual DBpedia resource if known
  }
  ?kentAllard dbo:alterEgo ?alterEgo .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?comicsCharacter WHERE {
  dbr:The_Shadow_(video_game) dbo:basedOn ?comicsCharacter .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
  ?child rdfs:label ?childName .
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }
  FILTER (LANG(?childName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,3,3,0.0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?whatYouKnowActor ?smartbombMovieActor WHERE {
  # Part 1: Actor of the album of ""What You Know"" by T.I.
  OPTIONAL {
    dbr:What_You_Know_(T.I._song) dbo:album ?album .
    ?album dbo:actor ?whatYouKnowActor .
  }

  # Part 2: Actor of the movie with the author of ""Smartbomb""
  OPTIONAL {
    dbr:Smartbomb dbo:author ?smartbombAuthor .
    ?movie dbo:writer ?smartbombAuthor ;
           dbo:actor ?smartbombMovieActor .
  }
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # William I of Sicily and his children who are royalty
  VALUES ?williamI { dbr:William_I_of_Sicily }
  
  ?child dbo:parent ?williamI .
  OPTIONAL { ?child dbo:royalty ?isRoyalty . FILTER(?isRoyalty != '') }

  # Child must also be a descendant of Roger III, Duke of Apulia
  VALUES ?rogerIII { dbr:Roger_III,_Duke_of_Apulia }
  
  ?descendant dbo:parent* ?child .
  ?descendant dbo:parent ?rogerIII .

  # Find the father of this child
  ?child dbo:father ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalSpouse WHERE {
  VALUES ?duchessLuise { dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel }
  
  ?duchessLuise dbo:spouse ?firstSpouse .
  ?firstSpouse dbo:spouse ?secondSpouse .
  ?secondSpouse dbo:spouse ?finalSpouse .

  FILTER(?duchessLuise != ?finalSpouse)
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?actor WHERE {
  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?profession .
  
  # Identify Richard Grant Esterhuysen and his birth name
  ?person rdfs:label ""Richard Grant Esterhuysen""@en .
  ?person foaf:name ?birthName .
  FILTER(?birthName = ""Richard Grant Esterhuysen"")
  
  # Find movies that are also television shows he acted in
  ?actor dbo:profession dbr:Actor ;
         dbo:actedIn ?work .
  ?work rdf:type dbo:Film ;
        dbo:genre ?genre .
  FILTER EXISTS { ?work dbo:isBasedOn ?tvShow . }
  
  # Link the actor to Richard Grant Esterhuysen
  ?person foaf:name ""Richard Grant Esterhuysen""@en .
  FILTER(?actor = ?person)
}
```",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  ?person rdf:type dbo:MusicArtist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?campaignCommander WHERE {
  VALUES ?battleResource { 
    dbr:Battle_of_Fort_Royal 
  }
  OPTIONAL {
    ?battleResource dbo:militaryUnit ?battleMilitaryForce .
  }

  VALUES ?campaignResource { 
    dbr:French_campaign_in_Egypt_and_Syria 
  }
  ?campaignResource dbo:commander ?campaignCommander .
}
```",2,2,3,1,2,3,3,71,1,47,0,0.020833333333333332,1.0,0.04081632653061225
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?eugeneCattinParent ?doonArbusParent WHERE {
  # Actor of the film Judgment: The Trial of Julius and Ethel Rosenberg
  OPTIONAL {
    dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .
  }
  
  # Parent of a professional in Eugène Cattin's profession
  OPTIONAL {
    dbr:Eugène_Cattin dbo:occupation ?profession .
    ?person dbo:occupation ?profession ;
            dbo:parent ?eugeneCattinParent .
  }
  
  # Parent of Doon Arbus
  OPTIONAL {
    dbr:Doon_Arbus dbo:parent ?doonArbusParent .
  }
}
```",5,5,6,3,3,3,3,71,1,3,0,0.25,1.0,0.4
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?michalKazimierzPac { dbr:Mikołaj_Kazimierz_Paszczyński }
  
  ?force dbo:militaryConflict true .
  ?force dbo:event true .
  ?force dbo:commander ?commander .
  ?commander dbo:officeHolder true .
  ?commander dbo:politician true .

  ?michalKazimierzPac dbo:participatedIn ?force .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Find Stephen V of Hungary's predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Find the father of Philip I, Prince of Taranto and his spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
  ?philipFather dbo:spouse ?spouse .

  # Find the child of the predecessor (Stephen V's predecessor)
  ?predecessor dbo:child ?firstChild .

  # Find the child of that child who is royalty
  ?firstChild dbo:child ?secondChild .
  ?secondChild rdf:type dbo:Monarch .
  
  # Ensure the spouse of Philip I's father matches the first child
  FILTER (?spouse = ?firstChild)
  
  # Return the royal child
  BIND(?secondChild AS ?royalChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?olafAdministration WHERE {
  # Territories administered from Copenhagen
  VALUES ?copenhagen { dbr:Copenhagen }
  
  ?territory dbo:administrativeCenter ?copenhagen .
  
  # Administration of Olaf I of Denmark
  OPTIONAL {
    dbr:Olaf_I_of_Denmark dbo:ruledTerritory ?olafAdministration .
  }
}
```",2,2,3,1,2,2,3,28,0,3,1,0.0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfSpain ?archbishopOfSantiago WHERE {
  VALUES ?tenantOfSpain { 
    dbr:Philip_VI_of_Spain 
  }
  VALUES ?archbishopOfSantiago { 
    dbr:Jorge_Martínez_Angulo 
  }
}
```",2,2,3,1,2,3,3,71,0,2,4,0.0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName ?year WHERE {
  ?award dbo:awarded ?recipient .
  ?award rdfs:label ?awardName .
  ?award dbo:dateReceived ?date .
  BIND(YEAR(?date) AS ?year)
  FILTER (STRSTARTS(STR(?year), ""19"") || STRSTARTS(STR(?year), ""20"")) # Considering only 20th and 21st centuries
  FILTER (SUBSTRING(STR(?year), LENGTH(STR(?year)) - 1, 2) = ""25"")
}
ORDER BY ?year
```",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorSawMinPhyu ?predecessorMyatHponePyo WHERE {
  # Saw Min Phyu's spouse and their child who is a royalty
  OPTIONAL {
    ?sawMinPhyu dbo:spouse ?spouseSawMinPhyu .
    ?spouseSawMinPhyu dbo:child ?royalChildSawMinPhyu .
    ?royalChildSawMinPhyu rdf:type dbo:Monarch .
    ?royalChildSawMinPhyu dbo:predecessor ?predecessorSawMinPhyu .
  }

  # Myat Hpone Pyo's father and his spouse who is a royalty
  OPTIONAL {
    ?myatHponePyo dbo:father ?fatherMyatHponePyo .
    ?fatherMyatHponePyo dbo:spouse ?royalSpouseMyatHponePyo .
    ?royalSpouseMyatHponePyo rdf:type dbo:Monarch .
    ?royalSpouseMyatHponePyo dbo:predecessor ?predecessorMyatHponePyo .
  }

  # Assuming Saw Min Phyu and Myat Hpone Pyo are known entities
  VALUES ?sawMinPhyu { dbr:Saw_Min_Phyu }
  VALUES ?myatHponePyo { dbr:Myat_Hpone_Pyo }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eleonoreOfAustria ?father WHERE {
  VALUES ?eleonoreOfAustria { 
    dbr:Eleonora_of_Austria_(1574–1635) 
  }
  ?eleonoreOfAustria dbo:childOf ?father .
  FILTER (?father = dbr:Ferdinand_II,_Holy_Roman_Emperor)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find the writer of ""The Live Anthology""
  dbr:The_Live_Anthology dbo:composer ?writer .
  
  # Ensure the writer is a musical artist
  ?writer a dbo:MusicalArtist .

  # Check association with $uicideboy$
  OPTIONAL { 
    ?writer dbo:associatedMusicalArtist dbr:$uicideboy$ .
  }

  # Check association with Dizzee Rascal
  OPTIONAL {
    ?writer dbo:associatedMusicalArtist dbr:Dizzee_Rascal .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfFather WHERE {
  ?sawShweKhet a dbo:Person ;
               dbo:child ?child .

  ?child a dbo:Monarch ;
         dbo:predecessor dbr:Myat_Hpone_Pyo ;
         dbo:parent ?parentMinHlaHtut .

  ?minHlaHtutOfPyakaung a dbo:Person ;
                        rdfs:label ""Min Hla Htut of Pyakaung""@en ;
                        dbo:child ?child .

  ?parentMinHlaHtut dbr:Saw_Shwe_Khet ;
                    dbo:child ?minHlaHtutOfPyakaung .

  ?fatherOfChild a dbo:Person ;
                 dbo:child ?child ;
                 dbo:spouse ?spouseOfFather .

  FILTER (?spouseOfFather a dbo:Monarch)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?newYorkState { 
    dbr:New_York_(state) 
  }
  ?person dbo:birthPlace ?newYorkState .
}
```",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?baedaMaryamIFather ?theShadowAlterEgo ?dawitIChild WHERE {
  VALUES ?baedaMaryamIFather { 
    ?fatherOfBaedaMaryam1
  }
  VALUES ?theShadowAlterEgo { 
    ?alterEgoOfTheShadow
  }
  VALUES ?dawitIChild { 
    ?childOfDawit1
  }

  dbr:Baeda_Maryam_I dbo:father ?fatherOfBaedaMaryam1 .
  
  dbr:The_Shadow dbo:alterEgo ?alterEgoOfTheShadow .

  dbr:Dawit_I dbo:child ?childOfDawit1 .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Archduke Charles Joseph of Austria
  dbr:Charles_Joseph,_Archduke_of_Austria dbo:parent ?leopoldV .
  
  # Leopold V is a child of Ferdinand II and was a commander in the Thirty Years' War
  ?leopoldV dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor ;
           dbo:militaryCommander ?commanderRole .

  # Find the father of Leopold V
  ?leopoldV dbo:father ?father .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaURL ?jstRegion WHERE {
  VALUES ?mitakaURL { 
    dbr:Mitaka 
  }
  ?mitakaURL dbo:timeZone ?timezone .
  ?timezone rdfs:label ?timezoneLabel .
  FILTER (CONTAINS(LCASE(?timezoneLabel), ""japan standard time""))
  OPTIONAL {
    ?timezone dbo:region ?jstRegion .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institutionInGeorgia ?birthPlaceCountry WHERE {
  VALUES ?littleHatJones { dbr:Little_Hat_Jones }
  
  # Find institution in Georgia associated with Little Hat Jones
  OPTIONAL {
    ?littleHatJones dbo:almaMater|dbo:workLocation ?institution .
    ?institution dbo:location ?location .
    FILTER(CONTAINS(LCASE(str(?location)), ""georgia""))
    BIND(?institution AS ?institutionInGeorgia)
  }
  
  # Find birthplace of Little Hat Jones and ensure it is a country
  ?littleHatJones dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbr:Country .
  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  VALUES ?arthur { dbr:Arthur_Stanley_(politician) }
  VALUES ?edward { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  VALUES ?victor { dbr:Victor_Stanley_(Royal_Navy_officer) }

  ?father dbo:child ?arthur .
  ?father dbo:parent ?edward .
  ?father dbo:parent ?victor .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Sergio_Ag%C3%BCero dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan_Standard_Time dbo:country ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle1Combatant1 ?battle1Combatant2 ?battle2Combatant1 ?battle2Combatant2 WHERE {
  VALUES ?battle1URL { 
    dbr:Battle_of_Cape_Finisterre_(1805) 
  }
  OPTIONAL {
    ?battle1URL dbp:combatant1 ?battle1Combatant1 .
    ?battle1URL dbp:combatant2 ?battle1Combatant2 .
  }

  VALUES ?battle2URL { 
    dbr:Battle_of_Fort_Royal_(1794) 
  }
  OPTIONAL {
    ?battle2URL dbp:combatant1 ?battle2Combatant1 .
    ?battle2URL dbp:combatant2 ?battle2Combatant2 .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfParadise ?januszSpouse WHERE {
  VALUES ?paradiseFilm { dbr:Paradise_(2013_film) }
  
  # Find the actor of Paradise (2013 film)
  ?paradiseFilm dbo:starring ?actorOfParadise .
  
  # Find the spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?januszSpouse .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?workBirthPlace WHERE {
  # Find Ethan Iverson's resource in DBpedia
  dbr:Ethan_Iverson dbo:associatedMusicalArtist ?work .
  
  # Ensure the work is both an artist and a musical artist
  ?work rdf:type dbo:MusicalArtist ;
        rdf:type dbo:Artist .

  # Retrieve the birthplace of the work
  ?work dbo:birthPlace ?workBirthPlace .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,2,104,0.0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Find the parent of Min Hla Htut of Pyakaung
  ?minHlaHtut dbo:parent ?parentOfMinHlaHtut .
  FILTER (str(?minHlaHtut) = ""Min_Hla_Htut_of_Pyakaung"")

  # Find the child of this parent
  ?childOfParent dbo:parent ?parentOfMinHlaHtut .

  # Find Myat Hpone Pyo and his predecessor
  ?myatHponePyo dbo:predecessor ?predecessor .
  FILTER (str(?myatHponePyo) = ""Myat_Hpone_Pyo"")

  # The common entity should be both the child of Min Hla Htut's parent and Myat Hpone Pyo's predecessor
  FILTER (?childOfParent = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  ?party dbo:country dbr:Spain .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:hasMember ?party .
}
```",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:child ?child .
  
  # Filter children who are royalty
  ?child a dbo:Royalty .

  # Find the parent(s) of Francis I
  dbr:François_Ier,_Duke_of_Lorraine dbo:parent ?parent .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Konrad Adenauer as leader of West Germany
  dbr:Konrad_Adenauer dbo:nationality ?adenauerNationality .
  
  # Manager of SBV Vitesse during the 2020–21 season
  OPTIONAL { 
    dbr:SBV_Vitesse_2020-21_season dbo:manager ?vitesseManager .
    ?vitesseManager dbo:nationality ?managerNationality .
  }
  
  # Check if both have the same native country
  FILTER (?adenauerNationality = ?managerNationality)
  BIND(?adenauerNationality AS ?nativeCountry)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle WHERE {
  dbr:Bill_Clinton dbo:author ?work .
  ?work a dbo:Book .
  ?work rdfs:label ?bookTitle .
  FILTER (lang(?bookTitle) = ""en"")
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeRegion WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?bobbyBirthName .

  # Step 2: Identify a band from New York state with an awardee sharing Bobby Shmurda's birth name
  ?band dbo:origin dbr:New_York_(state) .
  ?award dbo:recipient ?person .
  ?person dbo:birthName ?bobbyBirthName .
  ?band dbo:award ?award .

  # Step 3: Determine the native region of the award
  ?award dbo:nativeRegion ?nativeRegion .
  
  # Filter to ensure the native region is both a state and a region in America
  FILTER EXISTS { ?nativeRegion rdf:type dbo:State . }
  FILTER EXISTS { ?nativeRegion rdf:type dbo:Region . }
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find a child of Philipp Albrecht, Duke of Württemberg
  ?philippChild dbo:childOf dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Find the grandchild (child of the above child)
  ?grandchild dbo:childOf ?philippChild .

  # Find a child of Archduke Charles Louis who is royalty
  ?archdukeChild dbo:childOf dbr:Archduke_Charles_Louis_of_Austria .
  
  # Ensure this child is royalty
  ?archdukeChild rdf:type/rdfs:subClassOf* dbo:Royal .

  # Find the predecessor of the grandchild (i.e., parent)
  ?predecessor dbo:parentOf ?grandchild .

  # Filter to ensure the grandchild is related to both Philipp Albrecht's lineage and Archduke Charles Louis
  FILTER (?archdukeChild = ?philippChild || ?archdukeChild = ?grandchild)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Richard Grant Esterhuysen (The Shadow)
  VALUES ?theShadow { dbr:The_Shadow_(radio_character) }
  
  # Find his acting roles
  ?theShadow dbo:profession dbr:Actor .
  ?role dbo:actor ?theShadow .

  # Check if the role is a television show that has been adapted into a movie
  ?role dbo:type dbr:Television_series .
  OPTIONAL { 
    ?movie dbo:basedOn ?role .
    ?movie dbo:type dbr:Film .
  }

  # Find actors of this movie/TV show
  ?movie dbo:actor ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?davydovWar ?awardeeWar WHERE {
  # Find wars involving Alexander Lvovich Davydov
  ?davydovWar dbo:participant dbr:Aleksandr_Lvovich_Davydov .
  
  # Find awardees of a specific order (assuming Order of St. George, class 4)
  ?awardee dbo:recipientOf dbr:Order_of_St._George_4th_class .
  ?awardeeWar dbo:participant ?awardee .

  # Ensure both wars are related to the Russian Empire
  ?davydovWar dbo:place dbr:Russian_Empire .
  ?awardeeWar dbo:place dbr:Russian_Empire .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Linda_Bruckheimer dbo:spouseOrPartner ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en ;
          dbo:birthDate ?birthDate ;
          dbo:almaMater ?almaMater .
  FILTER (YEAR(?birthDate) = 1955 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 2)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Manuel_Pinto_da_Costa dbo:officeHolder ?office .
  ?office dbo:conflict dbr:Angolan_War_of_Independence .
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?archduke { 
    dbr:Archduke_Charles_Joseph_of_Austria 
  }
  
  OPTIONAL { 
    ?archduke dbo:father ?parent .
  }
  UNION
  OPTIONAL { 
    ?archduke dbo:mother ?parent .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?glennYoungkinBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Cece Bell, author of El Deafo
  OPTIONAL { 
    dbr:Cecily_Ann_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
  
  # Glenn Youngkin, current governor of Virginia
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }

  # Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",6,8,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  dbr:T.I. dbo:album ?album .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?ianGregson a dbo:Person ;
              foaf:name ""Ian Gregson"" ;
              dbo:occupation dbo:Poet .
  
  ?award dbo:recipient ?ianGregson ;
         dbo:relatedWork ?movie .

  ?movie dbo:productionCompany ?company ;
         dbo:producer ?producer .

}
```",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonBand WHERE {
  VALUES ?nickCurran { dbr:Nick_Curran }
  VALUES ?kimWilson { dbr:Kim_Wilson }

  ?nickCurran dbo:associatedMusicalArtist ?commonBand .
  ?kimWilson dbo:associatedMusicalArtist ?commonBand .
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?birthName WHERE {
  ?person dbo:occupation dbr:Musician .
  ?person dbo:birthPlace dbr:Central_Region_(Ghana) .
  ?person dbo:birthName ?birthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonPlayer WHERE {
  # Find Lai Sun Cheung
  VALUES ?laiSunCheung { 
    dbr:Lai_Sun_Cheung 
  }
  
  # Find the person born on 1981-12-01 who is an athlete, soccer player, sports manager, and soccer manager
  SELECT ?person WHERE {
    ?person dbo:birthDate ""1981-12-01""^^xsd:date .
    ?person dbo:sport dbr:Soccer .
    ?person dbo:occupation dbr:Athlete ;
             dbo:occupation dbr:Soccer_player ;
             dbo:occupation dbr:Sports_manager ;
             dbo:occupation dbr:Soccer_manager .
  }
  
  # Find a common player connected to both Lai Sun Cheung and the identified person
  OPTIONAL {
    ?laiSunCheung dbo:player ?commonPlayer .
  }
  OPTIONAL {
    ?person dbo:player ?commonPlayer .
  }
}
```",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?constance WHERE {
  ?roger2 dbo:child ?constance .
  FILTER EXISTS { ?constance a dbo:Monarch . }
  
  OPTIONAL {
    ?matilda dbo:parent ?constance ;
             dbo:spouse dbr:William_I_of_Sicily .
  }

  OPTIONAL {
    ?alfonso6 dbo:child ?urraca .
    ?urraca dbo:child ?ancestor .
    ?ancestor dbo:descendantOf ?constance .
  }
  
  FILTER EXISTS { ?matilda a dbo:Monarch . }
  FILTER EXISTS { ?matilda dbo:officeHolder ?office . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild ?father WHERE {
  # Identify William I of Sicily
  dbr:William_I_of_Sicily dbo:child ?child .
  
  # Filter for children who are royalty
  ?child rdf:type dbo:Monarch .

  # Get the father of this royal child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?personName WHERE {
  ?person a dbo:Artist ;
          dbo:musicalArtist true ;
          dbo:deathDate ""2020-06-18""^^xsd:date .
  
  ?person rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?theCampusQueen { 
    dbr:The_Campus_Queen_(film) 
  }
  ?theCampusQueen dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfDawitI ?theShadowAlterEgo WHERE {
  VALUES ?dawitI { dbr:Dawit_I }
  
  OPTIONAL {
    ?dawitI dbo:child ?childOfDawitI .
  }

  VALUES ?theShadow { dbr:The_Shadow }
  
  OPTIONAL {
    ?theShadow dbo:alterEgo ?theShadowAlterEgo .
  }
}
```",3,3,4,2,2,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?jamshedpur { 
    dbr:Jamshedpur 
  }
  ?person dbo:birthPlace ?jamshedpur .
}
```",1,1,2,1,1,2,2,9,68,0,0,1.0,1.0,1.0
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?commanderRole WHERE {
  VALUES ?eleonore { dbr:Eleonore_of_Austria_(1574-1625) }
  
  ?eleonore dbo:father ?father .
  
  OPTIONAL {
    ?father dbo:role ?commanderRole .
    FILTER(CONTAINS(LCASE(STR(?commanderRole)), ""thirty years' war""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Define the entities
  VALUES ?regiment { dbr:30th_(Cambridgeshire)_Regiment_of_Foot }
  VALUES ?battle1 { dbr:Battle_of_Fort_Royal }
  VALUES ?battle2 { dbr:Battle_of_Cape_Finisterre_(1805) }

  # Find the commanders for each battle
  {
    ?regiment dbo:participatedIn ?battle1 .
    ?battle1 dbo:commander ?commander .
  } UNION {
    ?regiment dbo:participatedIn ?battle2 .
    ?battle2 dbo:commander ?commander .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  VALUES ?firstGlove { dbr:The_First_Glove }
  VALUES ?nashiParni { dbr:Nashi_parni }

  OPTIONAL {
    ?firstGlove dbo:writer ?player .
  }
  
  OPTIONAL {
    ?nashiParni dbo:member ?player .
  }
  
  FILTER (?player != rdf:nil)
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  VALUES ?sawMinHla { dbr:Saw_Min_Hla }
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }

  ?person dbo:child ?sawMinHla .
  ?person dbo:spouse ?sawShweKhet .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandChild ?williamIChild WHERE {
  # Step 1: Find a child of Alfonso VI
  ?alfonsoVIChild dbo:childOf dbr:Alfonso_VI_of_León_and_Castile .
  
  # Step 2: Find the grandchild (child of the child) of Alfonso VI
  ?grandChild dbo:childOf ?alfonsoVIChild .

  # Step 3: Identify William I's child who is royalty
  ?williamIChild dbo:childOf dbr:William_I_of_Sicily .
  FILTER EXISTS { ?williamIChild rdf:type dbo:Monarch . }

  # Step 4: Match the grandchild with the father of William I's child
  ?father dbo:child ?williamIChild .
  FILTER (?grandChild = ?father)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?awardAwardeeBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  VALUES ?paulusPowellBirthPlace { 
    dbr:Paulus_Powell dbo:birthPlace ?paulusPowellBirthPlace .
  }
  
  # Step 2: Determine the region and administrative region of Paulus Powell's birth place
  OPTIONAL {
    ?paulusPowellBirthPlace dbo:region ?region .
    ?region a dbo:AdministrativeRegion .
    
    # Step 3: Find the governor of that region
    ?region dbo:governor ?governor .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }
  
  # Step 4: Identify Vince Gilligan's award
  VALUES ?vinceGilliganAward { 
    dbr:Vince_Gilligan dbo:awardReceived ?vinceGilliganAward .
  }
  
  # Step 5: Determine the birth place of the awardee of the same award
  OPTIONAL {
    ?otherAwardee dbo:awardReceived ?vinceGilliganAward .
    ?otherAwardee dbo:birthPlace ?awardAwardeeBirthPlace .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
  OPTIONAL { 
    ?person dbo:nationality dbr:Russia .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  dbr:David_Paton dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist dbo:bandMember ?bandMember .
}
```",2,2,3,2,1,2,3,28,2,1,112,0.6666666666666666,0.017543859649122806,0.03418803418803419
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?album dbo:producer ?producer .
  FILTER (?album = dbr:Nothing_to_Gein)
  
  ?producer rdf:type dbo:Organization ;
            rdf:type dbo:Band .

  ?producer dbo:bandMember ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Shatrughan_Sinha dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  ?rulingParty dbo:locatedIn dbr:Westport,_Connecticut .
  ?rulingParty a dbo:PoliticalParty .
  
  OPTIONAL { 
    ?member dbo:member ?rulingParty .
    ?member a dbo:PoliticalParty, dbo:Organization .
    
    FILTER (?member != ?rulingParty)
  }
}
```",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find the person born as Harriette Arlene Lake
  ?person foaf:name ""Harriette Arlene Lake""@en .
  
  # Identify a landmark with the specified elevation and its ruling party
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)
  OPTIONAL {
    ?landmark dbp:country ?country .
    ?country dbo:rulingParty ?rulingParty .
  }
  
  # Find Roger Pryor (actor) and his spouse
  ?rogerPryor foaf:name ""Roger Pryor""@en ;
              rdf:type dbo:Actor .
  ?rogerPryor dbo:spouse ?person .

  # Ensure the person is a member of the ruling party in that location
  OPTIONAL {
    ?person dbo:memberOfParty ?rulingParty .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?warEvent WHERE {
  # Resource for Robert Calder
  dbr:Robert_Calder dbo:militaryUnit ?militaryForce .
  
  # Resource for the 30th (Cambridgeshire) Regiment of Foot
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedInWar ?warEvent .

  # Ensure Robert Calder was a commander in the war event
  OPTIONAL {
    dbr:Robert_Calder dbo:commanderOf ?warEvent .
  }

  # Filter to ensure military force is related to the same war event
  FILTER EXISTS { 
    ?militaryForce dbo:participatedInWar ?warEvent .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoName WHERE {
  ?character dbo:creator dbr:Walter_B._Gibson ;
             a dbo:FictionalCharacter ;
             dbo:fictionalWork dbr:The_Shadow .
  
  OPTIONAL { 
    ?character dbo:fictionalWork dbr:The_Shadow_Comics .
  }
  
  ?alterEgo dbo:alterEgoOf ?character ;
            dbo:name ?alterEgoName ;
            dbo:profession ?profession .

  FILTER EXISTS {
    ?profession rdfs:label ""Singer""@en
  }
}
```",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Tom_Phillips_(Royal_Navy_officer) dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInChief ?author ?spouse WHERE {
  VALUES ?event { dbr:Third_Taiwan_Strait_Crisis }
  
  # Find the commander-in-chief during the Third Taiwan Strait Crisis
  ?event dbo:commanderInChief ?commanderInChief .
  
  # Identify Hillary Clinton as the author of ""An Invitation to the White House""
  VALUES ?author { dbr:Hillary_Clinton }
  ?author dbo:birthPlace dbr:Chappaqua,_New_York ;
          dbo:spouse ?spouse ;
          dbo:work ?book .
  FILTER CONTAINS(LCASE(str(?book)), 'invitation to the white house')
  
  # Confirm Bill Clinton as the spouse of Hillary Clinton
  VALUES ?spouse { dbr:Bill_Clinton }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName ?commanderURL WHERE {
  dbr:French_Revolutionary_Wars dbo:commander ?commander .
  ?commander rdfs:label ?commanderName .
  FILTER (LANG(?commanderName) = 'en')
  BIND(<http://dbpedia.org/resource/Category:Commanders_of_the_French_Revolutionary_Wars> AS ?category)
  OPTIONAL {
    ?commander dbo:wikiPageWikiLink ?category .
  }
}
```",1,1,2,1,1,3,2,20,0,58,58,0.0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?davydovWar ?awardeeOf25War WHERE {
  # Wars associated with Alexander Lvovich Davydov
  OPTIONAL {
    dbr:Aleksandr_Lvovich_Davydov dbo:participatedInMilitaryConflict ?davydovWar .
  }
  
  # Placeholder for the awardee of 25, assuming a notable figure from around that time
  # This is speculative due to lack of specific information
  OPTIONAL {
    dbr:Notable_Figure_Year_25 dbo:participatedInMilitaryConflict ?awardeeOf25War .
  }
}
```

Note: The query includes a placeholder `dbr:Notable_Figure_Year_25` for the ""awardee of 25"" due to the lack of specific information. This would need to be replaced with an actual DBpedia resource if identified.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ebrahimAlkaziBirthPlace ?smitaPatilBirthPlace WHERE {
  dbr:Ebrahim_Alkazi dbo:birthPlace ?ebrahimAlkaziBirthPlace .
  dbr:Smita_Patil dbo:birthPlace ?smitaPatilBirthPlace .
}
```",2,2,3,1,2,3,2,20,1,3,0,0.25,1.0,0.4
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?santiagoMayor ?spainPrimeMinister ?galiciaLeaderOffice WHERE {
  # Tenant of Santiago de Compostela
  OPTIONAL { 
    dbr:Santiago_de_Compostela dbo:mayor ?santiagoMayor .
  }
  
  # Tenant of Spain
  OPTIONAL {
    dbr:Spain dbo:primeMinister ?spainPrimeMinister .
  }

  # Office of the leader in the 2009 Galician regional election
  OPTIONAL {
    ?galiciaLeader dbo:electedAs ?office ;
                  dbo:electionDate ?electionDate .
    FILTER (YEAR(?electionDate) = 2009 && CONTAINS(LCASE(STR(?office)), ""galicia""))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  VALUES ?battle { 
    dbr:Battle_of_Cape_Finisterre_(1805) 
  }
  
  ?battle dbo:militaryForce ?militaryForce .
  
  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }

  FILTER (?militaryForce IN (dbr:The_Triple_Alliance))
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          (dbo:playerFor|dbo:managerOf) ?team .
  
  # Find Marty Pollio's birthday
  dbr:Marty_Pollio dbo:birthday ?martyBirthday .

  # Find athletes born on the same day as Marty Pollio
  ?athlete dbo:birthday ?martyBirthday ;
           dbo:sport ?sport .

  # Ensure the person is also a teammate of Sergio Agüero
  ?team dbo:player ?sergioAgüero .
  FILTER (?sergioAgüero = dbr:Sergio_Agüero)
  
  # Link the athlete to the team and ensure it's the same as the first person's team
  FILTER(?athlete = ?person)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?battleCommander ?event ?awardee WHERE {
  # Battle of Fort Royal during the French campaign in Egypt and Syria
  VALUES ?battle { 
    dbr:Battle_of_Fort_Royal_(1794)
  }
  
  OPTIONAL {
    ?battle dbo:militaryForce ?battleMilitaryForce .
  }
  
  OPTIONAL {
    ?campaign dbo:commander ?battleCommander .
    FILTER (?campaign = dbr:French_campaign_in_Egypt_and_Syria)
  }

  # Event that is a societal event and has a military force
  ?event rdf:type dbo:SocietalEvent ;
         dbo:militaryForce ?militaryForce .

  # Awardee of Knight Commander of the Order of the Bath
  VALUES ?awardee { 
    dbr:John_Smith_Knight_Commander_of_the_Order_of_the_Bath # Placeholder for actual resource
  }
  
  OPTIONAL {
    ?event dbo:participant ?awardee .
  }

  FILTER (?militaryForce = ?battleMilitaryForce)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Roy_Barreras dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?honoraryTitle ?notableAttribute WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle ?honoraryTitle .
  FILTER(CONTAINS(LCASE(?honoraryTitle), ""commander of the order of the british empire"")).
  
  OPTIONAL {
    ?person dbo:notableAttribute ?notableAttribute .
  }
}
```",2,2,3,2,1,3,2,20,0,0,162,0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInSeries ?teamOfPerson WHERE {
  # Find the player in ""All or Nothing: Manchester City"" who is an actor and soccer player
  ?playerInSeries dbo:actor dbr:All_or_Nothing:_Manchester_City .
  ?playerInSeries dbo:soccerPlayer true .

  # Check if this player is also an athlete
  OPTIONAL { ?playerInSeries dbo:athlete true . }

  # Find a person born on 1979-11-03 who is both a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date .
  ?person dbo:soccerPlayer true .
  ?person dbo:manager true .

  # Retrieve the team associated with this person
  ?person dbo:team ?teamOfPerson .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalGroup WHERE {
  ?song dbo:title ""Burnt by the Sun"" .
  ?song dbo:musicalArtist ?musicalGroup .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:manager true .
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1979 && MONTH(?birthDate) = 11 && DAY(?birthDate) = 3)
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandURL ?singerRole WHERE {
  VALUES ?bobThompson { 
    dbr:Bob_Thompson_(musician) 
  }
  
  OPTIONAL {
    ?bobThompson dbo:associatedBand ?band .
    BIND(STR(?band) AS ?bandURL)
  }

  OPTIONAL {
    ?bobThompson dbo:singer ?singerRole .
    BIND(STR(?singerRole) AS ?singerRole)
  }
}
```",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?birthName WHERE {
  # Find associated musical artists of Bobby Shmurda
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .
  
  # For each associated artist, find their band members who are also musical artists
  ?associatedArtist dbo:associatedMusicalArtist ?bandMember .
  FILTER (isLiteral(?bandMember) = false) # Ensure it's a resource, not a literal

  # Get the birth name of Bobby Shmurda
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Ensure the band member is born with the same birth name as Bobby Shmurda
  ?bandMember dbo:birthName ?birthName .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:author dbr:Bill_Clinton .
  OPTIONAL { 
    ?work dbo:workExample ?example .
    FILTER EXISTS { ?example dbo:commander dbr:Gulf_War }
  }
  OPTIONAL {
    ?work dbo:spouse dbr:Hillary_Clinton .
  }
}
```",6,11,7,3,3,3,3,71,0,7,1,0.0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Athens dbo:place ?location .
  ?location dbo:partOf ?war .
  
  dbr:Napoleon_Zervas dbo:leader ?faction .
  ?faction dbo:partOf ?war .

  FILTER(?war = dbr:Greek_Civil_War)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warURL WHERE {
  VALUES ?napoleon { dbr:Napoleon_Bonaparte }
  VALUES ?zervas { dbr:Napoleon_Zervas }

  OPTIONAL {
    ?napoleon dbo:participatedIn ?war .
    ?war a dbo:War .
    BIND(STR(?war) AS ?warURL)
  }
  
  OPTIONAL {
    ?zervas dbo:participatedIn ?war .
    ?war a dbo:War .
    FILTER NOT EXISTS { ?napoleon dbo:participatedIn ?war } # Ensure it's not the same war as Napoleon
    BIND(STR(?war) AS ?warURL)
  }
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  ?edwardStanley dbo:parent ?parent .
  
  ?parent a dbo:Politician ;
          dbo:officeHolder ?office .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonPerson WHERE {
  # Find band members of Uncle Murda
  OPTIONAL {
    dbr:Uncle_Murda dbo:associatedBandMember ?bandMember .
    BIND(?bandMember AS ?commonPerson)
  }
  
  # Find person born as Jo-Vaughn Virginie Scott (Bobby Shmurda's birth name)
  OPTIONAL {
    dbr:Bobby_Shmurda dbo:birthName ""Jo-Vaughn Virginie Scott""@en .
    BIND(dbr:Bobby_Shmurda AS ?commonPerson)
  }
  
  # Filter to find common person
  FILTER(?bandMember = dbr:Bobby_Shmurda)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tomSawyerProducer ?claimToFameProducer WHERE {
  # Find the producer of The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?tomSawyerProducer .

  # Find the actor in High Society Blues
  dbr:High_Society_Blues dbo:actor ?highSocietyActor .

  # Find a claim to fame of that actor, focusing on movies or works they are known for
  OPTIONAL {
    ?claimToFameWork dbo:actor ?highSocietyActor .
    ?claimToFameWork dbo:producer ?claimToFameProducer .
  }

  FILTER EXISTS { ?claimToFameWork rdf:type dbo:Film . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?awardeeAward WHERE {
  VALUES ?institution { 
    dbr:Royal_Swedish_Academy_of_Sciences 
  }
  
  ?institution dbo:award ?nobelPrizeInPhysics .
  ?nobelPrizeInPhysics a dbo:NobelPrizeInPhysics .

  OPTIONAL {
    ?show dbo:hostedBy ?institution .
    ?awardeeAward dbo:recipient ?nobelPrizeRecipient .
    ?nobelPrizeRecipient dbo:award ?nobelPrizeInPhysics .
  }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?charlestonEntity WHERE {
  # Find the award associated with Quincy Adams Gillmore
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
  
  # Identify the awardee of that award and their force
  ?award dbo:recipient ?awardee .
  ?awardee dbo:militaryForce ?force .

  # Find an entity in Charleston, South Carolina
  ?charlestonEntity dbo:location dbr:Charleston,_South_Carolina .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:depicts ?tvShow .
  ?war dbo:genre ?societalEvent .
  ?militaryForce dbo:participatedInBattle dbr:Battle_of_Vienna .
  ?militaryForce dbo:commander ?commander .
  
  ?yuriiKhmelnytsky dbo:successor ?commander .
  FILTER (?yuriiKhmelnytsky = dbr:Yurii_Khmelnytsky)
  
  OPTIONAL {
    ?writer dbo:work dbr:Always_the_Love_Songs .
    ?commander dbo:reference ?writer .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  VALUES ?annSothernBirthName { dbr:Ann_Sothern }
  
  # Find the ruling party in Central, Louisiana
  SELECT DISTINCT ?rulingParty WHERE {
    ?centralLocation dbo:country dbr:United_States .
    ?centralLocation dbo:stateOrProvince dbr:Louisiana .
    ?centralLocation dbo:city ""Central""^^xsd:string .
    ?currentElection dbo:winner ?party .
    ?party rdfs:label ?rulingPartyLabel .
    FILTER (CONTAINS(LCASE(?rulingPartyLabel), ""central, louisiana""))
  }
  
  # Actor of ""1,000 Dollars a Minute""
  SELECT DISTINCT ?actor WHERE {
    ?movie dbo:title ""1,000 Dollars a Minute"" .
    ?movie dbo:starring ?actor .
  }
  
  # Spouse of the actor
  ?actor dbo:spouse ?person .
  
  # Person born as Ann Sothern's birth name and party member
  ?person dbo:birthName ?annSothernBirthName .
  ?person dbo:partyMember ?rulingParty .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?fabulousThunderbirdsURL WHERE {
  VALUES ?nickCurranURL { 
    dbr:Nick_Curran 
  }
  OPTIONAL {
    ?nickCurranURL dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
  
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }

  FILTER (?nickCurranAssociatedArtist = ?fabulousThunderbirdsURL)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personBirthName WHERE {
  ?gs9Member dbo:member dbr:GS9 .
  ?gs9Member dbo:associatedMusicalArtist ?artist1 .
  
  ?artist2 dbo:associatedMusicalArtist ?artist1 .
  ?artist2 dbo:birthPlace dbr:Florida .

  ?artist2 dbo:birthName ?personBirthName .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?band WHERE {
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1945 && MONTH(?date) = 3 && DAY(?date) = 30)
  
  ?membership dbo:bandMemberOf ?band ;
              dbo:member ?person .
}
```",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerRole ?teamNickname WHERE {
  VALUES ?aleksandrFilimonov { dbr:Aleksandr_Filimonov_(footballer) }
  OPTIONAL {
    ?aleksandrFilimonov dbo:role ?playerRole .
  }
  
  VALUES ?russiaNationalTeam { dbr:Russia_national_football_team }
  OPTIONAL {
    ?russiaNationalTeam dbo:nickname ?teamNickname .
  }

  FILTER (?teamNickname = ""Sbornaya"")
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?bobThompson a dbo:Musician ;
               foaf:name ""Bob Thompson"" .
  ?bobThompson dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowProfession ?fredericBouralyProfession WHERE {
  # Find the profession of The Shadow's alter ego
  OPTIONAL {
    ?alterEgo dbo:alterEgo dbr:The_Shadow .
    ?alterEgo dbo:occupation ?shadowProfession .
  }
  
  # Find the profession of Frédéric Bouraly
  dbr:Frédéric_Bouraly dbo:occupation ?fredericBouralyProfession .
}
```",4,4,5,2,2,2,3,28,0,1,4210,0.0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandURL WHERE {
  dbr:Kim_Wilson dbo:associatedBand ?bandURL .
}
```",3,3,4,3,1,3,3,71,1,4,9,0.2,0.1,0.13333333333333333
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bestPictureWinner WHERE {
  ?awardEvent a dbo:Award ;
              dbo:number ""25""^^xsd:int ;
              dbo:category dbr:Academy_Award_for_Best_Picture .
  ?awardEvent dbo:winner ?bestPictureWinner .
}
```",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Francis_I,_Duke_of_Lorraine dbo:child ?child .
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgo WHERE {
  VALUES ?film { 
    dbr:The_Adventures_of_Tom_Sawyer_(1938_film) 
  }
  
  ?film dbo:producer ?producer .
  
  OPTIONAL {
    dbr:Kent_Allard dbo:alterEgo ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  ?decedent dbo:deathPlace dbr:Los_Angeles .
  ?movie dbo:starring ?actor .
  ?decedent dbo:actedIn ?movie .
}
```",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorURL ?militaryConflictURL ?writerOfLoveSongs WHERE {
  # Michał Kazimierz Pac as a commander in a military conflict
  ?militaryConflict dbo:commander dbr:Mikołaj_Kazimierz_Pas .
  
  # Successor of the commander who is also a politician and office holder
  OPTIONAL { 
    ?successor dbo:successor dbr:Mikołaj_Kazimierz_Pas .
    ?successor rdf:type dbo:Politician ;
               dbo:officeHolder ?office .
  }
  
  # Reference to the writer of ""Always the Love Songs""
  ?writerOfLoveSongs dbo:work dbr:Always_the_Love_Songs .

  FILTER (?successor = ?militaryConflictURL)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?dawidResidenceCountry ?suvorovWarCountry WHERE {
  # Dawid Olejniczak's residence country
  OPTIONAL {
    dbr:Dawid_Olejniczak dbo:residence ?dawidResidence .
    ?dawidResidence dbo:country ?dawidResidenceCountry .
    FILTER (isBlank(?dawidResidence) || !bound(?dawidResidence)) # Handle cases where residence might not be directly linked
  }
  
  # Alexander Suvorov's war country
  OPTIONAL {
    ?suvorovWar dbo:participatedIn ?suvorov .
    ?suvorov dbr:Alexander_Suvorov .
    ?suvorov dbo:placeOfBirth ?warPlace .
    ?warPlace dbo:country ?suvorovWarCountry .
  }
  
  # Ensure both are countries
  FILTER (?dawidResidenceCountry != '' && ?suvorovWarCountry != '')
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  VALUES ?club { 
    dbr:Hartlepool_United_F.C.
  }
  ?club dbo:manager ?manager .
  ?manager dbo:nativePlace dbr:Bristol .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?pacely { 
    dbr:Pacely # Replace with the correct resource if available
  }
  
  ?pacely dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist dbo:profession dbr:Musician .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Step 1: Find Charles Martel of Anjou's parent
  ?charlesMartelParent dbo:child dbr:Charles_Martel_of_Anjou .
  
  # Step 2: Identify Philip I, Prince of Taranto's father and spouse
  ?philipIFather dbo:child dbr:Philip_I,_Prince_of_Taranto .
  ?philipIFatherSpouse dbo:spouse ?philipIFather .

  # Step 3: Find Stephen V of Hungary's predecessor (likely his father)
  ?stephenVPredecessor dbo:child dbr:Stephen_V_of_Hungary .

  # Step 4: Identify the child of the child of the predecessor
  ?predecessorChild dbo:child ?stephenVPredecessor .
  ?grandchildOfPredecessor dbo:child ?predecessorChild .

  # Step 5: Ensure the individual is royalty
  ?individual a dbo:Monarch ;
              (dbo:parent|dbo:spouse) ?charlesMartelParent ;
              (dbo:parent|dbo:spouse) ?philipIFatherSpouse ;
              (dbo:child|dbo:parent) ?grandchildOfPredecessor .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?congressionalAward ?gillmoreRecipient ?militaryForce WHERE {
  # Find the award given by the United States Congress
  VALUES ?congressionalAward { 
    dbr:Congressional_Gold_Medal 
  }
  
  # Find the recipient of the Gillmore Medal and their associated military force
  ?gillmoreRecipient dbo:awardedBy dbr:Gillmore_Medal .
  ?gillmoreRecipient dbo:militaryForce ?militaryForce .

  # Check if there is any connection between the Congressional award and the Gillmore Medal recipient
  OPTIONAL {
    ?congressionalAwardRecipient dbo:recipient ?gillmoreRecipient .
  }
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hostURL WHERE {
  dbr:Nobel_Prize_in_Physics dbo:awardedBy ?host .
  ?host a dbo:EducationalInstitution .
  BIND(?host AS ?hostURL)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfRoyalParent WHERE {
  # Step 1: Identify Ferdinand Albert II, Duke of Brunswick-Lüneburg
  VALUES ?ferdinandAlbertII { dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg }

  # Step 2: Find his child
  ?child dbo:childOf ?ferdinandAlbertII .

  # Step 3: For each child, find their parent and check if they are royalty
  OPTIONAL {
    ?parent dbo:parentOf ?child .
    ?parent dbo:royaltyStatus ?royaltyStatus .
    FILTER(?royaltyStatus = ""Royal"")
    
    # Step 4: Find the child of this royal parent
    ?childOfRoyalParent dbo:childOf ?parent .
  }
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberName WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  ?person dbo:bandMember ?fabulousThunderbirdsURL .
  ?person dbo:dateOfBirth ?birthDate .
  ?person rdf:type dbo:MusicalArtist .

  FILTER (STR(?birthDate) = ""1945-03-30T00:00:00Z""^^xsd:dateTime)
  
  BIND(STR(?person) AS ?bandMemberName)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:James_Plotkin dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceSettlement WHERE {
  # Antonios Varthalitis and his death place
  ?varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbp:PopulatedPlace .

  # Find an award related to war given in 1930 or contextually relevant
  ?award dbo:awardedFor ?war .
  ?award dbo:dateAwarded ?date .
  FILTER (YEAR(?date) = 1930)

  # Link the death place with the war through the awardee
  ?varthalitis dbo:associatedWith ?war .

}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?birthName ?partyMember WHERE {
  VALUES ?rogerPryor { dbr:Roger_Pryor_(actor) }
  
  ?rogerPryor dbo:spouse ?spouse .
  
  OPTIONAL {
    ?annSothern dbo:birthName ?birthName .
    FILTER (?annSothern = ?spouse)
    VALUES ?annSothern { dbr:Ann_Sothern }
  }

  OPTIONAL {
    ?partyMember dbo:partyMember ?spouse .
    FILTER (?partyMember = dbr:Republican_Party_(United_States))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  VALUES ?paulusPowellBirthPlace { 
    dbr:Paulus_Powell dbo:birthPlace ?paulusPowellBirthPlace .
  }
  
  # Step 2: Ensure the birth place is a region and an administrative region
  ?paulusPowellBirthPlace rdf:type dbo:Region ;
                          rdf:type dbo:AdministrativeRegion .

  # Step 3: Find the governor of this region
  OPTIONAL {
    ?paulusPowellBirthPlace dbo:governor ?governor .
  }
  
  # Step 4: Get the birth place of the governor
  OPTIONAL {
    ?governor dbo:birthPlace ?governorBirthPlace .
  }
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rodArgentProfession ?$pacelyAssociatedArtist WHERE {
  # Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?rodArgentProfession .
  
  # $pacely (Darryl Paa Kwesi Bannerman-Martin) and his associated musical artist
  VALUES ?$pacely { 
    dbr:$pacely 
  }
  OPTIONAL {
    ?$pacely dbo:associatedMusicalArtist ?$pacelyAssociatedArtist .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace WHERE {
  ?movie dbo:country dbr:India .
  ?movie dbo:starring ?person .
  ?person foaf:name ""Dipankar De""@en .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?actorBirthPlace .
  }
}
```",3,5,4,3,1,3,2,20,0,0,13,0,0.0,0
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Albrecht,_Duke_of_Württemberg dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  dbr:Universidade_Federal_da_Paraíba dbo:foundingDate ?foundingDate .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthPlace dbr:Central_Region_(Ghana) .
  ?person a dbo:Artist .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:wikiPageRedirects ?tvShow .
  ?war dbo:wikiPageDisambiguates ?event .
  ?war dbo:commander ?commander .

  ?battle dbo:militaryForce ?militaryForce .
  FILTER (?battle = dbr:Battle_of_Vienna)

  OPTIONAL {
    ?commander foaf:name ""George Ducas"" .
  }

  FILTER EXISTS { ?tvShow rdf:type dbo:TelevisionSeries }
  FILTER EXISTS { ?event rdf:type dbo:SocietalEvent }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Stephen V of Hungary's predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Check if the predecessor has a child who is royalty
  ?predecessor dbo:child ?child .
  OPTIONAL { 
    ?child dbo:title ?title .
  }
  FILTER EXISTS {
    ?child dbo:title ?title .
  }
}
```",2,3,3,2,1,3,3,71,2,1,1,0.6666666666666666,0.6666666666666666,0.6666666666666666
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInBirthPlace WHERE {
  # Toyotomi Hideyoshi's child
  dbr:Toyotomi_Hideyoshi dbo:child ?toyotomiChild .
  
  # War involving Toyotomi Hideyoshi's child
  ?toyotomiChild dbo:participatedIn ?war .

  # Yamaza Enjirō's birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Entity in the birth place of Yamaza Enjirō
  ?entityInBirthPlace dbo:locatedIn ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lamontCranston ?actorPolitician WHERE {
  # Find Lamont Cranston as The Shadow's alter ego
  VALUES ?lamontCranston { 
    dbr:Lamont_Cranston 
  }
  
  # Find actors in ""Ab Kya Hoga"" who are politicians
  ?actor dbo:profession dbr:Politician .
  ?actor dbo:actedIn dbr:Ab_Kya_Hoga .

  # Check if there is any overlap (though unlikely, we check for completeness)
  FILTER (?lamontCranston = ?actorPolitician)
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  VALUES ?war1 { dbr:Russo-Polish_War_(1654–1667) }
  VALUES ?war2 { dbr:Great_Turkish_War }

  ?commander dbo:commanderOf ?war1 .
  ?commander dbo:commanderOf ?war2 .

  OPTIONAL {
    ?commander dbo:successor ?successor .
  }

  ?successor a dbo:Politician ;
            dbo:officeHolder ?office .

  FILTER NOT EXISTS { ?otherCommander dbo:commanderOf ?war1 . }
  FILTER NOT EXISTS { ?otherCommander dbo:commanderOf ?war2 . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Miguel_Maura dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:George_Pickett dbo:participatedIn ?war .
  FILTER (strstarts(str(?war), ""dbr:The_American_Civil_War""))
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?rogerII { dbr:Roger_II_of_Sicily }
  VALUES ?williamII { dbr:William_II_of_Sicily }

  ?child dbo:parent ?rogerII .
  OPTIONAL { ?child dbo:child ?williamII . }
  FILTER (?child != ?rogerII && ?child != ?williamII)
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherURL WHERE {
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }
  ?baedaMaryamI dbo:father ?father .
  BIND(STR(?father) AS ?fatherURL)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherURL WHERE {
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }
  ?baedaMaryamI dbo:father ?father .
  OPTIONAL {
    dbr:Dawit_I dbo:child ?father .
  }
  BIND(?father AS ?fatherURL)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Identify Saw Min Phyu and their spouse
  dbr:Saw_Min_Phuu dbo:spouse ?spouse .
  
  # Find the child of the spouse who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Find the predecessor of this royal child
  ?royalChild dbo:predecessor ?predecessor .

  # Identify Saw Min Hla and their child
  dbr:Saw_Min_Hla dbo:child ?sawMinHlaChild .

  # Match the predecessor with the child of Saw Min Hla
  FILTER (?predecessor = ?sawMinHlaChild)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tripleXsURL WHERE {
  VALUES ?tripleXsURL { 
    dbr:The_Triple_X's 
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfSawMinHla WHERE {
  # Step 1: Identify Saw Shwe Khet
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }

  # Step 2: Find the child of Saw Shwe Khet who is royalty
  ?royalChild dbo:childOf ?sawShweKhet .
  ?royalChild rdf:type dbpedia-owl:Monarch .

  # Step 3: Identify the father of this royal child
  ?father dbo:spouse ?mother .
  ?royalChild dbo:parent ?father ;
              dbo:parent ?mother .

  # Step 4: Find the spouse of this father
  ?spouse dbo:spouse ?father .

  # Step 5: Identify the child of Saw Min Hla and the spouse from step 4
  VALUES ?sawMinHla { dbr:Saw_Min_Hla }
  ?childOfSawMinHla dbo:parent ?sawMinHla ;
                   dbo:parent ?spouse .

  # Step 6: Filter for royalty
  ?childOfSawMinHla rdf:type dbpedia-owl:Monarch .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorOfChild ?spouse WHERE {
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }
  
  OPTIONAL {
    ?child dbo:parent ?sawShweKhet .
    ?child dbo:predecessor ?predecessorOfChild .
  }

  OPTIONAL {
    ?sawShweKhet dbo:spouse ?spouse .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?artist a dbo:Artist ;
          dbo:musicalArtist true ;
          dbo:nativePlace dbr:London .
  
  ?movie dbo:workType dbo:TelevisionShow ;
         dbo:starring dbr:Vera_Lynn ;
         dbo:author ?artist .

  ?artist rdfs:subClassOf+ ?parent .
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find the resource for the 2003 Madrid City Council election
  ?election dbo:electionYear ""2003"" ;
            dbo:place dbr:Madrid_City_Council_Elections .

  # Identify the office holder or leader of that election
  ?officeHolder dbo:officeHolderOf ?election .
  
  # Get the residence associated with this person
  ?officeHolder dbo:residence ?residence .

  # Determine who is the tenant (resident) of that residence
  ?residence dbo:resident ?tenant .
}
```",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vflBochumManager ?letschManagedTeam WHERE {
  # Find the manager of VfL Bochum during the 2007-08 season
  ?vflBochumSeason dbo:sportsTeam dbr:VfL_Bochum ;
                   dbo:season ""2007–08""^^xsd:string .
  
  ?vflBochumSeason dbo:manager ?vflBochumManager .

  # Find the team managed by Thomas Letsch that is a soccer club, sports club, and organization
  ?letschManagedTeam dbo:manager dbr:Thomas_Letsch ;
                     rdf:type dbo:SoccerClub ;
                     rdf:type dbo:SportsTeam ;
                     rdf:type dbo:Organization .
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  ?person dbo:participatedIn dbr:Civil_War_in_the_Central_African_Republic .
  ?person dbo:officeHolder ?office .
  ?person dbo:politicalPartyMember ?party .
  
  FILTER EXISTS { ?office dbo:isClassOf* dbo:MilitaryCommander } # Assuming 'MilitaryCommander' is a relevant class
}
```",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?profession WHERE {
  VALUES ?bobThompson { dbr:Bob_Thompson_(musician) }
  
  ?bobThompson dbo:band ?band .
  ?bobThompson dbo:profession ?profession .

  FILTER CONTAINS(LCASE(?profession), ""singer"")
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader ?santiagoMayor WHERE {
  # Find the leader of the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  ?officeLeader dbo:officeHolder ?election .

  # Find the current mayor of Santiago de Compostela
  dbr:Santiago_de_Compostela dbo:mayor ?santiagoMayor .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildOfPhilipp ?predecessor WHERE {
  # Find the child of Duke Philipp of Württemberg
  ?philippChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Find the grandchild (child of the child) of Duke Philipp
  ?grandchildOfPhilipp dbo:parent ?philippChild .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrechtChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Determine the predecessor of the child of Philipp Albrecht
  ?predecessor dbo:succedent ?philippAlbrechtChild .

  # Ensure that the grandchild of Duke Philipp is the same as the predecessor
  FILTER (?grandchildOfPhilipp = ?predecessor)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?petroPartyURL ?barrerasPartyURL WHERE {
  OPTIONAL {
    dbr:Gustavo_Petro dbo:memberOf ?petroParty .
    BIND(?petroParty AS ?petroPartyURL)
  }
  OPTIONAL {
    dbr:Roy_Barreras dbo:memberOf ?barrerasParty .
    BIND(?barrerasParty AS ?barrerasPartyURL)
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInJapan ?birthPlace WHERE {
  VALUES ?chiekoAsakawa { dbr:Chieko_Asakawa }
  
  OPTIONAL {
    ?chiekoAsakawa dbo:country dbr:Japan .
    ?chiekoAsakawa dbo:associatedWith ?entityInJapan .
  }

  ?chiekoAsakawa dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChildFather WHERE {
  # Identify Philip I of Castile and Isabella of Austria
  dbr:Philip_I_of_Castile dbo:child ?isabella .
  dbr:Isabella_of_Austria dbo:father ?philipI .

  # Find the child who is royalty
  ?royalChild dbo:childOf ?philipI ;
              rdf:type dbo:Monarch .

  # Ensure the royal child is also a child of Isabella of Austria
  ?isabella dbo:child ?royalChild .

  # Get the father of this royal child
  ?royalChild dbo:father ?royalChildFather .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName WHERE {
  ?award dbo:type dbo:MilitaryAward .
  OPTIONAL { 
    ?award dbo:dateReceived ?date .
    FILTER (YEAR(?date) = 30)
  }
}
```",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Martin of Aragon
  VALUES ?martin { dbr:Martin_of_Aragon }

  # Step 2: Find his parent(s)
  ?parent dbo:child ?martin .

  # Step 3: For each parent, find their father
  ?parent dbo:father ?father .

  # Step 4: Check if the father is a member of royalty
  ?father rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?actor1 ?actor2 WHERE {
  # Assuming ""and"" refers to a specific movie, e.g., ""The Avengers""
  VALUES ?movieURL { 
    dbr:The_Avengers_(2012_film) 
  }
  
  OPTIONAL {
    ?movieURL dbo:starring ?actor1 .
  }

  OPTIONAL {
    ?movieURL dbo:starring ?actor2 .
  }

  FILTER (?actor1 != ?actor2)

  UNION

  # Query for the film ""ATL""
  VALUES ?atlMovieURL { 
    dbr:ATL_(film) 
  }
  
  OPTIONAL {
    ?atlMovieURL dbo:starring ?atlActor .
  }
}
```",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent ?predecessor WHERE {
  # Find Min Hla Htut of Pyakaung's parent
  ?minHlaHtut dbr:Pyakaung dbo:parent ?parent .
  
  # Find the child of Min Hla Htut's parent
  ?parent dbo:child ?childOfParent .

  # Find Saw Shwe Khet's child
  ?sawShweKhet dbo:child ?childOfSawShweKhet .

  # Find the predecessor of Saw Shwe Khet's child
  ?childOfSawShweKhet dbo:predecessor ?predecessor .
  
  FILTER (?minHlaHtut = dbr:Min_Hla_Htut_of_Pyakaung)
  FILTER (?sawShweKhet = dbr:Saw_Shwe_Khet)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorManager ?vitesse2021Manager WHERE {
  # Manager of VfL Bochum in the successor season of 2006–07
  OPTIONAL {
    dbr:VfL_Bochum dbo:participatedInSportSeason [
      dbo:sportLeague dbr:Bundesliga ;
      dbo:season ?successorSeason .
    ] .
    ?team dbo:manager ?successorManager .
    FILTER (?team = dbr:VfL_Bochum && ?successorSeason > 2006-07)
  }

  # Manager of SBV Vitesse in the 2020–21 season
  OPTIONAL {
    dbr:SBV_Vitesse dbo:participatedInSportSeason [
      dbo:sportLeague dbr:Eredivisie ;
      dbo:season ""2020–21""^^xsd:string .
    ] .
    ?vitesseTeam dbo:manager ?vitesse2021Manager .
    FILTER (?vitesseTeam = dbr:SBV_Vitesse)
  }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?atlActor ?shadowAlterEgo ?shelbyOaksActor WHERE {
  VALUES ?atlFilm { dbr:ATL_(film) }
  VALUES ?shelbyOaksFilm { dbr:Shelby_Oaks }

  # Actor of ATL
  ?atlFilm dbo:actor ?atlActor .

  # Professional alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  
  # Actor of Shelby Oaks
  ?shelbyOaksFilm dbo:actor ?shelbyOaksActor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardName WHERE {
  ?award a dbo:Award .
  ?award dbo:country dbr:United_States_of_America .
  ?award dbo:settlementType ?settlementType .
  FILTER EXISTS { ?settlementType rdfs:subClassOf* dbo:Settlement }
  
  ?recipient dbo:placeOfBirth ?birthPlace .
  ?birthPlace rdfs:label ""New York""@en .

  ?recipient dbo:receivedAward ?award .
}
```",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?maryElphinstone { dbr:Mary_Elphinstone,_Lady_Elphinstone }
  
  ?maryElphinstone dbo:parent ?parent .
  ?parent dbo:nativePlace dbr:Middlesex .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  # Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .
  
  # Ensure the associated artist is a band and find its members who are also musical artists
  ?associatedArtist dbo:member ?bandMember .
  FILTER EXISTS { ?bandMember a dbo:Band . }
  FILTER EXISTS { ?bandMember a dbo:MusicalArtist . }

  # Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda foaf:name ?birthName .

  # Find a person with the same birth name and native of Florida
  ?person foaf:name ?birthName .
  ?person dbo:nativePlace dbr:Florida .
  
  # Ensure the band member is the same as this person
  FILTER (?bandMember = ?person)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  dbr:Universidade_de_S%C3%A3o_Paulo dbo:foundingDate ?foundingDate .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentLocation WHERE {
  ?person a dbo:Artist ;
          a dbo:MusicalArtist .
  
  ?person dbo:nativePlace ?location .
  
  ?location a dbo:Settlement ;
            dbo:country dbr:England .

  OPTIONAL { 
    ?location dbo:parentCountryOrTerritory ?parentLocation .
  }
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  VALUES ?election { 
    dbr:2003_Madrid_City_Council_election 
  }
  ?election dbo:leader ?leader .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?awardeeBirthPlace ?ceceBellBirthPlace WHERE {
  # Governor of Virginia
  OPTIONAL {
    ?governor a dbo:Governor ;
              dbo:stateOrTerritory dbr:Virginia ;
              dbo:birthPlace ?governorBirthPlace .
  }
  
  # Awardee related to Vince Gilligan
  OPTIONAL {
    ?award dbr:Vince_Gilligan dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }

  # Cece Bell
  OPTIONAL {
    dbr:Cecilie_Ann_Bell_Campbell dbo:birthPlace ?ceceBellBirthPlace .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Melbourne .
}
```",1,1,2,1,1,2,2,9,809,0,0,1.0,1.0,1.0
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamManager WHERE {
  # Step 1: Identify the leader of West Germany
  VALUES ?westGermanyLeader { dbr:Helmut_Kohl } .

  # Step 2: Determine the country associated with this leader
  ?westGermanyLeader dbo:nationality ?country .
  
  # Step 3: Find a sports manager born on 1968-08-26 in that country
  ?sportsManager dbo:birthDate ""1968-08-26""^^xsd:date ;
                dbo:nationality ?country ;
                rdf:type dbo:SportsManager .

  # Step 4: Identify the soccer club season, sports season, and sports team season managed by this person
  OPTIONAL {
    ?team dbo:manager ?sportsManager .
  }
  
  FILTER EXISTS { ?team a dbo:SoccerClubSeason . } 
  FILTER EXISTS { ?team a dbo:SportsTeamSeason . }
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?fictionalCharacter WHERE {
  VALUES ?film { dbr:A_Star_Is_Born_(1937_film) }
  
  # Find the producer of the film
  ?film dbo:producer ?producer .
  
  OPTIONAL {
    # Check for any fictional characters associated with Kent Allard
    dbr:Kent_Allard dbo:fictionalCharacter ?fictionalCharacter .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  BIND (IF(?person = dbr:Vince_Gilligan, ""Vince Gilligan"", IF(?person = dbr:Cecily_Bell, ""Cece Bell"", ""Glenn Youngkin"")) AS ?name)
  
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,1,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office WHERE {
  VALUES ?party { dbr:Spanish_Socialist_Workers'_Party }
  
  ?party dbo:leader ?leader .
  OPTIONAL {
    ?leader dbo:officeHolder ?office .
    FILTER EXISTS { 
      ?office dbo:startDate ?start . 
      ?office dbo:endDate ?end .
      FILTER (?start <= ""2009-12-31""^^xsd:date && (?end >= ""2009-01-01""^^xsd:date || NOT EXISTS { ?office dbo:endDate ?end }))
    }
  }
  
  OPTIONAL {
    ?leader dbo:country dbr:Spain .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherURL WHERE {
  VALUES ?charlesI { dbr:Charles_I_of_Hungary }
  
  ?charlesI dbo:father ?father .
  ?father a dbo:Monarch ;
          rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""king"") || CONTAINS(LCASE(?name), ""queen""))
  
  BIND(STR(?father) AS ?fatherURL)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander WHERE {
  # Find the writer of ""Always the Love Songs""
  ?album dbo:title ""Always the Love Songs"" ;
         dbo:creator ?writer .
  
  # Find commanders in the Great Turkish War
  ?war dbo:name ?warName .
  FILTER(CONTAINS(LCASE(?warName), ""great turkish war""))
  ?commander dbo:commanded ?army ;
             dbo:participatedIn ?war .

  # Ensure the same person is both writer and commander
  FILTER (?writer = ?commander)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberDavidPaton ?bandMemberStuartMcbeathTosh WHERE {
  # Find band members of David Paton's associated musical artist(s)
  OPTIONAL {
    dbr:David_Paton dbo:associatedMusicalArtist ?associatedArtist .
    ?associatedArtist dbo:bandMember ?bandMemberDavidPaton .
  }
  
  # Find band members of Stuart McBeath Tosh
  OPTIONAL {
    dbr:Stuart_McBeath_Tosh dbo:bandMember ?bandMemberStuartMcbeathTosh .
  }
}
```",4,5,5,2,2,2,3,28,0,3,2,0.0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorDeathPlace ?carolynJonesDeathPlace WHERE {
  # Find the actor of ""The Sky Ranger"" (1928 film)
  OPTIONAL {
    dbr:The_Sky_Ranger_(film) dbo:actor ?actor .
    ?actor dbo:deathPlace ?actorDeathPlace .
  }
  
  # Find the death place of Carolyn Jones
  OPTIONAL {
    dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (CONTAINS(LCASE(?childName), ""king"") || CONTAINS(LCASE(?childName), ""queen""))
}
```",3,4,4,3,1,3,2,20,0,1,17,0.0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award ;
         dbo:year ""1958""^^xsd:gYear ;
         dbo:recipient ?recipient .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?myatHponePyo dbo:father ?father .
  ?father a dbo:RoyalFamilyMember ;
          dbo:spouse ?spouse .

  OPTIONAL { 
    ?minHlaHtut dbo:parent ?parentMinHlaHtut .
  }

  OPTIONAL {
    ?sawShweKhetChild dbo:childOf dbr:Saw_Shwe_Khet .
    ?predecessor dbo:succeededBy ?sawShweKhetChild .
  }

  FILTER (?father = ?parentMinHlaHtut && ?father = ?predecessor)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfAdministration WHERE {
  VALUES ?psoe { dbr:Spanish_Socialist_Workers'_Party }
  VALUES ?feijooOffice { dbr:President_of_the_Galician_Government }

  ?office dbo:officeHolder ?feijoo .
  ?feijoo foaf:name ""Alberto Núñez Feijóo""@en .

  OPTIONAL {
    ?administration dbo:associatedParty ?psoe .
    ?oppositionLeader dbo:officeHolder ?feijoo .
    FILTER (?administration != ?oppositionLeader)
  }

  BIND(?administration AS ?tenantOfAdministration)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaURL ?japanTimeZoneRegion WHERE {
  VALUES ?mitakaURL { 
    ?resource1 rdfs:label ""Mitaka""@en .
  }
  FILTER(CONTAINS(LCASE(str(?resource1)), ""mitaka""))
  
  OPTIONAL {
    dbr:Japan dbo:timeZone ?japanTimeZone .
    ?japanTimeZone dbo:region ?japanTimeZoneRegion .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

SELECT ?clubNickname WHERE {
  VALUES ?denisKolodin { dbr:Denis_Kolodin }
  VALUES ?aleksandrFilimonov { dbr:Aleksandr_Filimonov }

  ?denisKolodin dbo:playsFor ?soccerClub .
  ?aleksandrFilimonov dbo:playsFor ?soccerClub .

  OPTIONAL {
    ?soccerClub rdfs:label ?clubLabel .
    FILTER (lang(?clubLabel) = 'en')
  }
  
  OPTIONAL {
    ?soccerClub skos:altLabel ?clubNickname .
    FILTER (lang(?clubNickname) = 'en')
  }

  FILTER (?clubNickname != """")
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOfficeHolder ?miguelMauraOffice WHERE {
  ?commanderOfficeHolder a dbo:OfficeHolder ;
                        dbo:politicalParty ?party ;
                        dbo:office ?warCommanderOffice .
  
  ?warCommanderOffice dbo:relatedEvent dbr:Central_African_Republic_Civil_War .

  ?commanderOfficeHolder dbo:politician true .

  ?miguelMauraOffice a dbo:Office ;
                    dbo:holder dbr:Miguel_Maura .

  FILTER EXISTS { 
    ?commanderOfficeHolder dbo:office ?warCommanderOffice .
    ?miguelMauraOffice dbo:relatedEvent ?event .
    ?event rdfs:label ""Central African Republic Civil War""@en .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  VALUES ?hongKongC { dbr:Hong_Kong_C }
  
  ?hongKongC dbo:manager ?manager .
  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  VALUES ?frederick16 { dbr:Frederick_Stanley_16th_Earl_of_Derby }
  ?frederick16 dbo:parent ?father .
  
  OPTIONAL {
    ?edward17 dbo:parent ?father .
    FILTER (?edward17 = dbr:Edward_Stanley_17th_Earl_of_Derby)
    FILTER EXISTS { ?edward17 dbo:occupation dbr:Politician }
  }

  OPTIONAL {
    ?victor dbo:parent ?father .
    FILTER (?victor = dbr:Victor_Stanley_(Royal_Navy_officer))
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:child dbr:Francis_I,_Duke_of_Lorraine .
  
  # Parent of Francis I
  dbr:Francis_I,_Duke_of_Lorraine dbo:parent ?parent .

  # Spouse of the parent
  ?parent dbo:spouse ?spouse .

  # Ensure both parent and spouse are royalty or nobility
  OPTIONAL { ?parent dbo:royalTitle ?title1 . }
  OPTIONAL { ?spouse dbo:royalTitle ?title2 . }

  FILTER EXISTS { ?parent dbo:royalTitle ?title1 } .
  FILTER EXISTS { ?spouse dbo:royalTitle ?title2 } .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Chiang_Ching-kuo dbo:child ?child .
  ?child rdf:type dbo:Politician .
  ?child dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,3,2,0,0.6,1.0,0.7499999999999999
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Owner of USS Arcadia (ID-1605)
  ?arcadia dbo:owner ?owner .
  FILTER(STR(?arcadia) = ""USS_Arcadia_(ID-1605)"")

  # Author of Back to Work
  ?book dbo:author ?author .
  FILTER(STR(?book) = ""Back_to_Work_(2011_book)"")

  # Spouse of Hillary Clinton
  ?hillary dbo:spouse ?spouse .

  # Common entity among the three
  VALUES (?owner ?author ?spouse) {
    (dbr:John_D._Rockefeller_III dbr:Andrew_Carney dbr:Bill_Clinton)
  }

  # Commander in a war that is both a disease and societal event
  ?commander dbo:commandedMilitaryUnit ?unit .
  ?war dbo:name ?name .
  FILTER(STR(?name) IN (""World_War_I"", ""Spanish_Flu""))
  FILTER(?owner = ?author && ?author = ?spouse)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  VALUES ?billClinton { dbr:Bill_Clinton }
  ?book dbo:author ?author .
  FILTER (?author = ?billClinton)
  OPTIONAL {
    ?billClinton dbo:spouse dbr:Hillary_Clinton .
    ?billClinton dbo:residence dbr:Chappaqua,_New_York .
    ?billClinton dbo:commanderInChiefOf dbr:Gulf_War .
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?pacemakersAssociatedArtist ?joeyBelladonnaResource WHERE {
  VALUES ?pacemakersURL { 
    dbr:The_Pacemakers 
  }
  
  dbr:The_Pacemakers dbo:associatedMusicalArtist ?pacemakersAssociatedArtist .
  
  OPTIONAL {
    ?joeyBelladonnaResource dbo:birthName ""Joseph Michael Belladonna""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse ?person .

  # Author of ""Back to Work""
  ?book dbo:title ""Back to Work""@en .
  ?book dbo:author ?person .

  # Commander in Third Taiwan Strait Crisis
  dbr:Third_Taiwan_Strait_Crisis dbo:commander ?person .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName ?residence WHERE {
  ?party dbo:leader ?leader .
  ?leader foaf:name ?leaderName .
  OPTIONAL { 
    ?leader dbo:residence ?residence .
  }
  FILTER (?party = dbr:Ulster_Unionist_Party)
}
```",3,3,4,2,2,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather WHERE {
  # Step 1: Identify Charles I's father
  dbr:Charles_I_of_Hungary dbo:father ?charlesIFather .
  
  # Step 2: Find the parent of Charles I's father (Stephen IV)
  ?charlesIFather dbo:father ?parentOfFather .

  # Step 3: Ensure this parent is a child of Stephen V
  dbr:Stephen_V_of_Hungary dbo:child ?stephenVChild .
  
  FILTER (?parentOfFather = ?stephenVChild)

  # Step 4: Find the spouse of Charles II of Anjou (father of Philip I)
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipIFather .
  ?philipIFather dbo:spouse ?spouseOfCharlesII .

  FILTER (?parentOfFather = ?spouseOfCharlesII)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL ?kimWilsonBand ?nickCurranBirthPlace ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  OPTIONAL {
    ?kimWilson dbo:bandMember ?fabulousThunderbirdsURL .
    FILTER (str(?kimWilson) = ""Kim Wilson"")
  }

  OPTIONAL {
    ?nickCurran dbo:birthPlace ?nickCurranBirthPlace .
    FILTER (str(?nickCurran) = ""Nick Curran"")
    
    OPTIONAL {
      ?nickCurran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
    }
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:Athlete ;
          dbo:birthDate ?birthdate .
  
  FILTER (YEAR(?birthdate) = 1955 && MONTH(?birthdate) = 2 && DAY(?birthdate) = 22)
  
  OPTIONAL { 
    ?teamMember dbr:Sergio_Agüero ;
                dbo:teamMember ?player .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?sandroBertaggia { 
    dbr:Sandro_Bertaggia 
  }
  ?sandroBertaggia dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Country . }
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?tripleXs { dbr:The_Triple_X's }
  VALUES ?battleOfFortRoyal { dbr:Battle_of_Fort_Royal }

  OPTIONAL {
    ?tripleXs dbo:commander ?commander .
  }
  
  OPTIONAL {
    ?battleOfFortRoyal dbo:commander ?commander .
  }
  
  OPTIONAL {
    dbr:Robert_Calder dbo:participatedIn ?event .
    FILTER (?event IN (dbr:The_Triple_X's, dbr:Battle_of_Fort_Royal))
  }

  FILTER EXISTS { ?tripleXs dbo:commander ?commander }
  FILTER EXISTS { ?battleOfFortRoyal dbo:commander ?commander }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Find Nate Newton's associated musical artists that are bands and organizations
  ?nateNewton a dbo:MusicalArtist ;
              foaf:name ""Nate Newton"" .
  
  ?nateNewton dbo:associatedMusicalArtist ?band ;
              rdf:type dbo:Band .

  FILTER NOT EXISTS { ?band dbo:abstract ? } # Ensure it's an organization

  # Step 2: For each band, find their associated musical artists that are organizations
  ?band dbo:associatedMusicalArtist ?finalAssociatedArtist .
  
  FILTER NOT EXISTS { ?finalAssociatedArtist dbo:abstract ? } # Ensure it's an organization
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace WHERE {
  VALUES ?university { 
    dbr:Plovdiv_University_Paisii_Hilendarski 
  }
  ?university dbo:alumni ?alumnus .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Prince Faisal bin Hussein's children who are royalty
  ?child dbo:child dbr:Faisal_bin_Hussein .
  
  # Ensure the child is a royalty (assuming they have a title or similar property)
  ?child dbo:title ?title .

  # Find Prince Omar bin Faisal and his parent
  ?omarChild dbo:child ?parent .
  ?omarChild dbr:Omar_bin_Faisal .

  # Ensure the royal child of Prince Faisal is also the parent of Prince Omar
  FILTER (?child = ?omarChild)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?bobBirthName .

  # Identify Walter B. Gibson's fictional and comics character creation
  dbr:Walter_B._Gibson dbo:creation ?fictionalCharacter .
  FILTER (strstarts(str(?fictionalCharacter), ""http://dbpedia.org/resource/"") &&
          EXISTS { ?fictionalCharacter a dbo:FictionalCharacter } &&
          EXISTS { ?fictionalCharacter a dbo:ComicsCharacter })

  # Find the alter ego of this fictional character
  ?fictionalCharacter dbo:alterEgo ?alterEgo .

  # Determine which band the person with Bob Thompson's birth name is part of
  ?person dbo:birthName ?bobBirthName .
  ?person dbo:band ?band .
  FILTER (?alterEgo = ?person)
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderURL ?georgeDucasAssociation ?yuriiKhmelnytskySuccessor WHERE {
  # Resource for the Great Turkish War
  VALUES ?greatTurkishWar { 
    dbr:Great_Turkish_War 
  }
  
  # Find the commander of the Great Turkish War
  ?greatTurkishWar dbo:commander ?commanderURL .
  
  # Check association with George Ducas
  OPTIONAL {
    ?georgeDucas dbr:George_Ducas .
    ?georgeDucas dbo:associatedWith ?commanderURL .
    BIND(?georgeDucas AS ?georgeDucasAssociation)
  }
  
  # Find Yurii Khmelnytsky's successor
  dbr:Yurii_Khmelnytsky dbo:successor ?yuriiKhmelnytskySuccessor .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?birthPlaceEntity WHERE {
  # Find the war associated with the Golden Sword for Bravery
  ?award dbo:awardedFor ?war .
  FILTER (str(?award) = ""Golden_Sword_for_Bravery"")

  # Get Elena Žalinkevičaitė-Petrauskienė's birthplace entity
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  # Retrieve the entity related to her birthplace
  ?birthPlace rdfs:label ?birthPlaceEntity .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify the USS Arcadia (ID-1605) resource
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .
  
  # Find its owner
  ?ship dbo:owner ?owner .

  # Find wars related to this owner that are also diseases and societal events
  ?war dbo:relatedEvent ?event1, ?event2 ;
       rdfs:label ?warLabel .
  
  FILTER CONTAINS(LCASE(?warLabel), ""war"") .
  
  # Check if the war is described as a disease
  ?war dbo:isDiseaseOf ?disease .

  # Check if the war is a societal event
  ?war dbo:societalEvent ?societalEvent .

  FILTER (?owner = ?shipOwner) .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Frederick Stanley, 16th Earl of Derby's child
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .
  
  # Victor Stanley (Royal Navy officer)'s parent
  dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?victorParent .

  # Common parent condition
  ?frederickChild dbo:parent ?commonParent .
  ?victorParent = ?commonParent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:David_Luckman dbo:residence ?residence .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbp:election ?election .
  ?election rdfs:label ""2009 Galician regional election""@en .
  
  ?person dbo:residence ?residence .
  ?residence dbo:country ?country .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?brunoRetailleauParty ?patriceMartinLalandeParty WHERE {
  dbr:Bruno_Retailleau dbo:party ?brunoRetailleauParty .
  dbr:Patrice_Martin-Lalande dbo:party ?patriceMartinLalandeParty .
}
```",3,5,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  # Find Saw Shwe Khet's child
  ?sawShweKhetChild dbo:childOf dbr:Saw_Shwe_Khet .
  
  # Find Minye Kyawswa's grandchild (parent of Minye Kyawswa's child)
  ?minyeKyawswaGrandchild dbo:parentOf ?minyeKyawswaChild .
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa .

  # Find a common entity between Saw Shwe Khet's child and Minye Kyawswa's grandchild
  FILTER (?sawShweKhetChild = ?minyeKyawswaGrandchild)

  # Find the predecessor of this common entity
  ?commonEntity dbo:successor ?predecessor .
  FILTER (?commonEntity = ?sawShweKhetChild)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfAlbertoNunezFeijoo ?countryResidenceOfAlvaroQuirós WHERE {
  VALUES ?albertoNunezFeijoo { dbr:Alberto_Núñez_Feijóo }
  VALUES ?alvaroQuirós { dbr:Álvaro_Quirós }

  ?albertoNunezFeijoo dbo:office ?officeOfAlbertoNunezFeijoo .
  
  ?alvaroQuirós dbo:residence ?countryResidenceOfAlvaroQuirós .
  FILTER (?countryResidenceOfAlvaroQuirós rdf:type dbr:Country)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  dbr:Arthur_Stanley_(politician) dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?teamName WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          foaf:name ?personName .
  
  ?person dbo:managerOfTeam ?team .
  ?team a dbo:SoccerClub ;
        foaf:name ?teamName .

}
```",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?administrationRole WHERE {
  # Find the territory administered from Copenhagen
  ?territory dbo:capital dbr:Copenhagen .
  
  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck and his administration role
  OPTIONAL {
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:positionHeld ?administrationRole .
  }
}
```",3,4,4,2,2,2,3,28,1,3,0,0.25,1.0,0.4
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Emilia_(singer) dbo:bandMember ?band .
}
```",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Saw_Min_Hla dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?award ?settlement WHERE {
  # Find Linda Miller and her child
  VALUES ?lindaMiller { dbr:Linda_Miller_(actress) }
  ?lindaMiller dbo:child ?child .

  # Identify the award native to New York (state)
  ?award dbo:nativePlace dbr:New_York_(state) .
  
  # Find awardees of this award who are American settlements
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America ;
              dbo:recipientOfAward ?award .

  # Ensure the child is also an American settlement and matches the criteria
  FILTER (?child = ?settlement)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?albumURL ?film WHERE {
  VALUES ?albumURL { 
    dbr:Lasso_the_Moon_(The_Fabulous_Thunderbirds_album) 
  }
  
  ?person dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
  ?person a dbo:Actor .

  OPTIONAL {
    ?person dbo:film ?film .
  }

  FILTER EXISTS { ?albumURL dbo:artist ?person . }
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }

  # Step 2: Find the child of Saw Shwe Khet who is a royalty
  ?child dbo:childOf ?sawShweKhet .
  ?child dbo:royalty true .

  # Step 3: Identify the father of this royal child
  ?father dbo:parent ?child .
  
  # Step 4: Determine the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickCurranAssociatedArtist ?fabulousThunderbirdsRealName ?bandMember WHERE {
  # Find Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Confirm The Fabulous Thunderbirds' real name
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  OPTIONAL {
    ?fabulousThunderbirdsURL owl:sameAs ?fabulousThunderbirdsRealName .
  }

  # Find the person born on 1945-03-30 who is a member of The Fabulous Thunderbirds
  ?bandMember dbo:birthDate ""1945-03-30""^^xsd:date ;
              dbo:member ?fabulousThunderbirdsURL .

  FILTER (?nickCurranAssociatedArtist = ?fabulousThunderbirdsRealName)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  # Paulus Powell's birthplace
  VALUES (?paulusPowellBirthPlace) { 
    { ?paulusPowell dbo:birthPlace ?region1 .
      ?region1 a dbo:AdministrativeRegion ;
               a dbo:Region .
    }
  }

  # Cece Bell's birthplace
  VALUES (?ceceBellBirthPlace) {
    { dbr:Cecily_Ann_Bell dbo:birthPlace ?region2 . }
  }

  # Vince Gilligan's birthplace
  VALUES (?vinceGilliganBirthPlace) {
    { dbr:Vince_Gilligan dbo:birthPlace ?region3 . }
  }

  # Find the governor for each region
  OPTIONAL {
    ?governor dbo:birthPlace ?paulusPowellBirthPlace .
    ?governor dbo:governmentRole dbr:Governor ;
             a dbo:Politician .
  }
  
  OPTIONAL {
    ?governor dbo:birthPlace ?ceceBellBirthPlace .
    ?governor dbo:governmentRole dbr:Governor ;
             a dbo:Politician .
  }

  OPTIONAL {
    ?governor dbo:birthPlace ?vinceGilliganBirthPlace .
    ?governor dbo:governmentRole dbr:Governor ;
             a dbo:Politician .
  }
  
  # Ensure the governor's birthplace matches all three regions
  FILTER (?paulusPowellBirthPlace = ?ceceBellBirthPlace && 
          ?ceceBellBirthPlace = ?vinceGilliganBirthPlace)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  # Find the actor of ""Johnny Doughboy""
  ?actor dbo:actorInFilm dbr:Johnny_Doughboy .
  
  # Find the producer of ""A Star Is Born"" (1937)
  ?producer dbo:producedFilm dbr:A_Star_Is_Born_(1937_film) .

  # Ensure both roles are linked to the same person
  FILTER (?actor = ?producer)

  # Identify a notable work produced by this individual
  ?producer dbo:work ?claimToFame .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme WHERE {
  VALUES ?dikhawa { dbr:Dikhawa }
  ?dikhawa dbo:genre ?theme .
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?paulusPowellRegion ?governor WHERE {
  # Find the birth place of Cece Bell, author of El Deafo
  VALUES ?ceceBell { dbr:Cecily_Ann_Bell }
  OPTIONAL {
    ?ceceBell dbo:birthPlace ?ceceBellBirthPlace .
  }

  # Find the region and administrative region for Paulus Powell's birthplace
  VALUES ?paulusPowell { dbr:Paulus_Powell }
  OPTIONAL {
    ?paulusPowell dbo:birthPlace ?paulusPowellBirthPlace .
    ?paulusPowellBirthPlace dbo:locatedInAdministrativeRegion ?paulusPowellRegion .
  }

  # Find the governor of that region
  OPTIONAL {
    ?governor dbo:officeHolderOf ?paulusPowellRegion .
    ?governor a dbo:Politician .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandparent WHERE {
  ?dorothea dbo:father ?father .
  ?father dbo:father ?grandparent .

  VALUES ?dorothea { dbr:Dorothea_of_Lorraine }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royBarrerasParty ?galanCountry WHERE {
  VALUES ?royBarreras { dbr:Roy_Barreras }
  VALUES ?galan { dbr:Daniel_Elahi_Galán }

  OPTIONAL {
    ?royBarreras dbo:party ?royBarrerasParty .
  }
  
  OPTIONAL {
    ?galan dbo:nationality ?galanCountry .
  }
}
```",3,3,4,2,2,2,3,28,5,0,0,1.0,1.0,1.0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank WHERE {
  dbr:William_Tennant_(Royal_Navy_officer) dbo:rank ?rank .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Nate_Newton dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist rdf:type dbo:Band ;
                   rdf:type dbo:Organization .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?personName WHERE {
  VALUES ?grandDuchyOfFinland { 
    dbr:Grand_Duchy_of_Finland 
  }
  ?person dbo:nativePlace ?grandDuchyOfFinland .
  ?person rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
}
ORDER BY ?personName
```",1,1,2,1,1,2,3,28,0,0,355,0,0.0,0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the spouse of Saw Min Phyu
  ?spouse dbo:spouse dbr:Saw_Min_Phu .

  # Find their child who is a royalty
  ?child dbo:child ?spouse .
  ?child dbo:royaltyTitle ?title .

  # Find the predecessor of this royal child
  ?predecessor dbo:predecessor ?child .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,2,1,1,0.6666666666666666,0.6666666666666666,0.6666666666666666
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:George_Pickett dbo:commander ?commander .
  FILTER EXISTS { 
    ?commander dbo:participatedInMilitaryConflict dbr:American_Civil_War .
  }
}
```",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Nate Newton
  dbr:Nate_Newton dbo:associatedMusicalArtist ?associatedArtist .

  # Step 2 & 3: Filter for bands that are also organizations
  FILTER EXISTS { ?associatedArtist a dbo:Band . }
  FILTER EXISTS { ?associatedArtist a dbo:Organization . }

  # Step 4: Find band members of these bands
  ?associatedArtist dbo:bandMember ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Juan Carlos Molina's team
  ?team dbo:player dbr:Juan_Carlos_Molina_(footballer) .
  
  # Actor who is also a soccer player and athlete
  ?actor a dbo:Actor ;
         dbo:playsSport ?sport .
  FILTER (?sport IN (dbr:Soccer, dbr:Athletics)) .

  # Film directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .

  # Team associated with Pablo Aimar
  ?team2 dbo:player dbr:Pablo_Aimar .
  
  # Find the player who is in both teams and also an actor fitting the criteria
  ?player dbo:playsFor ?team ;
          dbo:playsFor ?team2 ;
          a dbo:Actor .

  FILTER (?player = ?actor)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  VALUES ?politician { dbr:Lord_Derby_(1833-1908) }
  VALUES ?child1 { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  ?politician dbo:parent ?father .
  ?father dbo:child ?child1 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfAdministration ?tenantOfResidence WHERE {
  # Find the administration associated with PSOE
  ?administration dbo:associatedParty dbr:Spanish_Socialist_Workers'_Party .
  
  # Identify the tenant (leader) of this administration
  ?administration dbo:leader ?tenantOfAdministration .

  # Find Álvaro Quirós's country of residence
  dbr:Álvaro_Quirós dbo:country ?countryOfResidence .

  # Match the leader of the Spanish administration to someone residing in the same country as Álvaro Quirós
  OPTIONAL {
    ?tenantOfAdministration dbo:country ?countryOfResidence .
  }
  
  # Ensure the tenant is associated with a Spanish administration
  FILTER EXISTS { ?administration dbo:country dbr:Spain }
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  VALUES ?dispatchesFromElsewhere { dbr:Dispatches_from_Elsewhere }
  
  ?castMember dbo:castMemberOf ?dispatchesFromElsewhere .
  ?castMember a dbo:Actor .

  # Find actors who are the alter ego of The Shadow
  OPTIONAL {
    ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
    ?shadowAlterEgo a dbo:Actor .
    
    FILTER (?actor = ?shadowAlterEgo)
  }

  BIND(?castMember AS ?actor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Helmut Kohl as the leader of West Germany
  dbr:Helmut_Kohl dbo:leaderOf dbr:West_Germany .
  
  # Check if he was a manager for VfL Bochum
  OPTIONAL { 
    dbr:VfL_Bochum dbo:manager dbr:Helmut_Kohl .
  }
  
  # Get Helmut Kohl's birthplace
  dbr:Helmut_Kohl dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .
  
  BIND(?birthPlace AS ?nativeCountry)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?greatTurkishWarCommander WHERE {
  ?commander dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?commander dbo:officeHolder ?office .
  ?commander dbo:successor ?successor .
  
  ?successor dbo:participatedIn dbr:Great_Turkish_War .
  ?successor dbo:commander ?greatTurkishWarCommander .

  OPTIONAL {
    ?reference dbo:wikiPageRedirects dbr:George_Ducas .
    FILTER (?reference = ?commander || ?reference = ?successor)
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonWorkURL WHERE {
  # Find the actor of High Society Blues
  ?highSocietyBlues dbo:starring ?actor .
  VALUES ?highSocietyBlues { dbr:High_Society_Blues_(film) }
  
  # Find the producer of The Adventures of Tom Sawyer (1938 film)
  ?tomSawyerFilm dbo:producer ?producer .
  VALUES ?tomSawyerFilm { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) }

  # Find a common work that is both a claim to fame for the actor and produced by the producer
  OPTIONAL {
    ?commonWork dbo:starring ?actor .
    FILTER (?commonWork != ?highSocietyBlues)
  }
  
  OPTIONAL {
    ?commonWork dbo:producer ?producer .
    FILTER (?commonWork != ?tomSawyerFilm)
  }

  # Ensure the common work is both starred by the actor and produced by the producer
  FILTER EXISTS { ?commonWork dbo:starring ?actor }
  FILTER EXISTS { ?commonWork dbo:producer ?producer }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?elAssociatedArtist WHERE {
  VALUES ?elResource { dbr:E.L. }
  ?elResource a dbo:MusicalArtist .
  
  OPTIONAL {
    ?album dbo:writer ?elResource .
    FILTER (str(?album) = ""The Live Anthology"")
  }

  OPTIONAL {
    ?elResource dbo:associatedMusicalArtist ?elAssociatedArtist .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?manager WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?nativeCountry .

  # Manager of VfL Bochum in the 2007–08 season
  OPTIONAL {
    dbr:VfL_Bochum dbo:season ?bochumSeason .
    FILTER (CONTAINS(LCASE(STR(?bochumSeason)), ""2007-08""))
    ?bochumSeason dbo:manager ?manager .
  }

  # Manager of SBV Vitesse in the 2020–21 season
  OPTIONAL {
    dbr:SBV_Vitesse dbo:season ?vitesseSeason .
    FILTER (CONTAINS(LCASE(STR(?vitesseSeason)), ""2020-21""))
    ?vitesseSeason dbo:manager ?manager .
  }

  # Filter to find common manager and native country
  FILTER (?nativeCountry = ?manager)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?charlestonEntity WHERE {
  VALUES ?amasaTracy { dbr:Amasa_Tracy }
  VALUES ?quincyAdamsGillmore { dbr:Quincy_A._Gillmore }

  OPTIONAL {
    ?war dbo:participatedInMilitaryConflict ?amasaTracy .
    ?war dbo:participatedInMilitaryConflict ?quincyAdamsGillmore .
  }

  OPTIONAL {
    ?charlestonEntity a dbo:Event ;
                     dbo:location dbr:Charleston,_South_Carolina .
    ?charlestonEntity dbo:relatedTo ?war .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Identify Hillary Clinton's spouse (Bill Clinton)
  dbr:Hillary_Clinton dbo:spouse ?billClinton .
  
  # Find books authored by Bill Clinton
  ?book dbo:author ?billClinton ;
        a dbo:Book .

  # Retrieve the author of those books, which should be Bill Clinton himself
  ?book dbo:author ?author .
}
```",6,15,7,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ekaterinaBirthPlace ?residentOfSofiaBirthPlace WHERE {
  VALUES ?ekaterinaResource { dbr:Ekaterina_Zaharieva }
  OPTIONAL {
    ?ekaterinaResource dbo:birthPlace ?ekaterinaBirthPlace .
  }

  VALUES ?residentOfSofiaResource { dbr:Todor_Zhivkov }
  OPTIONAL {
    ?residentOfSofiaResource dbo:birthPlace ?residentOfSofiaBirthPlace .
  }
}
```",3,3,4,2,2,3,2,20,2,2,0,0.5,1.0,0.6666666666666666
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?spouseName WHERE {
  VALUES ?book { dbr:An_Invitation_to_the_White_House }
  ?book dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (CONTAINS(LCASE(?authorName), ""hillary clinton""))
  
  OPTIONAL {
    ?author dbo:spouse ?spouse .
    ?spouse rdfs:label ?spouseName .
    FILTER (CONTAINS(LCASE(?spouseName), ""bill clinton""))
  }
}
```",5,12,6,3,2,3,3,71,0,2,1,0.0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  dbr:Nicholas_II_of_Russia dbo:birthPlace ?nativePlace .
}
```",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandOfPerson ?realNameOfKimWilsonBand WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1945 && MONTH(?date) = 3 && DAY(?date) = 30)
  ?person a dbo:MusicalArtist .

  OPTIONAL { 
    ?person dbo:bandMember ?bandOfPerson .
  }

  ?kimWilson dbr:Kim_Wilson .
  ?kimWilson dbo:bandMember ?fabulousThunderbirds .
  ?fabulousThunderbirds rdfs:label ?realNameOfKimWilsonBand .

  FILTER (?bandOfPerson = ?fabulousThunderbirds)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edwardStanley { 
    dbr:Edward_Stanley,_17th_Earl_of_Derby 
  }
  
  # Find his parent
  ?edwardStanley dbo:parent ?parent .
  
  # Ensure the parent is a politician and an office holder
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?theFirstGlove { 
    dbr:The_First_Glove 
  }
  OPTIONAL {
    ?theFirstGlove dbo:author|dbo:writer ?writer .
  }
}
```",2,2,3,2,1,3,2,20,0,1,17,0.0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonBandMember WHERE {
  # Find the associated musical artist of Cavalera Conspiracy that is an organization
  ?cavaleraConspiracy dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (?cavaleraConspiracy = dbr:Cavalera_Conspiracy)
  FILTER (EXISTS { ?associatedArtist rdf:type dbo:Organization }).

  # Find band members of Mudvayne
  ?mudvayneBandMember dbo:bandMember ?mudvayne .
  FILTER (?mudvayne = dbr:Mudvayne)

  # Check if the associated artist is also a band member of Mudvayne
  VALUES ?commonBandMember { ?associatedArtist }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kimWilsonBandURL ?nickCurranAssociatedArtist ?claptonBandMemberBand WHERE {
  VALUES ?kimWilsonBandURL { 
    dbr:The_Fabulous_Thunderbirds
  }
  
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }

  OPTIONAL {
    ?bandMember dbo:bandMember dbr:Eric_Clapton ;
                dbo:associatedBand ?claptonBandMemberBand .
  }
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Alfonso VI's grandchild
  ?alfonsoVIChild dbo:child ?alfonsoGrandchild .
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?alfonsoVIChild .

  # Roger II's child
  ?rogerIIChild dbo:parent dbr:Roger_II_of_Sicily .
  
  # Common individual who is a grandchild of Alfonso VI and a child of Roger II
  ?alfonsoGrandchild rdf:type dbo:Monarch .
  ?commonIndividual rdf:type dbo:Monarch .

  FILTER (?alfonsoGrandchild = ?commonIndividual)
  FILTER (?rogerIIChild = ?commonIndividual)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?amasaTracyWar ?quincyAdamsGillmoreForce WHERE {
  OPTIONAL {
    dbr:Amasa_Tracy dbo:participatedIn ?amasaTracyWar .
  }
  OPTIONAL {
    ?quincyAdamsGillmoreForce dbo:commander dbr:Quincy_Adams_Gillmore .
  }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceCountry WHERE {
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",1,2,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?currentMonarch WHERE {
  dbr:Spain dbo:monarch ?currentMonarch .
}
```",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouseOfFather ?childOfParent WHERE {
  # Find the predecessor of Myat Hpone Pyo
  OPTIONAL { 
    dbr:Myat_Hpone_Pyo dbo:predecessor ?predecessor .
  }
  
  # Find the father of Myat Hpone Pyo and his spouse who is royalty
  OPTIONAL {
    ?father dbo:child dbr:Myat_Hpone_Pyo .
    ?father dbo:spouse ?spouseOfFather .
    FILTER EXISTS { ?spouseOfFather a dbo:RoyalFamilyMember } # Assuming 'dbo:RoyalFamilyMember' represents royalty
  }
  
  # Find the parent of Min Hla Htut and their child
  OPTIONAL {
    dbr:Min_Hla_Htut_of_Pyakaung dbo:child ?parent .
    ?parent dbo:child ?childOfParent .
  }

  # Ensure that the spouse of the father is also a predecessor or related to Myat Hpone Pyo in some way
  FILTER (?spouseOfFather = ?predecessor || ?childOfParent = ?predecessor)
}
```",5,6,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dispatchesActor ?dispatchesProfession 
       ?abKyaHogaActor ?abKyaHogaProfession WHERE {
  # Find actors of Dispatches from Elsewhere
  VALUES ?dispatchesSeries { dbr:Dispatches_from_Elsewhere }
  
  ?dispatchesSeries dbo:castMember ?dispatchesActor .
  
  OPTIONAL {
    ?dispatchesActor dbo:profession ?dispatchesProfession .
  }

  # Find actor in Ab Kya Hoga who is a politician
  VALUES ?abKyaHogaMovie { dbr:Ab_Kya_Hoga }
  
  ?abKyaHogaMovie dbo:castMember ?abKyaHogaActor .

  OPTIONAL {
    ?abKyaHogaActor dbo:profession ?abKyaHogaProfession .
  }

  # Filter to find if the actor is a politician
  FILTER EXISTS { 
    ?abKyaHogaActor dbo:politicalParty ?party .
  }
  
  # Ensure we get actors who are common in both queries
  FILTER (?dispatchesActor = ?abKyaHogaActor)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  VALUES ?song { dbr:Lotus_(R.E.M._song) }
  
  ?song dbo:producer ?producer .
  
  FILTER (
    EXISTS { ?producer a dbo:Organization . } ||
    EXISTS { ?producer a dbo:Band . } ||
    EXISTS { ?producer a dbo:MusicalGroup . }
  )
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childURL ?realName WHERE {
  VALUES ?alfonsoIV { dbr:Alfonso_IV_of_Aragon }
  
  ?alfonsoIV dbo:child ?child .
  ?child rdfs:label ?realName .
  OPTIONAL {
    ?child dbo:monarch ?monarchy .
  }
  FILTER (LANG(?realName) = 'en')
}
```",4,5,5,3,2,3,2,20,0,3,3,0.0,0.0,0
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis death place
  VALUES ?deathPlace { 
    dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  }
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Wars associated with Napoleon Zervas and Konstantinos Ventiris
  ?war1 dbo:associatedWith dbr:Napoleon_Zervas .
  ?war2 dbo:associatedWith dbr:Konstantinos_Ventiris .

  # Ensure the settlement is involved in both wars
  ?settlement dbo:location ?deathPlace .
  ?settlement dbo:location ?warLocation1 .
  ?settlement dbo:location ?warLocation2 .
  
  FILTER (?warLocation1 = ?war1 && ?warLocation2 = ?war2)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:location dbr:Charleston,_South_Carolina .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify William I (William the Conqueror)
  VALUES ?williamI { dbr:William_the_Conqueror }

  # Find children of William I who are royalty
  ?williamI dbo:child ?child .
  ?child a dbo:Monarch .

  OPTIONAL {
    ?child dbo:officeHolder ?office .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?frédéricBouralyProfession ?rustlersRhapsodyActor WHERE {
  # Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:occupation ?frédéricBouralyProfession .
  
  # Actors of Rustlers' Rhapsody
  dbr:Rustlers'_Rhapsody_(film) dbo:starring ?rustlersRhapsodyActor .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?ackquillePollard { 
    dbr:Ak_Boogie
  }
  
  ?person rdfs:label ""Ak_Boogie""@en .
  FILTER (lang(?person) = 'en')
  
  OPTIONAL {
    ?person dbo:member dbr:Uncle_Murda .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Carl,_Duke_of_Württemberg dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtist .
  OPTIONAL {
    ?associatedArtist dbo:bandMember dbr:The_Fabulous_Thunderbirds .
  }
}
```",4,5,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  VALUES ?naod { dbr:Na'od }
  ?naod dbo:father ?father .
  
  FILTER EXISTS { 
    ?father rdf:type dbo:Monarch .
  }
  FILTER EXISTS { 
    ?father rdf:type dbo:OfficeHolder .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Jamie_T dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Anxo_Quintana dbo:officeHolder ?office .
  ?office dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .
  FILTER EXISTS { ?office dbo:country dbr:Spain }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?child dbo:parent ?alumnus ;
         a dbo:Politician .

  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order ;
           dbo:parent ?child .

  ?father dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?youngkinBirthPlace ?awardeeBirthPlace ?bellBirthPlace WHERE {
  # Glenn Youngkin's birth place
  OPTIONAL { 
    dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .
  }
  
  # Awardee of Vince Gilligan's awards
  OPTIONAL {
    dbr:Vince_Gilligan dbo:award ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }

  # Cece Bell's birth place
  OPTIONAL { 
    dbr:Cece_Bell dbo:birthPlace ?bellBirthPlace .
  }
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraOffice ?commanderOffice WHERE {
  # Offices held by Miguel Maura
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura"" ;
               dbo:office ?miguelMauraOffice .

  # Commander who is an office holder and politician involved in a military conflict that is also a societal event related to Manuel Pinto da Costa
  ?commander a dbo:Person, dbo:Politician ;
             foaf:name ?name ;
             dbo:office ?commanderOffice .
  
  ?conflict a dbo:MilitaryConflict, dbo:SocietalEvent ;
            dbo:participant ?commander ;
            dbo:participant dbr:Manuel_Pinto_da_Costa .

}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  VALUES ?arthurStanley { dbr:Arthur_Stanley_(politician) }
  VALUES ?victorStanley { dbr:Victor_Stanley_(Royal_Navy_officer) }

  ?arthurStanley dbo:father ?father .
  ?victorStanley dbo:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify Philip I of Castile
  dbr:Philip_I_of_Castile dbo:child ?child .
  
  # Filter children who are royalty
  ?child rdf:type dbo:Monarch .

  # Find the father of that child
  ?child dbo:parent ?father .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?royaltyTitle WHERE {
  dbr:Saw_Shwe_Khet dbo:child ?child .
  OPTIONAL { ?child dbo:royaltyTitle ?royaltyTitle . }
  FILTER EXISTS { ?child dbo:royaltyTitle ?royaltyTitle . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Ottoman_Empire .
  ?entity dbo:recipientOfOrder dbr:Order_of_the_Medjidie .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?secondLevelAssociatedArtist WHERE {
  # Step 1: Identify Khlyst band
  VALUES ?khlystBand { dbr:Khlyst_(band) }
  
  # Step 2: Find a member of Khlyst who is also a musical artist
  ?member dbo:memberOf ?khlystBand .
  ?member rdf:type dbo:MusicalArtist .

  # Step 3: Get associated musical artists for the identified member
  ?member dbo:associatedMusicalArtist ?firstLevelAssociatedArtist .

  # Step 4: Find associated musical artists of those first-level associated artists
  ?firstLevelAssociatedArtist dbo:associatedMusicalArtist ?secondLevelAssociatedArtist .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander ?spouse WHERE {
  VALUES ?book { dbr:Back_to_Work_(Michelle_Obama_book) }
  ?book dbo:author ?author .
  
  VALUES ?diseaseEvent { dbr:Spanish_Flu_pandemic }
  ?commander dbo:rank ?navalRank ;
             dbo:serviceInMilitaryOrganization ?usNavy ;
             dbo:associatedWith ?diseaseEvent .

  VALUES ?spouseRole { dbr:President_of_the_United_States }
  ?author dbo:spouse ?spouse .
  ?spouse dbo:positionHeld ?spouseRole .
  
  FILTER (?commander = dbr:FDR)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?film dbo:actor ?actor .
  ?film dbo:character dbr:Johnny_Doughboy .
  ?actor dbo:claimToFame ?work .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInWar WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Find a work authored by Bill Clinton
  ?work dbo:author dbr:Bill_Clinton ;
        rdf:type/(dbo:Book|dbo:WrittenWork) .

  # Ensure the commander in the war is both a disease and a societal event
  ?commanderInWar rdf:type dbo:Disease, dbo:SocietalEvent .
  
  # Link the owner of USS Arcadia to Bill Clinton's work
  FILTER (?owner = ?work)
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:title ""An Invitation to the White House""@en .
  ?book dbo:author ?author .

  ?author a dbo:OfficeHolder ;
          a dbo:Politician .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfTheCampusQueen ?associatedMusicalArtistOfMacyGray WHERE {
  VALUES ?theCampusQueen { 
    dbr:The_Campus_Queen_(film) 
  }
  
  ?theCampusQueen dbo:actor ?actorOfTheCampusQueen .
  
  VALUES ?macyGray { 
    dbr:Macy_Gray 
  }
  
  ?macyGray dbo:associatedMusicalArtist ?associatedMusicalArtistOfMacyGray .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?siege dbo:eventType dbr:Siege_of_Mukha .
  ?siege dbo:commander ?commander .
  
  ?commander a dbo:RoyalPerson ;
             rdfs:label ?commanderLabel .

  OPTIONAL { 
    ?commander dbo:parent ?parent .
    ?parent a dbo:RoyalPerson ;
            rdfs:label ?parentLabel .
  }

  FILTER (CONTAINS(LCASE(?commanderLabel), ""royalty"") && CONTAINS(LCASE(?parentLabel), ""royalty""))
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?seriesURL WHERE {
  dbr:The_Golden_Master dbo:partOfSeries ?seriesURL .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoURL ?royalOfficeHolder WHERE {
  VALUES ?alterEgoURL { 
    dbr:Lamont_Cranston 
  }
  
  OPTIONAL {
    ?alterEgo dbo:fatherOrGuardian ?parent .
    ?parent dbo:spouse|dbo:child ?royalOfficeHolder .
    ?royalOfficeHolder a dbo:Monarch ;
                      dbo:officeHolderOf ?office .
  }

  VALUES ?baedaChildURL { 
    dbr:Baeda_Maryam_I
  }
  
  OPTIONAL {
    ?baedaChildURL dbo:child ?royalOfficeHolder .
  }
}
```",5,7,6,3,2,3,3,71,0,3,1,0.0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position WHERE {
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:positionHeld ?position .
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Toyotomi_Hidenaga dbo:associatedWith ?war .
  FILTER (CONTAINS(LCASE(STR(?war)), ""battle""))
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?coraSueCollins a dbo:Person ;
                  foaf:name ""Cora Sue Collins""@en .
  
  ?work dbo:performer ?coraSueCollins ;
        rdf:type dbo:Work .

  OPTIONAL { 
    ?work dbo:producer ?producer .
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbr:Eleonora_Menicucci .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  ?person dbo:occupation dbr:Politician .
  ?person dbo:almaMater ?almaMater .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL WHERE {
  ?person dbo:birthName ""Koichirō"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Marty_Polloi dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Identify Saw Shwe Khet
  dbr:Saw_Shwe_Khet dbo:child ?child .
  
  # Find the predecessor of the child
  OPTIONAL { 
    ?child dbo:predecessor ?predecessor .
  }
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouseOfSawShweKhet WHERE {
  # Find the spouse of Saw Shwe Khet
  dbr:Saw_Shwe_Khet dbo:spouse ?spouseOfSawShweKhet .
  
  # Ensure this person is a child of Saw Min Hla
  ?spouseOfSawShweKhet dbo:childOf dbr:Saw_Min_Hla .

  # Find the child of Saw Shwe Khet
  dbr:Saw_Shwe_Khet dbo:child ?childOfSawShweKhet .
  
  # Ensure this spouse is a predecessor to the child of Saw Shwe Khet
  OPTIONAL {
    ?spouseOfSawShweKhet dbo:predecessor ?childOfSawShweKhet .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?entityInBirthplace WHERE {
  # Find the Gillmore Medal awardee
  ?awardee dbo:award dbr:Gillmore_Medal .
  
  # Determine the force associated with the awardee
  OPTIONAL { 
    ?awardee dbo:militaryUnit ?force .
  }
  
  # Identify Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace rdf:type dbo:Settlement ;
             dbo:country dbr:United_States_of_America .

  # Find an entity in that birthplace
  ?entityInBirthplace dbo:location ?birthPlace .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the work associated with Cora Sue Collins and Kent Allard
  ?work dbo:creator dbr:Cora_Sue_Collins .
  ?character dbo:name ""Kent Allard""@en ;
             dbo:inWork ?work .

  # Identify the producer of A Star Is Born (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Ensure that the same person is both a creator in the work associated with Cora Sue Collins and Kent Allard,
  # and the producer of A Star Is Born (1937)
  FILTER EXISTS { ?work dbo:creator ?commonCreator . }
  FILTER (?commonCreator = ?producer)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Sangeet_Natak_Akademi_Fellowship dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  VALUES ?nobelPrizeInPhysics { 
    dbr:Nobel_Prize_in_Physics 
  }
  ?nobelPrizeInPhysics dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,2,20,0,0,31,0,0.0,0
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?spouseName WHERE {
  # Find the actor in ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .

  # Get the spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Ensure the spouse is a member of the Republican Party (United States)
  ?spouse dbo:memberOfPoliticalParty dbr:Republican_Party_(United_States) .

  # Bind names for readability
  ?actor rdfs:label ?actorName .
  ?spouse rdfs:label ?spouseName .
  
  FILTER(LANG(?actorName) = 'en')
  FILTER(LANG(?spouseName) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Alexander_of_Württemberg dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeLanguage WHERE {
  ?shobhnaSamarth a dbo:Person ;
                  foaf:name ""Shobhna Samarth""@en ;
                  dbo:birthPlace ?birthPlace .
  
  ?birthPlace dbo:country ?country .

  ?country dbo:officialLanguage ?nativeLanguage .
}
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorSoccerPlayer ?soccerManager WHERE {
  # Find actor and soccer player in ""All or Nothing: Manchester City""
  VALUES ?allOrNothingURL { 
    dbr:All_or_Nothing:_Manchester_City_(TV_series) 
  }
  
  ?actorSoccerPlayer dbo:actorInFilm ?allOrNothingURL .
  ?actorSoccerPlayer dbo:soccerPlayer true .

  # Find soccer player and manager with the same birthday as Marcelo Sarmiento
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .
  
  ?soccerManager dbo:soccerPlayer true ;
                 dbo:manager true ;
                 dbo:birthday ?marceloSarmientoBirthday .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Shatrughan Sinha's Profession
SELECT ?profession WHERE {
  dbr:Shatrughan_Sinha dbo:occupation ?profession .
}

# Query for The Shadow (video game) Alter Ego
SELECT ?alterEgo WHERE {
  OPTIONAL {
    dbr:The_Shadow_(video_game) dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""comics""))
    ?disambiguation dbo:alterEgo ?alterEgo .
  }
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?personWithBirthName WHERE {
  # Find the ruling party in Central, Louisiana
  ?centralLocation a dbo:Place ;
                   dbo:country dbr:United_States_of_America ;
                   dbo:stateOrProvince dbr:Louisiana ;
                   dbp:name ""Central"" .
  
  ?rulingParty dbo:location ?centralLocation ;
               dbo:member ?partyMember .

  # Find person born as Anne Sothern
  ?person foaf:name ""Anne Sothern""@en ;
          dbo:birthName ?birthName .
  FILTER(?birthName = ""Anne Sothern"")

  BIND(?person AS ?personWithBirthName)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonEntity WHERE {
  # Pattern match for George H. Cameron's award
  dbr:George_H._Cameron dbo:award ?commonEntity .
  
  # Pattern match for Doug Beattie's residence
  dbr:Doug_Beattie dbo:residence ?commonEntity .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInUK ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doug Beattie"" ;
          dbo:country dbr:United_Kingdom .
  
  OPTIONAL { ?person dbo:associatedWith ?entityInUK . }
  OPTIONAL { ?person dbo:residence ?residence . }

  FILTER EXISTS { ?entityInUK dbo:country dbr:United_Kingdom }
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:Lamont_Cranston dbo:alias ?alterEgo .
  FILTER(CONTAINS(LCASE(STR(?alterEgo)), ""the shadow""))
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a person native to the Grand Duchy of Finland
  ?person dbo:nativePlace dbr:Grand_Duchy_of_Finland .
  
  # Find a country associated with Nicholas II and a person native to that country
  OPTIONAL {
    dbr:Nicholas_II_of_Russia dbo:country ?country .
    ?person dbo:nativePlace ?country .
  }
}
```",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:birthPlace ?nativePlace .
  FILTER EXISTS { 
    ?nativePlace dbo:country dbr:Russian_Empire .
  }
}
```",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?middleKing WHERE {
  VALUES ?dawitI { dbr:Dawit_I }
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }

  ?middleKing dbo:childOf ?dawitI .
  ?middleKing dbo:parentOf ?baedaMaryamI .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find the writer of the album Sappy
  ?sappyAlbum dbo:writer ?writer .
  FILTER(STRSTARTS(STR(?sappyAlbum), ""http://dbpedia.org/resource/Sappy_(album)""))

  # Find band members of this writer
  ?bandMember dbo:bandMember ?writer .

  # Find the associated musical artist of Filthy Friends (Nick Curran)
  dbr:Nick_Curran dbo:associatedMusicalArtist ?filthyFriends .
  FILTER(STRSTARTS(STR(?filthyFriends), ""http://dbpedia.org/resource/Filthy_Friends""))

  # Return the band member and the associated artist
  VALUES ?associatedArtist { ?filthyFriends }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?stuartAssociatedArtist ?writerArtist WHERE {
  VALUES ?alanParsonsProject { dbr:The_Alan_Parsons_Project }
  
  # Band members of The Alan Parsons Project
  ?bandMember dbo:bandMember ?alanParsonsProject .
  
  # Stuart Tosh's associated musical artist
  dbr:Stuart_Tosh dbo:associatedMusicalArtist ?stuartAssociatedArtist .

  # Writer of Wizards of Waverly Place (Soundtrack) who is also a musical artist and an artist
  VALUES ?wizardsOfWaverlyPlace { dbr:Wizards_of_Waverly_Place_(soundtrack) }
  
  ?writerArtist dbo:composer ?wizardsOfWaverlyPlace .
  ?writerArtist rdf:type dbo:MusicalArtist .
  ?writerArtist rdf:type dbo:Artist .

  # Check for commonality
  FILTER (?bandMember = ?stuartAssociatedArtist || ?bandMember = ?writerArtist || ?stuartAssociatedArtist = ?writerArtist)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Aleksander_II,_Grand_Duke_of_Finland dbo:positionHeld ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character dbo:author dbr:Walter_B._Gibson .
  ?character a dbo:FictionalCharacter ;
             dbo:genre dbr:Comics .
  OPTIONAL { ?character dbo:alias ?alterEgo . }
  FILTER (?character = dbr:The_Shadow)
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?floridaResource { 
    dbr:Florida 
  }
  
  OPTIONAL {
    ?person dbo:birthPlace ?floridaResource .
  }
  
  OPTIONAL {
    ?person dbo:nationality ?floridaResource .
  }
}
```",1,1,2,1,1,3,3,71,971,0,0,1.0,1.0,1.0
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find VfL Bochum and its manager during the 2007-08 season
  dbr:VfL_Bochum dbo:manager ?manager .
  
  # Ensure the club is a sports club, organization, and soccer club
  dbr:VfL_Bochum rdf:type dbo:SportsClub ;
                 rdf:type dbo:Organization ;
                 rdf:type dbo:SoccerClub .

  # Find Theodor Heuss's country of administration (likely his nationality)
  dbr:Theodor_Heuss dbo:nationality ?country .

  # Ensure the manager is native to the same country
  ?manager dbo:nativeCountry ?country .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  VALUES ?athensResource { dbr:Athens }
  
  # Find landmarks, museums, etc., located in Athens
  ?entity dbo:location ?athensResource .
  
  UNION
  
  # Find people born in Athens
  ?entity dbo:birthPlace ?athensResource .
}
```",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName ?award WHERE {
  ?band a dbo:Band ;
        dbo:location dbr:New_York_(state) .
  
  ?band dbo:award ?award .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?actor WHERE {
  VALUES ?ilizaShlesinger { dbr:Iliza_Schlesinger }
  VALUES ?merylStreep { dbr:Meryl_Streep }

  ?movie dbo:starring ?ilizaShlesinger .
  ?movie dbo:starring ?merylStreep .
  ?movie rdf:type dbo:Film .

  OPTIONAL {
    ?movie dbo:starring ?actor .
    FILTER (?actor != ?ilizaShlesinger && ?actor != ?merylStreep)
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreEvent ?award WHERE {
  # Quincy Adams Gillmore's involvement in an event in Charleston
  ?gillmoreEvent dbo:agent dbr:Quincy_A._Gillmore .
  ?gillmoreEvent dbo:location dbr:Charleston,_South_Carolina .

  # Award given by the United States Congress related to a war
  OPTIONAL {
    ?award dbo:recipient ?gillmoreEvent ;
           dbo:awardingAuthority dbr:United_States_Congress .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAlbrecht ?grandChildRoyalty WHERE {
  # Find the child of Albrecht, Duke of Württemberg
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?childOfAlbrecht .

  # Find the grandchild (child of a child) of Archduke Charles Louis who is royalty
  {
    SELECT ?grandChildRoyalty WHERE {
      dbr:Archduke_Charles_Louis_of_Austria dbo:child ?parent .
      ?parent dbo:child ?grandChildRoyalty .
      FILTER EXISTS { ?grandChildRoyalty a dbo:Monarch . }
    }
  }

  # Ensure the grandchild is also a predecessor of Carl, Duke of Württemberg
  OPTIONAL {
    ?grandChildRoyalty dbo:predecessor dbr:Carl,_Duke_of_W%C3%BCrttemberg .
  }

  # Filter to ensure the child of Albrecht matches the grandchild royalty condition
  FILTER (?childOfAlbrecht = ?grandChildRoyalty)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?artist { dbr:T.I. }
  ?work dbo:artist ?artist .
  ?work a ?type .
  FILTER (?type IN (dbo:Songs, dbo:MusicalWork))
}
```",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?militaryConflict ?georgeDucasWork WHERE {
  # Michał Kazimierz Pac as a commander in a military conflict
  ?militaryConflict dbo:commander dbr:Micha%C5%82_Kazimierz_Pac .
  
  # Successor who is both an office holder and politician
  OPTIONAL {
    ?successor dbo:successor dbr:Micha%C5%82_Kazimierz_Pac ;
              a dbo:OfficeHolder, dbo:Politician .
  }
  
  # Reference to George Ducas' work
  ?georgeDucasWork dbo:author dbr:George_Ducas .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderResidence WHERE {
  ?georgeSavage a dbo:Politician ;
                foaf:name ""George Savage"" .
  
  ?georgeSavage dbo:memberOfParty ?party .

  ?party dbo:leader ?leader .

  ?leader dbo:residence ?leaderResidence .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?manager WHERE {
  VALUES ?club { 
    dbr:VfL_Bochum 
  }
  
  ?club a dbo:SoccerClub ;
        a dbo:SportsOrganization ;
        a dbo:SportsTeam .
  
  ?season dbo:sportsTeam ?club ;
          dbo:season ""2006–07 VfL Bochum season""^^xsd:string .

  OPTIONAL {
    ?club dbo:nativeCountry ?nativeCountry .
    FILTER (?nativeCountry = dbr:West_Germany)
  }
  
  OPTIONAL {
    ?season dbo:manager ?manager .
  }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administeredTerritory ?mayor WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen"" ;
          dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find territory administered from the death place
  ?administeredTerritory dbo:administeredBy ?deathPlace .

  # Find mayor of Duchy of Schleswig
  dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?amyArbusParent ?allanArbusChild ?childOfAllanParent ?judgmentActor WHERE {
  # Parent of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?amyArbusParent .
  }

  # Child of Allan Arbus and their parent
  OPTIONAL {
    ?allanArbusChild dbo:parent dbr:Allan_Arbus .
    ?allanArbusChild dbo:parent ?childOfAllanParent .
  }
  
  # Actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  OPTIONAL {
    dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:actor ?judgmentActor .
  }
}
```",4,4,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalURL WHERE {
  VALUES ?theLiveAnthology { 
    dbr:The_Live_Anthology 
  }
  
  ?theLiveAnthology dbo:writer ?writer .
  ?writer a dbo:Writer ;
          dbo:musicalArtist ?professionalURL .
}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?afeezOyetoroURL WHERE {
  VALUES ?afeezOyetoroURL { 
    dbr:Afeez_Oyetoro 
  }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?societalEvent ?event ?tvShow WHERE {
  # Identify Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  
  # Find the child of that person who is a commander in war
  ?father dbo:child ?child .
  ?child dbo:militaryCommanderOf ?war .

  # Check for associations with societal event, event, and television show
  OPTIONAL { ?child dbo:societalEvent ?societalEvent . }
  OPTIONAL { ?child dbo:event ?event . }
  OPTIONAL { ?child dbo:televisionShow ?tvShow . }

  # Ensure connection to the 2nd Dragoon Regiment (France)
  ?child dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .

  FILTER EXISTS { ?societalEvent != [] }
  FILTER EXISTS { ?event != [] }
  FILTER EXISTS { ?tvShow != [] }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandURL WHERE {
  dbr:Kim_Wilson dbo:associatedBand ?band .
  BIND(?band AS ?bandURL)
}
```",4,4,5,3,2,3,3,71,1,4,1,0.2,0.5,0.28571428571428575
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lamontCranstonURL WHERE {
  VALUES ?lamontCranstonResource { 
    dbr:Lamont_Cranston_(radio) 
    dbr:Lamont_Cranston
  }
  ?lamontCranstonResource rdf:type owl:Thing .
  OPTIONAL {
    ?lamontCranstonResource dbo:wikiPageRedirects ?redirectedResource .
    ?redirectedResource rdf:type owl:Thing .
  }
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?lamontCranstonResource))) AS ?lamontCranstonURL)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?war dbo:partOf dbr:French_Revolutionary_Wars .
  ?commander dbo:commanded ?war .
}
```",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Henry_Clay_Lewis 
    dbr:Amasa_Tracy 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  ?birthPlace dbo:country dbr:United_States_of_America .
}
GROUP BY ?birthPlace
HAVING (COUNT(DISTINCT ?person) = 2)
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfWilliamII ?childOfChild WHERE {
  # William II of Sicily and his father
  dbr:William_II_of_Sicily dbo:father ?fatherOfWilliamII .
  
  # Roger II of Sicily (Constance's spouse) and their children
  dbr:Roger_II_of_Sicily dbo:spouse dbr:Constance_of_Burgundy ;
                        dbo:child ?childOfRogerII .

  # The child of the child of Roger II who is royalty
  ?childOfChild dbo:parent ?childOfRogerII .
  
  # Ensure the father of William II is also a child of one of Roger's children
  FILTER (?fatherOfWilliamII = ?childOfChild)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeArtistBirthName WHERE {
  # Step 1: Identify Elorm Kabu Amenyah's resource
  ?elorm a dbo:MusicalArtist ;
         foaf:name ""Elorm Kabu Amenyah"" .

  # Step 2: Find associated musical artist of Elorm Kabu Amenyah
  ?elorm dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Identify native of Central Region, Ghana who is an artist
  ?nativeArtist a dbo:MusicalArtist ;
               dbo:nativePlace dbr:Central_Region,_Ghana ;
               foaf:name ?birthName .

  # Step 4: Match birth name with associated musical artist
  FILTER (?associatedArtist = ?nativeArtist)
  
  BIND(?birthName AS ?nativeArtistBirthName)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace WHERE {
  VALUES ?university { 
    dbr:Plovdiv_University_Paisii_Hilendarski 
  }
  ?university dbo:alumni ?alumnus .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtistURL WHERE {
  VALUES ?burntByTheSunBand { 
    dbr:Burnt_by_the_Sun_(band) 
  }
  ?burntByTheSunBand dbo:associatedMusicalArtist ?associatedArtist .
  FILTER EXISTS { ?associatedArtist a ?type . 
                 VALUES ?type { 
                   dbo:Band 
                   dbo:Group 
                   dbo:Organization 
                 } 
               }
  BIND(?associatedArtist AS ?associatedArtistURL)
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Manager of VfL Bochum in 2007–08 season
  ?vflBochumSeason dbo:season ""2007–08"" .
  ?vflBochumSeason dbo:team dbr:VfL_Bochum .
  ?vflBochumSeason dbo:manager ?manager .

  # Manager of SBV Vitesse in 2020–21 season
  ?sbVVitesseSeason dbo:season ""2020–21"" .
  ?sbVVitesseSeason dbo:team dbr:SBV_Vitesse .
  FILTER (?manager = ?sbVVitesseManager)
  
  # Leader of West Germany and their administration country
  ?westGermanyLeader dbo:leaderOf dbr:West_Germany .
  ?westGermanyLeader dbo:nationality ?country .

  # Manager's nationality should match the leader's country
  ?manager dbo:nationality ?country .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChildRoyalty WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Child of the parent (grandchild of Archduchess Margarete Sophie)
  ?parentChild dbo:parent ?parent .
  
  # That is royalty
  ?parentChild rdf:type dbo:RoyalFamilyMember .

  # Predecessor logic
  OPTIONAL {
    dbr:Archduchess_Helena_of_Austria dbo:spouse ?helenaSpouse .
    ?helenaSpouseChild dbo:parent ?helenaSpouse .
    ?helenaSpouseChild rdf:type dbo:RoyalFamilyMember .

    # Predecessor in line or succession
    FILTER (?childOfChildRoyalty < ?helenaSpouseChild)
  }

  # Intersection of both conditions
  BIND(?parentChild AS ?childOfChildRoyalty)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?medalOfHonorRecipient ?war ?charlestonEntity WHERE {
  ?recipient dbo:awardedFor ?medalOfHonor .
  ?medalOfHonor dbo:awardType dbr:Medal_of_Honor .
  ?medalOfHonor dbo:awardedFor ?war .
  
  ?entity dbo:location dbr:Charleston,_South_Carolina .
  
  BIND(?recipient AS ?medalOfHonorRecipient)
  BIND(?entity AS ?charlestonEntity)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?siege dbo:eventType dbr:Siege_of_Mukha .
  ?siege dbo:commander ?commander .
  FILTER EXISTS { ?commander rdf:type dbo:Monarch }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Myat_Hpone_Pyo dbo:father ?father .
  OPTIONAL { 
    ?father dbo:royalty true .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?album { 
    dbr:The_Miseducation_of_Lauryn_Hill 
  }
  ?album dbo:writer ?writer .
  FILTER EXISTS { ?writer dbo:artist . }
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  VALUES ?player { 
    dbr:Sergio_Agüero 
    dbr:Pablo_Aimar 
  }
  
  ?player dbo:team ?team .
}
GROUP BY ?team
HAVING (COUNT(DISTINCT ?player) = 2)
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?child dbo:parent dbr:Saw_Min_Hla .
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet .
  ?predecessor dbo:successor dbr:Myat_Hpone_Pyo .

  FILTER (?child = ?spouse && ?spouse = ?predecessor)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tomSawyerProducer ?starIsBornProducer WHERE {
  VALUES ?film {
    dbr:The_Adventures_of_Tom_Sawyer_(1938_film)
    dbr:A_Star_Is_Born_(1937_film)
  }
  
  OPTIONAL {
    ?film dbo:producer ?producer .
    BIND(
      IF(?film = dbr:The_Adventures_of_Tom_Sawyer_(1938_film), ?producer, NULL) AS ?tomSawyerProducer
    )
    BIND(
      IF(?film = dbr:A_Star_Is_Born_(1937_film), ?producer, NULL) AS ?starIsBornProducer
    )
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?toyotomiHidenagaWarURL ?hashibaHidekatsuWarURL WHERE {
  OPTIONAL {
    dbr:Toyotomi_Hidenaga dbo:participatedIn ?toyotomiHidenagaWar .
    BIND(STR(?toyotomiHidenagaWar) AS ?toyotomiHidenagaWarURL)
  }
  OPTIONAL {
    dbr:Hashiba_Hidekatsu dbo:participatedIn ?hashibaHidekatsuWar .
    BIND(STR(?hashibaHidekatsuWar) AS ?hashibaHidekatsuWarURL)
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?mariclareCostello a dbo:Person ;
                     foaf:name ""Mariclare Costello""@en .
  
  ?mariclareCostello dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:parent ?parent .
  FILTER EXISTS { ?parent dbo:royalTitle ?title }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Filthy_Friends dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?primeMinister WHERE {
  ?party dbo:country dbr:Spain .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?person dbo:memberOf ?party ;
          dbo:headOfGovernment dbr:Spain .

  FILTER(LANG(?person->rdfs:label) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Arthur Stanley (politician)
  VALUES ?arthurStanley { dbr:Arthur_Stanley_(politician) }
  
  # Find father of Arthur Stanley
  ?arthurStanley dbo:father ?arthurFather .
  
  # Edward Stanley, 17th Earl of Derby
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  # Find a child of Edward Stanley who is a politician and office holder
  ?child dbo:parent ?edwardStanley .
  ?child dbo:officeHolder ?office .
  FILTER EXISTS { ?office dbo:isClassOf dbr:Politician }

  # Find the parent of this child (who should be a politician)
  ?childParent dbo:parent ?child .
  
  # Check if this parent is also an office holder
  OPTIONAL {
    ?childParent dbo:officeHolder ?office2 .
    FILTER EXISTS { ?office2 dbo:isClassOf dbr:Politician }
  }

  # Find the common ancestor between Arthur's father and Edward's child's parent
  ?arthurFather rdfs:subClassOf* ?commonAncestor .
  ?childParent rdfs:subClassOf* ?commonAncestor .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the child of Stephen V of Hungary
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Find the spouse of Charles II of Naples (father of Philip I, Prince of Taranto)
  ?spouse dbo:spouse dbr:Charles_II_of_Naples .

  # Ensure this person is also a parent of Charles Martel of Anjou
  ?parent dbo:child dbr:Charles_Martel_of_Anjou .
  
  # Match the same individual across all conditions
  FILTER (?child = ?spouse && ?spouse = ?parent)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?eleonoreFather ?ceciliaRenataFather WHERE {
  # Eleonore of Austria's father
  dbr:Eleonore_of_Austria dbo:father ?eleonoreFather .
  
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?ceciliaRenataFather .

  # Ensure Eleonore's father is a child of Cecilia Renata's father
  OPTIONAL {
    ?ceciliaRenataFather dbo:child ?eleonoreFather .
  }
  
  FILTER (?eleonoreFather = ?ceciliaRenataChild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find the child of Saw Shwe Khet
  OPTIONAL { 
    dbr:Saw_Shwe_Khet dbo:child ?child .
  }
  
  # Step 2: Find the spouse of this child
  OPTIONAL { 
    ?child dbo:spouse ?spouse .
  }

  # Step 3: Find the father of this spouse
  OPTIONAL {
    ?spouse dbo:father ?father .
  }

  # Step 4: Identify Myat Hpone Pyo as a royalty related to this person
  OPTIONAL {
    ?myatHponePyo dbo:royalTitle ?title .
    FILTER (?myatHponePyo = ?father)
  }
  
  # Step 5: Find the predecessor of Myat Hpone Pyo in royalty
  OPTIONAL {
    ?predecessor dbo:successor ?myatHponePyo .
  }

  FILTER EXISTS { ?child . } 
  FILTER EXISTS { ?spouse . }
  FILTER EXISTS { ?father . }
  FILTER EXISTS { ?myatHponePyo . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberOf1FCMagdeburg ?designerOfAMR1 WHERE {
  # Find members of 1. FC Magdeburg
  VALUES ?club { dbr:1._FC_Magdeburg }
  ?player dbo:memberOf ?club .
  BIND(?player AS ?memberOf1FCMagdeburg)

  # Find designer of Aston Martin AMR1
  VALUES ?car { dbr:Aston_Martin_AMR1 }
  ?car dbo:designer ?designer .
  BIND(?designer AS ?designerOfAMR1)
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?profession WHERE {
  VALUES ?show { dbr:Ab_Kya_Hoga }
  
  ?castMember dbo:cast ?show .
  ?castMember rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en')
  
  OPTIONAL {
    ?castMember dbo:profession ?profession .
    FILTER CONTAINS(LCASE(str(?profession)), ""politician"")
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sofiaPopulation WHERE {
  dbr:Sofia dbo:populationTotal ?sofiaPopulation .
}
```",1,1,2,1,1,3,2,20,0,1,16,0.0,0.0,0
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?bobbyShmurda { dbr:Bobby_Shmurda }
  ?bobbyShmurda dbo:associatedMusicalArtist ?associatedArtist .
  FILTER EXISTS { ?associatedArtist a dbo:MusicalArtist . }
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dispatchesActor ?shadowActor ?shatrughanSinhaProfession WHERE {
  # Actor of ""Dispatches from Elsewhere""
  VALUES ?dispatchesSeries { dbr:Dispatches_from_Elsewhere }
  ?dispatchesSeries dbo:starring ?dispatchesActor .

  # Professional in the alter ego of The Shadow
  VALUES ?shadowCharacter { dbr:The_Shadow_(character) }
  ?shadowCharacter dbo:alterEgo ?shadowActor .

  # Profession of Shatrughan Sinha
  dbr:Shatrughan_Sinha dbo:profession ?shatrughanSinhaProfession .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # For Philip, Despot of Romania
  ?philipParent dbo:child dbr:Philip_Despot_of_Romania .
  ?philipGrandparent dbo:child ?philipParent .
  FILTER (?philipGrandparent rdf:type dbo:Monarch) .

  # For Charles I of Hungary
  ?charlesParent dbo:child dbr:Charles_I_of_Hungary .
  ?charlesGrandparent dbo:child ?charlesParent .
  FILTER (?charlesGrandparent rdf:type dbo:Monarch) .

  # Find the spouse common to both grandparents
  OPTIONAL { ?philipGrandparent dbo:spouse ?spouse . }
  OPTIONAL { ?charlesGrandparent dbo:spouse ?spouse . }

  FILTER EXISTS { ?philipGrandparent dbo:spouse ?spouse . }
  FILTER EXISTS { ?charlesGrandparent dbo:spouse ?spouse . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Winston_Chang dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?event dbo:place dbr:Spain .
  ?event dbo:officeHolder dbr:Anxo_Quintana .
  ?event dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .
  ?event dbo:positionHeld ?office .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Eleonora_Menicucci_de_Oliveira dbo:almaMater ?almaMater .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfBaedaMaryam1 ?alterEgoOfLamontCranston WHERE {
  VALUES ?baedaMaryam1 { dbr:Baeda_Maryam_I }
  
  # Find the father of Baeda Maryam I
  ?baedaMaryam1 dbo:father ?fatherOfBaedaMaryam1 .
  
  # Find the alter ego of Lamont Cranston (The Shadow)
  VALUES ?lamontCranston { dbr:Lamont_Cranston }
  ?lamontCranston dbo:alterEgo ?alterEgoOfLamontCranston .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentOfPolitician WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby and his child
  VALUES ?frederickStanley { dbr:Frederick_Stanley,_16th_Earl_of_Derby }
  ?child dbo:childOf ?frederickStanley .
  
  # Step 2: Find the father of that child who is a politician
  ?father dbo:parentOf ?child .
  FILTER EXISTS { ?father dbo:occupation dbr:Politician . }

  # Step 3: Ensure this politician is an alumnus of Eton College
  ?father foaf:alumniOf dbr:Eton_College .

  # Step 4: Find the parent of this politician
  ?parentOfPolitician dbo:parentOf ?father .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtistURL WHERE {
  dbr:R.E.M. dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist a dbo:Band ; 
                   rdfs:label ?artistLabel .
  FILTER (lang(?artistLabel) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?rulingPartyMember WHERE {
  # Find a film by Nat Levine
  ?film dbo:director dbr:Nat_Levine .
  
  # Find an actor in that film
  ?film dbo:actor ?actor .

  # Get the spouse of the actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Identify a landmark at the specified elevation
  ?landmark dbo:elevation ""20.1168""^^xsd:float .
  
  # Find the ruling party member associated with this landmark
  ?landmark dbo:rulingPartyMember ?rulingPartyMember .

  # Ensure the spouse is linked to the ruling party member
  FILTER (?spouse = ?rulingPartyMember)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?actorLabel WHERE {
  VALUES ?paradiseFilm { 
    dbr:Paradise_(2013_film) 
  }
  ?paradiseFilm dbo:starring ?actor .
  OPTIONAL { ?actor rdfs:label ?actorLabel FILTER (lang(?actorLabel) = 'en') . }
}
```",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather ?spouse WHERE {
  # Step 1: Identify Dorothea of Lorraine's father
  ?dorothea dbo:father ?father .
  FILTER(STRSTARTS(STR(?dorothea), ""http://dbpedia.org/resource/Dorothea_of_Lorraine""))

  # Step 2: Find the parent of Dorothea's father (Dorothea's grandfather)
  ?father dbo:parent ?parentOfFather .

  # Step 3: Identify Francis I, Duke of Lorraine's parent
  dbr:Francis_I,_Duke_of_Lorraine dbo:parent ?francisParent .

  # Step 4: Find the spouse of this parent
  ?spouse dbo:spouse ?francisParent .

  # Ensure both individuals are royalty and nobility
  FILTER EXISTS { ?parentOfFather a dbo:RoyalFamilyMember . }
  FILTER EXISTS { ?parentOfFather a dbo:NoblePerson . }
  FILTER EXISTS { ?spouse a dbo:RoyalFamilyMember . }
  FILTER EXISTS { ?spouse a dbo:NoblePerson . }

  # Ensure the parent of Dorothea's father is the same as the spouse
  FILTER (?parentOfFather = ?spouse)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Step 1: Find the predecessor of Stephen V of Hungary
  ?predecessor dbo:predecessor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Identify Philip, Despot of Romania's parent and their spouse
  ?philipParent dbo:child dbr:Philip_Despot_of_Romania ;
               rdf:type dbo:Monarch .
  ?spouse dbo:spouse ?philipParent .

  # Step 3: Find the child of the child who is a royalty from the spouse's children
  ?child1 dbo:child ?spouse .
  ?royalChild dbo:child ?child1 ;
              rdf:type dbo:Monarch .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieActor ?albumActor WHERE {
  # Find a movie with ""and"" in its title or description and get an actor
  ?movie dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""and""))
  ?movie dbo:actor ?movieActor .

  # Find the album related to T.I.'s song ""What You Know""
  dbr:Paper_Trail dbo:song ?song .
  ?song dbo:title ""What_You_Know"" .
  ?album dbo:track ?song .
  
  OPTIONAL {
    # Check if there's a music video or notable association involving an actor
    ?video dbo:starring ?albumActor .
    ?video dbo:relatedMusicalWork ?album .
    FILTER(?album = ?album)
  }
}
```",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:The_Alan_Parsons_Project dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Vince_Gilligan dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfFather WHERE {
  # Philip I, Prince of Taranto's father
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?charlesII .
  
  # Charles II of Anjou's spouse who is royalty
  ?charlesII dbo:spouse ?mariaOfHungary .
  FILTER (strstarts(str(?mariaOfHungary), ""http://dbpedia.org/resource/Maria_of_Hungary_(queen)""))

  # Maria of Bytom's spouse
  dbr:Maria_of_Bytom dbo:spouse ?boleslawThePious .

  # Bolesław the Pious' parent who is a child of Stephen V of Hungary
  ?boleslawThePious dbo:parent ?elizabethTheCuman .
  ?elizabethTheCuman dbo:childOf dbr:Stephen_V_of_Hungary .

  # The spouse we are looking for is Maria of Hungary (queen)
  BIND(?mariaOfHungary AS ?spouseOfFather)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalSpouse WHERE {
  # Step 1: Identify Princess Antoinette of Brunswick-Wolfenbüttel
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?royalChild .

  # Step 2: Ensure the child is royalty (assuming a property like dbo:royalty or similar)
  OPTIONAL { ?royalChild dbo:royalty true . }

  # Step 3: Find the spouse of this royal child
  ?royalChild dbo:spouse ?childSpouse .

  # Step 4: Find the spouse's spouse (the final answer we seek)
  ?childSpouse dbo:spouse ?finalSpouse .
}
```",3,4,4,3,1,3,2,20,2,1,2,0.6666666666666666,0.5,0.5714285714285715
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?educationalInstitution WHERE {
  dbr:Nobel_Prize_in_Physics dbo:awardedBy ?organization .
  OPTIONAL { 
    ?organization dbo:location ?educationalInstitution .
    FILTER (isBlank(?educationalInstitution) != true)
  }
  OPTIONAL {
    ?organization dbo:event ?show .
  }
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalInAlterEgo ?actorOfTISong WHERE {
  # Find ""The Golden Master"" series
  VALUES ?goldenMasterSeries { 
    dbr:The_Golden_Master_(series) 
  }
  
  # Find the professional in the alter ego of the series
  ?goldenMasterSeries dbo:alterEgo ?professionalInAlterEgo .
  
  # Find T.I.'s songs and albums
  VALUES ?tISong { 
    dbr:Whatever_Ya_Think_I_Am_(song) 
    dbr:Live_in_Europe_(T.I._album)
    # Add more known songs/albums by T.I. if necessary
  }
  
  # Find the actor of the song/album
  ?tISong dbo:actor ?actorOfTISong .
  
  # Check for connection between professional and actor
  FILTER (?professionalInAlterEgo = ?actorOfTISong)
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?otherProfessional WHERE {
  dbr:Rod_Argent dbo:profession ?rodArgentProfession .
  ?otherProfessional a dbo:Person ;
                    dbo:profession ?rodArgentProfession .
  FILTER (?otherProfessional != dbr:Rod_Argent)
}
```",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeasonURL WHERE {
  dbr:VfL_Bochum dbo:season [
    dbo:startDate ?startDate ;
    dbo:endDate ?endDate .
    FILTER (YEAR(?startDate) = 2006 && YEAR(?endDate) = 2007)
  ].
  
  OPTIONAL {
    dbr:VfL_Bochum dbo:season ?successorSeason .
    FILTER (?successorSeason != ?currentSeason).
    BIND(STRDT(CONCAT(YEAR(?startDate), ""-"", (YEAR(?startDate) + 1)), xsd:gYearMonth) AS ?currentSeason)
    FILTER (STRSTARTS(STR(?successorSeason), STR(?currentSeason)))
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?associatedBand WHERE {
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbo:associatedBand ?associatedBand .
  }
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scottLaFaroBirthPlace ?bobCreweBirthPlace WHERE {
  dbr:Scott_LaFaro dbo:birthPlace ?scottLaFaroBirthPlace .
  dbr:Bob_Crewe dbo:birthPlace ?bobCreweBirthPlace .
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieOrShow WHERE {
  dbr:Richard_E._Grant dbo:starring ?movieOrShow .
  FILTER (
    (EXISTS { ?movieOrShow a dbo:Film . }) ||
    (EXISTS { ?movieOrShow a dbo:TelevisionSeries . })
  )
}
```",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Tony Hollings' birth date
  VALUES ?tonyHollingsBirthDate { 
    dbr:Tony_Hollings dbo:birthDate ?tonyHollingsBirthDate .
  }
  
  # Find a person who is an athlete, soccer player, sports manager, and soccer manager
  ?person a dbo:Athlete ;
          dbo:soccerPlayer true ;
          dbo:sportsManager true ;
          dbo:soccerManager true .

  # Ensure the person shares the same birth date as Tony Hollings
  ?person dbo:birthDate ?personBirthDate .
  
  FILTER (?tonyHollingsBirthDate = ?personBirthDate)
}
```",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```
# Unable to construct a SPARQL query due to lack of specific entities or context in the question.
```",1,1,2,1,1,2,2,9,0,0,98447,0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?photographerParent ?doonArbusParent WHERE {
  # Find the parent class of Photographer
  ?photographer a dbo:Photographer .
  ?photographer rdfs:subClassOf* ?photographerParent .

  # Find Doon Arbus and her parent category or occupation
  dbr:Doon_Arbus a ?doonArbusType .
  ?doonArbusType rdfs:subClassOf* ?doonArbusParent .
}
```",3,3,4,2,2,3,3,71,0,566,2,0.0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Ann_Sothern dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find awardees of Commander of the Royal Victorian Order
  ?awardee dbo:award ?order .
  FILTER(STRSTARTS(STR(?order), ""http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order""))

  # Arthur Stanley's father
  dbr:Arthur_Stanley_(politician) dbo:father ?arthurFather .

  # Frederick Stanley, 16th Earl of Derby's children
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .
  
  # Find the common parent
  OPTIONAL { ?awardee dbo:father ?parent . }
  OPTIONAL { ?arthurFather = ?parent . }
  OPTIONAL { ?frederickChild dbo:parent ?parent . }

  FILTER(?parent != dbr:Fredrick_Stanley,_16th_Earl_of_Derby)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?settlement WHERE {
  # Amasa Tracy's wars
  dbr:Amasa_Tracy dbo:participatedIn ?war .
  
  # Person deceased on 1850-08-05
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .

  # Ensure the settlement is a settlement and American
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
  
  # Quincy Adams Gillmore's force
  dbr:Quincy_Adams_Gillmore dbo:militaryForce ?force .
  
  # Link the person to Quincy Adams Gillmore's force if applicable
  OPTIONAL { ?person dbo:servedIn ?force }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?bandMember WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1945 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 30)
  
  OPTIONAL { 
    ?person dbo:bandMember ?bandMember .
  }
}
```",2,3,3,2,1,3,3,71,0,2,61,0.0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Maria Anna of Bavaria (born 1574)
  dbr:Maria_Anna_of_Bavary_(1574) dbo:father ?father .

  # Children of the father
  ?father dbo:child ?child .

  # Filter for royalty
  ?child rdf:type dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
  # Step 1: Find the award Rodney Lees received
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Step 2: Get the awardee of that award
  ?award dbo:recipient ?awardee .

  # Step 3: Find the parent of the awardee
  ?awardee dbo:parent ?parentOfAwardee .

  # Step 4: Find Edward Stanley's parent
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?edwardParent .

  # Step 5: Identify a child of Edward Stanley's parent who is both a politician and an office holder
  ?child dbo:parent ?edwardParent .
  ?child rdfs:subClassOf* dbo:Politician ;
         rdfs:subClassOf* dbo:OfficeHolder .

  # Step 6: Find the parent of this child
  ?child dbo:parent ?finalParent .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherURL WHERE {
  # Baeda Maryam I
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }

  # Child of Baeda Maryam I
  ?child dbo:parent ?baedaMaryamI .

  # Father of the child (Baeda Maryam I)
  ?father dbo:parent ?child .
  
  # Grandfather (Father's Father)
  ?grandfather dbo:parent ?father .

  # Check if grandfather is royalty or an office holder
  OPTIONAL { ?grandfather dbo:royalTitle ?title . }
  FILTER EXISTS { ?grandfather dbo:royalTitle ?title } 
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?greatGrandchild WHERE {
  # Alexander of Württemberg's child
  dbr:Alexander_of_W%C3%BCrttemberg dbo:child ?child1 .
  
  # Child of Alexander's child (grandchild)
  ?child1 dbo:child ?grandChild1 .

  # Great-grandchild of Alexander
  ?grandChild1 dbo:child ?greatGrandchild .

  # Archduchess Margarete Sophie's child
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?child2 .
  
  # Child of Archduchess Margarete Sophie's child (grandchild)
  ?child2 dbo:child ?grandChild2 .

  # Filter to find common descendant
  FILTER (?greatGrandchild = ?grandChild2)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warTVShow ?societalEvent WHERE {
  VALUES ?warTVShow { 
    dbr:War_(2007_TV_series) # Assuming this is the TV show ""War""
  }
  
  OPTIONAL {
    ?warTVShow dbo:relatedTo ?societalEvent .
  }

  FILTER (
    EXISTS {
      ?battle dbo:participatingMilitaryForce ?militaryForce .
      VALUES ?battle { dbr:Battle_of_Vienna_1683 }
      ?militaryForce dbo:relatedTo ?societalEvent .
    }
  )
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?rodArgentProfession .
  
  # Find Joey B's birth name
  dbr:Joey_B dbo:birthName ?joeyBBirthName .

  # Find people with the same profession as Rod Argent and the same birth name as Joey B
  ?person a dbo:Person ;
          dbo:profession ?rodArgentProfession ;
          dbo:birthName ?joeyBBirthName .
  
  FILTER (?person != dbr:Rod_Argent && ?person != dbr:Joey_B)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonArtist WHERE {
  OPTIONAL { 
    dbr:Paul_McCartney dbo:associatedMusicalArtist ?artist1 .
  }
  OPTIONAL { 
    dbr:Rod_Argent dbo:associatedMusicalArtist ?artist2 .
  }
  OPTIONAL { 
    dbr:Amakye_Dede dbo:associatedMusicalArtist ?artist3 .
  }
  
  FILTER (?artist1 = ?artist2 && ?artist2 = ?artist3)
  BIND(?artist1 AS ?commonArtist)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?charge a dbo:MilitaryEngagement ;
         rdfs:label ""Pickett's Charge""@en .
  
  ?militaryForce dbo:participatedIn ?charge ;
                 dbp:commander ?commander .

}
```",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor ?predecessorLabel WHERE {
  ?adaJaneLow rdfs:label ""Ada Jane Low""@en .
  ?adaJaneLow dbo:occupation dbr:Politician .
  ?adaJaneLow dbo:predecessor ?predecessor .
  OPTIONAL { ?predecessor rdfs:label ?predecessorLabel . FILTER (lang(?predecessorLabel) = 'en') }
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  dbr:Herschel_Bernardi dbo:starring ?movie .
}
```",1,2,2,1,1,3,3,71,0,0,13,0,0.0,0
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceOfAwardee ?birthPlaceSettlement WHERE {
  # Find the award associated with Quincy Adams Gillmore
  ?award dbo:recipient ?awardee .
  ?award dbo:recipient dbr:Quincy_Adams_Gillmore .

  # Determine a ""force"" related property for the awardee
  OPTIONAL { ?awardee dbo:militaryRank ?forceOfAwardee . }
  
  # Find Henry Clay Lewis's birthplace and ensure it is an American settlement
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  FILTER (?forceOfAwardee != '' && ?birthPlaceSettlement = ?birthPlace)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?elDeafo dbo:author ?author .
  ?author foaf:name ""Cece Bell"" .
  ?author dbo:birthPlace ?birthPlace .
  
  VALUES ?elDeafo { 
    dbr:El_Deafo
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  # Find the commander of the Siege of Mukha who is royalty
  ?siege dbo:eventLocation dbr:Siege_of_Mukha .
  ?siege dbo:commander ?commander .
  ?commander dbo:royalTitle ?title .

  # Find the parent of this commander
  OPTIONAL { 
    ?parent dbo:child ?commander .
    
    # Ensure the parent is royalty and find their child who is also royalty
    ?parent dbo:royalTitle ?parentTitle .
    ?parent dbo:child ?childOfParent .
    ?childOfParent dbo:royalTitle ?childTitle .
  }
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Yamaza Enjirō's birthplace
  dbr:Yamazaki_Enjiro dbo:birthPlace ?yamazaBirthPlace .

  # Hashiba Hidekatsu's associated war
  dbr:Hidekatsu dbo:associatedWithWar ?hashibaWar .

  # Find a common entity related to both the birthplace and the war
  OPTIONAL { ?commonEntity dbo:location ?yamazaBirthPlace . }
  OPTIONAL { ?commonEntity dbo:relatedEvent ?hashibaWar . }

  FILTER (?commonEntity != dbr:Yamazaki_Enjiro && ?commonEntity != dbr:Hidekatsu)
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his child
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  
  # Child's child (Grandchild of Béla IV)
  ?child dbo:child ?grandchild .

  # Grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Father of Philip I, Prince of Taranto
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?fatherOfPhilipI .
  
  # Spouse of the father of Philip I, Prince of Taranto
  ?spouse dbo:spouse ?fatherOfPhilipI .
  
  # Parent of Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:parent ?grandchild .

  # Ensure the grandchild is the spouse and parent as required
  FILTER (?spouse = ?grandchild)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalty WHERE {
  # Minye Kyawswa and his child
  VALUES ?minyeKyawswa { dbr:Minye_Kyawswa }
  ?child dbo:childOf ?minyeKyawswa .

  # Predecessor of Myat Hpone Pyo
  VALUES ?myatHponePyo { dbr:Myat_Hpone_Pyo }
  OPTIONAL {
    ?predecessor dbo:predecessor ?myatHponePyo .
  }

  # Spouse of the father of Myat Hpone Pyo
  ?father dbo:childOf ?minyeKyawswa .
  ?spouse dbo:spouse ?father .

  # Ensure the spouse is royalty and matches the predecessor
  FILTER (?predecessor = ?spouse)
  ?royalty rdf:type dbo:Monarch .
  FILTER (?spouse = ?royalty)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?juanCarlosMolinaPlayer ?actorSoccerPlayerAthlete ?personTeam WHERE {
  # Find player in Juan Carlos Molina (footballer)
  OPTIONAL { 
    dbr:Juan_Carlos_Molina_(footballer) dbo:player ?juanCarlosMolinaPlayer .
  }
  
  # Find actor in All or Nothing: Manchester City who is also a soccer player and athlete
  OPTIONAL {
    ?actorSoccerPlayerAthlete dbo:spouseOrPartner ?allOrNothingActor .
    ?allOrNothingActor dbo:title dbr:All_or_Nothing:_Manchester_City .
    FILTER EXISTS { ?actorSoccerPlayerAthlete dbo:sport dbr:Soccer }
    FILTER EXISTS { ?actorSoccerPlayerAthlete dbo:athlete dbr:Athlete }
  }

  # Find team of person born on 1979-11-03 who is a soccer player and manager
  OPTIONAL {
    ?person dbo:birthDate ""1979-11-03""^^xsd:date .
    FILTER EXISTS { ?person dbo:sport dbr:Soccer }
    FILTER EXISTS { ?person dbo:manager ?team . }
    ?person dbo:team ?personTeam .
  }

  # Ensure the actor is also a soccer player and athlete
  FILTER (?actorSoccerPlayerAthlete = ?juanCarlosMolinaPlayer)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Antoine, Duke of Lorraine
  VALUES ?antoine { dbr:Antoine,_Duke_of_Lorraine }
  
  # Find a child who is royalty
  ?child dbo:parent ?antoine .
  ?child dbo:royalty true .

  # Find the parent of this child (who should be Antoine)
  ?parent dbo:child ?child .
  
  # Ensure the parent is both royalty and noble
  ?parent dbo:royalty true .
  ?parent dbo:noble true .

  # Get the spouse of this parent
  ?parent dbo:spouse ?spouse .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?profession WHERE {
  # Find the resource for Coke Studio Philippines
  VALUES ?cokeStudioURL { 
    dbr:Coke_Studio_Philippines 
  }
  
  # Identify the producer of Coke Studio Philippines
  ?cokeStudioURL dbo:producer ?producer .
  
  # Determine the profession of the producer
  ?producer a ?profession .
}
```",3,3,4,3,1,3,3,71,3,17,46014,0.15,6.519329812895235e-05,0.00013032995199513435
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesIFather WHERE {
  # Step 1: Identify Charles I of Hungary's father
  ?charlesI dbr:Charles_I_of_Hungary .
  ?charlesI dbo:father ?charlesIFather .

  # Step 2: Find the parent of Charles I's father that is royalty
  ?charlesIFather dbo:parent ?parentOfCharlesIFather .
  
  OPTIONAL {
    ?parentOfCharlesIFather dbo:royalty true .
  }

  # Step 3: Identify Philip I, Prince of Taranto's father
  ?philipI dbr:Philip_I,_Prince_of_Taranto .
  ?philipI dbo:father ?philipIFather .

  # Step 4: Find the spouse of Philip I's father
  ?philipIFather dbo:spouse ?spouseOfPhilipsFather .

  # Step 5: Identify Béla IV of Hungary's child that is royalty
  ?belaIV dbr:Béla_IV_of_Hungary .
  ?belaIV dbo:child ?belasChild .
  
  OPTIONAL {
    ?belasChild dbo:royalty true .
  }

  # Step 6: Find the child of this royal child
  ?belasChild dbo:child ?childOfBelasChild .

  # Step 7: Determine the common entity
  FILTER (?parentOfCharlesIFather = ?spouseOfPhilipsFather)
  FILTER (?childOfBelasChild = ?parentOfCharlesIFather)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  VALUES ?joeyBadass { dbr:Joey_Badass }
  
  ?joeyBadass dbo:musician true .
  ?joeyBadass foaf:name ""Joey Badass""@en .

  OPTIONAL {
    ?joeyBadass dbo:associatedMusicalArtist ?associatedArtist .
  }

  FILTER EXISTS {
    ?person foaf:name ""Joey B""@en .
    ?person dbo:musician true .
    ?person = ?joeyBadass
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?vinceGilliganAwardeeBirthPlace ?glennYoungkinBirthPlace WHERE {
  # Cece Bell's birthplace
  OPTIONAL { 
    dbr:Cecil_C._""Cece""_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
  
  # Vince Gilligan's award and the awardee's birthplace
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series .
    ?awardee dbo:awardReceived dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series ;
             dbo:birthPlace ?vinceGilliganAwardeeBirthPlace .
  }
  
  # Glenn Youngkin's birthplace
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?commanderName WHERE {
  # Find the author of ""Back to Work""
  OPTIONAL {
    dbr:Back_to_Work_(book) dbo:author ?author .
    ?author foaf:name ?authorName .
  }
  
  # Find the commander during the Third Taiwan Strait Crisis
  OPTIONAL {
    dbr:Third_Taiwan_Strait_Crisis dbo:commander ?commander .
    ?commander foaf:name ?commanderName .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:Kent_Allard dbo:alterEgo ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?virginiaGovernorBirthPlace WHERE {
  # Retrieve Vince Gilligan's birth place
  dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  
  # Retrieve the current governor of Virginia and their birth place
  OPTIONAL {
    ?governor a dbo:GovernmentHead ;
             dbo:stateOrProvince dbr:Virginia .
    ?governor dbo:birthPlace ?virginiaGovernorBirthPlace .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandGrandchildOfAlexander ?royalChild WHERE {
  # Step 1: Alexander of Württemberg's family tree
  VALUES ?alexander { dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) }
  
  ?alexander dbo:child ?child1 .
  ?child1 dbo:child ?grandChild1 .
  ?grandChild1 dbo:child ?grandGrandchildOfAlexander .

  # Step 2: Archduchess Margarete Sophie of Austria's parent
  VALUES ?margarete { dbr:Margarete_Sophie_of_Austria }
  
  ?margarete dbo:parent ?parentOfMargarete .
  ?parentOfMargarete dbo:child ?child2 .
  ?child2 dbo:child ?royalChild .

  # Step 3: Ensure the final individuals are royalty
  OPTIONAL { ?grandGrandchildOfAlexander dbo:royalTitle ?title1 }
  OPTIONAL { ?royalChild dbo:royalTitle ?title2 }

  FILTER (?grandGrandchildOfAlexander = ?royalChild)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  VALUES ?person { 
    dbr:Alberto_Ruiz-Gallardón 
  }
  
  ?person dbo:positionHeld ?office .
  OPTIONAL {
    ?office dbo:relatedEvent ?event .
    FILTER (CONTAINS(LCASE(STR(?event)), ""central african republic civil war""))
  }
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel ?grandchildOfBelaIV ?spouseOfCharlesII WHERE {
  # Find the parent of Charles Martel of Anjou
  OPTIONAL { 
    dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .
  }

  # Find a grandchild of Béla IV of Hungary who is royalty
  OPTIONAL {
    ?childOfBelaIV dbo:child dbr:Béla_IV_of_Hungary ;
                  dbo:child ?grandchildOfBelaIV .
    FILTER EXISTS { ?grandchildOfBelaIV rdf:type dbo:Monarch }
  }

  # Find the spouse of Charles II of Naples
  OPTIONAL {
    dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .
  }

  # Ensure that the grandchild of Béla IV is also a parent of Charles Martel of Anjou
  FILTER (?grandchildOfBelaIV = ?parentOfCharlesMartel)

  # Ensure that the spouse of Charles II of Naples is the same as the grandchild of Béla IV
  FILTER (?spouseOfCharlesII = ?grandchildOfBelaIV)
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Ekaterina_Zaharieva dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?authorName WHERE {
  VALUES ?deathDate { ""2020-06-18""^^xsd:date }
  
  # Find a person who was an artist and musical artist, deceased on the specified date
  ?person dbo:deathDate ?deathDate .
  ?person rdf:type dbo:Artist .
  ?person rdf:type dbo:MusicalArtist .
  
  # Find movies that are also television shows
  ?movie dbo:genre dbr:Television_series ;
         dbo:genre dbr:Film .
  
  # Check if the person authored or created the movie/television show
  OPTIONAL {
    ?movie dbo:creator ?person .
  }
  
  FILTER EXISTS { ?movie dbo:creator ?person }
  
  BIND(?movie AS ?movieURL)
  BIND(str(?person) AS ?authorName)
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childOfParent WHERE {
  ?minHlaHtut dbo:parent ?parent .
  FILTER(STR(?minHlaHtut) = ""Min_Hla_Htut"") 
  ?parent dbo:child ?childOfParent .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander30thRegiment ?militaryForceBattleOfCapeFinisterre WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot in its conflicts
  ?conflict dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  ?conflict dbo:commander ?commander30thRegiment .

  # Find the military force associated with William Bayne during the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_1805 dbo:militaryForce ?militaryForceBattleOfCapeFinisterre .
  ?bayne dbo:associatedWithMilitaryEvent dbr:Battle_of_Cape_Finisterre_1805 ;
         rdfs:label ""William Bayne""@en .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?agueroTeam ?aimarTeam ?athleteName ?athleteTeam WHERE {
  # Find Sergio Agüero's team(s)
  dbr:Sergio_Ag%C3%BCero dbo:team ?agueroTeam .

  # Find Pablo Aimar's team(s)
  dbr:Pablo_Aimar dbo:team ?aimarTeam .

  # Identify the athlete born on 1955-02-22
  ?athlete a dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date .
  
  # Find the teams associated with this athlete
  OPTIONAL { ?athlete dbo:team ?athleteTeam . }

  # Return the names of the athletes for clarity
  BIND (str(?athlete) AS ?athleteName)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfBaedaMaryamI ?childOfParent WHERE {
  # Baeda Maryam I and his father
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }
  ?baedaMaryamI dbo:father ?fatherOfBaedaMaryamI .
  
  # Commander in Siege of Mukha and their parent
  ?siege dbr:Siege_of_Mukha dbo:commander ?commander .
  ?commander dbo:parent ?parentOfCommander .

  # Ensure both are royalty
  ?fatherOfBaedaMaryamI a dbo:Monarch .
  ?parentOfCommander a dbo:Monarch .

  # Find child of the royal parent
  OPTIONAL {
    ?parentOfCommander dbo:child ?childOfParent .
  }

  # Match the father of Baeda Maryam I with the parent of the commander
  FILTER (?fatherOfBaedaMaryamI = ?parentOfCommander)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?writer WHERE {
  VALUES ?aleksandrFilimonov { 
    dbr:Aleksandr_Filimonov 
  }
  ?work dbo:creator ?aleksandrFilimonov .
  OPTIONAL {
    ?work dbo:author ?writer .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:participatedInWar ?war .
  OPTIONAL { 
    dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commander ?commander .
  }
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Jean Baptist, Comte d'Arco and his role in the Russo-Polish War
  dbr:Jean_Baptist_Comte_d%27Arco dbo:commanderOf dbr:Russo-Polish_War_(1654%E2%80%931667) .
  
  # Find the successor of Jean Baptist, Comte d'Arco as a commander
  ?successor dbo:succeededBy dbr:Jean_Baptist_Comte_d%27Arco ;
             dbo:commanderOf dbr:Russo-Polish_War_(1654%E2%80%931667) .
  
  # Ensure the successor is also a politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolder ?office .

  # Optional clause to ensure the war is both a societal event and television show
  OPTIONAL {
    dbr:Russo-Polish_War_(1654%E2%80%931667) dbo:socialEvent _:event .
    dbr:Russo-Polish_War_(1654%E2%80%931667) dbo:televisionShow _:show .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfMaryElphinstone ?birthPlaceRegionCountry WHERE {
  # Find parent of Mary Elphinstone, Lady Elphinstone
  dbr:Mary_Elphinstone,_Lady_Elphinstone dbo:parent ?parentOfMaryElphinstone .
  
  # Find birthplace of William Gayner and ensure it is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthPlaceRegionCountry .
  ?birthPlaceRegionCountry rdf:type dbo:Country ;
                          rdf:type dbo:Region .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOffice WHERE {
  dbr:Galician_regional_election,_2009 dbo:officeHeldBy ?leader .
  ?leader dbo:positionHeld ?leaderOffice .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Nicholas_II_of_Russia dbo:positionHeld ?position .
  ?position dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  ?residence dbo:resident ?tenant .
}
```",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerName ?birthPlace WHERE {
  VALUES ?song { dbr:Boom_Shack-A-Lak }
  ?song dbo:composer ?writer .
  ?writer foaf:name ?writerName ;
          dbo:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(?birthPlace), ""birmingham""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Rod_Argent dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?musicalArtist WHERE {
  # Find band members of Uncle Murda
  VALUES ?uncleMurda { dbr:Uncle_Murda }
  ?bandMember dbo:bandMember ?uncleMurda .

  # Find a musical artist born in Florida with a matching birth name to a native from Florida
  ?musicalArtist dbo:birthPlace dbr:Florida ;
                a dbo:MusicalArtist ;
                dbo:birthName ?birthName .
  
  # Ensure the birth name matches that of a native from Florida
  ?native dbo:birthPlace dbr:Florida ;
          dbo:birthName ?birthName .

  FILTER (?bandMember != ?musicalArtist)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreForce ?medalOfHonorAwardee ?awardeeForce WHERE {
  # Find the force associated with Quincy Adams Gillmore
  dbr:Quincy_Adams_Gillmore dbo:militaryService ?gillmoreForce .
  
  # Find individuals who have been awarded the Medal of Honor
  ?medalOfHonorAwardee dbo:awardedMedal dbr:Medal_of_Honor .
  
  # Find the force associated with each Medal of Honor awardee
  ?medalOfHonorAwardee dbo:militaryService ?awardeeForce .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Richard Grant Esterhuysen's DBpedia resource
  VALUES ?richardEsterhuysen { 
    dbr:Richard_E._Grant 
  }
  
  # Find movies that are also television shows
  ?movie dbo:genre/dbo:subClassOf* dbo:TelevisionShow .
  
  # Check if Richard Grant Esterhuysen acted in these movies
  ?movie dbo:starring ?richardEsterhuysen .
  
  # Identify other actors involved in the same movie/television show
  ?movie dbo:starring ?actor .
  
  FILTER (?richardEsterhuysen != ?actor)
}
```",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?lahore { 
    dbr:Lahore 
  }
  ?person dbo:birthPlace ?lahore .
}
```",1,1,2,1,1,2,2,9,881,0,0,1.0,1.0,1.0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?theTripleXs { dbr:The_Three_Degrees }
  
  ?event dbo:participatedIn ?militaryConflict .
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:hasParticipant ?participant .

  OPTIONAL {
    ?participant dbo:leader ?commander .
  }

  FILTER EXISTS {
    ?theTripleXs dbo:associatedMusicalArtist ?participant .
  }
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Query for the director or producer of ""A Star Is Born"" (1937 film)
  VALUES ?aStarIsBornURL { 
    dbr:A_Star_Is_Born_(1937_film) 
  }
  
  ?aStarIsBornURL dbo:director|dbo:producer ?commonIndividual .

  # Query for the producer of ""The Adventures of Tom Sawyer"" (1938 film)
  VALUES ?tomSawyerURL { 
    dbr:The_Adventures_of_Tom_Sawyer_(1938_film) 
  }
  
  ?tomSawyerURL dbo:producer ?commonIndividual .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?governorBirthPlace WHERE {
  # Find Vince Gilligan's birth place
  VALUES ?vinceGilliganURL { dbr:Vince_Gilligan }
  ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .

  # Find Paulus Powell's birth place
  VALUES ?paulusPowellURL { dbr:Paulus_Powell }
  ?paulusPowell dbo:birthPlace ?regionBirthPlace .
  
  # Ensure the region is both a region and an administrative region
  ?regionBirthPlace rdf:type dbo:Region ;
                   rdf:type dbo:AdministrativeRegion .

  # Find the governor of that region
  OPTIONAL {
    ?regionBirthPlace dbo:governor ?governor .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }
  
  FILTER (?paulusPowellURL = dbr:Paulus_Powell)
}
```",4,7,5,3,2,3,3,71,0,75892,1,0.0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:author dbr:Joe_Biden .
  ?work rdf:type dbo:Book .
  ?work rdf:type dbo:WrittenWork .
  OPTIONAL { ?work dbo:country dbr:United_States . }
}
```",1,5,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete ?actor WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Polio dbo:birthDate ?martyBirthDate .

  # Find athletes with the same birthdate as Marty Pollio
  ?athlete dbo:birthDate ?athleteBirthDate .
  FILTER (?athleteBirthDate = ?martyBirthDate) .

  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .

  # Find actors in those films who are also soccer players and athletes
  ?actor dbo:actor ?film .
  ?actor dbo:soccerPlayer ?isSoccerPlayer .
  ?actor dbo:athlete ?isAthlete .
  FILTER (?isSoccerPlayer != '' && ?isAthlete != '')
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  OPTIONAL {
    dbr:Nicholas_Michael_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
  FILTER (?nickCurranAssociatedArtist = ?fabulousThunderbirdsURL)
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?spouseName WHERE {
  VALUES ?lindaCobb { dbr:Linda_Sue_Cobb }
  
  ?lindaCobb dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .

  OPTIONAL {
    ?producer dbo:producer ?movie .
    FILTER (?producer = ?spouse)
    ?movie rdfs:label ?movieLabel .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?movieLabel), "" "", ""_""))) AS ?movieURL)
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marianoRajoyOffice ?miguelMauraOffice ?madridTenant WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura
  }
  
  OPTIONAL {
    ?person dbo:office ?marianoRajoyOffice .
    FILTER (?person = dbr:Mariano_Rajoy)
  }

  OPTIONAL {
    ?person dbo:office ?miguelMauraOffice .
    FILTER (?person = dbr:Miguel_Maura)
  }
  
  OPTIONAL {
    dbr:Madrid dbo:hasGovernmentBuilding ?madridTenant .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?producerProfession WHERE {
  # Find the band associated with Robert Lamar Thompson
  dbr:Robert_Thompson_(musician) dbo:associatedBand ?band .
  
  # Identify the producer of Coke Studio Philippines and their profession
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer a dbo:Producer ;
            dbo:profession ?producerProfession .

  # Ensure Robert Lamar Thompson is a musical artist
  FILTER (dbr:Robert_Thompson_(musician) dbo:occupation dbr:Musical_artist)
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?princess { 
    dbr:Sara_bint_Faisal_(born_1980) 
  }
  OPTIONAL { ?princess dbo:mother ?parent . }
  OPTIONAL { ?princess dbo:father ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musician ?occupation WHERE {
  ?musician rdf:type dbo:Musician .
  ?musician dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoURL WHERE {
  # Find The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Identify the Siege of Mukha event and its participants
  OPTIONAL { 
    ?siegeEvent dbo:participant ?character .
    FILTER (CONTAINS(LCASE(?siegeEvent), ""siege of mukha""))
  }
  
  # Find characters with a royal parent or commander
  OPTIONAL {
    ?character dbo:parent ?royalParent .
    ?royalParent rdf:type dbo:Royal .
  }
  OPTIONAL {
    ?character dbo:commander ?royalCommander .
    ?royalCommander rdf:type dbo:Royal .
  }

  # Ensure the character is a child of royalty
  FILTER (?alterEgo = ?character)
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI WHERE {
  # Dawit I's child
  dbr:Dawit_I dbo:child ?childOfDawitI .
  
  # Child of Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:child ?childOfBaedaMaryamI .

  # Father of the father (grandfather) of the child of Baeda Maryam I
  ?childOfBaedaMaryamI dbo:father ?fatherOfChild .
  ?fatherOfChild dbo:father ?grandfatherOfChild .

  # Ensure the individual is a royalty or office holder
  OPTIONAL { ?grandfatherOfChild dbo:royalTitle ?title . }
  OPTIONAL { ?grandfatherOfChild dbo:officeHolder ?office . }

  # Match Dawit I's child with the grandfather of Baeda Maryam I's child
  FILTER (?childOfDawitI = ?grandfatherOfChild)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  # Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria_Queen_of_Portugal dbo:father ?father .

  # Father's name and royal title
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en') .

  # Check if the father was a commander in the Siege of Padua
  OPTIONAL {
    ?father dbo:commander dbr:Siege_of_Padua_1509 .
  }

  # Ensure the person is royalty
  ?father dbo:royalTitle ?title .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Marty Pollio's birth date
  dbr:Marty_Polloi dbo:birthDate ?martyBirthDate .
  
  # Find Sergio Agüero's team
  dbr:Sergio_Agüero dbo:playsFor ?sergioTeam .

  # Find players who are athletes, born on Marty Pollio's birthday, and play for the same team as Sergio Agüero
  ?player a dbo:Athlete ;
          dbo:birthDate ?playerBirthDate ;
          dbo:playsFor ?team .
  
  FILTER (?playerBirthDate = ?martyBirthDate)
  FILTER (?team = ?sergioTeam)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Saw Min Phyu's spouse
  dbr:Saw_Min_Phu_y dbo:spouse ?spouse .

  # Find children of the spouse
  ?spouse dbo:child ?child .

  # Filter for royalty among these children
  ?child rdf:type dbo:Monarch .

  # Find the predecessor of this royal child
  ?child dbo:predecessor ?predecessor .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePerson WHERE {
  # Step 1: Identify the award that is a region, American, a state, and a settlement
  VALUES ?award { 
    dbr:Puerto_Rico  # Assuming Puerto Rico fits the criteria based on description
  }
  
  # Step 2: Find the musical artist associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:associatedMusicalArtist ?musicalArtist1 .

  # Step 3: Identify Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?musicalArtist2 .
  
  # Step 4: Find a band member of the musical artist from step 2
  ?bandMember dbo:memberOfBand ?musicalArtist1 .

  # Ensure the band member is also associated with Bobby Shmurda's musical artist
  ?bandMember dbo:associatedMusicalArtist ?musicalArtist2 .
  
  # Step 5: Find who is native to the award and fits all criteria
  ?bandMember dbo:nativePlace ?award .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No valid SPARQL query can be constructed due to lack of specific details.
```",1,1,2,1,1,3,3,71,0,0,39790,0,0.0,0
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalWork WHERE {
  dbr:Steven_Kapur dbo:associatedMusicalWork ?musicalWork .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?letschManagedTeam ?player ?heussNativeCountry WHERE {
  # Thomas Letsch's managed team in the 2007–08 VfL Bochum season
  ?letschManagedTeam dbo:manager dbr:Thomas_Letsch ;
                     dbo:sportsTeamSeason dbr:2007%E2%80%9308_VfL_Bochum_season .

  # Players associated with that team in the same season
  ?player dbo:team ?letschManagedTeam ;
          dbo:sportsTeamSeason dbr:2007%E2%80%9308_VfL_Bochum_season .

  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?heussNativeCountry .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?ekaterinaZaharievaBirthPlace ?renetaKamberovaBirthPlace WHERE {
  OPTIONAL {
    dbr:Ekaterina_Zaharieva dbo:birthPlace ?ekaterinaZaharievaBirthPlace .
  }
  OPTIONAL {
    dbr:Reneta_Kamberova dbo:birthPlace ?renetaKamberovaBirthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?war ?deathPlace WHERE {
  # Find the leader of National Party of Greece
  dbr:National_Party_of_Greece dbo:leader ?leader .
  
  # Find any war associated with this leader
  ?leader dbo:associatedWith ?war .

  # Find Antonios Varthalitis' death place and ensure it's a settlement
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbpedia-owl:Settlement .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hostInstitution WHERE {
  ?rainerWeiss a dbo:Person ;
               foaf:name ""Rainer Weiss""@en .
  ?rainerWeiss dbo:award ?award .
  ?award dbo:hostedBy ?hostInstitution .
  FILTER (isBlank(?hostInstitution) = false)
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?francisParent ?reneespouse WHERE {
  VALUES ?francisResource { 
    dbr:Francis_I,_Duke_of_Lorraine 
  }
  OPTIONAL {
    ?francisResource dbo:parent ?francisParent .
  }

  VALUES ?renéeResource { 
    dbr:Renée_of_Bourbon 
  }
  OPTIONAL {
    ?renéeResource dbo:spouse ?reneespouse .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalParent ?childOfRoyalParent WHERE {
  # Find Yeshaq I's father who is a royalty
  VALUES ?yeshaqI { dbr:Yeshaq_I }
  
  ?yeshaqI dbo:father ?royalParent .
  ?royalParent rdf:type dbo:Monarch .

  # Find the child of this royal parent
  ?royalParent dbo:child ?childOfRoyalParent .

  # Ensure this child is also the father of Baeda Maryam I
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }
  
  ?childOfRoyalParent dbo:father ?baedaMaryamI .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict WHERE {
  # Find William Bayne's military conflicts
  OPTIONAL {
    dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?militaryConflict .
  }
  
  # Find the French campaign in Egypt and Syria's military conflict
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria dbo:militaryConflict ?militaryConflict .
  }

  # Ensure William Bayne was a commander in this context
  OPTIONAL {
    dbr:William_Bayne_(Royal_Navy_officer) dbo:commanderOf ?campaign .
    FILTER (?campaign = dbr:French_campaign_in_Egypt_and_Syria)
  }
  
  # Find the Knight Commander of the Order of the Bath's military conflict
  OPTIONAL {
    ?awardee dbo:orderAwardee dbr:Order_of_the_Bath .
    ?awardee dbo:militaryConflict ?militaryConflict .
    FILTER EXISTS { ?awardee dbo:knightCommanderOfTheOrderOfTheBath true }
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorURL ?actorName WHERE {
  VALUES ?movieURL { 
    # Replace with the specific movie resource URL
    dbr:The_Movie_Title 
  }
  
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor ;
         rdfs:label ?actorName ;
         foaf:name ?actorName .

  OPTIONAL {
    ?actor dbo:occupation ?profession .
    VALUES ?profession { 
      # Replace with the specific profession resource URL
      dbr:The_Profession_Title 
    }
  }

  FILTER (?actor = ?actorURL)
}
```",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athleteTeam ?soccerPlayerManager WHERE {
  VALUES ?martyPollioBirthDate { 
    dbr:Marty_Polio dbo:birthDate ?date1 .
  }
  
  OPTIONAL {
    ?person dbo:birthDate ?date1 ;
            dbo:sport ?sport .
    FILTER (?sport = dbo:Athlete)
    ?person dbo:team ?athleteTeam .
  }

  VALUES ?marceloSarmientoBirthDate { 
    dbr:Marcelo_Sarmiento dbo:birthDate ?date2 .
  }
  
  OPTIONAL {
    ?soccerPerson dbo:birthDate ?date2 ;
                  (dbo:occupation dbo:SoccerPlayer ; dbo:occupation dbo:SoccerManager) .
    FILTER (?soccerPerson = ?soccerPlayerManager)
  }

  FILTER (?athleteTeam != '' && ?soccerPlayerManager != '')
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfSantiagoDeCompostela ?countryOfResidence WHERE {
  # Find the tenant of Santiago de Compostela
  OPTIONAL {
    dbr:Santiago_de_Compostela dbo:mayor ?tenantOfSantiagoDeCompostela .
  }
  
  # Find Álvaro Quirós and his country of residence
  OPTIONAL {
    dbr:Álvaro_Quirós dbo:nationality ?countryOfResidence .
  }
}
```",3,4,4,2,2,3,3,71,0,1,4,0.0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Cynthia_Morgan dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?person dbo:commanderInWar ?war .
  ?war dbo:militaryConflict true .
  ?war dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  OPTIONAL {
    ?militaryForce dbo:event ?event .
    ?militaryForce dbo:societalEvent ?societalEvent .
    FILTER (?event != ?societalEvent)
  }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royBarrerasParty ?galanCountry ?gustavoPetroParty WHERE {
  # Roy Barreras' political party
  OPTIONAL { 
    dbr:Roy_Barreras dbo:party ?royBarrerasParty .
  }
  
  # Daniel Elahi Galán's country (using nationality as a proxy)
  OPTIONAL {
    dbr:Daniel_Elái_Galán dbo:nationality ?galanCountry .
  }

  # Gustavo Petro's political party
  OPTIONAL {
    dbr:Gustavo_Petro dbo:party ?gustavoPetroParty .
  }
}
```",4,4,5,2,3,2,3,28,1,9,0,0.1,1.0,0.18181818181818182
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSettlement WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?medalOfHonorAwardee dbo:awardedBy <http://dbpedia.org/resource/Medal_of_Honor> ;
                       dbo:servedInMilitaryForce ?force .
  
  ?quincyAdamsGillmore dbo:servedInMilitaryForce ?force .
  
  FILTER (?person != ?medalOfHonorAwardee)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Aladdin_(1958_film) dbo:starring ?cast .
  ?cast dbo:characterName ""Aladdin""@en .
  ?cast dbo:actor ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?awardee WHERE {
  VALUES ?academy { dbr:Royal_Swedish_Academy_of_Sciences }
  ?nobelPrize a dbo:NobelPrizeInPhysics ;
              dbo:awardingAcademy ?academy .
  
  OPTIONAL {
    ?nobelPrize dbo:recipient ?awardee .
  }

  OPTIONAL {
    ?show dbo:award ?nobelPrize .
  }
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Doug_Beattie dbo:residence ?residence .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedMusicalArtist WHERE {
  # Find Cynthia Morgan's birth name
  VALUES ?cynthiaMorganResource { 
    dbr:Cynthia_Morgan_(singer) 
  }
  
  ?cynthiaMorganResource dbo:birthName ?birthName .
  
  # Confirm her role in ""The Campus Queen""
  OPTIONAL {
    ?cynthiaMorganResource dbo:actor ?theCampusQueen .
    FILTER (str(?theCampusQueen) = str(dbr:The_Campus_Queen))
  }
  
  # Find the associated musical artist
  ?cynthiaMorganResource dbo:associatedMusicalArtist ?associatedMusicalArtist .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shelbyOaksActor ?atlActor WHERE {
  # Find actor for Shelby Oaks
  ?character dbo:name ""Shelby Oaks""@en .
  ?character dbo:portrayedBy ?shelbyOaksActor .

  # Find cast of ATL (film)
  dbr:ATL_film dbo:castMember ?atlActor .

  # Check if the same actor played an actor in ATL
  OPTIONAL {
    ?atlActor dbo:role ""actor""@en .
  }

  FILTER (?shelbyOaksActor = ?atlActor)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?parentOfPhotographer WHERE {
  # Step 1: Find Mariclare Costello's spouse
  ?mariclareCostello a dbo:Person ;
                     foaf:name ""Mariclare Costello""@en .
  
  ?mariclareCostello dbo:spouse ?spouse .

  # Step 2: Find the child of the spouse
  ?child dbo:parent ?spouse .

  # Step 3: Determine the parent of this child
  ?parentOfChild dbo:child ?child .

  # Step 4: Identify a professional photographer
  ?photographer a dbo:Photographer .

  # Step 5: Find the parent of this photographer
  ?parentOfPhotographer dbo:child ?photographer .

  # Step 6: Match the two sets of parents
  FILTER (?parentOfChild = ?parentOfPhotographer)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?child ?commander ?societalEvent ?event ?tvShow WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  VALUES ?archduke { dbr:Archduke_Charles_Joseph_of_Austria }

  # Step 2: Determine his parent (father)
  ?archduke dbo:parent ?father .

  # Step 3: Find the child of this parent
  ?father dbo:child ?child .

  # Step 4: Identify the commander in war related to the 2nd Dragoon Regiment (France)
  ?commander dbo:commanderInWar ?war .
  ?war dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .

  # Link the child to the commander
  FILTER (?child = ?commander)

  # Step 5: Link to societal event, event, and television show
  OPTIONAL { ?commander dbo:societalEvent ?societalEvent }
  OPTIONAL { ?commander dbo:event ?event }
  OPTIONAL { ?commander dbo:tvShow ?tvShow }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  VALUES ?party { 
    dbr:Spanish_Socialist_Workers'_Party 
  }
  ?party dbo:partyLeader ?leader .
  OPTIONAL {
    ?leader dbo:headOfGovernment ?position .
  }
}
```",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realNameURL WHERE {
  dbr:Peter_IV_of_Aragon dbo:birthName ?realName .
  ?realName rdfs:label ?realNameLabel .
  FILTER (lang(?realNameLabel) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?orderOfTheMedjidieURL WHERE {
  VALUES ?orderOfTheMedjidieURL { 
    dbr:Order_of_the_Medjidie
  }
  
  OPTIONAL {
    ?redirect dbo:wikiPageRedirects ?orderOfTheMedjidieURL .
  }

  FILTER EXISTS {
    ?orderOfTheMedjidieURL rdf:type owl:Thing .
  }
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderPrinceOfWales ?commanderRepulse WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:ship ?ship .
  
  OPTIONAL {
    ?ship dbo:commander ?commanderPrinceOfWales .
    FILTER (str(?ship) = ""HMS_Prince_of_Wales_(53)"")
  }
  
  OPTIONAL {
    ?ship dbo:commander ?commanderRepulse .
    FILTER (str(?ship) = ""HMS_Repulse_(1916)"")
  }
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award dbo:recipient dbr:Quincy_A._Gillmore .
  ?award dbo:awardedBy dbr:United_States_Congress .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Ferdinand II as Cecilia Renata's father
  dbr:Cecilia_Renata_of_Austria dbo:father dbr:Ferdinand_II,_Archduke_of_Austria .
  
  # Find his children
  dbr:Ferdinand_II,_Archduke_of_Austria dbo:child ?child .

  # Identify Charles de Gaulle as a commander in the Algerian War and societal event/television show
  OPTIONAL {
    ?child rdfs:label ""Charles de Gaulle""@en .
    ?charles dbo:militaryCommanderOf dbr:Algerian_War .
    FILTER EXISTS { ?charles dbo:societalEvent . }
    FILTER EXISTS { ?charles dbo:depictedIn dbr:Television_show . }
  }

  # Ensure the child is Charles de Gaulle
  FILTER (?child = ?charles)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realNameOfFabulousThunderbirds ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  ?fabulousThunderbirdsURL dbo:officialName ?realNameOfFabulousThunderbirds .
  
  OPTIONAL {
    dbr:Nick_Curran dbo:birthPlace ?nickCurranBirthPlace ;
                   a dbo:MusicalArtist ;
                   dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:child dbr:Elvira_of_Castile.
  ?person dbo:child dbr:Roger_II_of_Sicily.
  ?person dbo:parent dbr:William_II_of_Sicily.
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?zaraYaqob ?yeshaqChild ?lamontCranston WHERE {
  # Baeda Maryam I's father
  dbr:Baeda_Maryam_I dbo:father ?zaraYaqob .
  
  # Dawit I (Yeshaq I's father) and his child who is royalty
  dbr:Yeshaq_I dbo:father dbr:Dawit_I .
  OPTIONAL {
    dbr:Dawit_I dbo:child ?yeshaqChild .
    FILTER EXISTS { ?yeshaqChild a dbo:Monarch . }
  }

  # Alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .

  # Return the alter ego reference as well
  BIND(dbr:Lamont_Cranston AS ?lamontCranston)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace ?war WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthplace .
  
  # Ensure the birthplace is a settlement and American
  ?birthplace rdf:type dbp:PopulatedPlace ;
             dbo:country dbr:United_States .

  # Award given by United States Congress
  ?award dbo:givenBy dbr:United_States_Congress ;
         dbo:recipient ?awardee .
  
  # Find the war associated with an awardee of this award
  ?awardee dbo:associatedWithWar ?war .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Bob Thompson""@en .
  ?person a dbo:MusicalArtist .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  dbr:Nat_Levine 
    (dbo:filmProduction | dbo:director) ?film .
}
```",1,2,2,1,1,3,3,71,0,0,96,0,0.0,0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  VALUES ?person { dbr:Bruno_Retailleau }
  ?person dbo:birthDate ?birthDate .
  ?person rdf:type ?type .
  FILTER (
    ?type IN (dbo:OfficeHolder, dbo:Politician)
  )
}
```",1,3,2,1,1,2,2,9,0,1,1,0.0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Nat Levine and his film productions
  VALUES ?natLevine { dbr:Nat_Levine }
  
  ?filmProduction dbo:producer ?natLevine .
  
  # Identify Harriette Arlene Lake and her acting roles
  VALUES ?harrietteLake { dbr:Harriette_Arlene_Lake }
  
  ?filmRole dbo:actor ?harrietteLake .
  
  # Find common film between Nat Levine's productions and Harriette Lake's roles
  ?commonFilm rdf:type dbo:Film .
  FILTER (?filmProduction = ?commonFilm && ?filmRole = ?commonFilm)
  
  # Identify actors of the common film
  ?actorRole dbo:actor ?commonFilm .
  
  # Find spouse of each actor
  ?actorRole dbo:actor ?actorResource .
  OPTIONAL {
    ?actorResource dbo:spouse ?spouse .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?actor ?personWithBirthName WHERE {
  # Find members of the Republican Party (United States)
  VALUES ?republicanParty { dbr:Republican_Party_(United_States) }
  
  ?partyMember dbo:memberOf ?republicanParty .
  
  # Find actor associated with ""1,000 Dollars a Minute""
  ?film dbo:title ""1,000 Dollars a Minute"" ;
        dbo:starring ?actor .

  # Find Tisha Sterling's parent and their birth name
  ?tishaSterling dbo:parent ?parent .
  ?parent dbo:birthName ?birthName .
  
  # Match the person with the same birth name as the parent of Tisha Sterling
  ?personWithBirthName dbo:birthName ?birthName .

  # Ensure the party member is also the actor and has the matching birth name
  FILTER (?partyMember = ?actor && ?partyMember = ?personWithBirthName)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:recipient dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  # Ensure the award is a region, American, state, and settlement
  ?award rdf:type dbo:Award ;
         rdfs:label ?awardLabel .
  FILTER CONTAINS(LCASE(?awardLabel), ""region"") &&
        CONTAINS(LCASE(?awardLabel), ""american"") &&
        CONTAINS(LCASE(?awardLabel), ""state"") &&
        CONTAINS(LCASE(?awardLabel), ""settlement"")
  
  # Find a person who is a band member of Uncle Murda and has the same birth name as Bobby Shmurda
  ?person dbo:birthName dbr:Bobby_Shmurda ;
          dbo:bandMember dbr:Uncle_Murda .
  
  # Determine the native place of this person
  ?person dbo:nativePlace ?nativePlace .
  
  # Ensure the native place is the same as the award's region/state/settlement
  FILTER (?nativePlace = ?award)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Charles_Martel_of_Anjou dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Find the father of Cecilia Renata of Austria
  ?ceciliaRenata dbo:parent ?fatherOfCeciliaRenata .
  dbr:Cecilia_Renata_of_Austria ?ceciliaRenata .

  # Find a sibling of Cecilia Renata (child of her father)
  ?siblingOfCecilia dbo:parent ?fatherOfCeciliaRenata .
  
  # Find the parent (father) of Archduke Charles Joseph
  ?archdukeCharlesJoseph dbo:parent ?fatherOfArchdukeCharlesJoseph .
  dbr:Archduke_Charles_Joseph_of_Austria ?archdukeCharlesJoseph .

  # The common individual is both a sibling of Cecilia Renata and the father of Archduke Charles Joseph
  FILTER (?siblingOfCecilia = ?fatherOfArchdukeCharlesJoseph)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandChild WHERE {
  # Find Stephen V's predecessor
  ?stephenV dbr:Stephen_V_of_Hungary .
  ?predecessor dbo:predecessor ?stephenV .

  # Find Charles Martel of Anjou's parent
  ?charlesMartel dbr:Charles_Martel_of_Anjou .
  ?parent dbo:child ?charlesMartel .

  # Match the predecessor and parent to find a common ancestor
  FILTER (?predecessor = ?parent)

  # Find the child of this ancestor (Stephen V's father)
  ?ancestorChild dbo:child ?predecessor .

  # Find the grandchild who is royalty
  ?grandChild dbo:child ?ancestorChild .
  ?grandChild a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find the band associated with Bobby Kimball
  dbr:Bobby_Kimball dbo:associatedBand ?band .
  
  # Check if Sam Concepcion has any professional connection to this band
  OPTIONAL {
    dbr:Sam_Concepcion dbo:profession ?profession .
    ?profession dbo:relatedBand ?band .
  }
}
```",4,5,5,2,2,3,3,71,0,3,4,0.0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?album { 
    dbr:The_Live_Anthology 
  }
  ?album dbo:writer ?writer .
  ?writer a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Identify the Siege of Padua event
  dbr:Siege_of_Padua dbo:commander ?commander .
  
  # Find the child of the commander
  ?commander dbo:child ?child .

  # Ensure the child is associated with royalty
  ?child a dbo:RoyalFamilyMember ;
         rdfs:label ?name .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?yamazaBirthPlace ?toyotomiWar WHERE {
  # Yamaza Enjirō's birthplace
  OPTIONAL { 
    dbr:Yamaza_Enjirō dbo:birthPlace ?yamazaBirthPlace .
  }
  
  # Toyotomi Hidenaga's associated war
  OPTIONAL {
    dbr:Toyotomi_Hidenaga dbo:associatedWith ?toyotomiWar .
  }
}
```",3,3,4,2,2,2,3,28,0,2,3,0.0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?nativeOfBirthPlace WHERE {
  # Find Victor Saville's birth place
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .
  
  # Attempt to find who is native of the birth place
  OPTIONAL {
    ?birthPlace dbo:nativeOf ?nativeOfBirthPlace .
  }
}
```",2,2,3,2,1,3,2,20,0,1,1531,0.0,0.0,0
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  VALUES ?maryFrances { dbr:Mary_Bowes-Lyon,_Countess_of_Strathmore_and_Kinrara }
  VALUES ?claude { dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne }

  ?maryFrances dbo:parent ?commonParent .
  ?claude dbo:parent ?commonParent .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Bobby Shmurda's birth name
  VALUES ?bobbyShmurdaBirthName { 
    dbr:Bobby_Shmurda dbo:birthName ?bobbyShmurdaBirthName .
  }
  
  # Identify the person who is a band member of Uncle Murda and native of Florida
  ?person dbo:birthName ?bobbyShmurdaBirthName .
  ?person dbo:member <http://dbpedia.org/resource/Uncle_Murda> .
  ?person dbo:nativePlace dbr:Florida .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Identify the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:sportsTeamSeasonOf ?successorSeason .

  # Find players associated with the successor club
  ?successorSeason dbo:player ?player .
  
  # Ensure the player is part of a sports club and an organization that is also a soccer club
  ?player dbo:memberOfSportsClub ?sportsClub .
  ?sportsClub rdf:type dbo:SoccerClub ;
              dbo:organization ?organization .

  FILTER (?organization != dbr:None)
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reedHowesDeathPlace ?carolynJonesDeathPlace ?salMineoDeathPlace WHERE {
  OPTIONAL { 
    dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
  }
  OPTIONAL { 
    dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
  }
  OPTIONAL { 
    dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  }
}
```",3,3,4,1,3,2,3,28,1,0,0,1.0,1.0,1.0
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the manager of SBV Vitesse for the 2020–21 season
  dbr:SBV_Vitesse dbo:managerDuringSeason [
    dbo:season ""2020–21"" ;
    dbo:person ?manager .
  ] .

  # Filter managers by birthplace in West Germany
  OPTIONAL {
    ?manager dbo:birthPlace ?birthPlace .
    FILTER (
      ?birthPlace IN (dbr:Bonn, dbr:Cologne, dbr:Munich, dbr:Hamburg) || 
      ?birthPlace dbo:country dbr:West_Germany
    )
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  VALUES ?nothingToGein { dbr:Nothing_to_Gein }
  
  ?nothingToGein dbo:producer ?producer .
  
  ?producer rdf:type dbo:Organization ;
            rdf:type dbo:Band .

  ?producer dbo:bandMember ?bandMember .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  VALUES ?joeyB { 
    dbr:Joey_B_(musician) 
  }
  ?joeyB dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .

  # Parent who is an awardee of Commander of the Royal Victorian Order
  ?parent dbo:awardeeOf dbr:Commander_of_the_Royal_Victorian_Order .

  # Child that is a politician and alumnus of Eton College
  ?child dbo:parent ?parent ;
         rdf:type dbo:Politician ;
         dbo:almaMater dbr:Eton_College .

  # Father of the child
  ?child dbo:father ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  VALUES ?billClinton { dbr:Bill_Clinton }
  ?book rdf:type dbo:Book .
  ?book dbo:author ?billClinton .
}
```",1,4,2,1,1,3,3,71,6,1,0,0.8571428571428571,1.0,0.923076923076923
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  VALUES ?chappaquaResident { 
    dbr:Hillary_Clinton 
  }
  
  ?chappaquaResident dbo:residence dbr:Chappaqua , _ .
  ?chappaquaResident dbo:occupation dbr:Politician ; dbo:officeHolder true .

  OPTIONAL {
    ?husband dbo:spouse ?chappaquaResident ;
             dbo:commanderInWar dbr:Gulf_War .
  }

  ?author dbo:writtenWork ?book .
  FILTER (?author = ?chappaquaResident)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  ?award dbo:category dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:nationality dbr:Japan .
  OPTIONAL { 
    ?award dbo:reference ?tvShow .
    FILTER (CONTAINS(LCASE(STR(?tvShow)), ""television show""))
  }
  ?awardee dbp:birthPlace ?birthPlace .
  FILTER EXISTS {
    ?birthPlace a dbo:Place ;
               dbo:country dbr:Japan
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Soumitra_Chatterjee dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,1,1,9,0.5,0.1,0.16666666666666669
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:residence dbr:Sofia .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,9,27,5,0.25,0.6428571428571429,0.36
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?virginiaGovernorBirthPlace ?vinceGilliganBirthPlace WHERE {
  OPTIONAL {
    dbr:Cece_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
  
  OPTIONAL {
    ?governor a dbo:Politician ;
              dbo:governmentRole dbr:Governor_of_Virginia ;
              dbo:country dbr:Virginia ;
              dbo:birthPlace ?virginiaGovernorBirthPlace .
  }

  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel ?spouseOfGrandparent WHERE {
  # Step 1: Identify Charles Martel of Anjou
  VALUES ?charlesMartel { dbr:Charles_Martel_of_Anjou }

  # Step 2: Find his parent
  ?charlesMartel dbo:parent ?parentOfCharlesMartel .

  # Step 3: Identify Philip, Despot of Romania
  VALUES ?philipDespot { dbr:Philip_Despot_of_Romania }

  # Step 4: Find Philip's parent and grandparent
  ?philipDespot dbo:parent ?parentOfPhilip .
  ?parentOfPhilip dbo:parent ?grandparentOfPhilip .

  # Step 5: Identify the spouse of Philip's grandparent
  ?grandparentOfPhilip dbo:spouse ?spouseOfGrandparent .

  # Step 6: Ensure royalty
  FILTER EXISTS { ?spouseOfGrandparent rdf:type dbo:Monarch }

  # Step 7: Match the parent of Charles Martel with the spouse of Philip's grandparent
  FILTER (?parentOfCharlesMartel = ?spouseOfGrandparent)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Gillmore Medal awardee
  ?gillmoreMedal dbo:awardee ?awardee .
  
  # Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:participatedIn ?war .

  # Force associated with the awardee and the war
  ?force dbo:militaryUnit ?awardee ;
         dbo:militaryUnit ?warParticipant .
  
  # Ensure the participant in the war is Amasa Tracy or related to him
  ?warParticipant dbo:participatedIn ?war .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?season WHERE {
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  OPTIONAL { 
    ?letsch dbo:coach ?team .
    ?team a dbo:SoccerClub ;
          dbo:season ?season .
  }
}
```",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentProfession ?parentChild
WHERE {
  # Part 1: Parent of Eugène Cattin's profession
  OPTIONAL {
    dbr:Eugène_Cattin dbo:profession ?eugeneCattinProfession .
    ?eugeneCattinProfession rdfs:subClassOf+ ?parentProfession .
  }

  # Part 2: Parent of Allan Arbus's child
  OPTIONAL {
    ?allanArbusChild dbp:child dbr:Allan_Arbus .
    ?allanArbusChild dbo:parent ?parentChild .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Roger II of Sicily's child
  ?child dbo:parent dbr:Roger_II_of_Sicily .
  
  # Alfonso VI's grandchild
  ?grandchild dbo:parent ?alfonsoChild .
  ?alfonsoChild dbo:parent dbr:Alfonso_VI_of_Léon_and_Castile .
  
  # Ensure the person is both a child of Roger II and a grandchild of Alfonso VI
  FILTER (?child = ?grandchild)
  
  # William I's child, who must be royalty
  ?williamChild dbo:parent ?person .
  ?williamChild rdf:type dbo:Monarch .
  
  # Ensure the person is also a father to a royal child of William I
  FILTER (?person = ?child)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Reed Howes' death place
SELECT ?reedHowesDeathPlace WHERE {
  dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
}

UNION

# Query to find the actor of ""Color Me Dead"" and their death place
SELECT ?actorDeathPlace WHERE {
  # Find the film resource for ""Color Me Dead""
  dbr:Color_Me_Dead dbo:starring ?actor .

  # Get the death place of the identified actor
  ?actor dbo:deathPlace ?actorDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterURL WHERE {
  VALUES ?luizaErundina { 
    dbr:Luiza_Erundina 
  }
  ?luizaErundina dbo:almaMater ?almaMater .
  ?almaMater a dbo:University .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtistURL WHERE {
  VALUES ?soundtrack { 
    dbr:Wizards_of_Waverly_Place_(soundtrack) 
  }
  
  ?soundtrack dbo:composer ?writer .
  
  OPTIONAL {
    ?writer dbo:musicalArtist ?musicalArtist .
  }
  
  OPTIONAL {
    ?writer dbo:artist ?artist .
  }

  FILTER (?musicalArtist = ?writer && ?artist = ?writer)
  
  BIND(?writer AS ?associatedArtistURL)
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?regiment dbo:commander ?commander .
  ?commander dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?commander dbo:parent ?eleonoreParent .
  
  ?eleonoreParent rdfs:label ""Eleonore of Austria, Queen of Poland""@en .

  VALUES ?regiment {
    dbr:2nd_Dragoon_Regiment_(France)
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?spouse WHERE {
  VALUES ?war { 
    dbr:World_War_I 
  }
  
  ?war dbo:relatedDisease dbr:Spanish_Flu .
  ?war dbo:relatedSocietalEvent ?societalEvent .

  ?usNavy dbo:commander ?commander .
  FILTER (?usNavy = dbr:United_States_Navy)

  ?book dbo:author dbr:Hillary_Clinton .
  FILTER (?book = dbr:An_Invitation_to_the_White_House)
  
  OPTIONAL {
    dbr:Hillary_Clinton dbo:spouse ?spouse .
  }
  
  FILTER (?commander != ?spouse)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alvaroQuirósCountry ?albertoNunezFeijooOffice ?psoeAdministrationTenant WHERE {
  # Find the country of residence for Álvaro Quirós
  OPTIONAL {
    dbr:Álvaro_Quirós dbo:residence ?residence .
    ?residence dbo:country ?alvaroQuirósCountry .
  }

  # Find the office held by Alberto Núñez Feijóo
  OPTIONAL {
    dbr:Alberto_Núñez_Feijóo dbo:officeHolder ?office .
    ?office rdfs:label ?albertoNunezFeijooOffice FILTER (lang(?albertoNunezFeijooOffice) = ""en"")
  }

  # Find the tenant of the administration associated with the Spanish Socialist Workers' Party
  OPTIONAL {
    dbr:Spanish_Socialist_Workers'_Party dbo:member ?administration .
    ?administration dbo:officeHolder ?psoeAdministrationTenant .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?award a dbo:Award ;
        dbo:honorificTitle ""Knight Commander of the Order of the Bath"" ;
        dbo:order dbr:Order_of_the_Bath .
  
  ?award dbo:honoree ?person .
}
```",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  VALUES ?williamII { dbr:William_II_of_Sicily }
  VALUES ?elvira { dbr:Elvira_of_Castile }

  ?williamII dbo:father ?father .
  OPTIONAL { ?father dbo:child ?elvira . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfMadridURL ?conservativeLeaderOffice WHERE {
  VALUES ?tenantOfMadridURL { 
    dbr:President_of_the_Government_of_Spain 
  }
  
  OPTIONAL {
    ?conservativeLeader dbo:leader dbr:Conservative_and_Social_Democratic_Party_(Spain) .
    ?conservativeLeader dbo:office ?conservativeLeaderOffice .
  }

  FILTER (?tenantOfMadridURL = ?conservativeLeaderOffice)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL WHERE {
  ?person dbo:birthName ""Ackquille Jean Pollard""@en .
  ?person dbo:nationality dbr:United_States_of_America ;
          dbo:stateOrProvince dbr:Florida .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
    ?band dbo:member ?gs9Member .
    
    FILTER EXISTS {
      ?gs9Member a (dbo:Artist|dbo:MusicalArtist) .
    }
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  dbr:Nat_Levine dbo:filmProduction ?film .
  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,257,0,0.0,0
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Boom_Shack-a-Lak dbo:lyricist|dbo:composer ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonFather WHERE {
  # Archduke Charles Joseph of Austria's parent
  ?charlesParent a dbo:Person ;
                 dbo:child dbr:Archduke_Charles_Joseph_of_Austria .

  # Maria Anna of Bavaria's father
  ?mariaAnnaFather a dbo:Person ;
                   dbo:child dbr:Maria_Anna_of_Bavaria_(1574) .

  # Common father who is royalty
  OPTIONAL { ?charlesParent dbo:spouse ?commonFather . }
  OPTIONAL { ?mariaAnnaFather dbo:spouse ?commonFather . }

  FILTER (?commonFather != dbr:Archduke_Charles_Joseph_of_Austria &&
          ?commonFather != dbr:Maria_Anna_of_Bavaria_(1574) &&
          EXISTS { ?commonFather a dbo:Monarch } )
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?bobbyShmurda { dbr:Bobby_Shmurda }
  
  ?bobbyShmurda dbo:associatedMusicalArtist ?associatedArtist .
  
  ?associatedArtist dbo:bandMember ?bandMember .
  
  ?bandMember a dbo:MusicalArtist .
  ?bandMember dbo:nativePlace ?nativePlace .
  
  VALUES ?nativePlace { dbr:Florida }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:sport dbr:Soccer .
  
  OPTIONAL { 
    ?person dbo:managerTeam ?team .
  }
  
  ?athlete1 dbo:birthDate ""1955-02-22""^^xsd:date .
  ?athlete1 dbo:sport dbr:Athletics .
  ?person dbo:playerFor ?athlete1 .

  ?sergioAgüero dbo:birthDate ?dateSergio .
  FILTER (?dateSergio = ""1988-06-02""^^xsd:date) ; # Sergio Agüero's birth date
  ?person dbo:playerFor dbr:Sergio_Ag%C3%BCero .

  FILTER EXISTS { ?person dbo:sport dbr:Soccer }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow ?war WHERE {
  # Maria I of Portugal
  dbr:Maria_I_of_Portugal a dbo:Monarch ;
                          dbo:reigningMonarchFor dbr:Kingdom_of_Portugal .

  # Find any television shows associated with her or related wars
  OPTIONAL {
    ?tvShow dbo:subject dbr:Maria_I_of_Portugal .
  }

  # Identify military conflicts linked to her reign
  OPTIONAL {
    ?war dbo:participatedIn dbr:Maria_I_of_Portugal .
  }
  
  # Filter for connections between the TV show and the war
  FILTER (?tvShow != '' && ?war != '')
}
```",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ?name .
  FILTER regex(?name, ""Koichirō"", ""i"") .
  
  OPTIONAL {
    ?person dbo:associatedWithWar ?war .
  }
  
  FILTER EXISTS { ?war dbo:country dbr:Japan . }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Linda Sue Cobb""@en .
  ?person dbo:producer dbr:12_Strong_(film) .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?khlystBand { 
    dbr:Khlyst_(band) 
  }
  
  ?khlystBand dbo:member ?member .
  ?member a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mother WHERE {
  ?myatHponePyo dbo:child ?father .
  FILTER (str(?myatHponePyo) = ""Myat_Hpone_Pyo"") .

  ?father dbo:spouse ?mother .
  
  OPTIONAL { 
    ?mother dbo:royalTitle ?title .
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryOfDanielElahiGalan ?partyOfRoyLeonardoBarreras WHERE {
  dbr:Daniel_Elahi_Galán dbo:nationality ?countryOfDanielElahiGalan .
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:party ?partyOfRoyLeonardoBarreras .
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Mariano_Rajoy dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Bob Thompson's band
  dbr:Bob_Thompson_(musician) dbo:musicalBand ?bobThompsonBand .
  
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samConcepProfession .

  # Walter B. Gibson's creation, The Shadow
  dbr:The_Shadow dbo:fictionalWorkCategory dbr:Fictional_character ;
                 dbo:mediaType dbr:Comics .
  
  # Find a band that connects all these elements
  OPTIONAL { ?bobThompsonBand rdfs:label ?bandLabel . FILTER (lang(?bandLabel) = ""en"") }
  OPTIONAL { ?samConcepProfession rdfs:label ?professionLabel . FILTER (lang(?professionLabel) = ""en"" && ?professionLabel = ?bandLabel) }
  
  # Ensure the band is connected to The Shadow
  OPTIONAL {
    ?shadowBand dbo:musicalArtist dbr:The_Shadow ;
               rdfs:label ?bandLabel .
    FILTER (?bandLabel = ?bobThompsonBandLabel)
  }

  BIND(?bobThompsonBand AS ?band)
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?atlActor ?shelbyOaksActor WHERE {
  VALUES ?filmURL { 
    dbr:ATL_(2006_film) 
    dbr:Shelby_Oaks
  }
  
  ?film dbo:starring ?actor .
  FILTER (?film = ?filmURL)
  
  BIND(
    IF(?film = dbr:ATL_(2006_film), ?actor, NULL) AS ?atlActor
  )
  BIND(
    IF(?film = dbr:Shelby_Oaks, ?actor, NULL) AS ?shelbyOaksActor
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  
  # Find the children of this father
  ?father dbo:child ?child .

  # Filter to find a child who was a commander in the Thirty Years' War
  OPTIONAL {
    ?child dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""commander"") && CONTAINS(LCASE(?occupation), ""thirty years war""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Florida .
  ?person dbo:musicalArtist ?artistRole .
  FILTER (?person = ?artistRole)
}
```",4,5,5,3,2,3,3,71,0,0,59,0,0.0,0
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?actor dbo:actorIn dbr:All_or_Nothing:_Manchester_City .
  ?actor dbo:soccerPlayer true .
  ?actor dbo:athlete true .

  ?person1 dbo:birthday ""1955-02-22""^^xsd:date .
  ?person1 dbo:athlete true .

  ?person2 dbo:birthday ""1979-11-03""^^xsd:date .
  ?person2 dbo:soccerPlayer true .
  ?person2 dbo:soccerManager true .

  ?team dbo:member ?player .
  ?team dbo:member ?person2 .

  FILTER (?actor = ?player)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stonebwoyURL ?associatedArtist WHERE {
  VALUES ?stonebwoyURL { 
    dbr:Stonebwoy 
  }
  ?stonebwoyURL a dbo:Musician .
  OPTIONAL {
    ?stonebwoyURL dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?aStarIsBorn1937 { dbr:A_Star_Is_Born_(1937_film) }
  VALUES ?adventuresOfTomSawyer1938 { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) }

  ?aStarIsBorn1937 dbo:producer ?person .
  ?adventuresOfTomSawyer1938 dbo:producer ?person .

  OPTIONAL {
    ?person dbo:alterEgo dbr:The_Shadow .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamURL ?actorName WHERE {
  # Find Pablo Aimar's team
  VALUES ?pabloAimar { dbr:Pablo_Aimar }
  ?pabloAimar dbo:memberTeam ?teamURL .

  # Find actors who are soccer players and athletes
  ?actor dbo:soccerPlayer true ;
         dbo:athlete true ;
         rdfs:label ?actorName .
  
  FILTER (CONTAINS(LCASE(?actorName), ""actor""))

  # Link actor to films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Alberto_Núñez_Feijóo dbo:office ?office .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  VALUES ?goldenMasterSeries { 
    dbr:The_Golden_Master_(comics) 
  }
  
  ?goldenMasterSeries dbo:character ?character .
  OPTIONAL {
    ?character dbo:alias ?alterEgo .
  }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?psoeAdministration ?feijooOffice ?spainTenant WHERE {
  # Find the administration led by PSOE
  ?psoeAdministration dbo:headOfGovernment ?psoeLeader .
  ?psoeLeader dbo:nationality dbr:Spain .
  
  # Find Alberto Núñez Feijóo's office in Galicia
  ?feijooOffice a dbo:PoliticalOffice ;
               dbo:officeHolder dbr:Alberto_Núñez_Feijóo ;
               dbo:country dbr:Galicia_(Spain) .

  # Find the current tenant of Spain (Prime Minister)
  ?spainTenant a dbo:HeadOfGovernment ;
              dbo:headOfGovernmentFor dbr:Spain .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLeaderOffice ?leaderResidence WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura dbo:associatedMusicalArtist ?politicalParty .
  FILTER (str(?miguelMaura) = ""Miguel_Maura"")

  # Identify the leader of that political party around 2003
  ?politicalParty dbo:leader ?partyLeader .

  # Find the office held by this leader in the context of the 2003 Madrid City Council election
  ?officeHolder dbo:officeHolder ?partyLeader .
  FILTER (str(?officeHolder) = ""Madrid_City_Council_election,_2003"")

  # Determine the residence of this leader
  ?partyLeader dbo:residence ?leaderResidence .

  # Select the office and residence
  BIND(?officeHolder AS ?partyLeaderOffice)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a hypothetical query assuming we are interested in ""musicians""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicianName WHERE {
  ?musician a dbo:Musician .
  ?musician rdfs:label ?musicianName .
  FILTER (lang(?musicianName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?madridMayor ?administrativeUnit WHERE {
  VALUES ?madridResource { 
    dbr:Madrid 
  }
  
  OPTIONAL {
    ?madridResource dbo:mayor ?madridMayor .
  }

  OPTIONAL {
    ?madridResource dbo:administrativeUnit ?administrativeUnit .
  }
}
```",1,1,2,1,1,3,3,71,0,0,259,0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Bill Clinton as spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse dbr:Bill_Clinton .
  
  # USS Arcadia (ID-1605) associated with the U.S. government
  dbr:USS_Arcadia_(ID-1605) dbo:owner dbr:United_States_Government .

  # General John J. Pershing as commander in World War I
  dbr:World_War_I dbo:commander ?commander .
  
  # Spanish Flu as a societal event during World War I
  OPTIONAL {
    dbr:Spanish_Flu dbo:relatedEvent dbr:World_War_I .
  }
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Ethan_Iverson a dbo:Musician .
  OPTIONAL { 
    dbr:Ethan_Iverson dbo:associatedBand ?band .
    ?band dbo:album ?work .
  }
  OPTIONAL { 
    dbr:Ethan_Iverson dbo:album ?work .
  }
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?fabulousThunderbirdsConnection WHERE {
  VALUES ?ericClapton { dbr:Eric_Claptom }
  
  # Find the band(s) Eric Clapton was a member of
  ?band dbo:member ?ericClapton .
  
  OPTIONAL {
    # Check for any association between the band and The Fabulous Thunderbirds
    ?band dbo:associatedBand ?fabulousThunderbirdsConnection .
    FILTER (?fabulousThunderbirdsConnection = dbr:The_Fabulous_Thunderbirds)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find musical artist associated with The Live Anthology who is also a writer
  ?theLiveAnthology dbo:musicalArtist ?artist .
  FILTER (str(?theLiveAnthody) = ""The_Live_Anthology"")
  
  ?artist dbo:profession dbr:Writer .

  # Find artists native to Central Region, Ghana and their birth names
  ?centralRegionArtist dbo:nativeCountry dbr:Ghana ;
                      dbo:nativePlace dbr:Central_Region,_Ghana ;
                      dbo:birthName ?birthName .
  
  # Match the birth name with the artist from The Live Anthology
  OPTIONAL {
    ?artist foaf:name ?name .
    FILTER (?name = ?birthName)
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workAuthor WHERE {
  ?person dbo:officeHolder ?position .
  ?position dbo:positionHeldBy ?holder .
  ?holder foaf:name ""Joe Biden"" .
  
  ?book dbo:author ?person ;
        dbo:title ""Promise Me, Dad""@en .

  ?work dbo:author ?person ;
        a dbo:Book ;
        dbo:country dbr:United_States ;
        a dbo:WrittenWork .

  BIND(?person AS ?workAuthor)
}
```",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party WHERE {
  VALUES ?event { dbr:Pickett's_Charge }
  
  ?event dbo:commander ?commander .
  ?commander rdfs:label ""George Pickett""@en .

  OPTIONAL {
    ?commander dbo:memberOfPoliticalParty ?party .
  }

  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut .

  FILTER (lang(?commanderLabel) = 'en')
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Dani_El%C3%A1i_Gal%C3%A1n dbo:country ?country .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  VALUES ?robertCalder { dbr:Robert_Calder }
  ?robertCalder dbo:associatedEvent ?event .
  ?event rdf:type dbo:Event .
  ?event rdf:type dbo:SocietalEvent .
}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry WHERE {
  ?athlete dbo:nationality dbr:Poland .
  ?athlete dbo:birthPlace dbr:Łódź .
  ?athlete dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?residenceCountry)
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?calvinBroadusAssociatedArtist ?joeyBAssociatedArtist WHERE {
  VALUES ?calvinBroadusURL { 
    dbr:Snoop_Dogg 
  }
  OPTIONAL {
    ?calvinBroadusURL dbo:associatedMusicalArtist ?calvinBroadusAssociatedArtist .
  }

  VALUES ?joeyBURL { 
    dbr:Joe_(musician) 
  }
  OPTIONAL {
    ?joeyBURL dbo:associatedMusicalArtist ?joeyBAssociatedArtist .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childName WHERE {
  # Find Shirley Stoler's resource
  dbr:Shirley_Stoler a dbo:Person ;
                     dbo:nationality dbr:United_States ;
                     dbo:birthPlace dbr:New_York_City,_New_York .

  # Get her profession
  ?shirleyProfession dbo:fieldOfActivity ?profession .

  # Find children of Shirley Stoler
  OPTIONAL {
    dbr:Shirley_Stoler dbo:child ?child .
  }

  # Filter children by the same profession and native place
  ?child a dbo:Person ;
         dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:New_York_City,_New_York ;
         dbo:profession ?shirleyProfession .

  # Get child's name for display
  ?child rdfs:label ?childName .
  
  FILTER (lang(?childName) = 'en')
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?princessAntoinette { dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel }
  
  ?child dbo:parent ?princessAntoinette .
  OPTIONAL { 
    ?child a dbo:Monarch . # Assuming 'dbo:Monarch' is used for royalty
  }
}
```",1,2,2,1,1,3,2,20,0,2,6,0.0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild WHERE {
  # Allan Arbus and his child
  ?child dbo:child dbr:Allan_Arbus .
  
  # Parent of the child (other than Allan Arbus)
  ?parentOfChild dbo:spouse ?child .
  FILTER (?parentOfChild != dbr:Allan_Arbus)

  # Check if this person acted in a movie with Herschel Bernardi
  ?movie dbo:starring ?parentOfChild ;
         dbo:starring dbr:Herschel_Bernardi .

  # Ensure the movie is categorized as a work
  ?movie rdf:type dbo:Film .
  
  # Check if this person is also the parent of someone who is a professional photographer
  ?photographer dbo:child ?parentOfChild ;
                dbo:profession dbr:Photography .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderURL ?commanderName ?ducasConnection WHERE {
  VALUES ?greatTurkishWar { 
    dbr:Great_Turkish_War 
  }
  
  ?greatTurkishWar dbo:commander ?commander .
  ?commander rdfs:label ?commanderName .
  FILTER (LANG(?commanderName) = ""en"")
  
  OPTIONAL {
    ?ducasConnection dbo:relatedTo ?commander .
    ?ducasConnection rdfs:label ?ducasLabel .
    FILTER (?ducasLabel = ""George Ducas"" || ?ducasLabel = ""Georgios Muzalon"") 
    FILTER (LANG(?ducasLabel) = ""en"")
  }
  
  BIND(STR(?commanderURL) AS ?commanderURL)
}
```",2,2,3,1,2,3,3,71,0,39,1,0.0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  
  # Actor associated with The Shadow's alter ego
  OPTIONAL { 
    ?shadowAlterEgo dbo:alterEgo ?actor .
    FILTER EXISTS { ?shadowAlterEgo rdfs:label ""The Shadow""@en }
  }

  # Actor in a TV show featuring Richard E. Grant
  OPTIONAL {
    ?tvShow dbo:castMember ?actor .
    ?tvShow dbo:castMember dbr:Richard_E._Grant .
    FILTER EXISTS { ?tvShow rdf:type dbo:TelevisionSeries }
  }

  # Ensure the actor is common to both conditions
  FILTER (?shadowAlterEgo != UNDEF && ?tvShow != UNDEF)
}
```",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Stuart_Tosh dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?winstonChangBirthPlace ?spouseCountry WHERE {
  # Find Winston Chang's birth place
  dbr:Winston_Chang dbo:birthPlace ?winstonChangBirthPlace .

  # Find Hu Jieqing and her spouse who is a writer
  dbr:Hu_Jieqing dbo:spouse ?spouse .
  
  # Ensure the spouse is a writer
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""writer""))

  # Get the country of work for the spouse
  OPTIONAL {
    ?spouse dbo:country ?spouseCountry .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:George_Ducas dbo:writer ?work .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentOfAwardee WHERE {
  # Find the award Rodney Lees received
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Find other recipients of that award
  ?otherRecipient dbo:recipient ?award .

  # Find Arthur Stanley's father
  dbr:Arthur_Stanley_(politician) dbp:father ?arthurFather .

  # Find the parent of the awardee
  ?otherRecipient foaf:parent ?parentOfAwardee .
  
  # Filter to find if this parent is also Arthur Stanley's father
  FILTER (?parentOfAwardee = ?arthurFather)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName (GROUP_CONCAT(?deathPlace; separator=""; "") AS ?deathPlaces) WHERE {
  VALUES ?film { 
    dbr:The_Sky_Ranger_(1928_film)
    dbr:Aladdin_(1958_film)
  }
  
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor rdfs:label ?actorName FILTER (lang(?actorName) = ""en"") . }
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }

} GROUP BY ?actorName
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:George_Savage dbo:memberOf ?party .
  FILTER (STRSTARTS(STR(?party), ""http://dbpedia.org/resource/"") && 
          STRCONTAINS(STR(?party), ""/PoliticalParty""))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Eugène_Cattin dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,940,0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL ?ericClaptonBand ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  OPTIONAL {
    ?ericClapton dbo:band ?ericClaptonBand .
    FILTER (str(?ericClapton) = ""Eric Clapton"")
  }

  OPTIONAL {
    ?nickCurran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
    FILTER (str(?nickCurran) = ""Nick Curran"" && 
            EXISTS { ?nickCurran dbo:birthPlace ?place })
  }
  
  FILTER (?fabulousThunderbirdsURL = ?ericClaptonBand || 
          ?fabulousThunderbirdsURL = ?nickCurranAssociatedArtist)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyName WHERE {
  VALUES ?person { 
    dbr:Bruno_Retailleau 
    dbr:Guillaume_Peltier 
  }
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",3,5,4,2,2,2,2,9,0,8,1,0.0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  ?paulusPowell dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Region . }
  FILTER EXISTS { ?birthPlace a dbo:AdministrativeRegion . }
  
  ?birthPlace dbo:governor ?governor .
  FILTER EXISTS { ?governor a dbo:Politician . }
  
  VALUES ?paulusPowell {
    dbr:Paulus_Powell
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?sawShweKhet dbo:spouse ?spouse .
  ?minHlaHtut dbo:parent ?parent .
  ?parent dbo:child ?child .
  FILTER (?child = ?spouse)
  
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }
  VALUES ?minHlaHtut { dbr:Min_Hla_Htut_of_Pyakaung }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ericClaptonBand ?kimWilsonBand WHERE {
  # Find the band associated with Eric Clapton
  OPTIONAL { 
    dbr:Eric_Claptom dbo:bandMember ?ericClaptonBand .
  }
  
  # Find the band associated with Kim Wilson and get its resource name
  OPTIONAL {
    dbr:Kim_Wilson dbo:associatedMusicalArtist ?kimWilsonBand .
  }
}
```",5,5,6,3,2,3,3,71,1,4,1,0.2,0.5,0.28571428571428575
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Albrecht, Duke of Württemberg's child who is a predecessor
  ?albrechtChild dbo:childOf dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?albrechtChild dbo:predecessor ?predecessor .

  # Archduchess Helena of Austria's spouse's child who is royalty
  ?helenaSpouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?helenaSpouseChild dbo:childOf ?helenaSpouse .
  ?helenaSpouseChild a dbo:RoyalFamily .

  # Archduchess Margarete Sophie of Austria's child
  ?margareteSophieChild dbo:childOf dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Find the common entity that fits all criteria
  FILTER (?albrechtChild = ?helenaSpouseChild && ?albrechtChild = ?margareteSophieChild)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:commanderOfMilitaryUnit dbr:2nd_Dragoon_Regiment_(France) .
  
  OPTIONAL { 
    ?commander dbo:associatedMusicalArtist ?societalEvent .
    FILTER (strstarts(str(?societalEvent), ""http://dbpedia.org/resource/Category:Societal_events"") ||
            strstarts(str(?societalEvent), ""http://dbpedia.org/resource/Category:Event"") ||
            strstarts(str(?societalEvent), ""http://dbpedia.org/resource/Category:Television_shows""))
  }
  
  ?commander dbo:father dbr:Eleonore_of_Austria .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Carolyn_Jones dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify Ferdinand III and his children
  VALUES ?ferdinandIII { dbr:Ferdinand_III,_Holy_Roman_Emperor }
  
  ?child dbo:parent ?ferdinandIII .
  ?child a dbo:Person .

  OPTIONAL {
    # Check if the child was a commander in war
    ?child dbo:commanderInWar ?war .
    
    # Find societal events or television shows related to 2nd Dragoon Regiment (France)
    ?event dbo:societalEvent dbr:2nd_Dragoon_Regiment_(France) ;
           dbo:televisionShow ?tvShow .

    FILTER EXISTS { ?child dbo:associatedWith ?event }
  }

  # Determine the father of the child
  ?child dbo:father ?father .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfProfession ?parentOfChild 
WHERE {
  # Part 1: Parent of the professional in the profession of Eugène Cattin
  dbr:Eugène_Cattin dbo:profession ?eugeneCattinProfession .
  
  OPTIONAL {
    ?eugeneCattinProfession rdfs:subClassOf* ?parentOfProfession .
  }
  
  # Part 2: Parent of the child of the spouse of Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?mariclareSpouse .
  
  OPTIONAL {
    ?mariclareSpouse dbo:child ?childOfSpouse .
    ?childOfSpouse dbo:parent ?parentOfChild .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?decedent WHERE {
  ?decedent dbo:deathPlace dbr:Taipei .
}
```",1,1,2,1,1,3,2,20,220,0,0,1.0,1.0,1.0
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?smartbombBook dbo:author ?author .
  FILTER (str(?smartbombBook) = ""Smartbomb_(book)"")

  # Find the professional in the alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgo ?professional .
  FILTER (str(?shadowAlterEgo) = ""The_Shadow"")

  # Find an actor from the film ""ATL""
  ?atlFilm dbo:actor ?atlActor .
  FILTER (str(?atlFilm) = ""ATL_(film)"")

  # Find a movie that includes both the author of ""Smartbomb"" and the professional in The Shadow
  ?movie dbo:actor ?author .
  ?movie dbo:actor ?professional .

  # Ensure the actor is also in the same movie as the ATL actor
  ?movie dbo:actor ?atlActor .
  
  # Find an actor who acted in a movie with all three entities
  ?movie dbo:actor ?actor .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Actor of ""1,000 Dollars a Minute""
  VALUES ?actorURL { 
    dbr:1000_Dollars_a_Minute_(film) 
  }
  
  ?actor dbo:actor ?actorResource .
  FILTER (?actorResource = ?actorURL)
  
  OPTIONAL {
    ?actor dbo:spouse ?spouse .
  }

  # Person born as Harriette Arlene Lake
  VALUES ?harrietteURL { 
    dbr:Harriette_Arlene_Lake 
  }
  
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  FILTER (?person = ?harrietteURL)
  
  OPTIONAL {
    ?person dbo:spouse ?spouse .
  }

  # Party member of Republican Party (United States)
  VALUES ?republicanParty { 
    dbr:Republican_Party_(United_States) 
  }
  
  ?member dbo:partyMembership ?republicanParty .
  
  OPTIONAL {
    ?member dbo:spouse ?spouse .
  }

  # Ensure the spouse is common among all conditions
  FILTER (?actorResource = ?harrietteURL && ?actorResource = ?member)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Gillmore_Medal dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoPerson ?lassoMoonActor WHERE {
  # Find the professional in the alter ego of The Shadow
  VALUES ?shadowResource { dbr:The_Shadow }
  ?shadowResource dbo:alterEgo ?alterEgoPerson .

  # Find the actor associated with both the film and album ""Lasso the Moon""
  VALUES ?lassoMoonResource { dbr:Lasso_the_Moon_(film) dbr:Lasso_the_Moon_(album) }
  ?lassoMoonResource dbo:actor ?lassoMoonActor .
  
  FILTER (?alterEgoPerson = ?lassoMoonActor)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalty WHERE {
  # Step 1: Identify Charles II of Naples and his spouse
  VALUES ?charlesII { dbr:Charles_II_of_Naples }
  
  OPTIONAL {
    ?charlesII dbo:spouse ?spouse .
    
    # Step 2: Find the parent of the father of this spouse (grandfather)
    OPTIONAL {
      ?spouse dbo:parent ?father .
      ?father dbo:parent ?grandfather .
      
      # Ensure the grandfather is royalty
      FILTER EXISTS { ?grandfather a dbo:Monarch }
      
      BIND(?grandfather AS ?royaltyCandidate1)
    }
  }
  
  # Step 3: Identify Maria of Bytom and her spouse
  VALUES ?mariaOfBytom { dbr:Maria_of_Bytom }
  
  OPTIONAL {
    ?mariaOfBytom dbo:spouse ?mariaSpouse .
    
    # Step 4: Find the parent of the father of this spouse (grandfather)
    OPTIONAL {
      ?mariaSpouse dbo:parent ?mariaFather .
      ?mariaFather dbo:parent ?mariaGrandfather .
      
      # Ensure the grandfather is royalty
      FILTER EXISTS { ?mariaGrandfather a dbo:Monarch }
      
      BIND(?mariaGrandfather AS ?royaltyCandidate2)
    }
  }
  
  # Step 5: Match the two royal candidates
  FILTER (?royaltyCandidate1 = ?royaltyCandidate2)
  BIND(?royaltyCandidate1 AS ?royalty)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  ?rulingParty a dbo:PoliticalParty ;
               dbo:organization .
  
  OPTIONAL { 
    ?rulingParty dbp:country dbr:Connecticut .
  }
  
  OPTIONAL {
    ?location dbo:locatedIn dbr:Westport_(town,_Connecticut) .
    ?location dbp:governingBody ?rulingParty .
  }

  FILTER EXISTS { ?rulingParty dbp:country dbr:Connecticut . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kimWilsonBandURL ?nickCurranAssociatedArtist WHERE {
  VALUES ?kimWilsonBandURL { 
    ?band .
  }
  VALUES ?nickCurranAssociatedArtist { 
    ?artist .
  }

  OPTIONAL {
    dbr:Kim_Wilson dbo:associatedBand ?band .
  }
  
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?artist .
  }

  FILTER (?kimWilsonBandURL = ?nickCurranAssociatedArtist)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?juanCarlosMolinaTeam ?sergioAgüeroTeam WHERE {
  VALUES ?juanCarlosMolinaResource { dbr:Juan_Carlos_Molina_(footballer) }
  VALUES ?sergioAgüeroResource { dbr:Sergio_Agüero }

  OPTIONAL {
    ?juanCarlosMolinaResource dbo:team ?juanCarlosMolinaTeam .
  }
  
  OPTIONAL {
    ?sergioAgüeroResource dbo:team ?sergioAgüeroTeam .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?darrylProfession ?rodArgentProfession ?pacelyAssociatedArtist WHERE {
  VALUES ?darrylResource { 
    dbr:Darryl_Paak 
  }
  
  ?darrylResource dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  OPTIONAL { ?darrylResource dbo:profession ?darrylProfession . }

  VALUES ?rodArgentResource {
    dbr:Rod_Argent
  }
  OPTIONAL { ?rodArgentResource dbo:profession ?rodArgentProfession . }

  # Assuming $pacely is a placeholder for an actual resource, replace with the correct DBpedia resource.
  VALUES ?pacelyResource {
    dbr:PlaceholderForPacely
  }
  OPTIONAL { ?pacelyResource dbo:associatedMusicalArtist ?pacelyAssociatedArtist . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?partyAffiliation WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Roy Leonardo Barreras Montealegre"" .
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:partyAffiliation ?partyAffiliation . }

  FILTER EXISTS { ?birthPlace dbo:country dbr:Colombia }
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Archduke Charles Louis of Austria's children
  ?child dbo:child dbr:Archduke_Charles_Louis_of_Austria .
  
  # Grandchildren (child of the child)
  ?grandchild dbo:child ?child .

  # Check if grandchild is royalty
  OPTIONAL { ?grandchild dbo:royaltyTitle ?title . }

  # Predecessor relationship with Carl, Duke of Württemberg
  ?predecessor dbo:predecessor dbr:Claude_Frederick_Carl,_Duke_of_W%C3%BCrttemberg .
  
  FILTER EXISTS { ?grandchild = ?predecessor }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event dbo:location dbr:Charleston,_South_Carolina .
  
  OPTIONAL { 
    ?amasaTracy dbo:participatedInBattle ?event ;
                rdfs:label ""Amasa Tracy""@en .
  }
  
  OPTIONAL { 
    ?gillmoreForce dbo:awardeeOfAward ?award ;
                   dbo:participatedInBattle ?event ;
                   rdfs:label ""Quincy Adams Gillmore""^^xsd:string .
  }

  FILTER EXISTS { ?amasaTracy dbo:participatedInBattle ?event }
  FILTER EXISTS { ?gillmoreForce dbo:participatedInBattle ?event }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Ensure the parent of this child is indeed Allan Arbus
  ?child dbo:parent ?allanArbus .

  # Identify a person who died in Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles,_California .

  # Find a movie that involves both the decedent and an actor
  ?movie dbo:actor ?actor .
  
  # Ensure this movie is associated with the decedent
  ?movie dbo:work ?decedent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Always_(1989_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  VALUES ?anumtaQureshi { 
    # Assuming we have identified the resource for Anumta Qureshi
    dbr:Anumta_Qureshi 
  }
  
  VALUES ?nativeOfLahore { 
    # Assuming we have identified a native of Lahore, e.g., Fawad_Khurram_Ali_Khan
    dbr:Fawad_Khurram_Ali_Khan 
  }

  ?anumtaQureshi dbo:performerIn ?show .
  ?nativeOfLahore dbo:performerIn ?show .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?establishedDate WHERE {
  ?entity dbo:established ?establishedDate .
  FILTER (YEAR(?establishedDate) = 1955 && MONTH(?establishedDate) = 12 && DAY(?establishedDate) = 2)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { 
    dbr:Karl_Gustav_von_Baggovut 
    dbr:Aleksandr_Lvovich_Davydov
  }
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Step 1: Identify ""The Shadow"" alter ego
  VALUES ?theShadow { dbr:The_Shadow_(radio_character) }
  
  # Step 2: Find the claim to fame (movie or work)
  ?claimToFame dbo:basedOnWorkOrEvent ?theShadow .
  
  # Step 3: Identify the producer of this movie or work
  ?claimToFame dbo:producer ?producer .

  # Step 4: Identify actor in ""High Society Blues""
  VALUES ?highSocietyBlues { dbr:High_Society_Blues_(film) }
  ?actor dbo:actedIn ?highSocietyBlues .
  
  # Step 5: Ensure the producer is associated with both
  OPTIONAL {
    ?producer dbo:associatedMusicalArtist ?actor .
  }

  FILTER EXISTS { ?claimToFame . } 
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Mark_Eitzel dbo:associatedBand ?band .
}
```",1,1,2,1,1,3,2,20,1,4,1,0.2,0.5,0.28571428571428575
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Children of William I
  VALUES ?williamIChild { 
    ?child1
  }
  ?child1 dbo:parent dbr:William_I_of_Sicily .
  
  # Children of Roger II of Sicily
  VALUES ?rogerIIChild { 
    ?child2
  }
  ?child2 dbo:parent dbr:Roger_II_of_Sicily .

  # Ensure both children are royalty and office holders
  FILTER (?child1 = ?child2)
  ?child1 rdf:type dbo:Monarch .
  ?child1 rdf:type dbo:OfficeHolder .

  # Find the father of this child
  ?child1 dbo:parent ?father .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?lassoTheMoon { 
    dbr:Lasso_the_Moon_(album) 
  }
  
  ?lassoTheMoon dbo:work ?filmOrWork .
  ?filmOrWork a dbo:Film ; dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistName WHERE {
  ?settlement a dbo:Settlement ;
              dbo:country dbr:England .
  
  ?person dbo:nativePlace ?settlement ;
          dbo:artist ?artistRole ;
          dbo:musicalArtist ?musicalArtistRole .

  BIND(CONCAT(STR(?person), "" ("", STR(?artistRole), "", "", STR(?musicalArtistRole), "")"") AS ?artistName)
}
```",2,6,3,2,1,3,2,20,0,0,659,0,0.0,0
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify the book ""Back to Work"" authored by Hillary Clinton
  dbr:Back_to_Work dbo:author dbr:Hillary_Clinton .
  
  # Find Hillary Clinton's spouse
  dbr:Hillary_Clinton dbo:spouse ?spouse .

  # Ensure the spouse is a politician and an office holder
  ?spouse a dbo:Politician ;
         dbo:officeHolder ?office .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?characterName ?profession WHERE {
  VALUES ?goldenMasterSeries { 
    dbr:The_Golden_Master_(TV_series) 
  }
  
  ?goldenMasterSeries dbo:hasPart ?episode .
  ?episode dbo:character ?character .
  ?character rdfs:label ?characterName .
  OPTIONAL {
    ?character dbo:profession ?profession .
  }
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicianChild ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's children
  VALUES ?frederickStanley { dbr:Frederick_Stanley,_16th_Earl_of_Derby }
  
  # Find children who are politicians
  ?child dbo:parent ?frederickStanley .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Victor Stanley's parent(s)
  VALUES ?victorStanley { dbr:Victor_Stanley_(Royal_Navy_officer) }
  ?parent dbo:child ?victorStanley .

  # Trace back to Frederick Stanley
  ?frederickChild dbo:parent ?parent .
  
  # Determine the father of the politician child
  ?politicianChild dbo:father ?father .
  FILTER(?politicianChild = ?frederickChild)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerURL WHERE {
  # Find works by George Ducas
  VALUES ?ducasWork { 
    ?work WHERE { 
      ?work dbo:author dbr:George_Ducas . 
    }
  }

  # Find Yurii Khmelnytsky's successor
  ?khmelnytsky dbo:successor ?successor .

  # Check if the successor was a commander in the Great Turkish War and matches the author of Ducas's work
  ?successor dbo:commanderOf dbr:Great_Turkish_War .
  
  FILTER (?ducasWork = ?work)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?margareteChild ?philippAlbrechtChildPredecessor WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?margareteChild .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippAlbrechtChild .

  # Find the predecessor of the child of Philipp Albrecht
  OPTIONAL {
    ?philippAlbrechtChildPredecessor dbo:succeededBy ?philippAlbrechtChild .
  }

  # Filter to find if the child of Margarete is the predecessor of the child of Philipp Albrecht
  FILTER (?margareteChild = ?philippAlbrechtChildPredecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorResidenceTenant ?commanderResidenceTenant WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?mayor a dbo:Mayor ;
         dbo:electedDuring ?election .
  ?election dbo:date ""2003""^^xsd:gYear .

  OPTIONAL {
    ?mayor dbo:residence ?mayorResidence .
    ?mayorResidence dbo:tenant ?mayorResidenceTenant .
  }

  # Find a military conflict or societal event associated with Manuel Pinto da Costa
  ?conflict dbo:commander ?commander ;
            dbo:participant dbr:Manuel_Pinto_da_Costa .

  OPTIONAL {
    ?commander dbo:residence ?commanderResidence .
    ?commanderResidence dbo:tenant ?commanderResidenceTenant .
  }
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfMadrid ?officeOfLeader WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura"" ;
               dbo:memberOfParty ?politicalParty .

  # Find the leader of that political party
  ?politicalParty dbo:leader ?leader .
  
  # Determine the office held by this leader
  ?leader dbo:officeHolder ?officeOfLeader .

  # Find the tenant of Madrid
  ?tenantOfMadrid a dbo:Tenant ;
                  dbo:location dbr:Madrid .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Philip I, Prince of Taranto's father
  ?philip1 dbo:father ?fatherOfPhilip1 .
  
  # Father's spouse (mother of Philip I)
  ?fatherOfPhilip1 dbo:spouse ?spouse .

  # Mother's parents (grandparents of Philip I)
  OPTIONAL {
    ?spouse dbo:parent ?parentOfSpouse .
  }
  
  # Ensure the parent is royalty
  FILTER EXISTS { 
    ?parentOfSpouse a dbo:Monarch .
  }

  # Charles I of Hungary's ancestry
  dbr:Charles_I_of_Hungary dbo:father ?charlesFather .
  OPTIONAL {
    ?charlesFather dbo:father ?grandfatherOfCharles .
  }
  
  # Check if the royal parent is an ancestor of both
  FILTER EXISTS { 
    ?parentOfSpouse = ?grandfatherOfCharles .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfEdwardStanley WHERE {
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  # Find the parent of Edward Stanley, 17th Earl of Derby
  ?edwardStanley dbo:parent ?parentOfEdwardStanley .
  
  OPTIONAL {
    # Confirm Arthur Stanley as a child
    ?arthur dbr:Arthur_Stanley_(politician) ;
            dbo:parent ?edwardStanley .
  }
  
  OPTIONAL {
    # Find the awardee of Rodney Lees and their parent
    ?rodneyLeesAward dbr:Rodney_Lees ;
                    dbo:awardee ?awardRecipient .
    
    ?awardRecipient dbo:parent ?parentOfAwardee .
    
    FILTER (?parentOfEdwardStanley = ?parentOfAwardee)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentEntity WHERE {
  ?minHlaHtut dbo:residence ?pyakaung .
  ?pyakaung a dbo:Settlement ;
            dbo:partOf ?parentEntity .
  
  FILTER (str(?minHlaHtut) = ""Min_Hla_Htut"")
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildOfBelaIV ?parentOfCharlesI WHERE {
  # Béla IV of Hungary's child
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  
  # Grandchild of Béla IV who is royalty
  ?belasChild dbo:child ?grandchildOfBelaIV .
  FILTER EXISTS { ?grandchildOfBelaIV rdf:type dbo:Monarch }
  
  # Charles I of Hungary's parent who is royalty
  dbr:Charles_I_of_Hungary dbo:parent ?parentOfCharlesI .
  FILTER EXISTS { ?parentOfCharlesI rdf:type dbo:Monarch }
  
  # Match the grandchild and the parent
  FILTER (?grandchildOfBelaIV = ?parentOfCharlesI)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?steveMcQueenSpouse WHERE {
  # Find a ruling party in Central, Louisiana
  ?centralLocation dbo:location dbr:Central,_Louisiana .
  ?rulingParty dbo:member ?partyMember .
  FILTER EXISTS { ?centralLocation dbo:government ?government . ?government dbo:hasRulingParty ?rulingParty }

  # Find Steve McQueen's spouse
  dbr:Steve_McQueen dbo:spouse ?steveMcQueenSpouse .

  # Ensure the party member is from the ruling party in Central, Louisiana
  FILTER EXISTS { ?partyMember dbo:memberOf ?rulingParty }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ericClaptonBand ?nickCurranAssociatedArtist WHERE {
  # Find Eric Clapton's band memberships
  dbr:Eric_Clapperton dbo:bandMember ?ericClaptonBand .
  
  # Find Nick Curran and his associated musical artists
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorURL ?officeHolderLabel ?writerOfDucasWork WHERE {
  # Find the commander in the Russo-Polish War (1654–1667)
  VALUES ?commanderURL { 
    dbr:Bohdan_Hmelnitsky
  }
  
  # Find the successor who is a politician and an office holder
  OPTIONAL {
    ?successor dbo:successorOf ?commanderURL .
    ?successor rdfs:label ?officeHolderLabel .
    FILTER(CONTAINS(LCASE(?officeHolderLabel), ""politician"") || CONTAINS(LCASE(?officeHolderLabel), ""office holder""))
    BIND(STR(?successor) AS ?successorURL)
  }
  
  # Find the writer of a work by George Ducas
  OPTIONAL {
    dbr:George_Ducas dbo:authorOf ?ducasWork .
    ?ducasWork dbo:writtenBy ?writerOfDucasWork .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?artist ?movie ?actor WHERE {
  # Find the album containing ""What You Know"" by T.I.
  ?song dbo:title ""What You Know""@en .
  ?song dbo:lyricist dbr:T.I. .
  ?song dbo:release dbr:Urban_Cowboy_(T.I._album) .

  # Find artists associated with this album
  OPTIONAL {
    ?album dbo:artist ?artist .
  }

  # Find movies T.I. has acted in and actors from those movies
  ?movie dbo:starring dbr:T.I. .
  ?movie dbo:actor ?actor .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Hu_Jieqing dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Writer .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?abKyaHoga { 
    dbr:Ab_Kya_Hoga_(TV_series) # Assuming this is the correct resource for ""Ab Kya Hoga""
  }
  
  ?abKyaHoga dbo:castMember ?actor .
  ?actor dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""politician""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?pacelyAssociatedArtist ?darrylBannermanAssociatedArtist WHERE {
  VALUES ?pacelyResource { 
    dbr:$pacely 
  }
  OPTIONAL {
    ?pacelyResource dbo:associatedMusicalArtist ?pacelyAssociatedArtist .
  }

  VALUES ?darrylBannermanResource { 
    dbr:Darryl_Paa_Kwesi_Bannerman-Martin
  }
  OPTIONAL {
    ?darrylBannermanResource dbo:associatedMusicalArtist ?darrylBannermanAssociatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?philipp dbr:Duke_Philipp_of_Württemberg dbo:child ?child1 .
  ?child1 dbo:child ?person .
  ?person dbo:predecessor dbr:Carl,_Duke_of_Württemberg .
  ?margareteSophie dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  OPTIONAL { 
    ?letsch dbo:manager ?team .
  }
  
  FILTER EXISTS {
    ?team a dbo:SoccerClub ;
          dbo:sportsTeamSeason ?season .
  }
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistURL ?associatedArtist WHERE {
  # Find a person born in Central Region, Ghana who is a musician
  ?person dbo:birthPlace dbr:Central_Region_(Ghana) .
  ?person dbo:profession dbr:Musician .

  # Ensure the person's birth name matches their native identity (assuming this can be inferred from DBpedia data)
  OPTIONAL { 
    ?person foaf:name ?birthName .
    FILTER(CONTAINS(?birthName, ""native""))
  }

  # Find associated musical artist of $pacely
  dbr:$pacely dbo:associatedMusicalArtist ?artistURL .

  # Link the identified person to the associated artist found above
  ?person dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (?artistURL = ?associatedArtist)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Shaggy_(musician) dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalDescendant ?predecessor WHERE {
  # Archduke Charles Louis of Austria and his child
  VALUES ?archduke { dbr:Archduke_Charles_Louis_of_Austria }
  
  ?child1 dbo:childOf ?archduke .
  
  # Child of the child who is a royalty
  OPTIONAL {
    ?royalDescendant dbo:childOf ?child1 .
    FILTER EXISTS { ?royalDescendant dbo:royalty true . }
  }

  # Philipp Albrecht, Duke of Württemberg and his child
  VALUES ?philippAlbrecht { dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg }
  
  ?child2 dbo:childOf ?philippAlbrecht .
  
  # Predecessor of the child of Philipp Albrecht
  OPTIONAL {
    ?predecessor dbo:predecessorOf ?child2 .
  }

  FILTER (?royalDescendant = ?predecessor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Kid_Rock dbo:musicalArtist ?band .
  FILTER (isLiteral(?band) = false)
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonDescendant WHERE {
  # Roger II of Sicily and his grandchildren who are royalty
  dbr:Roger_II_of_Sicily dbo:child ?grandChild1 .
  ?grandChild1 rdf:type dbo:Monarch .
  ?grandChild1 dbo:parent ?parentOfGrandChild1 .
  ?parentOfGrandChild1 dbo:child ?commonDescendant .

  # Constance of Burgundy and her grandchildren who are royalty
  dbr:Constance_of_Burgundy dbo:spouse ?conSpouse .
  ?conSpouse dbo:child ?grandChild2 .
  ?grandChild2 rdf:type dbo:Monarch .
  ?grandChild2 dbo:parent ?parentOfGrandChild2 .
  ?parentOfGrandChild2 dbo:child ?commonDescendant .

  FILTER (?commonDescendant = ?commonDescendant)
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse WHERE {
  # Find the commander in the Third Taiwan Strait Crisis
  ?event dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?event), ""Third_Taiwan_Strait_Crisis""))

  # Identify Bill Clinton as the author of ""An Invitation to the White House""
  dbr:An_Invitation_to_the_White_House dbo:author ?author .
  FILTER(?author = dbr:Bill_Clinton)

  # Find the spouse of Bill Clinton who is a politician and an office holder
  ?author dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolder true .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Step 1: Identify William II of Sicily's father
  VALUES ?williamII { dbr:William_II_of_Sicily }
  ?williamII dbo:father ?fatherOfWilliamII .

  # Step 2: Find the child of the parent of the child (royalty) of Roger II of Sicily
  VALUES ?rogerII { dbr:Roger_II_of_Sicily }
  ?childOfRogerII dbo:royalAncestor ?rogerII .
  ?parentOfChild dbo:child ?childOfRogerII .
  ?grandchildOfParent dbo:child ?parentOfChild .
  FILTER EXISTS { ?grandchildOfParent a dbo:Monarch } # Ensure royalty

  # Step 3: Identify the child of the child of Alfonso VI
  VALUES ?alfonsoVI { dbr:Alfonso_VI_of_León_and_Castile }
  ?childOfAlfonsoVI dbo:child ?alfonsoVI .
  ?grandchildOfAlfonsoVI dbo:child ?childOfAlfonsoVI .

  # Step 4: Find the common entity
  FILTER (?fatherOfWilliamII = ?parentOfChild)
  FILTER (?grandchildOfParent = ?grandchildOfAlfonsoVI)
  BIND(?grandchildOfParent AS ?commonEntity)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?claimToFame WHERE {
  # Find the actor in ""High Society Blues""
  dbr:High_Society_Blues dbo:starring ?actor .
  
  # Find the claim to fame of the actor that is both a movie and a work
  ?actor dbo:claimToFame ?claimToFame .
  ?claimToFame rdf:type dbo:Film .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?usNavy { 
    dbr:United_States_Navy 
  }
  
  ?war dbo:nationality ?usNavy .
  OPTIONAL {
    ?war dbo:description ?description .
    FILTER(CONTAINS(LCASE(?description), ""disease"") && CONTAINS(LCASE(?description), ""societal""))
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfFather WHERE {
  # Step 1: Identify Saw Shwe Khet and his child who is royalty
  ?sawShweKhet a dbo:Monarch ;
               dbo:child ?royalChild .

  # Step 2: Find the predecessor of this royal child
  ?predecessor dbo:succeededBy ?royalChild .

  # Step 3: Identify Saw Min Phyu and his spouse who is royalty
  ?sawMinPhyu a dbo:Monarch ;
              dbo:spouse ?royalSpouse .

  # Step 4: Find the child of this royal spouse
  ?royalSpouse dbo:child ?childOfSpouse .

  # Step 5: Identify the father of this child (should be royalty)
  ?father a dbo:Monarch ;
          dbo:child ?childOfSpouse .

  # Step 6: Find the spouse of this father
  ?father dbo:spouse ?spouseOfFather .

  FILTER (?predecessor = ?royalChild)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Back_to_Work dbo:author dbr:Hillary_Clinton .
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  OPTIONAL { ?spouse a dbo:Politician . }
  OPTIONAL { ?spouse a dbo:OfficeHolder . }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerOfTeam ?player WHERE {
  # Find the successor of the VfL Bochum 2006–07 season
  VALUES ?vflBochum2007Season { dbr:VfL_Bochum_season_2006%E2%80%9307 }
  ?vflBochum2007Season dbo:successor ?vflBochum2008Season .
  
  # Find teams managed by Thomas Letsch during the VfL Bochum 2007–08 season
  VALUES ?thomasLetsch { dbr:Thomas_Letsch }
  ?team dbo:sportsTeamSeason ?vflBochum2008Season ;
        dbo:manager ?managerOfTeam .
  
  # Ensure the manager is Thomas Letsch
  FILTER (?managerOfTeam = ?thomasLetsch)
  
  # Find players associated with those teams
  OPTIONAL {
    ?player dbo:playsFor ?team .
  }
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nashiParniURL WHERE {
  ?nashiParniURL rdfs:label ""Наши парни""@ru .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?ceceBellBirthPlace WHERE {
  OPTIONAL { 
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
  OPTIONAL { 
    dbr:Cecily_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtistURL WHERE {
  dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtist .
  OPTIONAL { 
    ?associatedArtist a dbo:MusicalArtist .
  }
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildRoyalty WHERE {
  # Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  
  # Grandchildren who are royalty
  ?belasChild dbo:child ?grandchild .
  ?grandchild dbo:royalTitle ?title .

  # Maria of Bytom's spouse and their parent
  dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .
  ?mariaSpouse dbo:parent ?spousesParent .

  # The grandchild (royalty) is the parent of the father of Maria's spouse
  FILTER (?grandchild = ?spousesParent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  ?politician dbo:deathPlace dbr:Taipei .
  ?politician dbo:child ?child .
  ?child a dbo:Politician .
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = ""en"")
}
```",2,3,3,2,1,3,2,20,0,8,2,0.0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?paulusPowellBirthPlaceGovernor ?vinceGilliganAwardeeBirthPlace WHERE {
  # Cece Bell's birth place
  dbr:Cecilie_Bell dbo:birthPlace ?ceceBellBirthPlace .

  # Governor of Cece Bell's birth place (assuming it is a US state)
  OPTIONAL {
    ?ceceBellBirthPlace dbo:governmentLeader ?governor .
    ?governor rdf:type dbo:Governor .
    BIND(?governor AS ?ceceBellBirthPlaceGovernor)
  }

  # Paulus Powell's birth place
  dbr:Paulus_Powell dbo:birthPlace ?paulusPowellBirthPlace .

  # Governor of Paulus Powell's birth place (assuming it is a US state)
  OPTIONAL {
    ?paulusPowellBirthPlace dbo:governmentLeader ?governor .
    ?governor rdf:type dbo:Governor .
    BIND(?governor AS ?paulusPowellBirthPlaceGovernor)
  }

  # Vince Gilligan's award and awardee
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?vinceGilliganAwardeeBirthPlace .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?veraLynn { dbr:Vera_Lynn }
  
  ?work dbo:starring ?veraLynn .
  ?work rdf:type ?type .
  
  FILTER (?type IN (dbo:Film, dbo:TelevisionSeries))
}
```",1,3,2,1,1,3,2,20,0,2,1,0.0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { dbr:William_Bayne }
  
  ?person dbo:associatedWith ?war .
  ?war rdf:type dbo:MilitaryConflict .
  ?war rdf:type dbo:Event .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  ?edwardStanley dbo:father ?parent .
  ?parent dbo:child dbr:Arthur_Stanley_(politician) .

  OPTIONAL {
    ?parent dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
  }

  FILTER EXISTS { ?parent dbo:award dbr:Commander_of_the_Royal_Victorian_Order }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?workTitle WHERE {
  ?politician a dbo:OfficeHolder ;
              dbo:residence dbr:Chappaqua,_New_York .
  
  ?work dbo:author ?politician ;
        a dbo:Book, dbo:WrittenWork .

  ?politician foaf:name ?authorName .
  ?work rdfs:label ?workTitle .
}
```",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Charles_Parsons_(British_Army_officer) dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalParent WHERE {
  # Identify Ferdinand Albert II's children
  VALUES ?ferdinandChild { 
    ?child .
  }
  
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?ferdinandChild .

  # For each child, find their parents
  ?ferdinandChild dbo:parent ?parent1 .
  OPTIONAL {
    ?ferdinandChild dbo:parent ?parent2 .
  }

  # Check if the parent is royalty (e.g., by checking for a title or role)
  FILTER EXISTS { 
    ?parent1 dbo:title ?title .
    FILTER CONTAINS(LCASE(str(?title)), ""king"" || ""queen"" || ""duke"" || ""princess"")
  }
  
  UNION
  
  FILTER EXISTS {
    ?parent2 dbo:title ?title .
    FILTER CONTAINS(LCASE(str(?title)), ""king"" || ""queen"" || ""duke"" || ""princess"")
  }

  # Return the royal parent
  BIND(COALESCE(?parent1, ?parent2) AS ?royalParent)
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Bobby Shmurda's birth name and associated musical artist
  VALUES ?bobbyShmurdaURL { dbr:Bobby_Shmurda }
  ?bobbyShmurda dbo:birthName ?birthName .
  OPTIONAL { ?bobbyShmurda dbo:associatedMusicalArtist ?bandMember . }

  # Step 2: Identify GS9 members who are both artists and musical artists
  VALUES ?gs9URL { dbr:GS9 }
  ?gs9Member dbo:memberOf ?gs9URL .
  FILTER (CONTAINS(LCASE(?gs9Member), ""artist"") && CONTAINS(LCASE(?gs9Member), ""musical artist""))

  # Step 3: Determine the associated musical artist of that GS9 member
  OPTIONAL { ?gs9Member dbo:associatedMusicalArtist ?associatedBand . }

  # Step 4: Find a band member of that associated musical artist who is also a musical artist
  OPTIONAL {
    ?bandMember dbo:memberOf ?associatedBand .
    FILTER (CONTAINS(LCASE(?bandMember), ""musical artist""))
  }

  # Final filter to ensure the person matches all criteria
  FILTER (?birthName = ?bobbyShmurdaURL && ?bandMember = ?associatedBand)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?chancellor a dbo:Chancellor ;
              dbo:country dbr:West_Germany .
  OPTIONAL { ?chancellor dbo:nationality ?nationality . }
  OPTIONAL { ?chancellor dbo:birthPlace ?nativePlace . }
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonProducer WHERE {
  # Actor of High Society Blues
  ?highSocietyBluesActor dbo:actor dbr:High_Society_Blues .
  
  # Professional in the alter ego of The Shadow
  ?theShadowProfessional rdfs:label ""The Shadow""@en .

  # Producer of The Adventures of Tom Sawyer (1938 film)
  ?tomSawyerProducer dbo:producer dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .
  
  # Check if these individuals are the same person
  FILTER (?highSocietyBluesActor = ?theShadowProfessional && ?theShadowProfessional = ?tomSawyerProducer)
  
  # Find a common production by this individual
  ?commonProduction dbo:producer ?commonProducer .

  # Ensure the production is both a movie and a work (e.g., film or TV series)
  FILTER EXISTS { ?commonProduction rdf:type dbo:Film . }
  FILTER EXISTS { ?commonProduction rdf:type dbo:TelevisionSeries . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?doonParent ?amyParent WHERE {
  OPTIONAL { 
    dbr:Doon_Arbus dbo:parent ?doonParent .
  }
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?amyParent .
  }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?descendantAlexander ?descendantCharles WHERE {
  # Find Alexander's great-great-grandchild
  ?alexanderChild dbo:childOf dbr:Alexander_of_Württemberg ;
                 dbo:child ?alexanderGrandchild .
  ?alexanderGrandchild dbo:child ?alexanderGreatGrandchild .
  ?alexanderGreatGrandchild dbo:child ?descendantAlexander .

  # Find Charles's great-grandchild
  ?charlesChild dbo:childOf dbr:Archduke_Charles_Louis_of_Austria ;
                dbo:child ?charlesGrandchild .
  ?charlesGrandchild dbo:child ?charlesGreatGrandchild .
  ?charlesGreatGrandchild dbo:child ?descendantCharles .

  # Ensure the descendant is royalty
  FILTER EXISTS { ?descendantAlexander rdf:type dbo:Monarch . }
  FILTER EXISTS { ?descendantCharles rdf:type dbo:Monarch . }

  # Check if they are the same person
  FILTER (?descendantAlexander = ?descendantCharles)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warURL WHERE {
  VALUES ?davydovResource { 
    dbr:Aleksandr_Lvovich_Davydov 
  }
  ?davydovResource dbo:participatedIn ?war .
  BIND(?war AS ?warURL)
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?teamManaged WHERE {
  ?person a dbo:SoccerManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date .
  
  ?person rdfs:label ?managerName ;
          dbo:teamManagedBy dbr:VfL_Bochum .

  OPTIONAL {
    ?person dbo:teamManagedBy ?teamManaged .
  }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?awardForce ?war WHERE {
  # Henry Clay Lewis birthplace
  VALUES ?henryClayLewis { dbr:Henry_Clay_Lewis }
  ?henryClayLewis dbo:birthPlace ?settlement .
  FILTER (STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/Category:Populated_places_in_"") && 
          EXISTS {?settlement a dbo:Settlement} &&
          EXISTS {?settlement dbo:country dbr:United_States})

  # Quincy Adams Gillmore award and force
  VALUES ?quincyAdamsGillmore { dbr:Quincy_A._Gillmore }
  OPTIONAL {
    ?quincyAdamsGillmore dbo:award ?award .
    ?award dbo:force ?awardForce .
  }

  # Amasa Tracy war
  VALUES ?amasaTracy { dbr:Amasa_Tracy }
  OPTIONAL {
    ?amasaTracy dbo:servedInWar ?war .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?pacely { 
    dbr:$pacely  # Replace $pacely with the actual DBpedia resource name if known
  }
  OPTIONAL {
    ?pacely dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParentSpouse WHERE {
  # Step 1: Identify Min Hla Htut of Pyakaung's parent
  OPTIONAL { 
    dbr:Min_Hla_Htut_of_Pyakaung dbo:parent ?minHlaHtutParent .
  }
  
  # Step 2: Find the spouse of this parent
  OPTIONAL {
    ?minHlaHtutParent dbo:spouse ?parentSpouse .
  }

  # Step 3: Identify the child of this spouse
  OPTIONAL {
    ?parentSpouse dbo:child ?childOfParentSpouse .
  }
  
  # Step 4: Check royalty status for this child
  FILTER EXISTS { 
    ?childOfParentSpouse dbo:royalty true .
  }

  # Step 5: Find Saw Shwe Khet's child
  OPTIONAL {
    dbr:Saw_Shwe_Khet dbo:child ?sawShweKhetChild .
  }
  
  # Step 6: Check royalty status for this child
  FILTER EXISTS { 
    ?sawShweKhetChild dbo:royalty true .
  }

  # Step 7: Identify the father of Saw Shwe Khet's child
  OPTIONAL {
    ?sawShweKhetChild dbo:parent ?fatherOfSawShweKhetChild .
  }
  
  # Step 8: Find the spouse of this father
  OPTIONAL {
    ?fatherOfSawShweKhetChild dbo:spouse ?fatherSpouse .
  }

  # Step 9: Check royalty status for this spouse
  FILTER EXISTS { 
    ?fatherSpouse dbo:royalty true .
  }
  
  # Ensure the child of the parent's spouse is the same as the spouse of Saw Shwe Khet's father
  FILTER (?childOfParentSpouse = ?fatherSpouse)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerURL WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs"" .
  ?work dbo:author ?writer .

  # Identify a commander in the Russo-Polish War and their successor
  ?commander dbo:participatedIn dbr:Russo-Polish_War_(1654%E2%80%931667) ;
             dbo:successor ?successor .
  
  # Ensure the successor is an office holder or politician during the Russo-Polish War
  ?successor dbo:officeHolder ?office ;
             (dbo:participatedIn|dbo:politicalAffiliation) dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Confirm the successor was a commander in the Great Turkish War
  ?successor dbo:commanderOf dbr:Great_Turkish_War .

  FILTER (?writer = ?successor)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?francisI { dbr:François_Ier,_Duke_of_Lorraine }
  ?francisI dbo:parent ?parent .
  OPTIONAL {
    ?parent dbo:royaltyStatus ?status .
    FILTER (?status IN (dbr:Crown_Prince, dbr:Prince, dbr:Duchess, dbr:King, dbr:Queen))
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Kim_Wilson dbo:associatedBand ?band .
}
```",1,1,2,1,1,3,3,71,1,4,1,0.2,0.5,0.28571428571428575
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find the father of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:father ?father .

  # Find a child of this father
  ?father dbo:child ?child .

  # Check if any child's offspring are royalty
  ?child dbo:child ?grandchild .
  ?grandchild rdf:type dbo:RoyalFamilyMember .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify the Algerian War
  VALUES ?algerianWar { dbr:Algerian_War }

  # Find wars linked to societal events and television shows
  ?war dbo:wikiPageWikiLink ?societalEvent .
  ?war dbo:wikiPageWikiLink ?televisionShow .

  # Ensure the war is related to the Algerian War
  ?algerianWar dbo:wikiPageWikiLink ?relatedWar .
  FILTER (?relatedWar = ?war)

  # Filter for known societal events and television shows
  VALUES ?societalEvent { dbr:Societal_event }
  VALUES ?televisionShow { dbr:Television_show }

  # Optional: Capture additional information about the war
  OPTIONAL {
    ?war dbo:wikiPageDisambiguations ?disambiguation .
  }
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardNativeRegion WHERE {
  # Find the DBpedia resource for Coro de la Pontificia Universidad Católica de Puerto Rico
  ?choir a dbo:MusicalGroup ;
         rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  # Identify awards associated with this choir
  ?award dbo:recipient ?choir .

  # Find the native region of the award
  ?award dbo:nativeRegion ?nativeRegion .

  # Ensure the native region is a region, American, state, and settlement
  ?nativeRegion a dbo:State ;
                rdfs:label ?regionLabel .
  
  FILTER(CONTAINS(LCASE(?regionLabel), ""american"") && CONTAINS(LCASE(?regionLabel), ""state"") && CONTAINS(LCASE(?regionLabel), ""settlement""))
}
```",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Albrecht,_Duke_of_Württemberg dbo:child ?child .
  ?predecessor dbo:predecessor dbr:Carl,_Duke_of_Württemberg .
  FILTER (?child = ?predecessor)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  
  # Find the producer of ""Johnny Doughboy""
  dbr:Johnny_Doughboy dbo:producer ?producer .

  # Find the actor of Johnny Doughboy
  dbr:Johnny_Doughboy dbo:actor ?actor .

  # Link the alter ego to the producer
  FILTER (?shadowAlterEgo = ?producer)

  # Ensure the professional is also the actor
  FILTER (?producer = ?actor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmarkName ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""20.1168""^^xsd:float .
  
  # Identify Ann Sothern by her birth name
  ?person dbr:Ann_Sothern ;
          foaf:name ""Ann Sothern""@en .

  # Find the party membership of Ann Sothern, if available
  OPTIONAL {
    ?person dbo:partyMemberOf ?party .
    ?party rdfs:label ?partyLabel .
    
    # Assuming we need to find a ruling party at the landmark's location
    ?landmark dbo:location ?location .
    ?location dbo:country ?country .
    ?rulingParty dbo:country ?country ;
                 dbo:isRulingParty ""true""^^xsd:boolean .

    FILTER (?party = ?rulingParty)
    
    # Return the name of the landmark and the party member
    BIND(?person AS ?partyMember)
  }
  
  # Bind the landmark's name for output
  BIND(str(?landmark) AS ?landmarkName)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfDoonArbus ?actorInSameMovie WHERE {
  VALUES ?doonArbus { dbr:Doon_Arbus }
  
  # Find the parent of Doon Arbus
  ?doonArbus dbo:parent ?parentOfDoonArbus .
  
  # Find movies (works) with Herschel Bernardi as an actor
  ?work dbo:actor ?herschelBernardiActorRole .
  ?herschelBernardiActorRole dbo:agent dbr:Herschel_Bernardi .

  # Find other actors in the same movie
  ?work dbo:actor ?actorInSameMovie .
  
  FILTER (?actorInSameMovie != ?herschelBernardiActorRole)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorOfMyatHponePyo ?spouseOfFather WHERE {
  # Find Saw Shwe Khet and their child with Saw Min Hla who is royalty
  ?sawShweKhet dbo:child ?royalChild .
  ?sawMinHla dbo:child ?royalChild .
  
  # Ensure the child is a royalty
  ?royalChild rdf:type dbo:Monarch .

  # Find the spouse of the father (Saw Min Hla) who is royalty
  ?father dbr:Saw_Min_Hla .
  ?father dbo:spouse ?spouseOfFather .
  
  # Ensure the spouse is a royalty
  ?spouseOfFather rdf:type dbo:Monarch .

  # Find Myat Hpone Pyo's predecessor
  ?myatHponePyo dbr:Myat_Hpone_Pyo .
  ?myatHponePyo dbo:predecessor ?predecessorOfMyatHponePyo .
  
  # Ensure the predecessor is a royalty
  ?predecessorOfMyatHponePyo rdf:type dbo:Monarch .

  FILTER (?spouseOfFather = ?royalChild)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title WHERE {
  VALUES ?williamI { 
    dbr:William_the_Conqueror 
  }
  ?williamI dbo:title ?title .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlaceEntity .
}
```",2,2,3,2,1,2,2,9,0,2,249,0.0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?suvorovWar ?baggovutWar WHERE {
  VALUES ?suvorov { dbr:Aleksandr_Suvorov }
  VALUES ?baggovut { dbr:Karl_Gustav_von_Baggovut }

  OPTIONAL {
    ?suvorov dbo:participatedIn ?suvorovWar .
  }
  
  OPTIONAL {
    ?baggovut dbo:participatedIn ?baggovutWar .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?middlesex { 
    dbr:Middlesex_(county)
  }
  ?person dbo:birthPlace ?middlesex .
}
```",1,1,2,1,1,2,3,28,0,0,935,0,0.0,0
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?rogerPryorsSpouse WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  FILTER (?elevation = 20.1168)

  # Identify the ruling party at this location (assuming there's a property for it)
  OPTIONAL { 
    ?landmark dbo:locatedIn ?location .
    ?location dbo:rulingParty ?party .
  }

  # Find a member of this ruling party
  OPTIONAL {
    ?member dbo:memberOf ?party ;
            foaf:name ?partyMember .
  }
  
  # Retrieve Roger Pryor's spouse
  dbr:Roger_Pryor_(actor) dbo:spouse ?rogerPryorsSpouse .

  # Filter to ensure the same person is both a party member and Roger Pryor's spouse
  FILTER (?partyMember = ?rogerPryorsSpouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfStephenV ?parentOfFather WHERE {
  # Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?childOfStephenV .
  
  # Find the father of this child (grandson of Stephen V)
  ?childOfStephenV dbo:father ?fatherOfChild .

  # Find the parent of this father (great-grandparent of Stephen V's child)
  ?fatherOfChild dbo:parent ?parentOfFather .

  # Ensure the person is royalty
  ?parentOfFather a dbo:RoyalFamilyMember .
  
  # Optional: Connect to Charles I of Hungary if needed for context
  OPTIONAL {
    ?parentOfFather dbo:spouse|dbo:child dbr:Charles_I_of_Hungary .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # VfL Bochum manager during the 2006–07 season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:manager ?manager .
  
  # Manager is associated with a sports club, organization, and soccer club
  ?manager dbo:sportsTeam ?sportsClub .
  ?manager dbo:organization ?organization .
  ?sportsClub rdf:type dbo:SoccerClub .

  # Successor involved in a football league season
  OPTIONAL {
    ?successor dbo:involvedInSportSeason ?footballLeagueSeason .
    ?footballLeagueSeason rdf:type dbo:FootballLeagueSeason .
  }

  # Administration (country) is Germany, leader of West Germany was Konrad Adenauer
  dbr:Konrad_Adenauer dbo:nativeCountry dbr:Germany .

  FILTER (?successor = ?manager)
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?theme WHERE {
  VALUES ?anumtaQureshi { dbr:Anumta_Qureshi }
  
  ?anumtaQureshi dbo:performerIn ?show .
  OPTIONAL { 
    ?show dbo:theme ?theme .
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?starIsBornProducer ?collinsClaimToFame ?claimToFameProducer WHERE {
  # Producer of the 1937 film ""A Star Is Born""
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?starIsBornProducer .

  # Claim to fame of Cora Sue Collins and its producer
  OPTIONAL {
    dbr:Cora_Sue_Collins dbo:claimToFame ?collinsClaimToFame .
    ?collinsClaimToFame dbo:producer ?claimToFameProducer .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyURL ?leaderResidence WHERE {
  # Find George Savage's associated political party
  ?georgeSavage a dbo:Politician ;
                foaf:name ""George Savage"" .
  
  ?georgeSavage dbo:member ?party .

  # Ensure the party is an organization and located in the UK
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:United_Kingdom .

  # Find the leader of the political party
  ?party dbo:leader ?leader .

  # Get the residence of the leader
  ?leader dbo:residence ?leaderResidence .
  
  # Ensure the residence is in the UK
  ?leaderResidence dbo:country dbr:United_Kingdom .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Sam_Concepcion dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,1,0,6,1.0,0.14285714285714285,0.25
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?child WHERE {
  ?child dbo:mother ?mother .
  ?mother rdf:type dbo:Actress .
}
```",2,2,3,2,1,3,2,20,0,0,935,0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid SPARQL query can be generated due to lack of specific information in the question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?targetPerson WHERE {
  # Find the child of Stephen V of Hungary who is also the parent of Charles Martel of Anjou
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  ?child dbo:child ?charlesMartelParent .
  
  # Ensure this person is the parent of Charles Martel of Anjou
  ?charlesMartelParent dbo:parent ?child .

  # Find the spouse of this person (father-in-law)
  ?spouse dbo:spouse ?child .
  
  # Ensure the spouse is royalty and connected to Philip, Despot of Romania
  ?spouse a dbo:Monarch .
  OPTIONAL {
    ?philip dbr:Philip_Despot_of_Romania .
    ?spouse dbo:parent ?philip .
  }
  
  # The target person is the child of Stephen V and parent of Charles Martel
  BIND(?child AS ?targetPerson)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?colorMeDeadActor ?actorDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # Main actors of ""Color Me Dead""
  OPTIONAL {
    dbr:Color_Me_Dead dbo:starring ?colorMeDeadActor .
    
    # Death place of the actor(s) from ""Color Me Dead""
    ?colorMeDeadActor dbo:deathPlace ?actorDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Assuming Saw Min Phyu and Min Hla Htut of Pyakaung are known entities in DBpedia
  VALUES ?sawMinPhyu { dbr:Saw_Min_Phyu }
  VALUES ?minHlaHtut { dbr:Min_Hla_Htut_of_Pyakaung }

  # Find Saw Min Phyu's spouse and check if they are royalty
  ?spouse dbo:spouse ?sawMinPhyu .
  ?spouse a dbo:RoyalFamily .

  # Find the child of this royal spouse
  ?child dbo:parent ?spouse .

  # Find the predecessor of this child
  ?predecessor dbo:successor ?child .

  # Find Min Hla Htut's parent and their child
  ?minHlaParent dbo:child ?minHlaHtut .
  ?minHlaChild dbo:parent ?minHlaParent .

  # Match the predecessor with the child of Min Hla Htut's parent
  FILTER (?predecessor = ?minHlaChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?sawShweKhetSpouse WHERE {
  # Identify Minye Kyawswa and his child
  ?minyeKyawswa dbo:child ?child .
  
  # The parent of the child is Minye Kyawswa, so we find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:spouse ?sawShweKhetSpouse .

  # Match the spouse with the child of Minye Kyawswa
  FILTER (?child = ?sawShweKhetSpouse)
  
  # Ensure we are referring to specific individuals
  VALUES ?minyeKyawswa { dbr:Minye_Kyawswa }
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Philip_Despot_of_Romania dbo:parent ?parent .
  FILTER EXISTS { ?parent rdf:type dbo:Monarch . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?warURL WHERE {
  ?recipient dbo:award dbr:Medal_of_Honor .
  ?recipient dbo:conflict ?warURL .
}
```",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow WHERE {
  VALUES ?awards { 
    dbr:Anita_Borg_Institute_Women_of_Vision_Awards 
  }
  ?tvShow dbo:wikiPageWikiLink ?awards .
}
```",1,2,2,1,1,3,2,20,0,19,1,0.0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?artist WHERE {
  VALUES ?song { dbr:What_You_Know_(T.I._song) }
  
  ?song dbo:fromAlbum ?album .
  
  OPTIONAL {
    ?album dbo:artist ?artist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  VALUES ?richardEGrant { dbr:Richard_E._Grant }
  
  ?movie dbo:starring ?richardEGrant .
  ?movie rdf:type dbo:TelevisionShow .
  FILTER EXISTS { ?movie dbo:genre ?genre . FILTER (CONTAINS(LCASE(str(?genre)), ""actor"")) }
}
```",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?predecessor dbo:predecessor dbr:Stephen_V_of_Hungary .
  
  # Step 2: Identify Maria of Bytom's spouse and their royal father
  ?spouse dbo:spouse dbr:Maria_of_Bytom .
  ?father dbo:child ?spouse .
  FILTER EXISTS { ?father a dbo:Monarch } # Ensure the father is royalty
  
  # Find parent (likely mother) of this royal father
  ?parent dbo:child ?father .

  # Step 3: Identify child of this parent who is royalty
  ?royalChild dbo:child ?parent .
  FILTER EXISTS { ?royalChild a dbo:Monarch } # Ensure the child is royalty

  # Step 4: Find the child of this royal child
  ?childOfChild dbo:child ?royalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Joey B's birth name
  OPTIONAL { 
    dbr:Joey_B dbo:birthName ?joeyBBirthName .
  }
  
  # Find $pacely's associated musical artist
  OPTIONAL {
    dbr:$pacely dbo:associatedMusicalArtist ?pacelyAssociatedArtist .
  }

  # Find the writer of The Live Anthology and check if they are a professional musical artist
  OPTIONAL {
    dbr:The_Live_Anthology dbo:writer ?anthologyWriter .
    ?anthologyWriter dbo:profession ?writerProfession .
    FILTER (CONTAINS(LCASE(?writerProfession), ""musical artist""))
  }

  # Ensure the person matches all conditions
  VALUES ?person { 
    ?joeyBBirthName 
    ?pacelyAssociatedArtist 
    ?anthologyWriter
  }
  
  FILTER (?person = ?joeyBBirthName && ?person = ?pacelyAssociatedArtist && ?person = ?anthologyWriter)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration WHERE {
  VALUES ?person { dbr:Alberto_Núñez_Feijóo }
  VALUES ?party { dbr:Spanish_Socialist_Workers'_Party }
  VALUES ?country { dbr:Spain }

  ?person dbo:office ?office .
  ?person dbo:memberOfParliament ?administration .
  ?administration dbo:politicalParty ?party .
  
  ?person dbo:nationality ?nationality .
  ?party dbo:country ?partyCountry .

  FILTER (?nationality = ?country)
  FILTER (?partyCountry = ?country)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?rodneyLeesAwardParent ?edwardStanleyAwardParent WHERE {
  OPTIONAL {
    dbr:Rodney_Lees dbo:award ?rodneyLeesAward .
    ?rodneyLeesAward rdfs:subClassOf* ?rodneyLeesAwardParent .
  }
  OPTIONAL {
    dbr:Edward_Stanley_17th_Earl_of_Derby dbo:award ?edwardStanleyAward .
    ?edwardStanleyAward rdfs:subClassOf* ?edwardStanleyAwardParent .
  }
}
```",4,4,5,3,2,3,3,71,0,1,1,0.0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Tony Hollings' birthdate
  VALUES ?tonyHollingsBirthDate { 
    dbr:Tony_Hollings dbo:birthDate ?tonyHollingsBirthDate .
  }
  
  # Find a person who is an athlete, soccer player, sports manager, and soccer manager
  ?person a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .

  # Ensure the person shares the same birthday as Tony Hollings
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?tonyHollingsBirthDate)

  # Find players associated with Lai Sun Cheung
  ?playerInTeam dbr:Lai_Sun_Cheung dbo:playerInSportTeam ?person .
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?zervasWar ?awardeeWar ?athensEntity WHERE {
  # Napoleon Zervas and the Greek Resistance
  OPTIONAL {
    dbr:Napoleon_Zervas dbo:occupation dbr:Greek_Resistance_Movement .
    dbr:Greek_Resistance_Movement dbo:place dbr:Athens .
    BIND(dbr:Greek_Resistance_Movement AS ?zervasWar)
  }
  
  # Awardee of the Order of Saint George, 4th class (likely related to WWII)
  OPTIONAL {
    ?awardee dbo:award dbr:Order_of_Saint_George_(Russia) .
    FILTER(CONTAINS(LCASE(?awardeeLabel), ""30""))
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    BIND(?awardee AS ?awardeeWar)
  }

  # Entity in Athens
  OPTIONAL {
    ?athensEntity dbo:location dbr:Athens .
    FILTER(STRSTARTS(STR(?athensEntity), ""http://dbpedia.org/resource/""))
    BIND(?athensEntity AS ?athensEntity)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hideyoshiWar ?ieyasuWar WHERE {
  # Wars associated with Toyotomi Hideyoshi (Hashiba Hidekatsu)
  OPTIONAL {
    dbr:Toyotomi_Hideyoshi dbo:associatedWith ?hideyoshiWar .
    FILTER (?hideyoshiWar a dbo:MilitaryConflict) 
  }
  
  # Wars associated with Tokugawa Ieyasu (born Koichirō)
  OPTIONAL {
    dbr:Tokugawa_Ieyasu dbo:associatedWith ?ieyasuWar .
    FILTER (?ieyasuWar a dbo:MilitaryConflict) 
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?stephenV { dbr:Stephen_V_of_Hungary }
  
  ?parent dbo:child ?stephenV .
  ?parent dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,2,1,0.0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?region ?country WHERE {
  # Find the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .

  # Get William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?gaynerBirthPlace .
  
  # Extract the region and country of William Gayner's birthplace
  ?gaynerBirthPlace dbo:locatedInCountry ?country ;
                   dbo:administrativeRegion ?region .

  # Ensure the parent is a native of both the region and country
  ?parent dbo:nationality ?nationality .
  FILTER (?nationality = ?country)
  
  OPTIONAL {
    ?parent dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:locatedInAdministrativeArea ?adminArea .
    FILTER (?adminArea = ?region)
  }
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  VALUES ?campaign { 
    dbr:French_Egyptian_Campaign_in_Syria_and_Palestine_1798–1801
  }
  
  ?campaign dbo:commander ?commander .
  ?campaign dbo:militaryConflict ?militaryForce .

  OPTIONAL {
    ?bayne dbr:William_Bayne_(Royal_Navy_officer) .
    FILTER (?commander != ?bayne)
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL ?ericClaptonBand ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  OPTIONAL {
    dbr:Eric_Clapton dbo:associatedMusicalArtist ?ericClaptonBand .
  }

  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeURL WHERE {
  ?award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:recipient ?person .
  ?person dbo:nationality dbr:Japan .
  OPTIONAL { 
    ?person dbo:profession dbr:Television_director OR
            ?person dbo:profession dbr:Television_writer OR
            ?person dbo:profession dbr:Television_actor .
  }
  FILTER EXISTS {
    ?person dbo:profession ?profession .
    VALUES ?profession { dbr:Television_director dbr:Television_writer dbr:Television_actor }
  }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?wizardsAssociatedArtist ?stuartAssociatedArtist WHERE {
  # Find associated musical artist of Wizards of Waverly Place (soundtrack)
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:associatedMusicalArtist ?wizardsAssociatedArtist .
  
  # Ensure the associated artist is both a musical artist and an artist
  ?wizardsAssociatedArtist rdf:type dbo:MusicalArtist ;
                          rdf:type dbo:Artist .

  # Find associated musical artist of Stuart Mcbeath Tosh
  dbr:Stuart_Mcbeath_Tosh dbo:associatedMusicalArtist ?stuartAssociatedArtist .
  
  # Ensure the associated artist is a musical artist
  ?stuartAssociatedArtist rdf:type dbo:MusicalArtist .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personBirthName WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?tishaSterling dbo:parent ?parent .
  FILTER (str(?tishaSterling) = ""Tisha_Sterling"")

  # Step 2: Find Nat Levine's film product
  ?natLevine dbo:film ?film .

  # Step 3: Determine the actor of the film
  ?film dbo:actor ?actor .

  # Step 4: Identify the spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Step 5: Find the birth name of the parent
  ?parent dbo:birthName ?personBirthName .
  
  FILTER (str(?natLevine) = ""Nat_Levine"")
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Reed_Howes dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?victorStanleyParent ?edwardStanleyParent WHERE {
  OPTIONAL { 
    dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?victorStanleyParent .
  }
  OPTIONAL { 
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?edwardStanleyParent .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?war WHERE {
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  OPTIONAL { 
    ?child dbo:associatedWith ?war .
    FILTER (CONTAINS(LCASE(STR(?war)), ""osaka siege""))
  }
}
```",3,3,4,2,2,2,3,28,0,3,3,0.0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonMovie ?actor WHERE {
  # Find movies with Audrey Hepburn
  VALUES ?audreyHepburnMovies { 
    dbr:Breakfast_at_Tiffany's 
    dbr:Roman_Holiday 
    dbr:My_Fair_Lady 
    dbr:The_Night_of_the_Iguana 
    dbr:Wait_Until_Dark 
    # Add more movies as needed
  }
  
  ?audreyHepburnMovies dbo:starring dbr:Audrey_Hepburn .
  
  # Find actors in the 2013 film ""Paradise""
  VALUES ?paradiseActors { 
    dbr:Jessica_Biel 
    dbr:James_Wood_(actor) 
    # Add more actors as needed
  }
  
  dbr:Paradise_(2013_film) dbo:starring ?paradiseActor .
  FILTER(?paradiseActor IN (?paradiseActors))
  
  # Find a common movie with both Audrey Hepburn and an actor from ""Paradise""
  ?commonMovie dbo:starring dbr:Audrey_Hepburn ;
              dbo:starring ?actor .
  FILTER(?actor = ?paradiseActor)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the successor of the commander in the Russo-Polish War (1654–1667)
SELECT ?successor WHERE {
  ?commander dbo:commanderOf dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?commander a dbo:Politician ;
             dbo:officeHolder true .
  OPTIONAL { ?commander dbo:successor ?successor . }
}

# Query to find the commander in the Battle of Vienna associated with a television show and societal event
SELECT ?commander WHERE {
  ?militaryForce dbo:militaryForceOf dbr:Battle_of_Vienna ;
                 dbo:commander ?commander .
  OPTIONAL { ?commander dbo:associatedWith dbr:Television_show ; }
  OPTIONAL { ?commander dbo:associatedWith dbr:Societal_event . }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?commander WHERE {
  # Military force for the event involving William Bayne and Battle of Cape Finisterre (1805)
  OPTIONAL {
    ?event dbo:militaryForce ?militaryForce1 .
    FILTER (
      EXISTS { ?event dbr:William_Bayne dbo:participatedIn . } ||
      EXISTS { ?event dbr:Battle_of_Cape_Finisterre_1805 dbo:militaryForce . }
    )
  }

  # Military force for the French campaign in Egypt and Syria
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria dbo:militaryForce ?militaryForce2 .
  }

  # Commander of the French campaign in Egypt and Syria
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
  }
}
```",5,7,6,3,3,3,3,71,1,47,0,0.020833333333333332,1.0,0.04081632653061225
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolderRole ?militaryConflict WHERE {
  VALUES ?manuelPintoDaCosta { dbr:Manuel_Pinto_da_Costa }
  
  ?manuelPintoDaCosta dbo:officeHolder ?officeHolderRole .
  FILTER EXISTS { ?officeHolderRole a dbo:Office . }
  FILTER EXISTS { ?officeHolderRole dbo:location dbr:Madrid . }

  OPTIONAL {
    ?militaryConflict dbo:commander ?manuelPintoDaCosta .
    FILTER (?militaryConflict a dbo:MilitaryConflict)
    FILTER EXISTS { ?militaryConflict dbo:societalEvent ?societalEvent }
  }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerOfCoraWork ?producerOfHSB ?actorOfHSB WHERE {
  # Cora Sue Collins' notable work and its producer
  OPTIONAL {
    ?corasWork dbo:writer dbr:Cora_Sue_Collins .
    ?corasWork dbo:producer ?producerOfCoraWork .
  }

  # High Society Blues, its actor, and its producer
  ?highSocietyBlues a dbo:Film ;
                   dbo:title ""High Society Blues"" ;
                   dbo:actor ?actorOfHSB ;
                   dbo:producer ?producerOfHSB .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mudvayneBandMember ?associatedArtistBandMember WHERE {
  # Step 1: Find Nate Newton's associated musical artist
  dbr:Nate_Newton dbo:associatedMusicalArtist ?nateNewtonAssociatedArtist .

  # Step 2: Find the band members of Mudvayne
  VALUES ?mudvayneURL { dbr:Mudvayne }
  ?mudvayneBandMember dbo:bandMemberOf ?mudvayneURL .

  # Step 3: Find associated musical artists of Nate Newton's associated artist that are both bands and organizations
  ?nateNewtonAssociatedArtist dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (isLiteral(?associatedArtist) = false)
  ?associatedArtist a dbo:Band ;
                   a dbo:Organization .

  # Step 4: Find the band members of this associated artist
  ?associatedArtistBandMember dbo:bandMemberOf ?associatedArtist .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonChild WHERE {
  # Find children of Alfonso VI
  ?alfonsoVIChild dbo:childOf dbr:Alfonso_VI_of_León_and_Castile .
  
  # Find grandchildren of Alfonso VI (children of his children)
  ?grandchild dbo:childOf ?alfonsoVIChild .

  # Find children of Roger II
  ?rogerIIChild dbo:childOf dbr:Roger_II_of_Sicily .

  # Check if any grandchild of Alfonso VI is also a child of Roger II
  FILTER (?grandchild = ?rogerIIChild)
  
  BIND(?grandchild AS ?commonChild)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?albumActor WHERE {
  # Find the alter ego in ""The Golden Master"" series
  ?series rdfs:label ""The Golden Master""@en .
  ?character dbo:roleInSeries ?series ;
             dbo:alias ?alterEgo .

  # Find the album of the song ""What You Know""
  ?song dbo:title ""What You Know""@en ;
        dbo:album ?album .
  
  # Find actors associated with this album
  ?album dbo:performer ?actor .
  
  # Check if the alter ego is also an actor in the album
  FILTER (?alterEgo = ?actor)
}
```",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfRenee ?royalGrandparent WHERE {
  # Step 1: Identify Renée of Bourbon and her spouse
  dbr:Renée_of_Bourbon dbo:spouse ?spouseOfRenee .

  # Step 2: Identify the father of Francis I, Duke of Lorraine
  dbr:Francis_I,_Duke_of_Lorraine dbo:father ?fatherOfFrancisI .

  # Step 3: Check if the father's parent is royalty
  ?fatherOfFrancisI dbo:parent ?royalGrandparent .
  
  # Optional: Ensure the grandparent is a member of royalty (if such a property exists)
  OPTIONAL { ?royalGrandparent rdf:type dbo:Monarch . }

  # Step 4: Connect Renée's spouse with the royal grandparent
  FILTER (?spouseOfRenee = ?royalGrandparent)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Nothing_to_Gein dbo:producer ?producer .
  
  FILTER EXISTS { ?producer rdf:type dbo:Organization . }
  FILTER EXISTS { ?producer rdf:type dbo:Band . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?film { dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg }
  
  # Find actors in the film
  ?film dbo:starring ?actor .
  
  # Find parents of Doon Arbus and Amy Arbus
  OPTIONAL { dbr:Doon_Arbus dbo:parent ?actor . }
  OPTIONAL { dbr:Amy_Arbus dbo:parent ?actor . }

  FILTER EXISTS { dbr:Doon_Arbus dbo:parent ?actor . }
  FILTER EXISTS { dbr:Amy_Arbus dbo:parent ?actor . }
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Jamsetji_Tata dbo:founded ?work .
  OPTIONAL { ?work dbo:country dbr:India . }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfJudgment ?parentOfChild ?parentOfPhotographer WHERE {
  # Step 1: Find the actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  VALUES ?judgmentFilm { dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg }
  ?judgmentFilm dbo:actor ?actorOfJudgment .

  # Step 2: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?mariclareSpouse .

  # Step 3: Identify the child of Mariclare Costello's spouse
  ?mariclareSpouse dbo:child ?childOfSpouse .

  # Step 4: Determine the parent of this child (other than Mariclare Costello)
  OPTIONAL {
    ?parentOfChild dbo:child ?childOfSpouse .
    FILTER(?parentOfChild != dbr:Mariclare_Costello)
  }

  # Step 5: Find a professional in Photography
  ?photographer rdf:type dbo:Photographer .

  # Step 6: Identify the parent of this photographer
  OPTIONAL {
    ?parentOfPhotographer dbo:child ?photographer .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?ceceBellBirthPlace WHERE {
  # Find Paulus Powell's birthplace
  ?paulusPowell dbo:birthPlace ?powellBirthPlace .
  
  # Determine the region and its governor
  ?powellBirthPlace dbo:region ?region .
  ?region dbo:governor ?governor .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Find Cece Bell as an American author of ""El Deafo""
  dbr:El_Deafo dbo:author ?ceceBell .
  ?ceceBell rdf:type dbo:American .
  
  # Retrieve her birthplace
  ?ceceBell dbo:birthPlace ?ceceBellBirthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?artist WHERE {
  VALUES ?song { dbr:What_You_Know_(T.I._song) }
  
  ?song dbo:fromAlbum ?album .
  ?album dbo:artist ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:A_Picture_of_Britain dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBandMember WHERE {
  # Find the producer of Nothing to Gein who is an organization and a group
  ?producer dbo:produced dbr:Nothing_to_Gein .
  FILTER (CONTAINS(LCASE(STR(?producer)), ""organization"") && CONTAINS(LCASE(STR(?producer)), ""group"")) .

  # Find band members of this producer
  ?producer dbo:bandMember ?commonBandMember .

  # Find the associated musical artist of Cavalera Conspiracy that is an organization
  dbr:Cavalera_Conspiracy dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (CONTAINS(LCASE(STR(?associatedArtist)), ""organization"")) .

  # Find band members of this associated artist
  ?associatedArtist dbo:bandMember ?commonBandMember .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  VALUES ?club { 
    dbr:VfL_Bochum 
  }
  
  ?club a dbo:SoccerClub ;
        a dbo:SportsTeam ;
        a dbo:Organization .

  OPTIONAL {
    ?season dbo:team ?club .
    ?season dbo:manager ?manager .
    FILTER (STRSTARTS(STR(?season), ""2007–08 VfL Bochum season""))
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelMauraPartyLeaderOffice ?marianoRajoyPartyLeaderOffice WHERE {
  # Find Miguel Maura's political party and its leader's office
  {
    dbr:Miguel_Maura dbo:member ?miguelMauraParty .
    ?miguelMauraParty dbo:leader ?miguelMauraPartyLeader .
    ?miguelMauraPartyLeader dbo:office ?miguelMauraPartyLeaderOffice .
  }
  
  # Find Mariano Rajoy's political party and its leader's office
  {
    dbr:Mariano_Rajoy dbo:member ?marianoRajoyParty .
    ?marianoRajoyParty dbo:leader ?marianoRajoyPartyLeader .
    ?marianoRajoyPartyLeader dbo:office ?marianoRajoyPartyLeaderOffice .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Vince_Gilligan dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration WHERE {
  # Find Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .
  
  # Find the administration he is part of
  ?office dbo:partOf ?administration .

  # Ensure the administration has a connection to PSOE
  ?administration dbo:minister ?minister .
  ?minister dbo:party dbr:Spanish_Socialist_Workers'_Party .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reignStart ?reignEnd WHERE {
  dbr:Christian_IX_of_Denmark dbo:reign ?reign .
  ?reign dbo:startYear ?reignStart ;
         dbo:endYear ?reignEnd .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?producedMovie WHERE {
  dbr:Linda_Bruckheimer dbo:spouse ?spouse .
  dbr:Linda_Bruckheimer dbo:produced ?producedMovie .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeSettlement WHERE {
  VALUES ?choir { 
    dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico 
  }
  
  ?choir dbo:award ?award .
  
  ?award dbo:nativeCountry ?country .
  FILTER (strstarts(str(?country), ""United States"")).
  
  ?award dbo:location ?nativeSettlement .
  FILTER EXISTS { ?nativeSettlement a dbo:Settlement . }
}
```",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maryParent ?patrickParent WHERE {
  VALUES (?person ?parent) { 
    (dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?maryParent)
    (dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?patrickParent)
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Eric_Clapperton dbo:bandMemberOrAssociatedBand ?band .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  VALUES ?eleonoraMenicucci { dbr:Eleonora_Menicucci }
  ?eleonoraMenicucci rdf:type dbo:Politician .
  ?eleonoraMenicucci dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,2,20,0,1,1,0.0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Marcelo_Sarmiento dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Doon_Arbus dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor ?artist WHERE {
  VALUES ?greatTurkishWar { dbr:The_Great_Turkish_War }
  
  # Michał Kazimierz Pac as a commander
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commandedMilitaryForce ?force .
  ?force dbo:partOfEvent ?greatTurkishWar .

  # Successor who is a politician and office holder in the military force
  OPTIONAL {
    ?successor dbo:succeededBy dbr:Micha%C5%82_Kazimierz_Pac ;
               dbo:officeHolderInMilitaryForce ?force ;
               dbo:politicalRole ?role .
  }

  # Writer of ""Always the Love Songs""
  VALUES ?artist { 
    dbr:Artist_of_Always_the_Love_Songs
  }
  
  FILTER (?successor != dbr:Micha%C5%82_Kazimierz_Pac)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?japanEntity WHERE {
  # Retrieve Chieko Asakawa's birthplace
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .
  
  # Identify an entity in Japan (e.g., Tokyo)
  VALUES ?japanEntity { 
    dbr:Tokyo
  }
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?cvoParent ?edwardStanleyParent WHERE {
  # Find the parent of the Commander of the Royal Victorian Order
  OPTIONAL {
    dbr:Commander_of_the_Royal_Victorian_Order dbo:wikiPageRedirects ?cvoResource .
    ?cvoResource dbo:parentOrganization ?cvoParent .
  }
  
  # Find the parent of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parentOrganisationOrPerson ?edwardStanleyParent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:child ?personA .
  
  # Person A's child who is royalty and parent of Charles I's father
  ?personA dbo:child ?childOfChild .
  ?childOfChild rdf:type dbo:Monarch .

  # Charles I of Hungary's father (Person B)
  dbr:Charles_I_of_Hungary dbo:father ?charlesIFather .
  
  # Person A's child is parent to Charles I's father
  ?childOfChild dbo:parent ?charlesIFather .

  # Spouse of Charles II of Naples
  ?childOfChild dbo:spouse dbr:Charles_II_of_Naples .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies or TV shows featuring Richard E. Grant
  ?work dbo:starring dbr:Richard_E._Grant .
  
  # Ensure the work is a television show
  ?work rdf:type dbo:TelevisionSeries .

  # Find works related to The Shadow's alter ego, Lamont Cranston
  ?shadowWork dbo:character dbr:Lamont_Cranston ;
              rdf:type dbo:Film ; # Assuming it's a film or TV series

  # Ensure the work is the same as Richard E. Grant's work
  FILTER (?work = ?shadowWork)

  # Find other actors in this television show
  ?work dbo:starring ?actor .
  
  # Exclude Richard E. Grant from the results to get other actors
  FILTER (?actor != dbr:Richard_E._Grant)
}
```",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Find the birth place of Cece Bell, author of El Deafo
  OPTIONAL {
    dbr:Cecily_Ann_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
  
  # Find the birth place of Vince Gilligan, awardee in List of awards and nominations received by Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",5,6,6,3,2,3,3,71,1,0,0,1.0,1.0,1.0
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child ?father WHERE {
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  ?child dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonActor WHERE {
  # Find the author of ""Smartbomb""
  VALUES ?smartbombAuthor { 
    ?authorResource
  }
  dbr:Smartbomb dbo:author ?authorResource .
  
  # Find an actor from ""ATL""
  VALUES ?atlActor { 
    ?actorResource
  }
  dbr:ATL dbo:starring ?actorResource .

  # Find a movie where the author of ""Smartbomb"" is also an actor and includes the actor from ""ATL""
  ?movie dbo:starring ?commonActor .
  
  FILTER (?commonActor IN(?authorResource, ?actorResource))
}
```",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowRealName ?singerProfessionalName WHERE {
  # Find the real name associated with The Shadow alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?shadowRealName .
  }
  
  # Find a professional singer's real name
  OPTIONAL {
    ?singer dbo:birthName ?singerProfessionalName .
    FILTER(CONTAINS(LCASE(?singer), ""singer""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?tishaSterling dbo:parent ?parent .
  FILTER (str(?tishaSterling) = ""Tisha_Sterling"") .

  ?parent dbo:birthName ?birthName ;
          dbo:partyAffiliation dbr:Republican_Party_(United_States) ;
          dbo:spouse ?rogerPryor .

  FILTER (str(?rogerPryor) = ""Roger_Pryor_(actor)"") .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  dbr:Japan dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's child
  OPTIONAL { 
    dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .
  }
  
  # Victor Stanley's child who is a politician
  OPTIONAL {
    dbr:Victor_Stanley_(Royal_Navy_officer) dbo:child ?victorChild .
    ?victorChild rdf:type dbo:Politician .
  }

  # Eton College alumnus parent of the politician
  OPTIONAL {
    ?etonAlumnus dbo:almaMater dbr:Eton_College .
    ?etonAlumnus dbo:parent ?politicianParent .
    FILTER (?politicianParent = ?victorChild)
  }

  # The father of the politician
  OPTIONAL {
    ?politicianParent dbo:father ?father .
  }
  
  # Ensure all conditions are met
  FILTER(?frederickChild = ?victorChild && ?etonAlumnus != """")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfParent WHERE {
  VALUES ?dorothea { 
    dbr:Dorothea_of_Denmark,_Electress_Palatine 
  }
  
  OPTIONAL {
    ?dorothea dbo:parent ?parent .
    
    OPTIONAL {
      ?parent dbo:father ?fatherOfParent .
    }
  }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vitesseManager ?bochumManager WHERE {
  VALUES ?vitesseResource { dbr:SBV_Vitesse }
  VALUES ?bochumResource { dbr:VfL_Bochum }

  OPTIONAL {
    ?vitesseResource dbo:manager ?vitesseManager .
    FILTER EXISTS { 
      ?vitesseManager dbo:managedTeam ?vitesseResource ;
                     dbo:managementEndYear ""2021""^^xsd:gYear .
    }
  }

  OPTIONAL {
    ?bochumResource dbo:manager ?bochumManager .
    FILTER EXISTS { 
      ?bochumManager dbo:managedTeam ?bochumResource ;
                      dbo:managementStartYear ""2007""^^xsd:gYear ;
                      dbo:managementEndYear ""2008""^^xsd:gYear .
    }
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reignStart ?reignEnd ?predecessor ?successor WHERE {
  VALUES ?olafI { dbr:Olaf_I_of_Denmark }
  OPTIONAL {
    ?olafI dbo:reign ?reign .
    ?reign dbo:startYear ?reignStart ;
          dbo:endYear ?reignEnd .
  }
  OPTIONAL {
    ?olafI dbo:predecessor ?predecessor .
  }
  OPTIONAL {
    ?olafI dbo:successor ?successor .
  }
}
```",1,1,2,1,1,2,3,28,0,2,1,0.0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Florida""@en .
  FILTER NOT EXISTS { ?place rdfs:subClassOf* dbo:AdministrativeRegion }
  OPTIONAL { ?person dbo:musicalArtist ?artistRole . }
  FILTER (?artistRole != NULL)
}
```",3,4,4,3,1,3,3,71,0,0,59,0,0.0,0
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName ?works WHERE {
  # Find Hu Jieqing's resource and their spouse
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing"" ;
             dbo:spouse ?spouse .
  
  # Ensure the spouse is identified as a writer
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""writer""))

  # Get the name of the spouse for clarity in results
  ?spouse foaf:name ?spouseName .

  # Find works associated with this spouse
  OPTIONAL {
    ?spouse dbo:work ?works .
  }
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find the award associated with Rodney Lees
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Identify the awardee of this award
  ?award dbo:recipient ?awardee .

  # Find the parent who is a politician and father of an Eton alumnus
  ?awardee dbo:parent ?parent .
  ?child dbo:father ?parent .
  ?child dbo:almaMater dbr:Eton_College .
  
  # Ensure the parent is a politician
  ?parent rdf:type dbo:Politician .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChildRoyalty WHERE {
  # Step 1: Find Archduchess Margarete Sophie of Austria's parent
  ?parent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Step 2: Find the child of this parent who is a royalty
  ?parentChild dbo:parent ?parent ;
              a dbo:RoyalFamilyMember .

  # Step 3: Identify Duke Philipp of Württemberg's grandchild
  ?grandparent dbr:Duke_Philipp_of_W%C3%BCrttemberg ;
               dbo:child ?philippChild .
  ?philippGrandchild dbo:parent ?philippChild .

  # Step 4: Find the child of this grandchild
  ?childOfPhilippGrandchild dbo:parent ?philippGrandchild .

  # Final step: Ensure the child from step 2 is the same as the child from step 4
  FILTER (?parentChild = ?childOfPhilippGrandchild)
  
  BIND(?parentChild AS ?childOfChildRoyalty)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?rogerIII dbo:father ?father .
  FILTER(STR(?rogerIII) = ""Roger_III,_Duke_of_Apulia"")
  
  ?father dbo:child ?grandchild .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?regiment { 
    dbr:30th_(Cambridgeshire)_Regiment_of_Foot 
  }
  ?regiment dbo:participatedIn ?war .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  VALUES ?dispatchesFromElsewhere { 
    dbr:Dispatches_from_Elsewhere_(TV_series) 
  }
  
  ?dispatchesFromElsewhere dbo:starring ?actor .
  
  # Get Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .

  # Find actors with the same profession as Shatrughan Sinha
  ?actor dbo:profession ?profession .
  
  FILTER (?profession = ?sinhaProfession)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reedHowesDeathPlace ?aladdinActorName ?aladdinActorDeathPlace WHERE {
  # Find the death place of Reed Howes
  OPTIONAL {
    dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace .
  }
  
  # Identify the actor who played Aladdin in the 1958 film and their death place
  OPTIONAL {
    dbr:The_Story_of_Aladdin dbo:actor ?aladdinActorResource .
    ?aladdinActorResource rdfs:label ?aladdenActorName .
    FILTER(CONTAINS(LCASE(?aladdenActorName), ""aladdin""))
    OPTIONAL { 
      ?aladdinActorResource dbo:deathPlace ?aladdinActorDeathPlace .
    }
  }
}
```",3,3,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorURL ?predecessorLabel WHERE {
  VALUES ?stephenVURL { 
    dbr:Stephen_V_of_Hungary 
  }
  ?stephenVURL dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ?predecessorLabel .
  FILTER (lang(?predecessorLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shelbyOaksURL ?occupation WHERE {
  VALUES ?shelbyOaksURL { 
    dbr:Shelby_Oaks 
  }
  ?shelbyOaksURL dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(str(?occupation)), ""actor"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?fabulousThunderbirdsRealName WHERE {
  # Find Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  
  # Confirm The Fabulous Thunderbirds' real name and its association with Kim Wilson
  OPTIONAL {
    ?band a dbo:Band ;
          rdfs:label ""The Fabulous Thunderbirds""@en ;
          dbo:member dbr:Kim_Wilson .
    ?band rdfs:label ?fabulousThunderbirdsRealName .
  }
  
  # Ensure the associated artist is The Fabulous Thunderbirds
  FILTER (?nickCurranAssociatedArtist = ?band)
}
```",5,6,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Identify Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  
  # Find the child of that child (Béla IV's grandchild)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is a member of royalty
  ?grandchild dbo:royalTitle ?title .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?leader WHERE {
  dbr:Anxo_Quintana dbo:member ?administration .
  ?administration a dbo:Government ;
                  dbo:headOfGovernment ?leader .
}
```",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentProfession WHERE {
  VALUES ?eugeneCattin { dbr:Eugène_Cattin }
  
  # Find Eugène Cattin's occupation
  ?eugeneCattin dbo:occupation ?profession .
  
  # Ensure he is an actor in the specified film
  OPTIONAL {
    ?film dbr:""Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg"" ;
          dbo:actor ?eugeneCattin .
  }
  
  # Find the parent profession of his occupation
  ?profession rdfs:subClassOf+ ?parentProfession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country WHERE {
  # Office of Alberto Núñez Feijóo
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .
  
  # Country where Álvaro Quirós resides
  dbr:Álvaro_Quirós dbo:nationality ?country .

  # Administration related to PSOE and is Spanish
  ?administration dbo:memberOfParliament dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .
  
  # Linking the country to the administration
  ?office dbo:country ?administration .
  FILTER (?country = ?administration)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  dbr:Victor_Stanley dbo:parent ?parent .
  ?parent rdf:type foaf:Person .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  VALUES ?ilizaShlesinger { dbr:Iliza_Schlesinger }
  VALUES ?audreyHepburn { dbr:Audrey_Hepburn }

  ?movie dbo:starring ?ilizaShlesinger .
  ?movie dbo:starring ?audreyHepburn .

  ?movie dbo:starring ?actor .
  FILTER (?actor != ?ilizaShlesinger && ?actor != ?audreyHepburn)
}
```",4,8,5,2,2,2,3,28,0,0,1,0,0.0,0
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  VALUES ?yeJia { 
    dbr:Ye_Jia_(sports_team)  # Assuming this is the correct resource for Ye Jia
  }
  ?yeJia dbo:member ?player .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Find the producer of ""Lotus (R.E.M. song)"" who is an organization, band, or group
  ?song dbo:producer ?producer .
  FILTER (?song = dbr:Lotus_(R.E.M._song))
  
  # Ensure the producer is an organization and also a band/group
  ?producer rdf:type ?type1 .
  VALUES ?type1 { dbo:Organization dbo:Band dbo:MusicalGroup }
  
  # Step 2: Find the associated musical artist of this producer
  ?producer dbo:associatedMusicalArtist ?firstAssociatedArtist .

  # Step 3: Find the associated musical artist of the first associated artist
  ?firstAssociatedArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
  
  # Ensure Mark Eitzel is a band member in any relevant connection
  OPTIONAL {
    ?bandMember dbo:bandMember dbr:Mark_Eitzel .
    FILTER (?producer = ?bandMember || ?firstAssociatedArtist = ?bandMember)
  }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shatrughanSinhaProfession ?shadowAlterEgo ?dispatchesFromElsewhereActor WHERE {
  VALUES ?shatrughanSinha { dbr:Shatrughan_Sinha }
  VALUES ?theShadowVideoGame { dbr:The_Shadow_(video_game) }
  VALUES ?dispatchesFromElsewhere { dbr:Dispatches_from_Elsewhere }

  # Find Shatrughan Sinha's profession
  ?shatrughanSinha dbo:profession ?shatrughanSinhaProfession .

  # Find the alter ego of The Shadow video game character
  OPTIONAL {
    ?theShadowVideoGame dbo:alterEgo ?shadowAlterEgo .
  }

  # Find the actor of Dispatches from Elsewhere
  OPTIONAL {
    ?dispatchesFromElsewhere dbo:actor ?dispatchesFromElsewhereActor .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfKateDimbleby ?authorOfAPictureOfBritain WHERE {
  # Find Kate Dimbleby's parent
  OPTIONAL { 
    dbr:Kate_Dimbleby dbo:parent ?parentOfKateDimbleby .
  }
  
  # Find the author of ""A Picture of Britain""
  OPTIONAL {
    dbr:A_Picture_of_Britain dbo:author ?authorOfAPictureOfBritain .
  }

  FILTER (?parentOfKateDimbleby = ?authorOfAPictureOfBritain)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedMusicalArtist WHERE {
  VALUES ?cynthiaMorgan { dbr:Cynthia_Morgan_(singer) }
  
  ?cynthiaMorgan dbo:birthName ?birthName .
  
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person dbo:associatedMusicalArtist ?associatedMusicalArtist .
  }
}
```",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:wikiPageWikiLink ?commander .
  FILTER(CONTAINS(LCASE(STR(?war)), ""russo-polish war (1654–1667)""))
  
  ?commander a dbo:MilitaryPerson ;
            dbo:officeHolderOf ?office .
  
  OPTIONAL { 
    ?commander dbo:politicalPartyMemberOf ?party .
  }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?book WHERE {
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  OPTIONAL { 
    ?book dbo:title ""Back to Work"" ;
          dbo:author ?spouse .
  }
  FILTER EXISTS { ?book . } # Ensures that the book exists
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedentName WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?decedentName .
  ?person dbo:deathPlace dbr:Switzerland .
}
```",1,1,2,1,1,2,3,28,0,0,906,0,0.0,0
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Dipankar_De .
  ?movie dbo:country dbr:India .
}
```",1,3,2,1,1,3,2,20,3,1,0,0.75,1.0,0.8571428571428571
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfLeader ?tenantResidence WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?partyLeader a dbo:PoliticalParty ;
               dbo:leader ?conservativeLeader .
  
  FILTER(STRSTARTS(STR(?partyLeader), ""http://dbpedia.org/resource/Conservative_Party_(Spain)""))

  # Find office held by this leader
  ?conservativeLeader dbo:office ?officeOfLeader .

  # Find leaders from the 2003 Madrid City Council election
  ?councilElection a dbo:Election ;
                   dbo:electedOfficeHolder ?tenantResidence .
  
  FILTER(STRSTARTS(STR(?councilElection), ""http://dbpedia.org/resource/2003_Madrid_City_Council_election""))

  # Match the leader of the Conservative Republican Party with an office holder from the election
  FILTER (?conservativeLeader = ?tenantResidence)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Identify the producer of ""Lotus (R.E.M. song)""
  VALUES ?lotusSong { dbr:Lotus_(R.E.M._song) }
  
  OPTIONAL {
    ?lotusSong dbo:producer ?producer .
    
    # Ensure the producer is an organization and a band/group
    FILTER EXISTS { ?producer rdf:type dbo:Organization . }
    FILTER EXISTS { ?producer rdf:type dbo:Band . }
    
    # Step 2: Find associated musical artist of the producer
    OPTIONAL {
      ?producer dbo:associatedMusicalArtist ?firstAssociatedArtist .
      
      # Ensure it is an artist
      FILTER EXISTS { ?firstAssociatedArtist rdf:type dbo:MusicArtist . }
      
      # Step 3: Find associated musical artist of this first associated artist
      OPTIONAL {
        ?firstAssociatedArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
        
        # Ensure it is an artist
        FILTER EXISTS { ?finalAssociatedArtist rdf:type dbo:MusicArtist . }
      }
    }
  }
}
```",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?elDeafoAuthorBirthPlace ?vinceGilliganAwardeeBirthPlace ?virginiaGovernorBirthPlace WHERE {
  # Birth place of the author of ""El Deafo""
  dbr:Briana_Delaney dbo:birthPlace ?elDeafoAuthorBirthPlace .
  
  # Assuming we are looking for a specific award, e.g., Emmy Award
  OPTIONAL {
    ?award dbr:Vince_Gilligan dbo:recipient ?vinceGilliganAwardee .
    ?vinceGilliganAwardee dbo:birthPlace ?vinceGilliganAwardeeBirthPlace .
  }
  
  # Birth place of the current governor of Virginia
  ?governor a dbo:Governor ;
           dbo:state dbr:Virginia ;
           dbo:birthPlace ?virginiaGovernorBirthPlace .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Edmund_Hakewill-Smith dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  VALUES ?januszKaminski { dbr:Janusz_Kamiński }
  
  ?award dbo:recipient ?januszKaminski .
  OPTIONAL {
    ?januszKaminski dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?photographer WHERE {
  ?photographer rdf:type dbo:Photographer .
}
```",1,1,2,1,1,3,3,71,31,523,906,0.05595667870036101,0.033084311632870865,0.04158283031522468
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Get Marty Pollio's birthdate
  dbr:Marty_Polloi dbo:birthday ?martyBirthDate .

  # Get Pablo Aimar's team
  dbr:Pablo_Aimar dbo:team ?aimarTeam .

  # Get Sergio Agüero's team
  dbr:Sergio_Agüero dbo:team ?agueroTeam .

  # Find a player born on Marty Pollio's birthday and played for both teams
  ?player dbo:birthday ?birthDate .
  ?player dbo:team ?aimarTeam .
  ?player dbo:team ?agueroTeam .
  
  FILTER (?birthDate = ?martyBirthDate)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfAmyArbus ?childOfAllanArbus ?movieWork ?decedentAtLA WHERE {
  # Parent of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?parentOfAmyArbus .
  }
  
  # Child of Allan Arbus and actor of a movie that is a work
  OPTIONAL {
    dbr:Allan_Arbus dbo:child ?childOfAllanArbus .
    ?childOfAllanArbus dbo:actor ?movieWork .
    ?movieWork rdf:type dbo:Film .
  }
  
  # Person decedent at Los Angeles
  OPTIONAL {
    ?decedentAtLA dbo:placeOfBirth dbr:Los_Angeles .
    ?decedentAtLA dbo:dateOfDeath ?dateOfDeath .
    FILTER EXISTS { ?decedentAtLA dbo:dateOfDeath ?dateOfDeath }
  }

  # Linking the parent of Amy Arbus with the child of Allan Arbus who acted in a movie
  OPTIONAL {
    FILTER (?parentOfAmyArbus = ?childOfAllanArbus)
  }

  # Linking any of these to a decedent at Los Angeles
  OPTIONAL {
    FILTER (?decedentAtLA = ?parentOfAmyArbus || ?decedentAtLA = ?childOfAllanArbus)
  }
}
```",6,7,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist WHERE {
  dbr:Nicholas_Michael_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  FILTER (?nickCurranAssociatedArtist = dbr:The_Fabulous_Thunderbirds)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?office WHERE {
  VALUES ?marianoRajoy { dbr:Mariano_Rajoy }
  
  ?marianoRajoy dbo:memberOf ?party .
  ?marianoRajoy dbo:positionHeld ?office .

  FILTER (strstarts(str(?office), ""Prime Minister of Spain""))
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Cynthia_Morgan dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardName ?awardee WHERE {
  ?award dbo:location dbr:New_York_(state) .
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ?awardName .
  FILTER (lang(?awardName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tisha Sterling's parent
  ?tishaSterling dbo:parent ?parent .
  
  # Get the birth name of the parent
  ?parent foaf:name ?birthName .

  # Identify the landmark with the specified elevation
  ?landmark geo:elevation ""20.116800000000001347""^^xsd:float ;
            dbp:rulingParty ?rulingParty .

  # Ensure the parent is a member of this ruling party
  ?parent dbp:partyMemberOf ?rulingParty .
  
  # Bind the person to the parent with the birth name
  BIND(?parent AS ?person)
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?propertyLabel WHERE {
  VALUES ?ottomanEmpire { dbr:Ottoman_Empire }
  ?ottomanEmpire ?property ?entity .
  OPTIONAL { ?property rdfs:label ?propertyLabel FILTER (lang(?propertyLabel) = 'en') . }
}
```",1,1,2,1,1,2,2,9,4,1249,243,0.0031923383878691143,0.016194331983805668,0.005333333333333333
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?actorName WHERE {
  # Find movies Afeez Oyetoro acted in
  VALUES ?afeezOyetoro { dbr:Afeez_Oyetoro }
  
  ?movie dbo:starring ?afeezOyetoro .
  
  # Check if the movie is originally a show or series
  OPTIONAL {
    ?show dbo:adaptation ?movie .
  }

  # Find Cynthia Morgan's associated musical artist
  VALUES ?cynthiaMorgan { dbr:Cynthia_Morgan }
  ?cynthiaMorgan dbo:associatedMusicalArtist ?artist .

  # Ensure the movie is linked to both Afeez Oyetoro and a show adaptation
  FILTER EXISTS {
    ?show dbo:adaptation ?movie .
  }

  # Get actors of the identified movie
  ?movie dbo:actor ?actor .
  
  # Bind actor names
  ?actor rdfs:label ?actorName .

  # Filter to ensure we get only relevant results
  FILTER (lang(?actorName) = 'en')
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author dbo:title ""An Invitation to the White House""@en .
  ?author dbo:occupation dbo:Commander .
  ?author dbo:commandedDuring dbr:Third_Taiwan_Strait_Crisis .

  OPTIONAL {
    ?author dbo:spouse ?spouse .
    ?spouse a dbo:Politician ;
            dbo:officeHolder true .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:actor ?actor .

  # Parent of Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
  ?parentOfEugeneProfession dbo:parent ?eugeneProfession .

  # Parent of Allan Arbus' child
  OPTIONAL {
    ?allanArbusChild dbo:childOf dbr:Allan_Arbus .
    ?parentOfAllanArbusChild dbo:parent ?allanArbusChild .
  }

  # Ensure the actor is connected to both conditions
  FILTER EXISTS { ?actor dbo:profession ?parentOfEugeneProfession }
  FILTER EXISTS { ?actor dbo:child ?parentOfAllanArbusChild }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandURL ?singerRole WHERE {
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  ?person a dbo:MusicalArtist .
  
  OPTIONAL { 
    ?person dbo:singerIn ?band .
    ?band rdfs:label ?bandLabel .
    FILTER (LANG(?bandLabel) = 'en')
    BIND(STR(?band) AS ?bandURL)
  }
  
  OPTIONAL {
    ?person dbo:musicalArtist ?singerRole .
    FILTER (?singerRole = ""Singer""@en)
  }
}
```",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the birthplace of Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nicholasBirthCountry .

  # Find the birthplace of Sandro Bertaggia
  dbr:Sandro_Bertaggia dbo:birthPlace ?sandroBirthCountry .

  # Find a person born in Nicholas II's native country and died in Sandro Bertaggia's birthplace
  ?person dbo:birthPlace ?nicholasBirthCountry .
  ?person dbo:deathPlace ?sandroBirthCountry .
}
```",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOffice WHERE {
  dbr:Conservative_Party_(Spain) dbo:leader ?leader .
  ?leader dbo:office ?leaderOffice .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorBirthPlace ?ebrahimAlkaziBirthPlace WHERE {
  # Find an Indian movie starring Dipankar De
  ?movie dbo:starring dbr:Dipankar_De ;
         dbo:country dbr:India .
  
  # Get the birthplace of the actor from this movie
  OPTIONAL { 
    ?actor dbo:starring ?movie ;
           dbo:birthPlace ?actorBirthPlace .
  }
  
  # Find Ebrahim Alkazi's birthplace
  dbr:Ebrahim_Alkazi dbo:birthPlace ?ebrahimAlkaziBirthPlace .
}
```",4,6,5,3,2,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?koichiroFullname ?war WHERE {
  # Find the full name of the person born as Koichirō
  ?person dbo:birthName ""Koichirō""@ja .
  ?person rdfs:label ?koichiroFullname .

  # Find the birthplace of Yamaza Enjirō
  dbr:Yamaza_Enjirō dbo:birthPlace ?yamazaBirthPlace .

  # Find wars involving Koichirō and occurring at Yamaza Enjirō's birthplace
  ?person dbo:participatedIn ?war .
  ?war dbo:location ?warLocation .
  
  FILTER (?warLocation = ?yamazaBirthPlace)
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Snoop_Dogg dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity a dbo:Organization .
  ?entity a dbo:SportsClub .
  ?entity a dbo:Team .
  ?entity dbo:sport dbr:Soccer .
  FILTER (str(?entity) = ""Hong Kong C"")
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  VALUES ?centralLouisiana { 
    dbr:Central,_Louisiana 
  }
  
  ?centralLouisiana dbo:governingParty ?rulingParty .
  
  ?rulingParty dbo:member ?partyMember .
}
```",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find the politician who resides in Chappaqua and was a commander in a war
  ?politician dbo:residence dbr:Chappaqua,_New_York ;
              (dbo:officeHolder|dbo:commanderOfMilitaryConflict) ?war .

  # Identify the owner of USS Arcadia (ID-1605)
  ?owner dbo:owns ?ship .
  FILTER (?ship = dbr:USS_Arcadia_(ID-1605))

  # Link these entities to find the author
  OPTIONAL {
    ?politician dbo:author ?author .
  }
  
  OPTIONAL {
    ?owner dbo:author ?author .
  }

  FILTER(?author != (dbpedia:))
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeEvent WHERE {
  ?anxoQuintana a dbo:Person ;
               foaf:name ""Anxo Quintana""@en ;
               dbo:nationality dbr:Spain .
  
  ?officeEvent dbo:leader ?anxoQuintana ;
               dbo:place dbr:Spain .

  FILTER EXISTS { ?anxoQuintana dbo:nationality dbr:Spain }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?glennYoungkinBirthPlace ?awardeeBirthPlace WHERE {
  # Query for Glenn Youngkin's birthplace
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
  
  # Assuming Vince Gilligan received a notable award, e.g., Emmy Award
  # We need to identify the specific resource for this award or nomination
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived dbr:Emmy_Award_for_Outstanding_Drama_Series .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
    FILTER (?awardee = dbr:Vince_Gilligan)
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?janetGaynorNotableWork ?producerTomSawyer ?commonProducer WHERE {
  # Find Janet Gaynor's notable work as an actor
  dbr:Janet_Gaynor dbo:actor ?janetGaynorNotableWork .
  
  # Find producers of ""The Adventures of Tom Sawyer (1938 film)""
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Optional clause to find common producer
  OPTIONAL {
    ?janetGaynorNotableWork dbo:producer ?commonProducer .
    FILTER (?commonProducer = ?producerTomSawyer)
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royBarrerasParty ?sofiaPetroFather ?sofiaPetroFathersParty WHERE {
  # Roy Barreras' political party in Colombia
  OPTIONAL { 
    dbr:Roy_Barreras dbo:party ?royBarrerasParty .
  }
  
  # Sofía Petro's father and his political party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?sofiaPetroFather .
  }
  OPTIONAL {
    ?sofiaPetroFather dbo:party ?sofiaPetroFathersParty .
  }
}
```",4,4,5,2,3,2,3,28,1,156411,0,6.393371352581643e-06,1.0,1.278666095529144e-05
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorOfPicture ?nativeArtist WHERE {
  # Find the author of ""A Picture of Britain""
  VALUES ?picture { dbr:A_Picture_of_Britain }
  ?picture dbo:author ?authorOfPicture .

  # Identify an artist who is also a musical artist and native to London
  ?artist dbo:nativePlace dbr:London .
  ?artist dbo:musicalArtist ?musicalArtist .
  
  # Ensure the artist is both an artist and a musical artist
  FILTER EXISTS { ?artist rdf:type dbo:Artist . }
  FILTER EXISTS { ?musicalArtist rdf:type dbo:MusicalArtist . }

  # Check if there's any parent relationship between the author and the artist
  OPTIONAL {
    ?authorOfPicture dbo:parent ?nativeArtist .
    FILTER (?nativeArtist = ?artist)
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?shadowRealName ?actorAlias WHERE {
  # Find the real name of ""The Shadow""
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
    ?shadowAlterEgo foaf:name ?shadowRealName .
  }
  
  # Find an actor with an alias
  OPTIONAL {
    ?actor a dbo:Actor ;
           foaf:name ?actorName ;
           dbo:alias ?actorAlias .
  }
}
```",3,3,4,2,2,3,3,71,0,232,4210,0.0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry WHERE {
  ?person dbo:nationality dbr:Spain .
  FILTER EXISTS { ?person dbo:country dbr:Spain . }
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?residenceCountry)
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobThompsonBand ?theShadowProfessional WHERE {
  # Find Bob Thompson's band
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbo:band ?bobThompsonBand .
  }
  
  # Find the professional identity of The Shadow
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?theShadowProfessional .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfCommander WHERE {
  # Ferdinand III's child
  ?childFerdinandIII dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Cecilia Renata of Austria and her father
  dbr:Cecilia_Renata_of_Austria dbo:parent ?fatherCeciliaRenata .
  
  # Ferdinand II is the father of Cecilia Renata
  FILTER(?fatherCeciliaRenata = dbr:Ferdinand_II,_Holy_Roman_Emperor)
  
  # Commander in the Thirty Years' War who is also a child of Ferdinand II
  ?commander dbo:parent ?fatherCeciliaRenata .
  ?commander dbo:militaryCommanderOf <http://dbpedia.org/resource/Thirty_Years%27_War> .

  # The father of this commander
  ?commander dbo:parent ?fatherOfCommander .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Identify the parent(s) of Archduchess Margarete Sophie
  ?parent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Find children of these parents who are royalty
  ?parent dbo:child ?royalChild .
  
  # Filter to ensure the child is a royalty (e.g., monarch)
  ?royalChild rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Find Na'od's father
  ?naod dbr:Na'od .
  ?naod dbo:childOf ?father .

  # Find the grandfather (father of Na'od's father)
  ?father dbo:childOf ?grandfather .

  # Check if the grandfather is a royalty or office holder
  OPTIONAL { ?grandfather dbo:royalTitle ?title . }
  OPTIONAL { ?grandfather dbo:officeHolder ?office . }

  FILTER (?title != '' || ?office != '')
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theShadowAlterEgo ?bobThompsonBand ?cokeStudioProducer WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?theShadowAlterEgo .

  # Bob Thompson's band
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:bandMember ?bobThompsonBand .
  }

  # Producer of Coke Studio Philippines
  OPTIONAL {
    dbr:Coke_Studio_Philippines dbo:producer ?cokeStudioProducer .
  }
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?lindaBruckheimer { dbr:Linda_Bruckheimer }
  
  ?lindaBruckheimer dbo:birthName ?birthName .
  OPTIONAL {
    ?lindaBruckheimer dbo:spouse ?spouse .
  }
}
```",3,3,4,3,1,3,2,20,1,0,0,1.0,1.0,1.0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?bayneConflict WHERE {
  # Query for military forces involved in the Battle of Cape Finisterre (1805)
  VALUES ?battleURL { 
    dbr:Battle_of_Cape_Finisterre_(1805) 
  }
  ?battleMilitaryForce dbo:participatedIn ?battleURL .

  # Query for a war or conflict associated with an event involving William Bayne
  OPTIONAL {
    ?bayneEvent dbo:agent dbr:William_Bayne .
    ?bayneConflict dbo:participatedIn ?bayneEvent .
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?santiagoTenant ?alvaroResidenceCountry ?feijooOffice WHERE {
  # Santiago de Compostela's tenant (mayor)
  dbr:Santiago_de_Compostela dbo:mayor ?santiagoTenant .
  
  # Álvaro Quirós' residence country
  dbr:Álvaro_Quirós dbo:residence ?alvaroResidence .
  ?alvaroResidence dbo:country ?alvaroResidenceCountry .

  # Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:officeHolder ?feijooOffice .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  ?child dbo:parent dbr:Saw_Min_Hla .
  ?child dbo:parent ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  VALUES ?yandamuriVeerendranathBirthplace { 
    dbr:Yandamuri_Veerendranath 
  }
  VALUES ?chennupatiJagadishAlmaMater { 
    dbr:Chennupati_Jagadish 
  }

  ?yandamuriVeerendranathBirthplace dbo:birthPlace ?entity .
  ?chennupatiJagadishAlmaMater dbo:almaMater ?entity .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vitesseManager ?bochumManager ?nativeCountry WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  VALUES ?vitesseTeam { dbr:SB_V_Vitesse }
  ?vitesseTeam dbo:manager ?vitesseManager .

  # Manager of VfL Bochum (assuming a similar timeframe)
  VALUES ?bochumTeam { dbr:VfL_Bochum }
  ?bochumTeam dbo:manager ?bochumManager .

  # Leader of West Germany and their native country
  VALUES ?leader { dbr:Konrad_Adenauer }
  ?leader dbo:nationality ?nativeCountry .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?establishmentURL ?almaMater WHERE {
  # Eleonora Menicucci's birth name
  dbr:Eleonora_Menicucci dbo:birthName ?birthName .
  
  # Establishment founded on December 2, 1955
  ?establishment dbo:foundingDate ""1955-12-02""^^xsd:date ;
                a dbo:Establishment ;
                foaf:name ?establishmentURL .

  # Eleonora Menicucci's alma mater
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonProducer WHERE {
  # Find the actor of ""Johnny Doughboy"" and their producer
  ?actor1 dbo:actedIn dbr:Johnny_Doughboy .
  ?work1 dbo:producer ?producer1 .
  ?actor1 dbo:actedIn ?work1 .

  # Find the actor of ""High Society Blues"" and their producer
  ?actor2 dbo:actedIn dbr:High_Society_Blues .
  ?work2 dbo:producer ?producer2 .
  ?actor2 dbo:actedIn ?work2 .

  # Check if there is a common producer
  FILTER (?producer1 = ?producer2)
  BIND(?producer1 AS ?commonProducer)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?athensConnection WHERE {
  VALUES ?konstantinosVentiris { 
    dbr:Konstantinos_Ventiris 
  }
  VALUES ?napoleonZervas { 
    dbr:Napoleon_Zervas 
  }
  VALUES ?athens { 
    dbr:Athens 
  }

  OPTIONAL {
    ?war dbo:participatedIn ?konstantinosVentiris .
    ?war dbo:participatedIn ?napoleonZervas .
  }

  OPTIONAL {
    ?war dbo:location ?athensConnection .
    FILTER (?athensConnection = ?athens)
  }
}
```",3,3,4,1,3,2,3,28,0,262,1,0.0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ericClaptonBand ?nickCurranAssociatedArtist WHERE {
  # Find the band associated with Eric Clapton
  dbr:Eric_Claptom dbo:bandMember ?ericClaptonBand .
  
  # Find the musical artist associated with Nick Curran
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
    FILTER (isMusicalArtist(?nickCurranAssociatedArtist))
  }
}

# Helper function to check if a resource is a musical artist
FILTER(isMusicalArtist(?nickCurranAssociatedArtist)) {
  ?nickCurranAssociatedArtist rdf:type dbo:MusicalArtist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander WHERE {
  VALUES ?georgeDucas { 
    dbr:George_Ducas 
  }
  
  ?work dbo:writer ?writer .
  FILTER (?writer = ?georgeDucas)
  
  ?war dbo:name ""Great Turkish War""@en .
  ?war dbo:commander ?commander .

  FILTER (?writer = ?commander)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseOfGrandparent WHERE {
  # Part 1: Philip, Despot of Romania's lineage
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  ?philip dbo:child ?parentOfPhilip .
  ?parentOfPhilip rdfs:label ?parentLabel .
  FILTER regex(?parentLabel, ""King|Queen"", ""i"") # Assuming royalty can be identified by title
  ?parentOfPhilip dbo:spouse ?grandparentOfPhilip .
  
  # Part 2: Maria of Bytom's lineage
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouseOfMaria .
  ?spouseOfMaria dbo:child ?fatherInLawOfMaria .
  ?fatherInLawOfMaria rdfs:label ?fatherInLawLabel .
  FILTER regex(?fatherInLawLabel, ""King|Queen"", ""i"") # Assuming royalty can be identified by title
  ?fatherInLawOfMaria dbo:spouse ?grandparentInLawOfMaria .

  # Linking the two parts
  ?grandparentOfPhilip = ?grandparentInLawOfMaria .
  ?grandparentOfPhilip dbo:spouse ?spouseOfGrandparent .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Little_Hat_Jones dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbp:Country .
  BIND(?birthPlace AS ?country)
}
```",2,3,3,2,1,2,2,9,0,0,63421,0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?catCountryCountry WHERE {
  dbr:Cat_Country_(novel) dbo:country ?catCountryCountry .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Linda Bruckheimer's birth name and role as producer of ""12 Strong""
  dbr:Linda_Bruckheimer dbo:birthName ?birthName .
  FILTER EXISTS { 
    ?movie dbo:producer dbr:Linda_Bruckheimer .
    ?movie rdfs:label ""12 Strong""@en
  }
  
  # Find Linda Bruckheimer's spouse
  OPTIONAL {
    dbr:Linda_Bruckheimer dbo:spouse ?spouse .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  VALUES ?amyArbus { dbr:Amy_Arbus }
  OPTIONAL { 
    ?amyArbus dbo:father ?parent .
  }
  UNION
  OPTIONAL { 
    ?amyArbus dbo:mother ?parent .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?administration WHERE {
  VALUES ?duchy { 
    dbr:Duchy_of_Schleswig 
  }
  
  OPTIONAL {
    ?duchy dbo:mayor ?mayor .
  }

  OPTIONAL {
    ?duchy dbo:administrativeUnit ?administration .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?tvShow ?societalEvent ?writer WHERE {
  OPTIONAL {
    # Assuming Jean Baptist, Comte d'Arco is a character in DBpedia
    dbr:Jean_Baptist_Comte_d'Arco dbo:role ?commanderRole .
    FILTER regex(?commanderRole, ""Commander"", ""i"") .

    # Find TV show or societal event related to the character
    OPTIONAL {
      ?tvShow dbo:character dbr:Jean_Baptist_Comte_d'Arco .
      ?societalEvent dbo:relatedEntity dbr:Jean_Baptist_Comte_d'Arco .
    }
  }

  # Find writer associated with George Ducas
  dbr:George_Ducas dbo:author ?writer .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?child .
  
  # The child must be a royalty
  ?child rdf:type dbo:Monarch .

  # Find the parent of this royal child
  ?child dbo:parent ?parent .

  # Ensure the parent is both royalty and noble
  ?parent rdf:type dbo:Monarch ;
          rdf:type dbo:Noble .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Identify Archduchess Helena of Austria and her spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .

  # Find the child of the spouse who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Identify the predecessor of this royal child
  ?royalChild dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royaltyChild WHERE {
  # Step 1: Find a child of Roger II and Elvira
  ?child dbo:parent dbr:Roger_II_of_Sicily .
  ?child dbo:parent dbr:Elvira_of_Castile,_Queen_of_Sicily .

  # Step 2: Find the parent of this child
  ?grandParent dbo:child ?child .

  # Step 3: Find a child of that grandParent who is royalty
  ?royaltyChild dbo:parent ?grandParent .
  FILTER EXISTS { ?royaltyChild rdf:type dbo:Monarch }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfPaperTrailAlbum ?lamontCranstonProfession WHERE {
  # Find the artist associated with T.I.'s album ""Paper Trail""
  OPTIONAL {
    dbr:Paper_Trail dbo:artist ?actorOfPaperTrailAlbum .
  }
  
  # Find the profession of Lamont Cranston under his alter ego ""The Shadow""
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston ;
                   dbo:profession ?lamontCranstonProfession .
  }
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Bobby_Shmurda dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?baedaMaryamIFather ?theShadowAlterEgo WHERE {
  # Query for Baeda Maryam I's father
  OPTIONAL {
    dbr:Baeda_Maryam_I dbo:father ?baedaMaryamIFather .
  }
  
  # Query for The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?theShadowAlterEgo .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty WHERE {
  # Find John McDermott's death place
  VALUES ?johnMcDermott { dbr:John_McDermott_(American_artist) }
  
  ?johnMcDermott dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the ruling party of that settlement
  ?deathPlace dbp:governingParty ?rulingParty .

  # Filter to ensure it's both a political party and an organization
  ?rulingParty rdf:type dbo:PoliticalParty .
  ?rulingParty rdf:type dbo:Organization .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?location WHERE {
  ?location a dbo:Settlement .
  OPTIONAL { 
    ?location dbo:country dbr:England .
  }
}
```",1,3,2,1,1,3,2,20,6,660464,0,9.084439868578437e-06,1.0,1.8168714684560833e-05
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?juanCarlosMolinaPlayerIn ?sergioAgüeroPlayerIn ?pabloAimarTeam WHERE {
  VALUES ?juanCarlosMolina { dbr:Juan_Carlos_Molina_(footballer) }
  VALUES ?sergioAgüero { dbr:Sergio_Agüero }
  VALUES ?pabloAimar { dbr:Pablo_Aimar }

  OPTIONAL {
    ?juanCarlosMolina dbo:playerIn ?juanCarlosMolinaPlayerIn .
  }
  
  OPTIONAL {
    ?sergioAgüero dbo:playerIn ?sergioAgüeroPlayerIn .
  }
  
  OPTIONAL {
    ?pabloAimar dbo:team ?pabloAimarTeam .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify John Cleese's DBpedia resource
  VALUES ?johnCleese { dbr:John_Cleese }
  
  # Find works that are both movies and TV shows
  ?work dbo:type/dbo:subClassOf* dbo:Film .
  ?work dbo:type/dbo:subClassOf* dbo:TelevisionSeries .

  # Identify actors in these works, including John Cleese
  ?work dbo:starring ?actor .
  
  FILTER (?actor = ?johnCleese)
  
  # Find Shatrughan Sinha's professional work and link it to the same works
  VALUES ?shatrughanSinha { dbr:Shatrughan_Sinha }
  OPTIONAL {
    ?work dbo:starring ?shatrughanSinha .
  }

}
```",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carolynJonesDeathPlace ?tonyMartinDeathPlace ?reedHowesDeathPlace WHERE {
  VALUES ?person ?deathPlaceVar {
    (dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace)
    (dbr:Tony_Martin_(actor) dbo:deathPlace ?tonyMartinDeathPlace)
    (dbr:Reed_Howes dbo:deathPlace ?reedHowesDeathPlace)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Frédéric_Bouraly dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get the birthdate of Marcelo Sarmiento
  VALUES ?marceloSarmientoBirthDate { 
    dbr:Marcelo_Sarmiento dbo:birthDate ?marceloSarmientoBirthDate .
  }
  
  # Find a person who is both a soccer player and manager with the same birthdate
  ?person dbo:SoccerPlayer true ;
          dbo:SoccerManager true ;
          dbo:birthDate ?birthdate .

  FILTER (?birthdate = ?marceloSarmientoBirthDate)
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hashibaHidekatsu ?battle WHERE {
  VALUES ?hashibaHidekatsu { 
    dbr:Hashiba_Hidekatsu 
  }
  OPTIONAL {
    ?hashibaHidekatsu dbo:associatedWith ?battle .
  }
}
```",1,1,2,1,1,2,3,28,0,1,5,0.0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?regionURL WHERE {
  ?eetResource dbo:timeZone ""Eastern European Time"" .
  ?eetResource dbp:region ?region .
  ?region a dbo:Settlement .
}
```",2,3,3,2,1,3,2,20,0,0,159,0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?personURL WHERE {
  ?person dbo:occupation dbr:Actress .
}
```",1,1,2,1,1,3,2,20,0,0,19241,0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Renée_of_Bourbon dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?parentOfChild WHERE {
  VALUES ?claude { dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne }
  
  # Find the child of Claude
  ?child dbo:parent ?claude .
  
  # Find the parent of this child (grandchild of Claude)
  ?child dbo:parent ?parentOfChild .
  
  # Optionally, retrieve the grandchild's resource for clarity
  OPTIONAL { ?child rdfs:label ?grandchild . FILTER(LANG(?grandchild) = ""en"") }
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workURL WHERE {
  VALUES ?author { dbr:Hillary_Clinton }
  
  ?work dbo:author ?author .
  ?work rdf:type dbo:Book .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Hillary_Clinton dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find Pacely's associated musical artists
  dbr:Pacely dbo:associatedMusicalArtist ?artist .

  # Identify the writer of ""The Live Anthology""
  OPTIONAL { 
    dbr:The_Live_Anthology dbo:writer ?writer .
  }

  # Ensure the artist is also a writer of ""The Live Anthology""
  FILTER (?artist = ?writer)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Yeshaq I's parent
  dbr:Yeshaq_I dbo:parent ?parent .
  
  # Find the child of that parent who is a royalty
  ?parent dbo:child ?child .
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }
  
  FILTER EXISTS { ?child dbo:royalTitle ?title } # Ensure the child has a royal title
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Emilia Yancheva Valeva""@en .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  # Find movies where Herschel Bernardi is an actor
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Identify Doon Arbus and Amy Arbus's parent
  ?doonArbus dbo:parent ?parent .
  ?amyArbus dbo:parent ?parent .

  FILTER (?doonArbus = dbr:Doon_Arbus && ?amyArbus = dbr:Amy_Arbus)

  # Check if the parent is a director or writer of the movie
  OPTIONAL { ?movie dbo:director ?parent . }
  OPTIONAL { ?movie dbo:writer ?parent . }

  # Get all actors in that movie
  ?movie dbo:starring ?actor .
}
```",4,5,5,2,3,3,3,71,1,84,0,0.011764705882352941,1.0,0.023255813953488372
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  dbr:What_You_Know_(T.I._song) dbo:album ?album .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maryParent ?patrickParent ?birthRegion ?birthCountry WHERE {
  # Find the parents of Mary Elphinstone, Lady Elphinstone
  OPTIONAL { 
    dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?maryParent .
  }
  
  # Find the parents of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  OPTIONAL {
    dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?patrickParent .
  }

  # Find the birthplace of William Gayner that is both a region and a country
  OPTIONAL {
    dbr:William_Gayner dbo:birthPlace ?birthRegion .
    ?birthRegion a dbo:Country ;
                rdfs:label ?birthCountryLabel .
    FILTER (CONTAINS(LCASE(?birthCountryLabel), ""region"") && CONTAINS(LCASE(?birthCountryLabel), ""country""))
  }
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  ?city dbo:country dbr:Japan .
}
```",1,1,2,1,1,3,2,20,8916,0,0,1.0,1.0,1.0
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warURL WHERE {
  VALUES ?personURL { 
    dbr:Toyotomi_Hidenaga 
    dbr:Toyotomi_Hideyori 
  }
  
  ?personURL dbo:participatedIn ?war .
  BIND(?war AS ?warURL)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:The_Battle_of_Vienna dbo:participatedIn ?battle .
  ?militaryForce dbo:participatedIn ?battle .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Rainer_Weiss dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?tracy dbo:participatedIn ?war .
  ?war dbo:location dbr:Charleston,_South_Carolina .
  FILTER(CONTAINS(LCASE(STR(?tracy)), ""amasa tracy""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Father of Arthur Stanley (politician)
  ?arthurStanley dbo:parent ?fatherOfArthur .
  FILTER(STRSTARTS(LCASE(?arthurStanley), ""arthur stanley""))

  # Parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley_17th_Earl_of_Derby dbo:parent ?parentOfEdward .
  ?childOfParent dbo:parent ?parentOfEdward .
  FILTER(dbo:politician(?childOfParent) && dbo:officeHolder(?childOfParent))

  # Find the common parent
  OPTIONAL { ?awardee dbo:parent ?commonParent . }
  OPTIONAL { ?fatherOfArthur dbo:parent ?commonParent . }
  OPTIONAL { ?childOfParent dbo:parent ?commonParent . }

  FILTER(?commonParent != dbr:NULL)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?writer WHERE {
  # Identify Apache Indian
  VALUES ?apacheIndian { dbr:Apache_Indian }
  
  # Find musical works associated with Apache Indian
  ?work dbo:artist ?apacheIndian .
  
  # Retrieve the writer of each work
  OPTIONAL { 
    ?work dbo:lyricist ?writer .
  }
}
```",2,3,3,2,1,3,2,20,0,1,1,0.0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?spouseName WHERE {
  # Find the work ""An Invitation to the White House"" authored by Bill Clinton
  ?work dbo:author dbr:Bill_Clinton .
  ?work rdfs:label ""An Invitation to the White House""@en .

  # Get the author of this work
  ?work dbo:author ?author .

  # Retrieve the name of the author
  ?author foaf:name ?authorName .

  # Find the spouse of the author who is also a politician and office holder
  ?author dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
  ?spouse dbo:officeHolder ?office .
  
  FILTER(LANG(?workLabel) = ""en"")
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shatrughanProfession ?actorName WHERE {
  # Get Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?shatrughanProfession .
  
  # Find television shows that are also movies with Richard E. Grant
  ?tvShow dbo:starring dbr:Richard_E._Grant ;
          a dbo:TelevisionSeries ;
          dbo:genre/dbo:subClassOf* dbo:Film .

  # Get actors from these TV shows/movies
  ?tvShow dbo:starring ?actor .
  
  # Check if any actor has the same profession as Shatrughan Sinha
  ?actor dbo:occupation ?actorProfession .
  FILTER (?shatrughanProfession = ?actorProfession)
  
  # Return the actor's name
  OPTIONAL { ?actor rdfs:label ?actorName . }
}
```",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Spouse's child
  OPTIONAL { 
    ?spouse dbo:child ?child .
    
    # Child's child (Grandchild)
    OPTIONAL {
      ?child dbo:child ?grandchild .
      
      # Check if grandchild is a royalty and also a child of Roger II of Sicily
      ?grandchild rdf:type dbo:Monarch .
      dbr:Roger_II_of_Sicily dbo:child ?grandchild .
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Gustavo_Petro dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Saw_Shwe_Khet dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .
  
  # Alberto Ruiz-Gallardón's residence tenant
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?albertoRuizGallardonResidence .
  ?tenant dbo:resident ?albertoRuizGallardonResidence .
  
  # Miguel Maura's political party leader office
  ?miguelMauraParty dbo:leader ?miguelMauraLeader .
  ?miguelMauraLeader a dbo:Politician .
  ?miguelMauraLeader dbo:office ?miguelMauraOffice .

  # Find common entity
  FILTER (?marianoRajoyOffice = ?tenant)
  FILTER (?tenant = ?miguelMauraOffice)
  
  BIND(?tenant AS ?commonEntity)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfSawMinHla ?spouseOfFather WHERE {
  VALUES ?sawMinHla { dbr:Saw_Min_Hla }
  VALUES ?myatHponePyo { dbr:Myat_Hpone_Pyo }

  ?childOfSawMinHla dbo:parent ?sawMinHla .
  
  ?father dbo:child ?myatHponePyo .
  ?spouseOfFather dbo:spouse ?father .

  FILTER (?childOfSawMinHla = ?spouseOfFather)
  FILTER EXISTS { ?spouseOfFather rdf:type dbo:Monarch }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samConcepcionProfession ?theShadowAlterEgoProfession WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samConcepcionProfession .
  
  # Find The Shadow's alter ego and its profession
  dbr:The_Shadow dbo:alterEgo ?theShadowAlterEgo .
  ?theShadowAlterEgo dbo:profession ?theShadowAlterEgoProfession .
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Isabella_of_Austria dbo:father ?father .
  ?father dbo:child dbr:Maximilian_I,_Holy_Roman_Emperor .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  VALUES ?alexanderURL { 
    dbr:Aleksandr_of_Württemberg 
  }
  
  ?alexanderURL dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowPortrayedBy ?bobThompsonSingerRole ?bobThompsonBand WHERE {
  # Query for the professional in the alter ego of The Shadow
  OPTIONAL {
    dbr:The_Shadow dbo:portrayedBy ?shadowPortrayedBy .
  }

  # Query for Bob Thompson's role as a singer and his band association
  OPTIONAL {
    dbr:Bob_Thompson_musical_artist dbo:singerRole ?bobThompsonSingerRole .
  }
  OPTIONAL {
    dbr:Bob_Thompson_musical_artist dbo:bandMember ?bobThompsonBand .
  }
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Edward Stanley, 17th Earl of Derby and his parent who is a politician
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  ?edwardStanley dbo:child ?politicianParent .
  ?politicianParent dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Find Frederick Stanley, 16th Earl of Derby and his child who is a politician
  VALUES ?frederickStanley { dbr:Fredrick_Stanley,_16th_Earl_of_Derby }
  ?frederickStanley dbo:child ?politicianChild .
  
  # Check if the politician parent of Edward Stanley is also the parent of Frederick's child who is a politician
  ?politicianChild dbo:parent ?parent .
  FILTER(?parent = ?politicianParent)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Aleksandr_Filimonov dbo:playsForTeam ?team .
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Children of Saw Shwe Khet and Saw Min Hla
  OPTIONAL { 
    ?child dbo:parent dbr:Saw_Shwe_Khet .
  }
  OPTIONAL { 
    ?child dbo:parent dbr:Saw_Min_Hla .
  }

  # Spouse of Myat Hpone Pyo's father (likely his mother)
  ?mother dbo:spouse ?father .
  ?myatHponePyo dbo:parent ?father .
  
  # Ensure the person is royalty
  ?predecessor a dbo:Royalty .

  # Find common individual who fits both criteria
  FILTER (?child = ?predecessor && ?mother = ?predecessor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?williamBayneMilitaryForce ?robertCalderEventMilitaryForce WHERE {
  # Find the military conflict associated with William Bayne
  OPTIONAL {
    ?williamBayne dbo:militaryConflict ?militaryConflict .
    ?militaryConflict dbo:militaryForce ?williamBayneMilitaryForce .
    FILTER EXISTS { ?williamBayne rdfs:label ""William Bayne""@en }
  }

  # Find the event associated with Robert Calder and its military force
  OPTIONAL {
    ?robertCalder dbo:event ?event .
    ?event dbo:militaryForce ?robertCalderEventMilitaryForce .
    FILTER EXISTS { ?robertCalder rdfs:label ""Robert Calder""@en }
  }

  # Ensure the entities are classified as military conflicts or societal events
  OPTIONAL {
    ?militaryConflict rdf:type dbo:MilitaryConflict .
  }
  
  OPTIONAL {
    ?event rdf:type dbo:SocietalEvent .
  }
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorTenant ?commanderTenant WHERE {
  # Find the Mayor of Madrid in 2003
  ?mayor a dbo:Mayor ;
         dbo:officeHolder dbr:Madrid_City_Council_Election,_2003 .
  
  # Find the residence of the Mayor and its tenant
  ?mayorResidence dbo:residenceOf ?mayor .
  ?mayorResidence dbo:tenant ?mayorTenant .

  # Find a commander during the Central African Republic Civil War
  ?commander a dbo:MilitaryCommander ;
             dbo:officeHolder dbr:Central_African_Republic_Civil_War .
  
  # Find the residence of the Commander and its tenant
  ?commanderResidence dbo:residenceOf ?commander .
  ?commanderResidence dbo:tenant ?commanderTenant .

}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Linda Sue Cobb"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?location WHERE {
  dbr:Hashiba_Hidekatsu dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:location ?location . }
  FILTER (?location = dbr:Japan)
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find child of Archduchess Margarete Sophie of Austria
  ?child dbo:parent dbr:Margarete_Sophie_of_Austria .
  
  # Find great-grandchild of Alexander of Württemberg (1804-1881)
  ?greatGrandChild dbo:parent ?grandChild .
  ?grandChild dbo:parent ?childOfAlexander .
  ?childOfAlexander dbo:parent dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) .

  # Check if the person is both child and great-grandchild
  FILTER (?child = ?greatGrandChild)

  # Find predecessor of Carl, Duke of Württemberg
  ?person dbo:predecessor dbr:Carl,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure the person matches all conditions
  FILTER (?person = ?child)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?location WHERE {
  VALUES ?suvorov { dbr:Aleksandr_Suvorov }
  
  ?suvorov dbo:associatedWith ?war .
  ?war dbo:place ?location .

  FILTER regex(?location, ""Poland"", ""i"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Actor ;
          dbo:actorIn dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg ;
          dbo:photographer .
  
  OPTIONAL { 
    ?person dbo:parent ?parent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?musicalArtist WHERE {
  # Find Uncle Murda's band member
  dbr:Uncle_Murda dbo:bandMember ?bandMember .

  # Find a person born with the birth name of ""the native"" who is a musical artist from Florida
  ?person dbo:birthName ?nativeBirthName .
  FILTER regex(?nativeBirthName, ""Native"", ""i"") # Assuming ""Native"" is part of the birth name
  ?person dbo:nationality dbr:United_States .
  ?person dbo:placeOfBirth dbr:Florida .
  ?person a dbo:MusicalArtist .

  # Ensure this person is associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?coro dbo:region dbr:Puerto_Rico .
  ?person dbo:associatedMusicalArtist ?coro .

  # Match the band member with the musical artist
  FILTER (?bandMember = ?musicalArtist)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?suvorovURL ?warOrBattle WHERE {
  VALUES ?suvorovURL { 
    dbr:Alexander_Suvorov 
  }
  OPTIONAL {
    ?suvorovURL dbo:participatedIn ?warOrBattle .
  }
}
```",1,1,2,1,1,3,2,20,0,1,28,0.0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraOffice ?commanderOffice ?leaderResidenceTenantOffice WHERE {
  # Miguel Maura's office
  OPTIONAL { 
    dbr:Miguel_Maura dbo:office ?miguelMauraOffice .
  }
  
  # Commander involved in the Central African Republic Civil War
  OPTIONAL {
    ?commander a dbo:Commander ;
               dbo:politicalAffiliation ?centralAfricanRepublicCivilWar .
    FILTER (CONTAINS(LCASE(?centralAfricanRepublicCivilWar), ""central african republic civil war""))
    ?commander dbo:office ?commanderOffice .
  }
  
  # Tenant of the leader's residence during the 2003 Madrid City Council election
  OPTIONAL {
    ?leaderResidenceTenant a dbo:OfficeHolder ;
                           dbo:electedDuring dbr:Madrid_City_Council_election,_2003 .
    ?leaderResidenceTenant dbo:office ?leaderResidenceTenantOffice .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?philipI dbo:father ?father .
  ?father dbo:spouse ?spouse .
  
  VALUES ?philipI { 
    dbr:Philip_I,_Prince_of_Taranto
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:National_Party_of_Greece dbo:leader ?leader .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?decedent WHERE {
  # Find Ada Watson's predecessor
  OPTIONAL {
    ?adaWatson dbo:positionHeld ?position .
    ?position dbo:previousPosition ?predecessorPosition .
    ?predecessorPosition dbo:heldBy ?predecessor .
    FILTER (?adaWatson = dbr:Ada_Watson)
  }

  # Find Mark Tournier's birthplace and a decedent there
  ?markTournier dbo:birthPlace ?birthPlace .
  FILTER (?markTournier = dbr:Mark_Tournier && rdf:type(?birthPlace) = dbo:Settlement)

  OPTIONAL {
    ?decedent dbo:deathPlace ?deathPlace .
    FILTER (?deathPlace = ?birthPlace)
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfSpain ?officeOfAlbertoNunezFeijoo WHERE {
  # Find the current leader of Spain
  OPTIONAL {
    ?tenantOfSpain a dbo:HeadOfState ;
                   dbo:country dbr:Spain .
  }
  
  # Find the office held by Alberto Núñez Feijóo
  OPTIONAL {
    dbr:Alberto_Núñez_Feijóo dbo:office ?officeOfAlbertoNunezFeijoo .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Color_Me_Dead dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildOfSpouse ?fatherOfReferenceChild WHERE {
  # Step 1: Identify Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Step 2: Find the child of Constance's spouse
  ?spouse dbo:child ?childOfSpouse .
  
  # Step 3: Determine the grandchild (child of spouse's child) who is royalty
  ?childOfSpouse dbo:child ?grandchildOfSpouse .
  FILTER (?grandchildOfSpouse rdf:type dbo:Monarch)

  # Step 4: Identify a reference related to William I that is both royalty and an office holder
  dbr:William_I dbo:relatedTo ?reference .
  FILTER (?reference rdf:type dbo:Monarch && ?reference rdf:type dbo:OfficeHolder)
  
  # Step 5: Find the father of the child of the reference, ensuring he is royalty
  ?reference dbo:child ?childOfReference .
  ?fatherOfReferenceChild dbo:parent ?childOfReference .
  FILTER (?fatherOfReferenceChild rdf:type dbo:Monarch)

  # Ensure the grandchild of spouse and father of reference's child are the same person
  FILTER (?grandchildOfSpouse = ?fatherOfReferenceChild)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation [a dbo:SoccerManager] .

  # Identify the team of this person
  ?team dbo:member ?person .

  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .

  # Find actors in these films who are also soccer players and athletes
  ?actor dbo:actor ?film ;
         dbo:sport dbr:Soccer ;
         dbo:occupation [a dbo:Athlete] .

  # Ensure the actor is a member of the same team as the person identified earlier
  ?team dbo:member ?actor .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMembership ?militaryConflict WHERE {
  dbr:George_Pickett dbo:partyMembership ?partyMembership .
  FILTER (?partyMembership = dbr:Republican_Party_(United_States))
  
  OPTIONAL {
    dbr:George_Pickett dbo:commanderOfMilitaryConflict ?militaryConflict .
    FILTER (strstarts(str(?militaryConflict), ""http://dbpedia.org/resource/American_Civil_War""))
  }
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?parent WHERE {
  # Step 1: Find the actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  VALUES ?film { dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg }
  ?film dbo:starring ?actor .

  # Step 2: Find Mariclare Costello's spouse
  VALUES ?mariclareCostello { dbr:Mariclare_Costello }
  ?mariclareCostello dbo:spouse ?spouse .

  # Step 3: Identify the child of Mariclare Costello's spouse
  OPTIONAL {
    ?spouse dbo:child ?child .
    
    # Step 4: Determine the parent of that child
    OPTIONAL {
      ?parent dbo:child ?child .
    }
  }

  FILTER (?actor = ?parent)
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ebrahimAlkaziBirthplace WHERE {
  dbr:Ebrahim_Alkazi dbo:birthPlace ?ebrahimAlkaziBirthplace .
}

UNION

SELECT ?actorBirthplace WHERE {
  dbr:Akaler_Shandhaney dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthplace .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanParsonsBandMember ?stuartAssociatedArtist ?billyAssociatedArtist WHERE {
  VALUES ?theAlanParsonsProject { 
    dbr:The_Alternate_4_(album) # Assuming this is a resource related to The Alan Parsons Project
  }
  
  ?bandMember dbo:bandMemberOf ?theAlanParsonsProject .
  BIND(?bandMember AS ?alanParsonsBandMember)
  
  OPTIONAL {
    ?stuartMcbeathTosh dbo:birthName ""Stuart McBeath Tosh"" .
    ?stuartMcbeathTosh dbo:associatedMusicalArtist ?stuartAssociatedArtist .
    BIND(?stuartAssociatedArtist AS ?stuartAssociatedArtist)
  }
  
  OPTIONAL {
    ?billyLyall dbo:birthName ""Billy Lyall"" .
    ?billyLyall dbo:associatedMusicalArtist ?billyAssociatedArtist .
    BIND(?billyAssociatedArtist AS ?billyAssociatedArtist)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?rulingParty WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  FILTER (?elevation >= 20.1167 && ?elevation <= 20.117)
  
  OPTIONAL {
    ?landmark dbo:country ?country .
    ?country dbo:rulingPoliticalParty ?rulingParty .
  }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?charlestonEntity ?gillmoreAwardeeForce WHERE {
  # Entity associated with Charleston, South Carolina
  ?charlestonEntity dbo:placeOfBirth dbr:Charleston,_South_Carolina .
  
  # Awardees of the Gillmore Medal and their military force
  ?gillmoreAwardee dbo:awardedBy dbr:Gillmore_Medal ;
                  dbo:militaryUnit ?gillmoreAwardeeForce .

  # Amasa Tracy's participation in the Mexican-American War
  OPTIONAL {
    dbr:Amasa_Tracy dbo:participatedIn dbr:Mexican–American_War .
  }
  
  # Filter to ensure relevance between entities and events
  FILTER (?charlestonEntity != ?gillmoreAwardee)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  VALUES ?goldenSwordForBravery { 
    dbr:Golden_Sword_for_Bravery
  }
  ?awardee dbo:award ?goldenSwordForBravery .
}
```",1,1,2,1,1,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandURL WHERE {
  ?person foaf:name ""Robert Lamar Thompson""@en .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
    BIND(STR(?band) AS ?bandURL)
  }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?hongKongCTeam { 
    dbr:Hong_Kong_C_Team 
  }
  VALUES ?yeJia { 
    dbr:Ye_Jia 
  }

  OPTIONAL {
    ?person dbo:sportsManager ?hongKongCTeam .
    ?person dbo:soccerManager ?hongKongCTeam .
  }
  
  OPTIONAL {
    ?person dbo:player ?yeJia .
  }

  FILTER (?person = ?manager)
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan_Standard_Time dbo:country ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theShadowAlterEgo ?kidRockBand ?samConcepcionProfession WHERE {
  # The Shadow's alter ego
  OPTIONAL { 
    dbr:The_Shadow dbo:alterEgo ?theShadowAlterEgo .
  }
  
  # Kid Rock's band
  OPTIONAL {
    dbr:Kid_Rock dbo:band ?kidRockBand .
  }

  # Sam Concepcion's profession
  OPTIONAL {
    dbr:Sam_Concepcion dbo:profession ?samConcepcionProfession .
  }
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?soccerClub WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .
  
  ?person dbo:managerOfTeam ?soccerClub .

  FILTER EXISTS { 
    ?soccerClub a (dbo:SoccerClubSeason | dbo:SportsSeason | dbo:SportsTeamSeason) .
  }
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?kimWilsonBandName WHERE {
  # Find the associated musical artist of Nick Curran
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Find the band Kim Wilson is a member of and get its real name
  OPTIONAL {
    dbr:Kim_Wilson dbo:bandMember ?kimWilsonBand .
    ?kimWilsonBand rdfs:label ?kimWilsonBandName .
    FILTER (LANG(?kimWilsonBandName) = ""en"")
  }
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:Uncle_Murda dbo:associatedBand ?band .
  ?band dbo:member ?bandMember .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalIdentity ?movie WHERE {
  # Find The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?professionalIdentity .
  
  # Find movies featuring Richard E. Grant that are adaptations of TV shows
  ?movie dbo:starring dbr:Richard_E._Grant ;
         dbo:adaptationOf ?tvShow .

  # Find Shatrughan Sinha's profession and match it to The Shadow's alter ego
  dbr:Shatrughan_Sinha dbo:profession ?professionalIdentity .
}
```",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?carolynJonesDeathPlace WHERE {
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find books written by Hillary Clinton
  VALUES ?book { 
    dbr:A_New_York_Minute 
    dbr:It_Takes_a_Village 
    dbr:Living_History 
    dbr:Hard_Cases 
    dbr:What_Happened 
  }
  
  # Check if the author is a politician and office holder
  ?book dbo:author ?author .
  FILTER (?author = dbr:Hillary_Clinton)
  
  OPTIONAL {
    ?author dbo:spouse ?spouse .
  }

  # Identify the commander during the Third Taiwan Strait Crisis
  VALUES ?commander { 
    dbr:Lee_Teng-hui 
  }
  
  ?commander dbo:officeHolder ?office .
  FILTER EXISTS { ?office dbo:heldBy ?author . }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?award dbo:awardName ""Gillmore Medal""@en .
  ?award dbo:recipient ?awardee .
  OPTIONAL { 
    ?awardee dbo:militaryForce ?force .
  }
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Tisha Sterling's resource
  VALUES ?tishaSterling { dbr:Tisha_Sterling }
  
  # Identify her parent(s)
  ?tishaSterling dbo:parent ?parent .
  
  # Get the birth name of each parent
  ?parent dbo:birthName ?birthName .

  # Find any person born with that birth name
  ?person dbo:birthName ?birthName .
}
```",3,3,4,3,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?humanRemains { 
    dbr:Human_Remains_(band) 
  }
  ?humanRemains dbo:bandMember ?bandMember .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?darrylProfession ?elormAssociatedArtist WHERE {
  VALUES ?darrylResource { 
    dbr:Dizzee_Rascal 
  }
  
  # Check if Dizzee Rascal is a musician
  OPTIONAL {
    ?darrylResource dbo:occupation ?darrylProfession .
    FILTER CONTAINS(LCASE(?darrylProfession), ""musician"")
  }

  VALUES ?elormResource { 
    dbr:Wizkid 
  }
  
  # Find associated musical artist for Wizkid
  OPTIONAL {
    ?elormResource dbo:associatedMusicalArtist ?elormAssociatedArtist .
  }
}
```",4,4,5,2,3,3,3,71,0,10,1,0.0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?shadowAlterEgo { dbr:Lamont_Cranston }
  VALUES ?tiAlbumSong { dbr:Rubber_Band_Man_(song) }
  VALUES ?shelbyOaksActor { dbr:Michael_Jai_White }

  OPTIONAL {
    ?person dbo:alterEgo ?shadowAlterEgo .
  }
  
  OPTIONAL {
    ?album dbo:title ""Trap Muzik"" ;
           dbo:song ?tiAlbumSong .
  }
  
  OPTIONAL {
    ?film dbo:starring ?shelbyOaksActor .
    FILTER (str(?film) = str(dbr:Shelby_Oaks))
  }

  FILTER (?person = ?shadowAlterEgo && ?person = ?shelbyOaksActor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Uncle Murda's band membership
  dbr:Uncle_Murda dbo:member ?band .
  
  # Identify the award entity
  VALUES ?award { 
    dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico
  }
  
  # Find native places related to Puerto Rico
  VALUES ?nativePlace {
    dbr:Puerto_Rico
    # Add more specific settlements if known, e.g., San Juan
  }
  
  # Find band members who are native to these places
  ?bandMember dbo:member ?band ;
              dbo:nativePlace ?nativePlace .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  OPTIONAL {
    dbr:Schleswig-Holstein dbo:mayor ?mayor .
  }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workURL ?writer WHERE {
  dbr:George_Ducas dbo:work ?work .
  ?work dbo:composer ?writer .
}
```",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:George_Ducas dbo:work ?work .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Álvaro_Quirós dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander dbo:event dbr:Siege_of_Mukha .
  ?commander a dbo:RoyalPerson .

  # Get the parent of this commander (who must also be royalty)
  ?parent dbo:child ?commander .
  ?parent a dbo:RoyalPerson .

  # Find the child of this parent
  ?childOfParent dbo:parent ?parent .

  # Identify The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .

  # Find Baeda Maryam I and his father
  dbr:Baeda_Maryam_I dbo:father ?baedaFather .

  # Optional: Check if there is any connection between these entities
  OPTIONAL {
    FILTER (?childOfParent = ?shadowAlterEgo || ?childOfParent = ?baedaFather)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Richard E. Grant's DBpedia resource
  VALUES ?richardEGrant { 
    dbr:Richard_E._Grant 
  }
  
  # Ensure the person is an actor and has the birth name Richard Grant Esterhuysen
  ?richardEGrant dbo:birthName ""Richard Grant Esterhuysen""@en .
  ?richardEGrant a dbo:Actor .

  # Find the television show ""Ab Kya Hoga"" and its actors
  VALUES ?abKyaHoga { 
    dbr:Ab_Kya_Hoga 
  }
  
  ?abKyaHoga dbo:actor ?actor .
  
  # Check if any actor is also a politician
  OPTIONAL {
    ?actor dbo:profession dbr:Politician .
  }

  FILTER EXISTS { ?actor dbo:profession dbr:Politician . }
}
```",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?glennYoungkinBirthPlace WHERE {
  # Cece Bell's birthplace
  OPTIONAL { 
    dbr:Cecilie_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
  
  # Glenn Youngkin's birthplace (assuming he is the current governor)
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find the associated musical artist of Wizards of Waverly Place (soundtrack)
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:associatedMusicalArtist ?associatedArtist .
  
  # Ensure this person is also a writer
  ?associatedArtist rdf:type dbo:Writer .

  # Check if the associated artist is a band member of The Alan Parsons Project
  OPTIONAL {
    ?associatedArtist dbo:bandMember dbr:The_Alan_Parsons_Project .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName WHERE {
  ?mariaAnna a dbo:Person ;
             dbo:birthYear ""1574""^^xsd:gYear ;
             dbo:child ?child .
  
  ?child rdfs:label ?childName ;
         rdf:type ?childType .

  FILTER CONTAINS(LCASE(?childType), ""monarch"") .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?alumnus dbo:alumniOf dbr:Eton_College .
  ?child dbo:parent ?alumnus .
  ?child dbo:occupation dbr:Politician .
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fabulousThunderbirdsURL ?bandMemberBand ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  # Find the band member born on 1945-03-30
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist ;
          dbo:memberOfBand ?bandMemberBand .
  
  FILTER (?bandMemberBand = ?fabulousThunderbirdsURL)
  
  # Find Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  
  # Ensure the band member and Nick Curran's associated artist are the same
  FILTER (?bandMemberBand = ?nickCurranAssociatedArtist)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dikhawaTheme WHERE {
  VALUES ?lahoreResource { 
    dbr:Lahore 
  }
  
  OPTIONAL {
    ?event dbo:location ?lahoreResource .
    ?event dbo:theme ?dikhawaTheme .
    FILTER regex(?event, ""Dikhawa"", ""i"")
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:SBV_Vitesse dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commanderRole WHERE {
  VALUES ?manuelPintoDaCosta { dbr:Manuel_Pinto_da_Costa }
  
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?commander .
  
  ?commander dbo:officeHolder ?office ;
             rdfs:label ?commanderRole .

  FILTER (?commander = ?manuelPintoDaCosta)
}
```",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOffice WHERE {
  # Identify the Conservative Republican Party (Spain)
  VALUES ?conservativeRepublicanParty { 
    dbr:Conservative_Party_(Spain) 
  }
  
  # Find the leader of the party
  ?conservativeRepublicanParty dbo:leader ?partyLeader .
  
  # Get the office held by this leader
  ?partyLeader dbo:officeHolder ?leaderOffice .

  # Check if this office is associated with Alberto Ruiz-Gallardón or Mariano Rajoy
  OPTIONAL {
    ?ruizGallardon dbo:residence ?ruizResidence .
    ?ruizGallardon dbo:officeHolder ?ruizOffice .
    FILTER (?leaderOffice = ?ruizOffice)
  }
  
  OPTIONAL {
    ?rajoy dbo:residence ?rajoyResidence .
    ?rajoy dbo:officeHolder ?rajoyOffice .
    FILTER (?leaderOffice = ?rajoyOffice)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfPrincessSara ?royalChildParent WHERE {
  # Find parent of Princess Sara bint Faisal
  OPTIONAL {
    dbr:Sara_bint_Faisal_died_2007 dbo:parent ?parentOfPrincessSara .
  }
  
  # Find children of Prince Faisal bin Hussein and filter for royalty
  OPTIONAL {
    dbr:Faisal_bin_Hussein dbo:child ?royalChild .
    ?royalChild rdf:type dbo:Royal .
    
    # Get the parent of this royal child
    ?royalChild dbo:parent ?royalChildParent .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?deathPlace WHERE {
  VALUES ?movie { dbr:Color_Me_Dead }
  
  ?movie dbo:starring ?actor .
  
  OPTIONAL {
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residenceCountry WHERE {
  dbr:Dawid_Olejniczak dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .
}
```",2,3,3,2,1,3,2,20,0,0,108,0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?birthplace WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:birthPlace ?birthplace .
}
```",2,3,3,2,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowURL WHERE {
  VALUES ?lamontCranstonURL { 
    dbr:Lamont_Cranston_(The_Shadow) 
  }
  
  ?lamontCranstonURL dbo:alterEgo ?shadowURL .
  
  VALUES ?yeshaqIURL { 
    dbr:Yeshaq_I_of_Ethiopia 
  }
  
  ?yeshaqIURL dbo:parent ?guditURL .
  
  VALUES ?baedaMaryamIURL { 
    dbr:Baeda_Maryam_I 
  }
  
  ?yeshaqIURL dbo:child ?baedaMaryamIURL .
  
  FILTER (?guditURL = <http://dbpedia.org/resource/Gudit>)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conservativeLeaderOffice ?ruizGallardonTenantOffice ?carCommanderOffice WHERE {
  # Leader of the Conservative Republican Party (Spain)
  VALUES ?conservativeParty { dbr:Conservative_Party_(Spain) }
  ?conservativeParty dbo:leader ?conservativeLeader .
  ?conservativeLeader dbo:office ?conservativeLeaderOffice .

  # Residence of Alberto Ruiz-Gallardón and its tenant
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizGallardonResidence .
  OPTIONAL {
    ?tenant dbo:currentResidence ?ruizGallardonResidence .
    ?tenant dbo:office ?ruizGallardonTenantOffice .
  }

  # Commander in the Central African Republic Civil War
  dbr:Central_African_Republic_Civil_War dbo:commander ?carCommander .
  ?carCommander dbo:office ?carCommanderOffice .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary's children
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  
  # Grandchildren who are royalty
  ?grandchild dbo:parent ?belavChild .
  ?grandchild a dbo:Monarch .

  # Parent of Charles Martel of Anjou
  ?charlesMartelParent dbo:child dbr:Charles_Martel_of_Anjou .
  
  FILTER (?grandchild = ?charlesMartelParent)

  # Philip, Despot of Romania's parent who is royalty
  ?philipParent dbo:child dbr:Philip_Despot_of_Romania .
  ?philipParent a dbo:Monarch .

  # Father of the above parent
  ?fatherOfPhilipsParent dbo:child ?philipParent .

  # Spouse relationship
  ?grandchild dbo:spouse ?fatherOfPhilipsParent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?tenant WHERE {
  # Find Álvaro Quirós' residence and its country
  OPTIONAL { 
    dbr:Álvaro_Quirós dbo:residence ?residence .
    ?residence dbo:locatedInCountry ?country .
  }
  
  # Find a Spanish tenant of the administration of the Spanish Socialist Workers' Party
  OPTIONAL {
    ?tenant dbo:nationality dbr:Spain ;
            dbo:memberOfParty dbr:Spanish_Socialist_Workers'_Party ;
            dbo:position ?position .
    FILTER EXISTS { ?position dbo:country dbr:Spain }
  }

  # Ensure the country and tenant are linked
  FILTER (?country = ?tenant)
}
```",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalURL ?actorURL WHERE {
  # Find any professional
  ?person dbo:profession ?professional .
  BIND(?person AS ?professionalURL)
  
  # Specifically find actors
  OPTIONAL {
    ?actor dbo:occupation dbr:Actor .
    BIND(?actor AS ?actorURL)
  }
}
```",2,2,3,1,2,3,3,71,4,12997,4206,0.00030766864087377894,0.0009501187648456057,0.0004648190110975539
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorSpouse WHERE {
  # Find the actor associated with ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .

  # Identify the landmark at elevation of approximately 20.1168 meters
  ?landmark dbp:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)

  # Determine the ruling party in the location of this landmark
  ?location dbo:locatedIn ?country .
  ?country dbo:rulingParty ?rulingParty .

  # Find if there's a connection between the actor and the ruling party through marriage
  OPTIONAL {
    ?actor dbo:spouse ?actorSpouse .
    ?actorSpouse dbo:partyMember ?rulingParty .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerURL WHERE {
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:writer ?writer .
  
  OPTIONAL { 
    ?writer dbo:MusicalArtist ?musicalArtist .
  }
  
  OPTIONAL { 
    ?writer dbo:Artist ?artist .
  }

  FILTER (?musicalArtist && ?artist)
}
```",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Kim_Wilson dbo:associatedBand ?band .
}
```",1,1,2,1,1,3,3,71,1,4,1,0.2,0.5,0.28571428571428575
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shobhnaBirthplaceCountry ?jamshedpurCountry WHERE {
  # Find the birthplace of Shobhna Samarth and its country
  dbr:Shobhna_Samarth dbo:birthPlace ?shobhnaBirthplace .
  ?shobhnaBirthplace dbo:country ?shobhnaBirthplaceCountry .

  # Find the country where Jamshedpur is located
  dbr:Jamshedpur dbo:country ?jamshedpurCountry .
}
```",3,4,4,2,2,2,2,9,0,1,22,0.0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid SPARQL query can be generated due to lack of specific information in the question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify the person Grant (Richard Grant Esterhuysen)
  dbr:Grant a dbo:Actor ;
            rdfs:label ""Grant""@en .
  
  # Find a TV show that is also categorized as a movie
  ?tvShow a dbo:TelevisionSeries, dbo:Film ;
          dbo:starring ?actor .

  # Ensure Grant is associated with the TV show/movie
  ?tvShow dbo:starring dbr:Grant .
}
```",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac's involvement in the Battle of Vienna
  dbr:Mikołaj_Kazimierz_Pac dbo:militaryCommanderOf dbr:Battle_of_Vienna_(1683) .
  
  # Successor as a commander in the same event
  ?successor dbo:militaryCommanderOf dbr:Battle_of_Vienna_(1683) .

  # Ensure the successor is also a politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolderOf ?office .
  
  # Filter to ensure it's a different person from Michał Kazimierz Pac
  FILTER (?successor != dbr:Mikołaj_Kazimierz_Pac)
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kimWilsonBand ?nickCurranAssociatedArtist WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  OPTIONAL {
    dbr:Kim_Wilson dbo:associatedBand ?kimWilsonBand .
    FILTER (?kimWilsonBand = ?fabulousThunderbirdsURL)
  }

  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
    FILTER (?nickCurranAssociatedArtist = ?fabulousThunderbirdsURL)
  }
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?stuartToshAssociatedArtist ?billyLyallAssociatedArtist WHERE {
  VALUES ?stuartToshAssociatedArtist { 
    dbr:The_Alvin_Parsons_Project 
  }
  
  OPTIONAL {
    dbr:Billy_Lyall dbo:associatedMusicalArtist ?billyLyallAssociatedArtist .
  }
}
```",3,3,4,1,3,2,3,28,1,3,0,0.25,1.0,0.4
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherNaodURL ?parentCommanderURL WHERE {
  # Find Na'od's grandfather who is royalty and an office holder
  ?naod dbr:Na'od .
  ?naodFather dbo:father ?naod .
  ?naodGrandfather dbo:father ?naodFather .
  FILTER (dbo:royalty(?naodGrandfather) && dbo:officeHolder(?naodGrandfather))
  
  # Find the commander in Siege of Mukha and their parent who is royalty
  ?commander dbr:Commander_in_Siege_of_Mukha .
  ?parentCommander dbo:father ?commander .
  FILTER (dbo:royalty(?parentCommander))

  BIND(?naodGrandfather AS ?grandfatherNaodURL)
  BIND(?parentCommander AS ?parentCommanderURL)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Mudvayne dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,1,3,4,0.25,0.2,0.22222222222222224
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceTVShow ?forceMilitaryConflict WHERE {
  VALUES ?forceTVShow { 
    dbr:The_Force_(TV_series) 
  }
  VALUES ?forceMilitaryConflict { 
    dbr:The_Force_(military_conflict) 
  }
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify William I of Sicily's royal children
  VALUES ?williamI { dbr:William_I_of_Sicily }
  ?child dbo:parent ?williamI .
  ?child rdf:type dbo:Monarch .

  # Step 2: Identify Constance of Burgundy's spouse and their grandchildren
  VALUES ?constance { dbr:Constance_of_Burgundy }
  ?spouse dbo:spouse ?constance .
  ?grandchild dbo:parent ?spouseChild .
  ?spouseChild dbo:parent ?spouse .

  # Step 3: Find the common individual who is both a royal child of William I and a grandchild of Constance's spouse
  FILTER (?child = ?grandchild)

  # Step 4: Determine the father of this individual
  ?father dbo:parent ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeRegion WHERE {
  # Ackquille Jean Pollard (2 Chainz) details
  ?person a dbo:Person ;
          rdfs:label ""2 Chainz""@en ;
          dbo:birthPlace ?birthPlace .
  
  FILTER regex(str(?birthPlace), ""New York"", ""i"")

  # Uncle Murda band membership
  ?band a dbo:Band ;
        rdfs:label ""Uncle Murda""@en .
  ?membership dbo:member ?person ;
              dbo:musicalArtist ?band .

  # Awardee band details
  ?award a dbo:Award ;
         dbo:recipient ?awardeeBand ;
         dbo:nativeRegion ?nativeRegion .
  
  FILTER regex(str(?awardeeBand), ""New York"", ""i"")

  # Ensure native region is an American state and settlement
  ?nativeRegion a dbo:State ;
                dbo:country dbr:United_States_of_America ;
                rdfs:label ?regionLabel .

  FILTER (regex(?regionLabel, ""^.*$"", ""i""))
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorSpouse ?harrietteSpouse WHERE {
  # Find the actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .

  # Find the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?actorSpouse . }

  # Find Harriette Arlene Lake (Harley Jane Kozak)
  ?person foaf:name ""Harley Jane Kozak""@en .
  FILTER(?person = dbr:Harley_Jane_Kozak) .

  # Find the spouse of Harley Jane Kozak
  OPTIONAL { ?person dbo:spouse ?harrietteSpouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?calderMilitaryForce ?bayneWarMilitaryForce WHERE {
  # Robert Calder's military force associated with a societal and military event
  OPTIONAL {
    ?event dbo:associatedMusicalArtist dbr:Robert_Calder .
    ?event rdf:type dbo:MilitaryConflict .
    ?event rdf:type dbo:SocietalEvent .
    ?calderMilitaryForce dbo:militaryConflict ?event .
  }

  # William Bayne's military force in the French campaign
  OPTIONAL {
    ?campaign dbr:French_campaign_in_Egypt_and_Syria .
    ?campaign dbo:militaryConflict ?bayneWar .
    ?bayneWar rdf:type dbo:MilitaryConflict .
    ?commander dbo:commander dbr:William_Bayne .
    ?bayneWarMilitaryForce dbo:militaryConflict ?bayneWar .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Identify players in the film who are also soccer players and athletes
  ?castMember dbo:character ?role .
  ?castMember dbo:sport dbr:Soccer .
  ?castMember a dbo:Athlete .

  # Link Juan Carlos Molina to his team
  dbr:Juan_Carlos_Molina dbo:team ?team .

  # Find a person born on 1979-11-03 who is both a soccer player and manager
  ?person dbo:dateOfBirth ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:manager ?team .
  
  # Ensure the player in the film matches the criteria
  FILTER (?castMember = ?player)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?person dbo:birthName ""Ackquille Jean Pollard"" .
  ?person dbo:nativePlace dbr:Florida .
  
  ?bobbyShmurdaAssociatedArtist dbo:associatedMusicalArtist ?bandMember .
  ?bobbyShmurdaAssociatedArtist dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
  
  FILTER (?person = ?bandMember)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberURL ?birthName WHERE {
  VALUES ?uncleMurdaURL { dbr:Uncle_Murda }
  
  ?bandMember dbo:bandMember ?uncleMurdaURL .
  ?bandMember dbo:nativePlace dbr:Florida .
  ?bandMember dbo:birthName ?birthName .
  ?bandMember a dbo:MusicalArtist .

  FILTER NOT EXISTS {
    ?bandMember dbo:birthName ?otherBirthName .
    FILTER (?otherBirthName != ?birthName)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?rustlersRhapsody { dbr:Rustlers'_Rhapsody }
  ?rustlersRhapsody dbo:starring ?actor .

  VALUES ?theShadow { dbr:The_Shadow_(character) }
  ?theShadow dbo:portrayedBy ?shadowActor .

  FILTER (?actor = ?shadowActor)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?associatedArtist ?bandMember WHERE {
  dbr:Cavalera_Conspiracy dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (?associatedArtist != dbr:Cavalera_Conspiracy)
  
  OPTIONAL { 
    ?associatedArtist rdf:type dbpedia-owl:Organization .
  }
  
  OPTIONAL {
    ?associatedArtist dbo:bandMember ?bandMember .
  }

  FILTER EXISTS { ?associatedArtist rdf:type dbpedia-owl:Organization }
}
```",2,3,3,2,1,3,2,20,0,0,89,0,0.0,0
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shelbyOaksActor ?whatYouKnowArtist WHERE {
  VALUES ?shelbyOaksResource { 
    dbr:Shelby_Oaks_(film) 
  }
  ?shelbyOaksResource dbo:starring ?shelbyOaksActor .

  VALUES ?whatYouKnowAlbumResource { 
    dbr:What_You_Know_(T.I._song) 
  }
  ?whatYouKnowAlbumResource dbo:artist ?whatYouKnowArtist .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?personURL WHERE {
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person a dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?societalEvent WHERE {
  VALUES ?jeanBaptist { dbr:Jean_Baptiste,_Comte_d%27Arco }
  VALUES ?yuriiKhmelnytsky { dbr:Yuri_Khmelnytsky }

  OPTIONAL {
    ?jeanBaptist dbo:commanderInWar ?commander .
  }
  
  OPTIONAL {
    ?yuriiKhmelnytsky dbo:successor ?commander .
  }

  OPTIONAL {
    ?tvShow dbo:wikiPageWikiLink dbr:Jean_Baptiste,_Comte_d%27Arco ;
            dbo:wikiPageWikiLink dbr:Yuri_Khmelnytsky .
  }
  
  OPTIONAL {
    ?societalEvent dbo:wikiPageWikiLink dbr:Jean_Baptiste,_Comte_d%27Arco ;
                   dbo:wikiPageWikiLink dbr:Yuri_Khmelnytsky .
  }

  OPTIONAL {
    ?commander dbo:wikiPageWikiLink dbr:George_Ducas .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName ?war WHERE {
  VALUES ?party { dbr:National_Party_of_Greece }
  
  ?party dbo:leader ?leader .
  ?leader foaf:name ?leaderName .

  OPTIONAL {
    ?leader dbo:participatedInWar ?war .
  }
}
```",2,2,3,2,1,2,3,28,0,1,13,0.0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  # Find his children who are politicians and attended Eton College
  ?child dbo:childOf ?edwardStanley .
  ?child dbo:almaMater dbr:Eton_College .
  ?child dbo:occupation dbr:Politician .

  # Get the parent of this child (Edward Stanley's father)
  ?parent dbo:parentOf ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:12_Strong dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Janusz_Kamiński dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?result WHERE {
  # Duke Philipp of Württemberg's child
  ?philippChild dbo:childOf dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Child of Duke Philipp's child (grandchild)
  ?philippGrandchild dbo:childOf ?philippChild .

  # Child of Philipp Albrecht, Duke of Württemberg
  ?albrechtChild dbo:childOf dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Predecessor (parent) of the child of Philipp Albrecht
  ?predecessor dbo:parentOf ?albrechtChild .

  # Child of Archduchess Margarete Sophie of Austria
  ?margareteSophieChild dbo:childOf dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # The result must be the child of Duke Philipp's grandchild and also a predecessor of the child of Philipp Albrecht who is a child of Archduchess Margarete Sophie
  FILTER (?philippGrandchild = ?predecessor && ?margareteSophieChild = ?albrechtChild)
  
  # Assigning result to be returned
  BIND(?philippGrandchild AS ?result)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of The Triple X's military force
  OPTIONAL { 
    dbr:The_Triple_X_s dbo:commander ?commander .
  }
  
  # Find the commander involved in the Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:commander ?commander .
  }

  # Ensure the same commander is linked to both
  FILTER (?commander = ?commander)

  # Find the military conflict associated with William Bayne
  OPTIONAL {
    dbr:William_Bayne (dbo:militaryConflict|dbo:participatedInBattle) ?bayneWar .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  # Get Marty Pollio's birthdate
  VALUES ?martyBirthDate { 
    dbr:Marty_Polio dbo:birthDate ?birthDate .
  }
  
  # Get Pablo Aimar's team
  VALUES ?pabloTeam { 
    dbr:Pablo_Aimar dbo:team ?team .
  }

  # Find athletes born on the same date as Marty Pollio and who played for Pablo Aimar's team
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?birthDate ;
           dbo:team ?team .

  FILTER (?birthDate = ?martyBirthDate && ?team = ?pabloTeam)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:country dbr:Spain .
  ?person dbo:nationality dbr:Spanish_people .
}
```",1,2,2,1,1,3,3,71,0,0,1550,0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find child of the spouse
  ?spouse dbo:child ?child .

  # Step 3: Identify parent of the child (should be the spouse)
  ?child dbo:parent ?parent .
  
  # Step 4: Find person decedent at Los Angeles
  ?personDecedent dbo:dateOfDeath ?deathDate ;
                  dbo:deathPlace dbr:Los_Angeles .

  # Step 5: Link parent to person decedent
  FILTER (?parent = ?spouse)

  # Step 6: Identify work (movie) of the person decedent
  ?personDecedent dbo:work ?movie .
  
  # Step 7: Find actor of the movie
  ?movie dbo:actor ?actor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardParent ?childParent WHERE {
  # Find the award Rodney Lees received
  OPTIONAL { 
    dbr:Rodney_Lees dbo:award ?leesAward .
    ?leesAward a ?awardClass .
    ?awardClass rdfs:subClassOf* ?awardParent .
  }
  
  # Find the child of Frederick Stanley, 16th Earl of Derby
  OPTIONAL {
    dbr:Fredrick_Stanley_16th_Earl_of_Derby dbo:child ?derbyChild .
    ?derbyChild a ?childClass .
    ?childClass rdfs:subClassOf* ?childParent .
  }
}
```",5,5,6,3,2,3,3,71,0,6,1,0.0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Frédéric_Bouraly dbo:profession ?profession .
}
```",2,2,3,2,1,2,3,28,0,0,21580,0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieTitle ?actorName WHERE {
  VALUES ?shadowResource { dbr:The_Shadow }
  
  ?shadowResource dbo:alterEgo ?realName .
  FILTER (str(?realName) = ""Lamont Cranston"")
  
  ?film dbo:basedOnWork ?shadowResource .
  ?film dbo:title ?movieTitle .
  ?film dbo:actor ?actor .

  ?actor foaf:name ?actorName .
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandURL WHERE {
  VALUES ?bandURL { 
    dbr:Nashi_Parni 
  }
  OPTIONAL {
    dbr:Aleksandr_Filimonov dbo:member ?band .
    FILTER (?band = ?bandURL)
  }
}
```",2,2,3,1,2,3,2,20,0,1,1,0.0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Query for the birthplace of the current governor of Virginia
  OPTIONAL {
    dbr:Glenn_York dbo:birthPlace ?governorBirthPlace .
  }
  
  # Query for the birthplace of Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",4,5,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Step 2: Find the parent of this awardee
  ?awardee dbo:parent ?parentOfAwardee .

  # Step 3: Identify Frederick Stanley, 16th Earl of Derby's child
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?childOfFrederickStanley .
  
  # Step 4: Determine the father of this child who is a politician
  ?childOfFrederickStanley dbo:father ?politicianFather .

  # Ensure the father is a politician
  ?politicianFather rdf:type dbo:Politician .

  # Step 5: Find the parent of this politician
  ?politicianFather dbo:parent ?parentOfPolitician .

  # Step 6: Find the common parent
  FILTER (?parentOfAwardee = ?parentOfPolitician)
  BIND(?parentOfAwardee AS ?commonParent)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author WHERE {
  VALUES ?event { dbr:Third_Taiwan_Strait_Crisis }
  
  # Find the commander during the Third Taiwan Strait Crisis
  ?event dbo:commander ?commander .
  
  # Identify Hillary Clinton as a resident of Chappaqua, New York, and an office holder
  ?hillary dbo:spouse ?commander ;
           dbo:residence dbr:Chappaqua,_New_York ;
           dbo:officeHolder true .

  # Find books authored by the commander (Bill Clinton)
  ?book dbo:author ?commander .
  FILTER EXISTS { ?book a dbo:Book }
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Thirty_Years'_War dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?bayne a dbo:NavyOfficer ;
         foaf:name ""William Bayne"" .
  
  ?event dbo:participatedIn ?bayne ;
         a (dbo:MilitaryConflict | dbo:Event) .

  OPTIONAL { 
    ?event dbo:militaryForce ?militaryForce .
  }
}
```",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Charles_Parsons dbo:militaryService ?service .
  ?service dbo:awarded ?award .
}
```",2,2,3,2,1,2,2,9,0,0,98450,0,0.0,0
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?emilia { dbr:Emilia_(Bulgarian_singer) }
  ?emilia dbo:musicalArtist ?band .
  ?bandMember dbo:member ?band .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfCharlesMartel ?spouseOfCharlesII WHERE {
  VALUES ?charlesMartel { dbr:Charles_Martel_of_Anjou }
  VALUES ?charlesII { dbr:Charles_II_of_Naples }

  OPTIONAL {
    ?charlesMartel dbo:parent ?parentOfCharlesMartel .
  }
  
  OPTIONAL {
    ?charlesII dbo:spouse ?spouseOfCharlesII .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  VALUES ?cokeStudioPhilippines { 
    dbr:Coke_Studio_Philippines 
  }
  ?cokeStudioPhilippines dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person dbo:birthPlace dbr:Łódź ;
          dbo:nationality dbr:Poland ;
          dbo:sport ?sport .
  
  ?person dbo:residence ?country .
  
  FILTER (isLiteral(?country) = false)
  
  OPTIONAL {
    ?suvorovWar dbo:commander dbr:Aleksandr_Suvorov .
    ?suvorovWar dbo:location ?country .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?movie { dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg }
  
  ?movie dbo:starring ?actor .
  
  OPTIONAL {
    dbr:Doon_Arbus dbp:parent ?actor .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLeaderOffice ?warCommanderOffice WHERE {
  # Find the political party of Miguel Maura and its leader's office
  OPTIONAL {
    dbr:Miguel_Maura dbo:member ?politicalParty .
    ?politicalParty dbo:leader ?partyLeader .
    ?partyLeader dbo:office ?partyLeaderOffice .
  }

  # Find the commander in the Central African Republic Civil War and their office
  OPTIONAL {
    ?warCommander dbo:officeHolder ?warCommanderRole .
    ?warCommanderRole dbo:relatedEvent dbr:Central_African_Republic_Civil_War_(2012–present) .
    ?warCommander dbo:positionTitle ""commander"" .
    ?warCommander dbo:office ?warCommanderOffice .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfDoonArbus ?actorName WHERE {
  # Find Doon Arbus's parent
  dbr:Doon_Arbus dbo:parent ?parentOfDoonArbus .
  
  # Find an actor of a movie (work)
  ?movie dbo:actor ?actorResource .
  ?actorResource rdfs:label ?actorName .

  # Filter for person who died in Los Angeles
  ?person dbo:deathPlace dbr:Los_Angeles .
  FILTER (?actorResource = ?person)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rogerPryorSpouse ?centralLouisianaRulingParty ?annSothernBirthName WHERE {
  # Find the spouse of Roger Pryor (actor)
  OPTIONAL { 
    dbr:Roger_Pryor_(actor) dbo:spouse ?rogerPryorSpouse .
  }
  
  # Find the ruling party in Central, Louisiana
  OPTIONAL {
    ?centralLouisianaRulingParty dbo:location dbr:Central,_Louisiana ;
                                  dbo:isMemberOf ?rulingParty .
    FILTER NOT EXISTS { ?otherParty dbo:location dbr:Central,_Louisiana . 
                        ?otherParty != ?centralLouisianaRulingParty }
  }

  # Find the birth name of Ann Sothern
  OPTIONAL {
    dbr:Ann_Sothern dbo:birthName ?annSothernBirthName .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?movie WHERE {
  VALUES ?afeezOyetoro { dbr:Afeez_Oyetoro }
  
  ?movie dbo:basedOn ?show .
  ?show dbo:actor ?afeezOyetoro .
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ruizGallardonResidence ?casadoOffice WHERE {
  # Residence of Alberto Ruiz-Gallardón
  OPTIONAL { 
    dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizGallardonResidence .
  }
  
  # Office of the leader of the Conservative Republican Party (Spain)
  OPTIONAL {
    dbr:Pablo_Casado dbo:office ?casadoOffice .
  }
}
```",4,5,5,2,2,3,3,71,0,2,1,0.0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?personName WHERE {
  VALUES ?birthName { ""Pacely"" }
  ?personURL a dbo:Person .
  ?personURL dbo:birthName ?birthName .
  OPTIONAL { ?personURL rdfs:label ?personName . FILTER (lang(?personName) = 'en') }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES ?person ?name {
    (dbr:Vince_Gilligan ""Vince Gilligan"")
    (dbr:Cece_Bell ""Cece Bell"")
    (dbr:Glenn_Youngkin ""Glenn Youngkin"")
  }
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Picketts_Charge dbo:participatingMilitaryUnit ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?nativeOfAward ?awardWinner WHERE {
  VALUES ?coro { 
    dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico
  }
  
  ?award dbo:native ?nativeOfAward .
  ?nativeOfAward rdf:type dbo:Settlement .
  ?nativeOfAward dbo:country dbr:United_States_of_America .

  OPTIONAL {
    ?awardWinner dbo:award ?coro ;
                 rdf:type dbo:Person ;
                 dbo:profession dbr:Actress .
  }
  
  FILTER (?awardWinner = ?nativeOfAward)
}
```",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Identify Sandro Bertaggia's resource
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthplace .

  # Ensure the birthplace is a country
  ?birthplace rdf:type dbo:Country .

  # Find individuals who have died at this location
  ?decedent dbo:deathPlace ?birthplace .
}
```",2,3,3,2,1,2,3,28,906,0,0,1.0,1.0,1.0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:associatedWith ?societalEvent .
  ?war dbo:depictedIn ?televisionShow .
  ?war dbo:unit ?dragoonRegiment .
  ?dragoonRegiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
  
  ?commander dbo:commanderOf ?war .
  
  ?ferdinandII dbr:Ferdinand_II,_Holy_Roman_Emperor ;
              dbo:child ?commander .
  
  ?ferdinandIII dbr:Ferdinand_III,_Holy_Roman_Empire ;
               dbo:parent ?descendant .
  
  ?commander dbo:parent ?descendant .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?renetaKamberovaBirthPlace ?alumnusBirthPlace WHERE {
  # Reneta Kamberova's birthplace
  dbr:Reneta_Kamberova dbo:birthPlace ?renetaKamberovaBirthPlace .

  # An alumnus of Plovdiv University ""Paisius of Hilendar""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_of_Hilendarski .
  ?alumnus dbo:birthPlace ?alumnusBirthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Princess Muna al-Hussein's royal children
  VALUES ?princessMuna { dbr:Princess_Muna_al-Hussein }
  
  ?royalChild dbo:child ?princessMuna .
  ?royalChild dbo:royalTitle ?title .

  # For each royal child, find their royal grandchildren
  ?grandchild dbo:child ?royalChild .
  ?grandchild dbo:royalTitle ?grandchildTitle .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeHamiltonCameronURL WHERE {
  VALUES ?georgeHamiltonCameronURL { 
    dbr:George_Hamilton_Cameron
  }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:participatingOrganisation dbr:United_States_Navy .
  ?war rdfs:label ""World War II""@en .
  ?war dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace WHERE {
  # Find the birthplace of Cece Bell, author of El Deafo
  OPTIONAL {
    dbr:Cecily_Ann_Bell dbo:birthPlace ?authorBirthPlace .
  }
  
  # Find the birthplace of Glenn Youngkin, governor of Virginia
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace ;
                      dbo:positionHeld dbr:Governor_of_Virginia .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Volodymyr_Zelensky dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,142,0,0.0,0
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?leaderOffice WHERE {
  # Find the office of the commander related to Central African Republic Civil War
  OPTIONAL {
    ?person dbo:officeHolder ?commanderOffice .
    ?commanderOffice dbo:relatedEvent dbr:Central_African_Republic_Civil_War_(2012–present) .
    FILTER EXISTS { ?person a dbo:Politician } .
  }
  
  # Ensure the person is also associated with Madrid
  OPTIONAL {
    ?person dbo:residence dbr:Madrid .
  }

  # Find the office of the leader of a political party linked to Miguel Maura
  OPTIONAL {
    ?party dbo:foundingMember dbr:Miguel_Maura .
    ?leaderOffice dbo:officeHolder ?person .
    ?leaderOffice dbo:position ""Leader""@en .
    ?party a dbo:PoliticalParty .
  }

  # Ensure the person is a politician
  FILTER EXISTS { ?person a dbo:Politician }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?pabloAimarTeam ?commonPlayer WHERE {
  # Find the team of Pablo Aimar
  dbr:Pablo_Aimar dbo:team ?pabloAimarTeam .
  
  # Find the team of Juan Carlos Molina
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?juanCarlosMolinaTeam .

  # Find players in both teams
  ?commonPlayer dbo:playsFor ?pabloAimarTeam ;
                dbo:playsFor ?juanCarlosMolinaTeam .
  
  # Filter for athletes featured in ""All or Nothing: Manchester City""
  OPTIONAL {
    ?commonPlayer dbo:featuredIn dbr:All_or_Nothing:_Manchester_City .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickCurranAssociatedArtist ?fabulousThunderbirdsRealName ?claptonBandMember ?bandOfClaptonsBandMember
WHERE {
  # Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # The real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds rdfs:label ?fabulousThunderbirdsRealName .
  
  FILTER (LANG(?fabulousThunderbirdsRealName) = 'en')

  # A band member of Eric Clapton and their band
  {
    SELECT DISTINCT ?claptonBandMember WHERE {
      dbr:Eric_Clapton dbo:bandMember ?claptonBandMember .
    }
  } LIMIT 1

  OPTIONAL {
    ?claptonBandMember dbo:associatedMusicalArtist ?bandOfClaptonsBandMember .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  # Manager of VfL Bochum in 2007-08 season
  ?bochumManager dbo:managerOfSeason [
    dbo:sportTeam dbr:VfL_Bochum ;
    dbo:season ""2007–08""^^xsd:string .
  ].
  
  # Manager of SBV Vitesse in 2020-21 season
  ?vitesseManager dbo:managerOfSeason [
    dbo:sportTeam dbr:SBV_Vitesse ;
    dbo:season ""2020–21""^^xsd:string .
  ].

  # Ensure the manager is the same person for both clubs
  FILTER (?bochumManager = ?vitesseManager)

  # Manager's nationality as native of West Germany
  ?managerNationality dbo:nationality dbr:West_Germany.
  FILTER (?bochumManager = ?managerNationality)

  # Ensure VfL Bochum and SBV Vitesse are sports clubs and soccer clubs
  ?bochumType dbo:type [
    a dbo:SportsClub ;
    a dbo:FootballClub .
  ].
  FILTER (dbr:VfL_Bochum = ?bochumType)

  ?vitesseType dbo:type [
    a dbo:SportsClub ;
    a dbo:FootballClub .
  ].
  FILTER (dbr:SBV_Vitesse = ?vitesseType)

  # Get the manager's name
  ?managerName rdfs:label ?nameLabel.
  FILTER(lang(?nameLabel) = ""en"")
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace and nationality
  dbr:Sandro_Bertaggia dbo:nationality ?nationality .
  FILTER (?nationality IN (dbr:Grand_Duchy_of_Finland, dbr:Russian_Empire))
  
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Country . }
  
  # Find any person who died at Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace = ?birthPlace)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?event WHERE {
  VALUES ?michałKazimierzPac { 
    dbr:Mikołaj_Kazimierz_Pas_(general) # Assuming this is the correct DBpedia resource for Michał Kazimierz Pac
  }
  
  OPTIONAL {
    ?michałKazimierzPac dbo:commander ?militaryForce .
  }

  OPTIONAL {
    ?michałKazimierzPac dbo:participatedInBattle ?event .
  }
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
}
```",3,3,4,3,1,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Carrie_Johnson dbo:spouse ?spouse .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?commonSettlement WHERE {
  VALUES ?person1 { dbr:Henry_Clay_Lewis }
  VALUES ?person2 { dbr:Quincy_Adams_Gillmore }

  ?person1 dbo:birthPlace ?birthplace1 .
  ?person2 dbo:birthPlace ?birthplace2 .

  FILTER (?birthplace1 != ?birthplace2)

  OPTIONAL {
    ?birthplace1 rdf:type dbo:Settlement ;
                 dbo:country dbr:United_States_of_America .
  }
  
  OPTIONAL {
    ?birthplace2 rdf:type dbo:Settlement ;
                 dbo:country dbr:United_States_of_America .
  }

  FILTER (?birthplace1 = ?commonSettlement)
  FILTER (?birthplace2 = ?commonSettlement)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty WHERE {
  dbr:Central,_Louisiana dbo:politicalParty ?rulingParty .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?party dbo:leader ?leader .
  ?party rdfs:label ""National Party of Greece""@en .

  OPTIONAL { 
    ?entity dbo:place dbr:Athens .
  }

  ?leader dbo:participatedIn ?war .
  ?entity dbo:participatedIn ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find James Plotkin's associated musical artist
  dbr:James_Plotkin dbo:associatedMusicalArtist ?artist1 .

  # Step 2: For each artist, find their band members
  ?artist1 dbo:member ?bandMember .

  # Step 3: Check if the band member has an associated musical artist that is a band, group, and organization
  ?bandMember dbo:associatedMusicalArtist ?artist2 .
  
  FILTER (?artist2 != dbr:James_Plotkin) # Avoid self-reference

  # Ensure it's a band, group, and organization
  ?artist2 rdf:type dbo:Band ;
           rdf:type dbo:Group ;
           rdf:type dbo:Organization .

  # Step 4: Ensure this artist is related to ""Burnt by the Sun (band)""
  OPTIONAL { 
    ?artist2 dbo:associatedMusicalArtist dbr:Burnt_by_the_Sun_(band) .
  }
  
  FILTER EXISTS {
    ?artist2 dbo:associatedMusicalArtist dbr:Burnt_by_the_Sun_(band)
  }
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Find Allan Arbus resource
  VALUES ?allanArbus { dbr:Allan_Arbus }
  
  # Find children of Allan Arbus
  ?child dbo:childOf ?allanArbus .
  
  # Find the parent of each child
  ?child dbo:parent ?parentOfChild .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace ?soccerClub WHERE {
  # Find Thomas Letsch's birthplace and ensure it is West Germany
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch"" ;
          dbo:birthPlace ?nativePlace .
  
  FILTER(CONTAINS(LCASE(STR(?nativePlace)), ""west germany""))

  # Identify the soccer club he manages
  ?letsch dbo:manager ?soccerClub .

  # Ensure the entity is a sports team with seasons
  ?soccerClub a dbo:SoccerTeam ;
              dbo:sportsTeamSeason ?season .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royParty ?fatherName ?fathersParty WHERE {
  # Roy Leonardo Barreras Montealegre's party
  OPTIONAL {
    dbr:Roy_Barreras dbo:party ?royParty .
  }
  
  # Sofía Petro's father
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?sofiaFather .
    ?sofiaFather rdfs:label ?fatherName .
    OPTIONAL {
      ?sofiaFather dbo:party ?fathersParty .
    }
  }
}
```",4,5,5,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?partyAffiliation WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  OPTIONAL { 
    ?person dbo:partyAffiliation ?partyAffiliation .
  }
  FILTER EXISTS {
    ?person dbo:residence dbr:Central,_Louisiana .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?bayne dbr:William_Bayne_(Royal_Navy_officer) .
  ?bayne dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?warTVShowSocietalEvent ?georgeDucasWork WHERE {
  # Commander in the Battle of Vienna
  dbr:Battle_of_Vienna dbo:commander ?commander .
  
  # War that is both a TV show and societal event (hypothetical example)
  OPTIONAL {
    ?warTVShowSocietalEvent a dbo:SocietalEvent ;
                           dbo:depicts ?tvShow .
    ?tvShow a dbo:TelevisionSeries .
  }
  
  # Reference to the writer of George Ducas's work
  dbr:George_Ducas dbo:work ?georgeDucasWork .
  
  # Linking the war and George Ducas's work (hypothetical connection)
  OPTIONAL {
    ?warTVShowSocietalEvent dbo:relatedTo ?georgeDucasWork .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?caroline { 
    dbr:Caroline_Louise_Bevan_Symonds 
  }
  ?caroline dbo:spouse ?spouse .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find Joey B's birth name
  dbr:Joey_B dbo:birthName ?joeyBBirthName .

  # Step 2: Identify the writer of ""The Live Anthology""
  dbr:The_Live_Anthology dbo:writer ?anthologyWriter .
  
  # Ensure the writer is a musical artist
  ?anthologyWriter dbo:profession dbr:Musical_artist .

  # Step 3: Find a person with the same birth name and profession as the writer
  ?person dbo:birthName ?joeyBBirthName ;
          dbo:profession dbr:Musical_artist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  VALUES ?frederickStanley { dbr:Frederick_Stanley,_16th_Earl_of_Derby }
  
  # Find his children
  ?child dbo:parent ?frederickStanley .
  
  # Filter for a child who is a politician
  ?child dbo:occupation dbr:Politician .

  # Determine the father of that child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?rustlersRhapsody { 
    dbr:Rustlers'_Rhapsody 
  }
  
  ?rustlersRhapsody dbo:starring ?actor .
  ?actor dbo:profession dbr:Actor .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ottomanEntity ?charlesParsonsAward WHERE {
  # Find entities related to the Ottoman Empire
  ?ottomanEntity dbo:country dbr:Ottoman_Empire .
  
  # Find awards associated with Charles Parsons (British Army officer)
  OPTIONAL {
    dbr:Charles_Parsons_(British_Army_officer) dbo:honours ?charlesParsonsAward .
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalInAlterEgo ?producer WHERE {
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?professionalInAlterEgo .
  
  # Find Cora Sue Collins' claim to fame (work)
  VALUES ?corasWork { 
    dbr:Cora_Sue_Collins#Claim_to_fame 
  }
  
  # Identify the producer of that work
  ?corasWork dbo:producer ?producer .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?universityURL WHERE {
  VALUES ?universityURL { 
    dbr:Plovdiv_University_Paisii_Hilendarski 
  }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbp:country dbr:United_States .
}
```",1,1,2,1,1,2,2,9,17599,6288,45822,0.7367605810692008,0.2774948360952997,0.403147477894351
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?ciara WHERE {
  ?ciara dbo:birthName ""Cynthia Ikponmwenosa Morgan""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:member ?party .
  
  # Identify the leader of this political party
  ?party dbo:leader ?leader .

  # Check if this leader holds an office as a politician
  ?leader dbo:officeHolder ?office .
  FILTER EXISTS { ?office rdf:type dbo:PoliticalOffice }

  # Find Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .

  # Determine who is currently living at that residence
  OPTIONAL {
    ?currentTenant dbo:residence ?residence .
    FILTER (?leader = ?currentTenant)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonBirthPlace WHERE {
  # Find the birthplace of Ekaterina Zaharieva
  dbr:Ekaterina_Zaharieva dbo:birthPlace ?ekaterinaBirthPlace .

  # Find settlements in regions using Eastern European Time (EET)
  ?settlement a dbo:Settlement ;
              dbp:timeZone ""Europe/Sofia"" ; # Sofia is the capital of Bulgaria, which uses EET
              dbo:location ?region .
  
  # Get birthplace of residents from these settlements
  ?resident dbo:birthPlace ?residentBirthPlace ;
            dbo:residence ?settlement .

  # Find common birthplace
  FILTER (?ekaterinaBirthPlace = ?commonBirthPlace)
  FILTER (?residentBirthPlace = ?commonBirthPlace)
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieTitle ?tvShowTitle WHERE {
  ?movie dbo:starring dbr:Richard_E._Grant .
  ?movie dbo:title ?movieTitle .
  ?movie dbo:adaptation ?tvShow .
  ?tvShow dbo:title ?tvShowTitle .
}
```",2,3,3,2,1,3,3,71,0,0,53,0,0.0,0
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfParadise ?actorOfAlways ?spouseOfJanuszKaminski WHERE {
  # Actor(s) of ""Paradise"" (2013 film)
  OPTIONAL {
    dbr:Paradise_(2013_film) dbo:starring ?actorOfParadise .
  }
  
  # Actor(s) of ""Always"" (1989 film)
  OPTIONAL {
    dbr:Always_(film) dbo:starring ?actorOfAlways .
  }

  # Spouse of Janusz Kamiński
  OPTIONAL {
    dbr:Janusz_Kamiński dbo:spouse ?spouseOfJanuszKaminski .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samConcepcionProfession ?theShadowProfessional ?bobThompsonBand WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samConcepcionProfession .
  
  # Professional associated with The Shadow (alter ego)
  dbr:The_Shadow dbo:alterEgo ?theShadowProfessional .

  # Bob Thompson's band
  dbr:Bob_Thompson_(musician) dbo:bandMember ?bobThompsonBand .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?charlestonEntity ?medalOfHonorWar WHERE {
  # Identify Quincy Adams Gillmore as an awardee of a specific award
  ?award dbo:awardee dbr:Quincy_Adams_Gillmore .
  
  # Find the military force associated with Quincy Adams Gillmore
  OPTIONAL { 
    ?gillmore dbo:militaryForce ?force .
  }
  
  # Identify any entity in Charleston, South Carolina related to him
  OPTIONAL {
    ?charlestonEntity dbo:location dbr:Charleston,_South_Carolina .
    ?gillmore dbo:associatedWith ?charlestonEntity .
  }

  # Determine the war during which he received the Medal of Honor
  OPTIONAL {
    ?medalOfHonorAward dbo:awardee dbr:Quincy_Adams_Gillmore ;
                       a dbo:Medal_of_Honor .
    ?medalOfHonorAward dbo:war ?medalOfHonorWar .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:deathPlace dbr:Los_Angeles .
}
```",1,1,2,1,1,3,3,71,2883,0,0,1.0,1.0,1.0
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName ?royalChild WHERE {
  dbr:Peter_IV_of_Aragon dbo:realName ?realName .
  dbr:Peter_IV_of_Aragon dbo:child ?child .
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
    FILTER EXISTS { ?title }
  }
  BIND(?child AS ?royalChild)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?war { dbr:Thirty_Years'_War }
  
  # Find commanders in the Thirty Years' War
  ?commander dbo:participatedInMilitaryConflict ?war .
  
  # Identify Ferdinand III and his children
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  
  # Determine who is the father of Ferdinand III's child
  ?father dbo:child ?child .
  
  # Ensure the commander is also the father
  FILTER (?commander = ?father)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfYeshaqI ?grandfatherOfNaod WHERE {
  # Find Yeshaq I's children who are royalty
  VALUES ?yeshaqI { dbr:Yeshaq_I }
  ?yeshaqI dbo:spouse|dbo:child ?person .
  ?person a dbo:Monarch .

  # Identify the child of Yeshaq I who is also a parent (royalty) to Na'od's father
  VALUES ?naod { dbr:Na'ad_I }
  ?parentOfNaod dbo:spouse|dbo:child ?naod .
  ?parentOfNaod a dbo:Monarch .

  # Find the grandfather of Na'od who is both royalty and an office holder
  ?fatherOfNaod dbo:spouse|dbo:child ?parentOfNaod .
  ?grandfatherOfNaod dbo:spouse|dbo:child ?fatherOfNaod .
  ?grandfatherOfNaod a dbo:Monarch ;
                    dbo:officeHolder ?office .

  # Ensure the child of Yeshaq I is the parent of Na'od's father
  FILTER (?person = ?parentOfNaod)
  
  # Return the results
  BIND(?person AS ?childOfYeshaqI)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?shelbyOaks { 
    dbr:Shelby_Oaks_(film) 
  }
  ?shelbyOaks dbo:starring|dbo:castMember ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the alter ego in The Golden Master series and its corresponding professional
  ?alterEgo dbo:characterName ""The Golden Master""@en .
  ?alterEgo dbo:actor ?professional .

  # Find actors of ATL (film)
  ?atlFilm dbr:ATL_(film) ;
           dbo:starring ?atlActor .
  
  # Find actors of Shelby Oaks
  ?shelbyOaksFilm dbr:Shelby_Oaks ;
                  dbo:starring ?shelbyOaksActor .

  # Check if the professional is an actor in both films
  FILTER (?professional = ?atlActor && ?professional = ?shelbyOaksActor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William I
  dbr:William_I dbo:spouseOrPartner ?parent .

  # Find references who are royalty and office holders related to William I
  ?parent a dbo:Person ;
          dbo:royalTitle ?title ;
          dbo:officeHolder ?office .

  # Find children of these references who are also royalty
  ?parent dbo:child ?child .
  ?child a dbo:Person ;
         dbo:royalTitle ?childTitle .

  # Determine the father of this child
  ?child dbo:father ?father .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Find the author of ""An Invitation to the White House""
  dbr:An_Invitation_to_the_White_House dbo:author ?author .

  # Identify a disease that is also a societal event (e.g., World War I or II)
  VALUES ?war { 
    dbr:World_War_I 
    dbr:World_War_II
  }

  # Find the commander of this war
  ?war dbo:commander ?commander .

  # Ensure the commander is linked to both the owner and spouse of the author
  FILTER (?owner = ?author) .
  OPTIONAL {
    ?author dbo:spouse ?spouse .
    FILTER (?spouse = ?owner)
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusURL WHERE {
  VALUES ?university { 
    dbr:Plovdiv_University_Paisii_Hilendarski 
  }
  ?alumnus dbo:alumnusOf ?university .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?musicalArtist .

  # Identify the region related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  ?award dbo:region ?state .
  
  FILTER (STRSTARTS(STR(?state), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?state a dbo:State . } &&
          EXISTS { ?state dbo:country dbr:United_States_of_America . })

  # Find the band member of this musical artist who is native to this state
  ?musicalArtist dbo:bandMember ?bandMember .
  ?bandMember dbo:nativePlace ?nativePlace .

  FILTER (?nativePlace = ?state)
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?personURL WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAlbrecht ?grandChildOfArchduke WHERE {
  # Find children of Albrecht, Duke of Württemberg
  VALUES ?albrecht { dbr:Albrecht,_Duke_of_W%C3%BCrttemberg }
  
  ?albrecht dbo:child ?childOfAlbrecht .
  
  # Find grandchildren of Archduke Charles Louis of Austria who are royalty
  VALUES ?archduke { dbr:Charles_Louis_Archduke_of_Austria }
  
  ?parentArchduke dbo:child ?grandChildOfArchduke .
  ?grandChildOfArchduke rdf:type dbo:RoyalFamilyMember .
  ?parentArchduke dbo:parent ?archduke .

  # Ensure the grandchild is also a child of Albrecht's child
  ?childOfAlbrecht dbo:child ?grandChildOfArchduke .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Emilia Yancheva Valeva""@en .
  ?person dbo:birthName ""Emilia Yancheva Valeva"" .
  ?person dbo:member ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?book dbo:author ?author .
  ?author dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Politician . }
  FILTER EXISTS { ?spouse dbo:officeHolder ?_ . } # Check for any office holding
  VALUES ?book { dbr:An_Invitation_to_the_White_House }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake"" ;
             dbo:nationality dbr:United_States ;
             dbo:partyAffiliation dbr:Republican_Party_(United_States) .
  
  ?nat a dbo:Person ;
       foaf:name ""Nat Levine"" .

  ?film dbo:producer ?nat ;
        a dbo:Film .

  ?actor dbo:actedIn ?film ;
         a dbo:Actor .

  ?spouse dbo:spouse ?actor ;
          = ?harriette .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Eugène_Cattin dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?myatHponePyo dbo:father ?father .
  FILTER (rdfs:label(?myatHponePyo) = ""Myat Hpone Pyo""@en)
  
  ?father dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .

  ?minHlaHtut dbo:parent ?parentMinHlaHtut .
  FILTER (rdfs:label(?minHlaHtut) = ""Min Hla Htut""@en)
  
  ?parentMinHlaHtut dbo:parent ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?politicianProfession ?shadowAlterEgo ?alterEgoProfession WHERE {
  # Find the actor from ""Ab Kya Hoga"" who is also a politician
  ?movie dbo:title ""Ab Kya Hoga""@en .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER(CONTAINS(LCASE(?actorName), ""actor"")) # Ensure it's an actor
  OPTIONAL {
    ?actor dbo:profession ?politicianProfession .
    FILTER(CONTAINS(LCASE(STR(?politicianProfession)), ""politician""))
  }
  
  # Find the alter ego of The Shadow and their profession
  ?shadowCharacter rdfs:label ""The Shadow""@en .
  ?shadowCharacter dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ?alterEgoName .
  OPTIONAL {
    ?alterEgo dbo:profession ?alterEgoProfession .
  }
  
  # Ensure the actor from Ab Kya Hoga is also a politician
  FILTER(?actor = ?alterEgo)
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreRank ?medalOfHonorAwardedBy ?lewisBirthPlace WHERE {
  # Quincy Adams Gillmore's military rank
  dbr:Quincy_A._Gillmore dbo:militaryRank ?gillmoreRank .
  
  # Medal of Honor awarded by the United States Congress
  dbr:Medal_of_Honor dbo:awardedBy ?medalOfHonorAwardedBy .
  FILTER (?medalOfHonorAwardedBy = dbr:United_States_Congress)
  
  # Henry Clay Lewis' birthplace and nationality
  dbr:Henry_Clay_Lewis dbo:nationality dbr:United_States ;
                      dbo:birthPlace ?lewisBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandChildOfAlfonsoVI WHERE {
  # Find Roger III, Duke of Apulia and his parent
  ?rogerIII dbo:parent ?parentOfRogerIII .
  
  # Find the child of Roger's parent (sibling or another child)
  OPTIONAL { 
    ?childOfParent dbo:parent ?parentOfRogerIII .
  }
  
  # Find Alfonso VI and one of his children
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?childOfAlfonsoVI .

  # Find the child of that child (grandchild)
  OPTIONAL {
    ?grandChildOfAlfonsoVI dbo:parent ?childOfAlfonsoVI .
  }
  
  # Filter to find a common individual who is both a child of Roger's parent and a grandchild of Alfonso VI
  FILTER (?childOfParent = ?grandChildOfAlfonsoVI)
}
```",4,4,5,2,2,3,3,71,2,1,2,0.6666666666666666,0.5,0.5714285714285715
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParentURL WHERE {
  # Step 1: Identify Princess Aisha bint Faisal
  VALUES ?princessAisha { 
    dbr:Princess_Aisha_bint_Faisal
  }
  
  # Step 2: Find her parent who is a royalty
  ?parent dbo:child ?princessAisha .
  FILTER EXISTS { ?parent dbo:royalty . }

  # Step 3: Identify this parent's child who is also a royalty
  ?secondChild dbo:child ?parent .
  FILTER EXISTS { ?secondChild dbo:royalty . }
  
  # Step 4: Find the parent of this royal child
  ?finalParent dbo:child ?secondChild .

}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .

  # Step 2: Find the child of this parent
  ?child dbo:parent ?parent .

  # Step 3: Identify the parent of this child (grandparent)
  ?child dbo:parent ?grandparent .

  # Step 4: Filter for politicians and office holders
  FILTER (?grandparent rdf:type dbo:Politician && 
          ?grandparent rdf:type dbo:OfficeHolder)
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athleteName ?birthdate WHERE {
  # Get Marty Pollio's birthdate
  VALUES ?martyPollioBirthDate { 
    OPTIONAL { dbr:Marty_Pollio dbo:birthDate ?martyPollioBirthDate }
  }

  # Find athletes with the same birthdate as Marty Pollio
  ?athlete a dbo:Athlete ;
           rdfs:label ?athleteName ;
           dbo:birthDate ?birthdate .
  
  FILTER (?birthdate = ?martyPollioBirthDate)
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?album { 
    dbr:Always_the_Love_Songs_(Chris_Isaak_album) 
  }
  ?album dbo:composer ?writer .
}
```",2,2,3,2,1,3,3,71,0,0,98450,0,0.0,0
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }

  # Step 2: Find his child
  ?child dbo:childOf ?edwardStanley .

  # Step 3: Determine the parent of this child
  ?parentOfChild dbo:spouseOrPartner ?child .
  
  # Step 4: Check if this parent is both a politician and an office holder
  ?parentOfChild dbo:officeHolder ?office .
  ?parentOfChild dbo:politicalPartyMember ?party .

  # Step 5: Find the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order .

  # Step 6: Identify the parent of this awardee
  ?parentOfAwardee dbo:spouseOrPartner ?awardee .

  # Step 7: Match the two parents
  FILTER (?parentOfChild = ?parentOfAwardee)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?partyLeader WHERE {
  VALUES ?manuelPintoDaCosta { dbr:Manuel_Pinto_da_Costa }
  
  # Find the office of commander related to a military conflict and societal event
  ?office dbo:officeHolder ?manuelPintoDaCosta .
  ?office dbo:positionTitle ?commanderOffice .
  OPTIONAL {
    ?militaryConflict dbo:participant ?office .
    FILTER EXISTS { ?militaryConflict rdf:type dbo:MilitaryConflict . }
    FILTER EXISTS { ?militaryConflict rdf:type dbo:SocietalEvent . }
  }

  # Find the leader of the Conservative Republican Party (Spain)
  VALUES ?conservativeRepublicanParty { dbr:Conservative_and_R republican_Party_(Spain) }
  ?partyLeader dbo:politicalPartyLeader ?conservativeRepublicanParty .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeHamiltonCameronURL ?awardName WHERE {
  VALUES ?georgeHamiltonCameronURL { 
    dbr:George_Hamilton_Cameron 
  }
  ?georgeHamiltonCameronURL dbo:award ?award .
  ?award rdfs:label ?awardName .
  FILTER (lang(?awardName) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?movie { 
    dbr:Johnny_Doughboy_(film) 
  }
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  
  OPTIONAL { ?election dbo:winner ?winningParty . }
  OPTIONAL { ?winningParty dbo:leader ?leader . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author dbo:author dbr:An_Invitation_to_the_White_House ;
          dbo:author dbr:Back_to_Work_(book) .
  
  ?militaryEvent dbo:commander ?author .
  FILTER (str(?militaryEvent) = ""Third_Taiwan_Strait_Crisis"") .

  ?author dbo:spouse ?spouse .
  ?spouse a dbo:OfficeHolder .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author dbo:author dbr:An_Invitation_to_the_White_House ;
          dbo:author dbr:Back_to_Work_(book) .
  
  ?war dbo:name ?nameWar .
  FILTER (CONTAINS(LCASE(?nameWar), ""disease"") && CONTAINS(LCASE(?nameWar), ""societal event"")) .

  ?owner dbo:commanderIn ?war ;
         dbo:owns dbr:USS_Arcadia_(ID-1605) .
  
  ?author dbo:commanderIn ?war .

  OPTIONAL {
    ?author dbo:spouse ?spouse .
    FILTER EXISTS { ?spouse a dbo:Politician } .
    FILTER EXISTS { ?spouse dbo:officeHolder ?_ . }
  }

  FILTER (?author = ?owner)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fictionalCharacter ?characterProfession ?robertLamarThompsonProfession ?bandName WHERE {
  # Find fictional character created by Walter B. Gibson
  ?fictionalCharacter dbo:creator dbr:Walter_B._Gibson .
  
  # Get the profession of this fictional character if applicable
  OPTIONAL { ?fictionalCharacter dbo:profession ?characterProfession . }
  
  # Identify Robert Lamar Thompson as a musician
  dbr:Robert_Lamar_Thompson dbo:profession ?robertLamarThompsonProfession .
  FILTER(?robertLamarThompsonProfession = dbo:Singer)
  
  # Find the band associated with Robert Lamar Thompson
  OPTIONAL { dbr:Robert_Lamar_Thompson dbo:associatedBand ?bandName . }
}
```",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?combatant1URL ?combatant2URL WHERE {
  VALUES ?battle { 
    dbr:Battle_of_Fort_Royal_(1707) 
  }
  OPTIONAL {
    ?battle dbo:combatant1 ?combatant1 .
    BIND(STR(?combatant1) AS ?combatant1URL)
  }
  OPTIONAL {
    ?battle dbo:combatant2 ?combatant2 .
    BIND(STR(?combatant2) AS ?combatant2URL)
  }
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Philip, Despot of Romania
  dbr:Philip_Despot_of_Romania dbo:parent ?parent .
  
  # Ensure the parent is royalty
  ?parent dbo:royalTitle ?title .

  # Find the spouse of the royal parent
  ?parent dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royaltyChild WHERE {
  # Step 1: Identify Archduchess Margarete Sophie's parent
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Step 2: Find a child of this parent who is royalty
  ?child dbo:parent ?parent .
  FILTER (?child != dbr:Margarete_Sophie_of_Austria) .
  ?child rdf:type dbo:Monarch .

  # Step 3: Identify the child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:parent ?philippChildParent .
  ?philippChild ?philippChildProperty ?philippChildParent .

  # Step 4: Find the predecessor of this child
  OPTIONAL {
    ?predecessor dbo:succession ?philippChild .
  }

  # Final filter to ensure we get the correct royalty child who is a predecessor
  FILTER (?child = ?predecessor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  VALUES ?shadowCharacter { dbr:The_Shadow }
  
  ?professional dbo:alterEgo ?shadowCharacter .
  OPTIONAL {
    ?professional dbo:profession ?profession .
    FILTER (
      ?profession IN (dbr:Actor, dbr:Singer)
    )
  }
}
```",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kofiBurbridge WHERE {
  VALUES ?theLiveAnthology { 
    dbr:The_Live_Anthology_(Phish_album) 
  }
  
  ?theLiveAnthology dbo:associatedMusicalArtist ?musicalArtist .
  
  FILTER (?musicalArtist = dbr:Kofi_Burbridge)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ruizGallardonResidence ?rajoyOffice WHERE {
  VALUES ?person {
    dbr:Alberto_Ruiz-Gallardón 
    dbr:Mariano_Rajoy
  }
  
  OPTIONAL {
    ?person dbo:residence ?ruizGallardonResidence .
  }
  
  OPTIONAL {
    ?person dbo:officeLocation ?rajoyOffice .
  }

  FILTER (?person = dbr:Alberto_Ruiz-Gallardón IMPLIES EXISTS { ?person dbo:residence ?ruizGallardonResidence })
  FILTER (?person = dbr:Mariano_Rajoy IMPLIES EXISTS { ?person dbo:officeLocation ?rajoyOffice })
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?sportsClub WHERE {
  VALUES ?player { dbr:Jamie_McCunnie }
  
  ?player dbo:birthPlace dbr:Bristol .
  ?player dbo:manager ?manager .

  ?manager dbo:sportsTeam ?sportsClub .
  FILTER (?sportsClub rdf:type dbo:SoccerClub)
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle ?writtenWorkTitle WHERE {
  VALUES ?author { dbr:Joe_Biden }
  
  OPTIONAL {
    ?book dbo:author ?author .
    ?book rdf:type dbo:Book .
    ?book rdf:type dbo:WrittenWork .
    ?book dbo:country dbr:United_States .
    ?book rdfs:label ?bookTitle .
    FILTER (LANG(?bookTitle) = ""en"")
  }
  
  OPTIONAL {
    ?writtenWork dbo:author ?author .
    ?writtenWork rdf:type dbo:WrittenWork .
    ?writtenWork rdfs:label ?writtenWorkTitle .
    FILTER (LANG(?writtenWorkTitle) = ""en"" && ?writtenWork != ?book)
  }
}
```",4,10,5,2,2,3,2,20,0,1,1,0.0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  VALUES ?player { dbr:Jamie_McCune }
  
  ?player dbo:member ?club .
  ?club a ?type1 .
  FILTER (?type1 IN (dbo:SoccerClub, dbo:SportsTeam))
}
```",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  VALUES ?team { 
    dbr:Lai_Sun_Cheung_F.C. 
  }
  ?team dbo:player ?player .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?societalEvent ?tvShow ?dragoonConnection WHERE {
  # Ferdinand II and his children
  VALUES ?ferdinand { dbr:Ferdinand_II,_Holy_Roman_Emperor }
  
  ?ferdinand dbo:child ?child .
  
  # Child as a commander in the war
  OPTIONAL { ?child dbo:militaryCommanderOf ?command . }

  # Societal event and television show association
  OPTIONAL { ?child dbo:associatedWithSocietalEvent ?societalEvent . }
  OPTIONAL { ?child dbo:appearanceInTVShow ?tvShow . }

  # Connection to the 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?dragoonConnection dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .
    ?child dbo:associatedWithMilitaryUnit ?dragoonConnection .
  }
  
  # Father of another child related to Archduke Charles Joseph
  OPTIONAL { 
    ?child dbo:child ?grandChild .
    ?grandChild dbo:parent ?archdukeParent .
    ?archdukeParent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Rodney_Lees dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorURL ?successorName WHERE {
  # Resource for George Ducas
  VALUES ?georgeDucas { 
    dbr:George_Ducas_(military_officer) 
  }
  
  # Find the successor of George Ducas in a military or political role
  ?georgeDucas dbo:succeededBy ?successor .
  
  # Ensure the successor is also a politician or office holder
  ?successor a dbo:Politician ;
             dbo:officeHolderOf ?office .

  # Return the URL and name of the successor
  ?successor rdfs:label ?successorName .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?paulusPowellBirthPlace ?region ?administrativeRegion ?governor WHERE {
  # Step 1: Find Cece Bell's birth place
  OPTIONAL { 
    dbr:Cecilie_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }

  # Step 2: Find Paulus Powell's birth place
  OPTIONAL { 
    dbr:Paulus_Powell dbo:birthPlace ?paulusPowellBirthPlace .
  }
  
  # Step 3: Identify the region and administrative region for Paulus Powell's birth place
  OPTIONAL {
    ?paulusPowellBirthPlace dbo:region ?region .
    ?paulusPowellBirthPlace dbo:administrativeRegion ?administrativeRegion .
  }

  # Step 4: Find the governor of that region
  OPTIONAL {
    ?administrativeRegion dbo:governor ?governor .
  }
}
```",4,7,5,3,2,3,3,71,0,12043,1,0.0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?elDeafoAuthorBirthPlace ?vinceGilliganBirthPlace WHERE {
  VALUES ?elDeafoAuthor { dbr:C._E._Bell }
  OPTIONAL {
    ?elDeafoAuthor dbo:birthPlace ?elDeafoAuthorBirthPlace .
  }

  VALUES ?vinceGilligan { dbr:Vince_Gilligan }
  OPTIONAL {
    ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Dani_El%C3%A1i_Gal%C3%A1n dbo:nationality ?country .
}
```",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sergioAgüeroTeam ?personName WHERE {
  # Get Sergio Agüero's birthdate and team
  VALUES ?sergioAgüero { dbr:Sergio_Ag%C3%BCero }
  ?sergioAgüero dbo:birthDate ?agüeroBirthDate .
  OPTIONAL {
    ?sergioAgüero dbo:team ?sergioAgüeroTeam .
  }

  # Get Marcelo Sarmiento's birthdate
  VALUES ?marceloSarmiento { dbr:Marcelo_Sarmiento }
  ?marceloSarmiento dbo:birthDate ?sarmientoBirthDate .

  # Find a person who is both a soccer player and manager, born on the same date as Marcelo Sarmiento
  ?person dbo:birthDate ?sarmientoBirthDate .
  ?person dbo:player true .
  ?person dbo:manager true .
  
  # Return the team of Sergio Agüero at his birthdate and the name of the person matching the criteria
  FILTER (?agüeroBirthDate = ?sarmientoBirthDate)
  BIND(?person AS ?personName)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?band WHERE {
  VALUES ?person { dbr:Robert_Lamar_Thompson }
  
  # Find the alter ego of The Shadow
  OPTIONAL {
    ?person rdfs:label ""The Shadow""@en .
    ?person dbo:alias ?alterEgo .
  }

  # Check if this person is part of any band
  OPTIONAL {
    ?person dbo:band ?band .
  }
  
  FILTER (?alterEgo != """")
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Third_Taiwan_Strait_Crisis dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,18,0,0,1.0,1.0,1.0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirdsURL ?kimWilsonBand WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  OPTIONAL {
    dbr:Kim_Wilson dbo:associatedBand ?kimWilsonBand .
  }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty WHERE {
  # Find Patrice Martin-Lalande's resource
  dbr:Patrice_Martin-Lalande dbo:successor ?successor .
  
  # Ensure the successor is a politician
  ?successor rdf:type dbo:Politician .

  # Ensure the successor is French
  ?successor dbo:nationality dbr:France .

  # Get the political party of the successor
  ?successor dbo:party ?successorParty .
}
```",2,4,3,2,1,2,2,9,6,0,0,1.0,1.0,1.0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?glennYoungkinBirthPlace WHERE {
  OPTIONAL { 
    dbr:Cecilie_Bell dbo:birthPlace ?ceceBellBirthPlace .
  }
  OPTIONAL { 
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Child of Roger II of Sicily
  ?childOfRogerII dbo:parent dbr:Roger_II_of_Sicily .
  
  # Spouse of Constance of Burgundy and their child who is a royalty
  ?spouseConstance dbo:spouse dbr:Constance_of_Burgundy .
  ?spouseChild dbo:parent ?spouseConstance .
  ?spouseChild a dbo:Monarch .

  # Child of William I of Sicily who is a royalty and their father
  ?childOfWilliamI dbo:parent dbr:William_I_of_Sicily .
  ?childOfWilliamI a dbo:Monarch .
  ?fatherOfWilliamIChild dbo:child ?childOfWilliamI .

  # Find the individual that satisfies all conditions
  FILTER (?childOfRogerII = ?spouseChild && ?childOfRogerII = ?fatherOfWilliamIChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Charles I of Hungary's father
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  # Father is a royalty (assuming all fathers are royalty in this context)
  ?father rdf:type dbo:Monarch .

  # Spouse of Charles II of Naples
  ?spouse dbo:spouse dbr:Charles_II_of_Naples .

  # Child of Stephen V of Hungary
  ?child dbo:child dbr:Stephen_V_of_Hungary .
  
  # The spouse is the child we are looking for
  FILTER (?spouse = ?child)

  # Parent of this individual (grandparent of Charles I)
  ?child dbo:parent ?parent .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Pablo_Aimar dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?show { 
    dbr:Dispatches_from_Elsewhere_(TV_series) 
  }
  ?show dbo:castMember ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Łódź .
  ?person dbo:nationality dbr:Poland .
  ?person dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(str(?occupation)), ""athlete"")
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Theodor_Heuss dbo:office ?administration .
  ?administration dbo:country ?country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?hometown WHERE {
  VALUES ?personURL { 
    dbr:2_Chainz 
  }
  ?personURL dbo:birthName ""Ackquille Jean Pollard""@en .
  OPTIONAL {
    ?personURL dbo:hometown ?hometown .
  }
  FILTER (?hometown = dbr:College_Park,_Georgia)
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalPerson WHERE {
  # Step 1: Find the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .
  
  # Step 2: Find a child of that spouse who is royalty
  OPTIONAL { ?spouse dbo:child ?royalChild . }
  
  # Step 3: Identify the predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessorMonarch ?predecessor .
  
  # Step 4: Find a child of the predecessor who is royalty and parent of Charles I's father
  OPTIONAL { 
    ?predecessor dbo:child ?royalParent . 
    ?royalParent dbo:parent ?fatherOfCharlesI .
    ?fatherOfCharlesI dbo:spouse ?motherOfCharlesI .
    ?motherOfCharlesI dbo:child dbr:Charles_I_of_Hungary .
  }
  
  # Step 5: Combine the relationships
  FILTER (?royalChild = ?royalParent)
  BIND(?royalChild AS ?finalPerson)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamManager WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person rdf:type dbo:SportsManager .
  
  ?player dbo:playsForTeam dbr:2007–08_VfL_Bochum_season ;
          dbo:managedBy ?person .

  ?team dbr:2007–08_VfL_Bochum_season ;
        dbo:manager ?teamManager .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?book WHERE {
  # Find the spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  # Ensure the spouse is Bill Clinton
  FILTER (?spouse = dbr:Bill_Clinton)
  
  # Find books authored by Bill Clinton
  OPTIONAL {
    ?book a dbo:Book ;
          dbo:author ?spouse .
  }
}
```",3,6,4,2,2,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royBarrerasParty ?sofiaPetrosFatherParty WHERE {
  # Find the political party of Roy Barreras
  OPTIONAL { 
    dbr:Roy_Barreras dbo:party ?royBarrerasParty .
  }
  
  # Find Sofía Petro's father and his political party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?sofiaPetrosFather .
    ?sofiaPetrosFather dbo:party ?sofiaPetrosFatherParty .
  }
}
```",3,3,4,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Smita_Patil dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOffice ?commanderOffice WHERE {
  # Leader of Conservative Republican Party (Spain) who is a tenant of Madrid
  ?person dbo:politicalParty dbr:Conservative_Party_(Spain);
          dbo:officeHolder ?leaderOffice;
          dbo:residence dbr:Madrid.
  
  # Commander in the Central African Republic Civil War who is an office holder and politician
  OPTIONAL {
    ?commander dbo:officeHolder ?commanderOffice;
              dbo:politicalParty ?party;
              dbo:memberOf dbr:Central_African_Republic_Civil_War .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac as a commander in an event (military conflict)
  dbr:Mikołaj_Kazimierz_Pas dbo:commanderOf ?event .
  
  # Successor of Michał Kazimierz Pac
  ?event dbo:commander ?successor .

  # Ensure the successor is a politician and office holder
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder true .
}
```",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoURL ?royalChildURL WHERE {
  # Find The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:alias ?alterEgo .
    ?alterEgo rdfs:label ?alterEgoLabel .
    FILTER(CONTAINS(LCASE(?alterEgoLabel), ""lamb""))
  }
  
  # Identify Yeshaq I's parent who is royalty and a child of this parent
  OPTIONAL {
    dbr:Yeshaq_I dbo:father ?royalParent .
    ?royalChild dbo:parent ?royalParent ;
               rdf:type dbo:Monarch .
    FILTER(?royalChild != dbr:Yeshaq_I)
  }
  
  # Match the alter ego with the royal child
  FILTER (?alterEgo = ?royalChild)
}
```",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Princess Aisha bint Faisal and her parent as royalty
  dbr:Princess_Aisha_bint_Faisal a dbo:RoyalFamilyMember ;
                                dbo:parent ?parent .
  
  # Ensure the parent is also a royal family member
  ?parent a dbo:RoyalFamilyMember .

  # Find Princess Aisha's child who is also a royal family member
  dbr:Princess_Aisha_bint_Faisal dbo:child ?child .
  ?child a dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?shadowCreator dbo:creatorOf dbr:The_Shadow .
  FILTER (?shadowCreator = dbr:Walter_B._Gibson) .

  ?person dbo:alterEgo dbr:The_Shadow .
  
  OPTIONAL {
    ?person dbo:profession dbr:Music_Production .
  }
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .

  # Band members of the associated artist who are also musical artists
  ?associatedArtist dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Filter by birth name
  ?bandMember dbo:birthName dbr:Bobby_Shmurda .

  # Native place conditions
  ?bandMember dbo:nativePlace ?nativePlace .
  
  # Coro de la Pontificia Universidad Católica de Puerto Rico's award region
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  ?award a dbo:Region ;
         a dbo:AmericanState ;
         a dbo:Settlement .

  # Ensure native place matches the award region
  FILTER (?nativePlace = ?award)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonChild WHERE {
  # Roger II's children who are royalty
  VALUES ?rogerII (dbr:Roger_II_of_Sicily) .
  ?childOfRoger dbo:childOf ?rogerII ;
               rdf:type dbo:Monarch .

  # William I's children who are royalty
  VALUES ?williamI (dbr:William_I_of_Sicily) .
  ?childOfWilliam dbo:childOf ?williamI ;
                  rdf:type dbo:Monarch .

  # Find the common child
  FILTER (?childOfRoger = ?childOfWilliam)
  BIND(?childOfRoger AS ?commonChild)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?stuartAssociatedArtist ?billyAssociatedArtist WHERE {
  OPTIONAL {
    dbr:Stuart_McBeath_Tosh dbo:associatedMusicalArtist ?stuartAssociatedArtist .
  }
  OPTIONAL {
    dbr:Billy_Lyall dbo:associatedMusicalArtist ?billyAssociatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?nativeCountry WHERE {
  # Identify VfL Bochum as a sports club and soccer club
  dbr:VfL_Bochum dbo:sport dbr:Soccer .
  
  # Find the manager of VfL Bochum during the 2007-08 season
  ?manager dbo:managedSportTeam dbr:VfL_Bochum ;
           dbo:position ""Manager""@en .

  # Ensure the manager is native to West Germany
  ?manager dbo:nationality dbr:West_Germany .
  
  # Return the manager's name and nationality
  ?manager rdfs:label ?managerName .
  FILTER (LANG(?managerName) = 'en')
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalParent WHERE {
  # Step 1: Maria of Bytom's spouse
  ?mariaSpouse dbo:spouse dbr:Maria_of_Bytom .
  
  # Step 2: Father of Maria of Bytom's spouse
  ?mariaSpouse dbo:father ?mariaSpouseFather .

  # Step 3: Parent (grandfather) of the father of Maria of Bytom's spouse
  ?mariaSpouseFather dbo:father ?royalParent .
  
  # Ensure this person is royalty
  ?royalParent a dbo:Monarch .

  # Step 5: Philip I, Prince of Taranto's father
  ?philipFather dbo:child dbr:Philip_I,_Prince_of_Taranto .
  
  # Step 6: Spouse of Philip I, Prince of Taranto's father
  ?philipFather dbo:spouse ?royalParent .

  # Ensure the same person is found in both relationships
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorLabel WHERE {
  dbr:ATL dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (LANG(?actorLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?bandMemberRole WHERE {
  VALUES ?alias { dbr:2_Chainz }
  
  ?person dbo:birthName ""Ackquille Jean Pollard""@en .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(""2 Chainz"")))

  OPTIONAL {
    ?bandMemberRole dbo:member ?person .
    ?band dbr:Uncle_Murda .
    ?bandMemberRole dbo:band ?band .
  }

  ?person dbo:birthPlace ?placeOfBirth .
  FILTER (CONTAINS(LCASE(?placeOfBirth), LCASE(""Florida"")))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is both a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:position dbr:Soccer_player .
  OPTIONAL { ?person dbo:position dbr:Soccer_manager . }
  
  # Find Marty Pollio's birthdate
  ?martyPollio dbo:birthDate ?martyBirthDate .
  FILTER (str(?martyPollio) = ""Marty_Polloi"")

  # Find an athlete born on Marty Pollio's birthday
  ?athlete dbo:birthDate ?martyBirthDate .
  ?athlete dbo:sport ?sport .

  # Check if this athlete played in the team of the person identified above
  ?person dbo:team ?team .
  ?athlete dbo:team ?team .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?decedent WHERE {
  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Alexander II, Grand Duke of Finland's administration (Finland)
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:countryAdministered dbr:Finland .

  # Find decedents who died in the same place as Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?birthPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucasURL WHERE {
  VALUES ?georgeDucasURL { 
    dbr:George_Ducas 
  }
}
```",1,1,2,1,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Tony_Hollings dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Ferdinand III's children
  VALUES ?ferdinandIII { dbr:Ferdinand_III,_Holy_Roman_Emperor }
  
  ?child dbo:parent ?ferdinandIII .
  
  # Identify the commander in the Algerian War
  ?algerianWar dbo:commander ?commander .
  FILTER (STRSTARTS(STR(?algerianWar), ""http://dbpedia.org/resource/Algerian_War""))

  # Ensure the commander is linked to societal events, general events, and a TV show
  OPTIONAL { ?commander dbo:societalEvent ?societalEvent . }
  OPTIONAL { ?commander dbo:event ?event . }
  OPTIONAL { ?commander dbo:televisionShow ?tvShow . }

  # Ensure the commander is not null in any of these categories
  FILTER (BOUND(?societalEvent) && BOUND(?event) && BOUND(?tvShow))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalPerson WHERE {
  # Step 1: Find Charles II of Naples' spouse
  VALUES ?charlesII { dbr:Charles_II_of_Naples }
  ?charlesII dbo:spouse ?spouseOfCharlesII .

  # Step 2: Find the parent of Charles II's father (grandfather)
  ?charlesI dbo:child ?charlesII .
  ?parentOfCharlesI dbo:child ?charlesI .
  
  # Ensure this person is royalty
  ?parentOfCharlesI a dbo:Monarch .

  # Step 3: Find Maria of Bytom's spouse
  VALUES ?maria { dbr:Maria_of_Bytom }
  ?maria dbo:spouse ?spouseOfMaria .

  # Step 4: Find the child of Maria's spouse
  ?childOfSpouseOfMaria dbo:parent ?spouseOfMaria .
  
  # Ensure this person is royalty
  ?childOfSpouseOfMaria a dbo:Monarch .

  # Step 5: Find Béla IV of Hungary's child
  VALUES ?belaIV { dbr:Béla_IV_of_Hungary }
  ?belaIV dbo:child ?childOfBelaIV .

  # Step 6: Find the grandchild of Béla IV's child
  ?grandChildOfChildOfBelaIV dbo:parent ?childOfBelaIV .
  
  # Ensure this person is royalty
  ?grandChildOfChildOfBelaIV a dbo:Monarch .

  # Step 7: Match all conditions to find the final person
  FILTER (?parentOfCharlesI = ?childOfSpouseOfMaria)
  FILTER (?childOfSpouseOfMaria = ?grandChildOfChildOfBelaIV)

  BIND(?parentOfCharlesI AS ?finalPerson)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  ?commander a dbo:OfficeHolder ;
             dbo:office ""Commander"" ;
             dbo:heldByPositionDuringEvent dbr:Korean_War .
  
  ?work dbo:author ?commander ;
        rdf:type dbo:WrittenWork, dbo:CreativeWork .

  ?commander foaf:name ?authorName .
}
```",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?shadowProfessionalIdentity ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?smartbombBook dbo:author ?author .
  ?author rdfs:label ?authorName .

  FILTER(CONTAINS(LCASE(?authorName), ""smartbomb""))

  # Find the professional identity associated with The Shadow
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  ?shadowAlterEgo dbo:profession ?shadowProfessionalIdentity .

  # Find an actor who is connected to both entities through a movie
  OPTIONAL {
    ?movie dbo:starring ?actor .
    ?author dbo:filmography ?movie .
    ?shadowProfessionalIdentity dbo:filmography ?movie .
  }
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember WHERE {
  VALUES ?phantomsmasher { dbr:Phantomsmasher }
  
  ?phantomsmasher dbo:associatedMusicalArtist ?associatedArtist .
  
  FILTER (?associatedArtist != ?phantomsmasher)
  
  ?associatedArtist rdf:type dbo:Band ;
                   rdf:type dbo:Group ;
                   rdf:type dbo:Organization .

  ?reference dbr:Burnt_by_the_Sun dbo:reference ?associatedArtist .
  
  ?bandMember dbo:memberOf ?associatedArtist .
}
```",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Get Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?bobBirthName .

  # Get Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Find a person with the same birth name as Bob Thompson and the same profession as Sam Concepcion
  ?person dbo:birthName ?bobBirthName .
  ?person dbo:profession ?samProfession .
  
  # Ensure this person is a musical artist
  ?person rdf:type dbo:MusicalArtist .

  # Find the band associated with this person
  ?person dbo:associatedBand ?band .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfSpouse WHERE {
  # Duke Anthony Ulrich of Brunswick and his spouse who is royalty
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:spouse ?spouse .
  
  # Ensure the spouse is a member of royalty
  ?spouse rdf:type dbo:RoyalFamily .

  # Find the child of this spouse
  ?spouse dbo:child ?childOfSpouse .

  # Check if this child is married to Prince Augustus William of Prussia
  ?childOfSpouse dbo:spouse dbr:Prince_Augustus_William_of_Prussia .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?christianIXReignStart ?christianIXReignEnd ?territory WHERE {
  # Find Christian IX and his reign period
  dbr:Christian_IX_of_Denmark dbo:reign ?christianIXReignStart .
  OPTIONAL { 
    dbr:Christian_IX_of_Denmark dbo:endsReign ?christianIXReignEnd .
  }
  
  # Identify territories administered from Copenhagen (Denmark)
  ?territory dbo:country dbr:Denmark ;
             dbo:administrativeRegion dbr:Copenhagen .

  FILTER (?christianIXReignStart <= NOW() && OPTIONAL(?christianIXReignEnd >= NOW()))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administeredTerritory WHERE {
  # Find death place of Christian Ditlev Ammentorp Hansen
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find territories administered by Christian IX from this location
  OPTIONAL {
    dbr:Christian_IX_of_Denmark dbo:ruledTerritory ?administeredTerritory .
    
    # Assuming there's a property linking the territory to its administration center
    ?administeredTerritory dbo:administrativeCenter ?deathPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?soccerClub WHERE {
  dbr:Denis_Kolodin dbo:team ?soccerClub .
  FILTER (STRSTARTS(STR(?soccerClub), ""http://dbpedia.org/resource/"") && 
          STRCONTAINS(LCASE(STR(?soccerClub)), ""footballclub""))
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Denis_Kolodin dbo:alias ?nickname .
  OPTIONAL {
    ?club a dbo:SoccerClub ;
          rdfs:label ?nickname .
    FILTER (lang(?nickname) = ""en"")
  }
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?pickettsChargeURL ?commander ?republicanPartyMember WHERE {
  VALUES ?pickettsChargeURL { 
    dbr:Pickett's_Charge 
  }
  ?pickettsChargeURL dbo:commander ?commander .
  
  OPTIONAL {
    ?republicanPartyMember dbo:partyAffiliation dbr:Republican_Party_(United_States) .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonChild ?predecessor WHERE {
  # Find children of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht dbo:child ?child1 .
  VALUES ?philippAlbrecht { dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg }

  # Find children of Albrecht, Duke of Württemberg
  ?albrecht dbo:child ?child2 .
  VALUES ?albrecht { dbr:Albrecht,_Duke_of_W%C3%BCrttemberg }

  # Identify a common child
  FILTER (?child1 = ?child2)
  BIND(?child1 AS ?commonChild)

  # Find the predecessor (parent) of this common child
  ?commonChild dbo:parent ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Vince_Gilligan dbo:recipient ?award .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```
# Unable to construct a SPARQL query due to lack of specific entities or context in the question.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?war ?deathPlace WHERE {
  # Find the death place of Antonios Varthalitis
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbp:Settlement .

  # Identify any war involving Napoleon and Zervas
  OPTIONAL {
    ?war dbo:participatedIn [
      dbo:participant dbr:Napoleon ;
      dbo:participant dbr:Nikolaos_Zervas
    ] .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?georgeDucas WHERE {
  VALUES ?yuriiKhmelnytsky { dbr:Yurii_Khmelnytsky }
  
  ?yuriiKhmelnytsky dbo:successor ?successor .
  
  OPTIONAL {
    ?georgeDucas a dbo:Person ;
                 rdfs:label ""George Ducas""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?residence ?office WHERE {
  VALUES ?person { 
    dbr:Alberto_Ruiz-Gallardón 
    dbr:Miguel_Maura 
  }
  
  OPTIONAL {
    ?person dbo:residence ?residence .
  }
  
  OPTIONAL {
    ?person dbo:officeLocation ?office .
  }
}
```",3,3,4,2,2,3,3,71,0,4,1,0.0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?tenant WHERE {
  # Mariano Rajoy's political role in 2003
  ?marianoRajoy dbo:positionHeld ?office .
  ?office dbo:startDate ?startDate .
  FILTER (YEAR(?startDate) <= 2003 && YEAR(?office.dbo:endDate) >= 2003)
  
  # Residence associated with the office
  ?office dbo:location ?residence .

  # Tenant of the residence who is an office holder
  ?tenant dbo:residence ?residence .
  ?tenant a dbo:OfficeHolder .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?award WHERE {
  VALUES ?academy { dbr:Royal_Swedish_Academy_of_Sciences }
  
  # Find the show associated with the Royal Swedish Academy of Sciences
  ?academy dbo:prize ?nobelPrize .
  ?nobelPrize dbo:announcedAt ?show .

  # Find the award Max Born received
  dbr:Max_Born dbo:awards ?award .
  
  FILTER (?award = ?nobelPrize)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?songActor ?albumActor WHERE {
  # Find T.I.'s song that is a musical work
  VALUES ?tiSong { 
    dbr:Whatever_Ya_Think_I_Am (replace_with_actual_song_resource)
  }
  
  # Find the album of this song
  ?tiSong dbo:album ?album .
  
  # Find the movie associated with this album
  OPTIONAL {
    ?album dbo:featuredIn ?movie .
    
    # Get actors from the movie
    ?movie dbo:actor ?albumActor .
  }
  
  # Find the actor of the movie related to T.I.'s song
  OPTIONAL {
    ?tiSong dbo:lyricist dbr:T.I. ;
            dbo:associatedMusicalWork ?musicalWork .
    
    ?musicalWork dbo:featuredIn ?movie2 .
    
    ?movie2 dbo:actor ?songActor .
  }
}
```",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?georgeDucasRole ?jeanBaptistEvent WHERE {
  # Russo-Polish War (1654–1667)
  VALUES ?war { dbr:Russo-Polish_War_(1654%E2%80%931667) }
  
  # Commanders in the war who are politicians or office holders
  ?commander dbo:commanderOf ?war .
  ?commander a dbo:Politician ;
             dbo:officeHolder ?office .

  # Successor of the commander
  OPTIONAL {
    ?successor dbo:successorOf ?commander .
  }

  # Reference to George Ducas
  OPTIONAL {
    dbr:George_Ducas dbo:role ?georgeDucasRole .
  }
  
  # Reference to Jean Baptist, Comte d'Arco in a television show and societal event
  OPTIONAL {
    dbr:Jean_Baptist_Comte_d%27Arco dbo:associatedWith ?jeanBaptistEvent .
    FILTER (CONTAINS(LCASE(STR(?jeanBaptistEvent)), ""television"") || CONTAINS(LCASE(STR(?jeanBaptistEvent)), ""societal event""))
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?tripleXs a dbo:MilitaryUnit ;
            dbo:participatedIn ?war .
  
  ?calder a dbo:Person ;
          dbo:participatedIn ?event .

  OPTIONAL { 
    ?war dbo:commander ?commander .
  }

  FILTER (?tripleXs = ?calderEvent)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Der Blau""@en .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfRenee ?paternalGrandmother WHERE {
  # Find Renée of Bourbon's spouse
  dbr:Renée_of_Bourbon dbo:spouse ?spouseOfRenee .
  
  # Identify Dorothea of Lorraine and her father
  dbr:Dorothea_of_Lorraine dbo:parent ?fatherOfDorothea .

  # Find the paternal grandmother (mother of Dorothea's father)
  ?fatherOfDorothea dbo:parent ?paternalGrandmother .
  
  # Match the spouse of Renée with the paternal grandmother
  FILTER (?spouseOfRenee = ?paternalGrandmother)
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for commander of French Campaign in Egypt and Syria
SELECT ?commander WHERE {
  dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
}

UNION

# Query for military force involved in Battle of Cape Finisterre (1805)
SELECT ?militaryForce WHERE {
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryForce ?militaryForce .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a foaf:Person .
  ?person foaf:givenName ""Richard"" .
  ?person foaf:middleName ""Grant"" .
  ?person foaf:familyName ""Esterhuysen"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the award associated with Ian Gregson
  dbr:Ian_Gregson dbo:award ?award .

  # Identify Linda Bruckheimer's spouse
  OPTIONAL { 
    dbr:Linda_Bruckheimer dbo:spouse ?lindaSpouse .
  }

  # Find a movie that won the award and is connected to Linda Bruckheimer's spouse
  ?movie dbo:award ?award ;
         dbo:producer ?producer .

  FILTER (?lindaSpouse IN (dbr:Don_Bruckheimer, dbr:Jerry_Bruckheimer)) 
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?konstantinosVentirisWar ?nationalPartyLeaderWar ?athensEntity WHERE {
  # Find wars associated with Konstantinos Ventiris
  OPTIONAL {
    dbr:Konstantinos_Ventiris dbo:associatedWith ?konstantinosVentirisWar .
  }
  
  # Identify the leader of the National Party of Greece and their associated wars
  OPTIONAL {
    ?nationalPartyLeader a dbo:PoliticalParty ;
                        dbo:leader ?person ;
                        rdfs:label ""National Party of Greece""@en .
    ?person dbo:associatedWith ?nationalPartyLeaderWar .
  }
  
  # Find entities related to Athens involved in these contexts
  OPTIONAL {
    ?athensEntity dbo:location dbr:Athens ;
                  (dbo:associatedWith|dbo:placeOfBirth) ?konstantinosVentirisWar ;
                  (dbo:associatedWith|dbo:placeOfBirth) ?nationalPartyLeaderWar .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }
  VALUES ?minHlaHtut { dbr:Min_Hla_Htut_of_Pyakaung }
  VALUES ?myatHponePyo { dbr:Myat_Hpone_Pyo }

  ?spouse dbo:spouse ?sawShweKhet .
  
  OPTIONAL {
    ?parent dbo:child ?minHlaHtut .
    ?spouse dbo:child ?parent .
  }
  
  OPTIONAL {
    ?myatHponePyo dbo:predecessor ?spouse .
  }

  FILTER EXISTS { ?spouse dbo:spouse ?sawShweKhet }
  FILTER EXISTS { ?parent dbo:child ?minHlaHtut . ?spouse dbo:child ?parent }
  FILTER EXISTS { ?myatHponePyo dbo:predecessor ?spouse }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Find children of Allan Arbus
  OPTIONAL { 
    dbr:Allan_Arbus dbo:child ?allanChild .
    ?allanChild dbo:parent ?parentOfChild .
  }
  
  # Find children of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:child ?amyChild .
    ?amyChild dbo:parent ?parentOfChild .
  }
}
```",3,3,4,2,2,3,3,71,2,0,0,1.0,1.0,1.0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse rdf:type dbo:Monarch .

  # Find the child of this royal spouse
  ?spouse dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  ?commander dbo:officeHolder [
    a dbo:Office ;
    dbo:positionHeldBy ?person ;
    dbo:organization dbr:North_Carolina_Air_National_Guard
  ] .
  
  ?work dbo:author ?commander ;
        a dbo:Work, dbo:WrittenWork, dbo:Book ;
        dbo:country dbr:United_States .

  ?commander rdfs:label ?authorName .
}
```",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?amdaseyonURL WHERE {
  VALUES ?shadowAlterEgo { 
    dbr:Lamont_Cranston 
  }
  
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  
  ?amdaseyonURL dbo:father dbr:Na'od .
  ?amdaseyonURL dbo:royalty true .
  ?amdaseyonURL dbo:officeHolder true .
  
  FILTER (?amdaseyonURL = dbr:Amda_Seyon_I)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Peter IV of Aragon
  dbr:Peter_IV_of_Aragon dbo:parent ?father .

  # Find the children of his father
  ?father dbo:child ?child .

  # Filter for those with a royal title
  ?child dbo:royalTitle ?title .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonChild ?societalEvent ?tvShow WHERE {
  # Find the father of Cecilia Renata of Austria
  ?ceciliaRenata dbo:child dbr:Cecilia_Renata_of_Austria .
  ?father dbo:child ?ceciliaRenata .

  # Find the child of Ferdinand III who was a commander in the war
  ?ferdinandIIIChild dbo:child dbr:Ferdinand_III,_Holy_Roman_Emperor ;
                    dbo:occupation dbr:Commander_in_the_War .

  # Identify their common child
  ?commonChild dbo:father ?father .
  ?commonChild dbo:father ?ferdinandIIIChild .

  # Check if this individual is linked to a societal event and a television show related to the 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?societalEvent dbo:relatedEntity ?commonChild ;
                  rdf:type dbo:SocietalEvent .
  }
  OPTIONAL {
    ?tvShow dbo:relatedEntity ?commonChild ;
            rdf:type dbo:TelevisionShow ;
            dbo:associatedWith dbr:2nd_Dragoon_Regiment_(France) .
  }

  FILTER EXISTS { ?societalEvent } && EXISTS { ?tvShow }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Back_to_Work_(book) dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?glennYoungkinBirthPlace WHERE {
  VALUES ?authorResource { dbr:Cecily_Ann_Bell }
  VALUES ?glennYoungkinResource { dbr:Glenn_Youngkin }

  OPTIONAL {
    ?authorResource dbo:birthPlace ?authorBirthPlace .
  }
  
  OPTIONAL {
    ?glennYoungkinResource dbo:birthPlace ?glennYoungkinBirthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:playerForTeam ?team .
  
  # Find the person born on 1979-11-03 who is both a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

  # Ensure the team of Juan Carlos Molina matches with this person's team
  OPTIONAL { ?person dbo:playerForTeam ?team }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Bruno_Retailleau rdf:type dbo:Politician .
  dbr:Bruno_Retailleau dbo:officeHolder ?office .
  dbr:Bruno_Retailleau dbo:party ?party .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  VALUES ?party { dbr:Spanish_Socialist_Workers'_Party }
  
  ?administration dbo:politicalParty ?party .
  ?administration dbo:headOfGovernment ?tenant .
  
  OPTIONAL {
    ?tenant dbo:headOfState dbr:Spain .
  }

  FILTER EXISTS { ?tenant dbo:headOfState dbr:Spain . }
}
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBellBirthPlace ?awardeeBirthPlace WHERE {
  # Part 1: Birthplace of Cece Bell
  dbr:Cecilie_Ann_Bell_III dbo:birthPlace ?ceceBellBirthPlace .

  # Part 2: Awardee from an award associated with Vince Gilligan's work
  OPTIONAL {
    # Example: Using ""Breaking Bad"" and its awards
    dbr:Breaking_Bad dbo:awardReceived dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series .
    
    # Find a notable awardee of the Emmy Award for Outstanding Drama Series
    ?awardee dbo:awardReceived dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?fabulousThunderbirdsURL ?nickCurranAssociatedArtist ?bandMemberBand WHERE {
  VALUES ?fabulousThunderbirdsURL { 
    dbr:The_Fabulous_Thunderbirds 
  }
  
  OPTIONAL {
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }

  OPTIONAL {
    ?person rdf:type dbo:Musician ;
            dbo:birthDate ""1945-03-30""^^xsd:date ;
            dbo:memberOfBand ?bandMemberBand .
  }
  
  FILTER (?fabulousThunderbirdsURL = ?nickCurranAssociatedArtist || ?fabulousThunderbirdsURL = ?bandMemberBand)
}
```",5,6,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Step 1: Identify actor associated with ""High Society Blues""
  ?actor dbo:starringIn dbr:High_Society_Blues .
  
  # Step 2: Find the claim to fame (movie/work) of this actor
  ?claimToFame dbo:starring ?actor ;
               a dbo:Film .

  # Step 3: Retrieve the producer of this movie/work
  ?claimToFame dbo:producer ?producer .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Saw Shwe Khet
  VALUES ?sawShweKhet { dbr:Saw_Shwe_Khet }

  # Find children of Saw Shwe Khet who are royalty
  ?child dbo:parent ?sawShweKhet .
  ?child rdf:type dbo:Monarch .

  # Determine the father of that royal child
  ?child dbo:parent ?father .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find movies with Herschel Bernardi
  VALUES ?herbMovie { 
    ?movieHerschelBernardi .
  }
  dbr:Herschel_Bernardi dbo:actedIn ?herbMovie .

  # Find Eugène Cattin's profession and his parent
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
  ?parent foaf:parent dbr:Eugène_Cattin .

  # Find movies with the parent of Eugène Cattin
  VALUES ?parentMovie { 
    ?movieParent .
  }
  ?parent dbo:actedIn ?parentMovie .

  # Find common movie between Herschel Bernardi and the parent of Eugène Cattin
  FILTER (?herbMovie = ?parentMovie)

  # Get actors from this common movie
  ?commonMovie dbo:actor ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfParent WHERE {
  # Dorothea of Denmark, Electress Palatine
  VALUES ?dorothea { dbr:Dorothea_of_Denmark_(1574-1639) }
  
  # Find her parent(s)
  ?parent dbo:child ?dorothea .
  
  # Ensure the parent is a child of Maximilian I, Holy Roman Emperor
  ?parent dbo:child dbr:Maximilian_I,_Holy_Roman_Emperor .

  # Find the father of this parent
  ?parent dbo:father ?fatherOfParent .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  dbr:The_Fabulous_Thunderbirds dbo:officialName ?realName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?rodArgentProfession ?joeyBBirthName ?elormAssociatedArtist WHERE {
  # Find Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?rodArgentProfession .
  
  # Find Joey B's birth name
  dbr:Joey_B foaf:name ?joeyBBirthName .

  # Find Elorm Kabu Amenyah and his associated musical artist
  OPTIONAL {
    dbr:Elorm_Kabu_Amenyah dbo:associatedMusicalArtist ?elormAssociatedArtist .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Find Allan Arbus's child
  ?allanArbusChild dbo:childOf dbr:Allan_Arbus .
  
  # Find the parent of Allan Arbus's child
  ?allanArbusChild dbo:parent ?parentOfChild .

  # Find a professional in Photographer
  ?photographer dbo:profession dbr:Photography .

  # Find the parent of this photographer
  ?photographer dbo:parent ?parentOfPhotographer .

  # Check if they have the same parent
  FILTER (?parentOfChild = ?parentOfPhotographer)
  
  BIND(?parentOfChild AS ?commonParent)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Princess Muna al-Hussein's children who are royals
  ?child dbo:child dbr:Princess_Muna_al-Hussein .
  ?child rdf:type dbo:RoyalFamilyMember .

  # Parent of the royal child
  ?parent dbo:child ?child .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Apache_Indian dbo:work ?work .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonProducer WHERE {
  # Find the movie Johnny Doughboy starred in and its producer
  ?movie1 dbo:starring dbr:Johnny_Doughboy .
  ?movie1 dbo:producer ?producer1 .

  # Find the movie Janet Gaynor starred in and produced, and its producer
  ?movie2 dbo:starring dbr:Janet_Gaynor ;
          dbo:producer ?producer2 .

  FILTER (?producer1 = ?producer2)
  
  BIND(?producer1 AS ?commonProducer)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?tvSeries a dbo:TelevisionShow ;
            dbo:basedOn dbr:The_Shadow_(comics) ;
            dbo:actor dbr:Richard_E._Grant .
  
  ?character dbo:alterEgo dbr:The_Shadow_(video_game) ;
             dbo:profession dbr:Actor .

  FILTER (?tvSeries = ?character)
}
```",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nobelPrizeInPhysicsURL WHERE {
  VALUES ?nobelPrizeInPhysicsURL { 
    dbr:Nobel_Prize_in_Physics 
  }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?juanCarlosPlayer ?allOrNothingAthlete ?marceloSarmientoPerson WHERE {
  # Find players associated with Juan Carlos Molina
  OPTIONAL {
    dbr:Juan_Carlos_Molina_(footballer) dbo:player ?juanCarlosPlayer .
  }
  
  # Identify the soccer player who is an athlete in All or Nothing: Manchester City
  OPTIONAL {
    dbr:All_or_Nothing:_Manchester_City dbo:athlete ?allOrNothingAthlete .
    FILTER (dbo:sport(?allOrNothingAthlete) = dbr:Soccer)
  }
  
  # Find a person born on Marcelo Sarmiento's birthday who is both a soccer player and manager
  OPTIONAL {
    dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .
    ?person dbo:birthday ?marceloSarmientoBirthday ;
            (dbo:soccerPlayer | dbo:manager) ?role .
    FILTER (?role != ?person)
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInEgyptSyria ?militaryForceOfCampaign ?baynesMilitaryConflict WHERE {
  VALUES ?calder { dbr:Robert_Calder }
  
  # Find the military force commanded by Robert Calder in the French campaign in Egypt and Syria
  ?militaryForce dbo:commander ?calder .
  ?militaryForce dbo:militaryConflict ?campaignInEgyptSyria .
  FILTER (strstarts(str(?campaignInEgyptSyria), ""French_campaign_in_Egypt_and_Syria""))

  # Find William Bayne's military conflict
  VALUES ?bayne { dbr:William_Bayne_(Royal_Navy_officer) }
  ?baynesMilitaryConflict dbo:militaryConflict ?conflict .
  ?baynesMilitaryConflict dbo:commander ?bayne .

}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?humanRemainsURL WHERE {
  VALUES ?phantomsmasher { 
    dbr:Phantomsmasher 
  }
  ?phantomsmasher dbo:associatedMusicalArtist ?humanRemains .
  FILTER (?humanRemains = dbr:Human_Remains_(band))
}
```",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peterIVURL WHERE {
  VALUES ?peterIVURL { 
    dbr:Peter_IV_of_Aragon 
  }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName WHERE {
  ?battle dbo:partOf ?war .
  ?war rdfs:label ""Great Turkish War""@en .
  ?battle dbo:commander ?commander .
  ?commander rdfs:label ?commanderName .
  FILTER(CONTAINS(LCASE(?commanderName), ""john iii sobieski""))
}
```",3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?floridaNative ?ackquillePollard WHERE {
  # Find a person native to Florida
  ?floridaNative dbo:nativePlace dbr:Florida .
  
  # Find Ackquille Jean Pollard by birth name
  ?ackquillePollard foaf:name ""Ackquille Jean Pollard""@en .

  # Return both results
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild ?commonFather WHERE {
  # Maria Anna of Bavaria's children
  ?mariaAnnaChild dbo:childOf dbr:Maria_Anna_of_Bavaria_(1574-1616) .
  
  # Father of Maria Anna's child (her spouse)
  ?mariaAnnaSpouse dbo:spouse ?mariaAnnaChild .
  
  # Check if the child is royalty
  ?mariaAnnaChild a dbo:RoyalFamily .

  # Ferdinand III's children
  ?ferdinandIIIChild dbo:childOf dbr:Ferdinand_III,_Holy_Roman_Emperor .

  # Common father (spouse of Maria Anna and father of Ferdinand III's child)
  FILTER (?mariaAnnaSpouse = ?commonFather)

  # The royal child we are interested in
  ?royalChild dbo:childOf ?commonFather .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (SAMPLE(?occupation) AS ?sharedOccupation)
WHERE {
  VALUES ?samConcepcion { dbr:Sam_Concepcion }
  
  ?samConcepcion dbo:occupation ?samConcepcionOccupation .
  
  OPTIONAL {
    ?person dbo:occupation ?occupation .
    FILTER (?person != ?samConcepcion && ?occupation = ?samConcepcionOccupation)
  }
}
GROUP BY ?person
HAVING (COUNT(?sharedOccupation) > 0)
```",2,2,3,2,1,3,3,71,0,0,45131,0,0.0,0
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?santiagoTenant ?spainTenant WHERE {
  # Find the tenant of Santiago de Compostela
  OPTIONAL {
    dbr:Santiago_de_Compostela dbo:headquarter ?santiagoTenant .
  }
  
  # Find the tenant (government) of Spain
  OPTIONAL {
    dbr:Spain dbo:country ?spainTenant .
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowRealName ?actorRealName WHERE {
  # Find the professional identity of The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?shadowRealName .
  }
  
  # Find a real name associated with an actor
  OPTIONAL {
    ?actor dbo:type dbr:Actor ;
           dbo:birthName ?actorRealName .
  }
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  dbr:Brian_Kemp dbo:positionHeld ?position .
  ?position dbo:organization ?institution .
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Prince Faisal bin Hussein's resource
  dbr:Prince_Faisal_bin_Hussein dbo:child ?child .
  
  # Ensure the child has a royalty title
  ?child dbo:royaltyTitle ?title .

  # Identify the parent of this royal child
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual WHERE {
  # Find child of Archduchess Margarete Sophie of Austria
  ?margareteSophie dbo:child ?individual .
  FILTER (?margareteSophie = dbr:Margarete_Sophie_of_Austria)

  # Find predecessor of Carl, Duke of Württemberg
  ?carlDuke dbo:predecessor ?individual .
  FILTER (?carlDuke = dbr:Carl,_Duke_of_W%C3%BCrttemberg)

  # Find child of Albrecht, Duke of Württemberg
  ?albrechtDuke dbo:child ?individual .
  FILTER (?albrechtDuke = dbr:Albrecht,_Duke_of_W%C3%BCrttemberg)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find productions associated with Afeez Oyetoro
  ?production dbo:starringRole dbr:Afeez_Oyetoro .
  
  # Ensure the production is both a movie and originally a TV show
  ?production rdf:type dbo:Film .
  OPTIONAL { 
    ?production dbo:basedOn ?tvShow .
    ?tvShow rdf:type dbo:TelevisionSeries .
  }
  
  # Find actors of this specific production
  ?production dbo:actor ?actor .
}
```",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Stephen V of Hungary's child
  dbr:Stephen_V_of_Hungary dbo:child ?individual .
  
  # Individual is a parent of Charles Martel of Anjou
  ?individual dbo:parent dbr:Charles_Martel_of_Anjou .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?series dbo:actor ?actor .
  FILTER(STRSTARTS(STR(?series), STR(dbr:All_or_Nothing:_Manchester_City)))

  # Ensure the actor is a soccer player and an athlete
  ?actor dbo:soccerPlayer true .
  ?actor dbo:athlete true .

  # Find teams that include both the actor and Pablo Aimar
  ?team dbo:member ?actor .
  ?team dbo:member dbr:Pablo_Aimar .

  # Match birthdate with Marty Pollio's birthdate
  ?actor dbo:birthday ?birthdate .
  {
    SELECT DISTINCT ?birthdate WHERE {
      dbr:Marty_Pollio dbo:birthday ?birthdate .
    }
  }

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?uncleMurda { dbr:Uncle_Murda }
  
  ?person dbo:bandMember ?uncleMurda .
  ?person dbo:birthPlace ?floridaLocation .
  
  FILTER (
    str(?floridaLocation) = ""Florida"" ||
    ( ?floridaLocation a dbo:AdministrativeRegion ; 
      dbo:country dbr:United_States_of_America ;
      rdfs:label ""Florida""@en
    )
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfRoyalParent WHERE {
  # Step 1: Identify Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?child .

  # Step 2: Find the parent of this child
  ?child dbo:parent ?grandChildParent .

  # Step 3: Check if this grandchild's parent is royalty
  OPTIONAL { 
    ?grandChildParent dbo:royaltyTitle ?title .
  }

  FILTER EXISTS { ?grandChildParent dbo:royaltyTitle ?title } 

  # Step 4: Find the child of this royal parent
  ?grandChildParent dbo:child ?childOfRoyalParent .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samConcepcionProfession ?bobThompsonsBand WHERE {
  # Get Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samConcepcionProfession .
  
  # Find Bob Thompson by birth name and get his associated band
  ?person dbo:birthName ""Bob Thompson"" ;
          rdf:type dbo:MusicalArtist ;
          dbo:associatedBand ?bobThompsonsBand .

  # Ensure the band is a musical artist
  ?bobThompsonsBand rdf:type dbo:MusicalArtist .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalIdentity ?lexBarkerMovie WHERE {
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?professionalIdentity .
  
  # Identify Richard Grant Esterhuysen (Lex Barker)
  VALUES ?lexBarker { dbr:Lewis_L._""Lex""_Barker }
  ?lexBarker dbo:birthName ""Richard Grant Esterhuysen""@en .

  # Find movies Lex Barker acted in that are also television shows
  ?lexBarker dbo:actor ?lexBarkerMovie .
  ?lexBarkerMovie a dbo:Film .
  
  OPTIONAL {
    ?lexBarkerMovie dbo:adaptationOf ?tvShow .
    FILTER EXISTS { ?tvShow a dbo:TelevisionSeries }
  }
}
```",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Billy_Lyall dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Find the child of Frederick Stanley, 16th Earl of Derby
  ?child dbo:childOf dbr:Frederick_Stanley,_16th_Earl_of_Derby .
  
  # Find the parent of this child
  ?parent1 rdfs:subClassOf* ?child .

  # Find an awardee of Commander of the Royal Victorian Order and their parent
  ?awardee dbo:CommanderOfTheRoyalVictorianOrder true .
  ?parent2 rdfs:subClassOf* ?awardee .

  # Check for a common parent
  VALUES ?commonParent { ?parent1 ?parent2 }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workURL WHERE {
  ?person a dbo:Artist ;
          dbo:musicalArtist true ;
          dbo:dateOfDeath ?deathDate .
  
  FILTER (STR(?deathDate) = ""2020-06-18""^^xsd:date)
  
  OPTIONAL { 
    ?work dbo:artist ?person .
    ?work a ?type .
    FILTER (?type IN (dbo:Film, dbo:TelevisionSeries))
  }
  
  BIND(URI(CONCAT(""http://dbpedia.org/resource/"", STR(?work))) AS ?workURL)
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player dbr:Jamie_McCunnie .
  ?player dbo:playerFor ?club .
  
  ?club a dbo:SportsTeam ;
        a dbo:Club .

  OPTIONAL { 
    ?club dbo:manager ?manager .
  }
}
```",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:George_Hamilton_Cameron dbo:receivedAward ?award .
}
```",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  VALUES ?manuelHuerga { dbr:Manuel_Huerga }
  ?film dbo:director ?manuelHuerga .
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantLocation ?officeHeld WHERE {
  VALUES ?santiagoCompostela { dbr:Santiago_de_Compostela }
  
  OPTIONAL {
    ?tenantLocation dbo:location ?santiagoCompostela .
  }

  VALUES ?anxoQuintana { dbr:Anxo_Quintana }
  ?anxoQuintana dbo:officeHolder ?officeHeld .

  FILTER EXISTS {
    ?officeHeld dbo:city ?santiagoCompostela .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?antoine { dbr:Antoine,_Duke_of_Lorraine }
  
  ?antoine dbo:child ?child .
  ?child dbo:royalTitle ?title .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist dbo:bandMember ?bandMember .
  FILTER EXISTS { ?bandMember a dbo:MusicalArtist . }
}
```",2,3,3,2,1,3,3,71,1,1,6,0.5,0.14285714285714285,0.22222222222222224
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Birthplaces of Paulus Powell, Vince Gilligan, and Cece Bell
  VALUES ?person { 
    dbr:Paulus_Powell 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
  }
  
  ?person dbo:birthPlace ?region .
  
  # Find the governor of each region
  OPTIONAL {
    ?region dbo:governor ?governor .
    
    # Get the birthplace of each governor
    ?governor dbo:birthPlace ?governorBirthPlace .
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nobelPrizeInPhysicsURL ?awardee WHERE {
  VALUES ?nobelPrizeInPhysicsURL { 
    dbr:Nobel_Prize_in_Physics 
  }
  ?nobelPrizeInPhysicsURL dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the spouse of Archduchess Helena of Austria
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .

  # Find a child of this spouse who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Find the predecessor (parent) of this royal child
  ?royalChild dbo:parent ?predecessor .

  # Ensure the royal child is also a child of Archduchess Margarete Sophie
  OPTIONAL {
    dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?royalChild .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfIndia ?indianWork WHERE {
  VALUES ?jamsetjiTata { dbr:Jamsetji_Tata }
  
  ?jamsetjiTata dbo:birthPlace ?nativeOfIndia .
  FILTER (STRSTARTS(STR(?nativeOfIndia), ""http://dbpedia.org/resource/Category:People_from_""))

  OPTIONAL {
    ?jamsetjiTata dbo:knownFor ?indianWork .
    FILTER (STRSTARTS(STR(?indianWork), ""http://dbpedia.org/resource/Category:""))
  }
}
```",3,4,4,2,2,2,2,9,0,0,21,0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(?occupation), ""politician"")
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
          a dbo:Athlete .
  
  ?actor dbo:soccerPlayer true ;
         dbo:athlete true ;
         dbo:actor true ;
         dbo:work dbr:All_or_Nothing:_Manchester_City .

  FILTER (?person = ?actor)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Stuart_McBeath_Tosh rdf:type dbo:MusicalArtist .
  dbr:Stuart_McBeath_Tosh dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFerdinandII WHERE {
  VALUES ?ferdinandII { dbr:Ferdinand_II,_Holy_Roman_Emperor }
  VALUES ?ferdinandIII { dbr:Ferdinand_III,_Holy_Roman_Empire }

  ?childOfFerdinandII dbo:child ?ferdinandII .
  
  OPTIONAL {
    ?childOfFerdinandII dbo:father ?parentOfChildOfFerdinandIII .
    ?parentOfChildOfFerdinandIII dbo:child ?childOfFerdinandIII .
    FILTER (?childOfFerdinandIII = ?ferdinandIII)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Linda_Miller dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobThompsonBirthName ?shadowAlterEgo ?bandOfBobThompson WHERE {
  # Find the birth name of Bob Thompson (musician)
  dbr:Bob_Thompson_(musician) dbo:birthName ?bobThompsonBirthName .
  
  # Identify the alter ego of The Shadow who is a singer
  OPTIONAL {
    dbr:The_Shadow dbo:alias ?shadowAlterEgo .
    FILTER EXISTS { ?shadowAlterEgo a dbo:Singer }
  }

  # Find the band associated with Bob Thompson
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:associatedBand ?bandOfBobThompson .
    FILTER EXISTS { ?bandOfBobThompson a dbo:MusicalArtist }
  }
}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfLeaderEvent ?countryOfResidence WHERE {
  # Anxo Quintana's leadership role in an event
  ?anxoQuintana dbo:positionHeld ?office .
  ?office dbo:event ?officeOfLeaderEvent .

  # Álvaro Quirós' residence and country
  ?alvaroQuiros dbo:residence dbr:Santiago_de_Compostela .
  dbr:Santiago_de_Compostela dbo:country ?countryOfResidence .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sawShweKhetSpouse ?royalChildPredecessor WHERE {
  # Step 1: Get the spouse of Saw Shwe Khet
  dbr:Saw_Shwe_Khet dbo:spouse ?sawShweKhetSpouse .

  # Step 2: Identify the spouse of Saw Min Phyu and ensure they are royalty
  dbr:Saw_Min_Phu dbo:spouse ?sawMinPhyuSpouse .
  
  # Ensure the spouse is a royal person
  ?sawMinPhyuSpouse rdf:type dbo:RoyalPerson .

  # Step 3: Find their child who is royalty
  ?sawMinPhyuSpouse dbo:child ?royalChild .
  ?royalChild rdf:type dbo:RoyalPerson .

  # Step 4: Determine the predecessor of that royal child
  ?royalChild dbo:predecessor ?royalChildPredecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?choir { 
    dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico 
  }
  ?choir dbo:award ?award .
  ?award dbo:country dbr:United_States .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:citizenship dbr:Spain .
  ?person foaf:name ""Alberto Núñez Feijóo""@en .
  ?person dbo:officeLocation dbr:Santiago_de_Compostela .
  ?person dbo:positionHeld dbr:President_of_the_Xunta_of_Galicia .
  ?region dbo:country dbr:Spain .
  ?region dbo:head dbr:Alberto_Núñez_Feijóo .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?juanCarlosPlayer ?sergioAgüeroPlayer ?personTeam WHERE {
  # Find players associated with Juan Carlos Molina
  dbr:Juan_Carlos_Molina_(footballer) dbo:player ?juanCarlosPlayer .
  
  # Find players associated with Sergio Agüero
  dbr:Sergio_Agüero dbo:player ?sergioAgüeroPlayer .

  # Find a person who is both a soccer player and manager, born on Marcelo Sarmiento's birthday
  ?person a dbo:SoccerPlayer ;
          a dbo:Manager ;
          dbo:birthday ?birthday .
  
  # Get Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .

  FILTER (?birthday = ?marceloSarmientoBirthday)

  # Find the team of this person
  ?person dbo:team ?personTeam .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rogerPryorSpouse ?personWithParentBirthName WHERE {
  # Find the spouse of Roger Pryor (actor)
  dbr:Roger_Pryor_(actor) dbo:spouse ?rogerPryorSpouse .

  # Identify Tisha Sterling's parents
  OPTIONAL {
    dbr:Tisha_Sterling dbo:parent ?tishaParent .
    
    # Find the birth name of each parent
    ?tishaParent dbo:birthName ?parentBirthName .

    # Find a person with that birth name
    ?personWithParentBirthName dbo:birthName ?parentBirthName .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find cast members of ""All or Nothing: Manchester City""
  ?series dbo:castMember ?player .
  
  # Ensure the series is ""All or Nothing: Manchester City""
  VALUES ?series { dbr:All_or_Nothing:_Manchester_City_(TV_series) }
  
  # Check if the player is involved in soccer
  OPTIONAL {
    ?player dbo:sport dbr:Soccer .
  }

  # Check if the player has an acting role (assuming actor as a profession)
  OPTIONAL {
    ?player dbo:profession dbr:Actor .
  }

  # Ensure both conditions are met
  FILTER EXISTS { ?player dbo:sport dbr:Soccer }
  FILTER EXISTS { ?player dbo:profession dbr:Actor }
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Catherine of Austria, Queen of Portugal's father
  VALUES ?catherineFather { 
    { dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:father ?x }
  }

  # Dorothea of Denmark, Electress Palatine's parent and grandparent
  VALUES ?dorotheaParent {
    { dbr:Dorothea_of_Denmark_Electress_Palatine dbo:mother|dbo:father ?y }
  }
  VALUES ?dorotheaGrandparent {
    { ?y dbo:father|dbo:mother ?z }
  }

  # Find the common ancestor
  FILTER (?x = ?z)
  BIND(?x AS ?commonAncestor)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shelbyActor ?shadowActor WHERE {
  # Actor for Shelby Oaks (TV series ""Shelby"")
  OPTIONAL { 
    dbr:Shelby_(1964_TV_series) dbo:actor ?shelbyActor .
  }
  
  # Actor for The Shadow
  OPTIONAL {
    dbr:The_Shadow dbo:actor ?shadowActor .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Spouse's child
  ?spouse dbo:child ?childOfSpouse .

  # Grandchild (child of the spouse's child) who is royalty
  ?childOfSpouse dbo:child ?grandChild .
  ?grandChild a dbo:Monarch .  # Assuming Monarch indicates royalty

  # Roger III, Duke of Apulia's parent
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?rogerParent .

  # Parent's child (Roger III)
  ?rogerParent dbo:child ?rogerChild .
  
  # Ensure the grandchild is also a child of Roger III's parent
  FILTER (?grandChild = ?rogerChild)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the father of Cecilia Renata of Austria
  ?ceciliaRenata dbo:parent ?father .
  FILTER (str(?ceciliaRenata) = ""Cecilia_Renata_of_Austria"")

  # Find the father of Eleonore of Austria, Queen of Poland
  ?eleonore dbo:parent ?sameFather .
  FILTER (str(?eleonore) = ""Eleonore_of_Austria,_Queen_of_Poland"")

  # Ensure it's the same person and a commander in the Thirty Years' War
  FILTER (?father = ?sameFather)
  ?father dbo:occupation dbr:Thirty_Years_War_commander .

  # Find children of this common ancestor
  ?father dbo:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeArtist ?birthName ?associatedWithBobbyShmurda WHERE {
  ?nativeArtist a dbo:MusicalArtist ;
               dbo:birthPlace dbr:Florida .
  
  OPTIONAL { 
    ?nativeArtist dbo:birthName ?birthName .
  }
  
  OPTIONAL {
    ?bobbyShmurda dbr:Bobby_Shmurda ;
                  dbo:associatedBandMember ?bandMember .
    
    FILTER (?bandMember = ?nativeArtist)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for actors in the film ""ATL""
SELECT ?actor WHERE {
  dbr:ATL (dbo:starring) ?actor .
}

UNION

# Query for professionals associated with an alter ego in ""The Golden Master"" series
SELECT ?professional WHERE {
  dbr:The_Golden_Master dbo:character ?alterEgo .
  ?alterEgo dbo:portrayedBy ?professional .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?royaltyTitle WHERE {
  # Step 1 & 2: Identify Albrecht, Duke of Württemberg and his spouse
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:spouse ?parentOfMargareteSophie .
  
  # Step 3: Find children of Albrecht, Duke of Württemberg
  ?child dbo:childOf ?albrecht ;
         dbo:childOf ?parentOfMargareteSophie .

  # Step 4: Identify grandchildren (children of the above children)
  ?grandchild dbo:childOf ?child .
  
  # Step 5: Check if the grandchild has a royal title
  OPTIONAL {
    ?grandchild dbo:title ?royaltyTitle .
    FILTER(CONTAINS(LCASE(?royaltyTitle), ""prince"") || CONTAINS(LCASE(?royaltyTitle), ""duke"") || CONTAINS(LCASE(?royaltyTitle), ""archduke""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict ?societalEvent WHERE {
  VALUES ?manuelPintoDaCosta { dbr:Manuel_Pinto_da_Costa }
  
  OPTIONAL {
    ?manuelPintoDaCosta dbo:associatedWith ?militaryConflict .
    FILTER (strstarts(str(?militaryConflict), ""Angolan_War_of_Independence"") || 
            strstarts(str(?militaryConflict), ""Decolonization""))
  }

  OPTIONAL {
    ?manuelPintoDaCosta dbo:associatedWith ?societalEvent .
    FILTER (strstarts(str(?societalEvent), ""Independence_of_São_Tomé_and_Príncipe"") || 
            strstarts(str(?societalEvent), ""Presidency""))
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?war { dbr:Vietnam_War }
  ?commander dbo:nationality dbr:United_States .
  ?commander dbo:militaryBranch dbr:United_States_Navy .
  ?commander dbo:spouse dbr:Hillary_Clinton .
  ?commander dbo:positionHeld ?position .
  ?war dbo:hasParticipant ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?greatGrandchildOfAlexander ?predecessorChildOfPhilippAlbrecht WHERE {
  # Find Alexander of Württemberg's child
  ?alexanderChild dbo:parent dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) .
  
  # Find that child's child (grandchild)
  ?alexanderGrandchild dbo:parent ?alexanderChild .

  # Find the grandchild's child (great-grandchild)
  ?greatGrandchildOfAlexander dbo:parent ?alexanderGrandchild .

  # Find Philipp Albrecht, Duke of Württemberg's child
  ?philippAlbrechtChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Find the predecessor of that child
  ?predecessorChildOfPhilippAlbrecht dbo:predecessor ?philippAlbrechtChild .
  
  # Match the great-grandchild with the predecessor
  FILTER (?greatGrandchildOfAlexander = ?predecessorChildOfPhilippAlbrecht)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOccupation WHERE {
  dbr:Eugène_Cattin dbo:occupation ?occupation .
  ?occupation rdfs:subClassOf+ ?parentOccupation .
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  VALUES ?afeezOyetoro { 
    dbr:Afeez_Oyetoro 
  }
  
  ?show dbo:starring ?afeezOyetoro .
  FILTER EXISTS { ?show a dbo:Film . } # Ensures the result is a movie
}
```",1,2,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Philip, Despot of Romania's parent who is royalty
  ?philipParent dbo:child dbr:Philip,_Despot_of_Romania .
  ?philipParent a dbo:Monarch .

  # Ensure this parent is also a child of Béla IV of Hungary and is royalty
  ?belavChild dbo:parent dbr:Béla_IV_of_Hungary .
  ?belavChild a dbo:Monarch .
  FILTER (?philipParent = ?belavChild)

  # Find the spouse of this royal parent
  ?philipParent dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?centralAfricanCommanderOffice ?miguelMauraOffice WHERE {
  # Find the office of a commander in the Central African Republic Civil War
  OPTIONAL {
    ?commander dbo:office ?centralAfricanCommanderOffice .
    ?commander dbo:occupation dbr:Military_officer .
    ?commander dbo:relatedEvent dbr:Civil_War_in_the_Central_African_Republic_(2012–present) .
  }
  
  # Find the office of Miguel Maura
  OPTIONAL {
    ?miguelMaura dbo:office ?miguelMauraOffice .
    ?miguelMaura rdfs:label ""Miguel Maura""@en .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Archduchess Helena of Austria
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .

  # Step 2: Find the child of the spouse
  ?spouse dbo:child ?child .

  # Step 3: Ensure the child is royalty
  ?child rdf:type dbo:RoyalFamilyMember .

  # Step 4: Find the predecessor of this royal child
  ?child dbo:predecessor ?predecessor .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?targetPerson WHERE {
  # Step 1: Stephen V of Hungary's child
  ?stephenVChild dbo:child dbr:Stephen_V_of_Hungary .
  
  # Step 2: Charles I of Hungary's father who is royalty
  ?charlesIFather dbo:father dbr:Charles_I_of_Hungary ;
                 a dbo:Monarch .

  # Linking the child from step 1 to the father in step 2
  ?stephenVChild dbo:child ?charlesIFather .
  
  # Step 3: Parent of Charles I's father who is royalty
  ?grandparent dbo:father ?charlesIFather ;
               a dbo:Monarch .

  # Step 4: Spouse of the grandparent
  ?spouse dbo:spouse ?grandparent .

  # The target person we are looking for
  BIND(?spouse AS ?targetPerson)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Joanna of Castile is a child of Philip I of Castile
  dbr:Joanna_the_Mad dbo:child dbr:Philip_I_of_Castile .
  
  # Dorothea of Denmark, Electress Palatine's parent is Joanna of Castile
  ?dorotheaParent dbo:parent dbr:Dorothea_of_Denmark_Electress_Palatine .
  FILTER (?dorotheaParent = dbr:Joanna_the_Mad)
  
  # Find the father of Joanna of Castile
  dbr:Joanna_the_Mad dbo:father ?father .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp-owl: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  FILTER (
    { ?birthPlace rdf:type dbp-owl:Region }
    UNION
    { ?birthPlace rdf:type dbp-owl:Country }
  )
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoName ?actorProfession WHERE {
  VALUES ?theShadowGame { 
    dbr:The_Shadow_(video_game) 
  }
  
  ?theShadowGame dbo:basedOn ?comicsCharacter .
  ?comicsCharacter dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ?alterEgoName .

  OPTIONAL {
    ?alterEgo dbo:profession ?actorProfession .
    FILTER (CONTAINS(LCASE(?actorProfession), ""actor""))
  }
}
```",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?birthPlace ?entityInJapan WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
  OPTIONAL {
    ?entityInJapan dbo:location dbr:Japan ;
                   dbo:relatedTo ?awardee .
  }
}
```",3,4,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find Apache Indian's works
  ?work dbo:musicalArtist dbr:Apache_Indian .
  
  # Get Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?victorsBirthPlace .

  # Connect the work to Victor Saville's birthplace
  ?work dbo:originPlace ?victorsBirthPlace .

  # Find the writer of that work
  ?work dbo:lyricist ?writer .
  OPTIONAL { ?work dbo:composer ?writer . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:birthName ""Hon. Mary Frances Bowes-Lyon""@en .
  ?person dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?fortRoyalMilitaryForce ?capeFinisterreMilitaryForce WHERE {
  # French Campaign in Egypt and Syria
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
  }
  
  # Battle of Fort Royal (1794)
  OPTIONAL {
    dbr:Battle_of_Fort_Royal_(1794) dbo:militaryForce ?fortRoyalMilitaryForce .
  }

  # Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryForce ?capeFinisterreMilitaryForce .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?mariclareSpouse .

  # Step 2: Find the child of Mariclare Costello's spouse
  OPTIONAL { ?mariclareSpouse dbo:child ?childOfSpouse . }

  # Step 3: Determine the parent of this child
  OPTIONAL { ?parent1 dbo:child ?childOfSpouse . }

  # Step 4: Identify Amy Arbus' parent
  dbr:Amy_Arbus dbo:parent ?amyParent .

  # Step 5: Find the common parent
  FILTER (?parent1 = ?amyParent)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  VALUES ?war { 
    dbr:The_Great_Turkish_War_(1683–1699) 
  }
  ?war dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoName ?profession WHERE {
  VALUES ?theShadow { dbr:The_Shadow }
  ?theShadow dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ?alterEgoName .
  OPTIONAL {
    ?alterEgo dbo:profession ?profession .
  }
  FILTER (lang(?alterEgoName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albrechtChild ?philippAlbrechtGrandchild ?margareteSophieParent WHERE {
  # Find the child of Albrecht, Duke of Württemberg
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?albrechtChild .
  
  # Find the grandchild of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippAlbrechtChild .
  ?philippAlbrechtChild dbo:child ?philippAlbrechtGrandchild .

  # Find the parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie,_Archduchess_of_Austria dbo:parent ?margareteSophieParent .
  
  # Ensure the child of Albrecht is a predecessor to the grandchild of Philipp Albrecht
  FILTER (?albrechtChild != ?philippAlbrechtGrandchild)
  
  # Ensure the child of Albrecht is royalty and related to the parent of Margarete Sophie
  VALUES ?albrechtChild {
    ?albrechtChild
  }
  OPTIONAL {
    ?margareteSophieParent dbo:child ?royaltyRelation .
    FILTER (?albrechtChild = ?royaltyRelation)
  }

  # Ensure all individuals are royalty
  ?albrechtChild a dbo:Monarch .
  ?philippAlbrechtGrandchild a dbo:Monarch .
  ?margareteSophieParent a dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  ?person dbo:birthday ""1968-08-26""^^xsd:date ;
          a dbo:SportsManager .
  
  OPTIONAL { 
    ?person dbo:manager ?team .
  }
}
```",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?awardee ?entityInAthens WHERE {
  ?awardee dbo:award ?award .
  ?award dbo:dateReceived ?dateReceived .
  BIND(YEAR(?dateReceived) - YEAR(?awardee dbo:birthDate) AS ?ageAtAward)
  FILTER (?ageAtAward = 30)

  OPTIONAL { ?war dbo:participant ?awardee . }
  
  ?entityInAthens dbo:location dbr:Athens .
  
  OPTIONAL {
    ?awardee dbo:award ?award .
    ?award dbo:dateReceived ?dateReceived .
    BIND(YEAR(?dateReceived) - YEAR(?awardee dbo:birthDate) AS ?ageAtAward)
    FILTER (?ageAtAward = 30)
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:William_I_of_Sicily dbo:child ?child .
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }
}
```",1,2,2,1,1,3,3,71,1,3,0,0.25,1.0,0.4
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?professional ?producer WHERE {
  # Find Janet Gaynor's notable works
  VALUES ?janetGaynor { dbr:Janet_Gaynor }
  
  ?janetGaynor dbo:filmDebut ?work .
  
  OPTIONAL {
    # Find professionals associated with the work (e.g., directors, actors)
    ?work dbo:director|dbo:actor ?professional .
  }
  
  OPTIONAL {
    # Find producers of the work
    ?work dbo:producer ?producer .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria (born 1574)
  dbr:Maria_Anna_of_Bavary_(1574-1616) dbo:child ?mariaChild .
  
  # Father of one of her children
  ?mariaChild dbo:father ?father .

  # Child of that father who is royalty and a commander in the Thirty Years' War
  ?father dbo:child ?child .
  ?child rdf:type dbo:Monarch .
  ?child dbo:commanderInWar dbr:Thirty_Years_War .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = 1981 && MONTH(?birthday) = 12 && DAY(?birthday) = 01)
  
  ?person dbo:occupation [
    a dbo:Athlete ;
    a dbo:SoccerPlayer ;
    a dbo:SportsManager ;
    a dbo:SoccerManager
  ] .
}
```",2,6,3,2,1,3,2,20,0,0,6,0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?militaryForce ?event WHERE {
  ?awardee dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .
  OPTIONAL { 
    ?awardee dbo:militaryService ?militaryForce .
    ?militaryForce dbo:event ?event .
    FILTER EXISTS { ?event dbo:type dbr:Societal_event }
  }
}
```",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?awardName ?nativeRegion WHERE {
  ?band dbo:origin dbr:New_York_City .
  ?band dbo:awarded ?award .
  ?award dbo:placeOfOrigin ?nativeRegion .
  
  FILTER (
    (strstarts(str(?nativeRegion), ""http://dbpedia.org/resource/"") &&
     EXISTS { ?nativeRegion a dbo:PopulatedPlace } &&
     EXISTS { ?nativeRegion dbo:country dbr:United_States_of_America } &&
     EXISTS { ?nativeRegion dbo:state dbr:United_States } )
  )
}
```",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorURL WHERE {
  VALUES ?michalKazimierzPac { dbr:Mikołaj_Kazimierz_Paszczyński }
  ?successor dbo:successorOf ?michalKazimierzPac .
  ?successor dbo:officeHolder true .
  ?successor dbo:politician true .
  ?successor dbo:commanderOf dbr:Great_Turkish_War .
  
  OPTIONAL {
    ?georgeDucas dbo:relatedTo ?successor .
    VALUES ?georgeDucas { dbr:George_Ducas }
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Ackquille Jean Pollard (2 Chainz)
  VALUES ?twoChainz { dbr:2_Chainz }
  
  # Step 2: Find Bobby Shmurda's associated musical artist
  ?bobbyShmurda dbo:associatedMusicalArtist ?musicalArtist .
  VALUES ?bobbyShmurda { dbr:Bobby_Shmurda }

  # Step 3: Determine the award related to New York (state)
  ?award dbo:awardee ?band ;
         dbo:location ?newYorkState .

  # Ensure the location is New York State
  VALUES ?newYorkState { dbr:New_York_(state) }
  
  # Step 4: Find the region/state/settlement associated with the award
  ?award dbo:nativePlace ?region .
  
  # Ensure the region is a state and settlement in America
  FILTER (STRSTARTS(STR(?region), ""http://dbpedia.org/resource/"") &&
          EXISTS { ?region rdf:type dbo:State } &&
          EXISTS { ?region rdf:type dbo:Settlement })

  # Step 5: Identify if 2 Chainz is associated with the band from step 3
  OPTIONAL {
    ?twoChainz dbo:associatedMusicalArtist ?band .
  }

  # Ensure all conditions are met
  FILTER (?musicalArtist = ?band)
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find Thomas Letsch's managed team
  ?team dbo:manager dbr:Thomas_Letsch .
  
  # Ensure the team is a soccer club and linked to sports seasons
  ?team dbo:sport dbr:Soccer .
  ?team dbo:season ?sportsSeason .
  ?sportsSeason rdf:type dbo:SportsSeason .

  # Find Theodor Heuss's native country during his presidency
  dbr:Theodor_Heuss dbo:nationality ?country .
  
  # Ensure the team is associated with this country
  ?team dbo:location ?location .
  ?location dbo:country ?country .

  # Get the manager of this specific soccer club
  ?team dbo:manager ?manager .
}
```",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warURL ?militaryForceURL ?awardeeURL WHERE {
  ?war a dbo:MilitaryConflict ;
      a dbo:Event .
  
  OPTIONAL { 
    ?bayne dbr:William_Bayne ;
           dbo:militaryForce ?militaryForceURL .
  }
  
  OPTIONAL {
    ?force a dbo:MilitaryForce ;
           dbo:event ?event .
    
    FILTER (?event = ?war)
  }

  OPTIONAL {
    ?awardee dbo:recipient dbr:Knight_Commander_of_the_Order_of_the_Bath ;
            dbo:militaryForce ?militaryForceURL .
  }
  
  FILTER (?bayne = ?awardee || ?militaryForceURL = ?force)
}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alwaysActor ?paradiseActor ?januszSpouse WHERE {
  # Actor of ""Always"" (1989 film)
  OPTIONAL { 
    dbr:Always_(film) dbo:starring ?alwaysActor .
  }
  
  # Actor of ""Paradise"" (2013 film)
  OPTIONAL { 
    dbr:Paradise_(2013_film) dbo:starring ?paradiseActor .
  }

  # Spouse of Janusz Kamiński
  OPTIONAL {
    dbr:Janusz_Kamiński dbo:spouse ?januszSpouse .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Commander of the Royal Victorian Order""@en .
  
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?politician WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Parent of the child
  ?child dbo:parent ?parent .

  # Ensure the parent is a politician and male
  ?parent rdf:type dbpedia-owl:Politician .
  OPTIONAL { ?parent dbo:gender rdfs:Male . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Audrey_Hepburn .
  ?movie dbo:starring ?actor .
  FILTER (?actor != dbr:Audrey_Hepburn)
}
```",2,4,3,2,1,2,3,28,61,32,1,0.6559139784946236,0.9838709677419355,0.7870967741935484
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?doonArbusParent ?movieWork ?eugeneCattinProfession ?anotherProfessional WHERE {
  # Find the parent of Doon Arbus
  dbr:Doon_Arbus dbo:parent ?doonArbusParent .

  # Find a movie (work) Herschel Bernardi acted in
  ?movieWork dbo:actor dbr:Herschel_Bernardi .
  
  # Determine Eugène Cattin's profession and find another professional in that field
  dbr:Eugène_Cattin dbo:profession ?eugeneCattinProfession .
  ?anotherProfessional a ?eugeneCattinProfession .
  FILTER(?anotherProfessional != dbr:Eugène_Cattin)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find children of Roger II who are royalty
  ?child1 dbo:parent dbr:Roger_II_of_Sicily ;
          rdf:type dbo:Monarch .
  
  # Identify the parent of this child (who must be royalty)
  ?parent1 dbo:child ?child1 ;
           rdf:type dbo:Monarch .

  # Check if this parent is a child of Elvira of Castile
  ?elviraChild dbo:parent dbr:Elvira_of_Castile ;
               rdf:type dbo:Monarch .
  
  FILTER (?parent1 = ?elviraChild)

  # Ensure this person is the father of a child of William I who is royalty
  ?child2 dbo:father ?parent1 ;
          dbo:parent dbr:William_I_of_Sicily ;
          rdf:type dbo:Monarch .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?fabulousThunderbirdsURL WHERE {
  VALUES ?nickCurran { dbr:Nick_Curran }
  OPTIONAL {
    ?nickCurran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
  
  VALUES ?kimWilson { dbr:Kim_Wilson }
  OPTIONAL {
    ?kimWilson dbo:associatedMusicalArtist ?fabulousThunderbirdsURL .
  }

  FILTER (?nickCurranAssociatedArtist = ?fabulousThunderbirdsURL)
}
```",5,6,6,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  VALUES ?shatrughanSinha { dbr:Shatrughan_Sinha }
  VALUES ?richardEGrant { dbr:Richard_E._Grant }

  ?movie dbo:actor ?shatrughanSinha .
  ?movie dbo:actor ?richardEGrant .
  ?movie rdf:type dbo:TelevisionShow .

  FILTER (?shatrughanSinha != ?richardEGrant)
}
```",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band ?associatedArtist WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdf:type dbo:MusicalArtist .
  
  # Determine which band this person was a member of
  ?person dbo:bandMember ?band .

  # Find associated musical artists with Nick Curran
  dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Christian_Ditlev_Ammenhorst_Hansen dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:sport dbr:Soccer .
  }
  
  OPTIONAL {
    ?actor dbo:athlete true .
  }

  FILTER EXISTS { ?actor dbo:sport dbr:Soccer . }
  FILTER EXISTS { ?actor dbo:athlete true . }
}
```",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?teamManaged WHERE {
  # Find Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?nativeCountry .

  # Find the person born on 1968-08-26 who is a sports manager
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .
  
  # Determine which team this person manages that fits the criteria
  OPTIONAL {
    ?team dbo:manager ?person ;
          (dbo:sportTeamSeason | dbo:soccerClubSeason) ?season .
    BIND(?team AS ?teamManaged)
  }
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marianoRajoyOffice ?partidoPopularLeaderOffice WHERE {
  # Office held by Mariano Rajoy
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .
  
  # Leader of Partido Popular (Conservative Republican Party, Spain)
  OPTIONAL {
    dbr:Partido_Popular dbo:leader ?partidoPopularLeader .
    ?partidoPopularLeader dbo:office ?partidoPopularLeaderOffice .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceOfAwardee ?tracyWarForce WHERE {
  # Find awards received by Quincy Adams Gillmore and their awardees' forces
  ?award dbo:recipient dbr:Quincy_Adams_Gillmore .
  ?awardee dbo:receivedAward ?award .
  ?awardee dbo:commander ?forceOfAwardee .

  # Find the war involving Amasa Tracy and related forces
  ?tracyWar dbo:participatedIn dbr:Amasa_Tracy .
  ?tracyWar dbo:hasParticipant ?unit .
  ?unit dbo:commander ?tracyWarForce .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Smartbomb dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  
  ?person dbo:deathPlace dbr:Los_Angeles .
  ?person dbo:child ?photographer .
  ?photographer a dbo:Photographer .

  FILTER EXISTS { ?movie rdf:type dbo:Film . }
}
```",5,6,6,3,2,3,3,71,3,95263,0,3.149077320345139e-05,1.0,6.297956313176375e-05
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find William Gayner's birthplace
  VALUES ?williamGayner { dbr:William_Gayner }
  
  ?williamGayner dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is both a region and a country
  OPTIONAL { ?birthPlace dbo:country ?country . }
  OPTIONAL { ?birthPlace dbo:region ?region . }

  FILTER EXISTS { ?birthPlace dbo:country ?country } && 
               EXISTS { ?birthPlace dbo:region ?region }
  
  # Find natives of this birthplace
  ?native dbo:nativeOf ?birthPlace .
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Tony Hollings' birth date
  dbr:Tony_Hollings dbo:birthDate ?hollingsBirthDate .

  # Find a person with the same birth date and specified roles
  ?person dbo:birthDate ?sameBirthDate .
  
  FILTER (?sameBirthDate = ?hollingsBirthDate)

  # Ensure the person is an athlete, soccer player, sports manager, and soccer manager
  ?person dbo:sport ?sport .
  ?person dbo:occupation ?occupation .

  VALUES ?requiredRoles {
    dbr:Soccer
    dbr:Athlete
    ""Sports Manager""
    ""Soccer Manager""
  }

  FILTER (
    EXISTS { ?person dbo:sport dbr:Soccer }
    && EXISTS { ?person dbo:sport dbr:Athlete }
    && (CONTAINS(LCASE(?occupation), ""sports manager"") || CONTAINS(LCASE(?occupation), ""soccer manager""))
  )
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Paulus_Powell dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbpedia-owl:Region .
  ?birthPlace rdf:type dbpedia-owl:AdministrativeRegion .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?charlestonEntity ?gillmoreForce WHERE {
  # Find awardees of the Congressional Gold Medal
  ?recipient dbo:awardedBy dbr:Congressional_Gold_Medal .
  
  # Determine the war associated with these recipients
  ?recipient dbo:associatedWith ?war .

  # Identify entities in Charleston, South Carolina
  ?charlestonEntity a dbo:Place ;
                   dbo:location dbr:Charleston,_South_Carolina .

  # Find forces related to Gillmore Medal awardees
  ?gillmoreRecipient dbo:awardedBy dbr:Gillmore_Medal .
  ?gillmoreRecipient dbo:associatedWith ?gillmoreForce .
  
  FILTER EXISTS { ?recipient ?p1 ?charlestonEntity . }
  FILTER EXISTS { ?recipient ?p2 ?gillmoreRecipient . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?officeHolder WHERE {
  # Elvira of Castile's child
  dbr:Elvira_of_Castile dbo:child ?child .
  
  # The child must be royalty
  ?child a dbo:Monarch .

  # The child is an office holder related to William I
  OPTIONAL { 
    ?officeHolder dbo:monarch ?child .
    ?officeHolder dbo:country dbr:Sicily .
    ?officeHolder dbo:predecessorOrSuccessor dbr:William_I_of_Sicily .
  }

  # Ensure the child is both royalty and office holder
  FILTER (?child = ?officeHolder)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filthyFriendsAssociatedArtist ?noAlternativeWriterBandMember WHERE {
  # Find the associated musical artist of Filthy Friends
  dbr:Filthy_Friends dbo:associatedMusicalArtist ?filthyFriendsAssociatedArtist .

  # Find the writer or producer of No Alternative
  OPTIONAL {
    dbr:No_Alternative dbo:writer ?noAlternativeWriter .
  }

  # Find a band member of the writer/producer of No Alternative
  OPTIONAL {
    ?noAlternativeWriter dbo:bandMemberOf ?band .
    ?band dbo:member ?noAlternativeWriterBandMember .
  }
}
```",3,3,4,2,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowProfession ?sinhaProfession WHERE {
  # Query for The Shadow's profession
  OPTIONAL {
    dbr:The_Shadow dbo:profession ?shadowProfession .
  }
  
  # Query for Shatrughan Sinha's profession
  OPTIONAL {
    dbr:Shatrughan_Sinha dbo:occupation ?sinhaProfession .
  }
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthPlaceEntity .
  ?birthPlaceEntity a dbo:Settlement ;
                   dbo:country dbr:United_States .
  
  OPTIONAL {
    ?medalOfHonorRecipient dbo:awardedMedalOfHonorFor ?war .
    FILTER (?person = ?medalOfHonorRecipient)
  }
}
```",5,7,6,3,2,3,3,71,0,1,2,0.0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Japan .
}
```",1,1,2,1,1,2,3,28,0,716,104,0.0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtistURL ?nestedAssociatedArtistURL WHERE {
  # Find artists associated with R.E.M.
  dbr:R.E.M. dbo:associatedMusicalArtist ?associatedArtistURL .
  
  # For each of these artists, find their own associated artists
  OPTIONAL { 
    ?associatedArtistURL dbo:associatedMusicalArtist ?nestedAssociatedArtistURL .
  }
  
  # Ensure that the nested artist is also an artist (i.e., a resource in DBpedia)
  FILTER EXISTS { ?nestedAssociatedArtistURL rdf:type dbo:MusicGroup . }
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?bandMemberBand WHERE {
  # Find Nick Curran's associated musical artists
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Identify the band member born on March 30, 1945
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:Musician .
  
  # Find the band of this person
  ?person dbo:bandMember ?bandMemberBand .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?amyParent ?doonParent ?movieTitle WHERE {
  VALUES ?amyArbus { dbr:Amy_Arbus }
  VALUES ?doonArbus { dbr:Doon_Arbus }

  OPTIONAL {
    ?amyArbus dbo:parent ?amyParent .
  }
  
  OPTIONAL {
    ?doonArbus dbo:parent ?doonParent .
  }

  ?movie dbo:actor ?actor .
  ?actor dbo:deathPlace ?deathPlace .
  FILTER (CONTAINS(LCASE(?deathPlace), ""los angeles""))
  ?movie a dbo:Film .

  BIND(STR(?movie) AS ?movieTitle)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobCreweBirthplace ?workBirthplace WHERE {
  # Part 1: Get the birthplace of Bob Crewe
  dbr:Bob_Crewe dbo:birthPlace ?bobCreweBirthplace .

  # Part 2: Find works associated with Ethan Iverson that are both artists and musical artists, and get their birthplaces
  OPTIONAL {
    dbr:Ethan_Iverson dbo:associatedMusicalArtist ?work .
    ?work a dbo:Artists ; 
          a dbo:MusicalArtist ;
          dbo:birthPlace ?workBirthplace .
  }
}
```",3,5,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""French Campaign in Egypt and Syria""@en .
  
  OPTIONAL { 
    ?bayne dbo:associatedWith ?campaign .
    FILTER (CONTAINS(LCASE(?bayne), ""william bayne""))
  }
  
  ?militaryForce dbo:participatedIn ?campaign .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?spouse WHERE {
  # Step 1: Identify Nat Levine's film
  VALUES ?natLevineFilm { 
    dbr:The_Film_Associated_With_Nat_Levine # Placeholder for actual film resource
  }
  
  # Step 2: Find an actor of the film
  ?natLevineFilm dbo:starring ?actor .
  
  # Step 3: Determine the spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Step 4: Identify the ruling party in Central, Louisiana (hypothetical)
  VALUES ?rulingParty { 
    dbr:Democratic_Party_(United_States) # Placeholder for actual ruling party resource
  }
  
  # Step 5: Find a member of that ruling party
  ?partyMember dbo:memberOf ?rulingParty .
}
```

Note: The placeholders `dbr:The_Film_Associated_With_Nat_Levine` and `dbr:Democratic_Party_(United_States)` need to be replaced with actual DBpedia resources if available. Additionally, the ruling party in Central, Louisiana might not be directly available in DBpedia, so this part of the query is speculative.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find a work authored by Hillary Clinton
  ?hillaryWork dbo:author dbr:Hillary_Clinton .
  
  # Find a work authored by Bill Clinton
  ?billWork dbo:author dbr:Bill_Clinton .

  # Identify the author of Bill Clinton's book who is also an author of Hillary Clinton's book
  ?commonAuthor dbo:author ?hillaryWork ;
               dbo:author ?billWork .
  
  # Find the spouse of this common author
  ?commonAuthor dbo:spouse ?spouse .

  # Ensure the spouse is a politician and office holder
  ?spouse a dbo:Politician ;
          dbo:officeHolder ?office .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Uncle Murda's resource
  VALUES ?uncleMurda { dbr:Uncle_Murda }
  
  # Find band members of Uncle Murda
  ?uncleMurda dbo:member ?bandMember .
  
  # Filter for those native to Coro, considering its description
  OPTIONAL {
    ?bandMember dbo:nativePlace ?nativePlace .
    VALUES ?coro { dbr:Coro }
    
    # Check if Coro is described as a region, American state, and settlement
    ?coro rdf:type/rdfs:subClassOf* (dbo:Region | dbo:StateOrProvince | dbo:Settlement) .
  }
  
  FILTER (?nativePlace = ?coro)
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?event WHERE {
  dbr:Robert_Calder dbo:militaryConflict ?militaryForce .
  OPTIONAL { 
    ?militaryForce dbo:societalEvent ?event .
  }
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify the author of ""An Invitation to the White House""
  dbr:An_Invitation_to_the_White_House dbo:author dbr:Hillary_Clinton .
  
  # Confirm Hillary Clinton's status as a politician and office holder
  OPTIONAL { 
    dbr:Hillary_Clinton dbo:officeHolderOf ?office .
  }
  
  # Find the spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  # Ensure the spouse is Bill Clinton, who is also a politician and office holder
  OPTIONAL {
    ?spouse dbo:officeHolderOf ?office2 .
  }
  
  FILTER (?spouse = dbr:Bill_Clinton)
}
```",6,13,7,2,3,3,3,71,1,0,0,1.0,1.0,1.0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nicholasIINativeCountry ?alexanderIIIFinlandNativeCountry WHERE {
  VALUES ?nicholasIINativeCountry { 
    dbr:Russia 
  }
  VALUES ?alexanderIIIFinlandNativeCountry { 
    dbr:Russia 
  }

  OPTIONAL {
    dbr:Nicholas_II_of_Russia dbo:birthPlace ?nicholasIIBirthPlace .
    FILTER (?nicholasIIBirthPlace = ?nicholasIINativeCountry)
  }
  
  OPTIONAL {
    dbr:Alexander_II,_Grand_Duke_of_Finland dbo:birthPlace ?alexanderIIIFinlandBirthPlace .
    FILTER (?alexanderIIIFinlandBirthPlace = ?alexanderIIIFinlandNativeCountry)
  }
}
```",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residenceCountry WHERE {
  ?person dbo:nativePlace dbr:Łódź .
  ?person dbo:country dbr:Poland .
  ?person dbo:occupation dbr:Athlete .
  ?person dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .
}
```",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  VALUES ?joeyB { dbr:Joey_B }
  ?joeyB dbo:birthName ?birthName .
  FILTER EXISTS { 
    ?joeyB dbo:occupation dbr:Musician .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildOfPhilipp ?grandchildOfCharles WHERE {
  # Find grandchildren of Duke Philipp of Württemberg who are royalty
  ?philippChild dbo:child dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  ?grandchildOfPhilipp dbo:child ?philippChild .
  FILTER EXISTS { ?grandchildOfPhilipp rdf:type dbo:Monarch . }

  # Find grandchildren of Archduke Charles Louis of Austria who are royalty
  ?charlesChild dbo:child dbr:Archduke_Charles_Louis_of_Austria .
  ?grandchildOfCharles dbo:child ?charlesChild .
  FILTER EXISTS { ?grandchildOfCharles rdf:type dbo:Monarch . }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent ?childOfParent WHERE {
  # Find the parent of Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:child ?parent .
  
  # Find the children of this parent, excluding Archduke Charles Joseph himself
  ?parent dbo:child ?childOfParent .
  FILTER (?childOfParent != dbr:Archduke_Charles_Joseph_of_Austria)
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley_16th_Earl_of_Derby dbo:child ?child1 .
  
  # Child who is a politician
  ?child1 dbo:occupation dbr:Politician .

  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley_17th_Earl_of_Derby dbo:parent ?frederickStanley .
  
  # Ensure Frederick Stanley is the parent
  FILTER (?frederickStanley = dbr:Frederick_Stanley_16th_Earl_of_Derby)

  # Edward's child who is a politician and an office holder
  dbr:Edward_Stanley_17th_Earl_of_Derby dbo:child ?child2 .
  ?child2 dbo:occupation dbr:Politician ;
          dbo:officeHolder ?office .

  # Victor Stanley (Royal Navy officer)
  ?victorParent dbo:child dbr:Victor_Stanley_(Royal_Navy_officer) .

  # Ensure the father of the child from step 1 is Frederick Stanley
  FILTER (?father = dbr:Frederick_Stanley_16th_Earl_of_Derby)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?reference WHERE {
  dbr:1._FC_Magdeburg dbo:member ?member .
  OPTIONAL { 
    ?member dbp:wikiPageWikiLink ?reference .
  }
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Identify actors in those films
  ?film dbo:actor ?actor .

  # Find the spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Filter for spouses who are members of the Republican Party (United States)
  ?spouse dbo:party dbr:Republican_Party_(United_States) .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreRole ?tracyRole ?lewisBirthplace WHERE {
  # Quincy Adams Gillmore's role in wars
  OPTIONAL { 
    dbr:Quincy_Adams_Gillmore dbo:militaryRank ?gillmoreRole .
  }
  
  # Amasa Tracy's role in wars
  OPTIONAL { 
    dbr:Amasa_Tracy dbo:militaryRank ?tracyRole .
  }

  # Henry Clay Lewis' birthplace that is a settlement and American
  {
    SELECT ?lewisBirthplace WHERE {
      dbr:Henry_Clay_Lewis dbo:birthPlace ?lewisBirthplace .
      ?lewisBirthplace rdf:type dbo:Settlement .
      ?lewisBirthplace dbo:country dbr:United_States .
    }
  }
}
```",4,6,5,2,3,3,3,71,0,1,1,0.0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreAwardee ?gillmoreForce ?gillmoreWar 
     ?medalOfHonorAwardee ?medalOfHonorForce ?medalOfHonorWar WHERE {
  # Gillmore Medal awardee
  VALUES ?gillmoreAwardee { dbr:Quincy_A._Gillmore }
  
  OPTIONAL {
    ?gillmoreAwardee dbo:militaryService ?service .
    ?service dbo:participatedIn ?gillmoreWar ;
             dbo:memberOf ?gillmoreForce .
  }

  # Medal of Honor awardee
  VALUES ?medalOfHonorAwardee { dbr:John_P._Sullivan }
  
  OPTIONAL {
    ?medalOfHonorAwardee dbo:militaryService ?service2 .
    ?service2 dbo:participatedIn ?medalOfHonorWar ;
              dbo:memberOf ?medalOfHonorForce .
  }

  # Filter to ensure the wars are relevant
  FILTER (?gillmoreWar = dbr:American_Civil_War)
}
```",4,4,5,2,2,3,3,71,0,3,3,0.0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:child ?child .
  
  # Find the father of this child
  ?child dbo:father ?father .

  # Ensure the father is a royalty and an office holder
  ?father dbo:royalTitle ?title .
  OPTIONAL { ?father dbo:officeHolder ?office . }
  FILTER EXISTS { ?father dbo:royalTitle ?title } 
  FILTER EXISTS { ?father dbo:officeHolder ?office }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?darrylProfessionalIdentity ?associatedArtist WHERE {
  VALUES ?darrylResource { 
    dbr:Darryl_Paa_Kwesi_Bannerman-Martin 
  }
  
  ?darrylResource a ?darrylProfessionalIdentity .
  FILTER (?darrylProfessionalIdentity IN (dbo:Musician, dbo:Person))
  
  OPTIONAL {
    dbr:$pacely dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?yeJiaPlayer ?manager WHERE {
  VALUES ?yeJiaPlayer { 
    dbr:Ye_Jia 
  }
  VALUES ?hongKongC { 
    dbr:Hong_Kong_C
  }

  ?yeJiaPlayer dbo:playerForTeam ?hongKongC .
  ?yeJiaPlayer dbo:managerOfTeam ?hongKongC .

  ?manager a dbo:SportsManager ;
           dbo:sportManagedSoccerTeam ?hongKongC .

  FILTER (?yeJiaPlayer = ?manager)
}
```",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fictionalCharacter ?professionalName ?corasWork WHERE {
  ?fictionalCharacter dbo:creator ?professional .
  ?professional foaf:name ""Kent Allard"" .
  
  ?work dbo:author ?professional .
  ?work dbo:title ?corasWork .
  ?work dbr:Cora_Sue_Collins .

  FILTER (?fictionalCharacter != ?work)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?actor dbo:castMember dbr:All_or_Nothing:_Manchester_City .
  
  # Ensure the actor is also a soccer player
  ?actor dbo:athlete ?soccerPlayerRole .
  
  # Check if this player was part of Pablo Aimar's team
  ?pabloAimarTeam dbo:member ?player .
  ?player dbo:team ?pabloAimarTeam .

  # Ensure the player is the same as the actor
  FILTER (?actor = ?player)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find works written by Aleksandr Filimonov
  ?work dbo:author dbr:Aleksandr_Filimonov .
  
  # Find players associated with these works
  OPTIONAL { 
    ?work dbo:actor ?player .
  }
}
```",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?chargeEvent WHERE {
  VALUES ?chargeEvent { 
    dbr:Picketts_Charge 
  }
  
  ?chargeEvent dbo:commander ?commander .
  ?commander rdfs:label ""George Pickett""@en .

  OPTIONAL {
    ?commander dbo:partyMemberOf ?party .
    FILTER (CONTAINS(LCASE(STR(?party)), ""republican party""))
  }
}
```",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerOfTomSawyer ?shadowProfession WHERE {
  VALUES ?tomSawyerFilm { 
    dbr:The_Adventures_of_Tom_Sawyer_(1938_film) 
  }
  
  ?tomSawyerFilm dbo:producer ?producerOfTomSawyer .
  
  VALUES ?theShadowCharacter { 
    dbr:The_Shadow 
  }

  OPTIONAL {
    ?theShadowCharacter dbo:profession ?shadowProfession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?movie WHERE {
  # Find the professional identity of Kent Allard in print
  OPTIONAL { 
    ?person dbo:alias ""Kent Allard"" .
    ?person rdfs:label ?alterEgo .
    FILTER(CONTAINS(LCASE(?alterEgo), ""print""))
  }
  
  # Identify Janet Gaynor's notable film production work
  dbr:Janet_Gaynor dbo:filmProduction ?movie .

  # Link the alter ego to the movie produced by Janet Gaynor
  ?person dbo:producer ?movie .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle WHERE {
  ?book dbo:author dbr:Bill_Clinton .
  ?book rdfs:label ?bookTitle .
  FILTER CONTAINS(LCASE(?bookLabel), ""gulf war"") .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Quincy_Adams_Gillmore dbp:commanded ?force .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Janet Gaynor's claim to fame film (assuming ""7th Heaven"" or similar)
  VALUES ?claimToFameFilm { 
    dbr:7th_Heaven_(film) 
    dbr:Sunrise_(1927_film)
  }
  
  # Producer of Janet Gaynor's claim-to-fame film
  ?claimToFameFilm dbo:producer ?janetProducer .

  # Producer of The Adventures of Tom Sawyer (1938)
  dbr:The_Adventures_of_Tom_Sawyer_(film) dbo:producer ?tomSawyerProducer .

  # Kent Allard's alter ego (assuming Clark Kent/Superman)
  VALUES ?alterEgo { 
    dbr:Clark_Kent
  }
  
  # Producer associated with the alter ego's film
  ?alterEgoFilm dbo:producer ?alterEgoProducer .
  ?alterEgoFilm dbo:title ""Superman"" .

  # Find common producer
  FILTER (?janetProducer = ?tomSawyerProducer && ?janetProducer = ?alterEgoProducer)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?awardeeLabel WHERE {
  # Find awards associated with Vince Gilligan
  VALUES ?vinceGilligan { dbr:Vince_Gilligan }
  
  ?vinceGilligan dbo:award ?award .
  
  # Find other awardees of the same award
  ?otherAwardee dbo:award ?award .
  
  # Get birth place and label for these awardees
  ?otherAwardee dbo:birthPlace ?awardeeBirthPlace ;
               rdfs:label ?awardeeLabel .
}
```",3,3,4,3,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?personBand WHERE {
  # Find Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Identify the person born on March 30, 1945, who is a musical artist
  ?person dbo:musicalArtist true ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  
  # Find the band of this person
  ?bandMember dbo:memberOfBand ?personBand ;
              dbo:bandMember ?person .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowURL ?dawitChildURL WHERE {
  VALUES ?lamontCranston { dbr:Lamont_Cranston_(The_Shadow) }
  OPTIONAL {
    ?lamontCranston dbo:fictionalAlterEgoOf ?shadow .
    ?shadow rdfs:label ""The Shadow""@en .
    FILTER(LANG(?shadowLabel) = 'en')
    BIND(STR(?shadow) AS ?shadowURL)
  }

  VALUES ?dawitI { dbr:Dawit_I }
  OPTIONAL {
    ?dawitI dbo:child ?dawitChild .
    BIND(STR(?dawitChild) AS ?dawitChildURL)
  }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthDate ?birthDate .
  
  FILTER (?birthDate = ""1979-11-03""^^xsd:date)
  
  OPTIONAL { 
    ?person dbo:team ?team .
  }
  
  OPTIONAL {
    ?person dbo:managerOfTeam ?team .
  }
}
```",2,4,3,2,1,3,3,71,1,60,0,0.01639344262295082,1.0,0.03225806451612903
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember WHERE {
  # Find the associated musical artist of Phantomsmasher
  dbr:Phantomsmasher dbo:associatedMusicalArtist ?associatedArtist .
  
  # Ensure this associated artist is a band member of another entity
  ?associatedArtist dbo:bandMember ?bandMember .

  # Filter to ensure the band member is classified as a Band, Group, and Organization
  ?bandMember rdf:type dbo:Band ;
              rdf:type dbo:Group ;
              rdf:type db-org:Organization .
  
  # Ensure this band member is associated with Burnt by the Sun (band)
  ?bandMember dbo:associatedMusicalArtist dbr:Burnt_by_the_Sun_(band) .
}
```",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?commonManager WHERE {
  # Find the native country of Theodor Heuss
  dbr:Theodor_Heuss dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:countryName ?nativeCountry .

  # Identify manager for VfL Bochum in the 2006–07 season
  OPTIONAL { 
    dbr:VfL_Bochum_2006%E2%80%9307_season dbo:manager ?bochumManager .
  }

  # Identify manager for SBV Vitesse in the 2020–21 season
  OPTIONAL {
    dbr:SBV_Vitesse_2020%E2%80%9321_season dbo:manager ?vitesseManager .
  }
  
  # Check if there is a common manager between these two clubs' seasons
  FILTER (?bochumManager = ?vitesseManager)
  BIND(?bochumManager AS ?commonManager)

}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bismillahKhanBirthPlace ?soumitraChatterjeeBirthPlace WHERE {
  VALUES ?bismillahKhanResource { dbr:Bismillah_Khan }
  VALUES ?soumitraChatterjeeResource { dbr:Soumitra_Chatterjee }

  OPTIONAL {
    ?bismillahKhanResource dbo:birthPlace ?bismillahKhanBirthPlace .
  }
  
  OPTIONAL {
    ?soumitraChatterjeeResource dbo:birthPlace ?soumitraChatterjeeBirthPlace .
  }
}
```",4,4,5,2,2,3,2,20,1,5,1,0.16666666666666666,0.5,0.25
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find the event William Bayne participated in as a Royal Navy officer
  ?bayneEvent dbo:participatedIn ?baynePerson .
  ?baynePerson rdfs:label ""William Bayne (Royal Navy officer)""@en .

  # Find the military force associated with that event
  ?bayneEvent dbo:militaryForce ?militaryForce .

  # Find the event the 30th Regiment of Foot participated in
  ?regimentEvent dbo:participatedIn ?regiment .
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .

  # Ensure both events share the same military force
  ?regimentEvent dbo:militaryForce ?militaryForce .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInAndhraPradesh WHERE {
  # Find the alma mater of Chennupati Jagadish
  OPTIONAL { 
    dbr:Chennupati_Jagadish dbo:almaMater ?almaMater .
  }
  
  # Find an entity located in Andhra Pradesh
  OPTIONAL {
    ?entityInAndhraPradesh dbp:stateOrProvince dbr:Andhra_Pradesh .
  }
}
```",2,2,3,1,2,2,2,9,2,2,0,0.5,1.0,0.6666666666666666
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Ada Jane Low""@en .
  ?person rdf:type dbo:Politician .
}
```",1,2,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find person born on 1955-02-22 who is an athlete
  ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
          a dbo:Athlete .

  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Find actors in these films who are soccer players and athletes
  ?actor dbo:role ?film ;
         a dbo:SoccerPlayer, dbo:Athlete .

  # Link the team of Pablo Aimar
  ?pabloAimarTeam dbo:team dbr:Pablo_Aimar .
  ?actor dbo:playsFor ?pabloAimarTeam .

  FILTER (?person = ?actor)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?claimToFameProducer WHERE {
  # Find the actor who played Johnny Doughboy
  ?actor dbo:character dbr:Johnny_Doughboy .
  
  # Identify the professional alter ego of The Shadow
  ?alterEgo dbo:alterEgo dbr:The_Shadow ;
            a dbo:Person .

  # Identify the producer of A Star Is Born (1937)
  ?producer dbo:produced dbr:A_Star_Is_Born_(1937_film) .
  
  # Determine the claim to fame for each individual
  OPTIONAL { ?actor dbo:claimToFame ?claimToFame1 . }
  OPTIONAL { ?alterEgo dbo:claimToFame ?claimToFame2 . }

  # Find the producer of these claims to fame
  OPTIONAL { ?claimToFameProducer dbo:producer ?claimToFame1 . }
  OPTIONAL { ?claimToFameProducer dbo:producer ?claimToFame2 . }
  
  FILTER (?actor = ?alterEgo)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:John_Boxer dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,2,9,1,0,1,1.0,0.5,0.6666666666666666
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?americanReference WHERE {
  VALUES ?elDeafoResource { 
    dbr:El_Deafo 
  }
  OPTIONAL {
    ?elDeafoResource dbo:basedOn ?americanReference .
  }
  FILTER (STRSTARTS(STR(?americanReference), ""http://dbpedia.org/resource/Category:American_television_series""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workCountry ?childBirthPlace WHERE {
  # Lao She's work ""Rickshaw Boy""
  dbr:Camel_Xiangzi dbo:country ?workCountry .
  
  # Chiang Wei-kuo, child of Chiang Ching-kuo
  dbr:Chiang_Wei-kuo dbo:birthPlace ?childBirthPlace .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalChild ?parent WHERE {
  # Identify Prince Faisal bin Hussein
  VALUES ?princeFaisal { dbr:Faisal_bin_Hussein }

  # Find his children
  ?princeFaisal dbo:child ?child .

  # Filter for children who are royalty
  ?child rdf:type dbo:Royal .

  # Determine the parent of these royal children
  ?child dbo:parent ?parent .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .
}
```",2,2,3,2,1,2,2,9,0,0,2255,0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?manuelHuerga { dbr:Manuel_Huerga }
  ?film dbo:director ?manuelHuerga .
  
  VALUES ?marceloSarmiento { dbr:Marcelo_Sarmiento_(footballer) }
  ?marceloSarmiento dbo:birthDate ?birthdate .
  FILTER (YEAR(?birthdate) = 1975 && MONTH(?birthdate) = 1 && DAY(?birthdate) = 10)
  
  OPTIONAL {
    ?teamMember dbo:member ?marceloSarmiento .
    ?film dbo:starring ?actor .
    ?actor rdf:type dbo:SoccerPlayer .
    ?actor rdf:type dbo:Athlete .
  }
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Ann Sothern's birth name
  VALUES ?annSothernURL { dbr:Ann_Sothern }
  ?annSothernURL dbo:birthName ?birthName .

  # Identify the actor of ""1,000 Dollars a Minute""
  VALUES ?movieURL { dbr:1_000_Dollars_a_Minute_(film) }
  ?actor dbo:starring ?movieURL .
  
  # Find the spouse of this actor
  OPTIONAL {
    ?actor dbo:spouse ?person .
  }

  FILTER (?birthName = ?annSothernURL)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  dbr:Elvira_of_Castile dbo:parent dbr:Roger_II_of_Sicily .
  dbr:Elvira_of_Castile dbo:child ?elviraChild .
  ?elviraChild a dbo:Person .
  ?elviraChild dbo:child ?grandchild .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?actorName WHERE {
  # Find the alter ego of The Shadow in comics
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Identify an actor who played The Shadow in a movie
  ?movie dbo:starring ?actor .
  ?movie dbo:title ""The Shadow"" .
  
  # Ensure this actor also appeared in a television show
  ?tvShow dbo:starring ?actor .
  ?tvShow dbo:title ?title .
  
  # Connect to Roger Corman (Richard Grant Esterhuysen)
  dbr:Roger_Corman rdfs:label ""Richard Grant Esterhuysen""@en .
  FILTER (?actor = dbr:Robert_Duvall || ?actor = dbr:Timothy_Hutton) # Known actors for The Shadow movie
  
  BIND(?actor AS ?actorName)
}
```",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?shadowAlterEgo { dbr:The_Shadow }
  VALUES ?starIsBorn1937 { dbr:A_Star_Is_Born_(1937_film) }

  ?person dbo:alterEgo ?shadowAlterEgo .
  ?starIsBorn1937 dbo:producer ?person .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?rogerII { dbr:Roger_II_of_Sicily }
  VALUES ?elvira { dbr:Elvira_of_Castile }
  VALUES ?williamI { dbr:William_I_of_Sicily }

  ?child dbo:parent ?rogerII .
  ?child dbo:parent ?elvira .
  
  ?williamI dbo:father ?child .

  FILTER EXISTS {
    ?child rdf:type dbo:Monarch .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?region dbo:timeZone dbr:Eastern_European_Time .
}
```",1,2,2,1,1,3,2,20,20665,133,0,0.9936051543417637,1.0,0.9967923208643852
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?award dbo:recipient ?person .
  ?person dbo:birthPlace ?settlement .
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:country dbr:United_States .
  ?war dbo:awardee ?person .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?algerianWar dbo:participatingMilitaryForce ?militaryForce .
  FILTER (str(?algerianWar) = ""Algerian_War"")
  
  ?militaryForce dbo:commander ?commander .

  ?eleonore dbo:father ?commander .
  FILTER (str(?eleonore) = ""Eleonore_of_Austria,_Queen_of_Poland"")

  OPTIONAL {
    ?commander dbo:societalEvent ?societalEvent .
    ?commander dbo:event ?event .
    ?commander dbo:televisionShow ?tvShow .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Francis I, Duke of Lorraine
  dbr:Francis_I,_Duke_of_Lorraine dbo:parent ?parent .
  
  # Find the spouse of this parent
  ?parent dbo:spouse ?spouse .

  # Ensure the spouse is both a royalty and a noble
  ?spouse dbo:royalTitle ?royalty .
  ?spouse dbo:nobleTitle ?nobility .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Aleksandr_Lvovich_Davydov dbo:participatedIn ?war .
  FILTER (STRSTARTS(STR(?war), ""http://dbpedia.org/resource/"") && 
          STRCONTAINS(STR(?war), ""War""))
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Baeda_Maryam_I dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gustavoPetroParty ?royBarrerasParty WHERE {
  VALUES ?gustavoPetro { dbr:Gustavo_Petro }
  VALUES ?royBarreras { dbr:Roy_Leonardo_Barreras_Montealegre }

  ?gustavoPetro dbo:party ?gustavoPetroParty .
  ?royBarreras dbo:party ?royBarrerasParty .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?maria dbr:Maria_of_Bytom .
  ?maria dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
  ?father a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle WHERE {
  dbr:Joe_Biden dbo:author ?work .
  ?work rdf:type ?workType .
  
  FILTER (
    ?workType IN (dbo:Book, dbo:Article) 
  )
  
  BIND(?work AS ?writtenWork)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  dbr:Iliza_Shlesinger dbo:starring ?movie .
  ?movie rdf:type dbo:Film .
  
  ?movie dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thirtyAwardeeWar ?nationalPartyLeaderWar WHERE {
  # Find the war associated with an awardee who received their 30th award
  ?person dbo:award ?award .
  FILTER (STR(?award) CONTAINS ""30th"") .
  OPTIONAL { 
    ?person dbo:associatedWith ?thirtyAwardeeWar .
  }

  # Find the leader of the National Party of Greece and associated war
  dbr:National_Party_of_Greece dbo:leader ?nationalPartyLeader .
  OPTIONAL {
    ?nationalPartyLeader dbo:associatedWith ?nationalPartyLeaderWar .
  }
}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?parent ?child WHERE {
  # Find the commander of the Siege of Mukha who is royalty
  ?siege dbo:commander ?commander .
  FILTER (strstarts(str(?siege), ""Mukha_Siege""))
  
  # Ensure the commander is a royal figure
  ?commander rdf:type dbo:Monarch .

  # Find the parent of this commander, who must also be royalty
  ?parent dbo:child ?commander .
  FILTER (?parent rdf:type dbo:Monarch) .

  # Check if Baeda Maryam I is a child of this royal parent
  ?parent dbo:child dbr:Baeda_Maryam_I .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?fatherOfChild WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Step 2: Find the children of this parent
  ?child dbo:parent ?parent .
  
  # Step 3: Determine the father of each child
  ?child dbo:father ?fatherOfChild .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  VALUES ?frederickStanley { dbr:Frederick_Stanley,_16th_Earl_of_Derby }
  
  ?child dbo:childOf ?frederickStanley .
  OPTIONAL {
    ?child dbo:parent ?parent .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  VALUES ?georgeDucas { 
    dbr:George_Ducas 
  }
  VALUES ?jeanBaptistComteDarco { 
    dbr:Jean_Baptiste,_Comte_d'Arco 
  }

  OPTIONAL {
    ?georgeDucas dbo:associatedWith ?commonEntity .
  }
  OPTIONAL {
    ?jeanBaptistComteDarco dbo:associatedWith ?commonEntity .
  }

  FILTER EXISTS { ?commonEntity a dbo:TelevisionShow . }
  FILTER EXISTS { ?commonEntity a dbo:SocietalEvent . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:1._FC_Magdeburg dbo:member ?member .
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?amasaTracyURL ?conflict WHERE {
  VALUES ?amasaTracyURL { 
    dbr:Amasa_Tracy 
  }
  ?amasaTracyURL dbo:militaryConflict ?conflict .
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?rogerChild .
  
  # Child of Roger II's child (grandchild)
  ?rogerChild dbo:child ?childOfChild .

  # Ensure the grandchild is royalty
  ?childOfChild rdf:type dbo:Monarch .

  # Ensure this person is also the father of William II of Sicily
  ?childOfChild dbo:child dbr:William_II_of_Sicily .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  VALUES ?janetGaynorWork { 
    dbr:7th_Heaven_(film) 
  }
  
  OPTIONAL {
    ?relatedWork dbo:basedOn ?janetGaynorWork .
    ?relatedWork dbo:character dbr:The_Shadow .
  }

  ?janetGaynorWork dbo:producer ?producer .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Eleonora Menicucci's alma mater
SELECT ?almaMater WHERE {
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
}

# Query for the establishment date of Federal University of Paraíba
SELECT ?foundingDate WHERE {
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?residence WHERE {
  VALUES ?georgeHCameron { dbr:George_H._Cameron }
  OPTIONAL {
    ?georgeHCameron dbo:award ?award .
  }
  OPTIONAL {
    ?leader foaf:based_near ?residence ;
            dbo:positionHeld dbr:Leader_of_the_Ulster_Unionist_Party .
  }
  FILTER (?award = ?residence)
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?burntByTheSun { 
    dbr:Burnt_by_the_Sun_(film) 
    dbr:Burnt_by_the_Sun_(album)
  }
  
  ?burntByTheSun dbo:associatedMusicalArtist ?artist .
  
  FILTER (
    ?artist IN (dbr:The_Beatles, dbr:Queen, dbr:U2) || # Example bands
    (EXISTS { ?artist a dbo:Band . } ||
     EXISTS { ?artist a dbo:Group . } ||
     EXISTS { ?artist a dbo:Organization . })
  )
  
  ?artist dbo:bandMember ?bandMember .
}
```",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?shadowAlterEgo { dbr:Lamont_Cranston }
  VALUES ?atlFilm { dbr:ATL_(film) }

  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
  
  ?atlFilm dbo:starring ?actor .

  FILTER (?actor = ?shadowAlterEgo)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?macyGray { 
    dbr:Macy_Gray 
  }
  ?macyGray dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,2,1,3,2,20,0,6,6,0.0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfWilliamII WHERE {
  # Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile dbo:child ?alfonsoChild .
  
  # Child of Alfonso VI who is the parent of William II of Sicily
  ?alfonsoChild dbo:child ?williamII .
  
  # William II of Sicily's father
  ?williamII dbo:father ?fatherOfWilliamII .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandchild WHERE {
  VALUES ?alfonsoVI { dbr:Alfonso_VI_of_León_and_Castile }
  
  ?alfonsoVIChild dbo:child ?alfonsoVI .
  ?alfonsoVIChild dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,5,8,0.0,0.0,0
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Find Yeshaq I's royal parent
  ?yeshaqI a dbo:Person ;
           dbo:parent ?royalParent .
  
  FILTER EXISTS { ?royalParent dbo:royalty true . }
  
  # Find Na'od's grandfather who is royalty and office holder
  ?naod a dbo:Person ;
        dbo:father ?fatherNaod .
  
  ?fatherNaod dbo:father ?grandfatherNaod .
  
  FILTER EXISTS { ?grandfatherNaod dbo:royalty true . }
  FILTER EXISTS { ?grandfatherNaod dbo:officeHolder true . }

  # Find the common ancestor
  VALUES ?yeshaqI { dbr:Yeshaq_I_of_Ethiopia }
  VALUES ?naod { dbr:Na'od_of_Ethiopia }
  
  FILTER (?royalParent = ?grandfatherNaod)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:country dbr:United_Kingdom .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Picketts_Charge dbp:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  VALUES ?algerianWar { 
    dbr:Algerian_War 
  }
  ?militaryForce dbo:participatedIn ?algerianWar .
}
```",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?award WHERE {
  # Identify the Royal Swedish Academy of Sciences
  VALUES ?academy { 
    dbr:Royal_Swedish_Academy_of_Sciences 
  }
  
  # Find the Nobel Prize in Physics awarded by this academy
  ?nobelPrize dbo:prizeCategory dbr:Nobel_Prize_in_Physics ;
              dbo:awardingBody ?academy .
  
  # Retrieve information about the show or event related to the prize
  OPTIONAL {
    ?nobelPrize dbo:awardEvent ?show .
  }
  
  # Find references to the award given to an awardee
  OPTIONAL {
    ?recipient dbo:recipientOfAward ?nobelPrize ;
               dbo:awards ?award .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find the child of Mariclare Costello's spouse
  OPTIONAL { ?child dbo:parent ?spouse . }

  # Step 3: Determine the parent of this child (other than the spouse)
  OPTIONAL { ?child dbo:parent ?parent . }
  
  # Step 4: Identify the actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  VALUES ?judgmentActor {
    dbr:Mariclare_Costello
    # Add other potential actors if known, or leave open for discovery
  }
  OPTIONAL { ?parent dbo:actor ?judgmentRole . FILTER(STRSTARTS(STR(?judgmentRole), ""http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg"")) }

  # Step 5: Find Amy Arbus's parent
  dbr:Amy_Arbus dbo:parent ?parent .

  FILTER (?spouse != ?parent) # Ensure the spouse is not counted as their own child's other parent
}
```",5,5,6,3,3,3,3,71,0,1,1,0.0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory WHERE {
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen"" .
  
  ?hansen dbo:deathPlace ?deathPlace .

  ?deathPlace rdf:type/rdfs:subClassOf* dbo:Settlement .

  ?administeringTerritory dbp:administersFrom ?deathPlace .
  
  BIND(?administeringTerritory AS ?territory)
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?glennYoungkinBirthPlace WHERE {
  OPTIONAL { 
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
  OPTIONAL { 
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfPrinceOmar ?royalChild ?parentOfRoyalChild WHERE {
  # Prince Omar bin Faisal and his parent
  dbr:Prince_Omar_bin_Faisal dbo:parent ?parentOfPrinceOmar .
  
  # Ensure the parent is a royalty
  ?parentOfPrinceOmar rdf:type dbo:Monarch .

  # Find any child of this royal parent who is also a royalty
  OPTIONAL {
    ?parentOfPrinceOmar dbo:child ?royalChild .
    ?royalChild rdf:type dbo:Monarch .
    
    # Get the parent of this royal child
    ?royalChild dbo:parent ?parentOfRoyalChild .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?theodorHeussNativeCountry ?vitesseManagerNativeCountry WHERE {
  # Theodor Heuss's native country
  OPTIONAL {
    dbr:Theodor_Heuss dbo:nationality ?theodorHeussNationality .
    ?theodorHeussNationality rdfs:label ?theodorHeussNativeCountry .
    FILTER (lang(?theodorHeussNativeCountry) = ""en"")
  }
  
  # Manager of the 2020–21 SBV Vitesse season
  OPTIONAL {
    dbr:SBV_Vitesse dbo:manager ?vitesseManager .
    ?vitesseManager dbo:nationality ?vitesseManagerNationality .
    ?vitesseManagerNationality rdfs:label ?vitesseManagerNativeCountry .
    FILTER (lang(?vitesseManagerNativeCountry) = ""en"")
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?film dbo:title ""1,000 Dollars a Minute"" .
  ?film dbo:starring ?actor .
  
  ?actor dbo:spouse ?spouse .
  
  ?spouse dbo:partyAffiliation dbr:Republican_Party_(United_States) .
  
  ?spouse dbo:birthName ""Ann Sothern""@en .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?stoneSour { dbr:Stone_Sour }
  VALUES ?mudvayne { dbr:Mudvayne }

  ?member dbo:bandMember ?stoneSour .
  ?member dbo:bandMember ?mudvayne .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find Daniel Elahi Galán's country of origin
  OPTIONAL { 
    dbr:Daniel_Elái_Galán dbo:nationality ?country .
  }
  
  # Find Gustavo Petro's political party
  OPTIONAL {
    dbr:Gustavo_Petro dbo:memberOfParty ?party .
  }

  # Match entities that are in the same country and belong to the same party
  ?entity dbo:nationality ?country ;
          dbo:memberOfParty ?party .

  FILTER (?country = ?country && ?party = ?party)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Bob Thompson (musician)
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .
  
  # Ensure the person is associated with The Shadow
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbo:alias dbr:The_Shadow .
  }
  
  # Find a band or musical artist associated with this birth name
  ?person dbo:birthName ?birthName .
  ?person dbo:associatedBandOrMusicalArtist ?band .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Philipp_Albrecht,_Duke_of_Württemberg dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceInCharleston ?medalOfHonorWar WHERE {
  # Quincy Adams Gillmore's military unit in Charleston, South Carolina
  OPTIONAL {
    dbr:Quincy_A._Gillmore dbo:militaryUnit ?forceInCharleston .
    FILTER(CONTAINS(LCASE(STR(?forceInCharleston)), ""charleston, south carolina""))
  }
  
  # War for which Quincy Adams Gillmore received the Medal of Honor
  OPTIONAL {
    dbr:Quincy_A._Gillmore dbo:award ?medalAward .
    ?medalAward dbo:awardee dbr:Quincy_A._Gillmore ;
                dbo:war ?medalOfHonorWar .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentURL WHERE {
  OPTIONAL { 
    dbr:Tisha_Sterling dbo:parent ?parent .
  }
  BIND(STR(?parent) AS ?parentURL)
}
```",1,1,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coraSueCollinsProducer ?janetGaynorMovieProducer ?theShadowRealName WHERE {
  # Cora Sue Collins' claim to fame and its producer
  OPTIONAL {
    ?coraSueCollinsWork dbo:claimToFame dbr:Cora_Sue_Collins .
    ?coraSueCollinsWork dbo:producer ?coraSueCollinsProducer .
  }

  # Janet Gaynor's movie claim to fame and its producer
  OPTIONAL {
    ?janetGaynorMovie dbo:claimToFame dbr:Janet_Gaynor .
    ?janetGaynorMovie dbo:genre dbr:Film .
    ?janetGaynorMovie dbo:producer ?janetGaynorMovieProducer .
  }

  # The Shadow's real name
  OPTIONAL {
    ?theShadowCharacter dbo:alterEgo dbr:The_Shadow .
    ?theShadowCharacter dbo:profession ?theShadowProfession .
    ?theShadowRealName dbo:character dbr:The_Shadow .
  }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?quincyAdamsGillmoreForce ?henryClayLewisBirthplace ?medalOfHonorWar WHERE {
  # Quincy Adams Gillmore's rank
  dbr:Quincy_A._Gillmore dbo:rank ?quincyAdamsGillmoreForce .
  
  # Henry Clay Lewis's birthplace, ensuring it is an American settlement
  dbr:Henry_Clay_Lewis dbo:birthPlace ?henryClayLewisBirthplace .
  ?henryClayLewisBirthplace a dbo:Settlement ;
                           dbo:country dbr:United_States .

  # Medal of Honor awardee's war
  ?medalOfHonorRecipient dbo:award dbr:Medal_of_Honor .
  ?medalOfHonorRecipient dbo:conflict ?medalOfHonorWar .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName ?sharedProfession WHERE {
  # Find the actor from ""Dispatches from Elsewhere""
  VALUES ?dispatchesFromElsewhere { dbr:Dispatches_from_Elsewhere_(TV_series) }
  
  ?castMember dbo:cast dbp:role ?role .
  ?castMember rdfs:label ?actorName .
  FILTER(CONTAINS(LCASE(?actorName), ""dispatches from elsewhere""))
  
  # Find Shatrughan Sinha's professions
  dbr:Shatrughan_Sinha dbo:profession ?shatrughanProfession .

  # Match actors who share a profession with Shatrughan Sinha
  ?castMember dbo:profession ?sharedProfession .
  FILTER(?sharedProfession = ?shatrughanProfession)
  
  # Ensure the actor is not Shatrughan Sinha himself
  FILTER(?actorName != ""Shatrughan Sinha"")
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Roy_Leonardo_Barreras_Montealegre 
  }
  ?person rdf:type dbo:Politician .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?harrietteArleneLake ?rogerPryorsSpouse WHERE {
  ?harrietteArleneLake foaf:givenName ""Harriette"" .
  ?harrietteArleneLake foaf:familyName ""Arlene Lake"" .
  
  ?rogerPryor dbo:birthName ""Roger Pryor"" .
  ?rogerPryor dbo:spouse ?rogerPryorsSpouse .
  
  FILTER (?harrietteArleneLake = ?rogerPryorsSpouse)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouse WHERE {
  # Find Myat Hpone Pyo and their predecessor
  ?myatHponePyo a dbo:Person ;
                rdfs:label ""Myat Hpone Pyo""@en .
  
  OPTIONAL { 
    ?myatHponePyo dbo:predecessor ?predecessor .
  }
  
  # Find the father of Myat Hpone Pyo
  ?father dbo:child ?myatHponePyo ;
          rdfs:label ""Father of Myat Hpone Pyo""@en .

  # Find the spouse of the father and ensure they are royalty
  OPTIONAL {
    ?spouse dbo:spouse ?father .
    FILTER EXISTS { ?spouse rdf:type dbo:Monarch }
  }

  # Ensure the predecessor is linked to the spouse
  FILTER (?predecessor = ?spouse)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorURL ?albumWriter WHERE {
  # Finding the successor of Yurii Khmelnytsky
  OPTIONAL {
    dbr:Yuri_Khmelnytsky dbo:succeededBy ?successor .
    BIND(?successor AS ?successorURL)
  }
  
  # Finding the writer of ""Always the Love Songs""
  OPTIONAL {
    dbr:Always_the_Love_Songs dbo:artist ?albumArtist .
    ?albumArtist dbo:lyricist ?albumWriter .
    BIND(dbr:Always_the_Love_Songs AS ?albumURL)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  ?birthPlace dbo:country dbr:United_States_of_America .
}
```",2,4,3,2,1,3,3,71,0,0,12,0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganAwardeeBirthPlace ?ceceBellBirthPlace ?virginiaGovernorBirthPlace WHERE {
  # Vince Gilligan's Awardee (assuming Emmy Award for Breaking Bad)
  OPTIONAL {
    dbr:Emmy_Award_for_Outstanding_Drama_Series dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?vinceGilliganAwardeeBirthPlace .
  }
  
  # Cece Bell's Birth Place
  dbr:Cecilie_Caroline_Bell dbo:birthPlace ?ceceBellBirthPlace .

  # Governor of Virginia (assuming current governor is Glenn Youngkin)
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?virginiaGovernorBirthPlace .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?event ?tvShow WHERE {
  # Find the commander of the Algerian War
  ?algerianWar dbo:participatingMilitaryForce [
    a dbo:MilitaryConflict ;
    dbo:commander ?commander .
  ].
  
  # Link to societal events, general events, and television shows
  OPTIONAL { ?event dbo:relatedEvent ?commander . }
  OPTIONAL { ?tvShow dbo:subject ?commander . }

  # Filter for the Algerian War specifically
  FILTER(STRSTARTS(LCASE(?algerianWar), ""algerian war""))
  
  # Ensure we get events and TV shows related to the commander
  FILTER EXISTS { ?event a dbo:Event }
  FILTER EXISTS { ?tvShow a dbo:TelevisionShow }
}
```",3,6,4,3,1,3,3,71,0,0,124,0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  VALUES ?edwardStanley { dbr:Edward_Stanley,_17th_Earl_of_Derby }
  
  # Step 2: Find his child who is a politician
  ?child dbo:parent ?edwardStanley .
  ?child rdf:type dbo:Politician .

  # Step 3: Determine the parent of this child
  ?parentOfChild dbo:child ?child .

  # Step 4: Identify the alumnus of Eton College
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  # Step 5: Find the politician child of this alumnus
  ?politicianChild dbo:parent ?alumnus .
  ?politicianChild rdf:type dbo:Politician .

  # Step 6: Determine the parent of this child
  ?anotherParent dbo:child ?politicianChild .

  # Step 7: Check if the parent from step 3 is a politician and office holder
  FILTER (?parentOfChild = ?anotherParent)
  ?parentOfChild rdf:type dbo:Politician .
  OPTIONAL { ?parentOfChild rdf:type dbo:OfficeHolder . }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fellowshipURL WHERE {
  ?fellowshipURL a dbo:Award .
  ?fellowshipURL rdfs:label ""Sangeet Natak Akademi Fellowship""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Russian_Empire .
}
```",1,1,2,1,1,2,3,28,5475,0,0,1.0,1.0,1.0
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL ?personName WHERE {
  VALUES ?birminghamResource { 
    dbr:Birmingham 
  }
  ?person dbo:birthPlace ?birminghamResource .
  OPTIONAL { ?person rdfs:label ?personName FILTER (lang(?personName) = 'en') . }
}
```",1,1,2,1,1,3,2,20,0,1509,1531,0.0,0.0,0
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraOffice ?tenantOfRuizGallardonResidence WHERE {
  # Find Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelMauraOffice .
  
  # Find the tenant of Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizGallardonResidence .
  ?tenant dbo:residence ?ruizGallardonResidence .
  
  # Ensure the office is related to the Central African Republic Civil War and held by a politician
  ?miguelMauraOffice dbo:relatedEvent dbr:Central_African_Republic_Civil_War .
  ?miguelMauraOffice dbo:officeHolder ?politician .
  FILTER (dbo:Politician(?politician))
  
  # Ensure the tenant is also a politician
  FILTER (dbo:Politician(?tenant))
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  VALUES ?anumtaQureshi { 
    dbr:Anumta_Qureshi 
  }
  ?show dbo:actor ?anumtaQureshi .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war WHERE {
  # Find USS Arcadia (ID-1605) and its commander
  ?arcadia a dbo:Ship ;
           dbo:commander ?commander .
  
  FILTER(STR(?arcadia) = ""USS_Arcadia_(ID-1605)"")

  # Find Bill Clinton's military service during World War I
  dbr:Bill_Clinton dbo:militaryService ?militaryService .
  ?militaryService dbo:conflict ?war .

  # Filter for World War I, which is associated with the Spanish Flu pandemic
  FILTER(STR(?war) = ""World_War_I"")

  # Link commander to Bill Clinton's military service context
  OPTIONAL {
    ?commander dbo:militaryService ?militaryService .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?band WHERE {
  ?award a dbo:Award .
  ?award dbo:location ?region .
  ?region a dbo:State ;
          dbo:country dbr:United_States_of_America ;
          dbo:settlement ?settlement .
  
  ?band a dbo:MusicalArtist ;
        dbo:originPlace dbr:New_York_(state) .

  ?award dbo:recipient ?band .
}
```",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeWar ?zervasWar WHERE {
  # Find the Nobel Prize awardees of 1930 and their associated wars
  VALUES ?year { ""1930"" }
  ?award dbo:dateReceived ?date .
  FILTER(YEAR(?date) = YEAR(LANG(?year)))
  ?award dbo:category dbr:Nobel_Prize_in_Physics || dbr:Nobel_Prize_in_Chemistry || dbr:Nobel_Prize_in_Medicine || dbr:Nobel_Prize_in_Literature || dbr:Nobel_Prize_for_Peace .
  ?awardee dbo:recipientOf ?award .
  OPTIONAL {
    ?awardee dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""war"") || CONTAINS(LCASE(?occupation), ""military""))
    ?awardee dbo:associatedWith ?awardeeWar .
  }

  # Find Napoleon Zervas and his associated wars
  dbr:Napoleon_Zervas dbo:occupation dbr:Military_officer ;
                      dbo:associatedWith ?zervasWar .

}
```",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award WHERE {
  ?person dbo:birthPlace dbr:Florida ;
          a dbo:MusicalArtist .
  
  ?award dbo:location dbr:New_York_(state) ;
         a dbo:Award .

  ?band dbo:origin dbr:New_York_City , dbr:New_York_State ;
        dbo:receivedAward ?award .

  FILTER (?person != ?band)
}
```",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalAssociatedArtist WHERE {
  # Step 1: Find James Plotkin's associated musical artists
  VALUES ?plotkin { dbr:James_Plotkin }
  
  ?plotkin dbo:associatedMusicalArtist ?firstLevelArtist .
  
  # Step 2: For each first-level artist, find their associated musical artists
  OPTIONAL {
    ?firstLevelArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
  }

  # Ensure the final artist is a band member of Human Remains
  FILTER EXISTS { 
    ?humanRemains dbr:Human_Remains ;
                  dbo:bandMember ?finalAssociatedArtist .
  }
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?toyotomiHidenagaWar ?hashibaHidekatsuWar WHERE {
  VALUES ?yamazaEnjiro { dbr:Yamazaki_Enjirō }
  ?yamazaEnjiro dbo:birthPlace ?birthPlace .
  
  VALUES ?toyotomiHidenaga { dbr:Toyotomi_Hidenaga }
  ?toyotomiHidenaga dbo:associatedBattle ?toyotomiHidenagaWar .

  VALUES ?hashibaHidekatsu { dbr:Hashiba_Hidekatsu }
  ?hashibaHidekatsu dbo:associatedBattle ?hashibaHidekatsuWar .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?unit dbo:participatedIn dbr:Battle_of_Fort_Royal .
  ?battle dbo:commander ?commander .
  
  FILTER (?unit = dbr:The_Triple_Xs) 
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find Marcelo Sarmiento's birth date
  dbr:Marcelo_Sarmiento dbo:birthDate ?marceloSarmientoBirthDate .
  
  # Find an athlete born on 1955-02-22
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date .
  
  # Ensure Marcelo Sarmiento shares the same birth date as the athlete
  FILTER (?marceloSarmientoBirthDate = ?athleteBirthDate)
  
  # Ensure Marcelo Sarmiento is a player of Sergio Agüero
  dbr:Sergio_Agüero dbo:player ?team .
  dbr:Marcelo_Sarmiento dbo:player ?team .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?christianIXReign ?olafIReign WHERE {
  dbr:Christian_IX_of_Denmark dbo:reign ?christianIXReign .
  dbr:Olaf_I_of_Denmark dbo:reign ?olafIReign .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?civilWar WHERE {
  dbr:Picketts_Charge dbo:participatedIn ?confederateArmy .
  ?confederateArmy dbo:participatedIn ?civilWar .
  FILTER (strstarts(str(?civilWar), ""Civil_War""))
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?judgmentActorParent ?doonArbusParent WHERE {
  VALUES ?judgmentActor { 
    dbr:Walter_Scherer # Assuming Walter Scherer is the professional in question
  }
  OPTIONAL {
    ?judgmentActor dbo:parent ?judgmentActorParent .
  }

  VALUES ?doonArbus { 
    dbr:Doon_Arbus
  }
  OPTIONAL {
    ?doonArbus dbo:parent ?doonArbusParent .
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find movies starring Herschel Bernardi
  VALUES ?herbMovie { 
    ?movieHerschelBernardi .
  }
  
  dbr:Herschel_Bernardi dbo:starring ?herbMovie .

  # Find the parent of Amy Arbus and their works
  ?parent a dbo:Person ;
          dbo:child dbr:Amy_Arbus .
  
  ?parentWork dbo:work ?movieHerschelBernardi .

  # Get actors from the common movie
  ?actor dbo:starring ?movieHerschelBernardi .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?child WHERE {
  # Find Isabella of Austria's father
  dbr:Isabella_of_Austria dbo:father ?father .
  
  # Find commanders in the Siege of Padua and their children
  ?commander dbo:participatedInBattle dbr:Siege_of_Padua ;
             dbo:child ?child .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Match Isabella's father with the commander's child
  FILTER (?father = ?child)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?settlement WHERE {
  # Find Henry Clay Lewis's birthplace
  VALUES ?henryClayLewis { dbr:Henry_Clay_Lewis }
  
  ?henryClayLewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
             dbo:country dbr:United_States_of_America .

  # Find Medal of Honor awardees associated with this place
  ?medalAwardee dbo:awardedBy dbr:Medal_of_Honor ;
               dbo:placeOfBirth ?birthPlace .
  
  # Get the war associated with the Medal of Honor awardee
  ?medalAwardee dbo:servedInMilitaryConflict ?war .

  # Return the settlement and the war
  BIND(?birthPlace AS ?settlement)
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Step 1: Find Princess Muna al-Hussein's children who are royalty
  ?childMuna dbo:parent dbr:Princess_Muna_al-Hussein .
  ?childMuna dbo:royaltyTitle ?title .

  # Step 2: Find the parent of this royal child
  ?childMuna dbo:parent ?commonParent .

  # Step 3: Identify Princess Sara bint Faisal's parent
  dbr:Princess_Sara_bint_Faisal dbo:parent ?saraParent .

  # Step 4: Check if both parents are the same
  FILTER (?commonParent = ?saraParent)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?tupacURL ?stevieWonderURL ?associatedArtist WHERE {
  VALUES ?birthName { 
    ""Tupac Amaru Shakur"" 
    ""Darryl Paa Kwesi Bannerman-Martin""
  }
  
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person rdf:type dbo:Musician .
    
    FILTER (?birthName = ""Tupac Amaru Shakur"")
    BIND(?person AS ?tupacURL)
  }

  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person rdf:type dbo:Musician .
    
    FILTER (?birthName = ""Darryl Paa Kwesi Bannerman-Martin"")
    BIND(?person AS ?stevieWonderURL)
  }
  
  OPTIONAL {
    ?tupacURL dbo:associatedMusicalArtist ?associatedArtist .
  }

  OPTIONAL {
    ?stevieWonderURL dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  VALUES ?audreyHepburn { dbr:Audrey_Hepburn }
  
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         dbo:starring ?audreyHepburn .
}
```",1,3,2,1,1,2,3,28,0,0,15,0,0.0,0
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?personWithBirthName WHERE {
  # Part 1: Party member of the ruling party in Central, Louisiana
  OPTIONAL {
    ?centralLocation a dbo:City ;
                     dbo:country dbr:United_States ;
                     rdfs:label ""Central, Louisiana""@en .
    ?politician dbo:officeHolder ?office ;
                dbo:memberOf ?party ;
                dbo:location ?centralLocation .
    ?party dbo:name ?rulingPartyName .
    FILTER(CONTAINS(LCASE(?rulingPartyName), ""democratic"") || CONTAINS(LCASE(?rulingPartyName), ""republican""))
    BIND(?politician AS ?partyMember)
  }
  
  # Part 2: Person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor)
  OPTIONAL {
    ?tishaSterling dbo:parent ?parent .
    ?parent dbo:birthName ?birthName .
    ?rogerPryorActor a dbo:Actor ;
                     dbo:spouse ?personWithBirthName .
    FILTER(?birthName = ?personWithBirthName)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerOfCoraWork ?producerOfActorClaimToFame WHERE {
  # Part 1: Cora Sue Collins' claim to fame and its producer
  OPTIONAL {
    ?coraWork dbo:author dbr:Cora_Sue_Collins .
    ?coraWork dbo:producer ?producerOfCoraWork .
  }

  # Part 2: Actor of High Society Blues and their claim to fame's producer
  ?highSocietyActor dbo:actorIn dbr:High_Society_Blues .
  OPTIONAL {
    ?actorClaimToFame dbo:actor ?highSocietyActor ;
                     a dbo:Film .
    ?actorClaimToFame dbo:producer ?producerOfActorClaimToFame .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Films produced by Nat Levine
  ?film dbo:filmProducer dbr:Nat_Levine .
  
  # Actor of the film
  ?film dbo:actor ?actor .

  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Person born as Anna Soderstrom (Ann Sothern's birth name)
  ?person foaf:name ""Anna Soderstrom""@en .
  
  # Ensure the spouse is the person born as Anna Sothern
  FILTER (?spouse = ?person)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?author { 
    dbr:Stephen_Hawking # Assuming Stephen Hawking is the author based on known works
  }
  
  ?author dbo:spouse ?spouse .
  
  OPTIONAL {
    ?spouse dbo:officeHolder ?office .
  }
  
  FILTER EXISTS { ?spouse dbo:officeHolder ?office . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalAlterEgo ?actor WHERE {
  # Find the professional alter ego of ""The Golden Master"" series
  VALUES ?goldenMasterSeries { dbr:The_Golden_Master_(series) }
  ?goldenMasterSeries dbo:alterEgo ?professionalAlterEgo .

  # Identify the author of ""Smartbomb""
  VALUES ?smartbombBook { dbr:Smartbomb_(book) }
  ?smartbombBook dbo:author ?author .

  # Find movies that this author has acted in
  ?movie dbo:starring ?actor .
  FILTER (?actor != ?professionalAlterEgo)
  ?author dbo:actedIn ?movie .
  
  # Ensure the actor is associated with ""The Golden Master""
  OPTIONAL {
    ?actor dbo:alterEgo ?goldenMasterSeries .
  }
}
```",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Arthur Stanley (politician) and his father
  dbr:Arthur_Stanley_(politician) dbo:father ?arthurFather .

  # Frederick Stanley, 16th Earl of Derby and one of his children
  dbr:Fredrick_Stanhope_16th_Earl_of_Derby dbo:child ?frederickChild .

  # The parent of the child of Frederick Stanley
  ?frederickChild dbo:parent ?commonParent .

  # Check if the father of Arthur Stanley is also the parent of Frederick's child
  FILTER (?arthurFather = ?commonParent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childURL ?childLabel WHERE {
  # Identify Saw Min Phyu's spouse
  dbr:Saw_Min_Phu dbo:spouse ?spouse .
  
  # Find the children of the spouse
  ?spouse dbo:child ?child .

  # Filter for royalty status among the children
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""royalty""))
  }

  # Ensure we only get results where a title indicating royalty is found
  FILTER EXISTS {
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""royalty""))
  }
  
  # Return the child's URL and label for clarity
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChildSpouse WHERE {
  # Princess Antoinette of Brunswick-Wolfenbüttel
  dbr:Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?child .
  
  # Filter for children who are royalty
  ?child rdf:type dbo:RoyalFamilyMember .

  # Get the spouse of this royal child
  ?child dbo:spouse ?royalChildSpouse .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  OPTIONAL { 
    ?person dbo:musicalArtist ?artistRole .
    ?artistRole dbo:associatedBand ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder as no specific information was provided.
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:occupation dbr:Musician .
}
```",1,1,2,1,1,3,3,71,246,2091,39394,0.10526315789473684,0.006205852674066599,0.01172070419515449
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Philip_I_of_Castile dbo:child ?child .
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```",1,2,2,1,1,2,3,28,4,2,1,0.6666666666666666,0.8,0.7272727272727272
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Antonios Varthalitis's death place that is a settlement
  dbr:Alekos_Varthaklitis dbo:deathPlace ?varthalitisDeathPlace .
  ?varthalitisDeathPlace rdf:type dbo:Settlement .

  # Konstantinos Ventiris participated in a war related to the same settlement
  dbr:Konstantinos_Ventiris dbo:participatedInWar ?war .
  ?war dbo:location ?settlement .
  
  FILTER (?varthalitisDeathPlace = ?settlement)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer ;
          a dbo:Actor ;
          a dbo:Athlete .
  
  # Association with ""All or Nothing: Manchester City""
  ?allOrNothing dbr:All_or_Nothing:_Manchester_City dbo:actor ?player .

  # Team association with Pablo Aimar
  ?pabloAimarTeam dbo:member ?pabloAimar ;
                  dbo:member ?player .
  FILTER (?pabloAimar = dbr:Pablo_Aimar)

  # Birthdate condition
  ?player dbo:birthday ""1955-02-22""^^xsd:date .

}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfMadrid ?officeOfCommander WHERE {
  VALUES ?manuelPintoDaCosta { dbr:Manuel_Pinto_da_Costa }
  VALUES ?miguelMaura { dbr:Miguel_Maura }

  ?manuelPintoDaCosta dbo:officeHolder ?tenantOfMadrid .
  ?miguelMaura dbo:officeHolder ?officeOfCommander .

  OPTIONAL {
    ?tenantOfMadrid a dbo:MilitaryConflict ;
                   a dbo:SocietalEvent .
  }
  
  OPTIONAL {
    ?officeOfCommander a dbo:MilitaryConflict ;
                       a dbo:SocietalEvent .
  }

  FILTER (?tenantOfMadrid != ?officeOfCommander)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Stuart Tosh's associated musical artists
  VALUES ?stuartToshBand { 
    ?associatedArtist .
  }
  dbr:Stuart_Tosh dbo:associatedMusicalArtist ?stuartToshBand .

  # Get band members of those bands
  ?stuartToshBand dbo:bandMember ?bandMember .

  # Find David Paton's associated musical artists
  VALUES ?davidPatonAssociatedArtist { 
    ?artist .
  }
  dbr:David_Paton dbo:associatedMusicalArtist ?davidPatonAssociatedArtist .

  # Filter to find common band members
  FILTER (?bandMember = ?davidPatonAssociatedArtist)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInColombia WHERE {
  # Find the political party of Roy Barreras
  dbr:Roy_Barreras dbo:party ?royBarreraParty .
  
  # Find an entity in Colombia associated with this party
  ?entityInColombia a dbo:PoliticalEntity ;
                   dbo:country dbr:Colombia ;
                   dbo:party ?royBarreraParty .
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonParent WHERE {
  ?patrick dbo:parent ?patricksParent .
  ?mary dbo:parent ?marysParent .

  VALUES ?patrick { dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne }
  VALUES ?mary { dbr:Mary_Frances_Bowes-Lyon }

  FILTER (?patricksParent = ?commonParent)
  FILTER (?marysParent = ?commonParent)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?ericClaptonBandMember ?bandOfBandMember WHERE {
  # Find Nick Curran's associated musical artist, which should be The Fabulous Thunderbirds
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  FILTER (?nickCurranAssociatedArtist = dbr:The_Fabulous_Thunderbirds)

  # Find Eric Clapton's band members and their bands
  OPTIONAL {
    ?ericClaptonBandMember dbo:bandMemberOf dbr:Eric_Clapton .
    ?ericClaptonBandMember dbo:memberOf ?bandOfBandMember .
  }
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation [ 
    a dbo:SportsManager ;
    a dbo:SoccerManager
  ] .
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  
  OPTIONAL {
    ?person dbo:member dbr:Hong_Kong_C_Team .
  }
  
  OPTIONAL {
    ?person dbo:manager dbr:Hong_Kong_C_Team .
  }
}
```",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName ?officeTitle WHERE {
  # Identify the Spanish Socialist Workers' Party
  VALUES ?party { dbr:Spanish_Socialist_Workers'_Party }

  # Find the leader of PSOE during the relevant time frame
  ?party dbo:leader ?leader .

  # Get the office title held by this leader
  ?leader dbo:officeHolder ?office .
  ?office rdfs:label ?officeTitle .

  # Filter to ensure we are looking at the right election period (2009)
  FILTER(CONTAINS(LCASE(?leaderDescription), ""galicia"") && CONTAINS(LCASE(?leaderDescription), ""2009""))
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  VALUES ?theFirstGlove { 
    dbr:The_First_Glove 
  }
  ?theFirstGlove dbo:author ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?battle1805Combatant1 ?battle1805Combatant2 ?bayneWarCombatant1 ?bayneWarCombatant2 WHERE {
  # Find military forces involved in the Battle of Cape Finisterre (1805)
  VALUES ?battle1805Resource { dbr:Battle_of_Cape_Finisterre_(1805) }
  OPTIONAL {
    ?battle1805Resource dbp:combatant1 ?battle1805Combatant1 .
    ?battle1805Resource dbp:combatant2 ?battle1805Combatant2 .
  }

  # Find a military conflict associated with William Bayne
  VALUES ?bayneResource { dbr:William_Bayne_(Royal_Navy_officer) }
  OPTIONAL {
    ?bayneResource dbo:participatedIn ?bayneWar .
    ?bayneWar dbp:combatant1 ?bayneWarCombatant1 .
    ?bayneWar dbp:combatant2 ?bayneWarCombatant2 .
  }
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Shatrughan_Sinha dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthPlace ?smitaPatilBirthPlace WHERE {
  # Query for the birthplace of Ustad Bismillah Khan, a notable awardee of Sangeet Natak Akademi Fellowship
  OPTIONAL {
    dbr:Ustad_Bismillah_Khan dbo:birthPlace ?awardeeBirthPlace .
  }
  
  # Query for the birthplace of Smita Patil
  OPTIONAL {
    dbr:Smita_Patil dbo:birthPlace ?smitaPatilBirthPlace .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team WHERE {
  # Get Marcelo Sarmiento's birth date
  VALUES ?marceloSarmientoBirthDate { 
    dbr:Marcelo_Sarmiento dbo:birthDate ?date .
  }
  
  # Find individuals who are both soccer players and managers born on the same day
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthDate ?personBirthDate .

  FILTER (?personBirthDate = ?marceloSarmientoBirthDate)

  # Get the team associated with these individuals
  OPTIONAL { 
    ?person dbo:team ?team .
  }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personURL WHERE {
  ?person dbo:birthPlace dbr:London .
  ?person dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(str(?occupation)), ""musical artist"") || 
     CONTAINS(LCASE(str(?occupation)), ""artist""))
  )
}
```",1,3,2,1,1,3,2,20,0,0,657,0,0.0,0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist ?claptonBandMember ?bandWithClaptonMember WHERE {
  # Find associated musical artist of Nick Curran
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .

  # Find a band member who is also in a band with Eric Clapton
  ?claptonBandMember dbo:bandMember dbr:Eric_Clapton .
  ?claptonBandMember dbo:bandMember ?bandWithClaptonMember .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherPoliticalParty ?danielCountry WHERE {
  # Part for Sofía Petro's father and his political party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?father .
    ?father dbo:politicalParty ?fatherPoliticalParty .
  }
  
  # Part for Daniel Elahi Galán's country
  OPTIONAL {
    dbr:Daniel_Elahi_Galán dbo:nationality ?danielCountry .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movieURL ?actor WHERE {
  # Find movies featuring Iliza Shlesinger
  VALUES ?ilizaShlesinger { dbr:Iliza_Schlesinger }
  ?movie dbo:starring ?ilizaShlesinger .

  # Find Janusz Kamiński's spouse
  ?januszKaminski dbo:spouse ?spouse .
  FILTER(?januszKaminski = dbr:Janusz_Kamiński) 

  # Ensure the movie also features Janusz Kamiński's spouse
  ?movie dbo:starring ?spouse .

  # Retrieve other actors from this movie
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != ?ilizaShlesinger && ?actor != ?spouse)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bayneMilitaryForce ?calderEventMilitaryForce WHERE {
  # Find the war or conflict involving William Bayne and its military force
  OPTIONAL {
    ?bayneWar dbo:participatedIn dbr:William_Bayne_(Royal_Navy_officer) .
    ?bayneWar dbo:militaryForce ?bayneMilitaryForce .
  }

  # Find the event involving Robert Calder and its military force
  OPTIONAL {
    ?calderEvent dbo:participatedIn dbr:Robert_Calder .
    ?calderEvent dbo:militaryForce ?calderEventMilitaryForce .
  }
}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ventirisWarURL ?zervasWarURL WHERE {
  OPTIONAL {
    dbr:Konstantinos_Ventiris dbo:participatedIn ?ventirisWar .
    BIND(STR(?ventirisWar) AS ?ventirisWarURL)
  }
  OPTIONAL {
    dbr:Napoleon_Zervas dbo:participatedIn ?zervasWar .
    BIND(STR(?zervasWar) AS ?zervasWarURL)
  }
}
```",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfPolitician ?parentOfCommander WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby's children
  VALUES ?frederickStanley { dbr:Frederick_Stanley,_16th_Earl_of_Derby }
  
  # Step 2: Find the child who is a politician
  ?politician dbo:childOf ?frederickStanley .
  ?politician dbo:occupation dbr:Politician .

  # Step 3: Determine the father of this politician
  ?parentOfPolitician dbo:spouse ?motherOfPolitician .
  ?parentOfPolitician dbo:child ?politician .

  # Step 4: Identify awardees of Commander of the Royal Victorian Order
  ?commander dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Step 5: Find the parent of this awardee
  ?parentOfCommander dbo:spouse ?motherOfCommander .
  ?parentOfCommander dbo:child ?commander .

  # Step 6: Match the two parents
  FILTER (?parentOfPolitician = ?parentOfCommander)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?actor WHERE {
  # Find the actor of ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga dbo:actor ?actor .
  
  # Ensure Richard E. Grant is one of the actors
  VALUES ?richardEGrant { dbr:Richard_E._Grant }
  FILTER (?actor = ?richardEGrant)
  
  # Get Richard E. Grant's profession
  ?richardEGrant dbo:profession ?actorProfession .
  
  # Find politicians with the same profession as an actor
  ?politician rdf:type dbo:Politician ;
              dbo:profession ?sameProfession .
  
  FILTER (?actorProfession = ?sameProfession)
}
```",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?princeChristianRole ?duchyOfSchleswigAdmin WHERE {
  # Find Prince Christian's royal title or role
  OPTIONAL {
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:royalTitle ?princeChristianRole .
  }
  
  # Find the administration related to Duchy of Schleswig
  OPTIONAL {
    ?duchyOfSchleswigAdmin dbo:headOfState dbr:Duchy_of_Schleswig ;
                           dbo:administrator ?adminPerson .
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?archduke dbr:Archduke_Charles_Joseph_of_Austria .
  ?parent dbo:child ?archduke ;
          dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?father dbo:child ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Isabella_of_Austria dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?foundingDate WHERE {
  # Find Eleonora Menicucci's alma mater
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
  
  # Find the founding date of Federal University of Paraíba
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",4,5,5,2,2,3,2,20,1,3,0,0.25,1.0,0.4
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?nativePlace { 
    dbr:Jamshedpur 
    dbr:India 
  }
  ?person dbo:nativePlace ?nativePlace .
}
```",2,2,3,1,2,2,2,9,0,0,21,0,0.0,0
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?profession WHERE {
  VALUES ?emilia { dbr:Emilia_(singer) }
  
  # Find band members of Emilia
  ?bandMember dbo:bandMember ?emilia .
  
  # Find the profession of Jamie T
  VALUES ?jamieT { dbr:Jamie_T_(musician) }
  ?jamieT dbo:profession ?profession .

  # Check if any band member is associated with the same profession as Jamie T
  FILTER (?bandMember != ?emilia)
}
```",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Quincy_A._Gillmore dbo:commander ?force .
  OPTIONAL {
    ?force dbo:location dbr:Charleston,_South_Carolina .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  ?artist dbo:associatedMusicalArtist dbr:James_Plotkin .
  ?artist dbo:associatedMusicalArtist ?firstLevelArtist .
  ?firstLevelArtist dbo:associatedMusicalArtist ?secondLevelArtist .
}
```",2,2,3,2,1,3,2,20,0,0,13,0,0.0,0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  VALUES ?person1 { 
    ?person1BirthDate
  }
  VALUES ?person2 { 
    ?person2BirthDate
  }

  ?person1 dbo:birthDate ?person1BirthDate .
  ?person2 dbo:birthDate ?person2BirthDate .

  FILTER (YEAR(?person1BirthDate) = 1979 && MONTH(?person1BirthDate) = 11 && DAY(?person1BirthDate) = 3)
  FILTER (YEAR(?person2BirthDate) = 1955 && MONTH(?person2BirthDate) = 2 && DAY(?person2BirthDate) = 22)

  ?person1 rdf:type dbo:SoccerPlayer .
  ?person1 rdf:type dbo:SoccerManager .

  ?person2 rdf:type dbo:Athlete .

  OPTIONAL { 
    ?person1 dbo:team ?team .
  }
  
  OPTIONAL {
    ?person2 dbo:team ?team .
  }

  FILTER (?person1 != ?person2)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  VALUES ?series { dbr:All_or_Nothing:_Manchester_City }
  
  ?series dbo:castMember ?actor .
  ?actor a dbo:SoccerPlayer .
  ?actor a dbo:Athlete .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rodney Lees"" .
  OPTIONAL { 
    ?person dbo:award ?award .
  }
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?coraSueCollins { 
    dbr:Cora_Sue_Collins 
  }
  ?coraSueCollins dbo:work ?work .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childURL ?peterIV WHERE {
  VALUES ?peterIV { dbr:Peter_IV_of_Aragon }
  ?child dbo:father ?peterIV .
  OPTIONAL { ?child dbo:royalTitle ?title . FILTER (BOUND(?title)) }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?producer WHERE {
  VALUES ?lindaBruckheimer { dbr:Linda_Bruckheimer }
  OPTIONAL {
    ?lindaBruckheimer dbo:spouse ?spouse .
  }

  VALUES ?twelveStrong { dbr:12_Strong_(film) }
  OPTIONAL {
    ?twelveStrong dbo:producer ?producer .
  }

  FILTER (?spouse = ?producer)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?atlActor WHERE {
  # Find the alter ego in ""The Golden Master"" series
  VALUES ?goldenMasterSeries { 
    dbr:The_Golden_Master_(TV_series) 
  }
  
  ?goldenMasterSeries dbo:alterEgo ?professional .
  
  # Find the actor of ATL (film)
  VALUES ?atlFilm { 
    dbr:ATL_(2006_film) 
  }
  
  ?atlFilm dbo:actor ?atlActor .
  
  # Check if the professional is also an actor in ATL
  FILTER (?professional = ?atlActor)
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dikhawaTheme ?nativeOfLahore WHERE {
  VALUES ?dikhawa { 
    dbr:Dikhawa 
  }
  
  ?dikhawa dbo:genre ?dikhawaTheme .
  
  OPTIONAL {
    ?person dbo:nativePlace dbr:Lahore .
    ?person dbo:associatedMusicalArtist ?dikhawa .
  }
}
```",2,2,3,1,2,2,2,9,0,2,1,0.0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Find the time zone region of Kiyosu
  dbr:Kiyosu dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .

  # Find the birthplace of Chieko Asakawa
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .

  # Look for a common entity between the region and birthplace
  FILTER (?region = ?birthPlace)
  BIND(?region AS ?commonEntity)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Robert_Calder dbo:militaryUnit ?militaryForce .
  OPTIONAL {
    ?campaign dbo:commander dbr:Robert_Calder .
    FILTER (?campaign = dbr:French_Egyptian_campaign_in_Syria)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?konstantinosVentirisWar ?nationalPartyLeaderWar WHERE {
  # Find Konstantinos Ventiris and the wars he participated in
  OPTIONAL {
    dbr:Konstantinos_Ventiris dbo:participatedIn ?konstantinosVentirisWar .
  }
  
  # Find the leader of the National Party of Greece and the wars they participated in
  OPTIONAL {
    ?nationalPartyLeader dbo:leaderOf dbr:National_Party_of_Greece ;
                        dbo:participatedIn ?nationalPartyLeaderWar .
  }
}
```",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberURL ?stuartToshAssociatedArtist WHERE {
  VALUES ?theAlanParsonsProject { 
    dbr:The_Alan_Parsons_Project 
  }
  
  ?bandMember dbo:bandMember ?theAlanParsonsProject .
  
  VALUES ?stuartTosh { 
    dbr:Stuart_Tosh 
  }
  
  OPTIONAL {
    ?stuartTosh dbo:associatedMusicalArtist ?stuartToshAssociatedArtist .
  }

}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  VALUES ?ferdinandII { dbr:Ferdinand_II,_Holy_Roman_Emperor }
  VALUES ?eleonoreAustria { dbr:Eleonora_of_Austria_(1598–1655) }

  ?commander dbo:commanderOf dbr:Thirty_Years'_War .
  ?commander dbo:child ?ferdinandII .
  ?commander dbo:father ?eleonoreAustria .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royParty ?gustavoParty ?colombianEntity WHERE {
  OPTIONAL {
    dbr:Roy_Leonardo_Barreras_Montealegre dbo:party ?royParty .
  }
  OPTIONAL {
    dbr:Gustavo_Petro dbo:party ?gustavoParty .
  }
  OPTIONAL {
    ?colombianEntity dbo:country dbr:Colombia .
  }
}
```",4,5,5,2,3,2,3,28,1,2144,0,0.0004662004662004662,1.0,0.0009319664492078286
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleOfFortRoyalMilitaryForce ?battleOfFortRoyalCommander 
       ?calderEvent ?calderSocietalEvent WHERE {
  VALUES ?battleOfFortRoyal { dbr:Battle_of_Fort_Royal }
  
  OPTIONAL {
    ?battleOfFortRoyal dbo:militaryUnit ?battleOfFortRoyalMilitaryForce .
  }

  OPTIONAL {
    ?battleOfFortRoyal dbo:commander ?battleOfFortRoyalCommander .
  }

  OPTIONAL {
    ?calderEvent dbo:event ?calderSocietalEvent .
    ?calderEvent dbr:Robert_Calder .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildURL ?grandchildLabel WHERE {
  # Step 1: Identify Stephen V of Hungary
  VALUES ?stephenV { dbr:Stephen_V_of_Hungary }
  
  # Step 2: Find his predecessor
  ?predecessor dbo:successor ?stephenV .
  
  # Step 3: Determine the child of the predecessor
  ?child dbo:parent ?predecessor .
  
  # Step 4: Identify the grandchild (child of the child)
  ?grandchild dbo:parent ?child .
  
  # Step 5: Check for royalty status
  ?grandchild rdf:type dbo:Monarch .

  # Return the URL and label of the grandchild
  VALUES ?grandchildURL { ?grandchild }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify the album ""Sappy""
  dbr:Sappy dbo:composer ?writer .

  # Check if the writer is a band member and find their band
  OPTIONAL { 
    ?writer dbo:bandMember ?band .
    ?band dbo:member ?bandMember .
  }
}
```",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?scottLaFaroBirthPlace ?laurynHillBirthPlace WHERE {
  dbr:Scott_LaFaro dbo:birthPlace ?scottLaFaroBirthPlace .
  dbr:Lauryn_Hill dbo:birthPlace ?laurynHillBirthPlace .
}
```",3,4,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commandedForce ?warParticipatedIn WHERE {
  # Find William Tennant's command
  ?tennant a dbo:NavyOfficer ;
           foaf:name ""William Tennant"" ;
           dbo:commander ?commandedForce .

  # Find the war or conflict he participated in
  ?tennant dbo:participatedIn ?warParticipatedIn .

  # Link to the societal event and military conflict of the Sinking of Prince of Wales and Repulse
  OPTIONAL {
    ?sinkingEvent a dbo:MilitaryConflict ;
                  dbo:partOf ?warParticipatedIn ;
                  rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Cece Bell""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?book WHERE {
  # Find Bill Clinton's spouse
  dbr:Bill_Clinton dbo:spouse ?spouse .
  
  # Ensure the spouse is Hillary Clinton
  FILTER (?spouse = dbr:Hillary_Clinton)
  
  # Find books authored by Hillary Clinton
  ?book dbo:author dbr:Hillary_Clinton ;
        a dbo:Book .
  
  # Identify wars involving the United States Navy
  OPTIONAL {
    ?war dbo:participatingMilitaryUnit dbr:United_States_Navy .
    
    # Check if there's any connection between the book and the war
    FILTER EXISTS { ?book dbo:subject ?war }
  }
}
```",5,11,6,3,2,3,3,71,0,6,1,0.0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?personURL ?otherOccupation WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?actorRole .
  FILTER (CONTAINS(LCASE(str(?actorRole)), ""actor"")) .
  ?person dbo:occupation ?otherOccupation .
  FILTER (?actorRole != ?otherOccupation) .
}
```",2,2,3,1,2,2,3,28,0,11023,4210,0.0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?bobbyBirthName ?regionStateSettlement WHERE {
  # Uncle Murda's band members
  VALUES ?uncleMurda { dbr:Uncle_Murda }
  ?bandMember dbo:bandMember ?uncleMurda .

  # Bobby Shmurda's birth name
  VALUES ?bobbyShmurda { dbr:Bobby_Shmurda }
  ?bobbyShmurda foaf:name ?bobbyBirthName .

  # Awards and regions related to New York
  ?award dbo:recipient ?bandAwardee .
  ?regionStateSettlement a dbo:Region ;
                        dbo:stateOrProvince ?nyState ;
                        dbo:settlement ?nySettlement .
  FILTER (?nyState = dbr:New_York_(state) && ?nySettlement != """")
  ?bandAwardee dbo:award ?award .

  # Find common entity
  FILTER (?bandMember = ?bobbyShmurda || ?bandMember = ?bandAwardee)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?show ?war WHERE {
  ?award dbo:awardedBy dbr:United_States_Congress .
  OPTIONAL { 
    ?award dbo:associatedWith ?show .
  }
  OPTIONAL {
    ?recipient dbo:receivedAward ?award ;
               dbo:involvedInConflict ?war .
  }
}
```",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?battleCommander WHERE {
  # Find the commander for the 30th (Cambridgeshire) Regiment of Foot
  OPTIONAL {
    dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:commander ?commander .
  }
  
  # Find the military force involved in the Battle of Fort Royal and its commander
  OPTIONAL {
    dbr:Battle_of_Fort_Royal dbo:participatedIn ?battleForce .
    ?battleForce dbo:commander ?battleCommander .
  }

  # Find the military force associated with Robert Calder and his command
  OPTIONAL {
    dbr:Robert_Calder dbo:militaryCommand ?calderCommand .
  }
  
  # Filter to ensure commanders are linked correctly
  FILTER (?commander = ?battleCommander || ?commander = ?calderCommand)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Caroline Louise Bevan Symonds"" .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?billClintonBook ?hillaryClintonRole WHERE {
  # Find the commander in the Third Taiwan Strait Crisis
  dbr:Third_Taiwan_Strait_Crisis dbo:commander ?commander .

  # Find a book authored by Bill Clinton
  VALUES ?billClintonBook { 
    dbr:A_Presidential_Year_in_the_Life_of_William_Jefferson_Clinton 
    dbr:My_Life 
    dbr:Giving 
  }
  ?billClintonBook dbo:author dbr:Bill_Clinton .

  # Find Hillary Clinton's role related to the book
  OPTIONAL {
    ?hillaryClintonRole dbo:spouse dbr:Bill_Clinton .
    FILTER (?hillaryClintonRole = dbr:Hillary_Clinton)
  }

  # Ensure the spouse is a politician and office holder
  FILTER EXISTS { 
    ?hillaryClintonRole dbo:officeHolder ?office .
    ?office dbo:positionTitle ?title .
    FILTER (CONTAINS(LCASE(?title), ""politician"") || CONTAINS(LCASE(?title), ""office""))
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Ann_Sothern dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFameURL WHERE {
  # Find the actor of Johnny Doughboy
  ?actor dbo:actor dbr:Johnny_Doughboy .
  
  # Find the producer of A Star Is Born (1937 film)
  ?producer dbo:producer dbr:A_Star_Is_Born_(1937_film) .

  # Identify a common work that is considered their claim to fame
  OPTIONAL { ?actor dbo:workExample ?claimToFameURL . }
  OPTIONAL { ?producer dbo:workExample ?claimToFameURL . }

  FILTER (?actor = ?producer)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character dbo:creator dbr:Walter_B._Gibson .
  FILTER CONTAINS(LCASE(?character), ""the shadow"") .
  OPTIONAL { 
    ?character dbo:alterEgo ?alterEgo .
  }
}
```",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?glennYoungkinBirthPlace WHERE {
  OPTIONAL { 
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
  OPTIONAL { 
    dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfMiddlesex ?parent WHERE {
  VALUES ?honMaryFrancesBowesLyon { 
    dbr:Hon._Mary_Frances_Bowes-Lyon 
  }
  
  ?honMaryFrancesBowesLyon dbo:parent ?parent .
  
  ?parent dbo:birthPlace ?birthPlace .
  
  FILTER (CONTAINS(LCASE(str(?birthPlace)), ""middlesex""))
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceEvent WHERE {
  # Identify William Bayne (Royal Navy officer)
  ?bayne a dbo:NavyOfficer ;
         foaf:name ""William Bayne"" .

  # Find the award Knight Commander of the Order of the Bath
  ?award dbr:Knight_Commander_of_the_Order_of_the_Bath ;
         dbo:recipient ?bayne .

  # Determine the military conflict or war he was involved in
  OPTIONAL {
    ?conflict dbo:militaryForce ?militaryForce ;
              dbo:participant ?bayne .
    
    # Find events related to this military force
    ?event dbo:eventType dbr:MilitaryConflict ;
           dbo:agent ?militaryForce .

    FILTER (?event = ?conflict)
  }
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedentInMelbourne ?predecessorOfAdaWatson WHERE {
  ?decedentInMelbourne dbo:deathPlace dbr:Melbourne .
  OPTIONAL { 
    dbr:Ada_Watson dbo:predecessor ?predecessorOfAdaWatson .
  }
}
```",2,2,3,1,2,2,2,9,1,808,0,0.0012360939431396785,1.0,0.0024691358024691353
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild ?father WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:child ?child .
  
  # Filter for children who are royalty
  ?child rdf:type ?type .
  FILTER (
    ?type = dbo:RoyalFamilyMember ||
    ?type = dbo:Monarch ||
    ?type = dbo:Queen ||
    ?type = dbo:King
  )
  
  # Get the father of this royal child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athleteTeam ?soccerPlayerManagerTeam WHERE {
  # Find the athlete born on 1955-02-22
  ?athlete a dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date .
  
  # Get the team of this athlete
  ?athlete dbo:team ?athleteTeam .

  # Find Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthDate ?marceloSarmientoBirthDate .

  # Find a soccer player and manager born on Marcelo Sarmiento's birthday
  ?soccerPlayerManager a dbo:SoccerPlayer, dbo:SoccerManager ;
                       dbo:birthDate ?marceloSarmientoBirthDate .
  
  # Get the team of this soccer player/manager
  ?soccerPlayerManager dbo:team ?soccerPlayerManagerTeam .
}
```",5,8,6,3,2,3,3,71,1,71,0,0.013888888888888888,1.0,0.0273972602739726
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  OPTIONAL { 
    ?child dbo:commander ?warRole .
    FILTER (CONTAINS(LCASE(STR(?warRole)), ""thirty years war""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify the Siege of Padua event
  dbr:Siege_of_Padua dbo:commander ?commander .
  
  # Find children who are royalty
  ?commander dbo:child ?child .
  ?child a dbo:Monarch .

  # Check if this child is the father of Catherine of Austria, Queen of Portugal
  ?child dbo:spouse ?catherineMother .
  ?catherineMother dbo:child dbr:Catherine_of_Austria_(1507–1578) .

  # Check if this child is also the father of Isabella of Austria
  ?child dbo:spouse ?isabellaMother .
  ?isabellaMother dbo:child dbr:Isabella_of_Austria_(1501–1526) .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?office dbo:officeHolder dbr:Alberto_Núñez_Feijóo .
  ?office dbp:location dbr:Santiago_de_Compostela .
  ?office dbp:country dbr:Spain .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace ?gillmoreForce ?tracyWar WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Birthplace is a settlement and in America
  ?birthPlace rdf:type dbo:Settlement ;
             dbo:country dbr:United_States_of_America .

  # Gillmore Medal awardee's force
  ?gillmoreAwardee dbo:awardedBy dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:militaryForce ?gillmoreForce .

  # Amasa Tracy's war
  dbr:Amasa_Tracy dbo:servedIn ?tracyWar .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?battle dbo:militaryForce ?militaryForce .
  FILTER (?battle = dbr:Battle_of_Fort_Royal) .
  
  OPTIONAL {
    ?event dbo:eventType ?eventType .
    FILTER(?eventType IN (dbr:Event, dbr:Societal_event)) .
    ?event dbo:relatedEvent ?person .
    ?event dbo:relatedEvent ?battle .
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?bobbyBirthName .
  
  # Nick Curran's associated musical artist
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  }
  
  # GS9 member who is an artist and a musical artist
  ?gs9Member dbo:memberOf dbr:GS9 ;
             rdf:type dbo:Person, dbo:MusicalArtist .

  # Person born with Bobby Shmurda's birth name and associated with Nick Curran's artist
  ?person dbo:birthName ?bobbyBirthName .
  FILTER (?nickCurranAssociatedArtist = ?gs9Member)

  # Ensure the person is native to Florida
  ?person dbo:nativePlace dbr:Florida .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumActor ?shelbyOaksActor WHERE {
  # Find the album of ""What You Know (T.I. song)""
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  
  # Get actors or contributors associated with this album
  OPTIONAL { 
    ?album dbo:actor ?albumActor .
  }
  
  # Find the actor of Shelby Oaks
  dbr:Shelby_Oaks dbo:actor ?shelbyOaksActor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelMauraOffice ?marianoRajoyOffice ?ruizGallardonTenant WHERE {
  # Office of Miguel Maura
  OPTIONAL { 
    dbr:Miguel_Maura dbo:office ?miguelMauraOffice .
  }
  
  # Office of Mariano Rajoy
  OPTIONAL { 
    dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .
  }

  # Tenant of the residence of Alberto Ruiz-Gallardón
  OPTIONAL {
    dbr:Alberto_Ruiz-Gallardón dbo:residence ?ruizGallardonResidence .
    ?ruizGallardonResidence dbo:tenant ?ruizGallardonTenant .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athleteBornOnMartyPollioBD ?soccerPlayerAthlete ?actorOfSoccerPlayer WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Polloi dbo:birthDate ?martyPollioBirthDate .

  # Find athletes born on the same date as Marty Pollio
  ?athleteBornOnMartyPollioBD dbo:birthDate ?martyPollioBirthDate ;
                               a dbo:Athlete .

  # Identify the soccer player from ""All or Nothing: Manchester City"" who is an athlete
  dbr:All_or_Nothing:_Manchester_City dbo:actor ?soccerPlayerAthlete .
  FILTER EXISTS { ?soccerPlayerAthlete dbo:sportTeam dbr:Manchester_City_F.C. }
  FILTER EXISTS { ?soccerPlayerAthlete a dbo:Athlete }

  # Find actors associated with this soccer player
  OPTIONAL {
    ?soccerPlayerAthlete dbo:actor ?actorOfSoccerPlayer .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?commander a dbo:Person .
  ?commander dbo:officeHolder ?office .
  ?commander dbo:politician ?politics .
  
  OPTIONAL { 
    ?commander dbo:memberOf ?organization .
    ?organization dbo:wikiPageRedirects dbr:Central_African_Republic_Civil_War .
  }
  
  FILTER EXISTS {
    ?event dbo:location dbr:Central_African_Republic ;
           dbo:participant ?commander .
  }
}
```",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieURL ?coActor WHERE {
  ?movie dbo:starring dbr:Dipankar_De .
  ?movie dbo:country dbr:India .
  ?movie dbo:starring ?coActor .
  FILTER(?coActor != dbr:Dipankar_De)
}
```",2,4,3,2,1,3,2,20,11,1,6,0.9166666666666666,0.6470588235294118,0.7586206896551724
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors of ""Paradise"" (2013)
  VALUES ?paradiseFilm { dbr:Paradise_(2013_film) }
  
  ?paradiseFilm dbo:starring ?actor .
  
  # Find spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  # Check if the actor is the spouse and acted with Audrey Hepburn
  OPTIONAL {
    ?hepburnMovie dbo:starring ?spouse ;
                  dbo:starring dbr:Audrey_Hepburn .
    
    FILTER (?actor = ?spouse)
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alwaysActor ?ilizaFilmActor WHERE {
  # Find actors in ""Always"" (1989 film)
  VALUES ?alwaysMovie { dbr:Always_(film) }
  ?alwaysMovie dbo:starring ?alwaysActor .

  # Find movies that are both works and films with Iliza Shlesinger
  ?ilizaMovie a dbo:Film ;
              dbo:starring ?ilizaFilmActor .
  FILTER EXISTS {
    ?ilizaMovie dbo:starring dbr:Iliza_Shlesinger .
  }

  # Ensure the movie is also categorized as a work
  ?ilizaMovie rdf:type dbo:CreativeWork .

  # Find common actors between both sets
  FILTER (?alwaysActor = ?ilizaFilmActor)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Elvira of Castile's child who is royalty
  ?elviraChild dbo:childOf dbr:Elvira_of_Castile ;
               rdf:type dbo:Monarch .

  # William I of Sicily's child who is royalty
  ?williamChild dbo:childOf dbr:William_I_of_Sicily ;
                rdf:type dbo:Monarch .

  # Roger III's parent
  ?rogerParent dbo:parentOf dbr:Roger_III,_Duke_of_Apulia .

  # Find the common individual who is a child of Elvira and William, and also a parent of Roger
  VALUES ?commonIndividual {
    ?elviraChild
    ?williamChild
  }
  
  FILTER (?commonIndividual = ?rogerParent)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?country WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
  
  OPTIONAL { ?landmark dbo:location ?location . }
  OPTIONAL { ?location dbo:country ?country . }
}
```

Note: The above query identifies the landmark based on elevation. Additional steps would be required to determine the ruling party and its member, which might involve querying external sources or using additional logic outside of DBpedia.",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerURL ?profession WHERE {
  VALUES ?albumURL { 
    dbr:The_Live_Anthology 
  }
  
  ?albumURL dbo:writer ?writer .
  ?writer a ?type .
  
  FILTER (?type IN (dbo:Musician, dbo:Singer, dbo:Bandsman)) # Assuming these are relevant types for musical artists
  
  BIND(?writer AS ?writerURL)
  OPTIONAL {
    ?writer rdfs:label ?profession .
  }
}
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation ?genre ?associatedArtist WHERE {
  VALUES ?nickCurran { dbr:Nick_Curran }
  
  OPTIONAL {
    ?nickCurran dbo:occupation ?occupation .
  }
  
  OPTIONAL {
    ?nickCurran dbo:genre ?genre .
  }

  OPTIONAL {
    ?nickCurran dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",1,1,2,1,1,3,3,71,0,10,1,0.0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Mountain .
  ?landmark dbo:elevation ""20.1168""^^xsd:decimal .
}
```",1,1,2,1,1,3,3,71,2,0,190,1.0,0.010416666666666666,0.020618556701030924
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?birthPlace WHERE {
  VALUES ?amasaTracy { dbr:Amasa_Tracy }
  
  ?amasaTracy dbo:deathDate ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05""^^xsd:date)
  
  OPTIONAL {
    ?amasaTracy dbo:associatedWithWar ?war .
  }

  ?amasaTracy dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theShadowURL WHERE {
  VALUES ?lamontCranstonURL { 
    dbr:Lamont_Cranston_(The_Shadow) 
  }
  
  ?lamontCranstonURL dbo:alterEgo ?theShadowURL .
  
  OPTIONAL {
    dbr:Dawit_I dbo:child ?baedaMaryamI .
    ?baedaMaryamI dbo:parent dbr:Dawit_I .
    
    FILTER (?theShadowURL = ?baedaMaryamI || ?theShadowURL = dbr:Dawit_I)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?colorMeDeadDeathPlace ?skyRangerDeathPlace WHERE {
  VALUES ?film1 { dbr:Color_Me_Dead }
  VALUES ?film2 { dbr:The_Sky_Ranger_(1928_film) }

  OPTIONAL {
    ?actor1 dbo:starringInFilm ?film1 .
    ?actor1 dbo:deathPlace ?colorMeDeadDeathPlace .
  }

  OPTIONAL {
    ?actor2 dbo:starringInFilm ?film2 .
    ?actor2 dbo:deathPlace ?skyRangerDeathPlace .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The alter ego of The Shadow is Lamont Cranston
  VALUES ?alterEgo { dbr:Lamont_Cranston }

  # Find movies where Lamont Cranston/The Shadow was portrayed
  ?movie dbo:character dbr:The_Shadow .
  ?movie dbo:actor ?actor .

  # Find the album associated with ""What You Know"" by T.I.
  ?album dbo:title ""T.I. - Paper Trail""@en .
  ?album dbo:track ?song .
  FILTER(CONTAINS(LCASE(?song), ""what you know""))

  # Find actors involved in the album
  OPTIONAL {
    ?album dbo:producer ?actor .
    ?album dbo:featuredArtist ?actor .
  }

  # Ensure the actor is the same for both movie and album
  FILTER (?actor = ?professional)
}
```",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranAssociatedArtist WHERE {
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranAssociatedArtist .
  FILTER (?nickCurranAssociatedArtist = dbr:The_Fabulous_Thunderbirds)
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?christianIXAdministration ?olafIAdministration ?administeredTerritory WHERE {
  # Administration of Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:monarch ?country .
  ?country dbo:reignStart ?christianIXStart ;
           dbo:reignEnd ?christianIXEnd .

  # Administration of Olaf I of Denmark
  dbr:Olaf_I_of_Denmark dbo:monarch ?olafICountry .
  ?olafICountry dbo:reignStart ?olafIStart ;
                dbo:reignEnd ?olafIEnd .

  # Death place of Christian Ditlev Ammentorp Hansen, ensuring it's a settlement
  dbr:Christian_Ditlev_Ammenborg_Hansen dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Territories administered from the death place during their reigns
  OPTIONAL {
    ?administeredTerritory dbo:administrativeCenter ?deathPlace ;
                          dbo:monarch dbr:Christian_IX_of_Denmark ;
                          dbo:reignStart ?christianIXStart ;
                                        dbo:reignEnd ?christianIXEnd .
  }
  OPTIONAL {
    ?administeredTerritory dbo:administrativeCenter ?deathPlace ;
                          dbo:monarch dbr:Olaf_I_of_Denmark ;
                          dbo:reignStart ?olafIStart ;
                                        dbo:reignEnd ?olafIEnd .
  }

  # Return the administration periods and territories
  BIND(CONCAT(""Christian IX: "", STR(?christianIXStart), "" - "", STR(?christianIXEnd)) AS ?christianIXAdministration)
  BIND(CONCAT(""Olaf I: "", STR(?olafIStart), "" - "", STR(?olafIEnd)) AS ?olafIAdministration)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?person dbo:occupation dbr:Musician .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  dbr:Ada_Watson dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?person dbo:deathPlace dbr:Los_Angeles .
  ?movie dbo:starring ?person .
}
```",2,3,3,2,1,3,3,71,6458,1979,17,0.7654379518786298,0.9973745173745173,0.8661480686695278
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceURL WHERE {
  VALUES ?antVarthalitis { dbr:Antonios_Varthalitis }
  ?antVarthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .
  BIND(STR(?deathPlace) AS ?deathPlaceURL)
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify R.E.M. as the band associated with ""No Alternative""
  dbr:R.E.M. dbo:associatedAlbum dbr:No_Alternative .

  # Step 2: Find members of R.E.M.
  dbr:R.E.M. dbo:bandMember ?bandMember .

  # Step 3: For each member, find their associated musical artists
  OPTIONAL {
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Step 4: Filter for those who are also recognized as artists
  FILTER EXISTS { ?associatedArtist a dbo:Artist }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?predecessor WHERE {
  # Archduke Charles Louis of Austria's child and grandchild
  ?charlesChild dbo:childOf dbr:Archduke_Charles_Louis_of_Austria .
  ?grandchild dbo:childOf ?charlesChild .
  
  # Check if the grandchild is royalty
  ?grandchild rdfs:label ?labelGrandchild .
  FILTER(CONTAINS(LCASE(?labelGrandchild), ""royalty""))

  # Archduchess Helena of Austria and Albrecht, Duke of Württemberg's child and predecessor
  ?albrechtChild dbo:childOf dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?helenaChild dbo:childOf ?spouse .

  # Find the predecessor of helenaChild
  ?predecessor dbo:successor ?helenaChild .

  # Linking both parts
  FILTER(?grandchild = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInEgyptSyria ?militaryForce WHERE {
  # Find the military conflict for the French campaign in Egypt and Syria
  ?campaign dbo:militaryConflict ?conflict .
  ?conflict rdfs:label ""French campaign in Egypt and Syria""@en .

  # Identify the commander of this campaign
  ?commanderInEgyptSyria dbo:commander ?conflict .

  # Find the military force involved in the French campaign
  ?militaryForce dbo:militaryConflict ?conflict .

  # Ensure it is also a military conflict and an event
  FILTER EXISTS { ?conflict rdf:type dbo:MilitaryConflict . }
  FILTER EXISTS { ?conflict rdf:type dbo:Event . }

  # Find the Battle of Cape Finisterre (1805)
  ?battle dbo:militaryConflict ?finisterre .
  ?finisterre rdfs:label ""Battle of Cape Finisterre (1805)""@en .

  # Identify the military force involved in the Battle of Cape Finisterre
  ?militaryForce dbo:militaryConflict ?finisterre .

  # Ensure William Bayne is associated with the campaign
  ?bayne dbr:William_Bayne_(Royal_Navy_officer) .
  ?commanderInEgyptSyria rdfs:label ""William Bayne""@en .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?writer WHERE {
  # Find the commander related to Jean Baptist, Comte d'Arco and Yurii Khmelnytsky
  OPTIONAL { 
    dbr:Jean_Baptist_Comte_d'Arco dbo:succeededBy ?successor .
    ?successor rdfs:label ""Yurii Khmelnytsky""@en .
  }
  
  # Find the television show that is both a war and societal event
  OPTIONAL {
    ?tvShow dbo:genre dbr:War_film ;
            dbo:genre dbr:Societal_event .
    ?tvShow dbo:commander ?commander .
  }

  # Find the writer of ""Always the Love Songs""
  OPTIONAL {
    dbr:Always_the_Love_Songs dbo:author ?writer .
  }
  
  # Ensure the commander is linked to both contexts
  FILTER (?commander = ?successor)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shelbyOaksActor ?whatYouKnowAlbumActor ?theShadowProfessional WHERE {
  VALUES ?shelbyOaksResource { dbr:Shelby_Oaks }
  
  OPTIONAL {
    ?shelbyOaksResource dbo:actor ?shelbyOaksActor .
  }

  VALUES ?whatYouKnowSong { dbr:What_You_Know_(T.I._song) }
  OPTIONAL {
    ?whatYouKnowSong dbo:album ?whatYouKnowAlbum .
    ?whatYouKnowAlbum dbo:actor ?whatYouKnowAlbumActor .
  }

  VALUES ?theShadowResource { dbr:The_Shadow_(character) }
  OPTIONAL {
    ?theShadowResource dbo:alterEgo ?professionalEntity .
    ?professionalEntity rdf:type ?professionType .
    FILTER (?professionType IN (dbo:Agent, dbo:Person))
    BIND(?professionalEntity AS ?theShadowProfessional)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  VALUES ?williamI { dbr:William_I_of_Sicily }
  VALUES ?elvira { dbr:Elvira_of_Castile,_Queen_of_Sicily }

  ?child dbo:parent ?williamI .
  ?child dbo:parent ?elvira .
  
  OPTIONAL {
    ?child a dbo:Monarch .
  }
  
  ?father dbo:child ?child .
  FILTER (?father = ?williamI)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Identify Mark Tournier's birthplace
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbp:PopulatedPlace .

  # Find any person who died at this location
  ?decedent dbo:deathPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,0,809,0,0.0,0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse dbo:royalTitle ?title .
  }
  
  FILTER EXISTS { ?spouse dbo:royalTitle ?title . } # Ensures the spouse has a royal title
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find children of William I of Sicily who are royalty
  ?child1 dbo:parent dbr:William_I_of_Sicily .
  ?child1 rdfs:label ?label1 .
  FILTER CONTAINS(LCASE(?label1), ""king"") || CONTAINS(LCASE(?label1), ""queen"")

  # Find children of Roger II of Sicily who are royalty
  ?child2 dbo:parent dbr:Roger_II_of_Sicily .
  ?child2 rdfs:label ?label2 .
  FILTER CONTAINS(LCASE(?label2), ""king"") || CONTAINS(LCASE(?label2), ""queen"")

  # Identify common parent (likely spouse) of these children
  ?commonParent dbo:spouse ?parent1 .
  ?commonParent dbo:spouse ?parent2 .

  # Ensure the parents are William I and Roger II respectively
  FILTER (?parent1 = dbr:William_I_of_Sicily || ?parent1 = dbr:Roger_II_of_Sicily)
  FILTER (?parent2 = dbr:William_I_of_Sicily || ?parent2 = dbr:Roger_II_of_Sicily)

  # Ensure the children are related to this common parent
  VALUES (?child) { ?child1 ?child2 }
  ?commonParent dbo:child ?child .

  # Determine the father of this child
  ?child dbo:father ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?tvShow ?societalEvent WHERE {
  ?jeanBaptiste dbr:Jean_Baptiste,_Comte_d'Arco .
  
  # Find wars where Jean Baptiste was a commander
  ?jeanBaptiste dbo:militaryCommanderOf ?war .

  # Check if the war is linked to a television show
  OPTIONAL { 
    ?war dbp:tvShow ?tvShow .
  }

  # Check if the war is linked to a societal event
  OPTIONAL {
    ?war dbo:societalEvent ?societalEvent .
  }
  
  FILTER EXISTS { ?tvShow } && EXISTS { ?societalEvent }
}
```",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?governor a dbo:StateGovernor ;
            dbo:state dbr:Virginia .
  ?governor dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Get actors in these films
  ?film dbo:starring ?actor .

  # Check if the actor is a soccer player and an athlete
  ?actor dbo:soccerPlayer ?.
  ?actor dbo:athlete ?.
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thomasLetschManager ?vflBochumManager WHERE {
  OPTIONAL {
    # Find the manager role of Thomas Letsch in a soccer club season
    dbr:Thomas_Letsch dbo:managerOfSportTeamSeason ?thomasLetschManager .
  }
  
  OPTIONAL {
    # Find the manager(s) of VfL Bochum
    dbr:VfL_Bochum dbo:manager ?vflBochumManager .
  }
}
```",3,6,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:author dbr:Always_the_Love_Songs .
  ?person dbo:militaryCommanderDuring dbr:Great_Turkish_War .
  ?yuriiKhmelnytsky dbo:succeededBy ?person .
  FILTER (?yuriiKhmelnytsky = dbr:Yurii_Khmelnytsky)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?associatedArtist WHERE {
  VALUES ?khlyst { dbr:Khlyst_(band) }
  
  ?member dbo:bandMember ?khlyst .
  ?member a dbo:MusicalArtist .

  OPTIONAL {
    ?member dbo:associatedMusicalArtist ?associatedArtist .
  }

  FILTER (?associatedArtist != ?khlyst)
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?juanCarlosPlayer ?actorSoccerAthlete WHERE {
  # Find the player associated with Juan Carlos Molina
  dbr:Juan_Carlos_Molina_(footballer) dbo:player ?juanCarlosPlayer .

  # Find a film directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        rdf:type dbo:Film .

  # Find an actor in the film who is also a soccer player and athlete
  ?actor dbo:actorIn ?film ;
         rdf:type dbo:SoccerPlayer, dbo:Athlete .
  
  # Ensure the actor matches both roles
  FILTER (?actor = ?actorSoccerAthlete)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?show dbr:Ab_Kya_Hoga dbo:actor ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (CONTAINS(LCASE(?actorName), ""actor""))
  
  OPTIONAL { 
    ?actor dbo:profession ?profession .
    FILTER (
      CONTAINS(LCASE(STR(?profession)), ""politician"") &&
      CONTAINS(LCASE(STR(?profession)), ""actor"")
    )
  }
}
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  VALUES ?vflBochumSeason { 
    dbr:2006%E2%80%9307_VfL_Bochum_season 
  }
  
  ?vflBochumSeason dbo:successor ?successorClub .
  FILTER (dbo:Soccer_Club ?successorClub) .

  ?player dbo:playsFor ?successorClub ;
          dbo:manager ?manager .
}
```",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?work WHERE {
  ?office dbo:officeHolder ?person .
  ?office dbo:timePeriod ?timePeriod .
  FILTER (?timePeriod >= ""1950-06-25""^^xsd:date && ?timePeriod <= ""1953-07-27""^^xsd:date) .
  OPTIONAL { ?person dbo:work ?writtenWork . }
  OPTIONAL { ?person dbo:notableWork ?otherWork . }
  BIND(UNION(?writtenWork, ?otherWork) AS ?work)
}
```",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?ceceBellBirthPlace WHERE {
  VALUES ?personResource { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell
  }
  
  ?personResource dbo:birthPlace ?birthPlace .
  
  FILTER (?personResource = dbr:Vince_Gilligan) 
  BIND(?birthPlace AS ?vinceGilliganBirthPlace)
  
  FILTER (?personResource = dbr:Cecily_Bell) 
  BIND(?birthPlace AS ?ceceBellBirthPlace)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict ?tvShow ?polishEntity WHERE {
  # Maria I of Portugal as a commander in a military conflict
  dbr:Maria_I_of_Portugal dbo:commanderOf ?militaryConflict .
  
  # Television show related to Maria I of Portugal
  OPTIONAL { 
    ?tvShow dbo:subject dbr:Maria_I_of_Portugal .
  }
  
  # Entity in Poland connected to the military conflict or TV show
  OPTIONAL {
    ?polishEntity dbo:location dbr:Poland .
    FILTER (?militaryConflict = ?polishEntity || ?tvShow = ?polishEntity)
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity ?warEntity WHERE {
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  OPTIONAL {
    dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceEntity .
  }
  
  # Find the war associated with Alexander Lvovich Davydov
  OPTIONAL {
    dbr:Alexander_Lvovich_Davydov dbo:associatedWith ?warEntity .
  }
}
```",3,3,4,2,2,2,3,28,0,3,2,0.0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?awardURL WHERE {
  VALUES ?choir { 
    dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico
  }
  
  ?choir dbo:award ?award .
  ?award rdf:type/rdfs:subClassOf* ?type .

  FILTER (
    ?type IN (dbr:Region_of_the_United_States, dbr:State_or_Territory_of_the_United_States, dbr:Settlement)
  )
  
  BIND(?award AS ?awardURL)
}
```",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stuartToshAssociatedArtist ?billyLyallAssociatedArtist WHERE {
  OPTIONAL {
    dbr:Stuart_Tosh dbo:associatedMusicalArtist ?stuartToshAssociatedArtist .
  }
  OPTIONAL {
    dbr:Billy_Lyall dbo:associatedMusicalArtist ?billyLyallAssociatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,2,3,0,0.4,1.0,0.5714285714285715
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalSpouse WHERE {
  # Myat Hpone Pyo's father and spouse who is royalty
  ?myatHponePyo dbo:father ?father .
  ?father dbo:spouse ?royalSpouse .
  ?royalSpouse a dbo:Royal .

  # Minye Kyawswa's child and the parent of that child (grandchild)
  ?minyeKyawswa dbo:child ?child .
  ?child dbo:parent ?grandChildParent .

  FILTER (?royalSpouse = ?grandChildParent)
  
  VALUES ?myatHponePyo { dbr:Myat_Hpone_Pyo }
  VALUES ?minyeKyawswa { dbr:Minye_Kyawswa }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?yeJiaPlayer ?laiSunCheungPlayer WHERE {
  VALUES (?yeJiaEntity ?laiSunCheungEntity) { 
    (dbr:Ye_Jia dbr:Lai_Sun_Cheung)
  }
  
  OPTIONAL {
    ?yeJiaEntity dbo:player ?yeJiaPlayer .
  }
  
  OPTIONAL {
    ?laiSunCheungEntity dbo:player ?laiSunCheungPlayer .
  }
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:partyAffiliation dbr:Republican_Party_(United_States) .
  OPTIONAL { 
    ?person dbo:birthName ""Ann Sothern""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""El Deafo""@en .
  FILTER NOT EXISTS { ?book dbo:nationality ?nationality . FILTER (?nationality != dbr:United_States) }
  ?author dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandChild WHERE {
  ?rogerIII dbo:parent ?parent .
  FILTER(STR(?rogerIII) = ""Roger III, Duke of Apulia"")
  
  ?parent dbo:child ?grandChild .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorOfChild WHERE {
  # Saw Min Phyu's spouse who is royalty and their child
  OPTIONAL { 
    dbr:Saw_Min_Phuu dbo:spouse ?spouse .
    FILTER (EXISTS { ?spouse rdf:type dbo:Monarch }).
    ?spouse dbo:child ?childOfSpouse .
    
    # Predecessor of the child of Saw Min Phyu's spouse
    OPTIONAL {
      ?childOfSpouse dbo:predecessor ?predecessorOfChild .
    }
  }

  # Minye Kyawswa's lineage
  OPTIONAL { 
    dbr:Minye_Kyawswa dbo:child ?minyeKyawswaChild .
    ?minyeKyawswaChild dbo:parent ?parentOfMinyeKyawswaChild .
    ?parentOfMinyeKyawswaChild dbo:child ?childOfParentOfMinyeKyawswaChild .
  }

  # Ensure the predecessor of Saw Min Phyu's spouse's child is related to Minye Kyawswa's lineage
  FILTER (?predecessorOfChild = ?childOfParentOfMinyeKyawswaChild)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Duke_Philipp_of_Württemberg dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  VALUES ?burntByTheSun { dbr:Burnt_by_the_Sun_(band) }
  
  ?burntByTheSun dbo:associatedMusicalArtist ?associatedArtist .
  
  FILTER (
    ?associatedArtist rdf:type dbo:Band ||
    ?associatedArtist rdf:type dbo:Group ||
    ?associatedArtist rdf:type dbo:Organization
  )
  
  ?associatedArtist dbo:member ?bandMember .
}
```",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rodArgentProfession ?pacelyAssociatedArtist WHERE {
  # Find Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?rodArgentProfession .
  
  # Find $pacely's birth name and associated musical artist
  VALUES ?pacelyBirthName { ""Tupac Shakur"" }
  OPTIONAL {
    ?person foaf:name ?pacelyBirthName ;
            dbo:associatedMusicalArtist ?pacelyAssociatedArtist .
  }
  FILTER (?person = dbr:Tupac_Shakur)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?associatedEntity WHERE {
  VALUES ?award { dbr:Golden_Sword_for_Bravery }
  
  ?recipient dbo:recipientOfAward ?award .
  OPTIONAL {
    ?recipient dbo:country dbr:Russian_Empire .
    ?recipient dbo:associatedWith ?associatedEntity .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William I and his child who is royalty
  ?williamI a dbo:Duke ;
            dbo:child ?childRoyalty .
  
  # Ensure William I is an office holder
  ?williamI dbo:officeHolder true .

  # Identify Roger III, Duke of Apulia
  ?rogerIII dbr:Roger_III,_Duke_of_Apulia ;
           dbo:parent ?parentOfRogerIII .

  # Find the parent of Roger III's parent
  ?parentOfParent a dbo:Person ;
                  dbo:child ?parentOfRogerIII .

  # The child of William I should be the same as the reference (parent of Roger III's parent)
  FILTER (?childRoyalty = ?parentOfParent)

  # Find the father of this child
  ?childRoyalty dbo:father ?father .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Charles I of Hungary
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  # Father's parent (Grandparent)
  ?father dbo:child ?grandparent .

  # Ensure the grandparent is a royalty
  ?grandparent rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Find the current governor of Virginia and their birthplace
  ?governor a dbo:Governor ;
            dbo:stateOrTerritory dbr:Virginia ;
            dbo:birthPlace ?governorBirthPlace .
  
  # Find an award associated with Vince Gilligan and its awardee's birthplace
  ?award dbo:recipient ?awardee ;
         dbo:nominee dbr:Vince_Gilligan .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war ?tvShow WHERE {
  # Identify the 2nd Dragoon Regiment (France)
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""2nd Dragoon Regiment (France)""@en .
  
  # Find wars associated with this regiment
  ?regiment dbo:participatedInWar ?war .

  # Ensure the war is also depicted as a television show
  ?tvShow dbo:depicts ?war ;
          a dbo:TelevisionSeries .

  # Retrieve the commander of the regiment during that war
  ?commander dbo:commanded ?regiment .
  
  FILTER (lang(?regimentLabel) = ""en"")
}
```",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vitesseManager ?bochumManager WHERE {
  # Manager of SBV Vitesse during the 2020–21 season
  OPTIONAL {
    dbr:SBV_Vitesse dbo:manager ?vitesseManager .
  }
  
  # Manager of VfL Bochum
  OPTIONAL {
    dbr:VfL_Bochum dbo:manager ?bochumManager .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Myat Hpone Pyo's predecessor
  OPTIONAL { 
    dbr:Myat_Hpone_Pyo dbo:predecessor ?myatHponePyoPredecessor .
    BIND(?myatHponePyoPredecessor AS ?person)
  }
  
  # Saw Shwe Khet's spouse
  OPTIONAL {
    dbr:Saw_Shwe_Khet dbo:spouse ?sawShweKhetSpouse .
    FILTER (?sawShweKhetSpouse = ?person)
  }

  # Minye Kyawswa's grandchild
  OPTIONAL {
    dbr:Minye_Kyawswa dbo:child ?minyeKyawswaChild .
    ?minyeKyawswaChild dbo:child ?minyeKyawswaGrandchild .
    FILTER (?minyeKyawswaGrandchild = ?person)
  }
}
```",5,5,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicianFather WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  # Filter for the child who is a politician
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Ensure this child is also a parent of Victor Stanley (Royal Navy officer)
  ?child dbo:parent dbr:Victor_Stanley_(Royal_Navy_officer) .

  # Return the father of this politician
  BIND(dbr:Frederick_Stanley,_16th_Earl_of_Derby AS ?politicianFather)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
