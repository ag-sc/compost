id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Alexander II, Grand Duke of Finland's native country
  ?alexander2 dbo:nationality ?finlandCountry .

  # Step 2: Find Sandro Bertaggia's birthplace
  ?bertaggia dbo:birthPlace ?sandroBirthPlace .
  
  FILTER (isLiteral(?sandroBirthPlace) && datatype(?sandroBirthPlace) = xsd:string)

  # Step 3: Confirm Nicholas II of Russia's native country
  ?nicholas2 dbo:nationality ?russiaCountry .

  # Step 4: Find a person who matches all criteria
  ?person dbo:nationality ?finlandCountry .
  ?person dbo:deathPlace ?sandroBirthPlace .
  ?person dbo:nationality ?russiaCountry .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  # Find an artist from Central Region, Ghana
  ?artist dbo:nationality dbr:Ghana ;
          dbo:regionOfResidence dbr:Central_Region_(Ghana) ;
          a dbo:Artist .

  # Identify a writer associated with ""The Live Anthology"" who is also a musical artist
  ?writer dbo:work dbr:The_Live_Anthology ;
          a dbo:Writer, dbo:MusicalArtist .

  # Check for association with $pacely
  ?person dbo:associatedBand dbr:$pacely ;
          ?artist ;
          ?writer .

  # Retrieve the birth name of the person
  OPTIONAL { ?person dbp:birthday ?birthDate . }
  OPTIONAL { ?person rdfs:label ?birthName FILTER (lang(?birthName) = ""en"") }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
# Query 1: Find The Shadow's Alter Ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alias ?alterEgo .
}

# Query 2: Find Actor of ""Lasso the Moon""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?lasso rdfs:label ""Lasso the Moon""@en .
  ?lasso a dbo:Album ;
         dbo:performer ?actor .
  FILTER EXISTS { ?lasso dbo:film . }
}

# Query 3: Find Frédéric Bouraly's Profession
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?profession WHERE {
  ?bouraly rdfs:label ""Frédéric Bouraly""@en .
  ?bouraly dbo:occupation ?profession .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
# Query 1: Find the owner of USS Arcadia (ID-1605)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner WHERE {
  ?arcadia dbo:owner ?owner .
  FILTER (str(?arcadia) = ""USS_Arcadia_(ID-1605)"")
}

# Query 2: Find a work by Bill Clinton and his spouse who is a politician
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?work ?spouse WHERE {
  ?bill dbo:author ?work .
  FILTER (str(?bill) = ""Bill_Clinton"")
  ?work rdf:type dbo:Book .
  ?bill dbo:spouse ?spouse .
  FILTER (?spouse a dbo:Politician)
}

# Query 3: Find a work by Hillary Clinton
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?work WHERE {
  ?hillary dbo:author ?work .
  FILTER (str(?hillary) = ""Hillary_Clinton"")
  ?work rdf:type dbo:Book .
}

# Query 4: Identify the war as a disease/societal event and its commander
PREFIX",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?author ?spouse WHERE {
  
  # Step 1: Find the author of 'An Invitation to the White House'
  ?book dbo:author ?author .
  ?book rdfs:label ""An Invitation to the White House""@en .

  # Step 2: Verify if this person was a politician and office holder
  OPTIONAL { ?author dbo:occupation dbr:Politician . }
  OPTIONAL { ?author dbo:officeHolder ?office . }

  # Step 3: Identify the commander in the war described as a disease and societal event
  OPTIONAL {
    ?war rdfs:label ""World War I""@en ;
        dbo:commander ?author .
  }

  # Step 4: Determine the owner of USS Arcadia (ID-1605) who is also an author
  OPTIONAL {
    ?ship dbo:owner ?author .
    ?ship rdfs:label ""USS Arcadia (ID-1605)""@en .
  }

  # Step 5: Find the resident of Chappaqua, New York, who is a politician and office holder
  OPTIONAL {
    ?person dbo:residence dbr:Chappaqua,_New_York .
    ?person dbo:occupation dbr:Politician .
    ?person dbo:officeHolder ?office .
    FILTER(?author = ?person)
  }

  # Find the spouse of the identified author
  ?author dbo:spouse ?spouse .
}",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find Constance of Burgundy's spouse
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouse .

  # Step 2: Find the child of the spouse
  ?spouse dbo:child ?childOfSpouse .

  # Step 3: Find the grandchild (child of the child) that is royalty
  ?childOfSpouse dbo:child ?grandChild .
  ?grandChild a dbo:Monarch .

  # Step 4: Identify William I of Sicily's royal children
  ?william rdfs:label ""William I of Sicily""@en .
  ?william dbo:child ?royalChildOfWill .

  FILTER(?royalChildOfWill a dbo:Monarch)

  # Step 5: Determine the father of this child
  ?royalChildOfWill dbo:parent ?fatherOfRoyalChild .

  # Step 6: Find Roger II of Sicily's royal grandchildren
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?roger dbo:child ?childOfRoger .
  FILTER(?childOfRoger a dbo:Monarch)
  
  ?childOfRoger dbo:child ?grandChildOfRoger .

  # Step 7: Identify the common entity
  VALUES ?commonEntity { ?grandChild ?fatherOfRoyalChild }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Part 1: Indian movie featuring Dipankar De and actor's birthplace
SELECT DISTINCT ?actorBirthPlace WHERE {
  ?movie dbo:starring ?dipankar .
  ?dipankar rdfs:label ""Dipankar De""@en .
  ?movie dbo:country <http://dbpedia.org/resource/India> .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Part 2: Sangeet Natak Akademi Fellowship awardees and their birthplaces
SELECT DISTINCT ?awardeeBirthPlace WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> .
  ?person dbo:birthPlace ?awardeeBirthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?award WHERE {
  ?prize dbo:category ""Nobel Prize in Physics"" .
  ?prize dbo:recipient ?awardee .
  ?awardee dbo:award ?award .
}

SELECT ?institution WHERE {
  ?prize dbo:category ""Nobel Prize in Physics"" .
  ?prize dbo:organizer ?institution .
  FILTER (str(?institution) = ""Royal Swedish Academy of Sciences"")
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?person dbo:officeHolder ?commanderRole .
  ?commanderRole rdfs:label ""Commander in Korean conflict""@en .
  ?person dbo:author ?work .
  ?work rdf:type dbo:Book .

  UNION

  ?person dbo:officeHolder ?commanderRole2 .
  ?commanderRole2 rdfs:label ""Commander in North Carolina Air National Guard""@en .
  ?person rdf:type dbo:Politician .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:author ?work2 .
  ?work2 rdf:type dbo:Book .

  FILTER (?author = ?person)
}
```",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show WHERE {
  # Step 1: Identify Rainer Weiss and his award
  ?weiss rdfs:label ""Rainer Weiss""@en .
  ?weiss dbo:award ?nobelPrize .

  # Step 2: Find other recipients of the same Nobel Prize in Physics
  ?otherRecipient dbo:recipientOf ?nobelPrize .

  # Step 3: Identify shows or events associated with these awardees
  ?event dbo:organizer ?show .
  ?event dbo:awardWinner ?otherRecipient .

  # Step 4: Ensure the show's host is an educational institution
  ?show a dbo:EducationalOrganization .
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Step 1: Find John McDermott's death place
  ?johnMcDermott rdfs:label ""John McDermott (American artist)""@en .
  ?johnMcDermott dbo:deathPlace ?deathPlace .

  # Step 2: Identify political parties in the death place
  ?party a dbo:PoliticalParty ;
         dbp:location ?deathPlace ;
         dbo:member ?partyMember .

  # Step 3: Find George Pickett's war
  ?georgePickett rdfs:label ""George Pickett""@en .
  ?georgePickett dbo:commanderIn ?war .

  # Step 4: Ensure the party member was a commander in that war
  ?partyMember dbo:commanderIn ?war .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  # Step 1: Identify Cecilia Renata of Austria's father
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaRenata dbo:childOf ?father .

  # Step 2: Find the child of Cecilia Renata's father
  ?father dbo:child ?child .

  # Step 3: Identify Archduke Charles Joseph of Austria's parent
  ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?charlesJoseph dbo:parent ?parent .

  # Step 4: Find the commander in the war related to Archduke Charles Joseph's parent
  ?commander dbo:militaryCommanderOf ?war .
  ?parent dbo:child ?commander .

  # Step 5: Identify societal event, event, and television show related to Algerian War
  ?entity dbo:socialEvent ?algerianWar ;
          dbo:event ?algerianWar ;
          dbo:televisionShow ?algerianWar .
  
  FILTER(?child = ?commander)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?mariaAnna rdfs:label ""Maria Anna of Bavaria (1574–1616)""@en .
  
  # Find a child who is royalty
  ?child dbo:parent ?mariaAnna ;
         rdf:type dbo:RoyalFamilyMember .

  # Identify the spouse of Maria Anna, which should be the father of that child
  ?spouse dbo:spouse ?mariaAnna ;
          rdfs:label ?commanderLabel .
  
  # Check if this person was a commander in the Thirty Years' War
  OPTIONAL { ?spouse dbo:commanderInWar ?war . FILTER(CONTAINS(LCASE(STR(?war)), ""thirty years"")) }

  # Link to Archduke Charles Joseph's parentage
  ?archduke rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?parent dbo:child ?archduke ;
          rdf:type dbo:RoyalFamilyMember .

  FILTER (?spouse = ?parent)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfFather ?commanderInWar ?fatherOfFerdinandsChild WHERE {
  # Step 1: Identify Maria Anna of Bavaria
  ?maria rdfs:label ""Maria Anna of Bavaria (1574–1616)""@en .
  
  # Step 2: Find her child
  ?maria dbo:child ?child .

  # Step 3: Identify the father of that child
  ?fatherOfChild dbo:parent ?child .
  
  # Step 4: Check if this person is royalty
  ?fatherOfChild dbo:royalty true .

  # Step 5: Find wars involving this person as a commander
  ?war dbp:commander ?fatherOfChild ;
       rdf:type dbo:MilitaryConflict .
  
  # Step 6: Identify societal event and television show related to Algerian War
  ?event rdf:type dbo:SocietalEvent, dbo:TelevisionShow ;
         dbo:militaryForce dbo:AlgerianWar .

  # Step 7: Find Ferdinand III's children and their fathers
  ?ferdinand rdfs",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalSpouse WHERE {
  # Step 1: Find Duke Anthony Ulrich of Brunswick's parent who is a royalty
  ?duke rdfs:label ""Anthony Ulrich, Duke of Brunswick-Wolfenbüttel""@en .
  ?duke dbo:parent ?parent .

  # Ensure the parent is a royalty
  ?parent rdf:type dbo:Monarch .

  # Step 2: Find the child of this royal parent who is also a royalty
  ?parent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 3: Identify Princess Antoinette's child who is a royalty
  ?princess rdfs:label ""Antoinette, Princess of Brunswick-Wolfenbüttel""@en .
  ?princess dbo:child ?antoinettesChild .
  ?antoinettesChild rdf:type dbo:Monarch .

  # Step 4: Find the spouse of this royal child
  ?antoinettesChild dbo:spouse ?spouseOfAntoinettesChild .

  # Step 5: Determine the spouse of the spouse found in step 4
  ?spouseOfAntoinettesChild dbo:spouse ?finalSpouse .
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonEntity WHERE {
  # Find the award associated with George H. Cameron
  ?georgeHCMarion dbo:awardReceived ?award .
  
  # Identify the political party linked to George Savage
  ?savage dbo:partyMemberOf ?party .
  
  # Find the leader of this party and their residence
  ?leader dbo:memberParty ?party ;
          foaf:based_near ?residence .

  # Check if there is a common entity that is both an organization and a political party
  ?commonEntity rdf:type dbo:Organization, dbo:PoliticalParty .
  
  # Link the award to the common entity
  ?award dbo:associatedWith ?commonEntity .
  
  # Link the residence to the common entity
  ?residence dbo:locatedIn ?commonEntity .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify The Shadow and find related TV shows
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""actor""))
  
  ?tvShow dbo:starring ?shadow .
  ?tvShow dbo:genre ?genre .
  FILTER(CONTAINS(LCASE(STR(?genre)), ""television""))

  # Step 2: Find actors of the TV show
  ?tvShow dbo:starring ?actor .

  # Step 3: Identify actor-politician from ""Ab Kya Hoga""
  ?person rdfs:label ?name .
  ?person dbo:profession ?prof1, ?prof2 .
  FILTER(CONTAINS(LCASE(STR(?prof1)), ""actor"") && CONTAINS(LCASE(STR(?prof2)), ""politician""))
  
  ?show rdfs:label ""Ab Kya Hoga""@en .
  ?show dbo:starring ?person .

  # Step 4: Find common actor
  FILTER(?actor = ?person)
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Maria of Bytom's spouse
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouse .

  # Step 2: Find the father of Maria's spouse
  OPTIONAL { ?spouse dbo:father ?father . }

  # Step 3",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonActor WHERE {
  # Step 1: Find actors of ""Paradise"" (2013 film)
  ?paradiseFilm rdfs:label ""Paradise""@en .
  FILTER(YEAR(?paradiseFilm dbo:releaseDate) = 2013) .
  ?paradiseFilm dbo:actor ?actor1 .

  # Step 2: Find a movie that is both a work and a film with Audrey Hepburn
  ?hepburnMovie rdfs:label ?movieLabel .
  ?hepburnMovie dbo:starringAudreyHepburn true .
  ?hepburnMovie dbo:actor ?actor2 .

  # Step 3: Find spouse of an awardee from Janusz Kamiński's awards
  ?kaminski dbp:name ""Janusz Kamiński""@en .
  ?award rdfs:label ?awardLabel ;
         dbo:recipient ?recipient .
  ?recipient dbo:spouse ?spouse .

  # Step 4: Find common actor between the two movies
  FILTER(?actor1 = ?actor2)
  BIND(?actor1 AS ?commonActor)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce WHERE {
  # Step 1: Identify ""The Triple X's"" and their associated war
  ?tripleX rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""the triple x's"")) .
  
  ?tripleX dbo:militaryConflict ?war .
  ?war a dbo:MilitaryConflict .

  # Step 2: Find William Bayne's connection to the war
  ?bayne rdfs:label ""William Bayne""@en .
  ?bayne dbo:militaryConflict ?war .

  # Step 3: Identify the awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:award ""Knight Commander of the Order of the Bath"" ;
           dbo:militaryConflict ?war .

  # Step 4: Find the military force associated with both the war and societal event
  ?societalEvent a dbo:SocietalEvent .
  ?societalEvent dbo:relatedMilitaryForce ?militaryForce .
  
  ?war dbo:relatedMilitaryForce ?militaryForce .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commonEntity WHERE {
  # Henry Clay Lewis's birthplace
  ?henry dbo:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(?birthPlace), ""settlement"") && 
          ?birthPlace dbo:country dbr:United_States) .

  # Quincy Adams Gillmore's award and associated war
  ?gillmore dbo:award ?award1 .
  ?award1 dbo:conflict ?war1 .

  # Show-related award by United States Congress and associated war
  ?congressAward dbo:awardee ?showAwardee .
  FILTER (CONTAINS(LCASE(?congressAward), ""award"") && 
          CONTAINS(LCASE(?showAwardee), ""show"")) .
  ?congressAward dbo:conflict ?war2 .

  # Find common entity
  VALUES ?commonEntity { ?birthPlace ?war1 ?war2 }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  # Step 1: Identify GS9 member who is an artist and musical artist
  ?gs9Member dbo:memberOf dbr:GS9 ;
             a dbo:MusicalArtist, dbo:Artist .

  # Step 2: Find birth name of native from Florida who is a musical artist
  ?floridaNative dbo:nativePlace dbr:Florida ;
                dbo:birthName ?birthName ;
                a dbo:MusicalArtist .

  # Step 3: Determine award's native region (American state and settlement)
  ?awardRegion dbo:region dbr:Puerto_Rico ;
               a dbo:Award, dbo:State, dbo:Settlement .

  # Step 4: Find associated musical artist of the GS9 member
  ?gs9Member dbo:associatedBandMember ?associatedArtist .

  # Step 5: Identify band member who is also a musical artist from the associated artist
  ?bandMember dbo:memberOf ?associatedArtist ;
              a dbo:MusicalArtist .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?birthPlace WHERE {
  ?award dbo:award ""Anita Borg Institute Women of Vision Awards""@en .
  ?award dbo:reference ?show .
  ?show rdfs:label ?showLabel .
  FILTER(CONTAINS(LCASE(?showLabel), ""television show"")) .

  ?awardee dbo:award ?award .
  ?awardee dbo:nationality dbr:Japan .

  ?awardee dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?birthPlace dbo:timeZone dbr:Asia/Tokyo .
  }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:predecessor ?stephenV .

  # Step 2: Find child of this predecessor who is royalty
  ?childOfPredecessor dbo:child ?predecessor ;
                     dbo:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""king"") || CONTAINS(LCASE(?title1), ""queen""))

  # Step 3: Identify parent of Charles I's father who is royalty
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?fatherOfCharles dbo:child ?charlesI ;
                   dbo:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""king"") || CONTAINS(LCASE(?title2), ""queen""))
  
  ?grandparentOfCharles dbo:child ?fatherOfChar",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"```sparql
# Step 1: Find Paulus Powell's birth place that is a region and an administrative region
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?paulusPowell rdfs:label ""Paulus Powell""@en .
  ?paulusPowell dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Region ;
              a dbo:AdministrativeRegion .
}

# Step 2: Find the governor of that region
SELECT ?governor WHERE {
  ?region rdfs:label ?birthPlaceLabel .
  ?region dbo:headOfState ?governor .
  FILTER(?birthPlaceLabel IN (SELECT DISTINCT ?birthPlaceLabel WHERE { 
    ?paulusPowell rdfs:label ""Paulus Powell""@en .
    ?paulusPowell dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Region ;
                a dbo:AdministrativeRegion .
  }))
}

# Step 3: Find the birth place of Cece Bell, author of El Deafo
SELECT ?authorBirthPlace WHERE {
  ?book rdfs:label ""El Deafo""@en .
  ?book dbo:author ?author .
  ?author dbo:birthPlace ?authorBirthPlace .
}

# Step 4: Find the awardee related to Vince Gilligan's award
SELECT ?awardeeBirthPlace WHERE {
  ?vinceGilligan rdfs:label ""Vince Gilligan""@en .
  ?vinceGilligan dbo:award ?award .
  ?relatedAwardee dbo:award ?award .
  ?relatedAwardee dbo:birthPlace ?awardeeBirthPlace .
}

# Step 5: Find the birth place of the governor from step 2
SELECT ?governorBirthPlace WHERE {
  ?governor rdfs:label ?governorLabel .
  ?governor dbo:birthPlace ?governorBirthPlace .
  FILTER(?governorLabel IN (SELECT DISTINCT ?governorLabel WHERE { 
    ?region rdfs:label ?birthPlaceLabel .
    ?region dbo:headOfState ?governor .
    FILTER(?birthPlaceLabel IN (SELECT DISTINCT ?birthPlaceLabel WHERE { 
      ?paulusPowell rdfs:label ""Paulus Powell""@en .
      ?paulusPowell dbo:birthPlace ?birthPlace .
      ?birthPlace a dbo:Region ;
                  a dbo:AdministrativeRegion .
    }))
  }))
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?partyMember WHERE {
  # Step 1: Identify the landmark at the given elevation
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Step 2: Find the ruling party member associated with this landmark
  ?partyMember dbo:location ?landmark .

  # Step 3: Identify the actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?actor dbo:actedIn ?movie .

  # Step 4: Find the spouse of this actor
  ?actor dbo:spouse ?partyMemberSpouse .

  # Ensure the party member is also the spouse of the actor
  FILTER (?partyMember = ?partyMemberSpouse)

  # Step 5: Identify Tisha Sterling and her parent
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?parent dbo:child ?tisha .

  # Find the birth name of this parent
  ?parent rdfs:label ?birthName .

  # Ensure the party member is also the person with this birth name
  FILTER (?partyMember = ?parent)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bobBirthName ?bandOrSinger ?fictionalCharacter ?alterEgo WHERE {
  # Part 1: Bob Thompson (musician)
  ?bob a dbo:MusicalArtist ;
       rdfs:label ""Bob Thompson""@en .
  
  OPTIONAL { ?bob dbo:birthName ?bobBirthName . }
  OPTIONAL { ?bob dbo:bandMember ?bandOrSinger ; 
             ?bandOrSinger rdfs:label ?bandOrSingerLabel . FILTER(lang(?bandOrSingerLabel) = ""en"") }

  # Part 2: Walter B. Gibson's creation
  ?gibson a dbo:Writer ;
          rdfs:label ""Walter B. Gibson""@en .
  
  ?fictionalCharacter dbo:creator ?gibson ;
                      dbo:fictionalWorkCategory dbc:ComicsCharacters ;
                      rdfs:label ?characterLabel . FILTER(lang(?characterLabel) = ""en"")
  
  OPTIONAL { ?fictionalCharacter dbo:alterEgo ?alterEgo ; 
                               ?alterEgo rdfs:label ?alterEgoLabel . FILTER(lang(?alterEgoLabel) = ""en"") }
}
```",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
# Query 1: Identify Nat Levine's Film and Actor
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film ?actor WHERE {
  ?nat dbo:birthName ""Nat Levine""@en .
  ?nat dbo:film ?film .
  ?film dbo:starring ?actor .
}

# Query 2: Identify Tisha Sterling's Parent and Their Birth Name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?birthName WHERE {
  ?tisha dbp:parent ?parent .
  ?parent dbo:birthName ?birthName .
}

# Query 3: Find a Person with That Birth Name Who is a Republican Party Member
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:partyMemberOf dbp:Republican_Party_(United_States) .
}

# Query 4: Determine the Spouse of the Actor Identified in Step 1
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager WHERE {
  # Step 1: Identify the leader of West Germany
  ?leader dbo:position ""Chancellor""@en .
  ?leader dbo:nativeCountry ?country .

  # Step 2: Find the native country of the leader
  ?person dbo:nativePlace ?country .
  ?person dbo:birthDate ?birthDate .
  
  FILTER (?birthDate = xsd:date(""1968-08-26""))

  # Step 3: Identify the successor season of 2006–07 VfL Bochum
  ?season dbo:succesor ?successorSeason .
  ?season rdfs:label ""2006–07 VfL Bochum season""@en .

  # Step 4: Find the soccer club season associated with the person born on 1968-08-26
  ?person dbo:member ?teamSeason .
  ?teamSeason a dbo:SoccerClubSeason ;
              dbo:sportTeam ?team .

  # Step 5: Determine the manager of that team in the successor season
  ?successorSeason dbo:manager ?manager .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalty WHERE {
  
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?margareteSophie dbo:parent ?parentOfMargarete .
  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .

  # Step 2: Find the child of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht dbo:child ?childOfPhilipp .
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .

  # Step 3: Find the child of the child of the child of Alexander of Württemberg (1804-1881)
  ?alexander dbo:child ?firstChildOfAlexander .
  ?firstChildOfAlexander dbo:child ?secondChildOfAlexander .
  ?secondChildOfAlexander dbo:child ?thirdChildOfAlexander .
  ?alexander rdfs:label ""Alexander of Württemberg (1804-1881)""@en .

  # Step 4: Find the child of the child of Margarete Sophie's parent
  ?parentOfMargarete dbo:child ?firstChildOfParent .
  ?firstChildOfParent dbo:child ?secondChildOfParent .

  # Step 5: Identify royalty who is a predecessor of Philipp Albrecht's child and matches the above criteria
  ?royalty dbo:predecessor ?childOfPhilipp .
  ?royalty rdfs:label ?label .
  FILTER regex(?label, ""Royalty"", ""i"") .
  
  # Ensure the royalty is also a descendant of Margarete Sophie's parent
  ?secondChildOfParent dbo:parent ?royalty .
}
",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Step 1: Identify the person born on 1945-03-30
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .

  # Step 2: Find associated musical artist through Nick Curran's persona
  ?nickCurran dbp:personaOf ?associatedArtist .
  
  # Step 3: Identify Kim Wilson's band
  ?kimWilson dbo:band ?kimsBand .
  
  # Combine information to find the band of the person identified in step 1
  ?person dbo:associatedBandMember ?nickCurran ;
          dbo:associatedBandMember ?kimWilson .

  # Final result: Band associated with both Nick Curran's persona and Kim Wilson
  ?kimsBand rdfs:label ?band .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
# Paulus Powell's Birth Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?paulusPowell rdfs:label ""Paulus Powell""@en .
  ?paulusPowell dbo:birthPlace ?birthPlace .
}

# Governor of the Region
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor WHERE {
  ?region rdfs:label ?birthPlaceLabel .
  ?region a dbo:AdministrativeRegion .
  ?governor dbo:governmentRole ?role .
  ?role dbp:title ""Governor""@en .
  ?governor dbo:residence ?region .
}

# Birth Place of the Governor
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?governor dbo:birthPlace ?birthPlace .
}

# Cece Bell's Birth Place
PREFIX dbo: <http://dbpedia.org/ontology/>
  
SELECT ?birthPlace WHERE {
  ?ceceBell rdfs:label ""Cece Bell""@en .",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?associatedArtist WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBandMember ?band .
  ?band dbo:member ?associatedArtist .
}

SELECT ?person WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person a dbo:MusicalArtist .
  ?bandMember dbo:associatedBandMember ?band .
  ?band dbo:member ?person .
}

SELECT ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:alias ?realName .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalParent WHERE {
  # Step 1: Find Princess Muna al-Hussein's royal child
  ?muna rdfs:label ""Princess Muna al-Hussein""@en .
  ?muna dbo:child ?child1 .
  ?child1 rdf:type dbo:Monarch .

  # Step 2: Find the parent of this royal child
  ?child1 dbo:parent ?parent1 .

  # Step 3: Find Princess Aisha bint Faisal's grandparent who is royalty
  ?aisha rdfs:label ""Princess Aisha bint Faisal""@en .
  ?aisha dbo:parent ?parent2 .
  ?parent2 dbo:parent ?grandparent .

  FILTER (?grandparent rdf:type dbo:Monarch)

  # Step 4: Find the royal child of this grandparent
  ?grandparent dbo:child ?child2 .
  FILTER (?child2 rdf:type dbo:Monarch)

  # Step 5: Determine the parent of this royal child
  ?child2 dbo:parent ?finalParent .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Allan Arbus's child
  ?allanArbus rdfs:label ""Allan Arbus""@en .
  ?child dbo:parent ?allanArbus .

  # Step 2: Find the parent of that child (other than Allan Arbus)
  ?child dbo:parent ?parent .
  
  # Step 3: Ensure this person is an actor
  ?parent dbo:actor ?movie .

  # Step 4: Check if they died in Los Angeles
  ?parent dbo:deathPlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""los angeles""))

  # Step 5: Identify Eugène Cattin's profession and find a professional child of the parent
  ?eugeneCattin rdfs:label ""Eugène Cattin""@en .
  ?eugeneCattin dbo:profession ?profession .

  ?professionalChild dbo:parent ?parent ;
                    dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?birthPlaceLabel WHERE {
  # Governor of Virginia (assuming Glenn Youngkin)
  { 
    ?governor rdfs:label ""Glenn Youngkin""@en .
    ?governor dbo:birthPlace ?birthPlace1 .
    ?birthPlace1 rdfs:label ?birthPlaceLabel .
    BIND(""Governor of Virginia"" AS ?personLabel)
  }
  
  UNION
  
  # Author of El Deafo (Cece Bell)
  { 
    ?author rdfs:label ""Cece Bell""@en .
    ?author dbo:birthPlace ?birthPlace2 .
    ?birthPlace2 rdfs:label ?birthPlaceLabel .
    BIND(""Author of El Deafo"" AS ?personLabel)
  }
  
  UNION
  
  # Awardee associated with Vince Gilligan
  { 
    ?awardee rdfs:label ""Vince Gilligan""@en .
    ?awardee dbo:birthPlace ?birthPlace3 .
    ?birthPlace3 rdfs:label ?birthPlaceLabel .
    BIND(""Awardee of Vince Gilligan"" AS ?personLabel)
  }
}
```",8,10,9,3,3,3,3,71,0,4,1,0.0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  
  # Part 1: Mariclare Costello's spouse and their child's parent
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbo:parent ?parent1 .

  # Part 2: Eugène Cattin's profession and a professional in that field
  ?eugene rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:profession ?profession .
  ?professional dbo:profession ?profession .
  ?professional dbo:parent ?parent2 .

  # Part 3: Actor in 'Judgment: The Trial of",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
# Query for Denis Kolodin's Nickname Related to a Soccer Club:
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?denis rdfs:label ""Denis Kolodin""@en .
  ?denis dbo:nickname ?nickname .
  OPTIONAL { ?nickname dbo:sportTeam ?club . }
}

# Query for Player Mentioned by Aleksandr Filimonov:
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?filimonov rdfs:label ""Aleksandr Filimonov""@en .
  ?work dbo:author ?filimonov .
  ?work dbo:subject ?player .
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?birthName ?associatedArtist WHERE {
  { 
    ?cynthia rdfs:label ""Cynthia Morgan""@en .
    ?cynthia dbo:birthName ?birthName .
  }
  UNION
  {
    ?actor rdfs:label ""Afeez Oyetoro""@en .
    ?actor dbo:actor ?work .
    ?work rdf:type dbo:Film .
    OPTIONAL { ?work dbo:title ?title . FILTER regex(?title, 'show', 'i') }
    OPTIONAL { ?cynthia dbo:associatedMusicalArtist ?associatedArtist . }
    OPTIONAL { ?actor dbo:associatedMusicalArtist ?associatedArtist . }
  }
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace WHERE {
  # Step 1: Identify Antonios Varthalitis
  ?varthalitis rdfs:label ""Antonios Varthalitis""@en .
  
  # Step 2: Find his death place and ensure it is a settlement
  ?varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Step 3: Identify the awardee of 30 and leader of National Party of Greece
  ?leader rdfs:label ?name .
  ?leader dbp:award ""30"" .
  ?leader dbo:partyLeader <http://dbpedia.org/resource/National_Party_of_Greece> .

  # Step 4: Check if the death place is related to this leader's war activities
  OPTIONAL { 
    ?war dbo:place ?deathPlace .
    ?war dbo:participant ?leader .
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Identify the alter ego from ""The Golden Master"" series
SELECT ?alterEgo WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?character dbo:partOfSeries ?series ;
             foaf:name ?alterEgo .
}

# Step 2: Find the author of ""Smartbomb"" and an actor who acted in a movie with them
SELECT ?author ?actor WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
  ?movie dbo:starring ?actor ;
         dbo:starring ?author .
}

# Step 3: Locate T.I.'s song that is also a musical work, find its album
SELECT ?song ?album WHERE {
  ?artist foaf:name ""T.I.""@en .
  ?song dbo:composer ?artist ;
        rdfs:label ?title .
  ?album dbo:song ?song .
}

# Step 4: Identify any actors associated with this album
SELECT ?actor WHERE {
  ?album dbo:performer ?actor .
}
```",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
# Step 1: Find The Shadow's alter ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?game dbo:basedOn ?character .
  ?game rdfs:label ""The Shadow (video game)""@en .
  ?character rdf:type dbo:ComicsCharacter .
  ?character rdfs:label ?alterEgo .
}

# Step 2: Find Richard E. Grant's movie that is also a TV show and the actor involved
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbp:starring ""Richard E. Grant""@en .
  ?movie rdf:type dbo:Film .
  OPTIONAL { ?movie dbo:basedOn ?tvShow . }
  FILTER EXISTS { ?tvShow rdf:type dbo",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force ?event WHERE {
  ?edmund rdfs:label ""Edmund Hakewill-Smith""@en .
  ?edmund dbo:award ?award .
  ?award dbo:force ?force .
  OPTIONAL { ?force dbo:commander ?commander . }
  OPTIONAL { ?force dbo:conflict ?event . FILTER (regex(str(?event), ""societal event|military conflict"")) }
  OPTIONAL {
    ?event rdfs:label ?eventLabel .
    FILTER regex(?eventLabel, ""Sinking of Prince of Wales and Repulse"")
  }
}",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyRetailleau ?successorParty WHERE {
  # Part 1: Bruno Daniel Marie Paul Retailleau's party
  ?retailleau rdfs:label ""Bruno Daniel Marie Paul Retailleau""@en .
  ?retailleau dbo:party ?partyRetailleau .

  # Part 2: Patrice Martin-Lalande and his successor's party
  ?martinLalande rdfs:label ""Patrice Martin-Lalande""@en .
  ?successor a dbo:Politician ;
             dbo:nationality dbr:Francois ; # Assuming 'Francois' is the French nationality entity in DBpedia
             dbo:predecessor ?martinLalande .
  ?successor dbo:party ?successorParty .
}
```",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?parent dbo:child ?tisha ;
          dbo:birthName ?birthName .

  # Step 2: Find the actor of a film by Nat Levine
  ?nat dbp:name ""Nat Levine"" .
  ?film dbo:director ?nat ;
        dbo:actor ?actor .

  # Step 3: Find the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Step 4: Identify the ruling party in a landmark at elevation 20.1168
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:country ?country .
  ?party dbp:country ?country ;
         dbo:isRulingParty true .

  # Step 5: Combine information to find the person
  ?spouse dbp:name ?personName .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  # Step 1: Identify Baeda Maryam I
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  
  # Step 2: Find the child of Baeda Maryam I
  ?child dbo:parent ?baedaMaryamI .
  
  # Step 3: Determine the parent of this child (ensuring royalty)
  ?parent dbo:child ?child .
  ?parent a dbo:Monarch .

  # Step 4: Identify the commander in Siege of Mukha and ensure they are royalty
  ?commander rdfs:label ""Commander in Siege of Mukha""@en .
  ?commander a dbo:Monarch .

  # Step 5: Find the parent of the commander (ensuring royalty)
  ?commanderParent dbo:child ?commander .
  ?commanderParent a dbo:Monarch .

  # Step 6: Link the two royals
  FILTER(?parent = ?commanderParent)

  # Step 7: Identify the father of the father (grandfather) ensuring they are royalty and office holders
  ?grandfather dbo:child ?parent .
  ?grand",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfFather WHERE {
  
  # Step 1: Identify Antoine",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
# Reed Howes Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?reed rdfs:label ""Reed Howes""@en .
  ?reed dbo:deathPlace ?deathPlace .
}

# Actor of ""Color Me Dead"" Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?deathPlace WHERE {
  ?film rdfs:label ""Color Me Dead""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}

# Actor of ""Aladdin (1958 film)"" Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?deathPlace WHERE {
  ?film rdfs:label ""Aladdin (1958 film)""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseOfFather WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  
  # Step 2: Find a child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         rdf:type dbo:Monarch .
  
  # Step 3: Predecessor of Saw Shwe Khet's child
  ?predecessor dbo:succeededBy ?child .
  
  # Step 4: Identify Saw Min Phyu
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  \",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager WHERE {
  ?club rdf:type dbo:SoccerClub ;
        rdfs:label ""Hong Kong C""@en .
  
  ?manager dbo:manager ?club ;
           dbo:sportsManager ?club ;
           dbo:soccerManager ?club .

  ?person dbo:birthday ?birthday ;
          dbo:playerForTeam ?club ;
          rdf:type dbo:Athlete, dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .
  
  FILTER (YEAR(?birthday) = 1981 && MONTH(?birthday) = 12 && DAY(?birthday) = 1)
  
  FILTER (?manager = ?person)
}
```",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?officeMauraLeader ?commanderOffice ?tenantResidence WHERE {
  # Office of the leader of Miguel Maura's party
  ?miguel a dbo:Politician ;
          dbo:party ?party .
  ?leader a dbo:Person ;
          dbo:positionHeld ?officeMauraLeader ;
          dbo:party ?party .

  # Office of the commander in Manuel Pinto da Costa's force
  ?manuel a dbo:Politician, dbo:MilitaryCommander ;
           dbo:militaryConflict ?conflict .
  ?commanderOffice rdfs:label ?roleLabel .
  ?manuel dbo:positionHeld ?commanderOffice .

  # Tenant of the residence of the leader of the 2003 Madrid City Council election
  ?election a dbo:Election ;
            dbo:electedOfficial ?leaderMadrid .
  ?residence a dbo:Residence ;
             dbo:tenant ?tenantResidence .
  ?leaderMadrid dbo:residence ?residence .
}
```",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Cece Bell's Birth Place
SELECT ?birthPlace WHERE {
  ?author rdfs:label ""Cece Bell""@en .
  ?author dbo:birthPlace ?birthPlace .
}

UNION

# Awardee's Birth Place related to Vince Gilligan
SELECT ?awardeeBirthPlace WHERE {
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""emmy award"") && CONTAINS(LCASE(?awardLabel), ""breaking bad""))
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}

UNION

# Governor of Paulus Powell's Birthplace Region
SELECT ?governor WHERE {
  ?paulus rdfs:label ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?region .
  ?region a dbo:AdministrativeRegion .
  ?region dbo:governor ?governor .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?naod rdfs:label ""Na'od""@en .
  ?naod dbo:parent ?father .
  ?father rdf:type dbo:Monarch .
  ?father dbo:officeHolder ?office .
  
  ?father dbo:parent ?grandfather .
  ?grandfather rdf:type dbo:Monarch .
  ?grandfather dbo:officeHolder ?office2 .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Mariclare Costello's spouse
SELECT ?spouse WHERE {
  ?mariclare foaf:name ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .
}

# Step 2: Find the child of Mariclare Costello's spouse
SELECT ?child WHERE {
  ?spouse dbo:child ?child .
}

# Step 3: Identify Herschel Bernardi's movies
SELECT DISTINCT ?movie WHERE {
  ?herchel foaf:name ""Herschel Bernardi""@en .
  ?herchel dbo:actedIn ?movie .
}

# Step 4: Determine which movie involves the child of Mariclare Costello's spouse
SELECT DISTINCT ?movie WHERE {",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalSpouseFather WHERE {
  # Step 1: Find Maria of Bytom's spouse
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?mariaSpouse .

  # Step 2: Find the parent of Maria's spouse who is a royalty
  ?mariaSpouse dbo:parent ?mariaSpouseParent .
  ?mariaSpouseParent rdf:type dbo",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author WHERE {
  ?billClinton a dbo:Politician ;
               dbo:spouse ?hillaryClinton ;
               foaf:name ""Bill Clinton""@en .
  
  ?hillaryClinton foaf:name ""Hillary Clinton""@en .

  ?billClinton dbo:officeHolderOf ?office .
  ?office rdfs:label ?officeLabel .
  FILTER(CONTAINS(LCASE(?officeLabel), ""president of the united states""))

  ?aidsWar a dbo:Disease ;
          rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""aids"") || CONTAINS(LCASE(?warLabel), ""war""))

  ?billClinton dbo:commanderIn ?aidsWar .

  ?book dbo:author ?billClinton ;
        a dbo:Book .
  
  ?book rdfs:label ?bookTitle .
  FILTER(CONTAINS(LCASE(?bookTitle), ""my life""))
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfDawit WHERE {
  ?dawit rdfs:label ""Dawit I""@en .
  ?dawit dbo:child ?childOfDawit .

  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:child ?childOfBaeda .
  ?childOfBaeda dbo:father ?fatherOfChildOfBaeda .
  
  ?fatherOfChildOfBaeda dbo:royalTitle ?royalty .
  ?fatherOfChildOfBaeda dbo:officeHolder ?office .

  FILTER EXISTS { ?fatherOfChildOfBaeda rdfs:label ""The Shadow""@en } .
  
  VALUES ?childOfDawit {
    ?childOfDawit
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?francesco rdfs:label ""Francesco II Gonzaga""@en .
  ?francesco dbo:spouse ?spouse . # To ensure he is a royal
  ?francesco dbo:child ?child .
  
  FILTER (
    EXISTS { ?child rdfs:label ""Isabella of Austria""@en } ||
    EXISTS {
      ?joanna rdfs:label ""Joanna of Castile""@en ;
              dbo:parent ?francesco .
      ?joanna dbo:spouse ?philipI .
      ?philipI rdfs:label ""Philip I of Castile""@en
    }
  )
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  # Step 2: Find his child who is a politician
  ?child dbo:parent ?frederick ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Step 3: Determine the parent of this politician child
  ?spouse dbo:partner ?frederick ;
          dbo:child ?child .

  # Step 4: Identify the awardee of Rodney Lees (assuming a property exists)
  ?awardee dbo:award ""Rodney Lees""@en .
  
  # Step 5: Find the parent of this awardee
  ?parent dbo:partner ?awardee ;
          dbo:child ?awarde",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfSpouse WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  
  # Step 2: Find his child who is royalty
  ?child dbo:child ?francis ;
         dbo:title ?title .
  FILTER CONTAINS(LCASE(?title), ""king"" || ""queen"" || ""duke"" || ""princess"" || ""prince"") .

  # Step 3: Identify the father of this royal child (likely Francis I)
  ?father dbo:child ?child ;
          rdfs:label ""Francis I, Duke of Lorraine""@en .
  
  # Step 4: Find the parent(s) of this father
  ?parentOfFather dbo:child ?father .

  # Step 5: Identify the spouse of these parents who is royalty and nobility
  ?spouse dbo:spouse ?parentOfFather ;
          dbo:title ?spouseTitle .
  FILTER CONTAINS(LCASE(?spouseTitle), ""king"" || ""queen"" || ""duke"" || ""princess"" ||",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?currentManager WHERE {
  # Step 1: Identify the leader of West Germany and their country
  ?leader dbo:nationality ?country .
  FILTER (str(?country) = ""Germany"" || str(?country) = ""West Germany"") .

  # Step 2: Find a sports manager born on 1968-08-26, native to Germany, managed VfL Bochum
  ?manager dbo:birthDate ?birthDate ;
           dbo:nationality ?nationality ;
           dbp:managedTeam ?team .
  FILTER (YEAR(?birthDate) = 1968 && MONTH(?birthDate) = 8 && DAY(?birthDate) = 26)
  FILTER (str(?nationality) = ""Germany"")
  FILTER (str(?team) = ""VfL Bochum"")

  # Step 3: Retrieve the current manager of the soccer club season for VfL Bochum
  ?team dbo:teamManager ?currentManager .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Step 1: Identify Hu Jieqing's spouse who is a writer
  ?huJieqing rdfs:label ""Hu Jieqing""@en .
  ?huJieqing dbo:spouse ?spouse .
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""writer""))

  # Step 2: Find the country associated with the spouse's work
  ?spouse dbo:country ?workCountry .

  # Step 3: Identify a person who died in Taipei
  ?decedent dbo:deathPlace ?deathPlace .
  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""taipei""))

  # Step 4: Find the child of this decedent who is a politician
  ?decedent dbo:child ?politicianChild .
  ?politicianChild dbo:occupation ?childOccupation .
  FILTER(CONTAINS(LCASE(?childOccupation), ""politician""))

  # Step 5: Get the birthplace of this politician child
  ?politicianChild dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?awardee ?war ?bayneReference WHERE {
  # Step 1: Identify the French Campaign in Egypt and Syria
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  
  # Step 2: Find the Commander of this Campaign
  ?campaign dbo:commander ?commander .
  
  # Step 3: Determine the Military Force Involved
  ?campaign dbo:militaryForce ?militaryForce .

  # Step 4: Identify an Awardee of Knight Commander of the Order of the Bath
  ?order dbr:Order_of_the_Bath .
  ?awardee dbo:award ?order .
  
  # Step 5: Find the Military Force of the War Associated with this Awardee
  ?war dbo:participant ?awardee .
  ?war dbo:militaryForce ?militaryForceOfWar .

  # Step 6: Link to William Bayne
  ?bayneReference rdfs:label ""William Bayne""@en .
  FILTER EXISTS { ?bayneReference dbo:reference ?campaign . }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commonEntity WHERE {
  
  # Step 1: Find Rodney Lees' award and its recipient
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Rodney Lees""@en .
  
  # Step 2: Identify the parent of the awardee
  ?awardee dbo:parent ?parent1 .
  
  # Step 3: Find an Eton College alumnus with a politician child and identify the father
  ?alumnus dbo:alumnusOf ?etonCollege .
  ?child dbo:childOf ?alumnus .
  ?child rdf:type dbo:Politician .
  ?child dbo:father ?parent2 .
  
  # Step 4: Find Frederick Stanley's child and their parent
  ?frederickStanley rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederickChild dbo:childOf ?frederickStanley .
  ?frederickChild dbo:parent ?parent3 .
  
  # Step 5: Find the common entity
  FILTER (?parent1 = ?parent2)
  FILTER (?parent1 = ?parent3)
  BIND(?parent1 AS ?commonEntity)
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandfather WHERE {
  # Step 1: Identify Baeda Maryam I and his child
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?child dbo:parent ?baedaMaryamI .

  # Step 2: Find the parent of this child (ensuring they are royalty)
  ?parent dbo:child ?child .
  ?parent a dbo:Monarch .

  # Step 3: Identify the commander in Siege of Mukha and his parent
  ?commander rdfs:label ""Commander in Siege of Mukha""@en .
  ?commanderParent dbo:child ?commander .
  ?commanderParent a dbo:Monarch .

  # Step 4: Link to Lamont Cranston (The Shadow)
  ?shadow rdfs:label ""Lamont Cranston""@en .
  ?reference dbo:alterEgo ?shadow .

  # Step 5: Find the father of the father who is royalty and an office holder
  ?officeHolder dbo:parent ?parent .
  ?officeHolder a dbo:Monarch ;
               dbo:officeHolder ?office .

  ?grandfather dbo:child ?officeHolder .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find actor in Shelby Oaks
  ?shelbyOaks rdfs:label ""Shelby Oaks""@en .
  ?shelbyOaks dbo:starring ?actor .

  # Find T.I.'s album and song
  ?album dbo:artist <http://dbpedia.org/resource/T.I._(rapper)> ;
         dbo:song ?song .

  # Assume the actor is also associated with the song (e.g., featured artist)
  OPTIONAL { ?song dbo:starring ?actor . }

  # Find The Golden Master series and its alter ego
  ?series rdfs:label ""The Golden Master""@en .
  ?character dbo:partOfSeries ?series ;
             dbo:alterEgo ?alterEgo .

  # Assume the actor is professional in the alter ego (e.g., voice acting)
  OPTIONAL { ?alterEgo dbo:starring ?actor . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Myat Hpone Pyo's father who is a royalty
  ?myathponePyo dbo:parent ?father .
  ?father rdfs:label ""Myat Hpone Pyo""@en .
  ?father dbo:royalty true .

  # Step 2: Find the spouse of Myat Hpone Pyo's royal father
  ?father dbo:spouse ?spouse .

  # Step 3: Identify Saw Min Phyu's child who is a royalty
  ?sawMinPhyu dbo:child ?child .
  ?child rdfs:label ""Saw Min Phyu""@en .
  ?child dbo:royalty true .

  # Step 4: Find the predecessor of Saw Min Phyu's royal child
  ?predecessor dbo:succeededBy ?child .

  # Step 5: Identify Minye Kyawswa's parent
  ?minyeKyawswa dbo:parent ?parent .
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .

  # Step 6: Find the child of Minye Kyawswa's parent
  ?parent dbo:child ?grandChild .",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Rod Argent's profession
SELECT ?profession WHERE {
  ?rod rdfs:label ""Rod Argent""@en .
  ?rod dbo:occupation ?profession .
}

# Step 2: Find associated musical artists of Snoop Dogg
SELECT DISTINCT ?associatedArtist WHERE {
  ?snoop foaf:name ""Calvin Cordozar Broadus Jr.""@en ;
         dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 3: Identify Amakye Dede and his associated musical artists
SELECT DISTINCT ?artist WHERE {
  ?amakye rdfs:label ""Amakye Dede""@en ;
          dbo:associatedMusicalArtist ?artist .
}

# Step 4: Find a professional who matches all criteria
SELECT DISTINCT ?professional WHERE {
  # Rod Argent's profession
  ?rod rdfs:label ""Rod Argent""@en .
  ?rod dbo:occupation ?profession .

  # Associated musical artist of Snoop Dogg
  ?snoop foaf:name ""Calvin Cordozar Broadus Jr.""@en ;
         dbo:associatedMusicalArtist ?artist1 .

  # Associated musical artist of Amakye Dede
  ?amakye rdfs:label ""Am",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?burhan rdfs:label ""Burhan Belge""@en .
  ?burhan dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?honour WHERE {
  ?charles rdfs:label ""Charles Parsons (British Army officer)""@en .
  ?charles dbo:honours ?honour .
}
```",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country, ?party AS ?royParty, ?fatherParty WHERE {
  # Daniel Elahi Galán's country of birth
  ?daniel rdfs:label ""Daniel Elahi Galán""@en .
  ?daniel dbo:birthPlace ?place .
  ?place rdf:type dbo:Country .
  ?place rdfs:label ?country .

  # Roy Leonardo Barreras Montealegre's political party
  ?roy rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?roy dbo:partyAffiliation ?party .

  # Sofía Petro's father and his political party
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: War of Napoleon Zervas
SELECT ?war WHERE {
  ?zervas rdfs:label ""Napoleon Zervas""@en .
  ?zervas dbo:participatedInMilitaryConflict ?war .
}

UNION

# Part 2: War of the Awardee of 1930
SELECT ?war WHERE {
  ?awardee dbp:dateOfBirth ?dob ;
           dbp:dateOfDeath ?dod ;
           dbo:award ?award .
  FILTER (YEAR(?dob) < 1930 && YEAR(?dod) > 1930)
  ?awardee dbo:participatedInMilitaryConflict ?war .
}

UNION

# Part 3: Entity in the Death Place of Antonios Varthalitis
SELECT ?entity WHERE {
  ?varthalitis rdfs:label ""Antonios Varthalitis""@en ;
               dbo:deathPlace ?place .
  ?place a dbo:Settlement .
  ?place dbo:locatedIn ?entity .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthplace WHERE {
  ?alumnus dbo:almaMater dbp:Plovdiv_University_Paisii_Hilendarski .
  ?alumnus dbo:birthPlace ?birthplace .
}

SELECT ?resident ?birthplace WHERE {
  ?region geo:timezone ""Europe/Helsinki"" .
  ?settlement dbo:partOf ?region ;
              a dbo:Settlement .
  ?resident dbo:residence ?settlement .
  ?resident dbo:birthPlace ?birthplace .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?manager WHERE {
  # Identify the 2006–07 VfL Bochum season
  ?vflBochumSeason rdfs:label ""2006–07 VfL Bochum season""@en .
  
  # Find its successor season
  ?successorSeason dbo:succeeds ?vflBochumSeason .

  # Identify Thomas Letsch's team management period
  ?letschTeam dbp:manager ?letsch ;
              a dbo:SoccerClubSeason ;
              dbo:season ?letschSeason .
  
  # Find managers of the successor season
  ?successorManager dbp:managerOf ?successorSeason ;
                    foaf:nationality ?nationality .

  # Ensure manager is native to Germany
  ?nationality rdfs:label ""Germany""@en .

  # Ensure the manager's team matches criteria
  ?successorTeam dbo:season ?successorSeason ;
                 a dbo:SoccerClub, dbo:Organization, dbo:SportsClub .
  
  # Link manager to the correct team
  ?successorManager dbp:managerOf ?successorTeam .

  # Filter for managers who match all criteria
  FILTER(?letsch = ""Thomas Letsch""@en)
}
```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet's child who is royalty
  ?sawChild dbo:childOf ?sawShweKhet .
  ?sawChild dbo:royalty true .

  # Step 2: Find Minye Kyawswa's grandchild
  ?minyeGrandchild dbo:childOf ?minyeKyawswaChild .
  ?minyeKyawswaChild dbo:childOf ?minyeKyawswa .
  
  # Step 3: Determine predecessor of Saw Shwe Khet's child
  ?predecessor dbo:predecessor ?sawChild .

  # Step 4: Identify parent of Minye Kyawswa's grandchild
  ?parent dbo:parentOf ?minyeGrandchild .

  # Step 5: Find common entity between predecessor and parent
  FILTER (?predecessor = ?parent)
  
  # Step 6: Identify father of this common entity, ensuring he is royalty
  ?father dbo:parentOf ?commonEntity .
  ?father dbo:royalty true .

  # Step 7: Find spouse of this royal father
  ?father dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?jamieT rdfs:label ""Jamie T""@en .
  ?jamieT dbo:bandMember ?band .
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author1 ?work1 ?author2 ?work2 WHERE {
  # Find Douglas MacArthur's authored work
  dbr:Douglas_MacArthur dbo:officeHolderOf dbr:Korean_War .
  dbr:Douglas_MacArthur dbo:author ?author1 .
  ?author1 dbo:writtenWork ?work1 .

  FILTER (strstarts(str(?work1), ""The_""))

  # Find a book associated with Joe Biden and its author
  dbr:Joe_Biden dbo:author ?author2 .
  ?author2 dbo:writtenWork ?work2 .

  FILTER (strstarts(str(?work2), ""Promise"") && strcontains(str(?work2), ""American""))
}
```",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?partyMemberSpouse WHERE {
  # Landmark at elevation
  ?landmark dbo:elevationAboveSeaLevel ""20.1168""^^xsd:float .
  
  # Ruling party member
  ?landmark dbo:location ?location .
  ?location dbo:governingBody ?government .
  ?government dbo:member ?partyMember .

  # Actor of film by Nat Levine
  ?",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalEntity WHERE {
  # Step 1: Find parent of Archduchess Margarete Sophie of Austria
  ?margareteSophie dbo:parent ?parentMargarete .
  
  # Step 2: Find child of the child (royalty) of this parent
  ?childOfParent rdfs:label ?parentLabel .
  ?parentMargarete rdfs:label ?parentLabel .
  ?childOfParent dbo:child ?grandChild1 .
  ?grandChild1 a dbo:Monarch .

  # Step 3: Find child's child of Duke Philipp of Württemberg
  ?dukePhilipp dbo:child ?childOfDuke .
  ?childOfDuke dbo:child ?grandChild2 .

  # Step 4: Find predecessor of the child of spouse (royalty) of Archduchess Helena of Austria
  ?helenaSpouse dbo:spouse ?helena .
  ?helena rdfs:label ""Helena of Austria""@en .
  ?helenaSpouse a dbo:Monarch .
  ?helenaChild dbo:child ?childOfHelenaSpouse .
  
  # Assuming predecessor means the previous child in some order, we might need additional context or assumptions
  ?previousChild dbo:child ?predecessor .",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childWar ?birthPlaceWar ?koichiroWar WHERE {
  # Toyotomi Hideyoshi's child and their war
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  ?hideyoshi dbo:child ?child .
  ?child dbo:participatedIn ?childWar .

  # Yamaza Enjirō's birthplace and associated war
  ?yamaza rdfs:label ""Yamaza Enjirō""@en .
  ?yamaza dbo:birthPlace ?birthPlace .
  ?war dbo:location ?birthPlace .
  ?war rdf:type dbo:MilitaryConflict .

  # Koichirō's war
  ?koichiro rdfs:label ""Koichirō""@en .
  ?koichiro dbo:participatedIn ?koichiroWar .
}
```",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find $pacely's birth name
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely dbo:birthName ?birthNamePacely .

  # Find the writer of ""The Live Anthology"" who is also a musical artist
  ?anthology dbo:writer ?writer .
  FILTER (CONTAINS(LCASE(?anthology), ""the live anthology""))
  ?writer rdfs:label ?writerLabel .
  ?writer dbo:musicalArtist ?musicalArtistWriter .

  # Find Joey B's birth name
  ?joeyB rdfs:label ""Joey B""@en .
  ?joeyB dbo:birthName ?birthNameJoeyB .

  # Find associated musical artist for both individuals
  ?pacely dbo:musicalArtist ?associatedArtist .
  ?joeyB dbo:musicalArtist ?associatedArtist .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Identify Constance of Burgundy
  ?constance rdfs:label ""Constance of Burgundy""@en .
  
  # Step 2: Find her spouse and their child
  ?constance dbo:spouse ?rogerII .
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?child dbo:parent ?constance ;
         dbo:parent ?rogerII .

  # Step 3: Identify William I (assuming William I of Sicily)
  ?williamI rdfs:label ""William I of Sicily""@en .

  # Step 4: Find the child of William I
  ?childOfWill rdfs:label ?childLabel .
  ?childOfWill dbo:parent ?williamI .

  # Step 5: Determine the spouse of Constance's child who is also a royalty and office holder
  ?spouse rdfs:label ?spouseLabel ;
          dbo:spouse ?childOfWill ;
          rdf:type dbo:Monarch ; # Assuming Monarch as a proxy for royalty
          dbo:officeHolder ?office . # Assuming officeHolder property exists

  # Step 6: Identify the father of this child
  ?father rdfs:label ?fatherLabel .
  ?father dbo:child ?spouse .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?native WHERE {
  
  # Find the producer of 'Storm in a Teacup' (film)
  ?film dbo:title ""Storm in a Teacup""@en .
  ?film dbo:producer ?producer .
  
  # Find Steven Kapur's musical work titled 'The True Self'
  ?artist rdfs:label ""Steven Kapur""@en .
  ?work dbo:title ""The True Self""@en ;
        dbo:writer ?writer .

  # Get birthplaces of the producer and writer
  OPTIONAL { ?producer dbo:birthPlace ?producerBirthPlace . }
  OPTIONAL { ?writer dbo:birthPlace ?writerBirthPlace . }

  # Determine nativity based on birthplace
  OPTIONAL { ?native dbo:nativeName ?name ;
              dbo:birthPlace ?producerBirthPlace . }
  OPTIONAL { ?native dbo:nativeName ?name ;
              dbo:birthPlace ?writerBirthPlace . }

}",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?countryOfWork WHERE {
  # Part 1: Chiang Ching-kuo's child who is a politician
  ?chiang rdf:type dbo:Person ;
          rdfs:label ""Chiang Ching-kuo""@en .
  ?child dbo:childOf ?chiang ;
         rdf:type dbo:Politician ;
         dbo:birthPlace ?birthPlace .

  # Part 2: Hu Jieqing's spouse who is a writer
  ?hu rdf:type dbo:Person ;
      rdfs:label ""Hu Jieqing""@en .
  ?spouse dbo:spouseOf ?hu ;
          rdf:type dbo:Writer ;
          dbo:work ?work .
  
  # Assuming the work has a property to determine its country of origin or setting
  ?work dbo:setInLocation ?countryOfWork .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?player WHERE {
  # Step 1: Identify Marcelo Sarmiento
  ?marcelo a dbo:SoccerPlayer ;
           dbo:soccerManager true ;
           dbo:birthDate ?birthDateMarcelo .
  
  FILTER (STR(?birthDateMarcelo) = ""1955-02-22T00:00:00Z""^^xsd:dateTime)

  # Step 2: Find films directed by Manuel Huerga
  ?film dbo:director ?huerga ;
        a dbo:Film .
  
  ?huerga rdfs:label ""Manuel Huerga""@en .

  # Step 3: Identify actors in those films
  ?film dbo:actor ?actor .

  # Step 4: Filter for soccer players and athletes
  ?actor dbo:soccerPlayer true ;
         dbo:athlete true .

  # Step 5: Find teams of Marcelo Sarmiento
  ?marcelo dbo:team ?team .

  # Step 6: Identify persons born on 1955-02-22 who are athletes
  ?person a dbo:Athlete ;
          dbo:birthDate ?birthDatePerson .
  
  FILTER (STR(?birthDatePerson) = ""1955-02-22T00:00:00Z""^^xsd:dateTime)

  # Step 7: Find players in those persons' teams
  ?team dbo:player ?player .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
# Query for The Shadow (video game) alter ego:
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?game rdfs:label ""The Shadow (video game)""@en .
  ?game dbo:basedOn ?comicsCharacter .
  ?comicsCharacter rdfs:label ?alterEgo .
}

# Query for actor of Ab Kya Hoga who is a politician:
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Ab Kya Hoga""@en .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Politician .
}

# Query for Richard Grant Esterhuysen's movie that is also a TV show:
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?actor foaf:name ""Richard Grant Esterhuysen""@en .
  ?actor dbo:actedIn ?movie .
  ?movie rdfs:label ?title .
  ?tvShow rdfs:label ?title .
  ?tvShow a dbo:TelevisionSeries .
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  
  # Find Dorothea's parent(s)
  ?parent dbo:child ?dorothea .

  # Find the father of Dorothea's parent
  ?parent dbo:father ?grandfather .

  # Ensure grandfather is a commander in Siege of Padua and royalty
  ?grandfather dbp:role ""Commander""@en .
  ?siege dbo:commander ?grandfather ;
         rdfs:label ""Siege of Padua""@en .
  
  # Check if grandfather is father to a child who is royalty and related to Philip I of Castile
  ?child dbo:parent ?grandfather ;
         dbo:royalty true .
  ?philip rdfs:label ""Philip I of Castile""@en .
  ?child dbo:parent ?philip .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?deceasedPerson WHERE {
  # Identify Quincy Adams Gillmore
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  
  # Find awards received from the United States Congress
  ?award dbo:recipient ?gillmore ;
         dbo:awardingBody dbr:United_States_Congress .

  # Identify forces associated with the award
  ?force dbo:associatedAward ?award .

  # Determine wars related to the force or awardee
  ?war dbo:participatingForce ?force .
  
  # Find Gillmore's birthplace
  ?gillmore dbp:birthPlace ?birthPlace .

  # Identify notable entities in the birthplace
  ?entity rdfs:label ?entityLabel ;
          dbo:location ?birthPlace ;
          a dbo:Person ;
          dbo:nationality dbr:United_States .
  
  # Filter for an American person deceased on 1850-08-05
  ?deceasedPerson dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
                  dbo:deathPlace ?birthPlace ;
                  a dbo:Person ;
                  dbo:nationality dbr:United_States .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?victor dbo:child ?child1 .
  ?child1 dbo:spouse ?politicianChildParent .
  ?politicianChildParent dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .

  ?alumnus foaf:almaMater <http://dbpedia.org/resource/Eton_College> .
  ?alumnus dbo:child ?officeHolderParent .
  ?officeHolderParent dbo:spouse ?politicianOfficeHolder .
  ?politicianOfficeHolder rdf:type dbo:Politician ; dbo:officeHolder ?office .

  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:child ?alumnus .

  FILTER(?parent = ?victor)
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Native of Alexander II's administration in Finland
  ?person dbo:nationality ?finlandAdmin .
  ?finlandAdmin rdfs:label ""Finland""@en .

  # Decedent at Switzerland
  ?person dbo:deathPlace ?switzerland .
  ?switzerland rdfs:label ""Switzerland""@en .

  # Native of Nicholas II's administration (Russia)
  ?person dbo:nationality ?russiaAdmin .
  ?russiaAdmin rdfs:label ""Russian Empire""@en .

  # Ensure native place is a country
  ?person dbo:birthPlace ?nativeCountry .
  ?nativeCountry rdf:type <http://dbpedia.org/ontology/Country> .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer ?commander ?successor WHERE {
  # Part 1: Writer of ""Always the Love Songs""
  ?tvShow rdfs:label ""Always the Love Songs""@en .
  ?tvShow dbo:writer ?writer .

  # Part 2: Commander in a war and societal event
  ?warEvent rdf:type dbo:MilitaryConflict ;
            dbo:commander ?commander .
  
  # Part 3: Military force of Battle of Vienna
  ?battle rdfs:label ""Battle of Vienna""@en ;
          dbo:commander ?viennaCommander .

  # Part 4: Successor of the commander
  ?viennaCommander dbo:successor ?successor .
  
  # Ensure successor is a politician or office holder
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder ?office .

  # Part 5: Event and military conflict of Michał Kazimierz Pac
  ?event rdfs:label ""Battle of Vienna""@en ;
         dbo:commander ?michaPacCommander .
  
  FILTER(?writer = ?successor)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant WHERE {
  ?psoe rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?election dbo:winner ?leader .
  ?election dbo:electionDate ?date .
  FILTER(YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), 'galicia')) .
  ?leader foaf:based_near ?residence .
  ?residence rdf:type dbo:Country .
  ?leader dbo:nationality ?citizenship .
  ?citizenship rdfs:label ""Spain""@en .
  BIND(?leader AS ?tenant)
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchild ?parentOfRogerII ?royaltyOfficeHolder ?father WHERE {
  # Alfonso VI's child
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  ?alfonso dbo:child ?child .

  # Alfonso VI's grandchild
  ?child dbo:child ?grandchild .

  # Roger II's parent (father)
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?parentOfRogerII dbo:child ?rogerII .

  # Royalty and office holder related to William I
  ?reference rdfs:label ?title ;
             foaf:name ?name ;
             dbo:officeHolder ?office ;
             dbo:royalty ?royalty .
  ?office dbo:relatedTo ?williamI .
  ?williamI rdfs:label ""William I""@en .

  # Find the father of Alfonso VI's grandchild who matches the criteria
  ?grandchild dbo:father ?father .
  
  FILTER (?parentOfRogerII = ?father)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  { 
    ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
    ?faisal dbo:child ?child1 .
    ?child1 rdfs:label ?childLabel1 .
    FILTER(CONTAINS(LCASE(?childLabel1), ""prince"") || CONTAINS(LCASE(?childLabel1), ""princess""))
    OPTIONAL { ?child1 dbo:parent ?commonParent . }
  }
  
  {
    ?muna rdfs",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?office WHERE {
  
  # Find Manuel Pinto da Costa's office related to being a commander
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  ?manuel dbo:officeHolder ?commanderOffice .
  ?commanderOffice dbo:militaryConflict ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .

  # Find the leader of the 2003 Madrid City Council election and their residence
  ?election rdfs:label ""2003 Madrid City Council election""@en .
  ?leader dbo:electedDuring ?election .
  ?leader dbo:officeHolder ?residenceOffice .
  ?residenceOffice dbo:location ?residence .

  # Find the office of a leader in the Conservative Republican Party (Spain)
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
  ?politician dbo:officeHolder ?partyLeaderOffice .
  ?politician rdf:type dbo:Politician .

  # Combine conditions to find the specific office of Manuel Pinto da Costa
  FILTER(?commanderOffice = ?residenceOffice)
  FILTER(?commanderOffice = ?partyLeaderOffice)
}
",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Bob Thompson (musician)""@en .
  ?person dbo:birthName ?birthName .
}

SELECT ?character WHERE {
  ?gibson dbo:profession dbo:Writer .
  ?gibson foaf:name ""Walter B. Gibson"" .
  ?gibson dbo:created ?character .
  ?character rdfs:label ""The Shadow""@en .
}

SELECT ?producer WHERE {
  ?show dbo:title ""Coke Studio Philippines"" .
  ?show dbo:producer ?producer .
}

SELECT ?band WHERE {
  ?person rdfs:label ?birthName .
  ?person dbo:memberOfBand ?band .
}
```",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Step 1: Find films directed by Manuel Huerga
  ?film dbo:director ?huerga .
  ?huerga rdfs:label ""Manuel Huerga""@en .

  # Step 2: Find actors in those films
  ?film dbo:actor ?actor .

  # Step 3: Filter for soccer players and athletes
  ?actor dbo:soccerPlayer true .
  ?actor dbo:athlete true .

  # Step 4: Identify Marty Pollio's birthdate
  ?marty dbp:birthday ?birthdayMarty .
  ?marty rdfs:label ""Marty Pollio""@en .

  # Step 5: Find people born on Marty Pollio's birthday
  ?person dbp:birthday ?birthdayMarty .
  
  # Step 6: Filter for soccer players and managers
  ?person dbo:soccerPlayer true .
  ?person dbo:s",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderOffice ?militaryConflict ?residence ?partyLeaderOffice WHERE {
  ?manuel a dbo:Person ;
          rdfs:label ""Manuel Pinto da Costa""@en .
  ?manuel dbo:office ?commanderOffice ;
          ?commanderOffice dbo:militaryConflict ?militaryConflict .

  ?alberto a dbo:Person ;
           rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?alberto dbo:residence ?residence .

  ?miguel a dbo:Person ;
          rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:memberOfParty ?party .
  ?partyLeader a dbo:Person ;
               dbo:leaderOfParty ?party .
  ?partyLeader dbo:office ?partyLeaderOffice .

  FILTER(?commanderOffice = ?residence)
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?nate rdfs:label ""Nate Newton (musician)""@en .
  ?nate dbo:associatedBand ?artist .
  ?artist a dbo:MusicalArtist ;
          a dbo:Organization .
  ?producer dbo:producedBy ?artist .
  ?producer a dbo:Organization ;
            a dbo:Group .
  OPTIONAL { ?producer rdfs:label ""Nothing to Gein""@en }.
  ?producer dbo:bandMember ?bandMember .
}",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tripleXs ?tripleXMilitaryForce ?calder ?calderMilitaryConflict ?calderMilitaryForce ?bayne ?bayneMilitaryConflict ?commander WHERE {
  # Identify ""The Triple X's"" and their military force
  ?tripleXs rdfs:label ""The Triple X's""@en .
  ?tripleXs dbo:militaryUnit ?tripleXMilitaryForce .

  # Find Robert Calder and his associated military conflict/event and force
  ?calder rdfs:label ""Robert Calder""@en .
  ?calder dbo:participatedInMilitaryConflictOrWar ?calderMilitaryConflict .
  ?calder dbo:militaryUnit ?calderMilitaryForce .

  # Identify William Bayne and his related military conflict/event
  ?bayne rdfs:label ""William Bayne""@en .
  ?bayne dbo:participatedInMilitaryConflictOrWar ?bayneMilitaryConflict .

  # Determine the commander involved in the war that ties these elements together
  ?calderMilitaryConflict dbo:commander ?commander .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry WHERE {
  # Identify Anxo Quintana
  ?quintana rdfs:label ""Anxo Quintana""@en .
  
  # Find the administration he led
  ?administration dbo:leader ?quintana .

  # Find tenants of this administration
  ?tenant dbo:officeHolder ?administration .

  # Filter by Spanish citizenship and PSOE membership
  ?tenant dbo:nationality dbr:Spain .
  ?tenant dbo:member dbr:Spanish_Socialist_Workers'_Party .

  # Get the residence country of these tenants
  ?tenant dbo:residenceCountry ?residenceCountry .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Identify Martin of Aragon
  ?martin rdfs:label ""Martin of Aragon""@en .
  
  # Step 2: Find Martin's parent
  ?parent dbo:child ?martin .

  # Step 3: Identify Alfonso IV of Aragon and his children
  ?alfonso rdfs:label ""Alfonso IV of Aragon""@en .
  ?alfonso dbo:child ?royalChild .

  # Step 4: Match the child from Martin's parent with Alfonso's children
  FILTER (?parent = ?royalChild)
  
  # Return the real name of the matched child
  ?royalChild rdfs:label ?child .
}
```",6,8,7,3,2,3,2,20,0,1,3,0.0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find the alter ego of The Shadow in comics
  ?shadowCharacter dbo:alterEgoOf ?theShadow .
  
  # Identify Richard E. Grant as an actor
  ?richardGrant foaf:name ""Richard E. Grant"" ;
                dbo:profession ?actorProfession .

  # Identify Shatrughan Sinha's profession
  ?shatrughanSinha foaf:name ""Shatrughan Sinha"" ;
                   dbo:profession ?sinhaProfession .
  
  FILTER(?actorProfession = dbo:Actor && ?sinhaProfession = dbo:Actor)
  
  # Find the actor who played in both a movie and its TV adaptation
  ?movie dbo:starring ?actor .
  ?tvShow dbo:starring ?actor .

  # Ensure the actor is linked to The Shadow's alter ego
  ?actor foaf:name ?name .
  FILTER(?name = ""Lamont Cranston"" || ?name = ""Richard E. Grant"")
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band1 ?band2 ?kimBand WHERE {
  # Step 1: Find the musical artist born on March 30, 1945
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          dbo:occupation dbr:Musical_artist .
  
  # Step 2: Find Nicholas Michael Curran and his associated bands/artists
  ?curran rdfs:label ""Nicholas Michael Curran""@en ;
          dbo:associatedBandMember ?band1 .

  # Step 3: Retrieve Kim Wilson's band
  ?kimWilson rdfs:label ""Kim Wilson""@en ;
             dbo:associatedBandMember ?kimBand .
  
  # Find the associated musical artist of Nicholas Michael Curran
  OPTIONAL { ?curran dbo:associatedMusicalArtist ?band2 }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify the deceased person
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbp:dateOfDeath ""2020-06-18""^^xsd:date .

  # Step 2: Find movies authored by this person that are works and television shows
  ?movie dbo:author ?person ;
         a dbo:Film ;
         a dbo:TelevisionShow .

  # Step 3: Determine the location associated with these movies that is English and a settlement
  ?location dbo:settlementLocation ?movie ;
            dbp:country ""England"" ;
            a dbo:Settlement .

  # Step 4: Identify natives from this location who are artists and musical artists
  ?nativeArtist dbo:nationality dbr:England ;
                dbo:birthPlace ?location ;
                a dbo:Artist ;
                a dbo:MusicalArtist .

  # Step 5: Find the parent(s) of this native artist
  ?nativeArtist dbo:parent ?parent .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?linda rdfs:label ""Linda Sue Cobb""@en .
  OPTIONAL { ?linda dbo:producer ?movie . }
  ?linda dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person rdf:type dbo:SportsManager .
  ?person dbo:managedTeam ?team .
  
  ?team dbo:sport dbp:soccer ;
        dbo:season ""2007–08 VfL Bochum season"" .

  ?team dbo:manager ?manager .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Identify Khlyst (band)
  ?khlyst rdfs:label ""Khlyst""@en .
  
  # Step 2: Find a member of Khlyst who is also a musical artist
  ?member dbo:member ?khlyst ;
          dbo:musicalArtist ?artist1 .

  # Step 3: Identify the associated musical artist of this member
  ?artist1 dbo:associatedBand ?associatedArtist .
  
  # Step 4: Find the band that is an organization related to ""Burnt by the Sun""
  ?burntBySun rdfs:label ""Burnt by the Sun""@en ;
              rdfs:seeAlso ?bandRef .
  ?bandRef a dbo:Band ;
           a dbo:Group ;
           a dbo:Organization .

  # Step 5: Identify a band member of this identified band
  ?member2 dbo:member ?bandRef .

  # Step 6: Determine the associated musical artist of this band member
  ?member2 dbo:musicalArtist ?artist2 .
  ?artist2 dbo:associatedBand ?finalArtist .
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Step 1: Identify Bobby Shmurda's birth name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  ?bobbyShmurda dbo:birthName ?birthName .
}

# Step 2: Identify awards related to New York regions or states
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award WHERE {
  ?region rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(?locationLabel), ""new york"") && 
          CONTAINS(LCASE(?locationLabel), ""state"") || 
          CONTAINS(LCASE(?locationLabel), ""region"") || 
          CONTAINS(LCASE(?locationLabel), ""settlement""))
  
  ?award dbp:recipient ?region .
}

# Step 3: Identify bands from New York that received these awards
SELECT DISTINCT ?band WHERE {
  ?award dbp:recipient ?band .
  ?band dbo:country dbr:United_States ;
        dbo:stateOrProvince dbr:New_York_(state) .
}

# Step 4: Determine which of these bands have members associated with GS9
SELECT DISTINCT ?member WHERE {
  ?band dbo:bandMember ?member .
  ?gs9Member rdfs:label ""GS9""@en ;
             dbo:associatedBand ?band .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?player ?team ?actor WHERE {
  # Step 1: Find Marcelo Sarmiento's birthdate
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbo:birthday ?birthdate .

  # Step 2: Find a soccer player and manager born on that date
  ?person dbo:birthday ?birthdate ;
          (dbo:sportTeam|dbo:manager) ?team ;
          rdfs:label ?playerLabel .
  FILTER(CONTAINS(LCASE(?playerLabel), ""soccer"") && CONTAINS(LCASE(?playerLabel), ""manager""))

  # Step 3: Find Juan Carlos Molina's team
  ?molina rdfs:label ""Juan Carlos Molina (footballer)""@en ;
          dbo:sportTeam ?team .

  # Step 4: Identify Manuel Huerga's film and the actor who is both a soccer player and an athlete
  ?film dbo:director ?huerga .
  ?huerga rdfs:label ""Manuel Huerga""@en .
  ?actor dbo:actedIn ?film ;
         (dbo:sportTeam|dbo:athlete) ?athleteTeam ;
         rdfs:label ?actorLabel .
  FILTER(CONTAINS(LCASE(?actorLabel), ""soccer"") && CONTAINS(LCASE(?",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Bobby Shmurda's band members who are musical artists
  ?bobby a dbo:MusicalArtist ;
         rdfs:label ""Bobby Shmurda""@en .
  
  ?bobby dbo:bandMember ?member .
  ?member a dbo:MusicalArtist .

  # Step 2: Find natives of Florida who are musical artists
  ?floridaArtist a dbo:MusicalArtist ;
                 dbo:birthPlace ?place .
  ?place rdfs:label ""Florida""@en .

  # Ensure the band member is also a native of Florida
  FILTER (?member = ?floridaArtist)

  # Step 3: Identify awards related to New York
  ?award a",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:award dbr:Gillmore_Medal .
  ?person dbo:war ?war .
  ?war dbo:awardee ?award .
  ?award dbo:givenBy dbr:United_States_Congress .

  ?person dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?commander dbo:awardeeOf dbp:Commander_of_the_Order_of_the_British_Empire .
  ?event dbo:commandedBy ?commander ;
         rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  ?war dbo:event ?event ;
       rdfs:label ""World War II""@en .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Mariclare Costello's spouse
SELECT ?spouse WHERE {
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .
}

# Step 2: Find the child of Mariclare Costello's spouse
SELECT ?child WHERE {
  ?spouse dbo:child ?child .
}

# Step 3: Identify the parent of this child (should be the spouse)
SELECT ?parent WHERE {
  ?child dbo:parent ?parent .
}

# Step 4: Find Eugène Cattin's profession
SELECT ?profession WHERE {
  ?eugene rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:occupation ?profession .
}

# Step 5: Identify a professional in the same field as Eugène Cattin
SELECT ?professional WHERE {
  ?otherPerson dbo:occupation ?sameProfession .
  FILTER(?sameProfession = ?profession)
}

# Step 6: Determine the decedent at Los Angeles
SELECT ?decedent WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer ?successor ?commander ?tvShow WHERE {
  # Step 1: Identify George Ducas
  ?georgeDucas rdfs:label ""George Ducas""@en .
  
  # Step 2: Find the writer of his work
  ?georgeDucas dbo:work ?writer .

  # Step 3: Identify Yurii Khmelnytsky's successor
  ?yuriKhmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .
  ?yuriKhmelnytsky dbo:successor ?successor .

  # Step 4: Find the commander of the Battle of Vienna
  ?battleOfVienna rdfs:label ""Battle of Vienna (1683)""@en .
  ?battleOfVienna dbo:commander ?commander .

  # Step 5: Link to a television show or societal event
  OPTIONAL { ?commander dbo:work ?tvShow . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild WHERE {
  # Step 1: Identify child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?child dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  
  # Step 2: Find the spouse of this child
  ?spouse1 dbo:spouse ?child .
  
  # Step 3: Identify Princess Antoinette's royal child
  ?antoinettesChild dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .
  FILTER (CONTAINS(LCASE(?antoinettesChild), 'royalty'))
  
  # Step 4: Find the spouse of this royal child
  ?spouse2 dbo:spouse ?antoinettesChild .
  
  # Step 5: Determine the parent of this spouse
  ?parentOfSpouse dbo:child ?spouse2 .
  
  # Step 6: Identify a child of this parent that is royalty
  ?royalChild dbo:parent ?parentOfSpouse .
  FILTER (CONTAINS(LCASE(?royalChild), 'royalty'))
}
",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?war ?residenceCountry WHERE {
  ?athlete dbo:nationality dbc:Countries_of_Europe_Poland ;
           dbo:sport ?sport ;
           dbo:birthPlace dbr:Łódź .
  
  OPTIONAL { 
    ?athlete dbo:militaryConflict ?conflict .
    ?conflict rdfs:label ?war .
    FILTER(CONTAINS(LCASE(?war), ""french revolutionary wars""))
  }
  
  OPTIONAL {
    ?athlete dbo:residence ?residence .
    ?residence rdf:type dbo:Country ;
               rdfs:label ?residenceCountry .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?award WHERE {
  ?award a dbo:Award ;
         dbo:country ""United States""^^xsd:string ;
         dbo:stateOrProvince ""New York (state)"" .
}

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee ;
         a dbo:Award .
}

SELECT ?birthName WHERE {
  ?person dbo:nativePlace ""Florida"" ;
          dbo:birthName ?birthName ;
          a dbo:MusicalArtist .
}

SELECT ?gs9Member WHERE {
  ?gs9Member dbo:member ""GS9"" ;
             dbo:birthName ?birthName ;
             a dbo:Artist, dbo:MusicalArtist .
}

SELECT ?associatedArtist WHERE {
  ?gs9Member dbo:associatedBandMember ?associatedArtist ;
             a dbo:Artist, dbo:MusicalArtist .
}

SELECT ?bandMember WHERE {
  ?associatedArtist dbo:bandMember ?bandMember ;
                   a dbo:Band .
  FILTER (?bandMember a dbo:MusicalArtist)
}
```",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find John McDermott's death place
  ?john a dbo:Artist ;
        rdfs:label ""John McDermott (American artist)""@en .
  ?john dbo:deathPlace ?deathPlace .

  # Step 2: Identify the commander of Pickett's Charge
  ?charge a dbo:MilitaryEngagement ;
          dbp:name ""Pickett's Charge"" .
  ?commander dbo:commanderOf ?charge .

  # Step 3: Find ruling party in the death place
  ?party a dbo:PoliticalParty, dbo:Organisation ;
         dbo:location ?deathPlace .

  # Step 4: Intersect results to find common entity
  VALUES ?commonEntity { ?commander }
  FILTER (?commander = ?party)
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Identify Maria Anna of Bavaria (born 1574)
SELECT ?maria WHERE {
  ?maria rdfs:label ""Maria Anna of Bavaria""@en .
  ?maria dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1574)
}

# Step 2: Find her child who is royalty
SELECT ?child WHERE {
  ?maria dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}

# Step 3: Determine the parent of Archduke Charles Joseph of Austria
SELECT ?parent WHERE {
  ?charles rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?charles dbo:parent ?parent .
}

# Step 4: Find the father of this child (from step 2)
SELECT ?father WHERE {
  ?child dbo:father ?father .
}

# Step 5: Identify a societal event that is also an event and a television show
SELECT ?event WHERE {
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:Event ;",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?williamBayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?williamBayne dbo:participatedIn ?war1 .
  
  ?knightCommander dbo:awardedTo ?orderOfBath .
  ?knightCommander dbo:militaryForce ?force1 .
  ?force1 dbo:participatedIn ?war1 .

  ?societalEvent dbo:relatedMilitaryForce ?force1 .
  
  ?tripleX rdfs:label ""The Triple X's""@en .
  ?tripleX dbo:militaryForce ?force2 .
  ?force2 dbo:participatedIn ?war2 .

  ?commander dbo:commanded ?force2 .
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Archduchess Margarete Sophie of Austria's parent
  ?margareteSophie rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  ?parent dbo:child ?margareteSophie .

  # Carl, Duke of Württemberg's predecessor
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?predecessor dbo:successor ?carl .

  # Three generations from Alexander of Württemberg (1804-1881)
  ?alexander rdfs:label ""Alexander of Württemberg (1804–1881)""@en .
  ?child1 dbo:child ?alexander .
  ?child2 dbo:child ?child1 .
  ?grandChild dbo:child ?child2 .

  # Common individual who is a royalty
  FILTER (?parent = ?predecessor && ?grandChild = ?commonIndividual)
  ?commonIndividual rdf:type dbo:Monarch .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find Janusz Kamiński's Awards
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?award WHERE {
  ?janusz a dbo:Person ;
          rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:award ?award .
}

# Step 2: Find Movies with Audrey Hepburn and Iliza Shlesinger
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?film WHERE {
  ?audrey a dbo:Person ;
          rdfs:label ""Audrey Hepburn""@en .
  ?iliza a dbo:Person ;
         rdfs:label ""Iliza Shlesinger""@en .
  ?film dbo:starring ?audrey, ?iliza .
}

# Step 3: Find Common Actor in Films
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?actor WHERE {
  { 
    ?film1 dbo:starring ?actor .
    ?januszFilm a dbo:Film ;
                dbo:director ?janusz .
    ?januszFilm dbo:starring ?actor .
  }
  UNION
  {
    ?film2 dbo:starring ?actor .
    ?film2 rdfs:label ?filmLabel .
    FILTER regex(?filmLabel",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?finalPerson WHERE {
  # Step 1: Find Stephen V's predecessor
  ?predecessor dbo:predecessor dbo:StephenVOfHungary .

  # Step 2: Find the child of that predecessor who is royalty
  ?child dbo:child ?predecessor .
  ?child rdf:type dbo:Monarch .

  # Step 3: Identify Maria of Bytom's spouse and their parent who is a royalty
  dbo:MariaOfBytom dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
  ?father (dbo:mother|dbo:father) ?parent .
  ?parent rdf:type dbo:Monarch .

  # Step 4: Find the spouse of Philip I, Prince of Taranto's father
  dbo:PhilipIPrinceOfTaranto dbo:father ?philipFather .
  ?philipFather dbo:spouse ?spouse2 .

  # Combine results to find the final person
  FILTER (?child = ?parent && ?parent = ?spouse2)
  BIND(?child AS ?finalPerson)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist WHERE {
  ?rem rdfs:label ""R.E.M.""@en .
  ?rem dbo:associatedMusicalArtist ?artist1 .
  
  ?sappy dbo:album ""Sappy""@en .
  ?sappy dbo:writer ?writer .
  ?writer dbo:bandMember ?member .

  FILTER(?artist1 = ?member)

  ?rem dbo:associatedMusicalArtist ?associatedArtist .
}",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
# Query for the alter ego or professional role in ""The Golden Master"" series
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:actor ?professional .
}

UNION

# Query for the actor on the album cover of T.I.'s song ""What You Know""
SELECT ?albumCoverActor WHERE {
  ?song rdfs:label ""What You Know (T.I. song)""@en .
  ?song dbo:album ?album .
  ?album dbo:coverArt ?albumCover .
  ?albumCover dbo:actor ?albumCoverActor .
}

UNION

# Query for the actor in a movie with the author of ""Smartbomb""
SELECT ?movieActor WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
  ?film dbo:starring ?author ;
        dbo:starring ?movieActor .
}
```",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?jeanBaptistCommander ?warTVShow ?michaPacConflict ?successorPolitician ?georgeDucasWriter WHERE {
  # Jean Baptist, Comte d'Arco as a commander
  ?jeanBaptist dbo:commanderOf ?force .
  
  # War that is also a television show
  ?warTVShow rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""game of thrones"") || CONTAINS(LCASE(?warLabel), ""the crown"")) .

  # Michał Kazimierz Pac's military conflict
  ?michaPac dbo:militaryConflict ?michaPacConflict .

  # Successor as a politician and office holder
  ?successor foaf:page ?jeanBaptist .
  ?successor dbo:officeHolderOf ?office .

  # Writer of George Ducas's work
  ?georgeDucas dbo:author ?writer .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  # Identify PSOE
  ?psoe rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  # Find Álvaro Quirós and his associated country
  ?alvaro dbo:nationality ?country .
  ?alvaro rdfs:label ""Álvaro Quirós""@en .

  # Identify Anxo Quintana's leadership role in an event
  ?event dbo:leader ?anxo .
  ?anxo rdfs:label ""Anxo Quintana""@en .
  
  # Find the tenant of the administration that connects these elements
  ?tenant dbo:member ?psoe ;
          dbo:nationality ?country ;
          dbo:event ?event .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?kimBand ?ericMemberBand ?nickAssociatedArtist WHERE {
  # Kim Wilson's band
  ?kim a dbo:MusicalArtist ;
       rdfs:label ""Kim Wilson""@en .
  ?kim dbo:band ?kimBand .

  # Eric Clapton's band members and their bands
  ?clapton a dbo:MusicalArtist ;
           rdfs:label ""Eric Clapton""@en .
  ?member dbo:memberOfBand ?clapton ;
          dbo:band ?ericMemberBand .

  # Nick Curran's associated musical artist
  ?nick a dbo:MusicalArtist ;
        rdfs:label ""Nick Curran""@en .
  ?nick dbo:associatedMusicalArtist ?nickAssociatedArtist .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find actors of Lasso the Moon
  ?lassoMoon rdfs:label ""Lasso the Moon""@en .
  ?lassoMoon dbo:work ?work1 .
  ?work1 dbo:actor ?actor .

  # Find alter ego of The Shadow and its actor
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:actor ?actor .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Bob Thompson's birth name and associated band
SELECT ?bobBirthName ?band WHERE {
  ?bob a dbo:Musician ;
       foaf:name ""Bob Thompson""@en .
  OPTIONAL { ?bob foaf:givenname ?birthName . }
  OPTIONAL { ?band dbo:member ?bob . }
}

# Step 2: Find the producer of Coke Studio Philippines and their profession
SELECT ?producer ?profession WHERE {
  ?cokeStudio dbo:producer ?producer .
  ?producer a ?profession .
  FILTER(CONTAINS(LCASE(STR(?cokeStudio)), ""coke studio philippines""))
}

# Step 3: Identify musical artist with alter ego ""The Shadow""
SELECT ?artist WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:alterEgo ?shadow .
  ?shadow rdfs:label ""The Shadow""@en .
}

# Combine results to find the professional
SELECT DISTINCT ?professional WHERE {
  # Assuming we have variables from previous queries (?bobBirthName, ?producerProfession, etc.)
  ?artist a ?profession ;
          dbo:member ?bandMember .
  FILTER(?profession = ?producerProfession)
  FILTER(STR(?bandMember) = STR(?bobBirthName))
  FILTER(EXISTS { ?artist dbo:alterEgo ?shadow . ?shadow rdfs:label ""The Shadow""@en })
}
```",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country WHERE {
  # Daniel Elahi Galán's country
  ?galan rdfs:label ""Daniel Elahi Galán""@en .
  ?galan dbo:nationality ?nationality .

  # Roy Barreras' party
  ?barreras rdfs:label ""Roy Barreras""@en .
  ?barreras dbo:party ?party .

  # Sofía Petro's father and his party
  ?petro rdfs:label ""Sofía Petro""@en .
  ?petro foaf:parent ?father .
  ?father dbo:party ?fatherParty .

  # Find common country/entity
  FILTER (?nationality = ?country)
  OPTIONAL { ?barreras dbo:memberOfCountry ?country }
  OPTIONAL { ?father dbo:nationality ?country }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalSpouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  
  # Step 2: Find Philip's parent who is a royalty
  ?philip dbo:parent ?parentOfPhilip .
  ?parentOfPhilip dbo:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""king"") || CONTAINS(LCASE(?title1), """,8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?author rdfs:label ""Hillary Clinton""@en .
  ?author dbo:spouse ?spouse .
}
```",9,20,10,3,3,3,3,71,1,0,0,1.0,1.0,1.0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Paulus Powell's birth place
  ?paulus rdfs:label ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?region .

  # Governor of the region
  ?region dbo:governor ?governor .

  # Vince Gilligan's awards and nominations
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?vince dbo:award ?award .

  # Birth place of each awardee
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Author of ""El Deafo""
  ?book rdfs:label ""El Deafo""@en .
  ?book dbo:author ?author .

  # Birth place of the author
  ?author dbo:birthPlace ?authorBirthPlace .

  # Ensure all birth places are the same
  FILTER (?region = ?awardeeBirthPlace && ?region = ?authorBirthPlace)
  
  # Return the birth place of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  
  # Step 1 & 2: Identify Saw Min Phyu and her spouse
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  ?sawMinPhyu dbo:spouse ?spouse .
  
  # Step 3: Find child of Saw Min Phyu's spouse
  ?spouse dbo:child ?childOfSpouse .
  
  # Step 4: Ensure the child is royalty and find predecessor
  ?childOfSpouse a dbo:Monarch .
  ?predecessor dbo:successor ?childOfSpouse .
  
  # Step 5 & 6: Identify Min Hla Htut and his parent
  ?minHlaHtut rdfs:label ""Min Hla Htut""@en .
  ?minHlaHtut dbo:parent ?parentOfMinHlaHtut .
  
  # Step 7: Find child of this parent associated with Pyakaung
  ?parentOfMinHlaHtut dbo:child ?pyakaungChild .
  ?pyakaungChild rdfs:label ""Pyakaung""@en .
  
  # Step 8 & 9: Identify Saw Shwe Khet's child (royalty) and father's spouse
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .
  ?royalChild dbo:father ?fatherOfRoyalChild .
  ?fatherOfRoyalChild dbo:spouse ?spouseOfFather .
  
  # Ensure all entities are correctly linked
  FILTER(?predecessor = ?spouseOfFather)
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?mary dbo:parent ?parent .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query 1: Identify Kent Allard's fictional alter ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?kentAllard rdfs:label ""Kent Allard""@en .
  ?kentAllard dbo:fictionalAlterEgo ?alterEgo .
}

# Query 2: Find the professional role of Kent Allard's alter ego
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?profession WHERE {
  ?alterEgo dbo:occupation ?profession .
}

# Query 3: Identify the actor from ""High Society Blues"" and their claim to fame
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?claimToFame WHERE {
  ?movie rdfs:label ""High Society Blues""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:famousFor ?claimToFame .
}

# Query 4: Identify the producer for Cora Sue Collins and their claim to fame
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?work WHERE {
  ?collins rdfs:label ""Cora Sue Collins""@en .
  ?collins dbo:producedBy ?producer .
  ?producer dbo:famousFor ?work .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Step 1: Find Tony Hollings' birthday
  ?tony rdfs:label ""Tony Hollings""@en .
  ?tony dbo:birthday ?birthday .

  # Step 2: Find athlete with same birthday as Tony Hollings
  ?athlete rdfs:label ?playerLabel ;
           a dbo:Athlete ;
           dbo:sport dbp:Soccer ;
           dbo:birthDate ?sameBirthday ;
           dbo:occupation [a dbo:SportsManager, dbo:SoccerManager] .
  
  FILTER (?sameBirthday = ?birthday)

  # Step 3: Find Hong Kong C's manager
  ?club rdfs:label ""Hong Kong C""@en ;
        a dbo:SportsClub .
  ?manager dbo:worksFor ?club ;
           a dbo:SportsManager, dbo:SoccerManager .

  # Step 4: Check if the athlete is also the manager of Hong Kong C
  FILTER (?athlete = ?manager)
}
```",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?finalAssociatedArtist WHERE {
  # Step 1: Find a member of Khlyst who is also a musical artist
  ?member dbo:memberOfBand dbr:Khlyst ;
          rdf:type dbo:MusicalArtist .
  
  # Step 2: Find the associated musical artist of this member
  ?member dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Identify a band that is an organization and has Burnt by the Sun as its member
  ?band rdf:type dbo:Band, dbo:Organization ;
        dbo:member dbr:Burnt_by_the_Sun .
  
  # Step 4: Find the associated musical artist of this band
  ?band dbo:associatedMusicalArtist ?artist2 .

  # Step 5: Determine the associated musical artist of the previously found musical artist (artist1)
  ?artist1 dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonProducer WHERE {
  { 
    ?work dbo:character ?johnny .
    ?johnny rdfs:label ""Johnny Doughboy""@en .
    ?work dbo:starring ?actor .
    ?work dbo:director ?producer1 .
  }
  UNION
  {
    ?character rdfs:label ""Kent Allard""@en .
    ?character dbo:alias ?alterEgo .
    ?movie dbo:character ?alterEgo .
    ?movie dbo:director ?producer2 .
  }
  UNION
  {
    ?janet rdfs:label ""Janet Gaynor""@en .
    ?janet dbo:starring ?movie .
    ?movie dbo:director ?producer3 .
  }
  FILTER (?producer1 = ?commonProducer)
  FILTER (?producer2 = ?commonProducer)
  FILTER (?producer3 = ?commonProducer)
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce ?societalEvent WHERE {
  # Identify William Bayne
  ?bayne rdfs:label ""William Bayne""@en .
  
  # Find his role in the 30th Regiment of Foot
  ?bayne dbo:militaryCommanderOf ?regiment .
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .

  # Identify wars/conflicts associated with the regiment
  ?regiment dbo:militaryConflict ?war .

  # Find military forces involved in these conflicts
  ?force dbp:participatedIn ?war .
  
  # Link societal events to these forces
  OPTIONAL {
    ?event dbo:relatedMilitaryForce ?force .
    ?event rdf:type dbo:SocietalEvent .
    BIND(?event AS ?societalEvent)
  }
  
  BIND(?force AS ?militaryForce)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Get Sam Concepcion's profession
SELECT ?profession WHERE {
  ?sam foaf:name ""Sam Concepcion""@en .
  ?sam dbo:occupation ?profession .
}

# Step 2: Find Bob Thompson's band
SELECT ?band WHERE {
  ?bob foaf:name ""Bob Thompson (musician)""@en .
  ?bob dbo:birthName ?birthName .
  ?bob dbo:memberOfBand ?band .
}

# Step 3: Identify Walter B. Gibson's fictional character
SELECT ?character WHERE {
  ?gibson foaf:name ""Walter B. Gibson""@en .
  ?gibson dbo:creation ?character .
  ?character a dbo:FictionalCharacter ;
             dbo:genre/dbo:subClassOf* dbo:ComicsCharacter .
}

# Step 4: Find the musical artist fitting all criteria
SELECT DISTINCT ?artist WHERE {
  # Sam Concepcion's profession
  ?sam foaf:name ""Sam Concepcion""@en .
  ?sam dbo:occupation ?profession .

  # Bob Thompson's band
  ?bob foaf:name ""Bob Thompson (musician)""@en .
  ?bob dbo:memberOfBand ?band .

  # Walter B. Gibson's character
  ?gibson foaf:name ""Walter B. Gibson""@en .
  ?gibson dbo:creation ?character .
  ?character a dbo:FictionalCharacter ;
             dbo:genre",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  
  # Step 1: Identify Alexander of Württemberg (1804-1881)
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  FILTER(?alexander dbo:birthdayYear ""1804""^^xsd:gYear && ?alexander dbo:dateOfDeathYear ""1881""^^xsd:gYear) .

  # Step 2: Find his Grandchild who is a royalty
  ?grandchild dbo:parent ?alexanderChild .
  ?alexanderChild dbo:parent ?alexander .
  ?grandchild rdfs:label ?grandchildLabel .
  FILTER(CONTAINS(LCASE(?grandchildLabel), ""royalty"")) .

  # Step 3: Identify Archduke Charles Louis of Austria's Grandchild who is a royalty
  ?charlesLouis rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?charlesGrandchild dbo:parent ?charlesChild .
  ?charlesChild dbo:parent ?charlesLouis .
  ?charlesGrandchild rdfs:label ?charlesGrandchildLabel .
  FILTER(CONTAINS(LCASE(?charlesGrandchildLabel), ""royalty"")) .

  # Step 4: Determine the Spouse of Archduchess Helena of Austria
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?spouse dbo:spouse ?helena .

  # Step 5: Find the Child of this Spouse who is a royalty
  ?child dbo:parent ?spouse .
  ?child rdfs:label ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""royalty"")) .

  # Step 6: Identify the Predecessor (likely parent) of this Child
  ?predecessor dbo:parent ?child .
}
",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonProducer WHERE {
  # Step 1: Find the actor of ""High Society Blues""
  ?highSocietyBlues dbo:title ""High Society Blues""@en .
  ?highSocietyBlues dbo:actor ?actorHSB .

  # Step 2: Find the alter ego of The Shadow
  ?shadowAlterEgo rdfs:label ""The Shadow""@en .
  ?shadowAlterEgo dbo:alterEgo ?actorShadow .

  # Ensure actor from High Society Blues is also associated with The Shadow
  FILTER (?actorHSB = ?actorShadow)

  # Step 3: Find the producer of a notable work related to the actor from ""High Society Blues""
  ?work1 dbo:creator ?actorHSB .
  ?work1 dbo:producer ?producerHSB .

  # Step 4: Find the actor of ""Johnny Doughboy""
  ?johnnyDoughboy dbo:title ""Johnny Doughboy""@en .
  ?johnnyDoughboy dbo:actor ?actorJD .

  # Step 5: Find the producer of a notable work related to the actor from ""Johnny Doughboy""
  ?work2 dbo:creator ?actorJD .
  ?work2 dbo:producer ?producerJD .

  # Step 6: Determine if there is a common producer
  FILTER (?producerHSB = ?producerJD)
  BIND(?producerHSB AS ?commonProducer)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Golden Sword for Bravery
SELECT DISTINCT ?recipient ?war WHERE {
  ?award rdfs:label ""Golden Sword for Bravery""@en .
  ?award dbo:recipient ?recipient .
  ?recipient dbo:participatedInWar ?war .
}

UNION

# Part 2: Awardee related to ""25"" (speculative)
SELECT DISTINCT ?recipient ?war WHERE {
  ?award rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""25"")).
  ?award dbo:recipient ?recipient .
  ?recipient dbo:participatedInWar ?war .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  { 
    ?series1 rdfs:label ""Dispatches from Elsewhere""@en .
    ?series1 dbo:castMember ?actor .
    ?actor a dbo:Actor .
  }
  UNION
  {
    ?series2 rdfs:label ""Ab Kya Hoga""@en .
    ?series2 dbo:castMember ?actor .
    ?actor a dbo:Actor ;
           dbo:profession dbo:Politician .
  }
}

# Note: The final step of combining results with the alter ego from 'The Shadow' requires manual cross-referencing based on query outputs.",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?band ?nativeArtist ?bandMember WHERE {
  # Step 1: Identify awards named after U.S. states or cities
  ?award dbo:country dbr:United_States ;
         rdfs:label ?awardLabel .
  
  FILTER regex(?awardLabel, ""^(New York|California|Texas|Florida|Illinois|Pennsylvania|Ohio|Georgia|North Carolina|Michigan)$"", ""i"")

  # Step 2: Find bands from New York State that have won these awards
  ?band dbo:hometown dbr:New_York_City ;
        dbo:awardReceived ?award .

  # Step 3: Identify a musician from Florida who shares their birth name with another individual
  ?nativeArtist dbo:nationality dbr:United_States ;
               dbo:birthPlace dbr:Florida ;
               rdfs:label ?artistLabel .
  
  ?otherPerson rdfs:label ?artistLabel ;
               dbo:birthName ?birthName .

  # Step 4: Check if any member of Uncle Murda fits the criteria
  ?bandMember dbo:memberOf dbr:Uncle_Murda ;
              dbo:birthName ?birthName .
  
  FILTER (?nativeArtist != ?otherPerson)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?usNavyRole WHERE {
  ?hClinton rdfs:label ""Hillary Clinton""@en .
  ?book dbo:author ?hClinton .
  ?book rdfs:label ""Living History""@en .
  ?billClinton dbo:spouse ?hClinton .
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?gulfWar dbo:commander ?billClinton .
  ?gulfWar rdfs:label ""Gulf War""@en .
  ?usNavyRole dbo:roleInWar ?gulfWar .
  ?usNavyRole rdf:type dbo:MilitaryUnit .
}",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet's child who is royalty
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child dbo:parent ?sawShweKhet ;
         rdfs:label ?childLabel .

  FILTER(CONTAINS(LCASE(?childLabel), ""royalty""))

  # Step 2: Find the father of this child (who is royalty)
  ?father dbo:child ?child ;
          rdfs:label ?fatherLabel .
  
  FILTER(CONTAINS(LCASE(?fatherLabel), ""royalty""))

  # Step 3: Identify the spouse of this father
  ?father dbo:spouse ?spouse .

  # Step 4: Determine the predecessor of the child of Saw Min Phyu's spouse (who is royalty)
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?partyMember WHERE {
  
  # Step 1: Identify the ruling party in Central, Louisiana
  ?central dbo:mayor ?mayor .
  ?mayor dbo:memberOf ?rulingParty .
  FILTER(CONTAINS(LCASE(?central), 'central, louisiana'))
  
  # Step 2: Find a member of this ruling party
  ?partyMember dbo:memberOf ?rulingParty .
  
  # Step 3: Identify Nat Levine's film product and its actor
  ?film dbo:producer ?natLevine .
  ?natLevine rdfs:label ""Nat Levine""@en .
  ?film dbo:actor ?actor .
  
  # Step 4: Find the spouse of this actor
  ?actor dbo:spouse ?spouse .
  
  # Step 5: Identify Tisha Sterling's parent and their birth name
  ?tisha dbo:parent ?parent .
  ?parent rdfs:label ?birthName .
  FILTER(CONTAINS(LCASE(?tisha), 'tisha sterling'))
  
  # Step 6: Find a person born with that birth name
  ?person rdfs:label ?birthName .
  FILTER(?person != ?parent)
  
  # Combine results to find the final answer
  BIND(CONCAT(""Party Member: "", STR(?partyMember), "" | Spouse of Actor: "", STR(?spouse)) AS ?result)
}
LIMIT 1",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Identify T.I.'s song that is also a musical work
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  ?song dbo:artist dbr:T.I. ;
        rdf:type dbo:Songs .
}

# Step 2: Find the album of this song
SELECT ?album WHERE {
  ?album dbo:song ?song .
}

# Step 3: Look for a movie with the same name as the album and retrieve an actor from it
SELECT DISTINCT ?movieActor WHERE {
  ?movie rdfs:label ?albumLabel ;
         dbo:actor ?movieActor .
  FILTER(lang(?albumLabel) = 'en')
}

# Note: Steps 4 and 5 are hypothetical due to potential lack of data in DBpedia for fictional series.
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?musicalArtist WHERE {
  # Step 1: Find Cynthia Morgan's birth name
  ?cynthia rdfs:label ""Cynthia Morgan""@en .
  ?cynthia dbo:birthName ?birthName .

  # Step 2: Find Afeez Oyetoro's associated movie/show
  ?afeez rdfs:label ""Afeez Oyetoro""@en .
  ?afeez dbo:associatedFilmOrTVSeries ?movieShow .

  # Step 3: Find musical artist associated with either Cynthia Morgan's birth name or the movie/show
  OPTIONAL { ?birthName dbo:associatedMusicalArtist ?musicalArtist . }
  OPTIONAL { ?movieShow dbo:associatedMusicalArtist ?musicalArtist . }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?eleonoraAlmaMater ?eleonoraAlmaMaterFoundingDate ?luizaAlmaMater ?luizaAlmaMaterFoundingDate WHERE {
  ?eleonora rdfs:label ""Eleonora Menicucci""@en .
  ?eleonora dbo:almaMater ?eleonoraAlmaMater .
  ?eleonoraAlmaMater dbo:foundingDate ?eleonoraAlmaMaterFoundingDate .

  ?luiza rdfs:label ""Luiza Erundina""@en .
  ?luiza dbo:almaMater ?luizaAlmaMater .
  ?luizaAlmaMater dbo:foundingDate ?luizaAlmaMaterFoundingDate .
}",6,10,7,3,2,3,2,20,1,3,0,0.25,1.0,0.4
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Query 1: Find writer of Wizards of Waverly Place (soundtrack)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?writer WHERE {
  ?soundtrack dbo:title ""Wizards of Waverly Place""@en .
  ?soundtrack dbo:writer ?writer .
}

# Query 2: Find associated musical artist and artist
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?artist WHERE {
  ?writer dbo:musicalArtist ?artist ;
          a dbo:Artist .
}

# Query 3: Find Stuart Tosh's associated musical artist
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?musicalArtist WHERE {
  ?stuart rdfs:label ""Stuart Tosh""@en .
  ?stuart dbo:musicalArtist ?musicalArtist .
}

# Query 4: Find band members of the musical artist associated with David Paton
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?bandMember WHERE {
  ?david rdfs:label ""David Paton""@en .
  ?david dbo:musicalArtist ?musicalArtist .
  ?musicalArtist dbo:associatedBandMember ?bandMember .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?foundingDate WHERE {
  ?eleonora rdfs:label ""Eleonora Menicucci""@en .
  ?eleonora dbo:almaMater ?almaMater .
  
  ?university rdfs:label ""Federal University of Paraíba""@en .
  ?university dbo:foundingDate ?foundingDate .
}",5,6,6,3,2,3,2,20,1,3,0,0.25,1.0,0.4
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonArtist WHERE {
  # Step 1: Find Stuart McBeath Tosh's associated musical artist
  ?stuart dbo:birthName ""Stuart McBeath Tosh"" .
  ?stuart dbo:associatedBandMember ?artist1 .

  # Step 2: Find David Paton's associated musical artist
  ?david dbo:birthName ""David Paton"" .
  ?david dbo:associatedBandMember ?artist2 .

  # Step 3: Find the writer of Wizards of Waverly Place soundtrack who is also a musical and visual artist
  ?writer dbo:musicalArtist true ;
          dbo:artist true ;
          dbo:work ?soundtrack .
  ?soundtrack rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .
  ?writer dbo:associatedBandMember ?artist3 .

  # Find the common musical artist
  FILTER (?artist1 = ?artist2 && ?artist2 = ?artist3)
  BIND(?artist1 AS ?commonArtist)
}
```",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name ?timeZone WHERE {
  ?mitaka rdfs:label ""Mitaka, Tokyo""@en .
  ?mitaka rdfs:label ?name .
  OPTIONAL { ?mitaka dbo:timeZone ?timeZone . }
}
```",4,4,5,2,2,2,2,9,0,2,1,0.0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalIndividual WHERE {
  
  # Step 1: Identify Constance of Burgundy
  ?constance rdfs:label ""Constance of Burgundy""@en .
  
  # Step 2: Find her Spouse
  ?constance dbo:spouse ?spouse .
  
  # Step 3: Determine their Child who is royalty
  ?child1 dbo:parent ?spouse ;
          dbo:parent ?constance ;
          rdf:type dbo:Monarch .
  
  # Step 4: Identify the Grandchild who is royalty
  ?grandchild dbo:parent ?child1 ;
              rdf:type dbo:Monarch .
  
  # Step 5: Reference to William I (royalty and office holder)
  ?reference rdfs:label ?refLabel ;
             rdf:type dbo:Monarch, dbo:OfficeHolder ;
             dbo:officeHolder ?williamI .
  FILTER(CONTAINS(LCASE(?refLabel), ""william i""))
  
  # Step 6: Find their Child who is royalty
  ?child2 dbo:parent ?reference ;
          rdf:type dbo:Monarch .
  
  # Step 7: Parent of Roger III, Duke of Apulia
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  ?parent dbo:child ?rogerIII .
  
  # Step 8: Child of that Parent
  ?child3 dbo:parent ?parent .
  
  # Step 9: Final Connection
  ?finalIndividual dbo:spouse ?grandchild ;
                   dbo:child ?child2 .
}
",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for ""Aladdin"" (1958)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?deathPlace WHERE {
  ?film dbp:title ""Aladdin""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?deathPlace .
}

# Query for ""Color Me Dead""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?deathPlace WHERE {
  ?film dbp:title ""Color Me Dead""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?deathPlace .
}

# Query for ""The Sky Ranger"" (1928)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?deathPlace WHERE {
  ?film dbp:title ""The Sky Ranger""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthYear ?year .
  FILTER(?year <= 1928 && ?year >= 1900) # Assuming the actor was born before or around the film's release
  ?actor dbo:deathPlace ?deathPlace .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalPerson WHERE {
  # Step 1: Identify Alexander of W\u00fcrttemberg and his great-grandchild
  ?alexander dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear ;
             rdfs:label ""Alexander of W\u00fcrttemberg""@en .
  ?child1 dbo:parent ?alexander .
  ?grandchild dbo:parent ?child1 .
  ?greatGrandchild dbo:parent ?grandchild .

  # Step 2: Identify Archduchess Margarete Sophie of Austria's parent and their royal child
  ?margareteSophie rdfs:label ""Archduchess Marg",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?hidetsugu rdfs:label ""Toyotomi Hidetsugu""@en .
  ?hidetsugu dbo:participatedIn ?war .
  FILTER (rdf:type(?war, dbo:MilitaryConflict))
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  ?hideyoshi dbo:participatedIn ?war .
  FILTER (rdf:type(?war, dbo:MilitaryConflict))
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?caroline rdfs:label ""Caroline Louise Bevan Symonds""@en .
  ?caroline dbo:spouse ?spouse .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:award dbr:Medal_of_Honor .
  ?person dbo:war dbr:American_Civil_War .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
  ?birthPlace dbo:country dbr:United_States .
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Find Ada Jane Low's entity
  ?adaJaneLow rdfs:label ""Ada Jane Low""@en .
  
  # Step 2: Find Mark Tournier's birthplace
  ?markTournier rdfs:label ""Mark Tournier""@en .
  ?markTournier dbo:birthPlace ?birthPlace .

  # Step 3: Find a politician born at the same settlement
  ?politician dbo:occupation dbr:Politician ;
              dbo:birthPlace ?birthPlace ;
              rdfs:label ?politicianLabel .

  # Step 4: Find Ada Jane Low's predecessor
  ?adaJaneLow dbo:predecessor ?predecessor .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement WHERE {
  ?region dbp:timeZone ""Eastern European Time"" .
  ?settlement dbo:partOf ?region .
  ?alumnus dbo:birthPlace ?settlement .
  ?university rdfs:label ""Пловдивски университет „Паисий Хилендарски“""@bg .
  ?alumnus dbo:almaMater ?university .
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
# Step 1: Find Marcelo Sarmiento's Birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthday WHERE {
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbo:birthday ?birthday .
}

# Step 2: Find a Soccer Player and Manager Born on",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  { 
    ?tupac rdfs:label ""Tupac Amaru Shakur""@en .
    ?tupac dbo:associatedMusicalArtist ?artist .
  } UNION {
    ?rocky rdfs:label ""Rocky Dawuni""@en .
    ?rocky dbo:associatedMusicalArtist ?artist .
  } UNION {
    ?bob rdfs:label ""Bob Dylan""@en .
    ?bob dbo:associatedMusicalArtist ?artist .
  }
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?tvShow ?successor WHERE {
  # Commander in the Battle of Vienna
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Vienna (1683)""@en .

  OPTIONAL {
    # Related TV show or societal event
    ?tvShow dbo:subject ?battle .
    ?tvShow rdfs:label ?showLabel .
  }

  OPTIONAL {
    # George Ducas and his work
    ?ducas foaf:name ""George Ducas""@en .
    ?ducas dbo:work ?work .
    ?successor dbo:successorOf ?ducas .
  }

  OPTIONAL {
    # Successor in Russo-Polish War
    ?war rdfs:label ""Russo-Polish War (1654–1667)""@en .
    ?commander2 dbo:commander ?war .
    ?successor dbo:successorOf ?commander2 .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?organisation WHERE {
  ?george rdfs:label ""George Hamilton Cameron""@en .
  
  OPTIONAL { ?george dbo:award ?award . }
  
  ?george dbo:member ?party .
  ?party a dbo:PoliticalParty ;
         dbo:leader ?leader .
  
  ?leader dbo:residence ?residence .

  ?organisation rdfs:label ?residenceLabel .
  FILTER (CONTAINS(LCASE(?residenceLabel), LCASE(?residence)))
  
  ?organisation a dbo:Organisation, dbo:PoliticalParty .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild WHERE {
  
  # Step 1: Identify Maria Anna of Bavaria (born 1574)
  ?maria rdfs:label ""Maria Anna of Bavaria""@en .
  FILTER(YEAR(?maria dbo:birthday) = 1574).

  # Step 2: Find her child and the father of that child
  ?child dbo:parent ?maria .
  ?father dbo:spouse ?maria ; dbo:child ?child .

  # Step 3: Identify a royal child of this father
  ?royalChild dbo:parent ?father .
  OPTIONAL { ?royalChild dbo:royalTitle ?title }.

  FILTER EXISTS { ?royalChild dbo:royalTitle ?title }

  # Step 4: Identify Archduke Charles Joseph of Austria
  ?archduke rdfs:label ""Archduke Charles Joseph of Austria""@en .

  # Step 5: Find his parent(s)
  ?parent dbo:child ?archduke .

  # Step 6: Identify a commander child of this parent
  ?commanderChild dbo:parent ?parent ; dbo:commanderOfMilitaryUnit ?unit .
  FILTER EXISTS { ?unit rdfs:label ""2nd Dragoon Regiment (France)""@en }

  # Step 7: Find societal event and television show related to the regiment
  OPTIONAL {
    ?event dbo:eventType ?eventType ;
           dbo:relatedEntity ?unit .
    FILTER(?eventType IN (dbo:SocietalEvent, dbo:TelevisionShow))
  }
}
",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Mariclare Costello
  ?mariclareCostello rdfs:label ""Mariclare Costello""@en .
  
  # Step 2: Find her spouse
  ?mariclareCostello dbo:spouse ?spouse .

  # Step 3: Determine the child of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Identify the parent of this child (could be Mariclare or spouse)
  OPTIONAL { ?mariclareCostello dbo:parentOf ?child . }
  OPTIONAL { ?spouse dbo:parentOf ?child . }

  # Step 5: Find the decedent at Los Angeles
  ?decedent dbo:deathPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""los angeles""))
  
  # Ensure this person is a parent of the child
  OPTIONAL { ?mariclareCostello dbo:parentOf ?decedent . }
  OPTIONAL { ?spouse dbo:parentOf ?decedent . }

  # Step 6: Identify the professional photographer
  ?decedent dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""photographer""))

  # Step 7: Find the work (movie)
  ?work dbo:actor ?decedent .

  # Step 8: Retrieve the actor from this movie
  ?work dbo:actor ?actor .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalParent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Step 2: Find his child who is a politician and an office holder
  ?child dbo:parent ?edward ;
         (dbo:officeHolder|dbo:politician) ?role .

  # Step 3: Determine the parent of this child
  ?parent dbo:child ?child .
  
  # Step 4: Identify the awardee of Commander of the Royal Victorian Order among these parents
  ?awardee dbo:awardee ""Commander of the Royal Victorian Order""@en ;
           dbo:parent ?parent .

  # Step 5: Find the father of a politician who is an alumnus of Eton College
  ?politicianChild dbo:parent ?awardee ;
                   dbo:alumnusOf <http://dbpedia.org/resource/Eton_College> ;
                   dbo:politician ?polRole .

  # Step 6: Identify the parent of this child
  ?finalParent dbo:child ?politicianChild .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Part 1: Administration of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
SELECT ?position WHERE {
  ?christian rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  ?christian dbo:positionHeld ?position .
}

# Part 2: Administration of the Mayor of Duchy of Schleswig and territory administered from Copenhagen
SELECT DISTINCT ?mayor ?territory WHERE {
  ?mayor rdfs:label ?labelMayor ;
         dbo:office ?office .
  FILTER(CONTAINS(LCASE(?labelMayor), ""mayor"") && CONTAINS(LCASE(?office), ""duchy of schleswig""))
  
  OPTIONAL {
    ?administeredFrom rdfs:label ?territoryLabel .
    ?administeredFrom dbo:administrativeTerritory ?territory .
    FILTER(CONTAINS(LCASE(?territoryLabel), ""copenhagen""))
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer WHERE {
  # Step 1: Identify Apache Indian and his works
  ?apacheIndian rdfs:label ""Apache Indian""@en .
  ?apacheIndian dbo:work ?musicalWork .

  # Step 2: Find the producer of ""Storm in a Teacup"" film
  ?film dbp:title ""Storm in a Teacup""@en ;
        dbo:producer ?producer .

  # Step 3: Identify birthplace of the producer
  ?producer dbo:birthPlace ?birthPlace .

  # Step 4: Find writer native to that birthplace who wrote for Apache Indian's work
  ?writer dbo:nationality ?nativeCountry ;
          dbo:birthPlace ?birthPlace .
  
  FILTER(?nativeCountry = ?birthPlace) .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Identify the soccer player and manager born on 1979-11-03
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_manager .

  # Step 2: Identify the actor who is also a soccer player and athlete
  ?actor dbo:profession dbr:Actor ;
         dbo:sport dbr:Soccer ;
         dbo:athlete true .

  # Step 3: Find the film directed by Manuel Huerga featuring the actor
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:castMember ?actor .

  # Step 4: Identify the athlete born on Marty Pollio's birthday
  ?athlete dbo:birthday ?martyBirthday .
  ?martyPollio rdfs:label ""Marty Pollio""@en ;
               dbo:birthday ?martyBirthday .

  # Step 5: Determine the team associated with the person identified in step 1
  ?person dbo:team ?team .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native ?club WHERE {
  ?luckman rdfs:label ""David Luckman""@en .
  ?luckman dbo:residence ?residence .

  ?person dbo:nativePlace ?residence .
  ?person dbo:manager ?player .
  
  ?club dbo:sport ?sport ;
        dbo:member ?player ;
        rdfs:label ?clubLabel .

  FILTER(CONTAINS(LCASE(?clubLabel), ""soccer"") && CONTAINS(LCASE(?clubLabel), ""sports""))

  OPTIONAL { 
    ?connection rdfs:label ""Jamie McCunnie""@en .
    ?connection dbo:relatedTo ?person .
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Claude Bowes-Lyon's children
  ?claudius rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?child dbo:childOf ?claudius .

  # Step 2: Find William Gayner's birthplace region/country
  ?william rdfs:label ""William Gayner""@en .
  ?william dbo:birthPlace ?birthPlace .
  ?birthPlace dbp:country ?country ;
              dbp:region ?region .

  # Step 3: Filter Claude Bowes-Lyon's child by region/country
  ?child dbo:nativeOf ?nativePlace .
  ?nativePlace dbp:country ?sameCountry ;
               dbp:region ?sameRegion .
  
  FILTER (?sameCountry = ?country || ?sameRegion = ?region)

  # Step 4: Identify Hon. Mary Frances Bowes-Lyon and her parent(s)
  ?mary rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?parent dbo:childOf ?claudius ;
          dbo:child ?mary .

  # Step 5: Find the common parent
  FILTER (?child = ?mary)
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Find the actor of ""High Society Blues""
  ?highSocietyBlues dbo:starring ?actor1 .
  ?highSocietyBlues rdfs:label ""High Society Blues""@en .

  # Step 2: Find the producer's claim to fame for this actor
  ?actor1 dbo:work ?claimToFame1 .
  ?claimToFame1 a dbo:Film ;
               dbp:producer ?producer1 .

  # Step 3: Find the actor of ""Johnny Doughboy""
  ?johnnyDoughboy dbo:starring ?actor2 .
  ?johnnyDoughboy rdfs:label ""Johnny Doughboy""@en .

  # Step 4: Find the producer's claim to fame for this actor
  ?actor2 dbo:work ?claimToFame2 .
  ?claimToFame2 a dbo:Film ;
               dbp:producer ?producer2 .

  # Step 5: Identify common professional link (optional, if needed)
  OPTIONAL {
    ?commonWork dbo:starring ?actor1, ?actor2 .
  }

  # Step 6: Find the producer of both claims to fame
  FILTER (?producer1 = ?producer2)
  BIND(?",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Identify the writer of ""The Live Anthology""
  ?anthology dbo:author ?writer .
  ?anthology rdfs:label ""The Live Anthology""@en .

  # Step 2: Check if the writer is a musical artist
  ?writer dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""musical artist""))

  # Step 3: Identify Elorm Kabu Amenyah and their associated musical artists
  ?elorm foaf:name ""Elorm Kabu Amenyah""@en .
  ?elorm dbo:associatedMusicalArtist ?associatedArtist .

  # Step 4: Find an artist from Central Region, Ghana
  ?artist dbo:nativePlace ?centralRegion .
  ?centralRegion rdfs:label ""Central Region, Ghana""@en .
  ?artist foaf:name ?birthName .

  # Step 5: Match birth names and find the professional
  ?writer foaf:name ?birthName .
  
  # Step 6: Ensure the professional matches all criteria
  ?professional dbo:profession ?sameProfession .
  FILTER(?sameProfession = ?profession)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         a dbo:TelevisionSeries .
  
  ?movie dbo:starring ?veraLynn .
  ?veraLynn rdfs:label ""Vera Lynn""@en .

  ?artist a dbo:Artist, dbo:MusicalArtist ;
          dbo:nativePlace ?location .
  ?location a dbo:EnglishSettlement .

  ?parent dbo:child ?artist .
  
  ?movie dbo:creator ?author .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Find actor of ""High Society Blues""
  ?highSocietyBlues dbo:starring ?actor .
  ?highSocietyBlues rdfs:label ""High Society Blues""@en .

  # Step 2: Find the producer of this actor's claim to fame (a work)
  ?actor dbo:notableWork ?work1 .
  ?work1 dbo:producer ?producer1 .

  # Step 3: Find actor of ""Johnny Doughboy""
  ?johnnyDoughboy dbo:starring ?actor2 .
  ?johnnyDoughboy rdfs:label ""Johnny Doughboy""@en .

  # Step 4: Find the producer of this actor's claim to fame (a work)
  ?actor2 dbo:notableWork ?work2 .
  ?work2 dbo:producer ?producer2 .

  # Step 5: Identify Kent Allard as a fictional character
  ?kentAllard rdfs:label ""Kent Allard""@en .
  ?kentAllard dbo:fictionalCharacterOf ?realPerson .

  # Step 6: Find the professional alter ego related to this reference
  ?realPerson dbp:profession ?profession .

  # Step 7: Determine if there is a common producer between these two claims to fame
  FILTER (?producer1 = ?producer2)
  BIND(?producer1 AS ?producer)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?nativeCountry WHERE {
  # Step 1: Find Theodor Heuss's native country
  ?theodorHeuss rdfs:label ""Theodor Heuss""@en .
  ?theodorHeuss dbo:nationality ?nativeCountry .

  # Step 2: Identify the sports manager born on 1968-08-26
  ?manager a dbo:SportsManager ;
           dbo:birthDate ?birthDate .
  FILTER (xsd:date(?birthDate) = ""1968-08-26""^^xsd:date)

  # Step 3: Find the successor of the 2006–07 VfL Bochum season and its manager
  ?vflBochumSeason rdfs:label ""2006–07 VfL Bochum season""@en .
  ?successor dbo:successorOf ?vflBochumSeason ;
             dbo:manager ?manager .

  # Step 4: Ensure the manager is linked to Theodor Heuss's native country
  FILTER (?nativeCountry = ?country)
}",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find Nate Newton's band
  ?nateNewton rdfs:label ""Nate Newton""@en .
  ?nateNewton dbo:member ?band .

  # Step 2: Ensure the band is also an organization and a group
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalArtist .

  # Step 3: Find the producer of ""Nothing to Gein""
  dbr:Nothing_to_Gein dbo:albumProducer ?producer .
  
  # Ensure the producer is both an organization and a group
  ?producer rdf:type dbo:Organization ;
            rdf:type dbo:Group .

  # Step 4: Find band members associated with this producer's organization/group
  ?producer dbo:member ?bandMember .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?shirley rdfs:label ""Shirley Stoler""@en .
  ?shirley dbo:profession ?profession .
  
  ?award dbo:country ""United States"" ;
         dbo:settlementLocation ?settlement .
  ?settlement rdfs:label ?settlementLabel .
  FILTER(CONTAINS(?settlementLabel, ""New York"") && CONTAINS(LCASE(?settlementLabel), ""state"")) .

  ?recipient dbo:award ?award .
  ?recipient dbo:child ?child .
}",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor WHERE {
  # Find the commander of the Battle of Vienna
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Vienna (1683)""@en .

  # Find the successor of this commander
  OPTIONAL { 
    ?commander dbp:succeededBy ?successor .
  }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""american"") && CONTAINS(LCASE(?awardLabel), ""settlement""))
  
  ?coro dbo:nativePlace ?native .
  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .

  ?shirley dbo:profession ?profession .
  ?shirley rdfs:label ""Shirley Stoler""@en .
  
  ?award dbo:childOf ?coro .
  ?profession dbo:childOf ?shirley .
}",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?force ?birthplace WHERE {
  # Amasa Tracy's War
  ?tracy dbo:militaryService ?service .
  ?service dbo:conflict ?war .
  
  FILTER (STR(?tracy) = ""Amasa_Tracy"")

  # Quincy Adams Gillmore's Awardee Force
  ?gillmore dbo:award ?award .
  ?award dbo:recipient ?force .

  FILTER (STR(?gillmore) = ""Quincy_Adams_Gillmore"")

  # Deceased Person's Birthplace
  ?person dbo:dateOfDeath ?deathDate ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  FILTER (STR(?deathDate) = ""1850-08-05""^^xsd:date)

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Query for Sangeet Natak Akademi Fellowship Awardees' Birthplaces
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  ?awardee dbo:birthPlace ?birthPlace .
}

# Query for Actors in Indian Movies with Dipankar De's Birthplaces
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?movie dbo:country dbr:India ;
         dbo:actor ?actor .
  ?actor dbo:spouse* dbr:Dipankar_De .
  ?actor dbo:birthPlace ?birthPlace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query 1: Get the nickname of the Russia national football team
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbo:nickname ?nickname .
}

# Query 2: Find players associated with Aleksandr Filimonov's work
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?work dbo:author dbr:Aleksandr_Filimonov .
  ?work dbo:subject ?player .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?shadowReference WHERE {
  # Step 1: Identify The Shadow as Lamont Cranston's alter ego
  ?theShadow rdfs:label ""The Shadow""@en .
  
  # Step 2: Identify Yeshaq I and his parent Zara Yaqob
  ?yeshaqI dbo:parent ?zaraYaqob .
  ?zaraYaqob rdfs:label ""Zara Yaqob""@en .

  # Step 3: Find Dawit II, the father of Zara Yaqob
  ?dawitII dbo:child ?zaraYaqob .
  
  # Step 4: Connect The Shadow to this lineage (hypothetical connection)
  # This step assumes a fictional or metaphorical link in DBpedia
  ?shadowReference rdfs:label ""The Shadow""@en .
}
```",8,11,9,3,3,3,3,71,0,2,1,0.0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant WHERE {
  # Identify the Spanish Socialist Workers' Party
  ?psoe rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  # Find the tenant of its administration
  ?psoe dbo:leader ?tenant .

  # Identify Alberto Núñez Feijóo's office
  ?feijoo foaf:name ""Alberto Núñez Feijóo"" .
  ?feijoo dbo:office ?office .

  # Find a common entity that is a citizen of Spain and resides in a country
  ?tenant dbo:nationality dbr:Spain ;
          dbo:residence ?country .

  # Ensure the tenant fits both roles
  FILTER(?tenant = ?office)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalChild ?realName WHERE {
  # Step 1: Find Martin of Aragon's parent
  ?martin rdfs:label ""Martin of Aragon""@en .
  ?martin dbo:child ?parent .

  # Step 2: Find the father of that parent
  ?parent dbo:parent ?father .

  # Step 3: Identify royalty among the children of this paternal figure
  ?father dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild dbo:royalTitle ?title } .

  # Step 4: Get the real name of Peter IV of Aragon
  ?peter rdfs:label ""Peter IV of Aragon""@en .
  ?peter foaf:name ?realName .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?war ?athlete ?residence WHERE {
  # Maria I of Portugal's Commander
  ?maria rdfs:label ""Maria I of Portugal""@en .
  ?maria dbo:militaryCommander ?commander .

  # War as a Television Show and Military Conflict
  ?war rdf:type dbo:MilitaryConflict ;
       dbo:wikiPageRedirects ?tvShow .
  FILTER (strstarts(str(?tvShow), ""http://dbpedia.org/resource/"") && strcontains(str(?tvShow), ""_TV_series""))

  # Polish Athlete from Łódź and Their Residence
  ?athlete dbo:nationality dbc:Countries_of_Europe:Polska ;
           dbo:hometown ?lodz .
  ?lodz rdfs:label ""Łódź""@en .
  ?athlete dbo:residenceCountry ?residence .

  # Assuming the war is common to both Maria I's commander and the TV show
  FILTER (?commander = ?war)
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?territoryAdministeredFromDeathPlace ?mayor ?birthPlace WHERE {
  # Step 1: Identify Christian Ditlev Ammentorp Hansen and his death place
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .

  # Step 2: Verify if the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 3: Find territory administered from this settlement
  ?territoryAdministeredFromDeathPlace dbo:administers ?deathPlace .

  # Step 4: Identify mayor of Duchy of Schleswig
  ?mayor rdfs:label ?mayorLabel .
  FILTER(CONTAINS(LCASE(?mayorLabel), ""mayor of duchy of schleswig""))

  # Step 5: Identify Prince Christian and his birthplace
  ?prince rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  ?prince dbo:birthPlace ?birthPlace .

  # Step 6: Verify if",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?miguelParty ?miguelOffice ?madridLocation ?manuelConflict ?manuelOffice WHERE {
  ?miguel a dbo:Politician ;
          rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:party ?miguelParty .
  ?miguel dbo:office ?miguelOffice .
  OPTIONAL { ?miguelOffice dbo:location ?madridLocation . FILTER (str(?madridLocation) = ""Madrid"") }

  ?manuel a dbo:Politician ;
          rdfs:label ""Manuel Pinto da Costa""@en .
  ?manuel dbo:event ?manuelConflict .
  ?manuel dbo:office ?manuelOffice .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?birthplace WHERE {
  ?award rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""television show"")).
  
  ?awardee dbo:birthPlace ?birthplace .
  ?region rdfs:label ?timezoneLabel .
  ?birthplace dbo:timeZone ?region .
  FILTER(STRSTARTS(?timezoneLabel, ""Japan Standard Time""))
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Step 1 & 2: Find the movie associated with Ian Gregson's award
  ?ian a dbo:Person ;
       rdfs:label ""Ian Gregson (poet)""@en .
  
  ?award dbo:recipient ?ian ;
         dbo:subject ?movie .

  # Step 3: Identify Linda Bruckheimer's spouse
  ?linda a dbo:Person ;
         rdfs:label ""Linda Bruckheimer""@en ;
         dbp:birthdayYear ?birthYear .
  
  ?spouse dbo:spouse ?linda .

  # Step 4: Find the producer of the movie
  ?movie dbo:producer ?producer .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band WHERE {
  # Find The Shadow as a fictional character
  ?shadow dbo:creator ?walterB .
  ?walterB rdfs:label ""Walter B. Gibson""@en .
  
  # Check if Robert Bruce is associated with The Shadow
  ?robertBruce foaf:name ""Robert Bruce"" ;
               dbo:alias ?shadowAlias .
  ?shadowAlias rdfs:label ""The Shadow""@en .

  # Find bands associated with Robert Bruce (The Shadow)
  ?robertBruce dbo:band ?band .

  # Identify the producer of Coke Studio Philippines
  ?producer foaf:name ?producerName ;
            dbo:profession ?profession .
  ?cokeStudio dbo:producer ?producer .
  ?cokeStudio rdfs:label ""Coke Studio Philippines""@en .

  # Check if there is a band associated with both Robert Bruce and the producer's profession
  OPTIONAL { ?band dbo:member ?member . 
             ?member dbo:profession ?profession }
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band ?associatedArtist WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .
  
  OPTIONAL { 
    ?person dbo:bandMember ?band .
  }
  
  OPTIONAL {
    ?reference dbr:The_Fabulous_Thunderbirds ;
               dbo:associatedBandMember ?person .
  }

  OPTIONAL {
    ?persona rdfs:label ""Nick Curran""@en ;
             dbo:associatedMusicalArtist ?associatedArtist .
    
    ?associatedArtist dbo:alias ?person .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist WHERE {
  # Step 1: Find the producer of ""Lotus"" (R.E.M. song)
  ?lotusSong dbo:song ""Lotus""@en .
  ?lotusSong dbo:producer ?producer .

  # Step 2: Find associated musical artist with the producer
  ?producer dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Identify the album containing ""Sappy""
  ?sappySong dbo:song ""Sappy""@en .
  ?sappyAlbum dbo:album ""Sappy""@en .
  ?sappySong dbo:partOfAlbum ?sappyAlbum .

  # Step 4: Find the writer of that album
  ?sappyAlbum dbo:writer ?writer .

  # Step 5: Determine if these writers are band members
  ?writer dbo:bandMember ?bandMember .

  # Step 6: Find associated musical artist for this band member
  ?bandMember dbo:associatedMusicalArtist ?finalArtist .
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?war WHERE {
  ?awardee dbo:award ""Golden Sword for Bravery"" .
  OPTIONAL { ?awardee dbo:militaryService ?service . }
  OPTIONAL { ?service dbo:conflict ?war . }
}

SELECT ?awardee ?war WHERE {
  ?awardee dbo:award ""25th Entity Award"" .
  OPTIONAL { ?awardee dbo:militaryService ?service . }
  OPTIONAL { ?service dbo:conflict ?war . }
}

SELECT ?birthPlace WHERE {
  ?e dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
}

SELECT ?entity WHERE {
  ?birthPlace rdfs:label ""Birth Place Label""@en .
  ?birthPlace dbo",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"```sparql
# Step 1: Identify The Shadow's alter ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}

# Step 2: Find the actor for The Shadow
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:character ?alterEgo .
  ?movie dbp:starring ?actor .
}

# Step 3: Identify the author of Smartbomb (book)
SELECT ?author WHERE {
  ?smartbomb dbo:author ?author .
  ?smartbomb rdfs:label ""Smartbomb""@en .
}

# Step 4: Find a common movie featuring both the actor and the author
SELECT DISTINCT ?movie WHERE {
  ?movie dbp:starring ?actor .
  ?movie dbp:starring ?author .
}

# Step 5: Identify T.I.'s song that is also a musical work and its album
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?song dbo:lyricsBy dbr:T.I. ;
        dbo:partOfAlbum ?album .
  ?song rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""ti""))
}

# Step 6: Determine any actor involved in a related work
SELECT DISTINCT ?actor WHERE {
  ?relatedWork dbp:starring ?actor .
  ?relatedWork dbo:partOfAlbum ?album .
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  # Step 1: Identify Rodney Lees' award and its awardee
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Rodney Lees""@en .

  # Step 2: Find the parent of the awardee
  ?awardee dbo:parent ?parent1 .

  # Step 3: Identify a child of this parent who is a politician
  ?child1 dbo:parent ?parent1 .
  ?child1 rdf:type dbo:Politician .

  # Step 4: Find an alumnus of Eton College
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Eton_College> .

  # Step 5: Identify a child of Edward Stanley, 17th Earl of Derby who is a politician and office holder
  ?edwardStanley rdfs:label ""Edward Stanley",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?tenant WHERE {
  
  # Leader of the 2003 Madrid City Council Election
  ?madridLeader dbo:officeHolder dbp:election ""Madrid City Council election, 2003""@en .
  ?madridLeader dbo:residence ?residence1 .
  ?residence1 dbo:tenant ?tenant .
  
  # Commander during the Central African Republic Civil War
  ?commander dbo:officeHolder ?office2 ;
             rdfs:label ?labelCommander .
  FILTER(CONTAINS(LCASE(?labelCommander), ""central african republic civil war""))
  ?commander dbo:residence ?residence2 .
  ?residence2 dbo:tenant ?tenant .
  
  # Leader of Miguel Maura's Party
  ?mauraParty rdfs:label ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""miguel maura""))
  ?partyLeader dbo:leaderOf ?mauraParty ;
               dbo:officeHolder ?office3 .
  ?partyLeader dbo:residence ?residence3 .
  ?residence3 dbo:tenant ?tenant .
}",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalEntity WHERE {
  # Step 1: Identify Constance of Burgundy
  ?constance rdfs:label ""Constance of Burgundy""@en .
  
  # Step 2: Find her spouse
  ?constance dbo:spouse ?spouse .

  # Step 3: Child of the spouse
  ?spouse dbo:child ?child1 .

  # Step 4: Ensure child1 is royalty
  ?child1 dbo:royalty ?royalty1 .

  # Step 5: Father of the child (likely the spouse)
  ?father ?p ?child1 .
  
  # Step 6: Reference entity related to William I
  ?reference rdfs:label ?title ;
             dbo:officeHolder ?office ;
             dbo:royalty ?royalty2 .

  # Ensure reference is royalty and office holder
  FILTER EXISTS { ?reference dbo:relatedTo ""William I""@en }
  
  # Step 7: Child of the reference entity
  ?reference dbo:child ?child2 .
  ?child2 dbo:royalty ?royalty3 .

  # Step 8: Parent of child of Roger II of Sicily",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  ?quintana rdfs:label ""Anxo Quintana""@en .
  
  ?quintana dbo:officeHolder ?event .
  ?event dbo:memberOfParty ?party .
  
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  ?citizen foaf:nationality dbpedia:Spain ;
           dbo:residenceCountry ?country .
  
  ?tenant dbo:member ?citizen .
  ?tenant dbo:memberOfParty ?party .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  # Identify $pacely's real name and associated artist
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely dbo:associatedBand ?band1 .
  
  # Identify Joey B's real name and associated artist
  ?joeyb rdfs:label ""Joey B""@en .
  ?joeyb dbo:associatedBand ?band2 .

  # Identify Rod Argent's profession and associated artist
  ?rodargent rdfs:label ""Rod Argent""@en .
  ?rodargent dbo:profession dbr/Musician .
  ?rodargent dbo:associatedBand ?band3 .

  # Find common or notable artists among the bands
  OPTIONAL { ?band1 dbo:member ?artist . }
  OPTIONAL { ?band2 dbo:member ?artist . }
  OPTIONAL { ?band3 dbo:member ?artist . }

  FILTER(?artist != null)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
# Step 1: Find Coro de la Pontificia Universidad Católica de Puerto Rico
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?coro WHERE {
  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
}

# Step 2: Find awards associated with the coro
SELECT ?award WHERE {
  ?coro dbo:awardsReceived ?award .
}

# Step 3: Determine the native region of the award
SELECT DISTINCT ?nativePlace WHERE {
  ?award dbo:nativeCountry ?country .
  ?country rdfs:label ?nativePlace .
  FILTER (CONTAINS(LCASE(?nativePlace), ""state"") && CONTAINS(LCASE(?nativePlace), ""settlement""))
}

# Step 4: Find Bobby Shmurda's birth name
SELECT ?birthName WHERE {
  ?bobby foaf:name ""Bobby Shmurda""@en ;
          dbo:birthName ?birthName .
}

# Step 5: Find band members associated with Bobby Shmurda's birth name
SELECT DISTINCT ?bandMember WHERE {
  ?member foaf:name ?birthName .
  FILTER (?birthName = <URI of Bobby Shmurda's birth name>)
}

# Step 6: Identify GS9 and its members
SELECT ?gs9Member WHERE {
  ?gs9 dbo:member ?gs9Member .
  ?gs9 rdfs:label ""GS9""@en .
}

# Step 7: Determine the artist associated with GS9
SELECT DISTINCT ?artist WHERE {
  ?gs9Member dbo:associatedBand ?band ;
              dbo:associatedArtist ?artist .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find actors of ""Ab Kya Hoga""
  ?show dbo:title ""Ab Kya Hoga""@en .
  ?show dbo:castMember ?actor .

  # Check if the actor has acted with Richard E. Grant
  ?grantProject dbo:castMember <http://dbpedia.org/resource/Richard_E._Grant> .
  ?grantProject dbo:castMember ?actor .

  # Verify if the actor is also a politician
  ?actor dbo:occupation dbo:Politician .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePlace WHERE {
  ?award dbo:recipient ?awardee .
  ?awardee dbo:nativeCountry ""United States"" .
  ?awardee dbo:stateOrProvince ""New York"" .
  ?parent dbo:child ?awardee .
  ?parent dbp:profession ""Actress"" .
  ?award dbo:nativePlace ?nativePlace .
  ?nativePlace a dbo:Settlement .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?deathPlace ?commonWar WHERE {
  
  # Antonios Varthalitis's death place and check if it is a settlement
  ?varthalitis dbo:deathPlace ?deathPlace .
  FILTER (CONTAINS(LCASE(STR(?deathPlace)), 'antonios varthalitis'))
  OPTIONAL { ?deathPlace rdf:type dbo:Settlement . }
  
  # Wars associated with Konstantinos Ventiris
  ?ventiris dbo:war ?ventirisWar .
  FILTER (CONTAINS(LCASE(STR(?ventiris)), 'konstantinos ventiris'))
  
  # Leaders of the National Party of Greece and their wars
  ?leader dbo:partyLeaderOf <http://dbpedia.org/resource/National_Party_of_Greece> .
  ?leader dbo:war ?leaderWar .
  
  # Find common wars between Konstantinos Ventiris and leaders of the National Party of Greece
  FILTER (?ventirisWar = ?leaderWar)
  BIND(?ventirisWar AS ?commonWar)
  
  # Return the death place if it is a settlement
  FILTER EXISTS { ?deathPlace rdf:type dbo:Settlement . }
}
",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:award dbr:Medal_of_Honor ;
           dbo:award dbr:Gillmore_Medal .
  ?person dbo:birthPlace ?place .
  ?place a dbo:Settlement .
  ?place dbo:country dbr:United_States .
  BIND(?place AS ?settlement)
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?rulingPartyMember ?parentBirthName WHERE {
  # Find Roger Pryor (actor) and his spouse
  ?roger rdfs:label ""Roger Pryor""@en .
  ?roger dbo:profession dbr:Actor .
  ?roger dbo:spouse ?spouse .

  # Find landmark with specific elevation and ruling party member
  ?landmark a dbo:Lighthouse ;
            dbp:elevation ""20.116800000000001347""^^xsd:float .
  ?rulingPartyMember dbo:memberOf ?party ;
                     dbo:location ?landmark .
  
  # Identify Tisha Sterling's parent(s) and their birth names
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?parent dbo:child ?tisha ;
          rdfs:label ?birthName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist1, ?writerArtist WHERE {
  # Find associated musical artist of Stuart Mcbeath Tosh
  ?stuart a dbo:Person ;
          rdfs:label ""Stuart Mcbeath Tosh""@en .
  ?stuart dbo:associatedMusicalArtist ?associatedArtist1 .

  # Find writer of Wizards of Waverly Place (soundtrack) who is also a musical artist and an artist
  ?writer a dbo:Person ;
          dbp:writtenWork <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> ;
          dbo:musicalArtist true ;
          dbo:artist true .
  
  # Ensure the writer was a band member of The Alan Parsons Project
  ?bandMember a dbo:Person ;
              dbp:memberOf <http://dbpedia.org/resource/The_Alvin_Parsons_Project> .
  FILTER (?writer = ?bandMember)
  
  # Return the associated artist and the writer/artist
  BIND(?writer AS ?writerArtist)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?laurynHillBirthplace ?ethanIversonBirthplace WHERE {
  ?laurynHill rdfs:label ""Lauryn Hill""@en .
  ?laurynHill dbo:birthPlace ?laurynHillBirthplace .

  ?ethanIverson rdfs:label ""Ethan Iverson""@en .
  ?ethanIverson dbo:birthPlace ?ethanIversonBirthplace .
}
```",4,7,5,2,2,2,2,9,0,2,1,0.0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?richard dbo:birthName ""Richard Grant Esterhuysen""@en .
  ?richard dbo:profession dbr:Actor .
  ?show dbo:basedOn dbr:The_Shadow_(comics) .
  ?show dbo:genre dbr:Television_series .
  ?show dbo:actor ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?olafTerritory ?princeTerritory WHERE {
  
  # Christian Ditlev Ammentorp Hansen's death place
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .
  FILTER(isURI(?deathPlace) || isLiteral(?deathPlace))
  
  # Olaf I of Denmark's administered territory
  ?olaf rdfs:label ""Olaf I of Denmark""@en .
  ?olaf dbo:ruledTerritory ?olafTerritory .
  FILTER(isURI(?olafTerritory) || isLiteral(?olafTerritory))
  
  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck's administered territory
  ?prince rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  ?prince dbo:ruledTerritory ?princeTerritory .
  FILTER(isURI(?princeTerritory) || isLiteral(?princeTerritory))

}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Step 1: Find the producer of ""A Star Is Born"" (1937 film)
SELECT ?producer WHERE {
  ?film rdfs:label ""A Star Is Born""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)>)))
  ?film dbo:producer ?producer .
}

# Step 2: Find the actor of ""Johnny Doughboy""
SELECT ?actor WHERE {
  ?work rdfs:label ""Johnny Doughboy""@en .
  ?work dbo:actor ?actor .
}

# Step 3: Identify the alter ego of Kent Allard
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Kent Allard""@en .
  ?character dbo:alias ?alterEgo .
}

# Step 4: Find the claim to fame (work) of the actor from Johnny Doughboy
SELECT ?fameWork WHERE {
  ?actor dbo:film ?fameWork .
  FILTER(?actor IN (?actorFromJohnnyDoughboy))
}

# Step 5: Identify the producer of this notable work
SELECT ?producerOfFameWork WHERE {
  ?fameWork dbo:producer ?producerOfFameWork .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?officeLeader ?officeCommander ?officeTenant WHERE {
  
  # Part 1: Miguel Maura's party leader office
  { 
    ?miguel foaf:name ""Miguel Maura""@en .
    ?miguel dbo:member ?party .
    ?leader dbo:leader ?party .
    ?leader dbo:office ?officeLeader .
  }
  UNION
  
  # Part 2: Commander in Central African Republic Civil War office
  { 
    ?war dbo:name ""Central African Republic Civil War""@en .
    ?commander dbo:commander ?war .
    ?commander dbo:politician true .
    ?commander dbo:office ?officeCommander .
  }
  UNION
  
  # Part 3: Tenant of Alberto Ruiz-Gallardón's residence office
  { 
    ?alberto foaf:name ""Alberto Ruiz-Gallardón""@en .
    ?alberto dbo:residence ?residence .
    ?tenant dbo:resident ?residence .
    ?tenant dbo:office ?officeTenant .
  }
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?teamManager WHERE {
  ?manager a dbo:SportsManager ;
           dbo:birthDate ""1968-08-26""^^xsd:date ;
           dbo:nationality dbc:Countries_of_the_World/West_Germany .
  
  ?player dbo:managedBy ?manager ;
          dbo:playsFor ?team .

  ?team dbp:succeededBy ?successorTeam .
  FILTER(?successorTeam = <http://dbpedia.org/resource/2007%E2%80%9308_VfL_Bochum_season>)

  ?teamManager dbo:manages ?team .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Identify The Shadow's alter ego
  ?shadowAlterEgo rdfs:label ""The Shadow""@en .
  ?shadowAlterEgo dbo:alterEgo ?alterEgo .

  # Step 2: Find Cora Sue Collins' claim to fame and its producer
  ?collinsWork rdfs:label ?collinsFameLabel .
  ?collinsWork dbo:author ""Cora Sue Collins""@en .
  ?collinsWork dbo:producer ?producerCollins .

  # Step 3: Identify the actor of ""High Society Blues"" and their claim to fame's producer
  ?actor rdfs:label ?actorName .
  ?actor dbo:actorIn ?highSocietyBlues .
  ?highSocietyBlues rdfs:label ""High Society Blues""@en .
  
  ?actorFameWork rdfs:label ?actorFameLabel .
  ?actorFameWork dbo:actor ?actor .
  ?actorFameWork dbo:producer ?producerActor .

  # Step 4: Find the common professional link
  FILTER (?alterEgo = ?professional || ?producerCollins = ?professional || ?producerActor = ?professional)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?lasso rdfs:label ""Lasso the Moon""@en .
  ?lasso a dbo:Film ; dbo:workType ?type .
  FILTER(?type IN (dbo:Film, dbo:Work))
  ?lasso dbo:actor ?actor .

  ?frederic rdfs:label ""Frédéric Bouraly""@en .
  ?frederic dbo:profession ?profession .
  ?actor dbo:profession ?actorProfession .
  FILTER(?actorProfession = ?profession)
}",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?triple_x ?war WHERE {
  ?triple_x rdfs:label ""The Triple X's""@en .
  ?triple_x dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
  BIND(?event AS ?war)
}

SELECT ?bayne ?war WHERE {
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
  BIND(?event AS ?war)
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthCountry ?institution WHERE {
  # Part 1: Find Little Hat Jones' birthplace that is a country
  ?littleHatJones rdfs:label ""Little Hat Jones""@en .
  ?littleHatJones dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  BIND(?birthPlace AS ?birthCountry)

  # Part 2: Find an institution in the administration of Brian Kemp
  ?brianKemp rdfs:label ""Brian Kemp""@en .
  ?brianKemp dbo:office ?office .
  ?office dbo:head ?institution .
}
```",4,5,5,2,2,2,2,9,0,0,346,0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonBand WHERE {
  # Identify Stuart McBeath Tosh and his band membership
  ?stuart rdfs:label ""Stuart McBeath Tosh""@en .
  ?stuart dbo:bandMember ?band1 .

  # Identify the associated musical artist for David Paton
  ?david rdfs:label ""David Paton""@en .
  ?david dbo:bandMember ?band2 .

  # Identify the associated musical artist for Billy Lyall
  ?billy rdfs:label ""Billy Lyall""@en .
  ?billy dbo:bandMember ?band3 .

  # Find a common band among them
  FILTER (?band1 = ?commonBand && ?band2 = ?commonBand && ?band3 = ?commonBand)
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
# Query for Maria I of Portugal's Commander
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?maria rdfs:label ""Maria I of Portugal""@en .
  ?war dbo:commander ?commander .
  ?maria dbo:involvedInWar ?war .
}

# Query for the Television Show ""The Force""
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?force rdfs:label ""The Force""@en .
}

# Query for Dawid Olejniczak's Residence
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?dawid rdfs:label ""Dawid Olejniczak""@en .
  ?dawid dbo:residence ?location .
  ?location dbo:country ?country .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  # Step 1: Find a child of Béla IV who is royalty
  ?belav dbp:father ""Béla IV of Hungary""@en .
  ?belav dbo:royalTitle ?title .

  # Step 2: Identify Philip I, Prince of Taranto and his father's spouse
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philip dbp:father ?philipsFather .
  ?philipsFather dbo:spouse ?fathersSpouse .

  # Step 3: Find Maria of Bytom's spouse and their parent who is royalty
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?mariasSpouse .
  ?mariasSpouse dbo:parent ?royalParent .
  ?royalParent dbo:royalTitle ?parentTitle .

  # Step 4: Connect the child of Béla IV to the spouse's parent
  ?belavChild dbp:child ?childOfChild .
  ?childOfChild dbo:spouse ?fathersSpouse .
  ?childOfChild dbo:parent ?royalParent .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Part 1: Saw Min Phyu's spouse and their child
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  ?sawMinPhyu dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  
  # Ensure the child is royalty and find predecessor
  ?child",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?theme WHERE {
  ?lhr dbo:nickname ?nickname .
  FILTER (
    ?nickname IN (""The Heart of Pakistan"", ""Paris of the East"", ""City of Gardens"", ""City of Literature"")
  )
  
  OPTIONAL { 
    ?lhr dbp:relatedPerson ?person .
    ?person rdfs:label ""Anumta Qureshi""@en .
  }
  
  ?lhr dbo:wikiPageWikiLink ?theme .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?parent dbo:child ?dorothea .
  ?parent dbo:father ?father .

  ?father dbo:commanderIn ?siege .
  FILTER(CONTAINS(LCASE(STR(?siege)), ""padua""))

  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  ?father dbo:child ?catherine .

  ?father a dbo:Monarch .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild ?predecessor ?sibling WHERE {
  
  # Step 1: Find the child of Duke Philipp of Württemberg
  ?philipp dbo:title ""Duke of Württemberg""@en .
  ?philipp rdfs:label ""Philipp of Württemberg""@en .
  ?philipp dbo:child ?child1 .
  
  # Step 2: Find the grandchild (child of that child)
  ?child1 dbo:child ?grandchild .
  
  # Step 3: Identify the predecessor of the child of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht dbo:title ""Duke of Württemberg""@en .
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?philippAlbrecht dbo:child ?child2 .
  
  # Assuming predecessor means the previous title holder or parent
  OPTIONAL { ?predecessor dbo:title ""Duke of Württemberg""@en .
              ?predecessor dbo:child ?child2 . }
  
  # Step 4: Find the parent of Archduchess Margarete Sophie of Austria
  ?margareteSophie rdfs:label ""Margarete Sophie of Austria""@en .
  ?parent dbo:child ?margareteSophie .
  
  # Step 5: Find the sibling (child of that parent)
  ?parent dbo:child ?sibling .
  FILTER(?sibling != ?margareteSophie) .
  
  # Step 6: Combine relationships
  FILTER(?grandchild = ?predecessor && ?grandchild = ?sibling) .
  
  # Ensure the entity is royalty
  ?grandchild dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""royalty"")) .
}
",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Sandro Bertaggia's birthplace
  ?sandro dbo:birthPlace ?birthPlace .
  FILTER (strstarts(str(?birthPlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?birthPlace a dbo:Country }).

  # Step 2: Find persons decedent at Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?birthPlace .
  
  # Step 3: Identify Nicholas II of Russia's administration country
  ?nicholas dbp:countryAdministered ?adminCountry .
  FILTER (strstarts(str(?adminCountry), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?adminCountry a dbo:Country }).

  # Step 4: Find persons native to both Grand Duchy of Finland and Nicholas II's administration country
  ?person dbo:nationality [
    VALUES ?nationality {
      dbc:Grand_Duchy_of_Finland
      ?adminCountry
    }
  ].
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childPeterIV (GROUP_CONCAT(?labelAlfonsoIV; separator="", "") AS ?childrenAlfonsoIV) WHERE {
  # Part 1: Find the child of Peter IV of Aragon who is royalty
  ?peterIV rdfs:label ""Peter IV of Aragon""@en .
  ?peterIV dbo:child ?childPeterIV .
  
  # Assuming royalty can be inferred from context or specific labels
  OPTIONAL { ?childPeterIV rdfs:label ?labelChildPeterIV . }

  # Part 2: Find the real name of the child of Alfonso IV of Aragon who is royalty
  ?alfonsoIV rdfs:label ""Alfonso IV of Aragon""@en .
  ?alfonsoIV dbo:child ?childAlfonsoIV .
  
  OPTIONAL { ?childAlfonsoIV rdfs:label ?labelAlfonsoIV . }
}
```",5,7,6,3,2,3,2,20,0,10,3,0.0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildFather WHERE {
  
  # Step 1: Identify Alfonso VI's child
  ?alfonso dbo:child ?alfonsoChild .
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  
  # Step 2: Find the grandchild (child of the child)
  ?alfonsoChild dbo:child ?grandchild .
  
  # Step 3: Determine the father of this grandchild who is royalty
  ?grandchild dbo:parent ?father .
  ?father dbo:royalty true .
  
  # Step 4: Identify a reference that is both royalty and an office holder related to William I
  ?reference dbo:relatedTo ?williamI .
  ?williamI rdfs:label ""William I""@en .
  ?reference dbo:royalty true .
  ?reference dbo:officeHolder true .
  
  # Step 5: Find Roger III, Duke of Apulia's parent
  ?rogerIII dbo:parent ?rogerParent .
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  
  # Step 6: Combine these relationships
  FILTER(?father = ?reference)
  FILTER(?grandchildFather = ?father)
  
  BIND(?father AS ?grandchildFather)
}
",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?band WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alias ?alterEgo .
  OPTIONAL { ?alterEgo dbo:member ?band . }
}

SELECT ?profession WHERE {
  ?robert rdfs:label ""Robert Lamar Thompson""@en .
  ?robert dbo:profession ?profession .
}

SELECT ?producer ?profession WHERE {
  ?cokeStudio rdfs:label ""Coke Studio Philippines""@en .
  ?cokeStudio dbo:producer ?producer .
  ?producer dbo:profession ?profession .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query for Eric Clapton's Band(s)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?clapton dbo:band ?band .
}

# Query for Real Name of The Fabulous Thunderbirds
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:alias ?realName .
}

# Query for Associated Musical Artist of Nick Curran
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?curran rdfs:label ""Nick Curran""@en .
  ?curran dbo:birthPlace ?place .
  ?curran dbo:associatedBand ?band .
  ?band dbo:musicalArtist ?artist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office ?tenant ?residence WHERE {
  # Anxo Quintana's office
  ?quintana dbo:givenName ""Anxo""@en .
  ?quintana dbo:familyName ""Quintana""@en .
  ?quintana dbo:office ?office .

  # Tenant of the administration
  ?tenant dbo:nationality dbr:Spain .
  ?tenant dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?office dbo:member ?tenant .

  # Álvaro Quirós's residence
  ?quirós dbo:givenName ""Álvaro""@en .
  ?quirós dbo:familyName ""Quirós""@en .
  ?quirós dbo:residence ?residence .
  
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAuthor WHERE {
  # Joe Biden's authored works
  ?biden rdfs:label ""Joe Biden""@en .
  ?work1 dbo:author ?biden ;
         a dbo:Book .

  # Commander of North Carolina Air National Guard
  ?commander dbo:officeHolder ?office ;
             dbo:politician true ;
             dbo:nationality dbr:United_States ;
             rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""north carolina air national guard"") && CONTAINS(LCASE(?label), ""commander""))
  
  ?work2 dbo:author ?commander ;
         a dbo:Book .

  # Find common author
  ?commonAuthor dbo:author ?biden, ?commander .
}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAthens WHERE {
  # Find leader of National Party of Greece and their wars
  ?leader dbo:partyLeader dbp:National_Party_of_Greece .
  ?leader dbo:participatedInWar ?war1 .

  # Find awardee of 30 and their wars
  ?awardee dbo:award ?award .
  FILTER (str(?award) = ""Award_30"") # Assuming a placeholder for the actual award URI or label
  ?awardee dbo:participatedInWar ?war2 .

  # Find entity in Athens related to both wars
  ?entityInAthens dbo:location dbp:Athens .
  FILTER (?war1 = ?war2) # Ensuring the same war is involved for both individuals

  OPTIONAL { ?entityInAthens rdfs:label ?label . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child dbo:childOf ?sawShweKhet .
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?parent dbo:parentOf ?minHlaHtut .
  ?predecessor dbo:predecessor ?child .
  ?predecessorChild dbo:childOf ?parent .
  ?father dbo:fatherOf ?predecessorChild .
  ?spouse dbo:spouse ?father .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Actor of ""Rustlers' Rhapsody""
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .

  UNION

  # Alter ego of The Shadow
  ?character rdfs:label ""The Shadow""@en .
  ?adaptation dbo:basedOn ?character .
  ?adaptation dbo:starring ?actor .

  UNION

  # Profession of Frédéric Bouraly
  ?person rdfs:label ""Frédéric Bouraly""@en .
  ?person dbo:profession ?actor .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
# Query to find the writer of ""Always the Love Songs""
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?writer WHERE {
  ?tvshow rdfs:label ""Always the Love Songs""@en .
  ?tvshow dbo:writer ?writer .
}

# Query to find a commander in the Battle of Vienna and successor in Russo-Polish War
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?commander WHERE {
  ?battle rdfs:label ""Battle of Vienna""@en .
  ?battle dbo:commander ?commander .
  
  OPTIONAL {
    ?war rdfs:label ""Russo-Polish War (1654–1667)""@en .
    ?officeHolder dbo:succeededBy ?commander ;
                  a dbo:OfficeHolder .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Find the tenant of Santiago de Compostela
  ?santiago rdfs:label ""Santiago de Compostela""@en .
  ?santiago dbo:tenant ?tenant .

  # Find a Spanish citizen's residence country
  ?person dbo:nationality dbc:Citizens_of_Spain ;
          foaf:based_near ?residenceCountry .
  
  # Find Anxo Quintana's office event
  ?anxo rdfs:label ""Anxo Quintana""@en .
  ?anxo dbo:office ?event .

  # Ensure the tenant or residence country is common
  FILTER (?tenant = ?residenceCountry || ?tenant = ?event)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Identify Myat Hpone Pyo's predecessor
  ?myathponepyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myathponepyo dbo:predecessor ?predecessor .

  # Step 2: Find Minye Kyawswa's child
  ?minyekyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyekyawswa dbo:child ?child1 .

  # Step 3: Determine the parent of Minye Kyawswa's child
  ?child1 dbo:parent ?parentOfChild1 .

  # Step 4: Identify Saw Shwe Khet's royal child
  ?sawswekhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawswekhet dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }

  # Step 5: Find the father of Saw Shwe Khet's royal child
  ?royalChild dbo:father ?fatherOfRoyalChild .

  # Step 6: Determine the spouse of the father identified in step 5
  ?fatherOfRoyalChild dbo:spouse ?spouse .

  # Combine all steps to find the predecessor that matches all criteria
  FILTER (?predecessor = ?parentOfChild1 && ?predecessor = ?spouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query 1: Find the author of ""Back to Work""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Back to Work""@en .
  ?book dbo:author ?author .
}

# Query 2: Find the commander in a war that is both a disease and societal event
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?war dbo:type ?type1, ?type2 .
  FILTER (?type1 = dbo:Disease && ?type2 = dbo:SocietalEvent)
  ?war dbo:commander ?commander .
}

# Query 3: Find the owner of USS Arcadia (ID-1605)
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?owner WHERE {
  ?ship rdfs:label ""USS Arcadia (ID-1605)""@en .
  ?ship dbo:owner ?owner .
}

# Query 4: Find the spouse of a politician and office holder who authored a book
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person dbo:author ?book .
  ?person dbo:officeHolder true .
  ?person dbo:spouse ?spouse .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Constance of Burgundy's lineage
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouse1 .
  ?spouse1 dbo:child ?child1 .
  ?child1 dbo:child ?grandchild1 .

  # Roger II of Sicily's lineage
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?roger dbo:parent ?parent2 .
  ?parent2 dbo:child ?siblingOrChild2 .
  ?siblingOrChild2 dbo:child ?grandnieceNephew2 .

  # Common individual who is royalty and fits both lineages
  FILTER (?grandchild1 = ?commonIndividual && ?grandnieceNephew2 = ?commonIndividual)
  
  # Additional condition: Father of William II of Sicily
  ?commonIndividual dbo:child ?williamII .
  ?williamII rdfs:label ""William II of Sicily""@en .

  # Ensure the common individual is royalty
  ?commonIndividual a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?scientist WHERE {
  ?yandamuri rdfs:label ""Yandamuri Veerendranath""@en .
  ?yandamuri dbo:birthPlace ?birthplace .
  
  ?awardee dbo:award ""Australian Laureate Fellowship""@en .
  ?awardee dbo:almaMater ?almaMater .
  FILTER(?almaMater = ?birthplace)
  
  ?scientist rdfs:label ?name .
  ?scientist dbo:nationality dbr:Australia .
  ?scientist a dbo:Scientist .
  FILTER(?scientist = ?awardee)
}",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  # Sal Mineo's death place
  { 
    ?salMineo rdfs:label ""Sal Mineo""@en .
    ?salMineo dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  # Actor of ""The Sky Ranger"" (1928 film)
  { 
    ?film dbp:title ""The Sky Ranger""@en ;
          dbp:year ""1928""^^xsd:gYear ;
          dbo:actor ?actor .
    ?actor rdfs:label ?actorLabel .
    ?actor dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  # Actor of ""Color Me Dead""
  { 
    ?film2 dbp:title ""Color Me Dead""@en ;
           dbo:actor ?actor2 .
    ?actor2 rdfs:label ?actor2Label .
    ?actor2 dbo:deathPlace ?deathPlace .
  }
}
```",5,5,6,2,3,2,3,28,1,0,0,1.0,1.0,1.0
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?doonParent ?actor ?actorParent WHERE {
  # Find Doon Arbus's parent
  ?doon a dbo:Person ;
        rdfs:label ""Doon Arbus""@en .
  OPTIONAL { ?doon dbo:parent ?doonParent . }

  # Find Eugène Cattin's profession and related actor
  ?eugene a dbo:Person ;
          rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:profession ?profession .

  ?movie dbo:starring ?actor ;
         rdf:type dbo:Film .
  ?actor dbo:profession ?sameProfession .
  FILTER(?sameProfession = ?profession)

  # Find the decedent at Los Angeles
  OPTIONAL { 
    ?decedent dbo:deathPlace ?place .
    ?place rdfs:label ""Los Angeles""@en .
    ?movie dbo:starring ?decedent .
  }

  # Find actor's parent
  OPTIONAL { ?actor dbo:parent ?actorParent . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:parent ?frederick .
  ?grandchild dbo:parent ?child .
  ?awardee dbo:award ""Commander of the Royal Victorian Order""@en ;
            dbo:parent ?grandchild .
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/Eton_College> ;
            dbo:parent ?child .
  ?politicianChild dbo:parent ?alumnus ;
                   dbo:occupation ""Politician""@en .
  ?father dbo:spouseOrPartner ?alumnus ;
          dbo:child ?politicianChild .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalEntity WHERE {
  # Step 1: Identify Duchess Luise of Brunswick-Wolfenbüttel
  ?luise rdfs:label ""Luise of Brunswick-Wolfenbüttel""@en .
  
  # Step 2: Find her spouse
  ?luise dbo:spouse ?firstSpouse .

  # Step 3: Find the spouse's spouse (second spouse)
  ?firstSpouse dbo:spouse ?secondSpouse .

  # Step 4: Identify a child of the second spouse
  ?secondSpouse dbo:child ?childOfSecondSpouse .

  # Step 5: Find the parent of this child and ensure they are royalty
  ?childOfSecondSpouse dbo:parent ?royalParent .
  ?royalParent dbo:royalTitle ?title .

  # Step 6: Identify a child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?ferdinandChild dbo:child [
    rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en .
  ] .

  # Step 7: Ensure the parent is also the parent of this child
  ?royalParent dbo:parent ?ferdinandChild .

  # Final entity to be returned
  BIND(?royalParent AS ?finalEntity)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalChild WHERE {
  # Step 1: Identify the commander in the Siege of Mukha
  ?commander dbo:event ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .

  # Step 2: Find the parent (royalty) of this commander
  ?parent dbo:child ?commander .
  ?parent a dbo:Monarch .

  # Step 3: Identify the child of Baeda Maryam I
  ?baedaChild dbo:parent ?baedaMaryamI .
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .

  # Step 4: Find the father (royalty and office holder) of this child's parent
  ?childParent dbo:child ?baedaChild .
  ?father dbo:parent ?childParent .
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Step 5: Determine the child of the commander's parent
  ?finalChild dbo:parent ?parent .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Find Allan Arbus's child
  ?allanArbus rdfs:label ""Allan Arbus""@en .
  ?child dbo:childOf ?allanArbus .

  # Find the parent of Allan Arbus's child
  ?child dbo:parent ?parent1 .

  # Identify Eugène Cattin's profession
  ?eugeneCattin rdfs:label ""Eugène Cattin""@en .
  ?eugeneCattin dbo:profession ?profession .

  # Find a person in Eugène Cattin's profession
  ?person dbo:profession ?profession .

  # Find the parent of that person
  ?person dbo:parent ?parent2 .

  # Identify Herschel Bernardi's movies
  ?herchelBernardi rdfs:label ""Herschel Bernardi""@en .
  ?movie dbo:actor ?herchelBernardi ;
         dbo:actor ?otherActor .

  # Find other actors in the same movie
  ?otherActor dbo:parent ?parent3 .

  # Combine information to find",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?spouse .
}
```",7,16,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # Janet Gaynor's claim to fame
  ?janet rdfs:label ""Janet Gaynor""@en .
  ?janet dbo:film ?movie .
  ?movie dbo:director ?producer .

  UNION

  # The Shadow's alter ego and producer of Johnny Doughboy's actor's work
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbp:alterEgo ?alterEgo .
  
  ?actor rdfs:label ?alterEgoLabel .
  FILTER (CONTAINS(LCASE(?alterEgoLabel), LCASE(?alterEgo)))
  
  ?actor dbo:film ?johnnyMovie .
  ?johnnyMovie dbo:director ?producer .

  # Johnny Doughboy's actor
  ?johnny rdfs:label ""Johnny Doughboy""@en .
  ?johnny dbo:actor ?actor .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?film ?deathPlace WHERE {
  # Actor of ""The Sky Ranger"" (1928)
  { 
    ?film dbp:title ""The Sky Ranger""@en .
    ?film dbo:releaseYear ""1928""^^xsd:gYear .
    ?film dbo:castMember ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace }
  }

  # Actor of ""Aladdin"" (1958)
  UNION
  {
    ?film dbp:title ""Aladdin""@en .
    ?film dbo:releaseYear ""1958""^^xsd:gYear .
    ?film dbo:castMember ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace }
  }

  # Carolyn Jones
  UNION
  {
    ?person rdfs:label ""Carolyn Jones""@en .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace }
  }
}
```",5,5,6,2,3,2,3,28,1,0,0,1.0,1.0,1.0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?stephenV dbo:predecessor ?predecessor .
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .

  # Step 2: Identify Philip, Despot of Romania's parent who is a royalty
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  ?philip dbo:parent ?royalParent .
  ?royalParent rdf:type dbo:Monarch .

  # Find the father of that royal parent and his spouse
  ?royalParent dbo:father ?grandFather .
  ?grandFather dbo:spouse ?spouse .

  # Step 3: Identify Charles Martel of Anjou's parent who is a royalty
  ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
  ?charlesMartel dbo:parent ?royalParentCM .

  # Step 4: Find the child of the child (that is a royalty) of the predecessor
  ?predecessor dbo:child ?child1 .
  ?child1 dbo:child ?child2 .
  ?child2 rdf:type dbo:Monarch .

  # Combine to find common entity
  FILTER (?spouse =",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?author ?spouse ?commander WHERE {
  # Find the book and its author
  ?book rdfs:label ""An Invitation to the White House""@en .
  ?book dbo:author ?author .
  
  # Ensure the author is Bill Clinton
  FILTER(?author = <http://dbpedia.org/resource/Bill_Clinton>)
  
  # Find Bill Clinton's spouse who is a politician and office holder
  ?bill dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician .
  ?spouse dbo:officeHolder true .
  FILTER(?bill = <http://dbpedia.org/resource/Bill_Clinton>)
  
  # Find the commander related to USS Arcadia in a war context
  ?arcadia dbo:owner ?owner .
  ?arcadia dbo:commander ?commander .
  FILTER(?arcadia = <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)>)
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?christianIXAdmin ?hansenDeathPlace ?adminFromHansenPlace ?mayorRole WHERE {
  # Christian IX of Denmark's administration
  ?christianIX dbo:ruledTerritory ?christianIXAdmin .

  # Christian Ditlev Ammentorp Hansen's death place
  ?hansen dbo:deathPlace ?deathPlace .
  FILTER (STRSTARTS(STR(?deathPlace), ""http://dbpedia.org/resource/""))
  ?deathPlace rdf:type dbo:Settlement .
  
  # Territory administered from Hansen's death place
  OPTIONAL {
    ?adminFromHansenPlace dbo:administrativeCenter ?deathPlace .
  }

  # Mayor of Duchy of Schleswig and their administration
  ?mayor dbo:officeHolderOf ?duchySchleswig .
  FILTER (STRSTARTS(STR(?duchySchleswig), ""http://dbpedia.org/resource/Duchy_of_Schleswig""))
  ?mayorRole dbo:role ?mayor .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Maria of Bytom and her spouse
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?mariaspouse .
  
  # Step 2: Find the parent of Maria's spouse who is a royalty
  ?mariaspouse dbo:parent ?royalParent1 .
  ?royalParent1 rdf:type ?type1 .
  FILTER(CONTAINS(LCASE(STR(?type1)), ""king"") || CONTAINS(LCASE(STR(?type1)), ""queen""))
  
  # Step 3: Identify Philip, Despot of Romania and his royal parent
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  ?philip dbo:parent ?royalParent2 .
  ?royalParent2 rdf:type ?type2 .
  FILTER(CONTAINS(LCASE(STR(?type2)), ""king"") || CONTAINS(LCASE(STR(?type2)), ""queen""))
  
  # Step 4: Find the common ancestor (father) of these two royal parents
  ?royalParent1 dbo:parent ?commonAncestor .
  ?royalParent2 dbo:parent ?commonAncestor .
  ?commonAncestor rdf:type ?type3 .
  FILTER(CONTAINS(LCASE(STR(?type3)), ""king"") || CONTAINS(LCASE(STR(?type3)), ""queen""))
  
  # Step 5: Identify the spouse of this common ancestor
  ?commonAncestor dbo:spouse ?spouse .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  # Find the alter ego of Kent Allard in print media
  ?kentAllard rdfs:label ""Kent Allard""@en .
  ?kentAllard dbo:alterEgo ?alterEgo .

  # Find the work associated with Cora Sue Collins
  ?coraSueCollins rdfs:label ""Cora Sue Collins""@en .
  ?coraSueCollins dbo:work ?collinsWork .

  # Find the film associated with Janet Gaynor
  ?janetGaynor rdfs:label ""Janet Gaynor""@en .
  ?janetGaynor dbo:film ?gaynorFilm .

  FILTER(?alterEgo = ?collinsWork && ?alterEgo = ?gaynorFilm)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  
  # Step 1: Retrieve Tony Hollings' birthdate
  ?tony rdfs:label ""Tony Hollings""@en .
  ?tony dbo:birthDate ?birthday .
  
  # Step 2: Find sports managers and soccer managers of the Hong Kong C Team
  ?manager a dbo:SoccerManager ;
           dbo:managedTeam ?team .
  ?team rdfs:label ""Hong Kong C Team""@en .
  BIND(?manager AS ?sportsManager)
  
  # Step 3: Find individuals who are athletes, soccer players, sports managers, and soccer managers born on Tony Hollings' birthday
  ?person a dbo:Athlete , dbo:SoccerPlayer , dbo:SportsManager , dbo:SoccerManager ;
          dbo:birthDate ?birthday .
  BIND(?person AS ?athlete)
  
  # Step 4: Find common entities between the two groups
  FILTER (?sportsManager = ?athlete)
  BIND(?sportsManager AS ?commonEntity)
}",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?producer ?band ?artist ?profession WHERE {
  # Step 1: Find Bob Thompson's birth name
  ?bob a dbo:Musician ;
       rdfs:label ""Bob Thompson (musician)""@en .
  
  ?bob dbo:birthName ?birthName .

  # Step 2: Identify the producer of Coke Studio Philippines and their band
  ?producer a dbo:Person ;
            dbo:occupation dbo:Producer ;
            dbo:producedByCokeStudioPhilippines ?csph .

  ?producer dbo:band ?band .

  # Step 3: Find any musical artist with the same birth name as Bob Thompson
  ?artist a dbo:MusicalArtist ;
          dbo:birthName ?birthName .
  
  ?artist dbo:profession ?profession .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  
  # Step 2: Find Philip's parent who is a royalty
  ?parent dbo:child ?philip .
  ?parent rdf:type dbo:Monarch .
  
  # Step 3: Determine the father of Philip's royal parent
  ?grandfather dbo:spouse ?parent .
  
  # Step 4: Identify Béla IV of Hungary's child who is a royalty
  ?belavChild dbo:child ?belaIV .
  ?belaIV rdfs:label ""Béla IV of Hungary""@en .
  ?belavChild rdf:type dbo:Monarch .
  
  # Step 5: Find the parent of Béla IV's royal child
  ?parentBelavChild dbo:child ?belavChild .
  
  # Step 6: Determine Charles I of Hungary's father who is a royalty
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?fatherCharlesI dbo:spouse ?parentBelavChild .
  
  # Step 7: Identify the spouse of the grandfather (father from step 3)
  ?grandfather dbo:spouse ?spouse .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?host WHERE {
  ?weiss rdfs:label ""Rainer Weiss""@en .
  ?weiss dbo:award ?award .
  ?award rdf:type dbo:NobelPrizeInPhysics .
  ?award dbo:hostedBy ?host .
  ?host rdf:type dbo:EducationalOrganization .
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Henry Clay Lewis's birthplace
  ?henry a dbo:Person ;
         rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbp:country ""United States"" .

  # Awardee of the award given by United States Congress
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  FILTER(CONTAINS(?awardLabel, ""Congress"")) .
  ?recipient dbo:recipient ?award .

  # Awardee of Gillmore Medal and their military force
  ?gillmoreAward a dbo:Award ;
                 rdfs:label ""Gillmore Medal""@en .
  ?gillmoreRecipient dbo:recipient ?gillmoreAward .
  ?gillmoreRecipient dbo:militaryForce ?force .

  # Find common entity
  FILTER(?birthPlace = ?entity)
  OPTIONAL { ?recipient dbo:militaryForce ?force }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?office ?work WHERE {
  # Find Michał Kazimierz Pac's role in the Great Turkish War
  ?pac a dbo:MilitaryPerson ;
       rdfs:label ""Michał Kazimierz Pac""@en ;
       dbo:commanderOf ?war .
  
  # Ensure the war is the Great Turkish War
  ?war rdfs:label ""Great Turkish War""@en .

  # Find his successor
  ?pac dbo:succeededBy ?successor .

  # Check if the successor is a politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolder ?office .

  # Reference to George Ducas' work
  ?ducas a dbo:Writer ;
         rdfs:label ""George Ducas""@en .
  
  ?work dbo:author ?ducas ;
        dbo:referenceTo ?pac ; # or ?successor if applicable

  FILTER (lang(?office) = 'en')
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leaderResidence ?award WHERE {
  # Part 1: Residence of the leader of Ulster Unionist Party
  ?leader dbo:position ""Leader""@en ;
          dbo:party <http://dbpedia.org/resource/Ulster_Unionist_Party> .
  OPTIONAL { ?leader dbo:residence ?leaderResidence . }

  # Part 2: Award associated with George Hamilton Cameron
  ?person rdfs:label ""George Hamilton Cameron""@en .
  ?person dbo:honoursReceived ?award .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Part 1: Find a musical artist sharing profession and band with Sam Concepcion
SELECT DISTINCT ?artist WHERE {
  # Identify Sam Concepcion's profession and band
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession ;
       dbo:bandMember ?band .

  # Find another musical artist with the same profession and band
  ?artist a dbo:MusicalArtist ;
          dbo:profession ?profession ;
          dbo:bandMember ?band .
}

# Part 2: Find fictional character created by Walter B. Gibson with an alter ego
SELECT DISTINCT ?character WHERE {
  # Identify fictional characters created by Walter B. Gibson
  ?gibson rdfs:label ""Walter B. Gibson""@en .
  ?character dbo:creator ?gibson ;
             a dbo:FictionalCharacter .

  # Find the character with an alter ego
  ?character dbo:alterEgo ?alterEgo .
}
```",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonEntity WHERE {
  # Step 1: Identify Roger III, Duke of Apulia
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  
  # Step 2: Find his parent
  ?parent dbo:child ?rogerIII .

  # Step 3: Identify Constance of Burgundy and her spouse
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?spouse dbo:spouse ?constance .

  # Step 4: Find the child of Constance's spouse
  ?childOfSpouse dbo:parent ?spouse .

  # Step 5: Identify William I of Sicily and his child
  ?williamI rdfs:label ""William I of Sicily""@en .
  ?childOfWilliam dbo:parent ?williamI .

  # Step 6: Find the common entity
  ?commonEntity dbo:parent ?parent .
  ?commonEntity dbo:royalty true .
  ?commonEntity dbo:father ?childOfWilliam .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?psoeLeader dbo:leaderOf dbr:Galician_Regional_Election_2009 ;
              dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  ?alvaroQuirós rdfs:label ""Álvaro Quirós""@en ;
                dbo:office ?psoeLeader .

  ?alvaroQuirós dbo:residence ?country .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalEntity WHERE {
  # Step 1: Identify Yeshaq I's parent who is royalty
  ?yeshaqI rdfs:label ""Yeshaq I""@en .
  ?yeshaqI dbo:parent ?parent .
  ?parent dbo:royalty true .

  # Step 2: Find the child of Yeshaq I's parent who is royalty
  ?parent dbo:child ?childOfParent .
  ?childOfParent dbo:royalty true .

  # Step 3: Identify Baeda Maryam I and his child
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?baedaMaryamI dbo:child ?childOfBaedaMaryamI .

  # Step 4: Find the father of Baeda Maryam I's child who is royalty and an office holder
  ?childOfBaedaMaryamI dbo:father ?fatherOfChild .
  ?fatherOfChild dbo:royalty true .
  ?fatherOfChild dbo:officeHolder true .

  # Step 5: Identify The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Combine information to find the final entity
  FILTER(?childOfParent = ?fatherOfChild)
  BIND(?alterEgo AS ?finalEntity)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?lamont rdfs:label ""Lamont Cranston""@en .
  ?lamont dbo:occupation ?profession .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
# Query to find a notable member of the ruling party in Central, Louisiana
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyMember WHERE {
  ?party dbo:country dbr:United_States .
  ?party dbo:member ?person .
  FILTER(CONTAINS(LCASE(?person), ""central louisiana"")) # Assumption based on location
  ?person foaf:name ?name .
}

# Query to find Tisha Sterling's parent and their birth name
SELECT ?parent ?birthName WHERE {
  dbr:Tisha_Sterling dbo:child ?child .
  ?child rdfs:label ""Tisha Sterling""@en .
  ?child dbo:parent ?parent .
  ?parent foaf:name ?birthName .
}

# Query to find the actor from ""1,000 Dollars a Minute""
SELECT ?actor WHERE {
  dbr:_1,_000_Dollars_a_Minute dbo:starring ?actor .
}

# Query to find the spouse of that actor
SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find T.I.'s song that is also a musical work
  ?song dbo:artist dbr:T.I. ;
        rdf:type dbo:Songs .

  # Step 2: Identify the album of the song
  ?album dbo:song ?song .

  # Step 3: Determine actor associated with the album
  OPTIONAL { ?album dbo:actor ?actor . }

  # Step 4: Find movie and alter ego ""The Shadow""
  ?movie dbo:starring ?shadowActor ;
         rdfs:label ?movieLabel .
  
  ?shadowActor foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""the shadow""))

  # Step 5: Check for common actor
  VALUES ?actor { ?shadowActor }
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?country WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:member dbr:Spanish_Socialist_Workers'_Party .
  ?person dbo:officeHolder ?office .
  
  # Check if the person was involved in the 2009 Galician regional election
  ?office dbo:election dbr:2009_Galician_regional_election .

  # Find their place of residence and check if it is a country
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  
  BIND(?residence AS ?country)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?player ?nativeCountry WHERE {
  # Find Thomas Letsch's role in VfL Bochum 2007-08 season
  ?team a dbo:SoccerClub ;
        rdfs:label ""VfL Bochum""@en .
  
  ?season dbo:sportsTeam ?team ;
          dbo:season ""2007–08""^^xsd:string .

  ?letsch dbp:managerOf ?team ;
          rdfs:label ""Thomas Letsch""@en .

  # Find the player managed by Thomas Letsch
  ?player dbo:playedFor ?team ;
          dbo:manager ?letsch .
  
  # Determine the native country of the leader of West Germany
  ?country rdfs:label ""West Germany""@en .
  ?leader dbo:nativePlace ?nativeCountry ;
          dbo:headOfState ?country .

}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderInWar ?successor ?forceCommander WHERE {
  # Step 1: Identify Jean Baptist, Comte d'Arco
  ?dArco rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  
  # Step 2: Find his commander in a war that is also a TV show and societal event
  ?war dbo:commander ?commanderInWar .
  ?commanderInWar rdfs:label ?label1 .
  FILTER(CONTAINS(LCASE(?label1), ""television show"") || CONTAINS(LCASE(?label1), ""societal event"")) .

  # Step 3: Find the successor of this commander who is a politician and office holder
  ?commanderInWar dbo:successor ?successor .
  ?successor rdf:type dbo:Politician ; dbo:officeHolder ?office .

  # Step 4: Identify Michał Kazimierz Pac's military conflict and its commander
  ?pac rdfs:label ""Michał Kazimierz Pac""@en .
  ?force dbo:commander ?forceCommander .
  ?pac dbo:participatedIn ?force .

  # Step 5: Reference to the writer of 'Always the Love Songs'
  OPTIONAL {
    ?writer rdfs:label ""Writer of Always the Love Songs""@en .
    ?writer dbo:work ?loveSongs .
    ?loveSongs rdfs:label ""Always the Love Songs""@en .
  }
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  # Identify Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  
  # Find his child
  ?child1 dbo:parent ?philippAlbrecht ;
          a dbo:Person .

  # Find Philipp Albrecht's grandchild
  ?grandchild1 dbo:parent ?child1 ;
               a dbo:Person .

  # Identify Alexander of Württemberg (1804-1881)
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  
  # Find his child
  ?",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceGlennYoungkin, ?awardeeBirthPlace, ?authorBirthPlace WHERE {
  # Birthplace of Glenn Youngkin
  ?glennYoungkin rdfs:label ""Glenn Youngkin""@en .
  ?glennYoungkin dbo:birthPlace ?birthPlaceGlennYoungkin .

  # Awardee of Vince Gilligan's Award
  ?vinceGilligan rdfs:label ""Vince Gilligan""@en .
  ?vinceGilligan dbo:award ?award .
  ?awardee dbo:award ?award .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Author of El Deafo who is American
  ?elDeafo rdfs:label ""El Deafo""@en .
  ?elDeafo dbo:author ?author .
  ?author rdfs:label ?authorLabel .
  FILTER(CONTAINS(LCASE(?authorLabel), ""cecelia""))
  ?author dbo:nationality <http://dbpedia.org/resource/Category:American_writers> .
  ?author dbo:birthPlace ?authorBirthPlace
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:parent ?frederick ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"")) .

  ?awardee dbo:parent ?child ;
           dbo:honour ""Commander of the Royal Victorian Order"" .
  
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?child2 dbo:parent ?edward ;
          dbo:occupation ?occupation2 .
  FILTER(CONTAINS(LCASE(?occupation2), ""politician"") && CONTAINS(LCASE(?occupation2), ""office holder"")) .

  BIND(?frederick AS ?father)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Shatrughan Sinha's profession
  ?sinha dbo:profession ?sinhaProf .
  VALUES ?sinha {<http://dbpedia.org/resource/Shatrughan_Sinha>} .

  # The Shadow's alter ego and his profession
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?esterhuysen .
  ?esterhuysen rdfs:label ""Richard Grant Esterhuysen""@en .
  ?esterhuysen dbo:profession ?shadowProf .

  # Common profession
  FILTER (?sinhaProf = ?shadowProf)

  # Actor who acted in a television show that is also a movie
  ?actor dbo:profession ?commonProf ;
         dbp:actedIn ?show .
  VALUES ?commonProf {?sinhaProf}
  
  ?show rdf:type/rdfs:subClassOf* <http://dbpedia.org/ontology/TvSeries> .
  ?show dbo:isBasedOnFilm ?movie .

  FILTER (?actor != ?sinha && ?actor != ?shadow)
}
```",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find the alter ego of The Shadow
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  
  # Find the author of Smartbomb
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
  FILTER(?author = <http://dbpedia.org/resource/Douglas_Coupland>)

  # Find the actor in the album for T.I.'s song What You Know
  ?album rdfs:label ""Paper Trail""@en .
  ?album dbo:artist ?artist .
  FILTER(?artist = <http://dbpedia.org/resource/Justin_Timberlake>)
  
  # Find common professional link (actor)
  ?actor foaf:name ?name .
  OPTIONAL { ?alterEgo foaf:name ?name . }
  OPTIONAL { ?artist foaf:name ?name . }
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorBirthplace ?awardeeBirthplace WHERE {
  # Part 1: Birthplace of the actor of ""Akaler Shandhaney""
  ?film rdfs:label ""Akaler Shandhaney""@en .
  ?film dbo:actor ?actor .
  ?actor dbo:birthPlace ?actorBirthplace .

  # Part 2: Birthplace of the awardee of Sangeet Natak Akademi Fellowship
  ?person dbo:songAwardedTo <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> .
  ?person dbo:birthPlace ?awardeeBirthplace .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?commonEntity WHERE {
  { 
    ?henry rdfs:label ""Henry Clay Lewis""@en .
    ?henry dbo:birthPlace ?settlement .
    ?settlement rdf:type dbo:Settlement ;
                dbo:country dbc:United_States_of_America .
  }
  UNION
  {
    ?quincy rdfs:label ""Quincy Adams Gillmore""@en .
    ?quincy dbo:militaryService ?service .
    ?service dbo:branch ?force .
  }
  FILTER(?settlement = ?force)
  BIND(?settlement AS ?commonEntity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Identify Maximilian I's children
  ?maximilian rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  ?maximilian dbo:child ?child .

  # Step 2: Find Dorothea of Denmark and her father
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?dorothea dbo:parent ?fatherOfDorothea .

  # Step 3: Determine the father of one of Dorothea's children
  ?childOfDorothea dbo:parent ?dorothea ;
                  dbo:spouse ?fatherOfChild .

  # Step 4: Identify a royal child of Philip I of Castile
  ?philip rdfs:label ""Philip I of Castile""@en .
  ?royalChild dbo:child ?philip ;
              rdf:type dbo:Monarch .

  # Connect the relationships
  FILTER(?fatherOfDorothea = ?fatherOfChild)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?athlete ?actor ?team WHERE {
  # Step 1: Find Marty Pollio's birthday
  ?marty a dbo:Person ;
         rdfs:label ""Marty Pollio""@en ;
         dbo:birthDate ?birthday .

  # Step 2: Find an athlete born on Marty Pollio's birthday
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?birthday .

  # Step 3: Identify a film by Manuel Huerga
  ?film dbo:director ?huerga ;
        rdfs:label ?filmLabel .
  ?huerga rdfs:label ""Manuel Huerga""@en .

  # Step 4: Find an actor in that film who is also a soccer player and athlete
  ?actor dbo:actorInFilm ?film ;
         a dbo:SoccerPlayer, dbo:Athlete .

  # Step 5: Determine Pablo Aimar's team(s)
  ?pablo a dbo:SoccerPlayer ;
         rdfs:label ""Pablo Aimar""@en .
  ?pablo dbo:team ?team .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderOffice ?militaryConflict ?tenant ?miguelMauraOffice WHERE {
  # Find Manuel Pinto da Costa's office as a commander and the military conflict
  ?manuel dbo:officeHolder ?commanderOffice .
  ?commanderOffice rdfs:label ""Commander""@en .
  ?manuel dbp:militaryConflict ?militaryConflict .

  # Identify the leader of the 2003 Madrid City Council election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2003 && CONTAINS(LCASE(STR(?election)), ""madrid city council""))
  ?leader dbo:officeHolder ?mayorOffice .
  ?mayorOffice rdfs:label ?mayorLabel .

  # Find the tenant of this leader's residence
  ?residence dbo:tenant ?tenant .
  
  # Identify Miguel Maura's office
  ?miguelMaura dbo:officeHolder ?miguelMauraOffice .
}

```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child ?father ?commander WHERE {
  # Step 1: Identify Maria Anna of Bavaria
  ?maria rdfs:label ""Maria Anna of Bavaria (1574–1616)""@en .
  
  # Step 2: Find her child
  ?maria dbo:child ?child .

  # Step 3: Identify the father of this child
  ?child dbo:father ?father .

  # Step 4:",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  # Step 1: Find Linda Bruckheimer's birth name
  ?linda rdfs:label ""Linda Bruckheimer""@en .
  
  # Step 2: Find her spouse using the birth name
  ?linda dbo:birthName ?birthName .
  ?linda dbo:spouse ?spouse .

  # Step 3: Find movies produced by her spouse
  ?movie dbo:producer ?spouse .

  # Step 4: Identify the producer of that movie
  ?movie dbo:producer ?producer .
}
```",5,5,6,3,2,3,2,20,1,18,0,0.05263157894736842,1.0,0.1
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:militaryService dbr:Quincy_Adams_Gillmore .
  ?person dbo:awardReceived ?award .
  ?award dbo:awardingBody dbr:United_States_Congress .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?alterEgo ?profession ?movie WHERE {
  # Step 1: Identify The Shadow's alter ego in comics
  ?shadowCharacter rdfs:label ""The Shadow""@en .
  ?shadowCharacter dbo:alterEgo ?alterEgo .

  # Step 2: Find Shatrughan Sinha's profession
  ?sinha rdfs:label ""Shatrughan Sinha""@en .
  ?sinha dbo:profession ?profession .

  # Step 3: Identify a movie/TV show with Richard E. Grant and another actor
  ?movie dbo:starring ?grant .
  ?movie dbo:starring ?actor .
  
  FILTER(?grant = <http://dbpedia.org/resource/Richard_E._Grant>)

  # Step 4: Match the alter ego's profession with Shatrughan Sinha's and ensure they are in the same movie/TV show
  ?alterEgo dbo:profession ?sinhaProfession .
  FILTER(?sinhaProfession = ?profession)
  
  OPTIONAL { ?actor rdfs:label ?actorLabel . }
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find musical artist from Florida
  ?person dbo:musicalArtist true .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Florida""@en .

  # Step 2: Identify the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:region ?region .
  ?region rdfs:label ?regionLabel .
  FILTER (CONTAINS(LCASE(?regionLabel), ""american"") && CONTAINS(LCASE(?regionLabel), ""state"") && CONTAINS(LCASE(?regionLabel), ""settlement""))
  ?choir dbo:award ?award .
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .

  # Step 3: Check if this person is a band member of an artist associated with Bobby Shmurda
  ?associatedArtist dbo:bandMember ?person .
  ?bobbyShmurda dbo:associatedMusicalArtist ?associatedArtist .
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
# Query 1: Actor of the movie ""and""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Movie with 'and'""@en .
  ?movie dbo:starring ?actor .
}

# Query 2: Actor of the album for ""What You Know (T.I. song)""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?album rdfs:label ""Paper Trail""@en .
  ?album dbo:artist ?artist .
}

# Query 3: Professional in the alter ego of ""The Golden Master""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?character dbo:alterEgo ?professional .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
# Query 1: Victor Saville's Birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?victor dbo:birthPlace ?birthPlace .
  ?victor rdfs:label ""Victor Saville""@en .
}

# Query 2: Notable Native of the Birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?native WHERE {
  ?person dbo:nationality ?birthPlace ;
          rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""notable person""))
}

# Query 3: Steven Kapur's True Self (Artist)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?artist WHERE {
  ?steven dbo:associatedMusicalWork ?work .
  ?work rdfs:label ""True Self""@en .
  ?steven rdfs:label ""Steven Kapur""@en .
}

# Query 4: Writer of the Musical Work
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?writer WHERE {
  ?work dbo:composer ?writer .
  ?work rdfs:label ""True Self""@en .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?university (MIN(?foundingDate) AS ?establishmentDate) WHERE {
  # Find Luiza Erundina's alma mater
  ?luiza dbo:almaMater ?university .
  FILTER(CONTAINS(LCASE(STR(?luiza)), ""luiza erundina""))

  # Check if Eleonora Menicucci de Oliveira attended the same university
  ?eleonora dbo:almaMater ?university .
  FILTER(CONTAINS(LCASE(STR(?eleonora)), ""eleonora menicucci de oliveira""))

  # Get the founding date of the university
  OPTIONAL { ?university dbo:foundingDate ?foundingDate }
} GROUP BY ?university
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonEntity WHERE {
  # Duke Philipp of Württemberg's grandchild
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .
  ?philippChild dbo:child ?philippGrandchild .
  
  # Archduke Charles Louis of Austria's royal grandchild
  ?charlesLouis rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?charlesLouisChild dbo:child ?charlesLouisGrandchild .
  ?charlesLouisGrandchild dbo:royalty ?isRoyalty .

  # Archduchess Helena of Austria's spouse and their royal child
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?spouse dbo:spouse ?helena .
  ?spouseChild dbo:child ?helenaSpouseChild .
  ?helenaSpouseChild dbo:royalty ?isHelenaRoyalty .

  # Common entity fitting all criteria
  ?philippGrandchild = ?charlesLouisGrandchild ;
                      dbo:predecessor ?helenaSpouseChild .
  
  BIND(?philippGrandchild AS ?commonEntity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Find Minye Kyawswa's child
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:child ?child .

  # Step 2: Find the parent of this child
  ?child dbo:parent ?parent .

  # Step 3: Find Saw Shwe Khet's spouse
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouseOfSawShweKhet .

  # Step 4: Find the predecessor of the parent who is royalty and related to Saw Min Phyu's spouse
  ?parent dbo:predecessor ?predecessor .
  
  # Ensure the predecessor is royalty
  ?predecessor a dbo:Monarch .

  # Find Saw Min Phyu's spouse
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  ?sawMinPhyu dbo:spouse ?spouseOfSawMinPhyu .

  # Ensure the predecessor is related to Saw Min Phyu's spouse
  ?predecessor dbo:spouse ?spouseOfSawMinPhyu .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?eleonoreFather ?mariaAnnaFather WHERE {
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?eleonore dbo:father ?eleonoreFather .

  ?mariaAnna rdfs:label ""Maria Anna of Bavaria (1574-1616)""@en .
  ?mariaAnna dbo:father ?mariaAnnaFather .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Query for Nick Curran's Associated Musical Artist
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedBand WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?associatedBand .
}

# Query for Kim Wilson's Band
SELECT ?band WHERE {
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:bandMember ?band .
}

# Query for Person Born on 1945-03-30 and their Band Member
SELECT ?artist ?band ?member WHERE {
  ?artist dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = 1945 && MONTH(?birthday) = 3 && DAY(?birthday) = 30)
  ?artist rdfs:label ?label .
  ?artist dbo:associatedBand ?band .
  ?band dbo:bandMember ?member .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?movie WHERE {
  # Step 1: Identify Allan Arbus's child
  ?allanArbus rdfs:label ""Allan Arbus""@en .
  ?child dbo:childOf ?allanArbus .

  # Step 2: Find the parent of that child
  ?child dbo:parent ?parent .

  # Step 3: Check if this person acted in any movie
  ?person rdfs:label ?parentLabel .
  ?movie dbo:actor ?person .
  
  # Step 4: Determine if they died in Los Angeles
  OPTIONAL { 
    ?person dbo:deathPlace ?place .
    FILTER(CONTAINS(LCASE(?place), ""los angeles""))
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?politicianParent ?awardParent WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  # Step 2: Find his child who is a politician
  ?child dbo:parent ?frederick ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Step 3: Determine the parent of this politician child
  ?politicianParent dbo:child ?child .

  # Step 4: Identify Rodney Lees and his award
  ?rodney rdfs:label ""Rodney Lees""@en .
  ?rodney dbo:award ?award .

  # Step 5: Find the parent of the awardee's award
  ?awardParent dbo:award ?award .

  # Step 6: Match the two parents
  FILTER(?politicianParent = ?awardParent)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commonArtist WHERE {
  # Identify Sade Adu
  ?sadeAdu rdfs:label ""Sade""@en .
  
  # Confirm The Live Anthology is associated with Sade Adu
  ?album dbo:artist ?sadeAdu ;
         rdfs:label ""The Live Anthology""@en .

  # Identify Kanye West by birth name $pacely
  ?kanyeWest foaf:name ""$pacely"" ;
             rdfs:label ""Kanye West""@en .
  
  # Find associated musical artists of Sade Adu
  ?sadeAdu dbo:associatedMusicalArtist ?artist1 .

  # Find associated musical artists of Kanye West
  ?kanyeWest dbo:associatedMusicalArtist ?artist2 .

  # Find common artist between Sade Adu and Kanye West
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?book dbo:author ?author .
  ?author rdfs:label ""Hillary Clinton""@en .
  ?book rdfs:label ""Living History""@en .

  ?author dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .

  OPTIONAL { ?spouse dbo:residenceLocation ?location . }
  OPTIONAL { ?spouse dbp:officeHolderOf ?office . }
  OPTIONAL { ?spouse dbo:commanderIn ?crisis . }

  FILTER(CONTAINS(LCASE(?name), ""bill clinton""))
  FILTER(STRSTARTS(STR(?location), STR(<http://dbpedia.org/resource/Chappaqua,_New_York>)))
  FILTER(EXISTS { ?office rdfs:label ?officeLabel . FILTER(CONTAINS(LCASE(?officeLabel), ""president"")) })
  FILTER(EXISTS { ?crisis rdfs:label ?crisisLabel . FILTER(CONTAINS(LCASE(?crisisLabel), ""third taiwan strait crisis"")) })
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather ?parentOfCommander WHERE {
  # Identify Na'od and his father
  ?naod rdfs:label ""Na'od""@en .
  ?naod dbo:father ?father .

  # Find the grandfather of Na'od
  ?father dbo:father ?grandfather .
  
  # Check if the grandfather was royalty and an office holder
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder ?office .

  # Identify the commander in the Siege of Mukha
  ?siege rdfs:label ""Siege of Mukha""@en .
  ?siege dbo:commander ?commander .

  # Find the parent of the commander who is royalty
  ?commander dbo:parent ?parentOfCommander ;
             a dbo:Monarch .

  # Identify Lamont Cranston as The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?lamontCranston .
  ?lamontCranston rdfs:label ""Lamont Cranston""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  # Find Bob Thompson (musician) and his birth name
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:birthName ?birthName .

  # Find Sam Concepcion
  ?sam rdfs:label ""Sam Concepcion""@en .

  # Find The Shadow and his alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Check if the birth name person is a musical artist
  ?birthNamePerson rdfs:label ?birthNameLabel .
  FILTER (lang(?birthNameLabel) = 'en')
  
  # Find the band of the birth name person
  ?birthNamePerson dbo:band ?band .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyRoy ?countryDaniel ?partyGustavo WHERE {
  # Find Roy Leonardo Barreras Montealegre's party
  ?roy rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?roy dbo:partyMember ?partyRoy .

  # Find Daniel Elahi Galán's country
  ?daniel rdfs:label ""Daniel Elahi Galán""@en .
  ?daniel dbo:nationality ?countryDaniel .

  # Find Gustavo Petro's party
  ?gustavo rdfs:label ""Gustavo Petro""@en .
  ?gustavo dbo:partyMember ?partyGustavo .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?georgeDucas rdfs:label ""George Ducas""@en .
  ?georgeDucas dbo:successor ?successor .

  FILTER EXISTS { ?successor a dbo:Politician . }
  FILTER EXISTS { ?successor dbo:officeHolder ?office . }

  OPTIONAL {
    ?michałKazimierzPac rdfs:label ""Michał Kazimierz Pac""@en .
    ?conflict dbo:commander ?michałKazimierzPac ;
              a dbo:MilitaryConflict .

    ?successor dbo:commander ?conflict .
  }

  OPTIONAL {
    ?battleOfVienna rdfs:label ""Battle of Vienna""@en .
    ?force dbo:commander ?successor ;
           dbo:participatedIn ?battleOfVienna .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?deceased a dbo:MusicalArtist ;
            dbo:deathDate ""2020-06-18""^^xsd:date ;
            dbo:author ?work .
  
  ?work a dbo:Work, dbo:TelevisionShow .

  ?artist a dbo:Artist, dbo:MusicalArtist ;
          dbo:nationality dbr:London ;
          dbo:parent ?parent .

  ?deceased dbo:authoredBy ?artist .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Find Princess Aisha bint Faisal's royal child
  ?aishaChild dbo:childOf ?aisha .
  ?aisha rdfs:label ""Aisha bint Faisal""@en .
  
  # Ensure the child is royalty
  ?aishaChild a dbo:Monarch .

  # Step 2: Find Prince Faisal bin Hussein's royal child
  ?faisalChild dbo:childOf ?faisal .
  ?faisal rdfs:label ""Faisal bin Hussein""@en .

  # Ensure the child is royalty
  ?faisalChild a dbo:Monarch .

  # Step 3: Find common parent of these children who is royalty
  ?commonParent dbo:parentOf ?aishaChild ;
               dbo:parentOf ?faisalChild .
  
  # Ensure the common parent is royalty
  ?commonParent a dbo:Monarch .

  # Step 4: Identify this common parent's own parent who is also royalty
  ?grandparent dbo:parentOf ?commonParent .
  ?grandparent a dbo:Monarch .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?richard rdfs:label ""Richard E. Grant""@en .
  ?film dbo:starring ?richard ;
        a dbo:Film ;
        dbo:genre ?genre .

  FILTER EXISTS { ?genre rdfs:label ""Television film""@en . }
  FILTER EXISTS { ?genre rdfs:label ""Drama television series""@en . }

  ?politician dbp:profession dbr:Politician ;
              dbo:actorIn ?film .

  ?abKyaHoga dbo:title ""Ab Kya Hoga"" .
  ?abKyaHoga dbo:actor ?politician .

  ?film dbo:starring ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producerTomSawyer ?producerClaimToFame WHERE {
  # Find the producer of ""The Adventures of Tom Sawyer (1938 film)""
  ?film rdfs:label ""The Adventures of Tom Sawyer""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/Adventures_of_Tom_Sawyer_(1938_film)>)))
  ?film dbo:producer ?producerTomSawyer .

  # Find the actor in ""High Society Blues""
  ?highSocietyBlues rdfs:label ""High Society Blues""@en .
  FILTER(STRSTARTS(STR(?highSocietyBlues), STR(<http://dbpedia.org/resource/High_Society_Blues>)))
  ?highSocietyBlues dbo:starring ?actor .

  # Find the claim to fame of the actor
  ?actor foaf:name ?actorName .
  OPTIONAL {
    ?claimToFame rdfs:label ?famousWorkLabel .
    ?claimToFame dbo:creator ?actor .
    FILTER(STRSTARTS(STR(?claimToFame), STR(<http://dbpedia.org/resource/>) && CONTAINS(LCASE(?famousWorkLabel), ""movie"") && CONTAINS(LCASE(?famousWorkLabel), ""book"")))
    ?claimToFame dbo:producer ?producerClaimToFame .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist1Band WHERE {
  ?curran dbo:birthName ""Nicholas Michael Curran"" .
  ?curran dbo:band ?artist1Band .
}

UNION

SELECT ?artist2Band WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:birthName ?name .
  FILTER regex(?name, '^[A-Za-z ]+$') # Ensures it's a person with a name
  ?person dbo:band ?artist2Band .
}

UNION

SELECT ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:member ?member .
  ?member dbo:birthName ?realName .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouse ?filmAudrey ?filmIliza WHERE {
  # Step 1: Identify Janusz Kamiński's spouse
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .

  # Step 2: Find films with the spouse and Audrey Hepburn
  ?filmAudrey rdf:type dbo:Film ;
              dbo:starring ?spouse, ?audreyHepburn .
  ?audreyHepburn rdfs:label ""Audrey Hepburn""@en .

  # Step 3: Find films with the spouse and Iliza Shlesinger
  ?filmIliza rdf:type dbo:Film ;
             dbo:starring ?spouse, ?ilizaShlesinger .
  ?ilizaShlesinger rdfs:label ""Iliza Shlesinger""@en .

  # Step 4: Find common films (if any)
  FILTER(?filmAudrey = ?filmIliza)
}
```",5,9,6,2,3,2,3,28,0,0,1,0,0.0,0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  ?award dbo:recipient ?awardee .
  FILTER regex(str(?award), ""Anita Borg Institute Women of Vision Awards"", ""i"") .

  ?awardee dbo:nationality dbr:Japan .

  ?awardee dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?birthPlace dbp:country dbr:Japan .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Identify the commander in the Siege of Mukha
  ?commander dbo:event ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .

  # Step 2: Check if the commander is royalty
  ?commander dbo:royalty ?isRoyalty .
  
  # Step 3: Find the parent of the royal commander
  ?parent dbo:child ?commander .
  
  # Step 4: Identify the child of this royal parent
  ?child dbo:parent ?parent .

  # Step 5: Ensure the child is royalty
  ?child dbo:royalty ?isChildRoyalty .

  # Step 6: Verify if this child is the father of Baeda Maryam I
  ?baedaMaryamI dbo:father ?child .
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .

  # Step 7: Reference to Lamont Cranston (this part might not be directly queryable in DBpedia)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  
  # Find the successor of the 2006-07 VfL Bochum season
  ?successor dbo:sportsTeamSeason dbp:club ""VfL Bochum""@en ;
              dbo:seasonStartYear ?startYear .
  FILTER(?startYear > 2006)
  
  # Find Theodor Heuss's native country
  ?heuss dbo:nativeCountry ?country .
  VALUES ?country { <http://dbpedia.org/resource/Germany> }
  
  # Find Thomas Letsch's team management role
  ?letschTeam dbp:manager ""Thomas Letsch""@en ;
              dbo:sportsTeamSeason ?teamSeason .
  
  # Identify the manager of a player in the successor season
  ?player dbo:playsFor ?successor ;
          dbo:managedBy ?manager .
  FILTER(?manager != ""Thomas Letsch""@en)
}",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?child dbo:actor ?actor .
  ?actor dbo:parent ?parent .

  { 
    ?mariclare rdfs:label ""Mariclare Costello""@en .
    ?mariclare dbo:spouse ?spouse .
    ?spouse dbo:child ?child .
  }
  
  UNION
  
  {
    ?amy rdfs:label ""Amy Arbus""@en .
    ?amy dbo:parent ?parent .
  }

  OPTIONAL {
    ?movie dbo:actor ?actor .
    ?decedent dbo:deathPlace ?place .
    ?place rdfs:label ""Los Angeles""@en .
    ?decedent dbo:associatedWith ?movie .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Query for Marcelo Sarmiento's Birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthday WHERE {
  ?marcelo a dbo:FootballPlayer ;
           rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbp:birthday ?birthday .
}

# Query for Sergio Agüero's Team on that Date
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfAlbrecht ?grandChildRoyalty ?predecessor WHERE {
  
  # Step 1: Identify Albrecht, Duke of Württemberg and his child
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?albrecht dbo:child ?childOfAlbrecht .
  
  # Step 2: Identify Archduchess Margarete Sophie of Austria and her parent
  ?margarete rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?parent dbo:child ?margarete .
  
  # Step 3: Find the child of the child (grandchild) that is royalty
  ?parentChild dbo:child ?grandChild .
  ?grandChild rdfs:label ?grandChildLabel .
  FILTER(CONTAINS(LCASE(?grandChildLabel), ""royalty""))
  BIND(?grandChild AS ?grandChildRoyalty)
  
  # Step 4: Identify Archduchess Helena of Austria and her spouse's child
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?spouse dbo:spouse ?helena .
  ?spouseChild dbo:child ?spouse .
  
  # Step 5: Find the predecessor of this child
  OPTIONAL {
    ?predecessor dbo:siblingOf ?spouseChild .
    FILTER(CONTAINS(LCASE(?predecessorLabel), ""royalty""))
    BIND(?predecessor AS ?predecessor)
  }
  
  # Ensure the grandchild and predecessor are the same entity
  FILTER(?grandChildRoyalty = ?predecessor)
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Office of the Commander in Central African Republic Civil War
SELECT ?office WHERE {
  ?person dbo:occupation dbo:Politician ;
          dbo:office ?office .
  ?event dbo:eventName ""Central African Republic Civil War"" ;
         dbo:participant ?person .
}

UNION

# Part 2: Office of the Leader in Conservative Republican Party (Spain)
SELECT ?office WHERE {
  ?party dbr:Conservative_Republican_Party_(Spain) ;
         dbo:leader ?leader .
  ?leader dbo:occupation dbo:Politician ;
          dbo:office ?office .
}

UNION

# Part 3: Tenant of the Residence of the Leader in 2003 Madrid City Council Election
SELECT ?residence WHERE {
  ?election dbr:2003_Madrid_City_Council_election ;
            dbo:winner ?leader .
  ?leader dbo:occupation dbo:Politician ;
          dbo:office ?office ;
          dbo:residence ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  # For Elorm Kabu Amenyah
  { 
    ?person rdfs:label ""Elorm Kabu Amenyah""@en .
    ?person dbo:musicalArtist ?artist .
  }
  
  UNION
  
  # For a native of Central Region, Ghana with the profession of musician like Rod Argent
  {
    ?person foaf:birthPlace ?place ;
            dbo:profession ?profession .
    ?place rdfs:label ""Central Region, Ghana""@en .
    ?profession rdfs:label ""musician""@en .
    ?person dbo:musicalArtist ?artist .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer ?nickname WHERE {
  # Find the writer of ""The First Glove""
  ?work dbo:title ""The First Glove""@en .
  ?work dbo:author ?writer .

  # Find Denis Kolodin's nickname
  ?denis foaf:name ""Denis Kolodin""@en .
  ?denis dbo:nickName ?nickname .

  # Check if the nickname is a soccer club
  ?club rdfs:label ?nickname .
  ?club rdf:type <http://dbpedia.org/ontology/SportsClub> .
  
  FILTER regex(?nickname, ""soccer"", ""i"")
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?association WHERE {
  ?joeyB rdfs:label ""Joey B""@en .
  ?joeyB foaf:name ""Elorm Kabu Amenyah"" .

  ?chrisMartin rdfs:label ""Chris Martin""@en .
  ?chrisMartin dbo:profession dbo:MusicalArtist ;
               dbo:work <http://dbpedia.org/resource/The_Live_Anthology> .

  OPTIONAL {
    ?joeyB dbo:collaboration ?association .
    ?association dbo:artist ?chrisMartin .
  }
  
  UNION
  
  OPTIONAL {
    ?chrisMartin dbo:collaboration ?association .
    ?association dbo:artist ?joeyB .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardeeWar ?baggovutWar ?birthPlaceEntity WHERE {
  # Find the awardee of the Golden Sword for Bravery and their war
  ?awardee dbo:award ?award .
  ?award rdfs:label ""Golden Sword for Bravery""@en .
  ?awardee dbo:participatedIn ?awardeeWar .

  # Find Karl Gustav von Baggovut and his associated war
  ?baggovut rdfs:label ""Karl Gustav von Baggovut""@en .
  ?baggovut dbo:participatedIn ?baggovutWar .

  # Identify Elena Žalinkevičaitė-Petrauskienė's birthplace and find an entity associated with it
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlace .
  ?birthPlaceEntity dbo:location ?birthPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find T.I.'s Albums/Songs
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album dbo:artist dbr:T.I._(rapper) .
  ?album a dbo:Album .
}

# Step 2: Find Actors in T.I.'s Music Videos
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?video dbo:artist dbr:T.I._(rapper) .
  ?video dbo:starring ?actor .
}

# Step 3: Find the Author of ""Smartbomb""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
}

# Step 4: Find a Movie Featuring Both the Actor and Author
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:starring ?author .
}

# Step 5: Determine the Professional Role of the Actor
PREFIX dbo: <http://dbpedia.org/ontology",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Query for military force in Battle of Cape Finisterre (1805)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?militaryForce WHERE {
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:participatingMilitaryUnit ?militaryForce .
}

# Query for war involving William Bayne as a commander
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?war WHERE {
  ?person rdfs:label ""William Bayne""@en .
  ?person dbo:commanderOf ?war .
}

# Query for event related to The Triple X's
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?event WHERE {
  ?group rdfs:label ""The Triple X's""@en .
  ?group dbo:participatingIn ?event .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  # Step 1: Find Saw Shwe Khet's child
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child1 dbo:child ?sawShweKhet .

  # Step 2: Find Minye Kyawswa's grandchild
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?parentOfGrandchild dbo:child ?minyeKyawswa .
  ?grandchild dbo:child ?parentOfGrandchild .

  # Step 3: Find Myat Hpone Pyo's father's spouse
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?father dbo:child ?myatHponePyo .
  ?spouse dbo:spouse ?father .

  # Step 4: Find common royalty among these individuals
  FILTER (?child1 = ?grandchild || ?child1 = ?spouse || ?grandchild = ?spouse)
  ?commonRoyalty rdf:type dbo:Monarch .
  VALUES ?commonRoyalty { ?child1 ?grandchild ?spouse }

  # Step 5: Find the predecessor of this royalty
  ?predecessor dbo:predecessor ?commonRoyalty .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party WHERE {
  # Identify Pickett's Charge and its commander
  dbr:Picketts_Charge dbo:commander ?commander .
  
  # Link to the American Civil War as a societal event
  dbr:Picketts_Charge dbo:event dbr:American_Civil_War .

  # Query for political parties in Westport, Connecticut
  ?party dbo:location dbr:Westport,_Connecticut ;
         a dbo:PoliticalParty .

  # Check if the commander was associated with any ruling party
  OPTIONAL { ?commander dbo:memberOf ?party . }
}
```",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify Roger II of Sicily
  ?roger rdfs:label ""Roger II of Sicily""@en .
  
  # Step 2: Find his children who are royalty
  ?roger dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 3 & 4: Identify the parent (Roger II) and confirm father
  ?parent dbo:spouse ?mother .
  ?parent dbo:child ?royalChild .
  
  # Step 5: Identify William I and his reference who is royalty and an office holder
  ?william rdfs:label ""William I of Sicily""@en .
  ?reference dbo:officeHolder ?office .
  ?reference rdf:type dbo:Monarch .

  # Step 6: Find Elvira of Castile's child with William I
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?william dbo:spouse ?elvira .
  ?william dbo:child ?elviraChild .
  ?elviraChild rdf:type dbo:Monarch .

  # Step 7: Combine the information
  FILTER(?royalChild = ?elviraChild)
}
```

[[ ##",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Harriette Arlene Lake
  ?harriette dbo:birthName ""Harriette Arlene Lake"" .
  
  # Find Nat Levine's film product
  ?film dbo:producer ?natLevine ;
        a dbo:Film .

  # Identify Nat Levine
  ?natLevine rdfs:label ""Nat Levine""@en .

  # Find the actor of the film
  ?actor dbo:actedIn ?film .
  
  # Identify the landmark and ruling party
  ?landmark dbo:elevation ""20.1168""^^xsd:float ;
            dbo:location ?location .
  
  ?party dbp:rulingPartyAt ?location .

  # Find the actor who is a member of the ruling party
  ?actor dbo:memberOfPoliticalParty ?party .

  # Find the spouse of the identified actor
  ?actor dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Find VfL Bochum's manager in the 2007–08 season
  ?bochumSeason dbp:sport ""association football""@en ;
                dbo:team ?bochumClub ;
                dbo:seasonStartYear ?startYear ;
                dbo:seasonEndYear ?endYear .
  FILTER(?startYear = 2007 && ?endYear = 2008)
  
  ?bochumClub dbo:manager ?manager .

  # Step 2: Find Theodor Heuss's native country
  ?heuss dbo:nationality ?country ;
         rdfs:label ""Theodor Heuss""@en .
  
  # Step 3: Identify a sports club that is also an organization and a soccer club
  ?club rdf:type dbo:SoccerClub, dbo:SportsOrganization .

  # Step 4: Find the manager born on 1968-08-26
  ?person dbo:birthday ""1968-08-26""^^xsd:date ;
          dbo:manager ?teamManager .
  
  FILTER(?manager = ?teamManager)
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
# Query to find Ann Sothern's birth name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?birthName .
}

# Query to find actors in films produced by Nat Levine
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:producer ?natLevine .
  ?natLevine rdfs:label ""Nat Levine""@en .
  ?film dbo:starring ?actor .
}

# Query to find spouse of the actor identified
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  # Identify Tupac Shakur
  ?tupac rdfs:label ""Tupac Shakur""@en .
  
  # Identify Rocky Dawuni
  ?rocky rdfs:label ""Rocky Dawuni""@en .

  # Find artists associated with Tupac Shakur
  ?tupac dbo:associatedBand ?artist ;
         dbo:collaborator ?artist .

  # Find artists associated with Rocky Dawuni
  ?rocky dbo:associatedBand ?artist ;
         dbo:collaborator ?artist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Identify Arthur Stanley (politician) and his father
  ?arthur rdfs:label ""Arthur Stanley""@en .
  ?arthur dbo:father ?father .

  UNION

  # Step 2: Find the award associated with Rodney Lees and its awardee(s)
  ?rodney rdfs:label ""Rodney Lees""@en .
  ?rodney dbo:award ?award .
  ?award dbo:recipient ?awardee .
  
  # Step 3: Find the parent of the awardee
  ?awardee dbo:parent ?parent .

  UNION

  # Step 4: Identify Edward Stanley, 17th Earl of Derby, and his children
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:child ?child .

  # Step 5: Find the parent of that child who is a politician and office holder
  ?child dbo:parent ?politicianParent .
  ?politicianParent rdf:type dbo:Politician ;
                   dbo:officeHolder true .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?derBlau rdfs:label ""Der Blau""@en .
  ?derBlau dbo:member ?member .
}

UNION

SELECT ?designer WHERE {
  ?car rdfs:label ""Aston Martin AMR1""@en .
  ?car dbo:designer ?designer .
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?nativeRegion WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:birthName ?birthName .

  # Step 2: Identify a band member who is also a musical artist
  ?artist dbo:associatedBandMember ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .

  # Step 3: Find an award related to New York
  ?award dbo:awardedBy ?location .
  ?location rdfs:label ""New York (state)""@en .

  # Step 4: Identify the awardee band
  ?band dbo:award ?award .
  
  # Step 5: Determine the native region of the awardee
  ?band dbo:nativePlace ?nativeRegion .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
# Step 1: Find Marty Pollio's Birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthday WHERE {
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthday ?birthday .
}

# Step 2: Find Athlete Born on Marty Pollio's Birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?athlete WHERE {
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthday ?birthday .",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?athlete ?team WHERE {
  
  # Part 1: Actor who is also a soccer player and athlete in ""All or Nothing: Manchester City""
  ?show rdfs:label ""All or Nothing: Manchester City""@en .
  ?show dbo:castMember ?actor .
  ?actor dbo:profession ?profActor .
  FILTER (
    EXISTS { ?profActor rdfs:label ""Actor""@en . }
    && EXISTS { ?actor dbo:occupation ?soccerPlayer . ?soccerPlayer rdfs:label ""Soccer player""@en . }
    && EXISTS { ?actor dbo:occupation ?athleteProf . ?athleteProf rdfs:label ""Athlete""@en . }
  )
  
  # Part 2: Person born on February 22, 1955, who is an athlete
  ?person dbp:birthday ""1955-02-22""^^xsd:date .
  ?person dbo:occupation ?athleteProf .
  FILTER EXISTS { ?athleteProf rdfs:label ""Athlete""@en . }
  
  # Part 3: Team",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event dbo:agent ?ship .
  ?ship rdfs:label ""Prince of Wales (ship)""@en ;
        dbp:commander ?commander .
  FILTER EXISTS { ?event rdfs:label ""Sinking of Prince of Wales and Repulse""@en }
}
UNION
SELECT ?commander WHERE {
  ?event dbo:agent ?ship .
  ?ship rdfs:label ""HMS Repulse (1916)""@en ;
        dbp:commander ?commander .
  FILTER EXISTS { ?event rdfs:label ""Sinking of Prince of Wales and Repulse""@en }
}

SELECT ?award ?force WHERE {
  ?person rdfs:label ""Edmund Hakewill-Smith""@en ;
          dbo:awardsReceived ?award .
  ?award dbo:recipient ?person ;
         dbo:associatedForce ?force .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?floridaNative WHERE {
  # Step 1: Identify GS9 members who are artists and musical artists
  ?gs9Member dbo:member ?gs9 .
  ?gs9Member rdf:type dbo:MusicalArtist .
  
  # Step 2: Find their birth names
  ?gs9Member foaf:name ?birthName .

  # Step 3: Locate Florida natives who are musical artists with matching birth names
  ?floridaNative dbo:nativePlace ?florida .
  ?florida rdfs:label ""Florida""@en .
  ?floridaNative foaf:name ?birthName .
  ?floridaNative rdf:type dbo:MusicalArtist .

  # Step 4: Check if they are band members of the associated musical artist
  ?floridaNative dbo:bandMember ?associatedArtist .
  ?gs9Member dbo:member ?associatedArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Step 1: Find works by George Ducas
SELECT ?work WHERE {
  ?georgeDucas rdfs:label ""George Ducas""@en .
  ?georgeDucas dbo:work ?work .
}

# Step 2: Identify Jean Baptist, Comte d'Arco and his roles
SELECT ?role WHERE {
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?jeanBaptist dbo:role ?role .
  FILTER(?role IN (dbo:Commander, dbo:TelevisionShowCharacter, dbo:SocietalEvent))
}

# Step 3: Find successor in command during the Russo-Polish War
SELECT ?successor WHERE {
  ?war rdfs:label ""Russo-Polish War (1654–1667)""@en .
  ?jeanBaptist dbo:commanderOf ?war .
  ?successor dbo:succeededBy ?jeanBaptist .
}

# Step 4: Check if the successor is a politician or office holder
SELECT ?office WHERE {
  ?successor dbo:officeHolder ?office .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  # Find Toyotomi Hideyoshi's child
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  
  # Find Yamaza Enjirō's birth place
  ?enji dbo:birthPlace ?birthPlace .

  # Find wars involving Toyotomi Hidenaga
  ?hidenaga dbo:participatedIn ?war1 .
  
  # Check if the child of Hideyoshi participated in any war
  OPTIONAL { ?child dbo:participatedIn ?war2 . }
  
  # Check if Yamaza Enjirō's birth place is related to a war
  OPTIONAL {
    ?placeWar dbo:location ?birthPlace .
    ?placeWar dbo:participatedIn ?war3 .
  }

  # Find common wars
  FILTER (?war1 = ?war2 || ?war1 = ?war3)
  BIND(?war1 AS ?war)
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Step 1: Identify the award given by U.S. Congress related to Charleston
  ?award dbo:awardingBody dbr:United_States_Congress ;
         dbo:location dbr:Charleston,_South_Carolina .

  # Step 2: Find the awardee of this award
  ?award dbo:awardee ?person .

  # Step 3: Identify the award given by Quincy Adams Gillmore
  ?gillmoreAward dbo:awardingBody dbr:Quincy_Adams_Gillmore ;
                 dbo:awardee ?person .

  # Step 4: Determine the war in which this individual was involved
  ?person dbo:militaryConflict ?war .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
# Step 1: Find person who died in Taipei
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace ?place .
  FILTER (str(?place) = ""Taipei"")
}

# Step 2: Find child who is a politician
PREFIX dbo: <http://dbpedia.org/ontology/>
  
SELECT ?child WHERE {
  ?parent dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER (str(?occupation) = ""politician"")
}

# Step 3: Get birthplace of the politician child
PREFIX dbo: <http://dbpedia.org/ontology/>
  
SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
}

# Step 4: Find country associated with Lao She's work
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?work dbo:author ""Lao She"" .
  ?work dbo:country ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?thirdGenerationChild ?predecessorOfMargareteSophieChild ?spouseChildPredecessor WHERE {
  
  # Step 1: Identify Alexander of Württemberg and his third-generation child
  ?alexander rdfs:label ""Alexander of Württemberg (1804-1881)""@en .
  ?child1 dbo:childOf ?alexander .
  ?grandchild1 dbo:childOf ?child1 .
  ?thirdGenerationChild dbo:childOf ?grandchild1 .

  # Step 2: Identify Archduchess Margarete Sophie of Austria and her child's predecessor
  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?margareteChild dbo:childOf ?margareteSophie .
  ?predecessorOfMargareteSophieChild dbo:childOf ?margareteSophie .
  FILTER(?predecessorOfMargareteSophieChild != ?margareteChild)

  # Step 3: Identify Archduchess Helena of Austria's spouse and their child's predecessor
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?spouse dbo:spouseOf ?helena .
  ?spouseChild dbo:childOf ?spouse .
  ?spouseChildPredecessor dbo:childOf ?spouse .
  FILTER(?spouseChildPredecessor != ?spouseChild)

  # Step 4: Ensure both individuals are royalty
  ?thirdGenerationChild a dbo:RoyalFamilyMember .
  ?predecessorOfMargareteSophieChild a dbo:RoyalFamilyMember .
  ?spouseChildPredecessor a dbo:RoyalFamilyMember .

  # Step 5: Match the two individuals
  FILTER(?thirdGenerationChild = ?predecessorOfMargareteSophieChild && ?thirdGenerationChild = ?spouseChildPredecessor)
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual ?birthPlace WHERE {
  # Governor of Virginia
  { 
    ?governor dbo:stateGovernorOf dbr:Virginia .
    ?governor rdfs:label ?individualLabel .
    FILTER(CONTAINS(LCASE(?individualLabel), ""governor"") && CONTAINS(LCASE(?individualLabel), ""virginia""))
    ?governor dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Author of El Deafo
  { 
    ?author rdfs:label ""Cece Bell""@en .
    ?author dbo:nationality dbr:United_States .
    ?author dbo:birthPlace ?birthPlace .
  }

  UNION

  # Awardee related to Vince Gilligan
  {
    ?awardee dbo:awardReceived ?award .
    ?award dbp:recipient dbr:Vince_Gilligan .
    ?awardee dbo:birthPlace ?birthPlace .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby and his parents
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?parent .

  UNION

  # Step 2: Find the award associated with Rodney Lees and its awardee
  ?award dbp:recipient ?awardee ;
         rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""rodney lees""))

  # Step 3: Identify children of this awardee who are politicians and alumni of Eton College
  ?child dbo:parent ?awardee ;
         dbo:almaMater <http://dbpedia.org/resource/Eton_College> ;
         rdf:type dbo:Politician .

  # Step 4: Get the parent(s) of this child
  ?child dbo:parent ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?regimentWar ?bayneForce ?calderForce WHERE {
  # Identify the 30th (Cambridgeshire) Regiment of Foot and its war(s)
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:militaryConflict ?regimentWar .

  # Identify William Bayne's military force and its war(s)
  ?bayne dbp:name ""William Bayne"" .
  ?bayne dbo:militaryForce ?bayneForce .
  ?bayneForce dbo:militaryConflict ?bayneWar .

  # Identify Robert Calder's military force and its war(s)
  ?calder dbp:name ""Robert Calder"" .
  ?calder dbo:militaryForce ?calderForce .
  ?calderForce dbo:militaryConflict ?calderWar .

  # Find common wars or events
  FILTER (?regimentWar = ?bayneWar || ?regimentWar = ?calderWar)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?work dbo:author ?author .
  ?work rdfs:label ?title .
  FILTER CONTAINS(LCASE(?title), ""hillary clinton"") .

  ?author dbo:officeHolder ?office .
  ?author dbo:commanderInWar ?war .

  ?war rdf:type ?type1 .
  ?war rdf:type ?type2 .
  FILTER (?type1 = dbo:Disease || ?type1 = dbo:SocietalEvent) .
  FILTER (?type2 = dbo:Disease || ?type2 = dbo:SocietalEvent) .

  ?author dbo:spouse ?spouse .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?kimBand ?nickAssociation WHERE {
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:musicalArtist ?band .
  ?band rdfs:label ?kimBand .

  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:musicalArtist ?association .
  ?association rdfs:label ?nickAssociation .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?native WHERE {
  # Step 1: Identify William Gayner's birthplace
  ?williamGayner rdfs:label ""William Gayner""@en .
  ?williamGayner dbo:birthPlace ?birthPlace .

  # Step 2: Check if the birthplace is a region and a country
  ?birthPlace dbo:country ?country .
  ?birthPlace dbo:region ?region .
  
  # Step 3: Find parents of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  ?patrickBowesLyon rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?patrickBowesLyon dbo:parent ?parent1 .

  # Step 4: Find parents of Hon. Mary Frances Bowes-Lyon
  ?maryFrancesBowesLyon rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?maryFrancesBowesLyon dbo:parent ?parent2 .

  # Step 5: Find common native who is a parent to both and has the birthplace criteria
  FILTER (?parent1 = ?native && ?parent2 = ?native)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonChild ?father WHERE {
  # Step 1: William I of Sicily's royal children
  ?william rdfs:label ""William I of Sicily""@en .
  ?william dbo:child ?child1 .
  ?child1 rdf:type dbo:Monarch .

  # Step 2: Alfonso VI of León and Castile's grandchildren
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  ?alfonsoChild dbo:child ?grandparent .
  ?grandparent dbo:child ?child2 .

  # Step 3: Common child between William I and Alfonso VI
  FILTER (?child1 = ?child2)
  BIND(?child1 AS ?commonChild)

  # Step 4: Roger II of Sicily's parent's royal child
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?parent dbo:child ?roger .
  ?parent dbo:child ?royalParentChild .
  ?royalParentChild rdf:type dbo:Monarch .

  # Step 5: Common person between steps 3 and 4
  FILTER (?commonChild = ?royalParentChild)

  # Step 6: Father of the common child
  ?commonChild dbo:father ?father .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonMember WHERE {
  # Find Cavalera Conspiracy and its band members
  ?cavaleraConspiracy rdfs:label ""Cavalera Conspiracy""@en .
  ?cavaleraConspiracy dbo:bandMember ?member1 .

  # Find Nothing to Gein and its producers (organizations or groups)
  ?nothingToGein rdfs:label ""Nothing to Gein""@en .
  ?nothingToGein dbo:producer ?producer .
  FILTER (?producer rdf:type/(dbo:Organization|dbo:Group)) .

  # Find band members of the producer
  ?producer dbo:bandMember ?member2 .

  # Identify common member between Cavalera Conspiracy and producer's band members
  VALUES ?commonMember { ?member1 ?member2 }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find Vince Gilligan's award
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?gilligan foaf:name ""Vince Gilligan""@en .
  ?gilligan dbo:awardReceived ?award .
}

# Step 2: Find the birthplace of other awardees
PREFIX dbp-owl: <http://dbpedia.org/ontology/owl-s/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?award dbp-owl:someValuesFrom ?awardee .
  ?awardee dbo:birthPlace ?birthPlace .
}

# Step 3: Find Paulus Powell's birthplace region
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  ?powell foaf:name ""Paulus Powell""@en .
  ?powell dbo:birthPlace ?location .
  ?location dbo:administrativeRegion ?region .
}

# Step 4: Find the governor of that region
SELECT DISTINCT ?governor ?govBirthPlace WHERE {
  ?region dbo:governmentHead ?governor .
  ?governor dbo:birthPlace ?govBirthPlace .
}

# Step 5: Find Cece Bell's birthplace
SELECT ?birthPlace WHERE {
  ?bell foaf:name ""Cece Bell""@en .
  ?bell dbo:birthPlace ?birthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?birthPlace WHERE {
  ?barreras rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?barreras dbo:party ?party . }
  OPTIONAL { 
    ?barreras dbo:birthPlace ?place .
    FILTER (STRSTARTS(STR(?place), STR(<http://dbpedia.org/resource/Category:People_from>)))
  }
}

SELECT ?fatherParty WHERE {
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia dbo:father ?father .
  OPTIONAL { ?father dbo:party ?fatherParty . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Query for William Bayne's Military Force
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:militaryForce ?militaryForce .
}

# Query for the War Involving William Bayne
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:militaryConflict ?war .
}

# Query for the Commander of the 30th Regiment
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:commander ?commander .
}

# Query for the Military Force Associated with the Commander",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie ?actor WHERE {
  ?iliza rdfs:label ""Iliza Shlesinger""@en .
  ?iliza dbo:film ?movie .

  ?always rdfs:label ""Always""@en .
  ?always dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1989)
  ?always dbo:starring ?actor1 .

  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:award ?award .
  ?janusz dbo:spouse ?spouse .

  ?movie dbp:starring ?actor .
  FILTER(?actor = ?actor1 || ?actor = ?spouse)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ceciliaRenata dbo:father ?f1 .
  ?f1 rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?ferdinandIII dbo:father ?f2 .
  ?f2 rdfs:label ?childLabel .
  ?commander dbo:commandedBy ?ferdinandIII .
  ?event dbo:relatedEvent ?algerianWar .
  ?tvShow dbo:depicts ?algerianWar .
  ?militaryForce dbo:involvedIn ?algerianWar .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
   
SELECT DISTINCT ?shobhnaCountry ?tataWorkCountry WHERE {
  { 
    ?shobhna rdfs:label ""Shobhna Samarth""@en .
    ?shobhna dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Country ;
                rdfs:label ?shobhnaCountry .
  }
  
  {
    ?jamsetji rdfs:label ""Jamsetji Tata""@en .
    ?jamsetji dbo:occupation ?work .
    ?work dbo:country ?workCountry ;
          rdfs:label ?workLabel .
    FILTER(CONTAINS(LCASE(?workLabel), ""india""))
    BIND(?workCountry AS ?tataWorkCountry)
  }
}
```",4,6,5,2,2,2,2,9,0,0,22,0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the soccer player and manager born on 1979-11-03
SELECT ?player WHERE {
  ?player dbo:birthDate ""1979-11-03""^^xsd:date .
  ?player dbo:sport dbr:Soccer .
  ?player dbo:occupation dbr:Soccer_manager .
}

# Step 2: Find the athlete born on 1955-02-22
SELECT ?athlete WHERE {
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date .
  ?athlete dbo:sport ?sport .
}

# Step 3: Find films directed by Manuel Huerga and actors who are soccer players and athletes
SELECT ?actor WHERE {
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:actor ?actor .
  ?actor dbo:sport ?sport1 .
  FILTER(?sport1 = dbr:Soccer || ?sport1 = dbr:Athletics)
}

# Step 4: Find the team of the identified soccer player and manager",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Vince Gilligan's awards and nominations
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?gilligan dbo:name ""Vince Gilligan""@en .
  ?gilligan dbp:nominationOrAward ?award .
}

# Birthplace of the awardee
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?birthPlace WHERE {
  ?award dbo:recipient ?person .
  ?person dbo:birthPlace ?birthPlace .
}

# Paulus Powell's birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?powell dbo:name ""Paulus Powell""@en .
  ?powell dbo:birthPlace ?birthPlace .
}

# Governor of the region
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governor WHERE {
  ?region dbo:administrativeRegion ?birthPlace .
  ?region dbp:governmentHead ?governor .
  FILTER (isLiteral(?governor))
}

# Author of ""El Deafo""
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?author dbo:name ""Cece Bell""@en .
  ?author dbo:birthPlace ?birthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?hidekatsuWar ?enjiroBirthPlace ?koichiroWar WHERE {
  # Hashiba Hidekatsu's War
  ?hidekatsu rdfs:label ""Hashiba Hidekatsu""@en .
  ?hidekatsu dbo:militaryConflict ?hidekatsuWar .

  # Yamaza Enjirō's Birth Place
  ?enjiro rdfs:label ""Yamaza Enjirō""@en .
  ?enjiro dbo:birthPlace ?enjiroBirthPlace .

  # Koichirō's War Involvement
  ?koichiro rdfs:label ""Koichirō""@en .
  ?koichiro dbo:militaryConflict ?koichiroWar .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?quintana rdfs:label ""Anxo Quintana""@en .
  ?quintana dbo:office ?office .
  
  OPTIONAL { 
    ?office dbo:administration ?admin .
    ?admin dbo:country dbr:Spain ;
           dbo:party dbr:Spanish_Socialist_Workers'_Party .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?annBirthName ?actor ?spouse WHERE {
  # Step 1: Find Ann Sothern's birth name
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?annBirthName .

  # Step 2: Identify the actor from ""1,000 Dollars a Minute""
  ?film dbp:title ""1,000 Dollars a Minute""@en .
  ?film dbo:actor ?actor .

  # Step 3: Find landmark with elevation and ruling party
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
  ?landmark dbo:country ?country .
  ?country dbp:government ?government .
  ?government dbo:partyLeader ?rulingParty .

  # Step 4: Find the spouse who is a member of the ruling party
  ?spouse dbo:spouse ?annSothern ;
          dbo:spouse ?actor ;
          dbo:memberOf ?rulingParty .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find the producer of ""Lotus"" (R.E.M. song)
  ?lotus dbo:producer ?producer .

  # Step 2: Check if the producer is an organisation, band, and group
  ?producer rdf:type ?type .
  FILTER (
    (?type = dbo:Band || ?type = dbo:MusicalGroup || ?type = dbo:Organization) &&
    EXISTS { ?lotus rdfs:label ""Lotus""@en } .

  # Step 3: Find associated musical artists of the producer
  ?producer dbo:associatedBand ?associatedArtist .

  # Step 4: Identify writer(s) of ""No Alternative""
  ?noAlternative dbo:writer ?writer .
  FILTER EXISTS { ?noAlternative rdfs:label ""No Alternative""@en } .

  # Step 5: Find band members of the writer
  ?writer",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  # Author of El Deafo
  { 
    ?author rdfs:label ""Cece Bell""@en .
    ?author dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Governor of Virginia
  { 
    ?governor rdfs:label ""Glenn Youngkin""@en .
    ?governor dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Awardee associated with Vince Gilligan's work (Bryan Cranston)
  { 
    ?awardee rdfs:label ""Bryan Cranston""@en .
    ?awardee dbo:birthPlace ?birthPlace .
  }
}
```",7,8,8,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonAncestor WHERE {
  # Identify Na'od and his father
  ?naod rdfs:label ""Na'od""@en .
  ?naod dbo:father ?fatherOfNaod .

  # Identify Yeshaq I and his parent
  ?yeshaqI rdfs:label ""Yeshaq I of Ethiopia""@en .
  ?yeshaqI dbo:father ?parentOfYeshaqI .

  # Find the common ancestor who is royalty and an office holder
  ?commonAncestor dbo:child ?fatherOfNaod ;
                  dbo:child ?parentOfYeshaqI ;
                  a dbo:Monarch ;
                  dbo:officeHolder ?office .

  # Identify Lamont Cranston (The Shadow)
  ?lamont rdfs:label ""Lamont Cranston""@en .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Charles I of Hungary's father and his parent (royalty)
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?charlesIFather dbo:father ?charlesI .
  ?parentOfFather dbo:child ?charlesIFather .
  FILTER EXISTS { ?parentOfFather dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }

  # Philip I, Prince of Taranto's father and his spouse
  ?philipITaranto rdfs:label ""Philip I, Prince of Taranto""@en .
  ?fatherOfPhilipI dbo:father ?philipITaranto .
  ?spouseOfFather dbo:spouse ?fatherOfPhilipI .

  # Stephen V of Hungary's predecessor and their royal child
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:successor ?stephenV .
  ?royalChildOfPredecessor dbo:child ?predecessor .
  FILTER EXISTS { ?royalChildOfPredecessor dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }
  ?grandchild dbo:child ?royalChildOfPredecessor .

  # Find the common entity
  VALUES ?commonEntity {
    ?parentOfFather
    ?spouse",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office1, ?office2 WHERE {
  # Part 1: Office of the leader of Conservative Republican Party (Spain)
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
  ?leader dbo:leaderOf ?party ;
          dbo:positionHeld ?office1 .

  # Part 2: Office of the commander in the force of Manuel Pinto da Costa
  ?conflict dbo:commander ?manuel ;
            rdfs:label ?conflictLabel .
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  ?manuel dbo:positionHeld ?office2 .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?decedent WHERE {
  # Step 1: Find Sandro Bertaggia's birthplace and ensure it is a country
  ?sandro dbo:birthPlace ?birthPlace .
  FILTER (str(?sandro) = ""Sandro_Bertaggia"")
  ?birthPlace rdf:type dbo:Country .

  # Step 2: Find Alexander II's administration role and confirm his native status as Russian Empire
  ?alexander dbo:positionHeld ?administration .
  FILTER (str(?alexander) = ""Alexander_II,_Grand_Duke_of_Finland"")
  ?administration rdfs:label ""Grand Duke of Finland""@en .
  ?alexander dbo:nationality ?nationality .
  ?nationality rdfs:label ""Russian Empire""@en .

  # Step 3: Find a person decedent at Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?birthPlace .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  ?ackquille rdfs:label ""Ackquille Jean Pollard""@en .
  ?gs9 dbo:musicalArtist ?ackquille .
  ?award dbo:location ?newYorkState ;
         dbo:recipient ?awardeeBand .
  FILTER (CONTAINS(LCASE(STR(?newYorkState)), ""new york"") && CONTAINS(LCASE(STR(?newYorkState)), ""state"")) .
  ?awardeeBand a dbo:MusicalArtist .
  ?bandMember dbo:musicalArtist ?awardeeBand ;
              dbo:member ?awardeeBand .
}",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlace .

  # Find wars associated with Alexander Lvovich Davydov
  ?davydov rdfs:label ""Alexander Lvovich Davydov""@en .
  ?davydov dbo:participatedIn ?war .

  # Check if the birthplace entity is involved in any war
  OPTIONAL {
    ?birthPlace dbo:locationOf ?war .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  ?person dbo:leaderOf ?westGermany ;
          dbo:managesTeam ?vitesse2020_21 .
  
  ?player dbo:member ?club ;
          dbo:managedBy ?person .

  ?season dbo:succesor ?successorSeason .
  FILTER(?successorSeason = dbp:2007–08 VfL Bochum season) .

  ?person dbo:nativeCountry ?nativeCountry .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?birthplaceSofia ?birthplaceAlumnus WHERE {
  
  # Birthplace of the resident of Sofia
  ?resident dbo:residence _:sofiaResidence .
  _:sofiaResidence rdfs:label ""Sofia""@en .
  ?resident dbo:birthPlace ?birthplaceSofia .
  
  # Birthplace of the alumnus of Пловдивски университет ""Паисий Хилендарски""
  ?alumnus dbo:almaMater _:plovdivUniversity .
  _:plovdivUniversity rdfs:label ""Пловдивски университет \""Паисий Хилендарски\""""@bg .
  ?alumnus dbo:birthPlace ?birthplaceAlumnus .

}",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Query for the Battle of Fort Royal military forces
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?battle rdfs:label ""Battle of Fort Royal""@en .
  ?battle dbo:participatedIn ?event .
  ?event dbo:militaryForce ?force .
}

# Query for the awardee of Knight Commander of the Order of the Bath and their war
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?war WHERE {
  ?person dbo:title ""Knight Commander of the Order of the Bath""@en .
  ?person rdfs:label ?awardee .
  ?person dbo:commanderOf ?war .
  FILTER (isLiteral(?war))
}

# Query for The Triple X's military force
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?figure rdfs:label ""The Triple X""@en .
  ?figure dbo:militaryForce ?force .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ciara ?iceCube WHERE {
  ?ciara rdfs:label ""Ciara""@en .
  ?iceCube rdfs:label ""Ice Cube""@en .
  
  OPTIONAL { 
    ?collaboration dbo:musicalArtist ?ciara ;
                   dbo:musicalArtist ?iceCube .
  }
}
```",5,6,6,3,2,3,2,20,0,4,1,0.0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
# Query for The Golden Master Series Alter Ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?character dbo:partOfSeries ?series ;
             dbo:alterEgo ?alterEgo .
}

# Query for Smartbomb (Book) Author
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
}

# Query for ATL (Film) Actor
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""ATL""@en .
  ?film dbo:starring ?actor .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Mariclare Costello
  ?mariclareCostello rdfs:label ""Mariclare Costello""@en .
  
  # Step 2: Find her spouse
  ?mariclareCostello dbo:spouse ?spouse .

  # Step 3: Determine the child of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Identify the parent of this child
  ?parent dbo:parent ?child .
  
  # Step 5: Find the professional photographer among these parents
  ?parent rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""photographer"")) .

  # Step 6: Determine the work (movie) involving Herschel Bernardi and this photographer
  ?work dbo:starring ?herSchelBernardi, ?photographerParent .
  ?herSchelBernardi rdfs:label ""Herschel Bernardi""@en .
  ?photographerParent resource ?parent .

  # Step 7: Identify the actor of this movie
  ?work dbo:starring ?actor .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person rdfs:label ""Charles de Gaulle""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  OPTIONAL { ?parent dbo:child ?archduke . FILTER(?archduke = <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria>) }
  OPTIONAL { ?parent dbp:father ""Ferdinand II, Holy Roman Emperor""@en . }
}
```",7,10,8,3,3,3,3,71,0,2,1,0.0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist ?bandMemberBand ?kimWilsonBand ?realName WHERE {
  # Nicholas Michael Curran's associated musical artist
  ?curran rdfs:label ""Nicholas Michael Curran""@en .
  ?curran dbo:musicalArtist ?associatedArtist .

  # Band members of Eric Clapton and their bands
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?member dbo:bandMember ?clapton ;
          dbo:member ?bandMemberBand .

  # Kim Wilson's band and real name
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:band ?kimWilsonBand .
  ?kimWilson foaf:name ?realName .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find James Plotkin's associated musical artist
  ?plotkin dbo:associatedBand ?artist1 .
  
  # Step 2: Find Burnt by the Sun's associated musical artist
  ?burntByTheSun dbo:associatedBand ?artist2 .

  FILTER (str(?plotkin) = ""James Plotkin""^^xsd:string)
  FILTER (str(?burntByTheSun) = ""Burnt by the Sun""@en)

  # Step 3: Find a common band/group/organization
  ?commonGroup dbo:associatedBand ?artist1 ;
              dbo:associatedBand ?artist2 ;
              rdf:type dbo:MusicalArtist, dbo:Organization .

  # Step 4: Retrieve members of this common group
  ?commonGroup dbo:bandMember ?bandMember .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

# Step 1: Find Mariano Rajoy's office
SELECT ?office WHERE {
  ?marianoRajoy rdfs:label ""Mariano Rajoy""@en .
  ?marianoRajoy dbo:office ?office .
}

# Step 2: Identify Miguel Maura's political party
SELECT ?party WHERE {
  ?miguelMaura rdfs:label ""Miguel Maura""@en .
  ?miguelMaura dbo:partyAffiliation ?party .
}

# Step 3: Find the leader of Miguel Maura's party in 2003
SELECT ?leader WHERE {
  ?party dcterms:temporal ?time .
  FILTER (CONTAINS(str(?time), ""2003""))
  ?party dbo:leader ?leader .
}

# Step 4: Identify the tenant of the leader's residence
SELECT ?tenant WHERE {
  ?leader dbo:residence ?residence .
  ?residence dbo:tenant ?tenant .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?claudius rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  
  # Step 2: Find his child who is a parent to Mary Elphinstone
  ?child dbo:parent ?claudius ;
         dbo:spouse ?maryElphinstoneParent .

  ?maryElphinstone rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?maryElphinstone dbo:parent ?maryElphinstoneParent .

  # Step 3: Find William Gayner's birthplace
  ?williamGayner rdfs:label ""William Gayner""@en .
  ?williamGayner dbo:birthPlace ?birthPlace .
  
  # Ensure the birth place is both a region and a country
  ?birthPlace rdf:type dbp:Country ;
              rdf:type dbp:Region .

  # Step 4: Find the parent who matches all criteria
  ?parent dbo:nativePlace ?birthPlace ;
          (dbo:child|dbo:spouse) ?child .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
# Step 1: Identify Cecilia Renata of Austria's father
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?cecilia rdfs:label ""Cecilia Renata of Austria""@en .
  ?cecilia dbo:parent ?father .
}

# Step 2: Find the child of Cecilia Renata's father
SELECT ?child WHERE {
  ?father dbo:child ?child .
}

# Step 3: Identify Archduke Charles Joseph of Austria's parent
SELECT ?parent WHERE {
  ?charles rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?charles dbo:parent ?parent .
}

# Step 4: Find the child of Archduke Charles Joseph's parent
SELECT ?child WHERE {
  ?parent dbo:child ?child .
}

# Step 5: Determine the commander in the war associated with the 2nd Dragoon Regiment (France)
SELECT ?commander WHERE {
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
  ?regiment dbo:commander ?commander .
}

# Step 6: Find an entity that matches the description of a societal event, an event, and a television show
SELECT ?entity WHERE {
  ?entity rdf:type dbo:SocietalEvent ;
          rdf:type dbo:Event ;
          rdf:type dbo:TelevisionShow .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Antoine, Duke of Lorraine
  ?antoine rdfs:label ""Antoine, Duke of Lorraine""@en .
  
  # Step 2: Find Antoine's child who is a parent to Dorothea
  ?child dbo:parentOf ?dorothea ;
         dbo:childOf ?antoine .

  # Step 3: Identify Dorothea of Lorraine
  ?dorothea rdfs:label ""Dorothea of Lorraine""@en .
  
  # Step 4: Find the parent (royalty and noble) of Antoine's child
  ?parent dbo:childOf ?child ;
          a dbo:Monarch ; # Assuming Monarch implies royalty and nobility

  # Step 5: Retrieve the spouse of this parent
  ?parent dbo:spouse ?spouse .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?janet rdfs:label ""Janet Gaynor""@en .
  ?janet dbo:notableWork ?work .
  ?work rdf:type dbo:Film .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?party WHERE {
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia dbo:father ?father .
  ?father dbo:partyMember ?party .
  OPTIONAL { ?father dbp:country ""Colombia"" }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?nickCurran dbo:genre ?genre .
  ?nickCurran foaf:name ""Nick Curran"" .

  ?fabulousThunderbirds dbo:member ?kimWilson .
  ?fabulousThunderbirds foaf:name ""The Fabulous Thunderbirds"" .
  
  ?kimWilson foaf:name ""Kim Wilson"" .
  
  ?artist dbo:genre ?sharedGenre .
  FILTER(?sharedGenre = ?genre) .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .
}
```",2,2,3,1,2,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?joeyB a dbo:Musician ;
         foaf:name ""Joey B""@en ;
         rdfs:label ""Elorm Kabu Amenyah""@en .
  ?joeyB dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?iliza rdfs:label ""Iliza Shlesinger""@en .
  ?iliza dbo:film ?movie .
  ?movie rdf:type dbo:Film .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify GS9
  ?gs9 rdfs:label ""GS9""@en .
  
  # Step 2: Find a member of GS9 who is an artist and musical artist
  ?member dbo:member ?gs9 ;
          dbo:musicalArtist ?artistInfo ;
          dbp:occupation ?occupation .

  FILTER(CONTAINS(LCASE(?occupation), ""musician"") || CONTAINS(LCASE(?occupation), ""singer""))

  # Step 3: Find band members of this artist who are also musical artists
  ?member dbo:bandMember ?bandMember .
  ?bandMember dbo:musicalArtist ?bandArtistInfo .

  FILTER(CONTAINS(LCASE(?bandArtistInfo), ""musician"") || CONTAINS(LCASE(?bandArtistInfo), ""singer""))
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?persona ?band WHERE {
  { 
    ?nickCurran rdfs:label ""Nick Curran""@en .
    ?nickCurran dbo:birthName ?persona .
  }
  UNION
  {
    ?kimWilson rdfs:label ""Kim Wilson""@en .
    ?kimWilson dbo:memberOfBand ?band .
  }
  FILTER(?persona = ?band)
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?election rdfs:label ""Galician regional election, 2009""@en .
  ?office dbo:positionTitle ?title ;
          dbo:heldBy ?leader ;
          dbo:election ?election .
  FILTER CONTAINS(LCASE(?title), ""leader"")
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
# Step 1: Find the album of ""What You Know""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album WHERE {
  ?song rdfs:label ""What You Know""@en .
  ?song dbo:artist <http://dbpedia.org/resource/T.I._(rapper)> .
  ?song dbo:album ?album .
}

# Step 2: Find the author of ""Smartbomb""
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?author WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
}

# Step 3: Find movies where the author acted
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?movie WHERE {
  ?author dbo:actor ?movie .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:predecessor ?predecessor .

  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?sawMinHla dbo:child ?predecessor .

  ?father dbo:child ?myatHponePyo .
  ?spouse dbo:spouse ?father .
  ?spouse dbo:royalTitle ?title .
  
  FILTER(?predecessor = ?spouse)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?robertProfession ?shadowAlterEgo ?alterEgoProfession WHERE {
  # Find Robert Lamar Thompson's profession in singing
  ?robert rdfs:label ""Robert Lamar Thompson""@en .
  ?robert dbo:profession ?robertProfession .

  # Find The Shadow and their alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  
  # Get the profession or band of the alter ego
  OPTIONAL { ?alterEgo dbo:profession ?alterEgoProfession }
}
```",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?birthName WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:birthPlace ?place .
  ?place rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(?locationLabel), ""florida"") && LCASE(?locationLabel) != ""florida"")
  ?artist foaf:name ?birthName .
}
```",2,3,3,2,1,3,3,71,1,453,58,0.0022026431718061676,0.01694915254237288,0.0038986354775828462
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player ?team WHERE {
  # Step 1: Get Marcelo Sarmiento's birthdate
  ?marcelo a dbo:SoccerPlayer ;
           dbp:birthday ?birthday .

  FILTER (str(?marcelo) = ""Marcelo Sarmiento""^^xsd:string)

  # Step 2: Find soccer players and managers born on the same date
  ?player a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbp:birthday ?sameBirthday .
  
  FILTER (?birthday = ?sameBirthday)

  # Step 3: Get Juan Carlos Molina's team(s)
  ?juanCarlos a dbo:SoccerPlayer ;
              dbp:team ?team .

  FILTER (str(?juanCarlos) = ""Juan Carlos Molina""^^xsd:string)

  # Combine information
  BIND(?player AS ?soccerPerson)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?partyMember WHERE {
  
  # Step 1: Find the landmark with the specified elevation
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = 20.1168) .
  
  # Step 2: Determine the ruling party member associated with this location
  ?location dbo:locatedIn ?country .
  ?landmark dbo:location ?location .
  ?partyMember dbo:memberOf ?rulingParty .
  ?country dbo:rulingParty ?rulingParty .
  
  # Step 3: Identify the actor from '1,000 Dollars a Minute'
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  ?actor dbo:starring ?movie .
  
  # Step 4: Find the spouse of Harriette Arlene Lake
  ?harriette rdfs:label ""Harriette Arlene Lake""@en .
  ?spouse dbo:spouse ?harriette .
  
  # Combine information to find a common entity
  FILTER(?actor = ?spouse)
  FILTER(?partyMember = ?spouse)
}
",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?entity dbo:location dbr:New_York_(state) .
  ?entity dbo:award ?award .
  ?award dbo:country dbr:United_States .
  ?award dbo:type ?type .
  FILTER(CONTAINS(LCASE(?type), ""settlement""))
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?doon rdfs:label ""Doon Arbus""@en .
  ?doon dbo:parent ?parent .
}

SELECT ?professionParent WHERE {
  ?eugene dbo:occupation ?profession .
  ?profession rdfs:label ""Eugène Cattin""@en .
  ?profession rdfs:subClassOf ?professionParent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?band .
}

UNION

SELECT ?producerProfession WHERE {
  ?show rdfs:label ""Coke Studio Philippines""@en .
  ?show dbo:producer ?producer .
  ?producer dbo:profession ?producerProfession .
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?series rdfs:label ""Shelby Oaks""@en .
  ?series dbo:actor ?actor .
}

SELECT ?character ?actor WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:character ?character .
  ?character dbo:alterEgo ?alterEgo . # Assuming there's a property for alter ego
  ?character dbo:actor ?actor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Nicholas""@en .
  ?person foaf:familyName ""Curran""@en .
  ?person dbo:birthName ""Nicholas Michael Curran""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician"") || CONTAINS(LCASE(?occupation), ""singer"") || CONTAINS(LCASE(?occupation), ""artist""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?duke rdfs:label ""Duke Anthony Ulrich of Brunswick""@en .
  ?duke dbo:child ?child .
  OPTIONAL { ?child dbo:royalTitle ?title . }
  FILTER EXISTS { ?child dbo:royalTitle ?title }
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?philippAlbrecht dbo:child ?child .
  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .
  
  # Find children
  ?archduke dbo:child ?child .

  # For each child, find their children (grandchildren)
  ?child dbo:child ?grandchild .

  # Check if the grandchild has a royal title
  OPTIONAL { ?grandchild dbo:royalTitle ?title . }
  
  FILTER EXISTS { ?grandchild dbo:royalTitle ?title } .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?war WHERE {
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
  ?regiment dbo:participatedIn ?war .
  
  ?war rdf:type dbo:SocietalEvent ;
       rdf:type dbo:TelevisionShow .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?work dbo:author ?author ;
        a dbo:Book, dbo:WrittenWork ;
        dbo:country dbc:United_States .
  FILTER EXISTS { ?work rdfs:label ""Promise Me, Dad""@en }
}
```",3,7,4,2,2,3,2,20,0,0,1,0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeCountry WHERE {
  ?theodorHeuss rdfs:label ""Theodor Heuss""@en .
  ?theodorHeuss dbo:nationality ?nativeCountry .
}

SELECT DISTINCT ?manager ?nativeCountry WHERE {
  ?manager dbo:managedTeam [
    foaf:name ""SBV Vitesse""@en ;
    dbo:season ""2020–21""^^xsd:string
  ] .
  ?manager dbo:managedTeam [
    foaf:name ""VfL Bochum""@en
  ] .
  ?manager dbo:nationality ?nativeCountry .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?deathPlace WHERE {
  ?film rdfs:label ""Aladdin (1958 film)""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,2,3,28,4,5,0,0.4444444444444444,1.0,0.6153846153846153
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?movie rdfs:label ""7th Heaven""@en .
  ?movie dbo:producer ?producer .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  { 
    ?person rdfs:label ""Christopher Smith""@en .
    ?person dbo:associatedMusicalArtist ?artist .
  }
  UNION
  {
    ?person rdfs:label ""Joseph Badu""@en .
    ?person dbo:associatedMusicalArtist ?artist .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""The Campus Queen""@en .
  ?film dbo:actor ?actor .
}

UNION

SELECT ?associatedArtist WHERE {
  ?cynthia rdfs:label ""Cynthia Morgan""@en .
  ?cynthia dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Query for the mayor of the Duchy of Schleswig
SELECT ?mayor WHERE {
  ?office dbo:location dbr:Duchy_of_Schleswig .
  ?office dbo:officeHolder ?mayor .
}

# Query for Christian IX of Denmark's administration
SELECT ?position WHERE {
  dbr:Christian_IX dbo:positionHeld ?position .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?entity rdfs:label ""The Triple X's""@en .
  OPTIONAL { ?entity dbo:participatedIn ?war . }
  OPTIONAL { ?entity dbo:conflict ?war . }
  FILTER (isLiteral(?war) && regex(str(?war), ""War|Conflict"", ""i""))
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?carrie rdfs:label ""Carrie Johnson""@en .
  ?carrie dbo:spouse ?spouse .
}

SELECT ?birthName WHERE {
  ?john rdfs:label ""John Boxer""@en .
  ?john dbo:birthName ?birthName .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?war WHERE {
  VALUES ?awardLabel { ""25""@en ""Golden Sword for Bravery""@en }
  
  ?award rdfs:label ?awardLabel .
  OPTIONAL { ?award dbo:awardedFor ?war . FILTER (isLiteral(?war) = false) }
}
```",4,4,5,2,2,2,3,28,0,3,1,0.0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producerTomSawyer ?claimToFameLabel ?producerClaimToFame WHERE {
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  ?film rdfs:label ""The Adventures of Tom Sawyer""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)>)))
  ?film dbo:producer ?producerTomSawyer .

  # Claim to fame of Janet Gaynor that is a movie and a work
  ?gaynor rdfs:label ""Janet Gaynor""@en .
  ?claimToFame dbo:awardRecipient ?gaynor ;
               rdf:type dbo:Film .
  ?claimToFame rdfs:label ?claimToFameLabel .
  ?claimToFame dbo:producer ?producerClaimToFame .

}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?award ?war WHERE {
  ?entity dbo:awardedBy ?award .
  ?award rdfs:label ""Order of St. George, 4th class""@en ;
         dbp:number ""25""^^xsd:string .
  ?entity dbo:nationality <http://dbpedia.org/resource/Russian_Empire> .
  OPTIONAL { ?entity dbo:participatedInWar ?war . }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label ?birthPlace WHERE {
  { 
    ?person rdfs:label ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?author rdfs:label ""Cece Bell""@en .
    ?author dbo:birthPlace ?birthPlace .
  }
  
  # To include labels for clarity in results
  OPTIONAL { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```",3,3,4,2,2,3,3,71,1,2097152,0,4.76836930829558e-07,1.0,9.536734069124156e-07
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""High Society Blues""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?ferdinand2 rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?ferdinand2 dbo:child ?child .
  
  ?ferdinand3 rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?ferdinand3Child dbo:child ?ferdinand3ChildEntity .
  ?child dbo:parent ?ferdinand3ChildEntity .
}",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  # Identify Amasa Tracy and his birthplace
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Identify the Gillmore Medal awardee and their force
  ?gillmoreMedalAwardee rdfs:label ?awardeeLabel .
  ?gillmoreMedalAwardee dbo:militaryUnit ?force .

  # Find common wars involving both Amasa Tracy and the Gillmore Medal awardee
  ?tracy dbo:participatedInWar ?war .
  ?gillmoreMedalAwardee dbo:participatedInWar ?war .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?awardee ?war WHERE {
  ?award dbo:givenBy dbp:United_States_Congress .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?place .
  ?place rdfs:label ""Charleston, South Carolina""@en .
  OPTIONAL { ?awardee dbo:war ?war . }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?deGaulle rdfs:label ""Charles de Gaulle""@en .
  ?deGaulle dbo:spouse ?childOfFerdinandII .
  ?childOfFerdinandII dbo:parent ?ferdinandII .
  ?ferdinandII rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?deGaulle dbo:commanderInWar ?algerianWar .
  ?algerianWar rdfs:label ""Algerian War""@en .
  ?deGaulle dbo:fatherOf ?childOfFerdinandIII .
  ?childOfFerdinandIII dbo:parent ?ferdinandIII .
  ?ferdinandIII rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  OPTIONAL { ?deGaulle dbo:depictedIn ?tvShow . }
  OPTIONAL { ?deGaulle dbo:involvedIn ?societalEvent . }
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander ?successor ?writer ?greatTurkishWarCommander WHERE {
  
  # Step 1: Identify the commander in the Russo-Polish War who was also a politician or office holder.
  ?war dbo:participatedIn [ rdfs:label ""Russo-Polish War (1654–1667)""@en ] .
  ?commander dbo:commanderOf ?war ; 
             (dbo:officeHolder | dbo:politician) ?office .

  # Step 2: Find the successor of this commander.
  OPTIONAL { ?successor dbo:successorOf ?commander } .

  # Step 3: Reference works related to George Ducas and identify commanders from the Great Turkish War.
  ?ducas rdfs:label ""George Ducas""@en ; 
         dbo:writer ?writer .
  ?greatTurkishWarCommander dbo:commanderOf [ rdfs:label ""Great Turkish War""@en ] .

}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee ?force WHERE {
  ?event dbo:eventName ""Sinking of Prince of Wales and Repulse"" .
  ?event dbo:participant ?person .
  ?person dbo:awardReceived ?cbeAward .
  ?cbeAward rdfs:label ""Commander of the Order of the British Empire""@en .
  ?person dbo:militaryUnit ?force .
  
  OPTIONAL {
    ?event dbo:war ?war .
    ?war rdfs:label ""World War II""@en .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find actor in ""Dispatches from Elsewhere""
  ?series rdfs:label ""Dispatches from Elsewhere""@en .
  ?series dbo:actor ?actor .

  # Find alter ego of The Shadow (video game)
  ?shadowGame rdfs:label ""The Shadow (video game)""@en .
  ?shadowGame dbo:alterEgo ?alterEgo .
  
  # Check if the actor is related to the alter ego
  OPTIONAL { ?actor dbo:profession ?profession . FILTER(?profession = ?alterEgo) }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Identify $pacely by birth name
  ?person dbo:birthName ""$pacely"" .
  
  # Step 2: Find associated musical artists of $pacely
  ?person dbo:associatedMusicalArtist ?artist .

  # Step 3: Identify the writer of ""The Live Anthology""
  ?anthology dbr:The_Live_Anthology ;
            dbo:writer ?writer .

  # Step 4: Check if this writer is also a musical artist
  ?writer rdf:type dbo:MusicalArtist .
  
  # Step 5: Ensure the professional matches both criteria
  FILTER (?artist = ?writer)
  BIND(?writer AS ?professional)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(?place), ""west germany""))
}
```",1,1,2,1,1,3,3,71,0,0,5170,0,0.0,0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label ?position WHERE {
  VALUES (?name) { ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en ""Olaf I of Denmark""@en }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:positionHeld ?position . }
  
  SERVICE <http://dbpedia.org/sparql> {
    ?position rdfs:label ?positionLabel .
  }

  BIND(CONCAT(?name, "" ("", STR(?person), "")"") AS ?label)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""athlete""))
}
```",2,3,3,2,1,3,3,71,0,0,18,0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalChild WHERE {
  # Step 1: Identify the commander in the Siege of Mukha
  ?commander dbo:event ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .

  # Step 2: Find the parent (royalty) of the commander
  ?parent dbo:child ?commander .
  ?parent a dbo:Monarch .

  # Step 3: Identify the child of Baeda Maryam I
  ?baedaChild dbo:parent ?baedaMaryamI .
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .

  # Step 4: Find the father (royalty and office holder) of this child
  ?father dbo:child ?baedaChild .
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Step 5: Identify the parent of the person from step 4
  ?grandparent dbo:child ?father .

  # Step 6: Find the child of the royal parent from step 2
  ?finalChild dbo:parent ?parent .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonMember WHERE {
  # Step 1: Identify Ackquille Jean Pollard
  ?ackquille rdfs:label ""Ackquille Jean Pollard""@en .
  
  # Step 2: Find the associated musical artist
  ?ackquille dbo:associatedBand ?artist .

  # Step 3: Identify GS9 and its members who are artists and musicians
  ?gs9 rdfs:label ""GS9""@en .
  ?gs9Member dbo:memberOf ?gs9 ;
             a dbo:MusicArtist ;
             a dbo:Artist .

  # Step 4: Find the common band member
  ?artist dbo:associatedBand ?commonMember .
  FILTER (?commonMember = ?gs9Member)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?kiyosu dbp:name ""Kiyosu""@en .
  ?kiyosu dbo:timeZone ?timezone .
  ?region dbo:timeZone ?timezone .
  ?region dbp:country ""Japan"" .
  ?entity dbp:location ?region .
}
```",3,3,4,3,1,3,2,20,0,0,8916,0,0.0,0
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Amy Arbus and her parent
  ?amy rdfs:label ""Amy Arbus""@en .
  ?parent dbo:child ?amy ;
          dbo:deathPlace ?place .

  # Step 2: Check if the parent is a decedent at Los Angeles
  FILTER(CONTAINS(LCASE(STR(?place)), ""los angeles""))

  # Step 3: Retrieve works associated with this person
  ?parent dbo:work ?work .

  # Step 4: Filter these works to find movies
  ?work rdf:type dbo:Film .

  # Step 5: Find actors involved in the movie
  ?work dbo:starring ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?michał rdfs:label ""Michał Kazimierz Pac""@en .
  ?michał dbo:commanderOf ?war .
  FILTER (str(?war) = ""Great Turkish War"" || str(?war) = ""Austro-Turkish War (1683–1699)"" ) # DBpedia might use different labels for the same event
  ?michał dbo:succeededBy ?successor .
  
  OPTIONAL {
    ?successor dbo:officeHolder ?office .
    FILTER EXISTS { ?office rdfs:label ?officeLabel }
  }

  OPTIONAL {
    ?successor rdf:type dbo:Politician .
  }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
# Query for Sal Mineo's Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?salMineo rdfs:label ""Sal Mineo""@en .
  ?salMineo dbo:deathPlace ?deathPlace .
}

# Query for Actor of ""The Sky Ranger"" Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?deathPlace WHERE {
  ?film rdfs:label ""The Sky Ranger""@en .
  FILTER(YEAR(?film dbo:releaseDate) = 1928)
  ?film dbo:castMember ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?mitaka rdfs:label ""Mitaka""@en .
  OPTIONAL { ?mitaka dbo:wikiPageWikiLink ?reference . }
  OPTIONAL { ?mitaka dbo:wikiPageExternalLink ?reference . }
}
```",1,1,2,1,1,2,2,9,1,5,0,0.16666666666666666,1.0,0.2857142857142857
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?deathPlace WHERE {
  # For ""Color Me Dead""
  { 
    ?film rdfs:label ""Color Me Dead""@en .
    ?film dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  } UNION
  # For ""Aladdin (1958 film)""
  {
    ?film2 rdfs:label ""Aladdin (1958 film)""@en .
    ?film2 dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  }
}
```",4,4,5,2,2,2,3,28,1,12,0,0.07692307692307693,1.0,0.14285714285714288
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?harriette ?actor WHERE {
  # Find Harriette Arlene Lake
  ?harriette rdfs:label ""Harriette Arlene Lake""@en .
  
  # Check if she is a member of the ruling party in Central, Louisiana
  OPTIONAL { 
    ?harriette dbo:memberOf ?party .
    ?party dbp:location ""Central, Louisiana"" .
  }
  
  # Find actor of ""1,000 Dollars a Minute""
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
  
  # Check if Harriette is married to the actor
  ?harriette dbo:spouse ?actor .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?ebrahim rdfs:label ""Ebrahim Alkazi""@en .
  ?ebrahim dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?producer WHERE {
  ?cora rdfs:label ""Cora Sue Collins""@en .
  ?cora dbo:work ?work .
  ?work dbo:producer ?producer .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:award ?gillmoreMedal .
  
  FILTER EXISTS { ?gillmoreMedal rdfs:label ""Gillmore Medal""@en }
  
  ?person dbo:birthPlace ?birthplace .

  ?birthplace rdf:type ?type .
  FILTER (?type = dbp:Settlement || ?type = dbo:City || ?type = dbo:Town)

  OPTIONAL { 
    ?birthplace dbp:country ""United States""^^xsd:string .
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?maximilian rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  ?maximilian dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbo:alias ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shirley rdfs:label ""Shirley Stoler""@en .
  ?shirley dbo:profession ?profession .
}
```",2,2,3,2,1,3,2,20,0,0,19241,0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?christianIXAdmin ?olafIAdmin ?territory WHERE {
  
  # Administration of Christian IX of Denmark
  ?christian ix rdfs:label ""Christian IX of Denmark""@en .
  ?christian dbo:positionHeld ?adminPosition .
  ?adminPosition rdfs:label ?christianIXAdmin .

  # Administration of Olaf I of Denmark
  ?olafI rdfs:label ""Olaf I of Denmark""@en .
  ?olafI dbo:positionHeld ?adminPosition2 .
  ?adminPosition2 rdfs:label ?olafIAdmin .

  # Territory administered from Copenhagen
  ?copenhagen rdfs:label ""Copenhagen""@en .
  ?territory dbo:administrativeUnitOf ?copenhagen .
  ?territory rdfs:label ?adminTerritoryLabel .
}
",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse ?grandchild WHERE {
  # Find Charles II of Naples and his spouse
  ?charles rdfs:label ""Charles II of Naples""@en .
  ?charles dbo:spouse ?spouse .

  # Find Béla IV of Hungary and his children
  ?bela rdfs:label ""Béla IV of Hungary""@en .
  ?bela dbo:child ?child .

  # For each child, find their children (grandchildren)
  ?child dbo:child ?grandchild .

  # Filter grandchildren who are royalty
  ?grandchild dbo:royalTitle ?title .

  # Check for overlap between spouse of Charles II and royal grandchildren
  FILTER(?spouse = ?grandchild)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person rdfs:label ""Bill Clinton""@en .
  
  # Check for association with World War I
  OPTIONAL { ?person dbo:memberOf ?navy . 
             ?navy dbo:member ?war . 
             ?war rdfs:label ""World War I""@en }
  
  # Check authorship of the book ""Back to Work""
  OPTIONAL { ?book dbo:author ?person .
             ?book foaf:name ""Back to Work""@en }
  
  # Verify spouse relationship with Hillary Clinton
  OPTIONAL { ?person dbo:spouse ?hclinton . 
             ?hclinton rdfs:label ""Hillary Rodham Clinton""@en }
}
```",4,6,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?televisionSeries WHERE {
  ?actor rdfs:label ""Richard E. Grant""@en .
  ?actor dbo:actor ?role .
  ?role rdf:type dbo:TelevisionSeries .
  ?role rdfs:label ?televisionSeries .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  dbr:Bill_Clinton dbo:author ?book .
  ?book a dbo:Book .
  FILTER(CONTAINS(LCASE(?bookLabel), ""my life""))
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?greatGrandchild WHERE {
  # Step 1: Identify Alexander of Württemberg
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  
  # Step 2: Find his children
  ?alexander dbo:child ?child .

  # Step 3: Find his grandchildren
  ?child dbo:child ?grandChild .

  # Step 4: Find his great-grandchildren
  ?grandChild dbo:child ?greatGrandchild .

  # Step 5: Identify Archduchess Helena of Austria and her spouse
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?helena dbo:spouse ?spouse .

  # Step 6: Find the child of the spouse
  ?spouse dbo:child ?spouseChild .

  # Step 7: Find predecessor (likely sibling) of this child
  ?spouse dbo:child ?predecessor .
  FILTER(?predecessor != ?spouseChild)

  # Step 8: Ensure the",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?child dbo:childOf ?edward .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), 'politician') || CONTAINS(LCASE(STR(?occupation)), 'office holder')) .
  ?parent dbo:parentOf ?child .
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?parent dbo:parentOf ?victor .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?common WHERE {
  ?charles rdfs:label ""Charles II of Naples""@en .
  ?charles dbo:spouse ?spouse .

  ?stephen rdfs:label ""Stephen V of Hungary""@en .
  ?stephen dbo:child ?child .

  FILTER (?spouse = ?child)
  BIND(?spouse AS ?common)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?award a dbo:NobelPrizeInPhysics .
  ?award dbo:year ?year .
  ?person dbo:award ?award .
  ?person rdfs:label ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?maxBorn rdfs:label ""Max Born""@en .
  ?maxBorn dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?otherProfessional WHERE {
  ?frédéric rdfs:label ""Frédéric Bouraly""@en .
  ?frédéric dbo:profession ?profession .

  ?otherProfessional a dbo:Person ;
                    dbo:profession ?profession .
  FILTER(?otherProfessional != ?frédéric)
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  
  ?child dbo:parent ?sawShweKhet ;
         dbo:predecessor ?myatHponePyo ;
         rdf:type dbo:Monarch .

  ?royalFather dbo:child ?child ;
               rdf:type dbo:Monarch .

  ?royalFather dbo:spouse ?spouse .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession ?work WHERE {
  ?cora rdfs:label ""Cora Sue Collins""@en .
  ?cora dbo:profession ?profession .
  ?cora dbo:work ?work .
}

UNION

SELECT ?producer WHERE {
  ?film rdfs:label ""A Star Is Born (1937 film)""@en .
  ?film dbo:producer ?producer .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?party WHERE {
  VALUES (?name) { ""Gustavo Petro""@en ""Roy Barreras""@en }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:birthPlace ?place . FILTER (langMatches(lang(?place), ""en"") && contains(str(?place), ""India"")) }
  OPTIONAL { ?person dbo:nationality ?nationality . FILTER (langMatches(lang(?nationality), ""en"") && str(?nationality) = ""Indian"") }
  ?person rdfs:label ?label .
  FILTER (langMatches(lang(?label), ""en""))
}
LIMIT 1
```",1,1,2,1,1,2,2,9,0,2,8977,0.0,0.0,0
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?actor rdfs:label ""Herschel Bernardi""@en .
  ?actor dbo:starring ?movie .
}
```",2,3,3,2,1,3,3,71,0,0,67,0,0.0,0
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?margareteChild ?philippChild ?alexanderGreatGrandchild (CASE WHEN ?margareteChildBirthYear < ?philippChildBirthYear THEN ?margareteChild ELSE ?philippChild END AS ?predecessor) WHERE {
  
  # Find the child of Archduchess Margarete Sophie of Austria
  ?margarete rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  ?margarete dbo:child ?margareteChild .
  ?margareteChild dbo:birthYear ?margareteChildBirthYear .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  ?philipp rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?philipp dbo:child ?philippChild .
  ?philippChild dbo:birthYear ?philippChildBirthYear .

  # Find the great-grandchild of Alexander of Württemberg (1804-1881)
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  ?alexander dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .
  ?alexander dbo:child ?alexanderChild1 .
  ?alexanderChild1 dbo:child ?alexanderChild2 .
  ?alexanderChild2 dbo:child ?alexanderGreatGrandchild .

}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office ?country WHERE {
  ?person rdfs:label ""Alberto Núñez Feijóo""@en .
  ?person dbo:nationality dbr:Spain .

  ?person dbo:positionHeld ?position .
  ?position dbo:title ?office .

  ?person dbo:residence ?residence .
  ?residence dbo:country ?country .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  ?work dbo:author ?laoShe .
  ?laoShe rdfs:label ""Lao She""@en .
  ?work dbo:country ?country .
}

SELECT ?birthPlace WHERE {
  ?winston rdfs:label ""Winston Chang""@en .
  ?winston dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryConflict ?societalEvent WHERE {
  ?event rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  
  OPTIONAL { 
    ?event dbo:participatedIn ?militaryConflict .
  }
  
  OPTIONAL {
    ?event ?property ?societalEvent .
    FILTER (regex(str(?property), ""event|impact""))
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alumnus ?birthplaceAlumnus WHERE {
  ?university rdfs:label ""Plovdiv University 'Paisii Hilendarski'""@en .
  ?alumnus dbo:alumniOf ?university .
  ?alumnus dbo:birthPlace ?birthplaceAlumnus .
}

UNION

SELECT ?reneta ?birthplaceReneta WHERE {
  ?reneta rdfs:label ""Reneta Kamberova""@en .
  ?reneta dbo:birthPlace ?birthplaceReneta .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event rdfs:label ""Siege of Padua""@en .
  ?event dbo:commander ?commander .
  ?commander rdf:type dbo:Monarch .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?david rdfs:label ""David Luckman""@en .
  ?david dbo:residence ?residence .
  ?native dbo:nativePlace ?residence .
}
```",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?father dbo:child ?ceciliaRenata .
  ?father dbo:child ?eleonoreAustria .
  
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?eleonoreAustria rdfs:label ""Eleonore of Austria, Queen of Poland""@en .

  ?war dbo:participatedIn ?commander ;
       a dbo:SocietalEvent ;
       a dbo:Event ;
       dbo:depicts ?tvShow .

  ?tvShow rdf:type dbo:TelevisionSeries .
  
  ?commander dbo:militaryUnit <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find The Shadow video game
  ?game rdfs:label ""The Shadow (video game)""@en .
  
  # Link to the comics character
  ?game dbo:basedOn ?comicsCharacter .

  # Identify television show based on this comics character
  ?tvShow dbo:basedOn ?comicsCharacter ;
          dbo:actor ?castMember .

  # Check if Richard E. Grant is an actor in this TV show
  ?castMember rdfs:label ""Richard E. Grant""@en .
  
  # Find other actors in the same television show
  ?tvShow dbo:actor ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?show rdfs:label ""Dispatches from Elsewhere""@en .
  ?show dbo:castMember ?actor .
  ?actor dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""actor""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?incident rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  ?incident dbo:partOf ?war .
}
```",3,5,4,3,1,3,2,20,0,0,12,0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?singer rdfs:label ""Singer""@en .
  ?singer dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfParent WHERE {
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?parent dbo:child ?minHlaHtut .
  
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?spouse dbo:spouse ?sawShweKhet .
  
  ?child dbo:parent ?spouse .
  
  ?predecessor dbo:succeededBy ?child .
  
  BIND(?parent AS ?childOfParent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonArtist WHERE {
  # Find Elorm Kabu Amenyah's musical artist identity
  ?elorm rdfs:label ""Elorm Kabu Amenyah""@en .
  ?elorm dbo:musicalArtist ?artist1 .

  # Find Darryl Paa Kwesi Bannerman-Martin's writer role and check if he is a musical artist
  ?darryl rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?darryl dbo:work <http://dbpedia.org/resource/The_Live_Anthology> ;
          dbo:musicalArtist ?artist2 .

  # Find the common musical artist
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?chappaqua rdfs:label ""Chappaqua, New York""@en .
  ?person dbo:residence ?chappaqua .
  OPTIONAL { ?person dbo:officeHolder ?office . }
  FILTER EXISTS { ?person dbo:officeHolder ?office } 
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?royaltyChild WHERE {
  ?lamont rdfs:label ""Lamont Cranston""@en .
  ?lamont dbo:fictionalAlterEgo ?alterEgo .

  ?yeshaq rdfs:label ""Yeshaq I, Emperor of Ethiopia""@en .
  ?child dbo:childOf ?yeshaq ;
         a dbo:Monarch .

  FILTER(?alterEgo = ?royaltyChild)
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?fellowship rdfs:label ""Sangeet Natak Akademi Fellowship""@en .
  ?awardee dbo:award ?fellowship .
  ?awardee dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
# Step 1: Identify Nicholas Michael Curran as a musical artist
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?curran WHERE {
  ?curran rdfs:label ""Nicholas Michael Curran""@en .
  ?curran dbo:birthName ""Nicholas Michael Curran"" .
  ?curran a dbo:MusicalArtist .
}

# Step 2: Find associated musical artist with Nicholas Michael Curran
SELECT ?associatedArtist WHERE {
  ?curran dbo:associatedBandMember ?associatedArtist .
  FILTER(?curran = <CURRAN_URI>) # Replace CURRAN_URI with the actual URI found in step 1
}

# Step 3: Identify real name of The Fabulous Thunderbirds
SELECT ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:birthName ?realName .
}

# Step 4: Find band member associated with both Eric Clapton and The Fabulous Thunderbirds
SELECT DISTINCT ?member WHERE {
  ?member dbo:bandMember <THUNDERBIRDS_URI> . # Replace THUNDERBIRDS_URI with the actual URI found in step 3
  ?member dbo:bandMember ?claptonBand .
  ?claptonBand rdfs:label ""Eric Clapton""@en .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?force WHERE {
  # Part 1: Quincy Adams Gillmore's Award and Force
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:receivedAward ?award .
  
  OPTIONAL { 
    ?award dbo:associatedWith ?force .
  }
}

UNION

SELECT ?show ?war WHERE {
  # Part 2: United States Congress Award/Show and War
  ?congress rdfs:label ""United States Congress""@en .
  ?congress dbo:awards ?show .
  
  OPTIONAL { 
    ?show dbo:associatedWith ?war .
  }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residenceCountry ?office WHERE {
  ?alvaroQuirós rdfs:label ""Álvaro Quirós""@en .
  
  # Find the country of residence
  OPTIONAL { 
    ?alvaroQuirós dbo:residence ?residence .
    ?residence dbo:country ?residenceCountry .
  }
  
  # Find his office during the 2009 Galician regional election
  OPTIONAL {
    ?alvaroQuirós dbo:office ?office .
    FILTER (CONTAINS(LCASE(STR(?office)), ""galician regional election 2009""))
  }

  # Identify tenant of Santiago de Compostela
  OPTIONAL {
    ?santiagoDeCompostela rdfs:label ""Santiago de Compostela""@en .
    ?santiagoDeCompostela dbo:mayor ?tenant .
    FILTER (?tenant = ?alvaroQuirós)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath ;
          dbo:commanderInMilitaryConflict ?conflict .
  
  ?regiment dbo:militaryConflict ?conflict ;
            rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .

  ?battle dbo:name ""Battle of Fort Royal""@en ;
          dbo:participated ?militaryForce .

  FILTER(?person = ?commander)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author1, ?work2, ?author2 WHERE {
  # Part 1: Author of ""Promises to Keep"" by Joe Biden
  ?book rdfs:label ""Promises to Keep""@en .
  ?book dbo:author ?author1 .

  # Part 2: Written work by the commander in the Korean conflict
  ?officeHolder dbo:positionTitle ?title ;
               dbo:country ?country .
  FILTER(?title = ""Commander"" && ?country = dbpedia:Korea)
  
  ?work2 dbo:creator ?officeHolder ;
         a dbo:CreativeWork .

  OPTIONAL {
    ?work2 dbo:author ?author2 .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?edmund rdfs:label ""Edmund Hakewill-Smith""@en .
  ?edmund dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?force WHERE {
  ?person dbo:recipientOfOrder ""Knight Commander of the Order of the Bath"" .
  ?person dbo:memberOf ?force .
  
  ?event rdf:type dbo:Event ;
         dbo:associatedForce ?force .
  
  ?societalEvent rdf:type dbo:SocietalEvent ;
                 rdfs:subClassOf+ dbo:Event ;
                 dbo:associatedForce ?force .
}
```",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?humanRemainsMember ?associatedArtist ?khlystMember WHERE {
  # Find members of Human Remains
  ?band rdfs:label ""Human Remains (band)""@en .
  ?band dbo:bandMember ?humanRemainsMember .

  # Find associated musical artists for each member of Human Remains
  ?humanRemainsMember dbo:associatedBand ?associatedArtist .
  
  # Ensure the associated artist is a recognized musical artist
  ?associatedArtist rdf:type dbo:MusicalArtist .

  # Find members of Khlyst
  ?khlyst rdfs:label ""Khlyst (band)""@en .
  ?khlyst dbo:bandMember ?khlystMember .

  # Find associated musical artists for each member of Khlyst
  ?khlystMember dbo:associatedBand ?artistFromKhlyst .

  # Ensure the artist from Khlyst is a recognized musical artist
  ?artistFromKhlyst rdf:type dbo:MusicalArtist .

  # Check if there's an overlap in associated artists
  FILTER (?associatedArtist = ?artistFromKhlyst)
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingDate WHERE {
  ?university rdfs:label ""Federal University of Paraíba""@en .
  ?university dbo:foundingDate ?foundingDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tripleXsMilitaryForce, ?bayneMilitaryForce WHERE {
  ?tripleXs rdfs:label ""The Triple X's""@en .
  ?war1 dbo:commander ?tripleXs ;
        a dbo:MilitaryConflict .
  ?war1 dbo:militaryForce ?tripleXsMilitaryForce .

  ?bayne rdfs:label ""William Bayne""@en .
  ?war2 dbo:commander ?bayne ;
        a dbo:MilitaryConflict .
  ?war2 dbo:militaryForce ?bayneMilitaryForce .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?birthPlaceEntity WHERE {
  # Part 1: Find the war Karl Gustav von Baggovut participated in
  ?karl rdfs:label ""Karl Gustav von Baggovut""@en .
  ?karl dbo:participatedIn ?war .

  # Part 2: Find the birthplace of Elena Žalinkevičaitė-Petrauskienė and an entity associated with it
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlace .

  # Find an entity related to the birthplace
  ?birthPlaceEntity rdf:type dbo:Place .
  ?birthPlaceEntity rdfs:label ?label .
  FILTER(?birthPlace = ?birthPlaceEntity)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""music"") || CONTAINS(LCASE(str(?occupation)), ""artist""))
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?actor dbo:occupation ?occupation .
  ?occupation rdfs:label ""Actor""@en .
}
```",1,1,2,1,1,3,3,71,1554,8062,20026,0.16160565723793677,0.07201112140871177,0.09962815745608411
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Commander of the Royal Victorian Order""@en .
  ?person dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,2,1,0.0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""Prince Omar bin Faisal""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,1,1,0.5,0.5,0.5
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?martin rdfs:label ""Martin of Aragon""@en .
  ?martin dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonFather WHERE {
  # Ferdinand III and his child
  ?ferdinand rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?ferdinand dbo:child ?child1 .

  # Maria Anna of Bavaria (born 1574) and her child
  ?maria rdfs:label ""Maria Anna of Bavaria (1574)""@en .
  ?maria dbo:child ?child2 .
  
  # Father of Maria Anna's child
  ?maria dbo:spouse ?fatherOfChild2 .

  # Ensure the father is royalty
  ?fatherOfChild2 rdf:type dbo:Monarch .

  # Find commonality in their children
  ?child1 rdfs:label ?commonFatherLabel .
  ?child2 rdfs:label ?commonFatherLabel .
  
  FILTER (lang(?commonFatherLabel) = ""en"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?bristol rdfs:label ""Bristol""@en .
  ?person dbo:birthPlace ?bristol .
}
```",1,1,2,1,1,2,2,9,971,0,0,1.0,1.0,1.0
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant ?event WHERE {
  ?quintana rdfs:label ""Anxo Quintana""@en .
  ?quintana dbo:leader ?administration .
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .
  ?administration a dbo:Government ;
                  ?tenantProperty ?tenant .
  ?event dbo:leader ?quintana ;
         a dbo:Event .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?party dbo:country dbr:Spain .
  ?party dbo:memberOfParliament ?adminRole .
  ?adminRole dbo:headOfGovernment ?administration .
}
```",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?rodney rdfs:label ""Rodney Lees""@en .
  
  # Find awards associated with Rodney Lees
  ?award dbo:recipient ?awardee .
  ?rodney dbo:award ?award .

  # Find parents of the awardee(s)
  ?awardee dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?award rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:nationality ?nationality .
  ?nationality rdfs:label ""Japan""@en .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?child dbo:parent ?philippAlbrecht ;
         dbo:parent ?margareteSophie ;
         dbo:parent ?albrechtWuerttemberg .

  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?albrechtWuerttemberg rdfs:label ""Albrecht, Duke of Württemberg""@en .

  ?child dbo:predecessor ?predecessor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?margareteSophie dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""El Deafo""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?war ?societalEvent WHERE {
  # Step 1: Identify ""The Triple X's""
  ?tripleX rdfs:label ""The Triple X's""@en .
  
  # Step 2: Find the military force associated with ""The Triple X's""
  ?tripleX dbo:militaryForce ?militaryForce .

  # Step 3: Identify wars where they were a commander
  ?war dbo:commander ?commander ;
       rdf:type dbo:MilitaryConflict .
  
  # Linking the military force to the war
  ?militaryForce dbo:participatedIn ?war .

  # Step 4: Find individuals awarded Knight Commander of the Order of the Bath
  ?awardee dbp:knightCommanderOfTheOrderOfTheBath true ;
          dbo:award ?orderAward .
  
  # Linking to societal events
  ?societalEvent dbo:relatedTo ?awardee ;
                 rdf:type dbo:SocietalEvent .

  # Step 5: Ensure the military force is linked to the societal event
  ?militaryForce dbo:participatedIn ?societalEvent .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?fellowship rdfs:label ""Sangeet Natak Akademi Fellowship""@en .
  ?fellowship dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?director ?producer WHERE {
  ?film rdfs:label ""The Adventures of Tom Sawyer (1938 film)""@en .
  ?film dbo:director ?director .
  ?film dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?na'od rdfs:label ""Na'od""@en .
  ?na'od dbo:father ?father .
  ?father dbo:father ?grandfather .
  OPTIONAL { ?grandfather dbo:royalTitle ?title . }
  OPTIONAL { ?grandfather dbo:officeHolder ?office . }
  FILTER (?title || ?office)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?alexander2 rdfs:label ""Alexander II, Grand Duke of Finland""@en .
  ?alexander2 dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?album WHERE {
  ?sappy rdfs:label ""Sappy""@en .
  ?sappy rdf:type dbo:Album ;
         dbo:musicalWork ?musicalWork ;
         rdf:type ?type .
  FILTER (?type = dbo:Album)
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?phantomsmasher rdfs:label ""Phantomsmasher""@en .
  ?phantomsmasher dbo:associatedBand ?associatedArtist ;
                  dbo:collaborator ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .
  ?philipp dbo:child ?child .
  ?child dbo:child ?grandchild .
}
LIMIT 1
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?victor rdfs:label ""Victor Saville""@en .
  ?victor dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?spouse WHERE {
  { 
    ?roger rdfs:label ""Roger Pryor (actor)""@en .
    ?roger dbo:spouse ?spouse .
    BIND(?roger AS ?person)
  }
  UNION
  {
    ?ann rdfs:label ""Anne Pershing""@en .
    ?ann dbo:spouse ?spouse .
    BIND(?ann AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?eleonora rdfs:label ""Eleonora Menicucci""@en .
  ?eleonora dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?otherAward WHERE {
  ?nobelPrize a dbo:NobelPrizeInPhysics .
  ?nobelPrize dbo:awardee ?awardee .
  ?awardee dbo:award ?otherAward .
}
```",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?musicalArtist WHERE {
  # Step 1: Identify Bob Thompson (musician) and his birth name
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  
  # Step 2: Find the producer of Coke Studio Philippines
  ?producer dbo:profession dbr:Coke_Studio_Philippines ;
            dbo:band ?band .

  # Step 3: Identify a musical artist in that band
  ?musicalArtist dbo:memberOfBand ?band ;
                 rdf:type dbo:MusicalArtist .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?glenn rdfs:label ""Glenn Youngkin""@en .
  ?glenn dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  { 
    ?movie rdfs:label ""Paradise (2013 film)""@en .
    ?movie dbo:starring ?actor .
  }
  UNION
  {
    ?movie rdfs:label ""Always (1989 film)""@en .
    ?movie dbo:starring ?actor .
  }
}
```",2,2,3,1,2,2,3,28,1,10,0,0.09090909090909091,1.0,0.16666666666666669
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?yeshaq ?zaraYaqob ?naod WHERE {
  ?yeshaq rdfs:label ""Yeshaq I""@en .
  ?yeshaq dbo:parent ?zaraYaqob .
  ?zaraYaqob rdfs:label ""Zara Yaqob""@en .
  
  ?yeshaq dbo:child ?naod .
  ?naod rdfs:label ""Na'od (emperor)""@en .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?amyParent ?allanChild ?childParent ?movie WHERE {
  # Amy Arbus's parent
  ?amy a dbo:Person ;
       rdfs:label ""Amy Arbus""@en .
  ?amy dbo:parent ?amyParent .

  # Allan Arbus's child and that child's parent
  ?allan a dbo:Person ;
         rdfs:label ""Allan Arbus""@en .
  ?allan dbo:child ?allanChild .
  ?allanChild dbo:parent ?childParent .

  # Herschel Bernardi's movie role
  ?herb a dbo:Person ;
        rdfs:label ""Herschel Bernardi""@en .
  ?herb dbo:actedIn ?movie .
  ?movie rdf:type dbo:Film .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Step 2: Find his children who are politicians
  ?child dbo:childOf ?edward ;
         a dbo:Politician .

  # Step 3: Identify Frederick Stanley among these children
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  FILTER (?child = ?frederick)

  # Step 4: Find Frederick's children who are politicians
  ?grandchild dbo:childOf ?frederick ;
              a dbo:Politician .

  # Step 5: Retrieve the parent of this child
  ?parent dbo:spouse ?grandchild .
  
  # Step 6: Check if this parent is both a politician and an office holder
  ?parent a dbo:Politician ;
          dbo:officeHolder ?office .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?event ?office WHERE {
  ?anxo rdfs:label ""Anxo Quintana""@en .
  ?event dbo:leader ?anxo ;
         a dbo:Event .
  OPTIONAL { ?event dbp:office ?office . }
}
```",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?mariaAnna rdfs:label ""Maria Anna of Bavaria (1574–1616)""@en .
  ?child dbo:parent ?mariaAnna ;
         rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?father dbo:spouse ?mariaAnna ;
          dbo:child ?child .
  ?father dbo:occupation ?commanderRole .
  FILTER(CONTAINS(LCASE(STR(?commanderRole)), ""commander"") && CONTAINS(LCASE(STR(?father)), ""royalty""))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentBirthName WHERE {
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .
  ?parent rdfs:label ?parentBirthName .
}
```",2,2,3,2,1,3,3,71,0,2,3,0.0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office ?residence WHERE {
  ?miguel rdfs:label ""Miguel Maura""@en .
  OPTIONAL { ?miguel dbo:officeHeld ?office . }
  OPTIONAL { ?miguel dbp:residence ?residence . FILTER(CONTAINS(LCASE(STR(?residence)), ""madrid"")) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?kate rdfs:label ""Kate Dimbleby""@en .
  ?kate dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?patrick rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?patrick dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .

  # Step 2: Find the birth name of Tisha Sterling's parent
  ?parent dbo:birthName ?birthName .

  # Step 3: Identify the actor of ""1,000 Dollars a Minute""
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  ?movie dbo:actor ?actor .

  # Step 4: Find the spouse of that actor
  ?actor dbo:spouse ?spouse .

  # Step 5: Ensure both identified persons are the same
  FILTER (?birthName = ?spouse)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Baeda Maryam I and one of his children
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?childOfBaeda dbo:child ?baedaMaryamI .

  # Step 2: Identify Yeshaq I, find one of his children who is a royalty, and their parent
  ?yeshaqI rdfs:label ""Yeshaq I""@en .
  ?royalChildOfYeshaq dbo:child ?yeshaqI .
  ?parentOfRoyalChild dbo:child ?royalChildOfYeshaq .
  
  # Ensure the child of Yeshaq is a royalty
  ?royalChildOfYeshaq dbo:royalTitle ?title .

  # Step 3: Find fathers of both identified children
  ?fatherOfChildOfBaeda dbo:father ?childOfBaeda .
  ?fatherOfParentOfRoyalChild dbo:father ?parentOfRoyalChild .

  # Step 4: Check if these two fathers are the same or have a connection
  FILTER (?fatherOfChildOfBaeda = ?fatherOfParentOfRoyalChild)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfParent WHERE {
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:child ?child1 .
  ?child1 dbo:parent ?parent .
  ?parent dbo:child ?grandChild .

  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .
  ?sawShweKhet dbo:child ?child2 .
  ?child2 dbo:predecessor ?predecessor .

  FILTER(?grandChild = ?predecessor)
  BIND(?parent AS ?childOfParent)
}",6,6,7,3,3,3,3,71,0,2,1,0.0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""Stone Sour""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?georgeDucas ?successor ?militaryForce ?commander WHERE {
  # Find George Ducas in the Russo-Polish War
  ?georgeDucas rdfs:label ""George Ducas""@en .
  ?georgeDucas dbo:participatedInBattle ?battle .
  ?battle dbp:name ""Russo-Polish War (1654–1667)""@en .

  # Find his successor as a commander who is a politician and office holder
  ?successor dbo:succeededBy ?georgeDucas ;
             rdf:type dbo:Politician ;
             dbo:officeHolder true .

  # Identify the military force at the Battle of Vienna and its commander
  ?battle2 dbp:name ""Battle of Vienna""@en .
  ?militaryForce dbo:commander ?commander ;
                 dbo:participatedInBattle ?battle2 .
  
  # Ensure the commander is linked to a TV show and societal event
  ?commander dbo:associatedWith ?tvShow ;
             dbo:relatedToSocietalEvent true .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child dbo:childOf ?sawShweKhet ;
         rdf:type dbo:Monarch .
  ?spouse dbo:spouse ?sawShweKhet .
  ?predecessor dbo:predecessor ?spouse ;
               rdf:type dbo:Monarch .

  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?childOfSawMinHla dbo:childOf ?sawMinHla ;
                   rdf:type dbo:Monarch .
  FILTER (?predecessor = ?childOfSawMinHla)
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  OPTIONAL { ?person dbo:memberOfParty ?party . }
  FILTER (
    EXISTS { ?party rdfs:label ""Republican Party (United States)""@en } ||
    EXISTS { ?party dbp:name ""Republican Party""@en }
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office ?residence WHERE {
  # Anxo Quintana's office related to an administration event
  ?anxo rdfs:label ""Anxo Quintana""@en .
  ?anxo dbo:positionHeld ?event .
  ?event dbo:office ?office .

  # Álvaro Quirós's residence that is a country
  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  ?alvaro dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?bruno rdfs:label ""Bruno Retailleau""@en .
  ?bruno dbo:party ?party .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?aisha rdfs:label ""Princess Aisha bint Faisal""@en .
  ?aisha dbo:parent ?parent .
  OPTIONAL { ?parent dbo:royaltyTitle ?title . FILTER EXISTS { ?title } }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?film rdfs:label ""Storm in a Teacup""@en .
  ?film dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?jeanBaptistRoleInShow ?michaPacSuccessor WHERE {
  # Find Jean Baptist, Comte d'Arco's role in a TV show
  ?jeanBaptist dbo:role ?jeanBaptistRoleInShow .
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .

  # Find Michał Kazimierz Pac and his successor
  ?michaPac dbo:commanderOf ?conflict .
  ?michaPac rdfs:label ""Michał Kazimierz Pac""@en .
  ?successor dbo:succeededBy ?michaPac .
  
  FILTER(?jeanBaptistRoleInShow = ?successor)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  
  # Assuming there's a property linking the series to its professional character and alter ego
  ?series dbo:character ?professional .
  ?professional foaf:name ?alterEgo .

  # Find movies where this alter ego appears
  ?movie dbo:starring ?professional .
  
  # Get the actor who plays this role
  ?actor dbo:role ?professional ;
         foaf:name ?actorName .
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager ?player ?club WHERE {
  # Step 1: Identify the manager of SBV Vitesse for the 2020-21 season
  ?vitesseSeason dbo:team ""SBV Vitesse""@en ;
                 dbo:seasonStartYear ?startYear ;
                 dbo:seasonEndYear ?endYear .
  FILTER (?startYear = 2020 && ?endYear = 2021)
  
  ?vitesseSeason dbo:manager ?manager .",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?yeshaq rdfs:label ""Yeshaq I""@en .
  ?yeshaq dbo:child ?yeshaqEntity .
  ?yeshaqEntity dbo:parent ?parent .
  ?parent a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?joeyb WHERE {
  ?joeyb rdfs:label ""Joey B""@en .
}

SELECT ?associatedArtist WHERE {
  ?elorm rdfs:label ""Elorm Kabu Amenyah""@en .
  ?elorm dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?profession .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  { 
    ?series rdfs:label ""Dispatches from Elsewhere""@en .
    ?series dbo:castMember ?actor .
  }
  UNION
  {
    ?game rdfs:label ""The Shadow (video game)""@en .
    ?game dbo:character ?shadowCharacter .
    ?shadowCharacter dbo:profession ?alterEgo .
    ?actor rdfs:label ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Mitaka""@en .
  OPTIONAL { ?entity dbo:partOf ?tokyo . }
  FILTER(CONTAINS(LCASE(STR(?tokyo)), ""tokyo""))
  ?entity rdfs:label ?label .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?native WHERE {
  ?film rdfs:label ""Storm in a Teacup""@en .
  ?film dbo:producer ?producer .
  ?producer dbo:birthPlace ?birthPlace .
  ?person dbo:nativeOf ?birthPlace .
  ?person rdfs:label ?native .
}
```",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?club ?nickname WHERE {
  ?denis rdfs:label ""Denis Kolodin""@en .
  ?denis dbo:associatedWith ?club .
  ?club a dbo:SoccerClub .
  OPTIONAL { ?club dbo:nickname ?nickname } .
}",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalEntity WHERE {
  # Step 1: Identify Saw Shwe Khet and his spouse
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .

  # Step 2: Identify Min Hla Htut of Pyakaung and his parent
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?parent dbo:child ?minHlaHtut .

  # Step 3: Find child of the parent
  ?parentChild dbo:child ?childOfParent .

  # Step 4: Find predecessor of the child
  ?predecessor dbo:successor ?childOfParent .

  # Step 5: Identify Saw Min Phyu and his spouse",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""west germany""))
  
  ?person dbo:manager ?club .
  ?club rdfs:label ""VfL Bochum""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  ?film dbo:producer ?natLevine .
  ?natLevine rdfs:label ""Nat Levine""@en .
  ?film dbo:castMember ?actor .
  ?actor dbo:spouse ?spouse .
}",3,4,4,3,1,3,3,71,0,0,62,0,0.0,0
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  ?predecessor dbo:succeededBy ?child ;
               a dbo:Monarch .

  ?father dbo:child ?predecessor ;
          a dbo:Monarch .

  ?father dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?party WHERE {
  VALUES ?name { ""Guillaume Peltier""@en ""Bruno Retailleau""@en }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
}
```",2,2,3,1,2,2,2,9,0,2,1,0.0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?georgeH rdfs:label ""George H. Cameron""@en .
  ?georgeH dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,2,0,3,1.0,0.4,0.5714285714285715
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Unable to construct a query due to incomplete information.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:award dbr:Australian_Laureate_Fellowship ;
          dbo:nationality dbr:Australia ;
          dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(?occupation), ""scientist""))
  
  ?person dbo:almaMater ?almaMater .
  
  ?almaMater dbo:location dbr:Andhra_Pradesh .
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:militaryConflict ?war ;
         dbo:commanderOf ?war .
}

SELECT ?force, ?war WHERE {
  ?tripleX rdfs:label ""The Triple X's""@en .
  ?tripleX dbo:militaryForce ?force ;
           dbo:militaryConflict ?war .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?decedent WHERE {
  ?nicholas rdfs:label ""Nicholas II of Russia""@en .
  ?nicholas dbo:nationality ?country .

  ?decedent dbo:deathPlace ?switzerland .
  ?switzerland rdfs:label ""Switzerland""@en .
  
  ?decedent dbo:nationality ?nativeCountry .
  FILTER (?nativeCountry = ?country)
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?yeshaq rdfs:label ""Yeshaq I""@en .
  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?yeshaq dbo:child ?child .
  ?baeda dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?dawitI rdfs:label ""Dawit I""@en .
  ?child dbo:parent ?dawitI ;
         dbo:child ?naodFather .

  ?naod rdfs:label ""Na'od""@en .
  ?naod dbo:father ?naodFather .

  ?naodFather dbo:father ?grandfather .

  ?grandfather dbo:royalTitle ?title .
  FILTER EXISTS { ?grandfather dbo:officeHolder ?office }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor ?commander WHERE {
  # Find the successor of Yurii Khmelnytsky
  ?yuriiKhmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .
  ?yuriiKhmelnytsky dbo:successor ?successor .

  # Find the commander of the Battle of Vienna
  ?battleOfVienna rdfs:label ""Battle of Vienna (1683)""@en .
  ?battleOfVienna dbo:commander ?commander .

  # Check if successor or commander is linked to a television show and societal event
  OPTIONAL { ?successor dbo:televisionShow ?tvShow . }
  OPTIONAL { ?successor dbo:societalEvent ?societalEvent . }

  OPTIONAL { ?commander dbo:televisionShow ?tvShow . }
  OPTIONAL { ?commander dbo:societalEvent ?societalEvent . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?miguelParty ?miguelOffice ?marianoParty ?marianoOffice ?madridOffice WHERE {
  # Miguel Maura's party and office
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:party ?miguelParty .
  ?miguel dbo:positionHeld ?miguelOffice .

  # Mariano Rajoy's party, office, and Madrid-related office
  ?mariano rdfs:label ""Mariano Rajoy""@en .
  ?mariano dbo:party ?marianoParty .
  ?mariano dbo:positionHeld ?marianoOffice .
  
  OPTIONAL {
    ?madridOffice dbp:city ""Madrid""@en ;
                  dbo:head ?mariano .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?country ?war WHERE {
  ?dawid rdfs:label ""Dawid Olejniczak""@en .
  
  # Find the residence and check if it is a country
  ?dawid dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             rdfs:label ?countryLabel .

  # Check if Dawid was a commander in any war during the French Revolutionary Wars
  OPTIONAL {
    ?dawid dbo:commanderOf ?war .
    ?war rdfs:label ?warLabel .
    FILTER regex(?warLabel, ""French Revolutionary War"", ""i"")
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .
}

SELECT ?predecessor WHERE {
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:predecessor ?predecessor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?parent WHERE {
  ?claudius rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?claudius dbo:child ?child .
  ?child dbo:nativePlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""middlesex""))
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?yeshaq rdfs:label ""Yeshaq I""@en .
  ?yeshaq dbo:child ?yeshaqEntity .
  ?yeshaqEntity dbo:parent ?parent .
  OPTIONAL { ?parent dbo:royalty ?isRoyalty . FILTER(?isRoyalty != nil) }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?actor ?film WHERE {
  # Find Harriette Arlene Lake
  ?harriette rdfs:label ""Harriette Arlene Lake""@en .
  
  # Get her spouse
  ?harriette dbo:spouse ?spouse .

  # Find films associated with Nat Levine
  ?natLevine rdfs:label ""Nat Levine""@en .
  ?natLevine dbo:film ?film .

  # Find actors of those films
  ?film dbo:actor ?actor .

  OPTIONAL {
    # Check if the spouse is also an actor in one of these films
    ?spouse dbo:actor ?actor .
  }

  OPTIONAL {
    # Check for party membership in Central, Louisiana (hypothetical)
    ?spouse dbp:memberOf ?party .
    ?party rdfs:label ""Ruling Party""@en .
    ?location rdfs:label ""Central, Louisiana""@en .
    ?party dbo:locatedIn ?location .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region ?mitakaLabel WHERE {
  ?jst rdfs:label ""Japan Standard Time""@en .
  ?jst dbo:region ?region .

  ?mitaka rdfs:label ""Mitaka, Tokyo""@en .
  ?mitaka rdfs:label ?mitakaLabel .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?maxBornAward ?rainerWeissAward ?hostInstitution WHERE {
  # Find the award of Max Born
  ?maxBorn rdfs:label ""Max Born""@en .
  ?maxBorn dbo:award ?maxBornAward .

  # Find Rainer Weiss and his award
  ?rainerWeiss rdfs:label ""Rainer Weiss""@en .
  ?rainerWeiss dbo:award ?rainerWeissAward .

  # Identify the host institution of Rainer Weiss's award
  OPTIONAL {
    ?rainerWeissAward dbo:awardedBy ?hostInstitution .
    FILTER (isBlank(?hostInstitution) || ?hostInstitution a dbo:EducationalOrganization)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  # Thomas Letsch's management
  ?letschTeam dbo:manager ?manager .
  ?letschTeam rdfs:label ""Thomas Letsch""@en .

  # VfL Bochum's current manager
  ?bochumTeam dbo:manager ?manager .
  ?bochumTeam rdfs:label ""VfL Bochum""@en .

  # Manager's association with Germany (Theodor Heuss's native administration)
  OPTIONAL { ?manager dbo:nationality <http://dbpedia.org/resource/Germany> . }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album WHERE {
  ?lasso rdfs:label ""Lasso the Moon""@en .
  ?lasso dbo:album ?album .
  OPTIONAL { ?album dbo:film ?film . }
  OPTIONAL { ?album dbo:work ?work . }
}
```",1,3,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Step 1: Identify Henry Clay Lewis
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  
  # Step 2: Retrieve his birthplace, ensuring it's a settlement in America
  ?henry dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement ;
              dbp:country ""United States"" .

  # Step 3: Find an individual who received the Gillmore Medal
  ?gillmore dbp:award ""Gillmore Medal""@en .
  
  # Step 4: Determine the war associated with a Medal of Honor awardee
  ?medalOfHonorAwardee dbp:award ""Medal of Honor""@en ;
                      dbo:conflict ?war .

  # Step 5: Identify any common entity that matches both criteria
  OPTIONAL { ?gillmore dbp:force ?force . }
  
  FILTER (?birthPlace = ?entity || ?force = ?entity || ?war = ?entity)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?person rdfs:label ""Pacely""@en .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?tenant WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence dbo:resident ?tenant .
}
```",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?actorAlways ?filmWithIliza WHERE {
  # Find Janusz Kamiński's spouse
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .

  # Find actors of the film ""Always"" (1989)
  ?always dbo:title ""Always""@en ;
          dbo:starring ?actorAlways .

  # Find a movie that is both a work and a film with Iliza Shlesinger
  ?film dbp:starring ""Iliza Shlesinger""@en .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?song dbo:artist dbpedia:T.I. ;
        a dbo:Song .
  
  ?album dbo:song ?song ;
         a dbo:Album .

  OPTIONAL { 
    ?album dbo:actor ?actor .
  }
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    (dbo:Hashiba_Hidekatsu) 
    (dbo:Toyotomi_Hidenaga)
  }
  ?person rdfs:label ?name .
  FILTER (
    (?name = ""Hidekatsu""@en || ?name = ""Hidenaga""@en)
  )
  ?person dbo:participatedIn ?war .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?band dbo:hometown ?place .
  ?place rdfs:label ?placeLabel .
  FILTER(CONTAINS(?placeLabel, ""New York"") && CONTAINS(?placeLabel, ""state""))
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER(?birthPlace = ?place)
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?birthName WHERE {
  # Step 1: Identify Coro and its related award (hypothetical connection to Florida)
  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?coro dbo:award ?award .

  # Step 2: Find the award that is a region, state, and settlement
  ?award rdfs:label ?awardLabel .
  FILTER (CONTAINS(LCASE(?awardLabel), ""florida""))

  # Step 3: Identify musical artists from Florida
  ?artist dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Florida .

  # Step 4: Retrieve the birth name of the artist
  ?artist dbp:birthday ?birthday .
  OPTIONAL { ?artist foaf:name ?birthName . }
}
```",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?artist WHERE {
  ?song rdfs:label ""Lotus (R.E.M. song)""@en .
  ?song dbo:producer ?producer .

  FILTER (?producer rdf:type dbo:Organization && 
          ?producer rdf:type (dbo:Band || dbo:MusicalArtist) )

  ?producer dbo:associatedBand ?artist .
  ?artist rdf:type dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  ?book dbo:author ?author .
  ?author rdfs:label ""Hillary Clinton""@en .
  ?book rdf:type dbo:Book .
  OPTIONAL { ?author dbo:officeHolder ?office . }
  OPTIONAL { ?author dbo:politicalParty ?party . }
  ?author dbo:spouse ?spouse .
}",3,7,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherReference WHERE {
  # Step 1: Identify Baeda Maryam I and his child
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?childOfBaeda dbo:parent ?baedaMaryamI .

  # Step 2: Identify Yeshaq I and his parent
  ?yeshaqI rdfs:label ""Yeshaq I""@en .
  ?parentOfYeshaq dbo:child ?yeshaqI .

  # Step 3: Find the child of this parent
  ?childOfParent dbo:parent ?parentOfYeshaq .

  # Step 4: Identify fathers of these children
  ?father1 dbo:child ?childOfBaeda .
  ?father2 dbo:child ?childOfParent .

  # Step 5: Ensure they are royalty and office holders
  ?father1 dbo:royalty true .
  ?father2 dbo:royalty true .
  
  OPTIONAL { ?father1 dbo:officeHolder true . }
  OPTIONAL { ?father2 dbo:officeHolder true . }

  # Step 6: Return reference to one of these fathers
  VALUES (?fatherReference) {
    ?father1
    ?father2
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?david rdfs:label ""David Paton""@en .
  ?david dbo:associatedBand ?band .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?artist WHERE {
  ?movie dbo:genre ?genre .
  FILTER(?genre IN (dbo:TVSeries, dbo:Telenovela))
  ?actor foaf:name ""Nse Ikpe Etim""@en .
  ?actor dbo:actedIn ?movie .

  ?collaboration dbo:performer ?cynthia ;
                dbo:performer ?artist .
  ?cynthia foaf:name ""Cynthia Morgan""@en .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?mary dbo:nativePlace dbr:Middlesex .
  ?mary dbo:child dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne .
  ?mary dbo:parent ?parent .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?rulingParty ?spouse WHERE {
  # Part 1: Ann Sothern's birth name
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?birthName .

  # Part 2: Landmark with specific elevation and ruling party
  ?landmark a dbo:Lighthouse ;
            dbp:elevation ?elevation .
  FILTER(?elevation = 20.1168)
  
  OPTIONAL {
    ?landmark dbo:governingBody ?rulingParty .
  }

  # Part 3: Roger Pryor's spouse
  ?rogerPryor rdfs:label ""Roger Pryor (actor)""@en ;
              dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Settlement .
  ?birthplace dbo:country dbr:United_States_of_America .
}
```",3,5,4,3,1,3,3,71,0,0,12,0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?ada a dbo:Person ;
       rdfs:label ""Ada Jane Low""@en ;
       dbo:birthName ""Ada Jane Low"" ;
       dbo:occupation dbo:Politician ;
       dbo:deathPlace dbpedia:Melbourne .
  
  OPTIONAL { ?ada dbo:predecessor ?predecessor . }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Find children of Archduke Charles Louis of Austria
  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?archduke dbo:child ?child .

  # Find grandchildren who are royalty
  ?child dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .

  # Identify Carl, Duke of Württemberg's predecessor
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?predecessor dbo:predecessor ?carl .

  # Find grandchildren of Duke Philipp of Württemberg
  ?duke rdfs:label ""Duke Philipp of Württemberg""@en .
  ?duke dbo:child ?grandparent .
  ?grandparent dbo:child ?grandchild2 .

  # Match the grandchild from both lines of descent and predecessor condition
  FILTER (?grandchild = ?predecessor && ?grandchild = ?grandchild2)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?commander ?book WHERE {
  # Spouse of Hillary Clinton
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillian dbo:spouse ?spouse .
  
  # Commander in Third Taiwan Strait Crisis
  ?crisis rdfs:label ""Third Taiwan Strait Crisis""@en .
  ?crisis dbp:commander ?commander .
  
  # Author of a book by Bill Clinton
  ?bill rdfs:label ""Bill Clinton""@en .
  ?book dbo:author ?bill ;
        rdf:type dbo:Book .
}
",4,7,5,2,3,3,3,71,1,59935,0,1.6684463427656166e-05,1.0,3.336837012196139e-05
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?professionalRole WHERE {
  # Step 1: Identify Kent Allard
  ?author rdfs:label ""Kent Allard""@en .
  
  # Step 2: Find the alter ego of this author
  ?author dbo:pseudonym ?pseudonym .
  ?pseudonym rdfs:label ?alterEgoLabel .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?alterEgoLabel), "" "", ""_""))) AS ?alterEgo)
  
  # Step 3: Identify the actor of High Society Blues
  ?movie dbo:title ""High Society Blues""@en ;
         dbo:actor ?actor .
  
  # Step 4: Find a notable work (claim to fame) of this actor
  ?actor dbo:notableWork ?notableWork .
  
  # Step 5: Link the alter ego to a professional role
  ?alterEgo dbo:profession ?professionalRole .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royalParentFather WHERE {
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  
  # Find Philip's parents
  OPTIONAL { ?philip dbo:father ?father . }
  OPTIONAL { ?philip dbo:mother ?mother . }

  # Determine which parent is royalty
  OPTIONAL { 
    ?parent (dbo:father|dbo:mother) ?philip ;
             a dbo:Monarch .
    BIND(?parent AS ?royalParent)
  }

  # Find the father of the royal parent
  ?royalParent dbo:father ?royalParentFather .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?thunderbirdsRealName ?nickCurranArtist ?kimWilsonBand WHERE {
  # Find the real name of The Fabulous Thunderbirds
  ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
  ?thunderbirds rdfs:label ?thunderbirdsRealName .

  # Find musical artist associated with Nick Curran
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:musicalArtist ?nickCurranArtist .

  # Find band associated with Kim Wilson
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:band ?kimWilsonBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Victor Stanley's parents
SELECT ?parent WHERE {
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?victor dbo:child ?parent .
}

# Step 2: Find politicians who are alumni of Eton College and their children
SELECT DISTINCT ?politicianChild WHERE {
  ?alumnus foaf:alumniOf <http://dbpedia.org/resource/Eton_College> ;
           rdf:type dbo:Politician .
  ?alumnus dbo:child ?politicianChild .
}

# Step 3: Find parents of Edward Stanley, 17th Earl of Derby
SELECT ?parent WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en ;
          dbo:child ?parent .
}

# Combine results to find the common individual
SELECT DISTINCT ?commonParent WHERE {
  VALUES ?victorParent { ?parent1 }
  VALUES ?politicianChildParent { ?parent2 }
  VALUES ?edwardParent { ?parent3 }

  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?victor dbo:child ?victorParent .

  ?alumnus foaf:alumniOf <http://dbpedia.org/resource/Eton_College> ;
           rdf:type dbo:Politician .
  ?alumnus dbo:child ?",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent ?child WHERE {
  ?siege rdfs:label ""Siege of Mukha""@en .
  ?siege dbo:commander ?commander .
  ?commander rdf:type dbo:Monarch .
  ?commander dbo:parent ?parent .
  ?parent rdf:type dbo:Monarch .
  ?parent dbo:child ?child .
}",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceEntity WHERE {
  ?yandamuri rdfs:label ""Yandamuri Veerendranath""@en .
  ?yandamuri dbo:birthPlace ?birthPlaceEntity .
}",2,2,3,2,1,2,2,9,0,3,166,0.0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?person rdfs:label ""Richard Grant Esterhuysen""@en .
  
  # Find works associated with Richard Grant Esterhuysen
  ?person dbo:filmography ?work .

  # Filter for television shows
  ?work dbo:genre ?genre .
  FILTER(CONTAINS(LCASE(STR(?genre)), ""tv show"") || CONTAINS(LCASE(STR(?genre)), ""television""))

  # Find actors in these television shows
  ?work dbo:castMember ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
# Query 1: Doon Arbus's Parent
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?doon rdfs:label ""Doon Arbus""@en .
  ?doon dbo:parent ?parent .
}

# Query 2: Movies with Herschel Bernardi
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?actor rdfs:label ""Herschel Bernardi""@en .
  ?actor dbo:actedIn ?movie .
}

# Query 3: Parent of a Professional Photographer
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  ?photographer rdf:type dbo:Photographer .
  ?photographer dbo:parent ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?party rdfs:label ""Republican Party (United States)""@en .
  ?party dbo:member ?member .
}
```",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?medalOfHonorAwardee ?war WHERE {
  # Identify Quincy Adams Gillmore and his force
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:militaryBranch ?force .

  # Find Medal of Honor awardees
  ?awardee dbo:award ""Medal of Honor"" ;
          dbo:servedInMilitaryConflict ?war .

  # Return the wars involving both Gillmore's force and Medal of Honor awardees
  FILTER(?force = ?gillmoreForce)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?shirley rdfs:label ""Shirley Stoler""@en .
  ?shirley dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?child .
  
  ?roger rdfs:label ""Roger III, Duke of Apulia""@en .
  ?parent dbo:child ?roger .

  ?father dbo:child ?child .
  ?father rdf:type dbo:Monarch .
  
  OPTIONAL {
    ?reference dbo:spouse|dbo:child ?father .
    ?reference rdfs:label ""William I""@en .
    FILTER EXISTS { ?reference rdf:type dbo:Monarch }
    FILTER EXISTS { ?reference rdf:type dbo:OfficeHolder }
  }
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?deathPlaceAdminTerritory ?birthplaceAdminTerritory WHERE {
  # Part 1: Christian Ditlev Ammentorp Hansen's death place and administered territory
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
  
  OPTIONAL {
    ?deathPlace dbo:administers ?deathPlaceAdminTerritory .
  }

  # Part 2: Prince Christian of Schleswig-Holstein-Sonderburg-Beck's birthplace and administered territory
  ?prince rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  ?prince dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Royalty .

  OPTIONAL {
    ?prince dbo:administers ?birthplaceAdminTerritory .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate ?birthPlace WHERE {
  ?christian rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  OPTIONAL { ?christian dbo:birthDate ?birthDate . }
  OPTIONAL { ?christian dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?psoe rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?psoe dbo:leader ?leader .
  
  ?leader dbo:nationality ?nationality .
  FILTER (CONTAINS(LCASE(?nationality), ""spanish""))

  ?leader dbo:residenceCountry ?country .
  FILTER (?country != null)
}
```",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?luise rdfs:label ""Duchess Luise of Brunswick-Wolfenbüttel""@en .
  ?luise dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
# Query for Carolyn Jones' Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?carolyn rdfs:label ""Carolyn Jones""@en .
  ?carolyn dbo:deathPlace ?deathPlace .
}

# Query for Actor of Aladdin (1958 film) and their Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName ?deathPlace WHERE {
  ?film rdfs:label ""Aladdin (1958 film)""@en .
  ?film dbo:actor ?actor .
  ?actor rdfs:label ?actorName .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?brianKemp rdfs:label ""Brian Kemp""@en .
  ?brianKemp dbo:positionHeld ?position .
  ?position dbo:officeHolder ?brianKemp ;
            dbo:officeName ?officeName .
  FILTER(CONTAINS(LCASE(?officeName), ""governor of georgia""))
  
  ?position dbo:institution ?institution .
  ?institution dbp:country ""United States"" .
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person rdf:type dbo:SportsManager .
}",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?sawMinHla dbo:child ?child .

  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?predecessor dbo:successor ?myatHponePyo .
  
  FILTER (?child = ?predecessor)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?laoShe rdfs:label ""Lao She""@en .
  ?laoShe dbo:author ?work .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?miguelOffice ?commanderOffice ?albertoResidence WHERE {
  # Miguel Maura's office
  ?miguel a dbo:Person ;
          rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:office ?miguelOffice .

  # Commander's office (Manuel Pinto da Costa)
  ?commander a dbo:Person ;
             rdfs:label ""Manuel Pinto da Costa""@en ;
             dbo:participatedIn ?conflict .
  ?conflict rdfs:label ""Angolan War of Independence""@en .
  ?commander dbo:office ?commanderOffice .

  # Alberto Ruiz-Gallardón's residence
  ?alberto a dbo:Person ;
           rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?alberto dbo:residence ?albertoResidence .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?lamont rdfs:label ""Lamont Cranston""@en .
  ?lamont dbo:narrativeAlias ?alias .
  ?alias rdfs:label ?alterEgoLabel .
  FILTER(CONTAINS(LCASE(?alterEgoLabel), ""the shadow""))
}
```",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?deathPlace WHERE {
  VALUES ?name { ""Reed Howes""@en ""Sal Mineo""@en }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?role WHERE {
  ?person rdfs:label ""José Luis Rodríguez Zapatero""@en .
  
  # Role as Prime Minister of Spain
  OPTIONAL { 
    ?person dbo:positionHeld ?position .
    ?position dbo:title ""Presidente del Gobierno de España""@es ;
              dbo:officeHolder ?person .
    BIND(""Prime Minister"" AS ?role)
  }
  
  # Role in Galician Regional Election
  OPTIONAL {
    ?election dbo:electionWinner ?winner .
    ?winner rdfs:label ""Alberto Núñez Feijóo""@en .
    ?feijoo dbo:positionHeld ?positionGalicia .
    ?positionGalicia dbo:title ""Presidente de la Xunta de Galicia""@es ;
                     dbo:officeHolder ?feijoo .
    BIND(""President of the Xunta de Galicia"" AS ?role)
  }
  
  # Role as Secretary-General of PSOE
  OPTIONAL {
    ?person foaf:name ""José Luis Rodríguez Zapatero""@en .
    ?party dbo:leader ?person ;
           rdfs:label ""Spanish Socialist Workers' Party""@en .
    BIND(""Secretary-General of PSOE"" AS ?role)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?author WHERE {
  ?book rdfs:label ""El Deafo""@en .
  ?book (dbo:author|dcterms:creator) ?author .
  ?author dbo:nationality ?nationality .
  FILTER(CONTAINS(LCASE(?nationality), ""american""))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild ?father WHERE {
  ?maria rdfs:label ""Maria Anna of Bavaria""@en .
  ?maria dbo:birthYear ""1574""^^xsd:gYear .
  ?maria dbo:child ?child .
  
  # Assuming royalty can be inferred from a title or role
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actress ?child WHERE {
  ?actress a dbo:Actress ;
           dbp:nativePlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""new york"") || CONTAINS(LCASE(str(?place)), ""ny""))
  
  ?actress dbo:child ?child .
}
```",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show WHERE {
  ?academy rdfs:label ""Royal Swedish Academy of Sciences""@en .
  OPTIONAL { ?academy dbo:wikiPageWikiLink ?show . }
}
```",1,1,2,1,1,3,2,20,5,99,6,0.04807692307692308,0.45454545454545453,0.08695652173913043
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?work rdfs:label ""Наши парни""@ru .
  ?work dbo:writer ?author .
  ?author rdfs:label ""Aleksandr Filimonov""@en .
  
  OPTIONAL { 
    ?work dbo:character ?player .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession (GROUP_CONCAT(?otherProfessional; separator="", "") AS ?others) WHERE {
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:occupation ?profession .

  ?otherPerson dbo:occupation ?profession .
  ?otherPerson rdfs:label ?otherProfessionalLabel .
  
  FILTER (?sam != ?otherPerson)
  FILTER(LANG(?otherProfessionalLabel) = 'en')
} 
GROUP BY ?profession
```",3,3,4,2,2,3,3,71,0,2,39640,0.0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  ?ferdinand rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?ferdinand dbo:child ?child .

  # Check if the child was a commander in war
  OPTIONAL { ?child dbo:militaryCommanderOf ?commanderRole . }

  # Check for association with societal events and television shows
  OPTIONAL { ?event dbo:relatedTo ?child . }
  FILTER EXISTS {
    ?tvShow dbo:subject ?child .
  }

  # Connection to the 2nd Dragoon Regiment (France)
  OPTIONAL { ?regiment dbp:name ""2nd Dragoon Regiment (France)""@en .
             ?regiment dbo:commandedBy ?child . 
           }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify the award associated with New York (state)
  ?award dbo:location dbr:New_York_(state) .
  
  # Step 2: Find the awardee band
  ?award dbo:recipient ?band .

  # Step 3: Determine members of the band who are artists and musical artists
  ?member dbo:associatedBandMember ?band ;
          a dbo:MusicalArtist, dbo:Artist .

  # Step 4: Identify associated musical artists for each member
  ?member dbo:associatedBandMember ?associatedArtist .
  
  # Step 5: Find band members of these associated musical artists who are also musical artists
  ?associatedArtist dbo:bandMember ?bandMember ;
                   a dbo:MusicalArtist .

}
```",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?actor rdfs:label ""Johnny Doughboy""@en .
  ?actor dbo:film ?work .
  ?work dbo:producer ?producer .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?movie WHERE {
  ?ian rdfs:label ""Ian Gregson""@en .
  ?ian dbo:award ?award .
  OPTIONAL { 
    ?award dbo:awardedFor ?movie .
  }
}
```",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?native WHERE {
  ?luckman rdfs:label ""David Luckman""@en .
  ?luckman dbo:managerOf <http://dbpedia.org/resource/Hartlepool_United_F.C.> .
  ?luckman dbo:residence ?residence .
  ?person dbo:nativePlace ?residence .
  ?person rdfs:label ?native .
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Promise Me, Dad""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?davydov rdfs:label ""Alexander Lvovich Davydov""@en .
  ?davydov dbo:participatedIn ?war .

  ?baggovut rdfs:label ""Karl Gustav von Baggovut""@en .
  ?baggovut dbo:participatedIn ?war .

  ?war dbo:country <http://dbpedia.org/resource/Russian_Empire> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?aleksandr rdfs:label ""Aleksandr Filimonov""@en .
  ?aleksandr dbo:work ?work .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?force WHERE {
  ?medal dbo:awardee ?awardee .
  ?awardee dbp:location ""Charleston, South Carolina""@en .
  ?medal rdfs:label ""Gillmore Medal""@en .

  OPTIONAL { ?awardee dbo:member ?force . }
  OPTIONAL { ?awardee dbo:commander ?force . }
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement WHERE {
  ?settlement rdfs:label ""Lahore""@en .
  ?settlement a dbo:City .
  OPTIONAL { ?settlement dbo:country ?country . FILTER (lang(?country) = 'en' && str(?country) = ""Pakistan"") }
}
```",2,4,3,2,1,2,2,9,0,1,881,0.0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Find Arthur Stanley (politician) and his father
  ?arthur rdfs:label ""Arthur Stanley""@en .
  ?arthur dbo:father ?father .

  # Find awardees of Commander of the Royal Victorian Order and their parents
  ?awardee dbo:award ""Commander of the Royal Victorian Order"" ;
           dbo:parent ?parent .

  # Check if the father is also a parent of an awardee
  FILTER (?father = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the owner of USS Arcadia (ID-1605)
SELECT ?owner WHERE {
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
}

# Step 2: Find the author of ""Back to Work""
SELECT ?author WHERE {
  dbr:Back_to_Work_(book) dbo:author ?author .
}

# Step 3: Find common entity
SELECT DISTINCT ?commonEntity WHERE {
  { 
    dbr:USS_Arcadia_(ID-1605) dbo:owner ?commonEntity .
  }
  UNION
  {
    dbr:Back_to_Work_(book) dbo:author ?commonEntity .
  }
}

# Step 4: Find wars, diseases, or societal events where this person was a commander
SELECT ?event WHERE {
  ?commonEntity dbo:commanderOf ?event .
  FILTER (
    EXISTS { ?event rdf:type dbr:War } ||
    EXISTS { ?event rdf:type dbr:Disease } ||
    EXISTS { ?event rdf:type dbr:SocietalEvent }
  )
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child ?war WHERE {
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  ?hideyoshi dbo:child ?child .
  ?child dbo:participatedIn ?war .
}",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:award ?award .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?kapur rdfs:label ""Steven Kapur""@en .
  ?kapur dbo:birthPlace dbr:Birmingham .

  ?artist dbo:associatedBand ?kapur ;
          rdfs:label ?trueSelfLabel .

  FILTER(CONTAINS(LCASE(?trueSelfLabel), ""the true self""))

  ?work dbo:title ""The True Self""@en ;
        dbo:creator ?artist .

  ?work dbr:writer ?writer .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?jamieT rdfs:label ""Jamie T""@en .
  OPTIONAL { ?jamieT dbo:profession ?profession . }
  OPTIONAL { ?jamieT foaf:currentJobTitle ?profession . }
}
```",2,2,3,2,1,2,2,9,0,0,44694,0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person a dbo:MusicalArtist .
  ?person dbo:bandMember ?membership .
  ?membership dbo:band ?band .
  OPTIONAL { 
    ?band dbp:reference ?reference .
    FILTER(CONTAINS(LCASE(?reference), LCASE(""The Fabulous Thunderbirds"")))
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?dorothea dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person dbo:officeHolder ?office .
  ?office dbp:electionDate ""2003""^^xsd:gYear .
  ?office dbp:city ""Madrid"" .
  ?person dbo:residence ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?fatherOfSecondChild WHERE {
  
  # Step 1: Identify Roger II of Sicily
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  
  # Step 2: Find a child of Roger II who is royalty
  ?child dbo:parent ?rogerII ;
         dbo:royaltyTitle ?title1 .
  FILTER EXISTS { ?title1 rdfs:label ?label1 } .
  
  # Step 3: Identify the parent of this child (should be Roger II)
  BIND(?rogerII AS ?parentOfFirstChild) .
  
  # Step 4: Find a reference entity related to William I that is royalty and an office holder
  ?reference rdfs:label ?label2 ;
             dbo:royaltyTitle ?title2 ;
             dbo:officeHolder ?office .
  FILTER EXISTS { ?title2 rdfs:label ?label2 } .
  FILTER EXISTS { ?office rdfs:label ""William I""@en } .
  
  # Step 5: Find a royal child of this reference entity
  ?secondChild dbo:parent ?reference ;
               dbo:royaltyTitle ?title3 .
  FILTER EXISTS { ?title3 rdfs:label ?label3 } .
  
  # Step 6: Identify the father of this second royal child
  ?fatherOfSecondChild dbo:child ?secondChild .
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Bobby Shmurda's associated band
  ?bobby dbo:musicalArtist ?artist .
  FILTER (str(?bobby) = ""Bobby_Shmurda""^^xsd:string)

  # Step 2: Find band members who are also musical artists
  ?artist dbo:bandMember ?member .
  ?member dbo:musicalArtist ?memberArtist .

  # Step 3: Identify an award related to New York state
  ?award dbo:awardedTo ?band .
  ?award dbp:region ""New_York_(state)""@en .

  # Step 4: Determine the native region of the awardee band
  ?band dbo:nativePlace ?nativeRegion .

  # Step 5: Find a band member from that region
  ?member dbo:nativePlace ?nativeRegion .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?commander ?successor ?reference WHERE {
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), 'the war') && CONTAINS(LCASE(?warLabel), 'television show') && CONTAINS(LCASE(?warLabel), 'societal event'))

  OPTIONAL { ?commander rdfs:label ""Jean Baptist, Comte d'Arco""@en .
             ?commander dbo:commanderOf ?war . }

  OPTIONAL { ?successor rdfs:label ""Yurii Khmelnytsky""@en .
              ?commander dbo:successor ?successor . }

  OPTIONAL { ?reference rdfs:label ""George Ducas""@en .
             ?war dbo:relatedEntity ?reference . }
}
LIMIT 10",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?album rdfs:label ""No Alternative""@en .
  ?album dbo:contributor ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?institution dbo:location ?georgia .
  ?georgia rdfs:label ""Georgia""@en .
  FILTER (CONTAINS(LCASE(?georgia), ""united states""))
}
```",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Movie Name""@en .
  ?movie dbo:starring ?actor .
}
```",2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?office WHERE {
  VALUES ?name { ""Mariano Rajoy""@en ""Miguel Maura""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:officeHeld ?office .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Promises to Keep""@en .
  ?book dbo:author ?author .
}

UNION

SELECT DISTINCT ?work WHERE {
  ?biden rdfs:label ""Joe Biden""@en .
  ?work dbo:author ?biden .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:participatingMilitaryUnit ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?movie rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""and"")) .

  ?actor dbo:profession ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""actor"") || CONTAINS(LCASE(STR(?occupation)), ""actress""))

  ?actor dbo:film ?movie .

  ?atl rdfs:label ""ATL""@en .
  ?atl dbo:starring ?actor .
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?medal rdfs:label ""Medal of Honor""@en .
  ?medal dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  
  # Step 2: Find Saw Shwe Khet's child who is a royalty
  ?child dbo:parent ?sawShweKhet ;
         rdf:type dbo:Monarch .

  # Step 3: Identify Minye Kyawswa
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  
  # Step 4: Find Minye Kyawswa's grandchild who is a royalty
  ?grandparent dbo:child ?minyeKyawswa ;
              dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .

  # Step 5: Identify the common child
  FILTER (?child = ?grandchild)

  # Step 6: Find the father of this child
  ?father dbo:parent ?commonChild .

  # Step 7: Identify the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent WHERE {
  ?artist rdf:type dbo:MusicalArtist .
  ?artist dbo:birthPlace dbr:London .
  ?artist dbo:parent ?parent .
}
```",2,4,3,2,1,3,2,20,0,6,21,0.0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?eleonore dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:nationality dbr:Russian_Empire .
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
}
```",2,2,3,1,2,2,3,28,0,0,126,0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?war WHERE {
  # Part 1: Ruling party member in Westport, Connecticut
  ?location rdfs:label ""Westport, Connecticut""@en .
  ?rulingParty dbo:country ?location ;
               a dbo:PoliticalParty .
  ?partyMember dbo:member ?rulingParty ;
               a dbo:Organization .

  # Part 2: Commander of the war for George Pickett
  ?georgePickett rdfs:label ""George Pickett""@en .
  ?war dbo:commander ?georgePickett ;
       a dbo:SocietalEvent .
}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .
}

SELECT ?person WHERE {
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .
  ?person dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?award rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:nationality ?nationality .
  ?nationality rdfs:label ""Japan""@en .
  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace } 
}",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  
  ?regiment dbo:participatedIn ?event .
  ?battle dbo:participatedIn ?event .

  ?militaryForce dbo:commander ?commander .
  ?militaryForce dbo:participatedIn ?event .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Part 1: Find the actor of the movie
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:actor ?actor .

  # Part 2: Check if this actor is a parent of Allan Arbus's child
  ?allanArbus rdfs:label ""Allan Arbus""@en .
  ?child dbo:parent ?allanArbus ;
         dbo:parent ?actor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfMargarete ?grandChildOfPhilipp WHERE {
  
  # Find the child of Archduchess Margarete Sophie of Austria
  ?margarete rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?margarete dbo:child ?childOfMargarete .

  
  # Find the child of Duke Philipp of Württemberg
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .
  ?philipp dbo:child ?childOfPhilipp .
  
  # Find the grandchild (child of the child) of Duke Philipp of Württemberg
  ?childOfPhilipp dbo:child ?grandChildOfPhilipp .
}
",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?battle1 dbo:name ""Battle of Cape Finisterre (1805)"" .
  ?battle2 dbo:name ""Battle of Fort Royal"" .
  
  ?battle1 dbo:commander ?commander .
  ?battle2 dbo:commander ?commander .

  OPTIONAL { ?commander rdfs:label ""The Triple X's""@en }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Find the manager of VfL Bochum in the 2007-08 season
  ?manager dbo:managedTeam ?team .
  ?team rdfs:label ""VfL Bochum""@en .
  FILTER(YEAR(?startDate) <= 2007 && (YEAR(?endDate) >= 2008 || NOT EXISTS { ?manager dbo:endDate ?endDate }))

  # Find the leader of West Germany around the time it existed
  ?leader dbo:nationality ?country .
  ?country rdfs:label ""West Germany""@en .
  ?leader dbp:birthPlace ?nativeCountry .

  # Ensure the manager and leader are distinct individuals
  FILTER(?manager != ?leader)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find actors in ""Ab Kya Hoga""
  ?abKyaHoga dbo:actor ?person .
  ?abKyaHoga rdfs:label ""Ab Kya Hoga""@en .

  # Find actors in ""Dispatches from Elsewhere""
  ?dispatchesFromElsewhere dbo:actor ?person .
  ?dispatchesFromElsewhere rdfs:label ""Dispatches from Elsewhere""@en .

  # Check if the person is also a politician
  ?person dbo:occupation dbp:politician .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?entity WHERE {
  ?andhraPradesh rdfs:label ""Andhra Pradesh""@en .
  ?andhraPradesh ?property ?entity .
  FILTER(?property IN (dbo:city, dbo:river))
}
```",1,1,2,1,1,2,2,9,0,0,166,0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:deathPlace ?deathPlace .
  ?person dbo:birthPlace ?birthPlace .

  FILTER (lang(?deathPlace) = ""en"" && ?deathPlace = ""Switzerland"")
  FILTER (lang(?birthPlace) = ""en"" && ?birthPlace = ""Russian Empire"")
}
```",2,2,3,1,2,2,3,28,0,0,36,0,0.0,0
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  # Find Koichirō and the wars he participated in
  { 
    ?koicho rdfs:label ""Koichirō""@en .
    ?koicho dbo:participatedInWar ?war .
    BIND(?koicho AS ?person)
  }
  
  UNION
  
  # Find children of Toyotomi Hideyoshi and the wars they participated in
  { 
    ?hideyoshi dbo:child ?child .
    ?child rdfs:label ?childLabel .
    FILTER(CONTAINS(LCASE(str(?childLabel)), ""toyotomi""))
    ?child dbo:participatedInWar ?war .
    BIND(?child AS ?person)
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeRegion ?bandMember WHERE {
  # Step 1: Identify French Montana
  ?frenchMontana a dbo:MusicalArtist ;
                rdfs:label ""French Montana""@en ;
                dbp:birthday ""1990-11-09""^^xsd:date ;
                dbp:birthName ""Ackquille Jean Pollard""@en .

  # Step 2: Find GS9 and its members
  ?gs9 a dbo:MusicalGroup ;
       dbo:member ?frenchMontana .
  
  # Step 3: Identify awards related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedWith ?coro ;
         rdfs:label ?awardLabel .

  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .

  # Step 4: Determine the geographical location associated with the award
  ?award dbo:nativeOf ?nativeRegion .
  
  # Ensure the region is an American state or settlement
  ?nativeRegion a dbo:StateOrSettlement ;
                dbp:country ""United States""^^xsd:string .

  # Step 5: Identify a band member of the musical artist connected to this award
  ?musicalArtist dbo:associatedWith ?award .
  ?musicalArtist dbo:member ?bandMember .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child ?event WHERE {
  # Step 1: Identify Ferdinand II's children
  ?ferdinand dbo:child ?child .
  ?ferdinand rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .

  # Step 2: Filter for those who were commanders in war
  OPTIONAL { ?child dbo:militaryCommander ?commanderRole . }

  # Step 3: Check for association with societal events that are also television shows
  OPTIONAL {
    ?event dbo:relatedEvent ?child .
    ?event rdfs:label ?eventName .
    FILTER(CONTAINS(LCASE(?eventName), ""societal event"") && CONTAINS(LCASE(?eventName), ""television show""))
  }

  # Step 4: Link to the military force of the Algerian War
  OPTIONAL {
    ?algerianWar dbo:militaryForce ?militaryForce .
    ?child dbo:memberOfMilitaryOrganization ?militaryForce .
    ?algerianWar rdfs:label ""Algerian War""@en .
  }
}
```",4,7,5,3,2,3,3,71,1,3,0,0.25,1.0,0.4
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedMusicalArtist WHERE {
  ?gs9 rdfs:label ""GS9""@en .
  ?member dbo:memberOf ?gs9 ;
          (dbo:occupation dbo:Artist | dbo:occupation dbo:MusicalArtist) .
  ?member dbo:associatedMusicalArtist ?associatedMusicalArtist .
}",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?politicalRole WHERE {
  ?work rdfs:label ""Ab Kya Hoga""@en .
  ?work dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:profession ?profession .
    FILTER(CONTAINS(LCASE(STR(?profession)), ""politician""))
    
    ?actor dbo:politicalRole ?politicalRole .
  }
}
```",4,5,5,3,2,3,3,71,1,2,39639,0.3333333333333333,2.5227043390514632e-05,5.045026864768055e-05
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandfather WHERE {
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  
  ?child dbo:parent ?baedaMaryamI ;
         dbo:father ?father .

  ?father dbo:father ?grandfather .

  ?grandfather a dbo:Monarch ; # Assuming Monarch is a class for royalty
              dbo:officeHolder ?office . # Ensuring he held an office
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?gustavo rdfs:label ""Gustavo Petro""@en .
  ?gustavo dbo:party ?party .
}
```",2,2,3,1,2,2,3,28,2,4,0,0.3333333333333333,1.0,0.5
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Identify Roger II of Sicily's child who is also the father of William II of Sicily
  ?roger2 rdfs:label ""Roger II of Sicily""@en .
  ?child dbo:parent ?roger2 ;
         dbo:parent ?william2 .

  ?william2 rdfs:label ""William II of Sicily""@en .

  # Step 2: Identify Constance of Burgundy's spouse
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?spouse dbo:spouse ?constance .

  # Step 3: Find the child of this spouse and check if they are royalty
  ?childOfSpouse dbo:parent ?spouse ;
                 a dbo:Monarch ;  # Assuming 'a dbo:Monarch' checks for royalty

  FILTER (?child = ?childOfSpouse)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?award dbo:awardedBy dbr:United_States_Congress .
  FILTER(CONTAINS(LCASE(?awardLabel), ""show"") || CONTAINS(LCASE(?awardLabel), ""ceremony""))
  ?award rdfs:label ?awardLabel .
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?album dbo:producer ?producer .
  ?album rdfs:label ""Nothing to Gein""@en .
}

SELECT ?bandMember WHERE {
  ?producer a dbo:Band ; 
            dbo:bandMember ?bandMember .
  FILTER EXISTS { ?album dbo:producer ?producer . ?album rdfs:label ""Nothing to Gein""@en }
}

SELECT DISTINCT ?commonMember WHERE {
  { 
    ?producer a dbo:Band ; 
              dbo:bandMember ?commonMember .
    FILTER EXISTS { ?album dbo:producer ?producer . ?album rdfs:label ""Nothing to Gein""@en }
  }
  UNION
  {
    ?stoneSour a dbo:Band ;
               dbo:bandMember ?commonMember .
    ?stoneSour rdfs:label ""Stone Sour""@en .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant WHERE {
  
  # Find the leader of Madrid City Council in 2003
  ?mayor dbo:officeHolderOf ?council .
  ?council dbo:city ""Madrid""@en .
  ?mayor dbp:electionYear ""2003""^^xsd:gYear .
  
  # Find office holders during Miguel Maura's and Mariano Rajoy's tenures
  OPTIONAL {
    ?maura dbo:officeHolderOf ?office1 .
    ?rajoy dbo:officeHolderOf ?office2 .
    FILTER(?office1 != ?office2)
  }
  
  # Find residences of these leaders/office holders
  ?mayor dbo:residence ?residence .
  OPTIONAL {
    ?maura dbo:residence ?residenceMaura .
    ?rajoy dbo:residence ?residenceRajoy .
  }
  
  # Find tenants of these residences
  ?residence dbp:tenant ?tenant .
  UNION
  ?residenceMaura dbp:tenant ?tenant .
  UNION
  ?residenceRajoy dbp:tenant ?tenant .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?residenceCountry ?party WHERE {
  ?alvaroQuirós rdfs:label ""Álvaro Quirós""@en .
  
  # Office during the 2009 Galician regional election
  ?alvaroQuirós dbo:office ?office .
  FILTER (STRSTARTS(STR(?office), ""Galician Parliament"") || STRSTARTS(STR(?office), ""President of the Xunta of Galicia""))
  
  # Residence that is a country
  ?alvaroQuirós dbo:residence ?residence .
  ?residence rdf:type dbr:Country .
  BIND(?residence AS ?residenceCountry)
  
  # Membership in the Spanish Socialist Workers' Party
  ?alvaroQuirós dbo:member ?party .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  FILTER EXISTS { ?party dbo:country dbr:Spain }
}",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Wars of Karl Gustav von Baggovut
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?karl rdfs:label ""Karl Gustav von Baggovut""@en .
  ?karl dbo:participatedIn ?war .
}

# Wars of Alexander Lvovich Davydov
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?alexander rdfs:label ""Alexander Lvovich Davydov""@en .
  ?alexander dbo:participatedIn ?war .
}

# Birthplace Entity of Elena Žalinkevičaitė-Petrauskienė
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?catCountryCountry ?winstonChangBirthPlace WHERE {
  ?catCountry rdfs:label ""Cat Country""@en .
  ?catCountry dbo:country ?catCountryCountry .

  ?winstonChang rdfs:label ""Winston Chang""@en .
  ?winstonChang dbo:birthPlace ?winstonChangBirthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonChild WHERE {
  ?maximilian rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  
  # Step 1: Find Maximilian's children
  ?child dbo:parent ?maximilian .

  # Step 2: Find Dorothea of Denmark's parent among Maximilian's children
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?dorothea dbo:parent ?commonChild .

  # Step 3: Find Catherine of Austria's father among Maximilian's children
  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  ?catherine dbo:father ?commonChild .

  FILTER (?child = ?commonChild)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?birthplace WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  OPTIONAL { ?gillmore dbo:militaryUnit ?force . }
  ?gillmore dbo:birthPlace ?birthplace .
  FILTER (STRSTARTS(STR(?birthplace), STR(dbr:))) # Ensures it's a DBpedia resource
  ?gillmore dbo:deathDate ""1850-08-05""^^xsd:date .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?alfonso rdfs:label ""Alfonso IV of Aragon""@en .
  ?alfonso dbo:child ?child .
  FILTER(CONTAINS(LCASE(?child), ""peter iv""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?band .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query to find the bands Eric Clapton has been a member of
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?clapton dbo:bandMember ?band .
}

# Query to find the real name of The Fabulous Thunderbirds
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:member ?member .
  OPTIONAL { ?member foaf:name ?realName }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:father ?father .
  ?father dbo:paternalGrandfather ?grandfather .
  ?grandfather dbo:country ?na'od .
  FILTER(CONTAINS(LCASE(?na'od), ""na'od""))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?maryElphinstone rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?maryElphinstone dbo:nativePlace ?middlesex .
  FILTER (CONTAINS(LCASE(str(?middlesex)), ""middlesex""))

  ?claudelion rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?child dbo:parent ?claudelion ;
         dbo:parent ?maryElphinstone .

  ?maryElphinstone dbo:parent ?parent .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office ?residence WHERE {
  ?person rdfs:label ""Alberto Núñez Feijóo""@en .
  ?person dbo:positionHeld ?office .
  ?person dbo:residence ?residence .
  FILTER (str(?residence) = ""Santiago de Compostela"")
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?leader WHERE {
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:member ?party .
  ?party dbo:leader ?leader .
  ?leader rdf:type dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?party WHERE {
  # Step 1: Find John McDermott's death place
  ?johnMcDermott dbo:deathPlace ?deathPlace .
  
  FILTER (str(?johnMcDermott) = ""John McDermott (American artist)"")

  # Step 2: Identify political parties and organizations in the death place
  ?party a dbo:PoliticalParty ;
        dbo:location ?deathPlace .

  UNION

  ?organization a dbo:Organization ;
                dbo:location ?deathPlace .

  # Step 3: Find Pickett's Charge commander
  ?commander rdfs:label ""George Pickett""@en .
  
  # Step 4: Check if the commander was part of any party or organization in the death place
  OPTIONAL { ?commander dbo:partyMember ?party . }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?margareteSophie dbo:parent ?parent .
  
  # Step 2: Identify Carl, Duke of Württemberg's predecessor
  ?carlDuke dbo:predecessor ?predecessor .

  # Step 3: Find the child of the parent who is royalty
  ?child dbo:parent ?parent ;
         rdf:type dbo:Monarch .
  
  # Step 4: Find the grandchild (child of the royal child)
  ?grandchild dbo:parent ?child .
}
```",4,5,5,3,2,3,3,71,0,4,1,0.0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?child .
  
  ?child rdf:type dbo:Monarch .
  
  ?child dbo:parent ?williamII .
  ?williamII rdfs:label ""William II of Sicily""@en .

  OPTIONAL {
    ?rogerII rdfs:label ""Roger II of Sicily""@en .
    ?rogerII dbo:child ?ancestor .
    ?ancestor rdf:type dbo:Monarch .
    ?child dbo:parent|dbo:child ?ancestor .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonEntity WHERE {
  # William II of Sicily's father
  ?william2 rdfs:label ""William II of Sicily""@en .
  ?william2 dbo:father ?father .

  # Roger III, Duke of Apulia's parent
  ?roger3 rdfs:label ""Roger III, Duke of Apulia""@en .
  ?roger3 dbo:father ?parent .

  # Elvira of Castile, Queen of Sicily's child
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?child .

  # Find the common entity
  FILTER (?father = ?parent)
  FILTER (?parent = ?child)

  BIND(?parent AS ?commonEntity)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?lassoMoon a dbo:Album ;
             a dbo:Film ;
             rdfs:label ""Lasso the Moon""@en .
  
  ?lassoMoon dbo:actor ?actor .

  ?actor rdf:type dbo:Actor .
}
```",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?stephen rdfs:label ""Stephen V of Hungary""@en .
  ?stephen dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,1,0,0.8333333333333334,1.0,0.9090909090909091
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate ?birthPlace WHERE {
  ?eleonora rdfs:label ""Eleonora Menicucci de Oliveira""@en .
  ?eleonora dbo:occupation dbr:Politician .
  ?eleonora dbo:birthDate ?birthDate .
  ?eleonora dbo:birthPlace ?birthPlace .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Get Rod Argent's birth name
SELECT ?birthName WHERE {
  ?rodArgent foaf:name ""Rod Argent""@en .
  ?rodArgent dbo:birthName ?birthName .
}

# Step 2: Find artists from Central Region, Ghana
SELECT DISTINCT ?artist ?birthName WHERE {
  ?artist dbo:nationality dbr:Ghana ;
          dbo:region dbr:Central_Region_(Ghana) ;
          a dbo:Artist .
  ?artist foaf:name ?name ;
          dbo:birthName ?birthName .
}

# Step 3: Match birth names
SELECT DISTINCT ?matchedArtist WHERE {
  # Assuming we have Rod Argent's birth name from the first query
  VALUES (?rodBirthName) { ""Rod Antônio Pickett"" } 

  ?artist foaf:name ?name ;
          dbo:birthName ?birthName .
  
  FILTER(?birthName = ?rodBirthName)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fictionalCharacter WHERE {
  ?kentAllard rdfs:label ""Kent Allard""@en .
  OPTIONAL { 
    ?kentAllard dbo:wikiPageRedirects ?redirect .
    ?redirect dbo:character ?fictionalCharacter .
  }
  UNION
  {
    ?kentAllard dbo:workExample ?work .
    ?work dbo:character ?fictionalCharacter .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work (GROUP_CONCAT(DISTINCT ?producer; separator="", "") AS ?producers) WHERE {
  # For Cora Sue Collins
  { 
    ?cora rdfs:label ""Cora Sue Collins""@en .
    ?cora dbo:filmography ?work1 .
    ?work1 dbo:producer ?producer .
    BIND(?work1 AS ?work)
  }
  
  UNION
  
  # For Janet Gaynor
  {
    ?janet rdfs:label ""Janet Gaynor""@en .
    ?janet dbo:filmography ?work2 .
    ?work2 dbo:producer ?producer .
    BIND(?work2 AS ?work)
  }
}
GROUP BY ?work
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?redirect WHERE {
  OPTIONAL { 
    ?entity rdfs:label ""Spanish Socialist Workers' Party""@en .
  }
  OPTIONAL {
    ?entity dbo:wikiPageRedirects ?redirect .
  }
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?force ?birthplace WHERE {
  # Step 1: Identify Quincy Adams Gillmore
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  
  # Step 2: Find the award and its awardee
  ?award dbo:recipient ?awardee .
  ?gillmore dbo:award ?award .

  # Step 3: Determine the force associated with the awardee
  OPTIONAL { ?awardee dbo:militaryUnit ?force . }

  # Step 4: Identify the person deceased on 1850-08-05
  ?deceased dbo:dateOfDeath ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05""^^xsd:date)

  # Step 5: Find the birthplace of this person, ensuring it is a settlement and American
  ?deceased dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States .

  # Combine information to get the desired result
  BIND(?force AS ?resultForce)
  BIND(?birthPlace AS ?resultBirthplace)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?team ?leader ?nativeCountry WHERE {
  # Find Thomas Letsch's team
  ?letsch dbo:givenName ""Thomas"" ;
          dbo:familyName ""Letsch"" .
  
  ?letsch dbo:manager ?manager .
  ?manager dbp:team ?team .

  # Ensure the team is a soccer club and part of a sports season
  ?team dbo:sport dbr:Soccer ;
        dbo:season ?season .

  # Identify the leader of West Germany during the relevant period
  ?leader dbo:country dbr:West_Germany ;
          dbo:office ""Chancellor"" .
  
  # Find the native country of this leader
  ?leader dbp:nativeCountry ?nativeCountry .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office ?event WHERE {
  ?anxo rdfs:label ""Anxo Quintana""@en .
  ?anxo dbo:office ?office .
  OPTIONAL { 
    ?office dbo:relatedEvent ?event .
  }
}
```",4,5,5,3,2,3,3,71,0,2,2,0.0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  ?anxo rdfs:label ""Anxo Quintana""@en .
  ?anxo dbo:administration ?administration .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?spouse WHERE {
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:child ?child .

  ?stephenV dbo:spouse ?spouse .
  
  OPTIONAL { ?spouse dbo:title ?title . FILTER regex(?title, ""royalty"", ""i"") }

  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  ?philip dbo:parent ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alumnus WHERE {
  ?university rdfs:label ""Пловдивски университет „Паисий Хилендарски“""@bg .
  ?university dbo:alumni ?alumnus .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?caroline rdfs:label ""Caroline Louise Bevan Symonds""@en .
  ?caroline dbo:spouse ?spouse .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  
  # Step 2: Find Spouse of Saw Min Phyu
  ?sawMinPhyu dbo:spouse ?spouse .

  # Step 3: Identify Child of Saw Min Phyu's Spouse
  ?spouse dbo:child ?child .

  # Step 4: Check if the child is royalty and find predecessor
  ?child a dbo:Monarch .
  ?child dbo:predecessor ?predecessor .

  # Step 5: Identify Myat Hpone Pyo
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .

  # Step 6: Find Father of Myat Hpone Pyo (Royalty)
  ?myatHponePyo dbo:father ?royalFather .
  ?royalFather a dbo:Monarch .

  # Step 7: Find Spouse of This Royal Father
  ?royalFather dbo:spouse ?spouseOfRoyalFather .

  # Step 8: Identify Child of Saw Min Hla
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?sawMinHla dbo:child ?childOfSawMinHla .

  # Step 9: Match Conditions
  FILTER (?spouseOfRoyalFather = ?childOfSawMinHla)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?force WHERE {
  ?edmund rdfs:label ""Edmund Hakewill-Smith""@en .
  ?edmund dbo:award ?award .
  
  ?otherRecipient dbo:recipient ?award .
  ?otherRecipient dbo:member ?force .
}
```",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?entity rdfs:label ""The Shadow (video game)""@en .
  ?entity dbo:alterEgo ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?collinsProducer ?gaynorProducer WHERE {
  # Cora Sue Collins' claim to fame and its producer
  ?cora rdfs:label ""Cora Sue Collins""@en .
  ?cora dbo:claimToFame ?workCollins .
  ?workCollins dbo:producer ?collinsProducer .

  # Janet Gaynor's claim to fame (movie) and its producer
  ?janet rdfs:label ""Janet Gaynor""@en .
  ?janet dbo:film ?movieGaynor .
  ?movieGaynor dbo:producer ?gaynorProducer .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?mary dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .
  ?film dbo:starring ?actor .
  ?author dbo:filmography ?film .
}",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tvShow WHERE {
  ?person rdfs:label ""Richard Dean Anderson""@en .
  ?person dbo:actorIn ?tvShow .
  FILTER (STRSTARTS(STR(?tvShow), ""http://dbpedia.org/resource/"") && 
          STRSTARTS(STR(?tvShow), ""http://dbpedia.org/resource/Category:Television_series""))
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
# Query for Bob Thompson's band
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?band .
}

# Query for Walter B. Gibson's fictional character
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character WHERE {
  ?walter rdfs:label ""Walter B. Gibson""@en .
  ?walter dbo:work ?character .
  FILTER (STRSTARTS(STR(?character), ""http://dbpedia.org/resource/"") && 
          STRCONTAINS(STR(?character), ""comics""))
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?georgeH rdfs:label ""George H. Cameron""@en .
  ?georgeH dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,2,87241,0.0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?album rdfs:label ""Always the Love Songs""@en .
  ?album dbo:composer ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?deathPlace WHERE {
  { 
    ?reed rdfs:label ""Reed Howes""@en .
    ?reed dbo:deathPlace ?deathPlace .
    BIND(""Reed Howes"" AS ?name)
    BIND(?reed AS ?person)
  }
  UNION
  { 
    ?carolyn rdfs:label ""Carolyn Jones""@en .
    ?carolyn dbo:deathPlace ?deathPlace .
    BIND(""Carolyn Jones"" AS ?name)
    BIND(?carolyn AS ?person)
  }
}
```",2,2,3,1,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?peter rdfs:label ""Peter IV of Aragon""@en .
  ?peter dbo:father ?father .
  ?father a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Stuart Tosh's associated musical artist
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?stuart rdfs:label ""Stuart Tosh""@en .
  ?stuart dbo:associatedBand ?associatedArtist .
}

# Query for the writer of Wizards of Waverly Place soundtrack who is also a musical artist and an artist
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?musicalArtist WHERE {
  ?soundtrack rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .
  ?soundtrack dbo:composer|dbo:writer ?writer .
  ?writer dbo:associatedBand ?musicalArtist .
  ?musicalArtist a dbo:MusicalArtist ;
                a dbo:Artist .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?madridOfficeHolder ?carCivilWarPolitician WHERE {
  # Part 1: Find the tenant of Madrid
  ?madridOfficeHolder dbo:residence dbr:Madrid ;
                     a dbo:OfficeHolder .

  # Part 2: Find an office holder and politician in the Central African Republic Civil War
  ?carCivilWarPolitician dbo:occupation dbr:Politician ;
                         dbo:participatedIn dbr:Central_African_Republic_Civil_War_(2012–present) .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer WHERE {
  ?book rdfs:label ""Always the Love Songs""@en .
  ?book dbo:author ?writer .
  
  OPTIONAL {
    ?commander dbo:participatedInWar ?war .
    ?war rdfs:label ""Russo-Polish War (1654-1667)""@en .
    ?commander dbo:successor ?successor .
    ?successor a dbo:Politician ;
               dbo:officeHolder true .
    FILTER(?writer = ?successor)
  }
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeMadrid2003 ?partyOffice WHERE {
  # Find Mariano Rajoy
  ?mariano a dbo:Person ;
           rdfs:label ""Mariano Rajoy""@en .

  # Office in 2003 Madrid City Council election
  OPTIONAL { 
    ?mariano dbo:positionHeld ?officeMadrid .
    ?officeMadrid dbo:electionDate ?date .
    FILTER (YEAR(?date) = 2003 && CONTAINS(LCASE(STR(?officeMadrid)), ""madrid city council""))
    BIND(?officeMadrid AS ?officeMadrid2003)
  }

  # Office in Conservative Republican Party
  OPTIONAL {
    ?mariano dbo:positionHeld ?partyOffice .
    ?partyOffice dbo:organization dbr:Conservative_Party_(Spain) .
    FILTER (CONTAINS(LCASE(STR(?partyOffice)), ""leader"") || CONTAINS(LCASE(STR(?partyOffice)), ""politician""))
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?album rdfs:label ""No Alternative""@en .
  ?album dbo:producer ?writer .
  ?writer dbo:bandMember ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalSpouse WHERE {
  ?antoinette rdfs:label ""Princess Antoinette of Brunswick-Wolfenbüttel""@en .
  ?child dbo:childOf ?antoinette ;
         dbo:title ?title . # Assuming title indicates royalty
  FILTER EXISTS { ?title rdfs:label ?royalTitle } # Check if the child is a royalty

  ?spouse1 dbo:spouse ?child .

  ?finalSpouse dbo:spouse ?spouse1 .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?paulusPowellBirthPlace ?governor1 ?awardeeBirthPlace ?governor2 WHERE {
  # Step 1: Find Paulus Powell's birth place
  ?paulusPowell rdfs:label ""Paulus Powell""@en .
  ?paulusPowell dbo:birthPlace ?paulusPowellBirthPlace .

  # Step 2: Find the governor of Paulus Powell's birth place
  ?region1 rdfs:label ?paulusPowellBirthPlaceLabel .
  FILTER(lang(?paulusPowellBirthPlaceLabel) = ""en"")
  ?region1 dbo:governmentHead ?governor1 .

  # Step 3: Find an awardee of Vince Gilligan's awards and their birth place
  ?award rdfs:label ?awardLabel .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Step 4: Find the governor of the awardee's birth place
  ?region2 rdfs:label ?awardeeBirthPlaceLabel .
  FILTER(lang(?awardeeBirthPlaceLabel) = ""en"")
  ?region2 dbo:governmentHead ?governor2 .

  # Step 5: Check if the governors share a common birth place
  OPTIONAL {
    ?governor1 dbo:birthPlace ?commonBirthPlace .
    ?governor2 dbo:birthPlace ?commonBirthPlace .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?harriette rdfs:label ""Harriette Arlene Lake""@en .
  ?harriette dbo:spouse ?roger .
  ?roger rdfs:label ""Roger Pryor (actor)""@en .
  ?harriette dbp:partyMembership ?party .
  ?party rdfs:label ""Republican Party (United States)""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?scientist ?almaMater WHERE {
  ?scientist a dbo:Scientist ;
             dbo:nationality ?nationality .
  FILTER (CONTAINS(LCASE(?nationality), ""australian""))
  
  ?scientist dbo:award ?award .
  ?award rdfs:label ""Australian Laureate Fellowship""@en .

  OPTIONAL { 
    ?scientist dbo:almaMater ?almaMater .
  }
}
```",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityInAthens ?war WHERE {
  ?ventiris rdfs:label ""Konstantinos Ventiris""@en .
  
  OPTIONAL { 
    ?ventiris dbo:birthPlace ?athensEntity .
    ?athensEntity rdfs:label ?entityInAthens .
  }
  
  OPTIONAL {
    ?ventiris dbo:occupation ?occupation .
    ?occupation rdfs:label ?war .
  }

  FILTER (lang(?entityInAthens) = 'en' && lang(?war) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?birthplace WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:birthPlace ?birthplace .
  
  FILTER (
    ?birthplace IN (dbr:Tokyo, dbr:Nagoya, dbr:Osaka, dbr:Sapporo, dbr:Fukuoka, dbr:Hiroshima, dbr:Naha) 
    || ?birthplace rdfs:label ?label . 
    FILTER(CONTAINS(LCASE(?label), ""japan""))
  )
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?bob rdfs:label ""Bob Crewe""@en .
  ?bob dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producerProfession ?alterEgoProfession WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio rdfs:label ""Coke Studio Philippines""@en .
  ?cokeStudio dbo:creator ?producer .

  # Get the profession of the producer
  ?producer dbo:profession ?producerProfession .

  # Find the alter ego of The Shadow
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Get the profession of the alter ego
  ?alterEgo dbo:profession ?alterEgoProfession .
}
```",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?producer WHERE {
  ?album rdfs:label ""Nothing to Gein""@en .
  ?album dbo:producer ?producer .
  ?producer rdf:type dbo:Organization ;
            rdf:type dbo:Band .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person rdf:type dbo:SportsManager .
  ?team dbo:managedBy ?person ;
        rdf:type dbo:SoccerClub, dbo:SportsOrganization .
  ?season dbo:club ?team ;
          rdf:type dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason .
  ?vfl2007 dbo:succeeds ?successorSeason ;
           rdf:type dbo:FootballLeagueSeason, dbo:SportsTeamSeason, dbo:SportsSeason .
  FILTER(STR(?vfl2007) = ""VfL Bochum season 2006-07"")
  ?successorSeason dbo:club ?team .
  ?successorManager dbo:managedTeam ?team ;
                    rdf:type dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason .
  BIND(?successorManager AS ?manager)
}",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?role ?territory WHERE {
  # Part 1: Olaf I of Denmark
  { 
    ?olaf rdfs:label ""Olaf I of Denmark""@en .
    OPTIONAL { ?olaf dbo:office ?role . }
    OPTIONAL { ?role dbp:administeredFrom ""Copenhagen""@en . }
    BIND(?olaf AS ?person)
  }

  UNION

  # Part 2: Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  {
    ?christian rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
    OPTIONAL { ?christian dbo:office ?role . }
    BIND(?christian AS ?person)
  }

  # Retrieve territories if available
  OPTIONAL { ?role dbp:administeredTerritory ?territory . }
}
```",4,5,5,2,3,2,3,28,0,1,1,0.0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  # Janet Gaynor's notable work ""Seventh Heaven""
  ?seventhHeaven rdfs:label ""Seventh Heaven""@en .
  ?seventhHeaven dbo:director ?director .
  ?seventhHeaven dbo:producer ?producer .

  # The Adventures of Tom Sawyer (1938 film)
  ?tomSawyerFilm rdfs:label ""The Adventures of Tom Sawyer (1938 film)""@en .
  ?tomSawyerFilm dbo:producer ?producer2 .

  FILTER (?producer = ?producer2)

  # Lamont Cranston as The Shadow
  ?shadowCharacter rdfs:label ""Lamont Cranston""@en .
  ?shadowCharacter dbo:alterEgoOf ?theShadow .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?psoe rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?feijoo dbo:officeHolder ?office .
  ?feijoo foaf:name ""Alberto Núñez Feijóo""@en .
  ?tenant dbo:positionHeld ?office ;
          dbo:country <http://dbpedia.org/resource/Spain> .
  FILTER EXISTS { ?tenant dbo:party ?psoe }
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?team WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          a dbo:SportsManager ;
          dbo:nationality ?nationality .
  
  FILTER(CONTAINS(LCASE(STR(?nationality)), ""west germany""))

  ?person dbo:sportsManagerForTeam ?team .

  ?team dbp:season ""2007–08 VfL Bochum season"" ;
        a dbo:SoccerClub, dbo:SportsOrganization .

  BIND(?person AS ?manager)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?kiyosu rdfs:label ""Kiyosu""@en .
  ?kiyosu dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?commander dbo:commanderOf ?war .
  ?war rdfs:label ""French Revolutionary Wars""@en .

  OPTIONAL { ?commander dbo:nationality ?nationality . }
  OPTIONAL { ?commander dbo:birthPlace ?place . }

  FILTER (
    EXISTS { ?nationality rdfs:label ""Poland""@en } ||
    EXISTS { ?place rdfs:label ""Poland""@en }
  )
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  ?tom rdfs:label ""Tom Phillips (Royal Navy officer)""@en .
  ?tennant rdfs:label ""William Tennant (Royal Navy officer)""@en .
  
  ?tom dbo:participatedIn ?war .
  ?tennant dbo:participatedIn ?war .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?author rdfs:label ""Hillary Clinton""@en .
  ?author dbo:officeHolder ?office .
  ?author dbo:politicalPartyMember ?party .
  ?author dbo:work ?work .
  ?work rdf:type ?type .
  FILTER (
    (?type = <http://dbpedia.org/ontology/Book> || 
     ?type = <http://dbpedia.org/ontology/WrittenWork>)
  )
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?native WHERE {
  # Find the producer of ""Storm in a Teacup""
  ?film rdfs:label ""Storm in a Teacup""@en .
  ?film dbo:producer ?producer .

  # Find the writer of ""Boom Shack-A-Lak""
  ?song rdfs:label ""Boom Shack-A-Lak""@en .
  ?song dbo:composer ?writer .

  # Check if producer and writer are the same person
  FILTER (?producer = ?writer)

  # Get birthplace of this individual
  ?writer dbo:birthPlace ?birthPlace .

  # Find natives of that birthplace
  ?native dbo:nativeOf ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""Hong Kong C Team""@en .
  ?team a dbo:SoccerTeam ; 
        dbo:manager ?manager .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alumnus WHERE {
  ?etonCollege rdfs:label ""Eton College""@en .
  ?etonCollege dbo:alumni ?alumnus .
}
```",1,1,2,1,1,3,3,71,0,0,211,0,0.0,0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No valid SPARQL query can be constructed due to incomplete input.
```",1,1,2,1,1,3,2,20,0,0,39790,0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?bobby dbo:nativePlace ?place .
    FILTER (CONTAINS(LCASE(str(?place)), ""florida""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Find Charles II of Naples' spouse
  ?charles rdfs:label ""Charles II of Naples""@en .
  ?charles dbo:spouse ?spouse .

  # Step 2: For each spouse of Maria of Bytom, find their father's parent (grandparent)
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?mariaSpouse .
  
  ?mariaSpouse dbo:father ?father .
  ?father dbo:parent ?grandparent .

  # Step 3: Filter these grandparents to find those who are royalty
  ?grandparent a dbo:Monarch .

  # Step 4: Retrieve children of Stephen V of Hungary
  ?stephen rdfs:label ""Stephen V of Hungary""@en .
  ?stephen dbo:child ?child .

  # Step 5: Match the results from steps 3 and 4
  FILTER (?grandparent = ?child)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify Maria Anna of Bavaria
  ?maria rdfs:label ""Maria Anna of Bavaria (1574–1616)""@en .
  
  # Step 2: Find her children
  ?maria dbo:child ?child .

  # Step 3: Determine the father of that child
  ?child dbo:father ?father .

  # Step 4: Identify a royalty among these fathers
  ?father dbo:royalty ?royalty .

  # Step 5: Find the commander in war of 2nd Dragoon Regiment (France)
  ?war dbo:commander ?commander .
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
  ?regiment dbo:participatedIn ?war .

  # Step 6: Identify societal event, event, and television show
  ?war a dbo:SocietalEvent ;
      a dbo:Event ;
      dbo:televisionShow ?tvShow .

  # Ensure the commander is linked to the war
  FILTER(?commander = ?father)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:occupation ?singer .
  ?singer rdfs:label ""Singer""@en .
}
```",1,1,2,1,1,2,2,9,69,353,10295,0.16350710900473933,0.006657661134697028,0.012794363063230113
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movie ?actor WHERE {
  # Find movies starring Audrey Hepburn
  ?maria rdfs:label ""Audrey Hepburn""@en .
  ?maria dbo:starring ?movie .

  # Find spouse of Janusz Kamiński
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .

  # Check if the spouse acted in any of Audrey Hepburn's movies
  ?spouse dbo:starring ?movie .
  
  # Get actor details from the movie
  ?movie dbo:actor ?actor .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book WHERE {
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?billClinton dbo:author ?book .
  ?book a dbr:Book .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?margarete rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?albrecht dbo:child ?child .
  ?margarete dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.geonames.org/ontology#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?birthplace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthplace .
  ?birthplace geo:hasFeatureClass geo:P . # P indicates a populated place
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office ?residence WHERE {
  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  
  # Find the office during the 2009 Galician regional election
  OPTIONAL { 
    ?alvaro dbo:electedAs ?office .
    FILTER (CONTAINS(LCASE(STR(?office)), ""2009 galician regional election""))
  }
  
  # Check if he has a residence that is a country
  OPTIONAL {
    ?alvaro dbo:residence ?residence .
    ?residence rdf:type <http://dbpedia.org/ontology/Country> .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find T.I.'s albums or songs
SELECT ?album WHERE {
  ?album dbo:artist dbr:T.I. .
}

# Step 2: Identify music videos and their actors for those works
SELECT DISTINCT ?actor WHERE {
  ?album dbo:hasMusicalWork ?song .
  ?video dbo:musicalWork ?song ;
         dbo:performer ?actor .
}

# Step 3: Retrieve the cast of ""Shelby Oaks""
SELECT DISTINCT ?castMember WHERE {
  dbr:Shelby_Oaks dbo:castMember ?castMember .
}

# Step 4: Check for overlap in actors
SELECT DISTINCT ?commonActor WHERE {
  ?album dbo:artist dbr:T.I. ;
         dbo:hasMusicalWork ?song .
  ?video dbo:musicalWork ?song ;
         dbo:performer ?commonActor .
  dbr:Shelby_Oaks dbo:castMember ?commonActor .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Step 1: Get Joey B's birth name
  ?joeyB rdfs:label ""Joey B""@en .
  ?joeyB dbo:birthName ?birthName .

  # Step 2: Get Rod Argent's profession
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Step 3: Get $pacely's associated musical artist
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely dbo:associatedBand ?band .
  
  # Step 4: Find a person matching all criteria
  ?person dbo:birthName ?birthName ;
          dbo:profession ?profession ;
          dbo:associatedBand ?band .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?album rdfs:label ""Sappy""@en .
  ?album a dbo:Album ;
         dbo:composer ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Step 1: Identify Rodney Lees' award and awardee
  ?award dbo:recipient ?rodneyLees .
  FILTER (str(?rodneyLees) = ""Rodney Lees"") .

  # Step 2: Find the parent of the awardee
  ?awardee dbo:parent ?parent .

  # Step 3: Identify a child of Frederick Stanley who is a politician
  ?frederickStanley dbo:child ?politicianChild .
  FILTER (str(?frederickStanley) = ""Frederick Stanley, 16th Earl of Derby"") .
  ?politicianChild rdf:type dbo:Politician .

  # Step 4: Find the father of this politician
  ?politicianChild dbo:father ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?author WHERE {
  ?kateDimbleby rdfs:label ""Kate Dimbleby""@en .
  ?parent dbo:child ?kateDimbleby .
  
  ?work dbo:creator ?parent ;
        dbo:castMember ?veraLynn .

  ?veraLynn rdfs:label ""Vera Lynn""@en .

  OPTIONAL { ?work dbo:author ?author . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Linda Sue Cobb""@en .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?guillaume rdfs:label ""Guillaume Peltier""@en .
  ?guillaume dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathPlace dbr:Taipei .
  ?person dbo:nationality dbr:China ; # Assuming the person has a connection to China
          dbo:child ?child .
  ?child rdf:type dbo:Politician ;
         dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?stuart rdfs:label ""Stuart Mcbeath Tosh""@en .
  OPTIONAL { ?stuart dbo:associatedBand ?band . }
  OPTIONAL { ?stuart dbo:memberOfBand ?band . }
  ?band dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?film rdfs:label ""A Star Is Born (1937 film)""@en .
  ?film dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Query to find Thomas Letsch's native country
SELECT ?nationality WHERE {
  ?letsch rdfs:label ""Thomas Letsch""@en .
  ?letsch dbo:nationality ?nationality .
}

# Query to find the manager of VfL Bochum
SELECT ?manager WHERE {
  ?bochum rdfs:label ""VfL Bochum""@en .
  ?bochum dbo:manager ?manager .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?helena rdfs:label ""Helena, Archduchess of Austria""@en .
  
  ?helena dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  OPTIONAL { ?child rdf:type ?type . FILTER (STRSTARTS(STR(?type), STR(dbo:Monarch)) || STRSTARTS(STR(?type), STR(dbo:RoyalFamilyMember))) }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?governor dbo:governorOf db:Virginia .
  ?governor dbo:occupation db:Politician .
  ?governor dbo:birthPlace ?birthPlace .
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?author rdfs:label ""Cece Bell""@en .
  ?author dbo:nationality db:UnitedStates .
  ?author dbo:birthPlace ?birthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?child dbo:parent ?baedaMaryamI .
  ?child dbo:parent ?dawitI .
  ?father dbo:child ?child .
  ?grandfather dbo:child ?father .
  FILTER (STRSTARTS(STR(?grandfather), ""http://dbpedia.org/resource/"")) # Ensure it's a DBpedia resource
}
```",6,8,7,3,3,3,3,71,1,5742,0,0.00017412502176562773,1.0,0.00034818941504178273
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?otherProfessional WHERE {
  ?shatrughan rdfs:label ""Shatrughan Sinha""@en .
  ?shatrughan dbo:profession ?profession .

  ?otherProfessional a dbo:Actor ; # Assuming Actor as a placeholder for his profession
                    dbo:profession ?sameProfession .
  
  FILTER(?sameProfession = ?profession)
  FILTER(?otherProfessional != ?shatrughan) # Exclude Shatrughan Sinha himself
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?constance rdfs:label ""Constance of Burgundy""@en .
  
  ?constance dbo:spouse ?spouse .

  ?spouse dbo:child ?royalChild .
  
  ?royalChild a ?royaltyType .
  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember)
  )

  ?royalChild dbo:child ?grandchild .
}
```",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?linda rdfs:label ""Linda Bruckheimer""@en .
  ?linda dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?governor WHERE {
  ?virginia rdfs:label ""Virginia""@en .
  ?virginia dbo:governor ?governor .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
# Step 1: Find the landmark at the specified elevation
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?landmark ?location WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  FILTER(?elevation = ""20.116800000000001347""^^xsd:float)
  OPTIONAL { ?landmark geo:location ?location }
}

# Step 2: Find Harriette Arlene Lake and her party membership
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?party WHERE {
  ?person rdfs:label ""Harriette Arlene Lake""@en .
  OPTIONAL { ?person dbo:memberOfParty ?party }
}

# Step 3: Determine the ruling party in the location of the landmark
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?rulingParty WHERE {
  ?location a dbo:Place ;
            dbp:country ?country .
  OPTIONAL { ?country dbo:rulingParty ?rulingParty }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  VALUES ?person { 
    ?stonebwoy ?shattawale 
  }
  
  ?stonebwoy rdfs:label ""Stonebwoy""@en .
  ?shattawale rdfs:label ""Shatta Wale""@en .

  OPTIONAL { ?stonebwoy dbo:musicalArtist ?artist . }
  OPTIONAL { ?shattawale dbo:musicalArtist ?artist . }

  FILTER(?artist != ?stonebwoy && ?artist != ?shattawale)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?stephenV a dbo:Monarch ;
            rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:child ?child .
  
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouse .
  
  ?spouse a dbo:Person ;
          dbo:father ?father .
          
  FILTER EXISTS { ?father dbo:royalTitle ?title }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandfather ?grandchild ?father WHERE {
  # Identify Alfonso VI
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  
  # Find his children
  ?alfonso dbo:child ?child .

  # Find grandchildren (children of the child)
  ?child dbo:child ?grandchild .

  # Identify the father of each grandchild
  ?father dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild rdf:type dbo:Monarch .

  # Ensure the father is royalty and an office holder, with a connection to William I
  ?father rdf:type dbo:Monarch .
  ?father rdf:type dbo:OfficeHolder .
  
  # Connection to William I (this part may need historical context or specific properties)
  OPTIONAL { 
    ?father dbo:relatedTo ?williamI .
    ?williamI rdfs:label ""William I""@en .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  # Find Doon Arbus and her parent
  ?doonArbus rdfs:label ""Doon Arbus""@en .
  ?doonArbus dbo:parent ?parent .

  # Find a photographer who is also an actor in a movie with a decedent at Los Angeles
  ?photographer rdf:type dbo:Photographer ;
                foaf:isPrimaryTopicOf ?actorPage ;
                dbo:profession ""Actor""@en .
  ?actorPage dbo:film ?movie .
  ?movie dbo:location ?decedentLocation .
  ?decedentLocation rdfs:label ""Los Angeles, California""@en .

  # Ensure the photographer has a parent
  ?photographer dbo:parent ?sameParent .

  FILTER (?parent = ?sameParent)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?actor ?album WHERE {
  # Find The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Find the actor associated with this alter ego in an album
  ?alterEgo dbo:actor ?actor .
  ?album dbo:actor ?actor ;
         dbo:title ?title .

  # Identify T.I.'s song that is also a musical work
  ?ti rdfs:label ""T.I.""@en .
  ?song dbo:song ?ti ;
        rdfs:label ?titleSong .

  FILTER regex(?title, ?titleSong)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?burhan rdfs:label ""Burhan Belge""@en .
  ?burhan dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory WHERE {
  ?copenhagen rdfs:label ""Copenhagen""@en .
  ?copenhagen dbo:administrativeRegion ?territory .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeGalicia ?personSpain WHERE {
  # Find the office of the leader in the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  ?candidate dbo:electedAs ?officeGalicia .

  # Find tenants of Spain
  ?person dbo:officeHolder ?officeSpain .
  ?officeSpain dbo:country dbr:Spain .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonBandMember WHERE {
  # Step 1: Find Mark Eitzel's band memberships
  ?eitzel rdfs:label ""Mark Eitzel""@en .
  ?eitzel dbo:bandMember ?markEitzelBand .

  # Step 2: Find R.E.M.'s associated musical artists
  ?rem rdfs:label ""R.E.M.""@en .
  ?rem dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Identify which of these is an artist
  ?associatedArtist a dbo:Artist .

  # Step 4: Find band members common to both Mark Eitzel and the identified artist
  ?artistBandMember dbo:bandMember ?commonBandMember .
  ?markEitzelBand dbo:bandMember ?commonBandMember .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?person rdfs:label ""Scott LaFaro""@en .
  ?person dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?album rdfs:label ""Burnt by the Sun""@en .
  ?album a dbo:Album .
  ?album dbo:artist ?artist .
  FILTER EXISTS { ?artist a (dbo:Band|dbo:MusicalArtist) }
}
```",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  ?ferdinandIII rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?child dbo:parent ?ferdinandIII ;
         dbo:parent ?commonParent .

  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaRenata dbo:parent ?commonParent .

  ?father dbo:child ?child .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?deathPlace ?administeredTerritory WHERE {
  {
    VALUES ?person { 
      dbr:Christian_Ditlev_Ammertorp_Hansen 
      dbr:Olaf_I_of_Denmark 
    }
    ?person dbo:deathPlace ?deathPlace .
    ?deathPlace rdf:type dbo:Settlement .
    OPTIONAL {
      ?deathPlace dbo:administers ?administeredTerritory .
    }
  }
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbo:commonName ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?roger rdfs:label ""Roger Pryor""@en .
  ?roger dbo:spouse ?spouse .
  ?spouse dbo:partyMember ?party .
  FILTER (STR(?party) = STR(<http://dbpedia.org/resource/Republican_Party_(United_States)>))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work ?country WHERE {
  ?author rdfs:label ""Lao She""@en .
  ?author dbo:birthName ""Shu Qingchun"" .  # To ensure we are referring to the correct Lao She
  ?author dbo:author ?work .
  OPTIONAL { ?work dbo:country ?country }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenantOfSpain ?tenantOfCompostela ?officeLeader ?event WHERE {
  ?anxo rdfs:label ""Anxo Quintana""@en .
  
  # Find tenant of Spain
  OPTIONAL { 
    ?anxo dbo:office ?officeSpain .
    ?officeSpain rdfs:label ?tenantOfSpain .
    FILTER(CONTAINS(LCASE(?tenantOfSpain), ""spain""))
  }
  
  # Find tenant of Santiago de Compostela
  OPTIONAL {
    ?anxo dbo:office ?officeCompostela .
    ?officeCompostela rdfs:label ?tenantOfCompostela .
    FILTER(CONTAINS(LCASE(?tenantOfCompostela), ""santiago de compostela""))
  }
  
  # Find office of the leader of the administration
  OPTIONAL {
    ?anxo dbo:office ?officeLeader .
    ?officeLeader rdfs:label ?leaderOfficeLabel .
    FILTER(CONTAINS(LCASE(?leaderOfficeLabel), ""leader of the administration""))
  }

  # Find events related to this office
  OPTIONAL {
    ?officeLeader dbo:hasEvent ?event .
    ?event rdfs:label ?eventLabel .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?miguelOffice ?leader ?residence ?tenant WHERE {
  # Find Miguel Maura's office in the context of the 2003 Madrid City Council election
  ?miguel dbo:officeHolder ?position .
  ?position rdfs:label ""Miguel Maura""@en .
  
  # Identify the leader of the Madrid City Council after the 2003 elections
  ?leader dbo:mayorOf dbp:Madrid_City_Council ;
          dbo:termStart ?startYear .
  FILTER (?startYear >= 2003 && ?startYear < 2007) # Assuming a typical term length

  # Find the residence of the leader
  ?leader dbo:residence ?residence .

  # Determine the tenant of that residence
  ?residence dbo:tenant ?tenant .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  { 
    ?stonebwoy rdfs:label ""Stonebwoy""@en .
    ?stonebwoy dbo:associatedMusicalArtist ?artist .
  }
  UNION
  {
    ?centralMusician rdfs:label ?name ;
                     dbo:nationality dbr:Ghana ;
                     dbo:birthPlace dbr:Central_Region,_Ghana .
    ?centralMusician dbo:profession dbr/Musician .
    ?centralMusician dbo:associatedMusicalArtist ?artist .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?allan rdfs:label ""Allan Arbus""@en .
  ?allan dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?party rdfs:label ""Ulster Unionist Party""@en .
  ?party dbo:leader ?leader .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?william2 rdfs:label ""William II of Sicily""@en .
  ?child dbo:parent ?william2 ;
         a dbo:Person .
  ?child dbo:father ?father .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonMember WHERE {
  # Find producer of Nothing to Gein who is an organization/group
  ?nothingToGein dbo:band ""Nothing to Gein"" .
  ?producer dbo:producedBy ?nothingToGein ;
            a dbo:Organization ; # Assuming producers are organizations/groups

  # Find band member of Stone Sour
  ?stoneSour dbo:band ""Stone Sour"" .
  ?commonMember dbo:bandMember ?stoneSour ;

  # Ensure the common entity is both producer and band member
  ?producer dbp:name ?commonMember ;
            a dbo:Organization .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?work ?actor WHERE {
  # Step 1: Identify the fictional character Kent Allard
  ?character rdfs:label ""Kent Allard""@en .
  
  # Step 2: Retrieve the alter ego or another name associated with this character
  OPTIONAL { ?character dbo:alias ?alterEgo . }
  
  # Step 3: Find the work most famously associated with Kent Allard
  OPTIONAL { ?character dbo:workExample ?work . }
  
  # Step 4: Identify the actor who played Johnny Doughboy
  ?actor foaf:name ""Johnny Doughboy""@en .
  
  # Connect the actor to the professional role related to Kent Allard
  OPTIONAL { ?actor dbo:profession ?professionalRole . }
}
```",6,8,7,3,2,3,3,71,0,1,1,0.0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?albumActor ?movie WHERE {
  # Step 1: Find T.I.'s album
  ?album dbo:artist dbr:T.I. ;
         rdfs:label ?albumLabel .
  
  # Step 2: Find the actor associated with that album
  ?musicVideo dbo:starring ?albumActor ;
              dbo:work ?album .

  # Step 3: Identify the author of ""Smartbomb""
  ?book dbo:author ?smartbombAuthor ;
        rdfs:label ""Smartbomb""@en .
  
  # Step 4: Find a movie featuring both individuals
  ?movie dbo:starring ?albumActor, ?smartbombAuthor .
}
```",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?successor WHERE {
  ?patrice rdfs:label ""Patrice Martin-Lalande""@en .
  ?patrice dbo:successor ?successor .
  
  FILTER EXISTS { ?successor rdf:type dbo:Politician . }
  FILTER EXISTS { ?successor dbo:nationality <http://dbpedia.org/resource/France> . }
}
```",1,3,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?role WHERE {
  ?christian rdfs:label ""Christian IX of Denmark""@en .
  ?christian dbo:positionHeld ?role .
}

UNION

SELECT ?administration WHERE {
  ?schleswig rdfs:label ""Duchy of Schleswig""@en .
  ?schleswig dbo:mayor ?administration .
  
  OPTIONAL { 
    ?copenhagen rdfs:link ""Copenhagen""@en .
    ?copenhagen dbo:administrativeUnit ?administration .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyMember ?personWithBirthName WHERE {
  # Find a member of the Republican Party (United States)
  ?partyMember dbo:partyMemberOf dbr:Republican_Party_(United_States) .

  # Identify Tisha Sterling
  ?tisha rdfs:label ""Tisha Sterling""@en .
  
  # Find one of her parents
  ?tisha dbo:parent ?parent .

  # Get the birth name of that parent
  ?parent dbo:birthName ?birthName .

  # Find a person with the same birth name
  ?personWithBirthName dbo:birthName ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?book WHERE {
  # Part 1: Commander in Third Taiwan Strait Crisis
  ?event dbo:name ""Third Taiwan Strait Crisis""@en .
  ?event dbo:commander ?commander .

  # Part 2: Book authored by Bill Clinton
  ?bill rdfs:label ""Bill Clinton""@en .
  ?book dbo:author ?bill ;
        a dbo:Book .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?maximilian rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .

  ?maximilian dbo:child ?child .
  ?child dbo:parent ?catherine .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer ?producerProfession ?otherProfessional WHERE {
  # Find the producer of Coke Studio Philippines
  ?show dbp:name ""Coke Studio Philippines""@en .
  ?show dbo:producer ?producer .

  # Get the profession of the producer
  ?producer dbo:occupation ?producerProfession .

  # Find another professional in the same field
  ?otherProfessional dbo:occupation ?producerProfession .
  FILTER(?producer != ?otherProfessional)
}
```",4,4,5,3,2,3,3,71,0,0,39640,0,0.0,0
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingDate WHERE {
  ?luiza rdfs:label ""Luiza Erundina""@en .
  ?luiza dbo:almaMater ?university .
  ?university rdf:type dbo:University .
  ?university dbo:foundingDate ?foundingDate .
}",3,6,4,3,1,3,2,20,0,1,1,0.0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Identify Eugène Cattin's profession
  ?eugene rdfs:label ""Eugène Cattin""@en .
  
  # Find movies he acted in
  ?movie dbo:actor ?eugene ;
         dbp:starring ?actor .

  # Filter for a movie where someone died in Los Angeles
  ?decedent dbo:deathPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""los angeles""))

  # Ensure the decedent is associated with the movie
  ?movie dbo:character ?role ;
         dbp:starring ?decedent .

  # Find the parent of the actor from that movie
  ?actor dbo:parent ?parent .
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  # Find children of Frederick Stanley
  ?child dbo:childOf ?frederick .

  # Find spouse or partner of the child (which is also a parent)
  ?spouse dbo:spouse ?child .

  # Identify the child related to Rodney Lees and Arthur Stanley
  OPTIONAL { ?spouse rdfs:label ""Rodney Lees""@en . }
  OPTIONAL { ?spouse dbo:parentOf ?arthur .
             ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
           }

  # Find the parent of this individual
  ?parent dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingDate WHERE {
  ?luiza rdfs:label ""Luiza Erundina""@en .
  ?luiza dbo:almaMater ?university .
  ?university rdf:type dbo:University .
  ?university dbo:foundingDate ?foundingDate .
}",2,5,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to find the actor of The Sky Ranger (1928)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film dbo:title ""The Sky Ranger""@en .
  ?film dbo:starring ?actor .
  FILTER (YEAR(?film) = 1928)
}

# Query to find the death place of Sal Mineo
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?deathPlace WHERE {
  ?salMineo rdfs:label ""Sal Mineo""@en .
  ?salMineo dbo:deathPlace ?deathPlace .
}

# Query to find the death place of Carolyn Jones
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?deathPlace WHERE {
  ?carolynJones rdfs:label ""Carolyn Jones""@en .
  ?carolynJones dbo:deathPlace ?deathPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild ?predecessor WHERE {
  # Step 1: Find Duke Philipp of Württemberg's child
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .
  ?philipp dbo:child ?child .

  # Step 2: Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .

  # Step 3: Identify Archduchess Helena's spouse
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?helena dbo:spouse ?spouse .

  # Step 4: Find the child of the spouse
  ?spouse dbo:child ?spouseChild .

  # Step 5: Find predecessor of this child (assuming a property for ordering)
  ?predecessor dbo:predecessorOf ?spouseChild .

  # Ensure the grandchild and predecessor are royalty
  ?grandchild rdf:type dbo:Monarch .
  ?predecessor rdf:type dbo:Monarch .

  # Step 6: Match the grandchild with the predecessor
  FILTER(?grandchild = ?predecessor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?roger dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  }
  
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual WHERE {
  # Find the parent of Charles Martel of Anjou
  ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
  ?charlesMartel dbo:parent ?individual .

  # Find the spouse of Charles II of Naples
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?individual .

  # Find the child of Stephen V of Hungary
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:child ?individual .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?decedent WHERE {
  # Identify Sandro Bertaggia and his birthplace
  ?sandro a dbo:Person ;
          rdfs:label ""Sandro Bertaggia""@en .
  
  ?sandro dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a country
  ?birthPlace a dbo:Country .

  # Find decedents who died in this country
  ?decedent dbo:deathPlace ?birthPlace ;
            a dbo:Person .

  # Filter for those native to Grand Duchy of Finland
  ?decedent dbo:nativePlace ?nativePlace .
  
  FILTER (
    ?nativePlace rdfs:label ""Grand Duchy of Finland""@en ||
    ?nativePlace rdfs:label ""Suomi""[@en] ||  # Finnish name for Finland
    ?nativePlace rdfs:label ""Finland""[@en]
  )
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?institution WHERE {
  ?georgia rdfs:label ""Georgia (U.S. state)""@en .
  ?institution dbo:location ?georgia .
  ?institution rdf:type ?type .
  FILTER (
    ?type IN (
      dbo:EducationalInstitution,
      dbo:University,
      dbo:College,
      dbo:School
    )
  )
}
```",1,1,2,1,1,2,2,9,0,35,941,0.0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Identify the ruling party in Central, Louisiana and its members
SELECT ?partyMember WHERE {
  ?central rdfs:label ""Central, Louisiana""@en .
  ?central dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
  ?member dbo:memberOf ?rulingParty ;
          a dbo:Person .
  BIND(?member AS ?partyMember)
}

UNION

# Part 2: Find the birth name of Tisha Sterling's parent and match it to other individuals
SELECT ?person WHERE {
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .
  ?parent dbo:birthName ?birthName .
  
  ?individual dbo:birthName ?birthName ;
              a dbo:Person .
  BIND(?individual AS ?person)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:leader ?party .
  ?miguel dbo:office ?office .
}",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?linda rdfs:label ""Linda Miller""@en .
  ?linda rdf:type dbo:Actor .
  ?linda dbo:child ?child .
  ?child dbo:nativePlace dbr:New_York_(state) .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?roger dbo:child ?child .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Query to find the author of ""A Picture of Britain""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?work rdfs:label ""A Picture of Britain""@en .
  ?work dbo:creator ?author .
}

# Query to find an artist and musical artist native to an English settlement
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  ?location rdfs:label ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""england"") && CONTAINS(LCASE(?settlementLabel), ""settlement""))
  
  ?person dbo:nationality dbc:English_people ;
          dbo:birthPlace ?location ;
          dbo:occupation ?artistOccupation .
          
  VALUES ?artistOccupation { dbo:Artist dbo:MusicalArtist }
}

# Query to find the parent of this artist
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent WHERE {
  ?person dbo:occupation ?artistOccupation .
  VALUES ?artistOccupation { dbo:Artist dbo:MusicalArtist }
  
  ?person dbo:birthPlace ?location .
  ?location rdfs:label ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""england"") && CONTAINS(LCASE(?settlementLabel), ""settlement""))
  
  ?person dbo:parent ?parent .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Identify Robert Lamar Thompson and his band
  ?robert a dbo:MusicalArtist ;
          rdfs:label ""Robert Lamar Thompson""@en .
  
  OPTIONAL { 
    ?robert dbo:band ?band .
  }
  
  # Step 2: Find the producer of Coke Studio Philippines
  ?show rdfs:label ""Coke Studio Philippines""@en ;
        dbo:producer ?producer .

  # Step 3: Identify a professional in the same profession as the producer and associated with Robert's band
  OPTIONAL {
    ?professional dbo:profession ?sameProfession .
    ?producer dbo:profession ?sameProfession .
    
    FILTER(?band = ?professionalBand)
    ?professional dbo:band ?professionalBand .
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
  ?child rdf:type dbo:Politician .

  OPTIONAL { 
    ?child dbo:parent ?awardRecipient .
    ?awardRecipient dbo:title ""Commander of the Royal Victorian Order"" .
  }

  OPTIONAL {
    ?child dbo:parent ?edward .
    ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  }
}
```",5,6,6,2,3,3,3,71,0,3,1,0.0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
  ?faisal dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
}
```",1,2,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonChild WHERE {
  # Archduchess Margarete Sophie of Austria's parent
  ?margareteSophie rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  ?parent dbo:child ?margareteSophie .

  # Carl, Duke of Württemberg's predecessor
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?predecessor dbo:successor ?carl .

  # Duke Philipp of Württemberg's children and their children (grandchildren)
  ?philipp rdfs:label ""Philipp, Duke of Württemberg""@en .
  ?child dbo:child ?philipp .
  ?grandchild dbo:parent ?child .

  # Find common grandchild who is royalty
  ?commonChild dbo:parent ?parent ;
               dbo:parent ?grandchild ;
               a dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?tenant ?commanderOffice ?conflict ?leaderOffice WHERE {
  
  # Identify Manuel Pinto da Costa and his connections
  ?manuel foaf:name ""Manuel Pinto da Costa""@en .
  OPTIONAL { ?manuel dbo:office ?commanderOffice . }
  OPTIONAL { ?commanderOffice dbo:militaryConflict ?conflict . }
  
  # Find entities related to Madrid as tenants
  ?entity dbo:location ?madrid .
  ?madrid rdfs:label ""Madrid""@en .
  ?entity foaf:name ?tenant .
  
  # Identify the leader of Conservative Republican Party (Spain)
  ?party dbo:leader ?leaderOffice .
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  FILTER(?conflict != null && ?commanderOffice != null && ?leaderOffice != null)
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?chancellor WHERE {
  ?country rdfs:label ""West Germany""@en .
  ?office dbo:country ?country ;
          a dbo:Chancellorship ;
          dbo:holder ?chancellor .
  FILTER (?office dbo:termStart >= ""1949-05-23""^^xsd:date && 
          ?office dbo:termEnd <= ""1990-10-03""^^xsd:date)
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?eleonore rdfs:label ""Eleonore of Austria""@en .
  ?eleonore dbo:childOf ?ferdinand2 .
  ?ferdinand2 rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?eleonore dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?establishment ?almaMater WHERE {
  # Find establishment on 1955-12-02
  ?establishment dbo:dateEstablished ""1955-12-02""^^xsd:date .
  
  # Find Eleonora Menicucci's alma mater
  ?eleonora foaf:name ""Eleonora Menicucci""@en ;
            dbo:almaMater ?almaMater .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Identify the commander in the Siege of Mukha
  ?commander dbo:event ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .

  # Step 2: Find the parent (royalty) of the commander
  ?parent dbo:child ?commander .
  ?parent a dbo:Monarch .

  # Step 3: Identify the child of the royal parent
  ?parentChild dbo:parent ?parent .
  
  # Step 4: Find the father (royalty and office holder) of Na'od
  ?naodFather dbo:child ?naod .
  ?naod rdfs:label ""Na'od""@en .
  ?naodFather a dbo:Monarch ;
              dbo:officeHolder ?office .

  # Step 5: Identify the grandfather (royalty) of Na'od
  ?grandfather dbo:parent ?naodFather .
  ?grandfather a dbo:Monarch .

  # Final step: Match the child from step 3 with the grandfather from step 5
  ?parentChild = ?grandfather .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?war rdfs:label ""Korean War""@en .
  ?war dbo:militaryCommander ?commander .
  ?commander a dbo:OfficeHolder .
}
```",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?profession WHERE {
  # Find the actor for ""Dispatches from Elsewhere""
  ?series rdfs:label ""Dispatches from Elsewhere""@en .
  ?series dbo:actor ?actor .

  # Find the profession of Lamont Cranston, alter ego of The Shadow
  ?character rdfs:label ""Lamont Cranston""@en .
  ?character dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?otherProfession WHERE {
  ?person dbo:profession ?singer .
  FILTER(CONTAINS(LCASE(?singer), ""singer"")) .

  ?person dbo:profession ?otherProfession .
  FILTER(?singer != ?otherProfession) .
}
```",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?war WHERE {
  ?award rdfs:label ""Golden Sword for Bravery""@en .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:participatedIn ?war .
}

SELECT ?war WHERE {
  ?baggovut rdfs:label ""Karl Gustav von Baggovut""@en .
  ?baggovut dbo:participatedIn ?war .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
# Query 1: Find the actor(s) of ""Rustlers' Rhapsody""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .
}

# Query 2: Find the professional associated with The Shadow
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?professional .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?otherProfession WHERE {
  ?series rdfs:label ""Dispatches from Elsewhere""@en .
  ?series dbo:title ""Dispatches from Elsewhere"" .
  ?series dbo:castMember ?actor .
  
  OPTIONAL { 
    ?actor dbo:profession ?otherProfession .
    FILTER(?otherProfession != <http://dbpedia.org/ontology/Actor>)
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?native ?writer WHERE {
  # Find Victor Saville's birthplace
  ?victor rdfs:label ""Victor Saville""@en .
  ?victor dbo:birthPlace ?birthPlace .

  # Find a notable person native to that place
  ?person dbo:nativeOf ?birthPlace .
  ?person rdfs:label ?nativeLabel .
  FILTER(LANG(?nativeLabel) = 'en') 
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?person), "" "", ""_""))) AS ?native)

  # Find the writer of Boom Shack-A-Lak
  ?song dbo:title ""Boom Shack-A-Lak""@en .
  ?song dbo:lyricist ?writer .
  ?writer rdfs:label ?writerLabel .
  FILTER(LANG(?writerLabel) = 'en') 
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?writer), "" "", ""_""))) AS ?writer)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Linda Bruckheimer""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?william rdfs:label ""William II of Sicily""@en .
  ?william dbo:father ?father .

  ?father dbo:childOf ?rogerII .
  ?rogerII rdfs:label ""Roger II of Sicily""@en .

  ?ancestor rdfs:label ""Alfonso VI of León and Castile""@en ;
            dbo:parent* ?father .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No query can be constructed due to lack of specific information.
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  ?gs9Member dbo:memberOf gs9:GS9 ;
             dbo:nativePlace ?place .
  
  FILTER (strstarts(str(?place), ""Florida"") || strstarts(str(?place), ""florida""))

  ?gs9Member dbp:associatedBand ?associatedBand .

  ?bandMember dbo:memberOf ?associatedBand ;
              a dbo:MusicalArtist .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?eleonore rdfs:label ""Eleonore of Austria""@en .
  ?eleonore dbo:father ?commonFather .
  
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaRenata dbo:father ?commonFather .

  ?commander dbo:militaryCommanderOf ?algerianWar .
  ?algerianWar rdf:type dbo:SocietalEvent ;
                rdf:type dbo:Event ;
                rdf:type dbo:TelevisionShow .

  FILTER(?commander = ?commonFather)
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?film WHERE {
  ?person rdfs:label ""Richard Grant Esterhuysen""@en .
  ?person dbo:birthName ""Richard Grant Esterhuysen"" .
  ?person rdf:type dbo:Actor .
  ?person foaf:name ?actor .
  ?person dbo:film ?film .
  FILTER (CONTAINS(LCASE(STR(?film)), ""television show"") || CONTAINS(LCASE(STR(?film)), ""tv series""))
}
```",4,5,5,3,2,3,3,71,0,0,13,0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?native WHERE {
  # Step 1: Identify William Gayner's birthplace
  ?williamGayner rdfs:label ""William Gayner""@en .
  ?williamGayner dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Step 2: Find Claude Bowes-Lyon's children
  ?claudeBowesLyon rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?claudeBowesLyon dbo:child ?child .

  # Step 3: Determine parent of Claude Bowes-Lyon's child
  ?parent dbo:child ?child ;
          dbo:nativeOf ?birthPlace .

  # Step 4: Find native of William Gayner's birthplace who is a parent of Claude Bowes-Lyon's child
  ?native rdf:type dbo:Person ;
          dbo:nativeOf ?birthPlace .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?samProfession ?bobBand WHERE {
  # Find Sam Concepcion's profession
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:occupation ?samProfession .

  # Find Bob Thompson (musician)'s band
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?bobBand .
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label WHERE {
  ?mitaka rdfs:label ""Mitaka""@en .
  OPTIONAL { ?mitaka dbo:wikiPageRedirects ?redirect . }
  FILTER NOT EXISTS { ?redirect rdfs:label ?otherLabel } # Ensure no redirects
  ?mitaka rdfs:label ?label .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:player true .
  ?person dbo:manager true .
  ?match dbo:participant ?person ;
         dbo:participant <http://dbpedia.org/resource/Sergio_Ag%C3%BCero> .
  ?person dbo:currentTeam ?team .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouseOfSpouse WHERE {
  # Step 1: Identify Duchess Luise of Brunswick-Wolfenbüttel and her spouse
  ?luise rdfs:label ""Duchess Luise of Brunswick-Wolfenbüttel""@en .
  ?luise dbo:spouse ?firstSpouse .

  # Step 2: Find the spouse's spouse (the spouse of the spouse)
  ?firstSpouse dbo:spouse ?spouseOfSpouse .

  # Step 3: Identify Duke Anthony Ulrich of Brunswick and his royal parent
  ?duke rdfs:label ""Duke Anthony Ulrich of Brunswick""@en .
  ?duke dbo:parent ?parent .

  # Ensure the parent is royalty
  ?parent rdf:type dbo:Monarch .

  # Step 4: Find the child of this royal parent who is also a royalty
  ?parent dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild rdf:type dbo:Monarch .

  # Step 5: Match the spouse from step 2 with the child found in step 4
  FILTER (?spouseOfSpouse = ?royalChild)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?vince dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?claimToFame ?producer WHERE {
  # Find the actor of ""High Society Blues""
  ?movie rdfs:label ""High Society Blues""@en .
  ?movie dbo:starring ?actor .

  # Identify a notable work (claim to fame) by this actor
  ?actor dbo:filmography ?work .
  ?work rdfs:label ?claimToFameLabel .
  
  # Find the producer of this claim to fame
  ?work dbo:producer ?producer .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?deathPlace WHERE {
  ?film rdfs:label ""The Sky Ranger""@en .
  FILTER(YEAR(?film dbo:releaseDate) = 1928)
  
  ?film dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  ?producer a dbo:Person ;
            dbo:profession ?sharedProfession .
  FILTER EXISTS {
    { 
      ?cokeStudio rdfs:label ""Coke Studio Philippines""@en .
      ?cokeStudio dbo:producer ?producer .
    } UNION {
      ?bob a dbo:Musician ;
           rdfs:label ""Bob Thompson (musician)""@en .
      ?band dbo:memberOfBand ?bob .
      ?band dbo:genre ?genre .
      ?band dbo:member ?member .
      ?member dbo:profession ?sharedProfession .
    }
  }
  ?professional a dbo:Person ;
                dbo:profession ?sharedProfession .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  ?award rdfs:label ""Golden Sword for Bravery""@en .
  ?recipient dbo:recipient ?award .
  ?recipient dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel WHERE {
  ?person dbo:birthName ""Elorm Kabu Amenyah""@en .
  ?person rdfs:label ?personLabel .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?russianEmpire rdfs:label ""Russian Empire""@en .
  ?relatedEntity ?property ?russianEmpire .
  FILTER(?property IN (dbo:country, dbo:locatedIn))
  BIND(?relatedEntity AS ?entity)
}
```",1,1,2,1,1,2,3,28,0,776,87,0.0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battle WHERE {
  ?karl rdfs:label ""Karl Gustav von Baggovut""@en .
  ?karl dbo:participatedInBattle ?battle .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find films with Herschel Bernardi
  ?film dbo:starring ?herberson .
  ?herberson rdfs:label ""Herschel Bernardi""@en .

  # Step 2: Identify Allan Arbus's child (Meryl Streep)
  ?allan dbp:child ?meryl .
  ?meryl rdfs:label ""Meryl Streep""@en .
  
  # Step 3: Find films with Meryl Streep
  ?film dbo:starring ?meryl .

  # Step 4: Check if Allan Arbus acted in the same film
  ?film dbo:starring ?actor .
  ?actor rdfs:label ""Allan Arbus""@en .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Always""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/Film>)))
  ?film dbo:starring ?actor .
}

SELECT ?spouse WHERE {
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?officeMadrid ?partyLeader WHERE {
  ?mariano foaf:name ""Mariano Rajoy""@en .
  
  # Office related to being a tenant of Madrid (Prime Minister)
  ?mariano dbo:positionHeld ?primeMinisterRole .
  ?primeMinisterRole dbo:office ?officeMadrid .
  FILTER(CONTAINS(LCASE(STR(?officeMadrid)), ""prime minister""))

  # Leadership role in the People's Party
  ?mariano dbo:positionHeld ?partyLeaderRole .
  ?partyLeaderRole dbo:office ?partyLeader .
  FILTER(CONTAINS(LCASE(STR(?partyLeader)), ""people's party""))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonActor WHERE {
  # Find T.I.'s album and its actors
  ?album dbo:artist dbr:T.I. ;
         dbo:contributorOrPerformer ?actor1 .
  
  # Find Shelby Oaks' actor
  ?work rdfs:label ""Shelby Oaks""@en ;
        dbo:actor ?actor2 .

  # Find common actor
  FILTER (?actor1 = ?actor2)
  BIND(?actor1 AS ?commonActor)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?youngkin rdfs:label ""Glenn Youngkin""@en .
  ?youngkin dbo:birthPlace ?birthPlace .
}

SELECT ?awardeeBirthPlace WHERE {
  ?gilligan rdfs:label ""Vince Gilligan""@en .
  ?gilligan dbo:award ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}

SELECT ?authorBirthPlace WHERE {
  ?book rdfs:label ""El Deafo""@en .
  ?book dbo:author ?author .
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?recipient WHERE {
  ?award rdfs:label ""Congressional Gold Medal""@en .
  ?award dbo:recipient ?recipient .
}
```",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""switzerland"")) .

  ?person dbo:nationality ?nationality .
  FILTER (str(?nationality) = str(<http://dbpedia.org/resource/Russian_Empire>)) .

  OPTIONAL {
    ?person dbp:occupation ?occupation .
    FILTER(CONTAINS(LCASE(str(?occupation)), ""finland"") && CONTAINS(LCASE(str(?occupation)), ""alexander ii""))
  }
}
```",4,4,5,2,3,2,3,28,0,1,1,0.0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  ?isabella rdfs:label ""Isabella of Austria""@en .

  ?catherine dbo:parent ?father .
  ?isabella dbo:parent ?father .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?force WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:award ?award .
  
  ?otherAwardee dbo:award ?award .
  ?otherAwardee dbo:militaryUnit ?force .
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer ?successor ?commander WHERE {
  ?work rdfs:label ""Always the Love Songs""@en .
  ?work dbo:author ?writer .
  
  ?war rdfs:label ""Russo-Polish War (1654–1667)""@en .
  ?commander dbo:commanderOf ?war .
  ?successor dbo:successorOf ?commander .
  ?successor rdf:type dbo:Politician ; dbo:officeHolder true .

  ?tvShow rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?tvShow dbo:depictsWar ?war .
  ?commander dbo:commanderOf ?war .
}",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childBirthPlace ?catCountry WHERE {
  # Find Chiang Ching-kuo's child who is a politician
  ?chiang rdfs:label ""Chiang Ching-kuo""@en .
  ?chiang dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Get the birthplace of this child
  ?child dbo:birthPlace ?childBirthPlace .

  # Find the country associated with ""Cat Country"" (novel)
  ?catCountry rdfs:label ""Cat Country""@en .
  ?catCountry dbo:setInLocation ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  ?child1 dbo:parent ?father .
  ?child2 dbo:parent ?father .
  ?child3 dbo:parent ?father .

  FILTER (?arthur = ?child1 || ?victor = ?child1)
  FILTER (?frederick dbo:child ?child3)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce WHERE {
  ?bayne rdfs:label ""William Bayne""@en .
  ?bayne dbo:wikiPageWikiLink ?warEvent .
  ?warEvent a dbo:MilitaryConflict ;
            dbo:militaryConflictsInvolved ?militaryForce .
}",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Step 1: Identify party member of the Republican Party
  ?partyMember dbo:politicalParty dbp:Republican_Party .

  # Step 2 & 3: Find spouse of an actor in a Nat Levine film
  ?actor dbo:spouse ?partyMember .
  ?film dbo:producer ?natLevine .
  ?natLevine rdfs:label ""Nat Levine""@en .
  ?film dbo:starring ?actor .

  # Step 4: Identify Ann Sothern's spouse
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:spouse ?partyMember .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?administration rdfs:label ""Alexander II, Grand Duke of Finland""@en .
  ?person dbo:nativePlace ?administration .
  ?person dbo:deathPlace ?switzerland .
  ?switzerland rdfs:label ""Switzerland""@en .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyLeader WHERE {
  ?george rdfs:label ""George Savage""@en .
  ?george dbo:partyAffiliation ?party .
  ?party a dbo:PoliticalParty ;
         a dbo:Organization .
  ?party dbo:leader ?partyLeader .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?joeyB rdfs:label ""Joey B.""@en .
  ?joeyB dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label WHERE {
  ?person dbo:birthName ""Ackquille Jean Pollard""@en .
  ?person rdfs:label ?label .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist ?birthName WHERE {
  ?artist a dbo:Artist ;
          dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .
  OPTIONAL { ?artist foaf:name ?birthName . }
}
```",2,3,3,2,1,3,3,71,0,2,1,0.0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?yurii rdfs:label ""Yurii Khmelnytsky""@en .
  OPTIONAL { 
    ?yurii dbo:successor ?successor .
  }
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?naod dbo:father ?zaraYaqob .
  ?zaraYaqob dbo:father ?dawitI .
  ?dawitI rdfs:label ""Dawit I""@en .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  ?tennant rdfs:label ""William Tennant (Royal Navy officer)""@en .
  OPTIONAL { ?tennant dbo:commanderOf ?force . }
  OPTIONAL { ?event dbo:participatedIn ?tennant ;
                  rdfs:label ""Sinking of Prince of Wales and Repulse""@en ;
                  dbo:war ?war . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?battle rdfs:label ""Battle of Fort Royal""@en .
  
  OPTIONAL { ?regiment dbo:commander ?commander . }
  OPTIONAL { ?battle dbo:commander ?commander . }

  FILTER(?commander != rdf:nil)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?gs9 rdfs:label ""GS9""@en .
  ?gs9 dbo:member ?member .
  ?member rdf:type dbo:MusicalArtist .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Identify the 2006-07 VfL Bochum season and its successor
  ?season1 dbo:sportTeam dbp:club ""VfL Bochum"" ;
           dbo:startDate ?start1 ;
           dbo:endDate ?end1 .
  
  ?season2 dbo:sportTeam dbp:club ""VfL Bochum"" ;
           dbo:startDate ?start2 ;
           dbo:endDate ?end2 .

  FILTER (?start2 > ?end1) # Ensure season2 is the successor of season1

  # Identify Theodor Heuss's native country
  ?theodor dbo:nationality ?country .
  FILTER (str(?country) = ""Germany"")

  # Find players who are also sports clubs, organizations, and soccer clubs
  ?player a dbo:Player ;
          dbp:nativeCountry ?country ;
          dbo:playsFor ?club .

  ?club a dbo:SoccerClub, dbo:Organization, dbo:SportsTeam .

  # Retrieve the manager of such a player in the successor season
  ?season2 dbo:manager ?manager .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  # Find Sam Concepcion's profession
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession .

  # Find Bob Thompson's band
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:bandMember ?band .

  # Find professionals with the same profession and in the same band
  ?professional dbo:profession ?profession .
  ?professional dbo:bandMember ?band .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonMember WHERE {
  # Identify Bobby Shmurda's associated band
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  ?bobbyShmurda dbo:associatedBand ?band1 .

  # Find band members of Bobby Shmurda's band who are musical artists
  ?member1 dbo:bandMember ?band1 ;
           a dbo:MusicalArtist .

  # Identify Q-Tip's associated band
  ?qTip rdfs:label ""Q-Tip""@en .
  ?qTip dbo:associatedBand ?band2 .

  # Find band members of Q-Tip's band who are musical artists
  ?member2 dbo:bandMember ?band2 ;
           a dbo:MusicalArtist .

  # Check for common band member
  FILTER (?member1 = ?commonMember && ?member2 = ?commonMember)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Identify Jean Baptist, Comte d'Arco and his associated war
SELECT ?war WHERE {
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?jeanBaptist dbo:commander ?war .
}

# Step 2: Find a TV show and societal event named after the war
SELECT DISTINCT ?tvShow ?societalEvent WHERE {
  ?war rdfs:label ?warLabel .
  FILTER regex(?warLabel, ""War Name"", ""i"") # Replace ""War Name"" with actual war name found in Step 1
  OPTIONAL { ?tvShow dbp:name ?warLabel . }
  OPTIONAL { ?societalEvent dbp:name ?warLabel . }
}

# Step 3: Identify the writer of ""Always the Love Songs""
SELECT ?writer WHERE {
  ?song rdfs:label ""Always the Love Songs""@en .
  ?song dbo:composer ?writer .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherParty WHERE {
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?spouse WHERE {
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Parent of Mary Elphinstone, Lady Elphinstone
  ?maryElphinstone rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?maryElphinstone dbo:parent ?parent1 .

  # Child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?claudeBowesLyon rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?claudeBowesLyon dbo:child ?child .

  # Parent of the child of Claude Bowes-Lyon
  ?child dbo:parent ?parent2 .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
# Query for VfL Bochum's manager
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?manager WHERE {
  ?bochum dbo:name ""VfL Bochum""@en .
  ?bochum dbo:manager ?manager .
}

# Query for the sports manager born on 1968-08-26
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthday ""1968-08-26""^^xsd:date .
  ?person rdf:type dbo:SportsManager .
  ?person foaf:nationality ?country .
  ?country rdfs:label ""Germany""@en .
}

# Query for the team managed by this person
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?team WHERE {
  ?manager dbo:birthday ""1968-08-26""^^xsd:date .
  ?manager rdf:type dbo:SportsManager .
  ?manager foaf:nationality ?country .
  ?country rdfs:label ""Germany""@en .
  ?manager dbo:managedTeam ?team .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer ?successor WHERE {
  ?ducas rdfs:label ""George Ducas""@en .
  ?ducas dbo:author ?writer .

  ?khmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .
  ?khmelnytsky dbo:successor ?successor .

  FILTER (?writer = ?successor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?singerProfession ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  
  # Retrieve birth name
  ?bob dbo:birthName ?birthName .

  # Find professions related to singing
  ?bob dbo:profession ?singerProfession .
  FILTER(CONTAINS(LCASE(STR(?singerProfession)), ""singer""))

  # Identify band association
  OPTIONAL {
    ?bob dbo:band ?band .
  }
}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?grandchild WHERE {
  # Find Charles Martel of Anjou's parent
  ?charles rdfs:label ""Charles Martel of Anjou""@en .
  ?charles dbo:parent ?parent .

  # Find Béla IV of Hungary's grandchild who is royalty
  ?bela rdfs:label ""Béla IV of Hungary""@en .
  ?bela dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  # Ensure the grandchild is a royalty
  ?grandchild dbo:royalTitle ?title .

  # Match parent with grandchild
  FILTER (?parent = ?grandchild)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?dawid rdfs:label ""Dawid Olejniczak""@en .
  ?dawid dbo:residence|dbp:residence ?place .
  ?place rdf:type dbo:Country .
  ?place rdfs:label ?country .
}
```",1,2,2,1,1,3,2,20,0,1,1,0.0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?spouse ?clintonBook WHERE {
  # Step 1 & 2: Identify ""Back to Work"" and its author
  ?book dbo:title ""Back to Work""@en .
  ?book dbo:author ?author .

  # Step 3: Find the spouse of this author who is a politician
  ?author dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician .

  # Step 4: Identify Hillary Clinton's book
  ?clintonBook dbo:title ?title ;
               dbo:author dbr:Hillary_Clinton .

  FILTER regex(?title, ""book"", ""i"")
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Mary Frances Bowes-Lyon""@en .
  ?patrick rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .

  ?mary dbo:parent ?parent .
  ?patrick dbo:parent ?parent .

  ?parent dbo:nativePlace ?nativePlace .
  FILTER (STR(?nativePlace) = ""Middlesex"")
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Identify Uncle Murda's Band
SELECT ?band WHERE {
  ?uncleMurda a dbo:BandMember ;
              dbp:memberOfBand ?band .
  FILTER(CONTAINS(LCASE(?uncleMurda), ""unclemurda""))
}

# Step 2: Find Awards for the Band (replace <URI_of_the_band> with actual URI)
SELECT ?award WHERE {
  ?band dbo:award ?award .
  FILTER(?band = <URI_of_the_band>)
}

# Step 3: Identify the Native Region of the Award (replace <URI_of_the_award> with actual URI)
SELECT ?state WHERE {
  ?award dbo:nativeRegion ?region .
  ?region a dbo:State ;
          rdfs:label ?state .
  FILTER(?award = <URI_of_the_award>)
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?maria rdfs:label ""Maria I of Portugal""@en .
  
  # Find associated television show or military conflict
  ?maria dbo:associatedWith ?entity .
  
  # Check if the entity is a television show or military conflict
  ?entity rdf:type ?type .
  FILTER (
    ?type = dbpedia-owl:TelevisionShow ||
    ?type = dbpedia-owl:MilitaryConflict
  )
  
  # Find the commander of that entity
  ?entity dbo:commander ?commander .
}
```",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?decedent WHERE {
  ?sandro dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Country .

  ?decedent dbo:deathPlace ?birthplace .
  ?decedent dbo:nativePlace ?nativeplace .
  ?nativeplace rdfs:label ""Russian Empire""@en .
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?party dbo:leader ?leader .
  
  OPTIONAL { ?leader dbo:nationality dbr:Spain . }
  OPTIONAL { ?leader dbo:citizenship dbr:Spain . }
  OPTIONAL { ?leader dbo:residence dbr:Spain . }

  FILTER((BOUND(?leader) && 
          ((?nationality = dbr:Spain || ?citizenship = dbr:Spain) &&
           ?residence = dbr:Spain)))
}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence ?awardEntity WHERE {
  # Part 1: Residence of Doug Beattie
  ?doug rdfs:label ""Doug Beattie""@en .
  ?doug dbo:residence ?residence .

  # Part 2: Entity in the award of George Hamilton Cameron
  ?george rdfs:label ""George Hamilton Cameron""@en .
  ?award dbo:recipient ?george ;
         dbo:name ?awardName .
  OPTIONAL { ?award dbo:entity ?awardEntity }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?salMineo rdfs:label ""Sal Mineo""@en .
  ?salMineo dbo:deathPlace ?deathPlace .
}

SELECT ?actor ?deathPlace WHERE {
  ?film dbo:title ""Color Me Dead""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?deathPlace .
}

SELECT ?deathPlace WHERE {
  ?reedHowes rdfs:label ""Reed Howes""@en .
  ?reedHowes dbo:deathPlace ?deathPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book (GROUP_CONCAT(?authorLabel; separator="", "") AS ?authors) WHERE {
  VALUES ?bookLabel { ""Promise Me, Dad""@en ""Promises to Keep""@en }
  
  ?book rdfs:label ?bookLabel .
  ?book dbo:author ?author .
  ?author rdfs:label ?authorLabel .
}
GROUP BY ?book
```",2,2,3,1,2,3,2,20,0,2,1,0.0,0.0,0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?biden rdfs:label ""Joe Biden""@en .
  ?biden dbo:author ?work .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?harriette rdfs:label ""Harriette Arlene Lake""@en .
  ?harriette dbo:spouse ?spouse .
  ?spouse rdfs:label ""Roger Pryor (actor)""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?billy rdfs:label ""Billy Lyall""@en .
  ?billy dbo:musicalArtist ?bandMember .
  
  OPTIONAL {
    ?band rdfs:label ""The Alan Parsons Project""@en .
    ?band dbo:associatedBand ?bandMember .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team ?actor WHERE {
  # Find the team associated with Juan Carlos Molina
  ?molina rdfs:label ""Juan Carlos Molina (footballer)""@en .
  ?molina dbo:playsFor ?team .

  # Find actors from ""All or Nothing: Manchester City"" who are also athletes
  ?actor rdfs:label ?actorLabel .
  ?actor dbo:film ?film .
  ?film rdfs:label ""All or Nothing: Manchester City""@en .
  
  OPTIONAL {
    ?athlete rdfs:label ?actorLabel .
    ?athlete dbo:sportTeam ?team .
    FILTER EXISTS { ?athlete a dbo:Athlete }
  }

  # Ensure the actor is also known as an athlete
  FILTER EXISTS { ?athlete rdfs:label ?actorLabel . ?athlete a dbo:Athlete }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commanderOffice ?leaderOffice WHERE {
  # Find the commander in Central African Republic Civil War
  ?commander rdf:type dbo:Politician .
  ?commander rdfs:label ?labelCommander .
  FILTER(CONTAINS(LCASE(?labelCommander), ""central african republic civil war"") && CONTAINS(LCASE(?labelCommander), ""commander"")) .
  ?commander dbo:office ?commanderOffice .

  # Find the leader of Conservative Republican Party (Spain)
  ?leader rdf:type dbo:Politician .
  ?leader rdfs:label ?labelLeader .
  FILTER(CONTAINS(LCASE(?labelLeader), ""conservative republican party spain"") && CONTAINS(LCASE(?labelLeader), ""leader"")) .
  ?leader dbo:office ?leaderOffice .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child ?father WHERE {
  # Find children of Maximilian I
  ?maximilian rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  ?maximilian dbo:child ?child .

  # Find parents of Philip I of Castile
  ?philip rdfs:label ""Philip I of Castile""@en .
  ?parent dbo:child ?philip .

  # Ensure the child is also a father to one of Philip's children
  ?child dbo:spouse ?mother .  # Assuming spouse relationship for simplicity
  ?child dbo:child ?grandchild .
  
  # Check if this child is also a parent of any of Philip's children
  ?parent rdfs:label ?fatherLabel .
  FILTER(?fatherLabel != ""Philip I of Castile""@en)  # Exclude Philip himself

  # Ensure the individual is royalty
  ?child dbo:royalTitle ?title .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?athlete WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
          a dbo:Athlete .
  
  ?pablo dbo:team ?team .
  FILTER (str(?pablo) = str(dbpedia:Pablo_Aimar)) .

  ?person dbo:team ?team .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?konstantinos rdfs:label ""Konstantinos Ventiris""@en .
  ?konstantinos dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify ""Ab Kya Hoga""
  ?show rdfs:label ""Ab Kya Hoga""@en .
  
  # Step 2: Check if Richard E. Grant is associated with it
  ?show dbo:castMember ?grantRole .
  ?grantRole foaf:name ""Richard E. Grant"" .

  # Step 3: Find an actor who is also a politician
  ?politicianActor dbo:occupation dbo:Politician ;
                  dbo:profession dbo:Actor .
  
  # Step 4: Determine the shared profession between Richard E. Grant and the politician actor
  ?grantProfession dbo:actor ?grantRole .
  ?politicianProfession dbo:actor ?politicianActor .
  FILTER (?grantProfession = ?politicianProfession)

  # Step 5: Retrieve another actor sharing this profession
  ?otherActor dbo:profession ?sharedProfession .
  FILTER(?otherActor != ?grantRole && ?otherActor != ?politicianActor)
}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?reference WHERE {
  ?entity rdfs:label ""Nothing to Gein""@en .
  OPTIONAL { ?entity ?property ?reference . FILTER(?property != rdf:type) }
}
```",1,1,2,1,1,3,2,20,1,55,0,0.017857142857142856,1.0,0.03508771929824561
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  OPTIONAL { ?alterEgo dbo:profession ?profession . }
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify GS9 members who are artists and musicians
  ?gs9Member dbo:member ?person .
  ?person rdf:type dbo:MusicalArtist ;
          dbo:genre dbp:musicalGenre .

  # Step 2: Find associated musical artists for these members
  ?person dbo:associatedBandMember ?bandMember .

  # Step 3: Identify the award related to Coro de la Pontificia Universidad Católica de Puerto Rico and its native region
  ?award dbo:recipientCoroDeLaPontificiaUniversidadCatolicaDePuertoRico .
  ?award dbo:nativeRegion ?region .
  
  # Step 4: Filter band members by this native region
  ?bandMember dbo:nativePlace ?region .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?chiang rdfs:label ""Chiang Ching-kuo""@en .
  ?chiang dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  # Find Cora Sue Collins' claim to fame
  ?collins dbo:work ?fame .
  
  # Find the producer of A Star Is Born (1937 film)
  ?starIsBornFilm rdfs:label ""A Star Is Born""@en ;
                  dbo:producer ?producer .

  # Find the professional alter ego of The Shadow
  ?shadowCharacter rdfs:label ""The Shadow""@en ;
                   dbo:alterEgo ?professionalAlterEgo .
  
  # Check if any producer is common among these entities
  OPTIONAL { ?fame dbo:producer ?producer . }
  OPTIONAL { ?professionalAlterEgo dbo:producer ?producer . }

  FILTER(?producer != NULL)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ducas ?commanderRole ?tvShow ?militaryForce ?successor WHERE {
  
  # Identify George Ducas
  ?ducas rdfs:label ""George Ducas""@en .
  
  # Find his role in the Battle of Vienna
  ?ducas dbo:commanderOf dbr:Battle_of_Vienna_1683 .
  BIND(""Commander in the War"" AS ?commanderRole)
  
  # Look for related television shows or societal events
  OPTIONAL {
    ?ducas dbo:wikiPageWikiLink ?tvShow .
    FILTER(CONTAINS(LCASE(STR(?tvShow)), ""battle of vienna"") || CONTAINS(LCASE(STR(?tvShow)), ""historical drama""))
  }
  
  # Identify the military force involved in the Battle of Vienna
  dbr:Battle_of_Vienna_1683 dbo:participatedIn ?militaryForce .
  
  # Find successor of Yurii Khmelnytsky
  dbr:Yurii_Khmelnytsky dbo:succeededBy ?successor .
}
",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query to find the owner of USS Arcadia (ID-1605)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?owner WHERE {
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .
  ?ship dbo:operator ?owner .
}

# Query to identify the war/disease/societal event
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?event a dbo:Event ;
         rdfs:label ""Spanish Flu""@en .
  OPTIONAL { ?event dbo:relatedEvent ?war . }
}

# Query to find the commander associated with this event
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event a dbo:Event ;
         rdfs:label ""World War I""@en .
  ?event dbo:commander ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?greatGreatGrandchild WHERE {
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  ?alexander dbo:birthDate ?birth .
  ?alexander dbo:deathDate ?death .
  FILTER (YEAR(?birth) = 1804 && YEAR(?death) = 1881)
  
  ?alexander dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:child ?greatGrandchild .
  ?greatGrandchild dbo:child ?greatGreatGrandchild .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory WHERE {
  ?copenhagen rdfs:label ""Copenhagen""@en .
  ?copenhagen dbo:administrativeRegion ?territory .
}

SELECT ?administration WHERE {
  ?schleswig rdfs:label ""Duchy of Schleswig""@en .
  ?schleswig dbo:mayor ?mayor .
  ?mayor dbo:administers ?administration .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  ?peterIV rdfs:label ""Peter IV of Aragon""@en .
  ?peterIV foaf:name ?realName .
  
  OPTIONAL {
    ?alfonsoIV rdfs:label ""Alfonso IV of Aragon""@en .
    ?alfonsoIV dbo:child ?peterIV .
  }
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Little Hat Jones""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",1,2,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?kimBand ?nickArtist WHERE {
  # Identify Kim Wilson's band
  ?kim a dbo:MusicalArtist ;
      rdfs:label ""Kim Wilson""@en .
  ?kim dbo:bandMember ?kimBand .

  # Identify Nick Curran's associated musical artist
  ?nick a dbo:MusicalArtist ;
        rdfs:label ""Nick Curran""@en ;
        dbo:dateOfBirth ?dob ;
        dbo:birthPlace ?birthPlace .
  OPTIONAL { ?nick dbo:associatedBand ?nickArtist . }

  # Find any reference or connection between the two
  FILTER EXISTS {
    ?kimBand rdfs:seeAlso|dbo:wikiPageRedirects ?reference .
    ?reference rdfs:label ?nickArtistLabel .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?finalChild WHERE {
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:child ?firstChild .
  ?firstChild dbo:parent ?intermediateParent .
  ?intermediateParent dbo:child ?finalChild .
}",3,3,4,3,1,3,3,71,5,0,0,1.0,1.0,1.0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouse .
  
  ?spouse dbo:father ?father .
  ?father dbo:parent ?parent .

  OPTIONAL { ?parent dbo:royalTitle ?title . }
  FILTER (BOUND(?title))
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?person dbo:parent ?kate .
  ?kate rdfs:label ""Kate Dimbleby""@en .

  ?person dbo:deathDate ?date .
  FILTER (STR(?date) = ""2020-06-18""^^xsd:date)

  ?person a dbo:Artist ;
          a dbo:musicalArtist .

  ?work dbo:author ?person ;
        a dbo:Film, dbo:TelevisionShow .

  ?author dbo:author ?work .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find movies Herschel Bernardi acted in
  ?movie dbo:actor ?herberson .
  ?herberson rdfs:label ""Herschel Bernardi""@en .

  # Find parent category of Photographer
  ?photographer rdfs:subClassOf+ ?parentCategory .
  ?photographer rdfs:label ""Photographer""@en .

  # Find professionals related to the parent category
  ?professional rdf:type ?parentCategory .
  
  # Find movies these professionals acted in
  ?movie2 dbo:actor ?actor .
  ?actor rdf:type ?professional .

  # Ensure the actor is not Herschel Bernardi and appears in both sets of movies
  FILTER(?actor != ?herberson)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?alfonso rdfs:label ""Alfonso IV of Aragon""@en .
  ?alfonso dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  ?alfonso dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,3,1,0.4,0.6666666666666666,0.5
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?emilia rdfs:label ""Emilia Yancheva Valeva""@en .
  ?emilia dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""singer"") || CONTAINS(LCASE(STR(?occupation)), ""band member""))
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?salMineo rdfs:label ""Sal Mineo""@en .
  ?salMineo dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <http://www.geonames.org/ontology#>

SELECT ?birthplace WHERE {
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthplace .
  
  FILTER EXISTS { ?birthplace a dbo:Settlement . }
  FILTER EXISTS { 
    ?birthplace geo:continent <http://dbpedia.org/resource/North_America> ;
                geo:country <http://dbpedia.org/resource/United_States> .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Akaler Shandhaney""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,4,0,5,1.0,0.4444444444444444,0.6153846153846153
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?spouse .
}

PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?crisis rdfs:label ""Third Taiwan Strait Crisis""@en .
  ?crisis dbp:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?kapur rdfs:label ""Steven Kapur""@en .
  ?work dbo:artist ?kapur ;
        dbo:title ""The True Self""@en .
  ?work dbo:writer ?writer .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?rogerII .
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?williamII dbo:childOf ?constance ;
            dbo:childOf ?rogerII .
  ?rogerIII dbo:parent ?guiscard .
  ?guiscard rdfs:label ""Robert Guiscard""@en .
  ?spouseChild dbo:childOf ?williamII .
  ?spouseChild dbo:childOf ?royaltyParent .
  ?royaltyParent dbo:spouse ?rogerII .
  ?spouseChild rdfs:label ?label .
  FILTER regex(?label, ""(King|Queen|Duke|Duchess)"", ""i"")
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Part 1: Actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:actor ?actor .

  # Part 2: Parent of a professional photographer
  ?photographer rdf:type dbo:Photographer .
  ?photographer dbo:parent ?actor .

  # Part 3: Child of Allan Arbus and their parent
  ?allanArbus rdfs:label ""Allan Arbus""@en .
  ?child dbo:childOf ?allanArbus ;
         dbo:parent ?actor .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?work dbo:author dbr:Joe_Biden ;
        rdf:type dbo:Book, dbo:WrittenWork ;
        dbo:nationality dbr:United_States .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?award rdfs:label ""Commander of the Order of the British Empire""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,838,63,15,0.93007769145394,0.9824150058616647,0.9555302166476626
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  
  # Find wars associated with Jean Baptist
  ?jeanBaptist dbo:associatedWith ?war .

  # Filter for wars that are also television shows and societal events
  ?war rdf:type dbpedia-owl:SocietalEvent .
  ?war dbo:tvSeries ?tvSeries .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?tenant WHERE {
  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  ?alvaro dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence dbo:resident ?tenant .
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?filthyFriends rdfs:label ""Filthy Friends""@en .
  ?filthyFriends dbo:member ?member .
  
  OPTIONAL { 
    ?eitzel rdfs:label ""Mark Eitzel""@en .
    ?eitzel dbo:associatedBandMember ?member .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?birthPlace WHERE {
  # For Cece Bell, the author of ""El Deafo""
  { 
    ?person rdfs:label ""Cece Bell""@en .
    OPTIONAL { ?person dbo:nationality <http://dbpedia.org/resource/Category:American_writers> . }
    OPTIONAL { ?person dbo:birthPlace ?birthPlace1 . }
    BIND(""Cece Bell"" AS ?name)
  }

  UNION

  # For Glenn Youngkin
  {
    ?person rdfs:label ""Glenn Youngkin""@en .
    OPTIONAL { ?person dbo:nationality <http://dbpedia.org/resource/Category:American_people> . }
    OPTIONAL { ?person dbo:birthPlace ?birthPlace2 . }
    BIND(""Glenn Youngkin"" AS ?name)
  }

  FILTER(?birthPlace1 || ?birthPlace2) # Ensure at least one birthplace is found
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?parent WHERE {
  ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
  ?faisal dbo:child ?child .
  
  # Assuming the child has a royal title or role
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Princess|Prince"", ""i"") }
  
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,2,20,1,5,1,0.16666666666666666,0.5,0.25
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession .
}

UNION

SELECT ?band WHERE {
  ?robert rdfs:label ""Robert Lamar Thompson""@en .
  ?robert dbo:bandMember ?band .
}
```",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childBirthPlace WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Taipei""@en .

  ?person dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""politico""))

  ?child dbo:birthPlace ?childBirthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?eleonora rdfs:label ""Eleonora Menicucci""@en .
  ?eleonora dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""Hartlepool United F.C.""@en .
  ?team dbo:manager ?manager .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?hidenagaWar ?childWar WHERE {
  # Wars involving Toyotomi Hidenaga
  ?hidenaga rdfs:label ""Toyotomi Hidenaga""@en .
  ?hidenaga dbo:participatedIn ?hidenagaWar .

  # Identify Toyotomi Hideyoshi's child and wars involving the child
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  ?child dbo:parent ?hideyoshi ;
         dbo:participatedIn ?childWar .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # Find the manager of SBV Vitesse for the 2020-21 season
  ?team dbp:sport ""association football""@en ;
        dbp:clubName ""SBV Vitesse"" ;
        dbo:season ?season .
  FILTER (STRSTARTS(STR(?season), ""2020–21""))
  ?team dbo:manager ?manager .

  # Filter by nationality as West Germany
  ?manager dbo:nationality ?nationality .
  ?nationality rdfs:label ""West Germany""@en .

  # Check if the manager has managed VfL Bochum
  ?bochum dbp:sport ""association football""@en ;
          dbp:clubName ""VfL Bochum"" ;
          dbo:manager ?manager .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?jeanCommander ?successor ?michaCommander WHERE {
  ?jean rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?jean dbo:commander ?jeanCommander .
  OPTIONAL { ?jeanCommander dbo:successor ?successor . }

  ?micha rdfs:label ""Michał Kazimierz Pac""@en .
  ?micha dbo:commander ?michaCommander .

  FILTER (regex(str(?jeanCommander), ""television show"") && regex(str(?jeanCommander), ""societal event""))
  FILTER (regex(str(?michaCommander), ""event"") && regex(str(?michaCommander), ""military conflict""))

  OPTIONAL { ?reference rdfs:label ""George Ducas""@en . }
}",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?fellowship rdfs:label ""Australian Laureate Fellowship""@en .
  ?fellowship dbo:recipient ?awardee .
  ?awardee dbo:nationality ?nationality .
  FILTER (CONTAINS(LCASE(?nationality), ""australia""))
  OPTIONAL { ?awardee dbo:occupation ?occupation . }
  FILTER EXISTS {
    ?awardee dbo:occupation ?occupation .
    FILTER CONTAINS(LCASE(?occupation), ""scientist"")
  }
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?janetProducer ?johnnyProducer WHERE {
  # Find Janet Gaynor's notable work and its producer(s)
  ?janet dbo:filmography ?work .
  ?work rdfs:label ?workLabel .
  FILTER(CONTAINS(LCASE(?workLabel), ""sunrise"") || CONTAINS(LCASE(?workLabel), ""seven""))
  ?work dbo:producer ?janetProducer .

  # Find the actor who played Johnny Doughboy and their work
  ?actor dbo:actor ?johnnyRole .
  ?johnnyRole rdfs:label ""Johnny Doughboy""@en .
  ?actor dbo:filmography ?johnnyWork .
  
  # Find the producer(s) of the work featuring Johnny Doughboy
  ?johnnyWork dbo:producer ?johnnyProducer .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?william rdfs:label ""William II of Sicily""@en .
  ?william dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?team WHERE {
  ?letsch rdfs:label ""Thomas Letsch""@en .
  ?letsch dbo:nationality ?nationality .
  ?nationality rdfs:label ""West Germany""@en .
  ?letsch dbo:manager ?team .
  ?team a dbo:SoccerClub ;
        dbo:sportsTeamSeason ?season .
  ?season dbo:successorOf ?vflBochum2007 .
  ?vflBochum2007 rdfs:label ""2006–07 VfL Bochum season""@en .
}",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Smartbomb""@en .

  ?author dbo:actor ?movie .

  OPTIONAL { ?movie dbo:director ?professional . }
  OPTIONAL { ?movie dbo:producer ?professional . }
}
```",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  
  # Step 1: Identify Carl, Duke of Württemberg and find his predecessor
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?carl dbo:predecessor ?predecessor .

  # Step 2: Identify Albrecht, Duke of Württemberg and find one of his children who is royalty
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?albrecht dbo:child ?child1 .
  ?child1 rdf:type dbo:Monarch .

  # Step 3: Identify the parent of Archduchess Margarete Sophie of Austria and find their child who is royalty
  ?margarete rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?parent dbo:child ?margarete .
  ?parent dbo:child ?child2 .
  ?child2 rdf:type dbo:Monarch .

  # Step 4: Find a common entity that fits all criteria
  FILTER(?predecessor = ?child1 || ?predecessor = ?child2)
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  ?catherine dbo:father ?father .

  ?isabella rdfs:label ""Isabella of Austria""@en .
  ?isabella dbo:father ?father .

  ?maximilian rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  ?child dbo:childOf ?maximilian .
  ?child ?relation ?father .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinandAlbertII rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel""@en .
  ?ferdinandAlbertII dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,5,5,0,0.5,1.0,0.6666666666666666
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?carl dbo:predecessor ?predecessor .
}

SELECT ?descendant WHERE {
  ?alexander rdfs:label ""Alexander of Württemberg (1804-1881)""@en .
  ?alexander dbo:child ?firstChild .
  ?firstChild dbo:child ?secondChild .
  ?secondChild dbo:child ?descendant .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royaltyChild WHERE {
  # Step 1: Identify Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?ferdinandAlbert2 rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en .
  
  # Step 2: Find his children
  ?ferdinandAlbert2 dbo:child ?child .

  # Step 3: Check if the child is married to Prince Augustus William of Prussia
  ?child dbo:spouse ?augustusWilliam .
  ?augustusWilliam rdfs:label ""Prince Augustus William of Prussia""@en .

  # Step 4: Find the parent of this spouse (Augustus William)
  ?augustusWilliam dbo:child ?parentOfSpouse .

  # Step 5: Identify any royalty children from this parent
  ?parentOfSpouse dbo:child ?royaltyChild .
  FILTER EXISTS { 
    ?royaltyChild rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen"") ||
            CONTAINS(LCASE(?label), ""duke"") || CONTAINS(LCASE(?label), ""prince"") ||
            CONTAINS(LCASE(?label), ""princess""))
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?margareteSophie rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  ?margareteSophie dbo:child ?child .
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?carl dbo:predecessor ?child .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  { 
    ?tupac rdfs:label ""Tupac Shakur""@en .
    ?tupac dbo:associatedMusicalArtist ?artist .
  }
  UNION
  {
    ?stormzy rdfs:label ""Stormzy""@en .
    ?stormzy dbo:associatedMusicalArtist ?artist .
  }
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?person rdfs:label ""Konrad Adenauer""@en .
  ?person dbo:office ?office .
  ?office dbo:position ""Chancellor""@en .
  ?office dbo:country ?country .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  ?juanCarlos rdfs:label ""Juan Carlos Molina""@en .
  ?juanCarlos dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies with Herschel Bernardi
  ?movie dbo:starring ?herberson .
  ?herberson rdfs:label ""Herschel Bernardi""@en .

  # Step 2: Find Mariclare Costello's spouse and their children
  ?mariclare foaf:name ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Step 3: Find Amy Arbus' parents
  ?amy foaf:name ""Amy Arbus""@en .
  ?parent dbo:child ?amy .

  # Step 4: Find common parent
  ?commonParent = ?parent ;
                 = ?child .

  # Step 5: Check if this common parent acted in the movie
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?commonName .
  FILTER(?commonName != ""Herschel Bernardi""@en)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinand rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel""@en .
  ?ferdinand dbo:child ?child .

  ?prince rdfs:label ""Prince Augustus William of Prussia""@en .
  ?prince dbo:spouse ?child .
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battle WHERE {
  ?baggovut rdfs:label ""Karl Gustav von Baggovut""@en .
  ?baggovut dbo:participatedInBattle ?battle .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,48,0,0,1.0,1.0,1.0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?atlFilm rdfs:label ""ATL (film)""@en .
  ?atlFilm dbo:actor ?actor .
  
  OPTIONAL { 
    ?actor rdfs:label ?actorLabel .
    FILTER(CONTAINS(LCASE(?actorLabel), ""the shadow""))
  }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityLabel (GROUP_CONCAT(?birthPlaceLabel; separator="", "") AS ?birthPlaces) WHERE {
  # Part 1: Vince Gilligan's Awardee
  OPTIONAL {
    ?awardee dbo:award ""Primetime Emmy Award for Outstanding Writing for a Drama Series""@en .
    ?awardee dbo:workFeaturedIn <http://dbpedia.org/resource/Breaking_Bad> .
    ?awardee rdfs:label ?entityLabel1 .
    FILTER(LANG(?entityLabel1) = 'en')
    OPTIONAL { ?awardee dbo:birthPlace ?birthPlace1 . }
    OPTIONAL { ?birthPlace1 rdfs:label ?birthPlaceLabel1 . }
  }

  # Part 2: Author of El Deafo
  OPTIONAL {
    ?author dbo:work <http://dbpedia.org/resource/El_Deafo> .
    ?author rdfs:label ?entityLabel2 .
    FILTER(LANG(?entityLabel2) = 'en')
    OPTIONAL { ?author dbo:birthPlace ?birthPlace2 . }
    OPTIONAL { ?birthPlace2 rdfs:label ?birthPlaceLabel2 . }
  }

  BIND(CONCAT(STR(?entityLabel1), "" (Awardee of Vince Gilligan's work)"", STR(?entityLabel2), "" (Author of El Deafo)"") AS ?entityLabel)
  BIND(CONCAT(STR(?birthPlaceLabel1), "" "", STR(?birthPlaceLabel2)) AS ?birthPlaces)
}
GROUP BY ?entityLabel
```",5,5,6,3,2,3,3,71,0,2,1,0.0,0.0,0
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?timezone WHERE {
  ?kiyosu rdfs:label ""Kiyosu""@en .
  ?kiyosu dbo:timeZone ?timezone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify T.I.'s songs
  ?song dbo:musicalArtist dbr:T.I. ;
        a dbo:Song .

  # Step 2: Find the album of the song
  ?album dbo:song ?song .
  
  # Step 3: Match movies with the same name as these albums
  ?movie rdfs:label ?albumLabel ;
         a dbo:Film .
  
  FILTER (lang(?albumLabel) = 'en' && lang(?albumLabel) = 'en')

  # Step 4: Find actors in both the movie and associated with the album
  ?actor dbo:starringIn ?movie ;
         dbo:performerInAlbum ?album .

}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?director WHERE {
  ?film rdfs:label ""A Star Is Born (1937 film)""@en .
  ?film dbo:director ?director .
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
# Query 1: Get William Gayner's birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?gayner rdfs:label ""William Gayner""@en .
  ?gayner dbo:birthPlace ?birthPlace .
}

# Query 2: Find a native of the birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?birthPlace rdf:type dbo:AdministrativeTerritory .
  ?birthPlace dbo:country ?country .
  ?native dbo:birthPlace ?birthPlace ;
          dbo:birthPlaceCountry ?country .
}

# Query 3: Get Hon. Mary Frances Bowes-Lyon's parent(s)
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?mary dbo:parent ?parent .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?person dbo:awardeeOf dbp:KnightCommanderOrderOfTheBath ;
          dbo:militaryCommanderFor ?campaign .
  
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .

  ?person dbo:militaryForce ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?actor rdfs:label ""Johnny Doughboy""@en .
  ?actor dbo:actorIn ?film .
  ?film dbo:work ?notableWork .
  ?notableWork dbo:producer ?producer .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
  ?faisal dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
}
```",1,2,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?award dbo:recipient ?awardee .
  ?gilligan dbo:award ?award .
  FILTER(?gilligan = dbp:Vince_Gilligan) .
  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?commander dbo:commanderOf dbr:Russo-Polish_War_(1654–1667) .
  ?commander dbo:officeHolder ?office .
  ?commander dbo:politician ?politics .
  ?commander dbo:successor ?successor .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?series rdfs:label ""Dispatches from Elsewhere""@en .
  ?series dbo:actor ?actor .
  ?actor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actor""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?koichiro rdfs:label ""Koichirō""@en .
  ?koichiro dbo:participatedIn ?war .
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate ?birthPlace WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:birthDate ?birthDate .
  OPTIONAL { ?nickCurran dbo:birthPlace ?birthPlace . }
  FILTER EXISTS { ?nickCurran dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""musician"")) }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Vince Gilligan's awards
SELECT ?award WHERE {
  ?vince a dbo:Person ;
         foaf:name ""Vince Gilligan""@en .
  ?vince dbo:award ?award .
}

# Step 2: Find other awardees of the same award
SELECT DISTINCT ?awardee (SAMPLE(?birthPlace) AS ?birthPlace) WHERE {
  VALUES ?award { <INSERT_AWARD_URI_HERE> } # Replace with actual URI from step 1
  ?awardee dbo:award ?award ;
           dbo:nationality dbr:United_States ; # Filter for American awardees
           dbo:birthPlace ?birthPlace .
}

# Step 3: Find the birth place of Cece Bell, author of ""El Deafo""
SELECT DISTINCT ?author (SAMPLE(?birthPlace) AS ?birthPlace) WHERE {
  ?book a dbo:Book ;
        dbo:title ""El Deafo""@en ;
        dbo:author ?author .
  ?author dbo:birthPlace ?birthPlace .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?roger rdfs:label ""Roger Pryor (actor)""@en .
  ?roger dbo:spouse ?spouse .
}

SELECT ?partyMemberOf WHERE {
  ?roger rdfs:label ""Roger Pryor (actor)""@en .
  ?roger dbo:partyMemberOf ?partyMemberOf .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  ?bobbyShmurda dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  ?person dbo:positionHeld dbr:North_Carolina_Air_National_Guard_Commander .
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
  ?work dbo:author ?person ;
        a dbo:Book ;
        dbo:country dbr:United_States .
  ?book rdfs:label ?workLabel .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?theodorCountry ?managerName ?managerCountry WHERE {
  # Find Theodor Heuss's country of origin
  ?theodor rdfs:label ""Theodor Heuss""@en .
  ?theodor dbo:nationality ?theodorCountry .

  # Find VfL Bochum's manager and their country of origin
  ?club rdfs:label ""VfL Bochum""@en .
  ?club dbo:manager ?manager .
  ?manager rdfs:label ?managerName .
  ?manager dbo:nationality ?managerCountry .

  FILTER(?theodorCountry = ?managerCountry)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?partyMember WHERE {
  # Step 1: Find John McDermott's death place
  ?john a dbo:Artist ;
        rdfs:label ""John McDermott (artist)""@en .
  
  ?john dbo:deathPlace ?deathPlace .

  # Step 2: Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 3: Find the ruling party member in that settlement
  ?governmentHead dbo:headOfGovernment ?deathPlace ;
                  dbo:partyMember ?partyMember .
  
  # Step 4: Ensure the entity is both a political party and an organization
  ?partyMember rdf:type dbo:PoliticalParty, dbo:Organization .
}
```",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  # Identify Baeda Maryam I and his child
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?child1 dbo:parent ?baedaMaryamI .

  # Identify Dawit I and his child
  ?dawitI rdfs:label ""Dawit I""@en .
  ?child2 dbo:parent ?dawitI .

  # Find a common child
  FILTER (?child1 = ?child2)
  
  # Determine the father of this common child
  ?father dbo:parent ?commonChild .
  
  # Ensure the father is royalty and an office holder
  ?father dbo:royaltyTitle ?title .
  ?father dbo:officeHolder ?office .

  # Find the grandfather (father's father)
  ?grandfather dbo:child ?father .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player (GROUP_CONCAT(?teamLabel; separator="", "") AS ?teams) WHERE {
  VALUES (?person ?label) { 
    (""Juan Carlos Molina"" ""Juan Carlos Molina (footballer)"")
    (""Pablo Aimar"" ""Pablo Aimar"")
  }
  
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = 'en')
  
  OPTIONAL {
    ?person dbo:team ?team .
    ?team rdfs:label ?teamLabel .
    FILTER(LANG(?teamLabel) = 'en')
  }
}
GROUP BY ?player
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Yandamuri Veerendranath""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandfather WHERE {
  
  # Step 1: Find Charles I of Hungary's father
  ?charlesI dbo:father ?father .
  FILTER(CONTAINS(LCASE(?father), 'charles i of hungary'))
  
  # Step 2: Find the parent (grandfather) of Charles I of Hungary
  ?father dbo:fatherOrMother ?grandfather .
  
  # Ensure grandfather is royalty
  OPTIONAL { ?grandfather rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), 'king') || CONTAINS(LCASE(?label), 'queen')) }
  
  # Step 3: Find Stephen V of Hungary's predecessor
  ?stephenV dbo:predecessor ?predecessor .
  FILTER(CONTAINS(LCASE(?stephenV), 'stephen v of hungary'))
  
  # Ensure predecessor is royalty
  OPTIONAL { ?predecessor rdfs:label ?predLabel . FILTER(CONTAINS(LCASE(?predLabel), 'king') || CONTAINS(LCASE(?predLabel), 'queen')) }
  
  # Step 4: Find the child of the predecessor
  ?predecessor dbo:child ?child .
  
  # Ensure child is royalty
  OPTIONAL { ?child rdfs:label ?childLabel . FILTER(CONTAINS(LCASE(?childLabel), 'king') || CONTAINS(LCASE(?childLabel), 'queen')) }
  
  # Step 5: Find the grandchild of the predecessor
  ?child dbo:child ?grandchild .
  
  # Ensure grandchild is royalty
  OPTIONAL { ?grandchild rdfs:label ?grandchildLabel . FILTER(CONTAINS(LCASE(?grandchildLabel), 'king') || CONTAINS(LCASE(?grandchildLabel), 'queen')) }
  
  # Match the grandfather of Charles I with the grandchild of Stephen V's predecessor
  FILTER (?grandfather = ?grandchild)
}
",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office ?termStart ?termEnd ?party WHERE {
  ?brian rdfs:label ""Brian Kemp""@en .
  OPTIONAL { ?brian dbo:office ?office . }
  OPTIONAL { ?brian dbo:termStart ?termStart . }
  OPTIONAL { ?brian dbo:termEnd ?termEnd . }
  OPTIONAL { ?brian dbo:partyAffiliation ?party . }
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?maximilian rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  ?maximilian dbo:child ?child .
  
  ?isabella rdfs:label ""Isabella of Austria""@en .
  ?philip rdfs:label ""Philip I of Castile""@en .

  ?child dbo:parent ?isabella .
  ?child dbo:parent ?philip .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember ?singer WHERE {
  ?robert rdfs:label ""Robert Lamar Thompson""@en .
  
  OPTIONAL { ?robert dbo:bandMember ?bandMember . }
  OPTIONAL { ?robert dbo:singer ?singer . }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battleMilitaryUnits ?calderEvent ?militaryForce WHERE {
  # For the Battle of Fort Royal
  ?battle rdfs:label ""Battle of Fort Royal""@en .
  ?battle dbo:participatingMilitaryUnit ?battleMilitaryUnits .

  # For Robert Calder's societal event with military force
  ?calder rdfs:label ""Robert Calder""@en .
  ?event dbo:agent ?calder ;
         a dbo:SocietalEvent .
  OPTIONAL { ?event dbo:participatingMilitaryUnit ?militaryForce }
  
  BIND(?event AS ?calderEvent)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .

  # Find Carl's predecessor
  ?carl dbo:predecessor ?predecessor .

  # Find one child of Philipp
  ?philipp dbo:child ?child1 .

  # Find the grandchild (child of the child)
  ?child1 dbo:child ?grandchild .

  # Check if the predecessor is the same as the grandchild
  FILTER (?predecessor = ?grandchild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""ATL (film)""@en .
  ?film dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,4,6,0,0.4,1.0,0.5714285714285715
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Back to Work""@en .
  ?book dbo:author ?author .
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:occupation dbo:Navy_Commander ;
          dbo:conflict ?war .
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""world war ii"") || CONTAINS(LCASE(?warLabel), ""naval conflict""))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Identify The Shadow's alter ego
SELECT ?alterEgo WHERE {
  ?shadow dbo:creator ?gibson .
  ?gibson rdfs:label ""Walter B. Gibson""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  FILTER(CONTAINS(LCASE(?alterEgo), ""lamont cranston""))
}

# Step 2: Identify Bob Thompson's band
SELECT ?band WHERE {
  ?bob foaf:name ""Bob Thompson (musician)""@en .
  ?bob dbo:memberOfBand ?band .
}

# Step 3: Find a professional singer in the band
SELECT DISTINCT ?singer WHERE {
  ?band dbo:member ?singer .
  ?singer dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""singer""))
}
```",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?lasso rdfs:label ""Lasso the Moon""@en .
  OPTIONAL { ?lasso a dbo:Film . }
  OPTIONAL { ?lasso a dbo:Album . }
  ?lasso dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?charlesJoseph rdfs:label ""Charles Joseph, Archduke of Austria""@en .
  ?parent dbo:child ?charlesJoseph .
  ?parent dbo:parent ?commander .
  
  ?commander dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") && CONTAINS(LCASE(?occupation), ""thirty years' war""))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York ;
          dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician"") || CONTAINS(LCASE(STR(?occupation)), ""office holder""))
  
  ?person dbo:work ?work .
  
  ?work rdf:type/dbo:Book ;
        rdf:type/dbo:WrittenWork .
}
```",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorShelbyOaks ?actorAlbum ?professionalAlterEgo WHERE {
  # Actor of Shelby Oaks
  ?shelbyOaks rdfs:label ""Shelby Oaks""@en .
  ?shelbyOaks dbo:actor ?actorShelbyOaks .

  # Actor of the album of What You Know (T.I. song)
  ?song rdfs:label ""What You Know (T.I. song)""@en .
  ?album dbo:song ?song .
  ?album dbo:performer ?actorAlbum .

  # Professional in the alter ego of The Golden Master
  ?goldenMaster rdfs:label ""The Golden Master""@en .
  ?alterEgo dbo:characterName ?character .
  ?alterEgo dbo:actor ?professionalAlterEgo .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  ?event dbo:participatedIn ?conflict .
  ?conflict dbo:commander ?commander .
}
```",2,4,3,2,1,3,2,20,0,0,6,0,0.0,0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?show WHERE {
  ?weiss rdfs:label ""Rainer Weiss""@en .
  ?weiss dbo:award ?award .
  
  ?award dbo:event ?event .
  ?event dbo:hostOrganization ?host .

  ?host a dbo:EducationalInstitution .
  ?event rdfs:label ?show .
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor ?finalChild WHERE {
  # Find Myat Hpone Pyo's predecessor
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:predecessor ?predecessor .

  # Find Minye Kyawswa's child
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:child ?child1 .

  # Find the parent of Minye Kyawswa's child
  ?child1 dbo:parent ?parentOfChild1 .

  # Find the child of this parent
  ?parentOfChild1 dbo:child ?finalChild .
}
```",4,4,5,3,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?afeez rdfs:label ""Afeez Oyetoro""@en .
  ?afeez dbo:filmography ?movie .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession (GROUP_CONCAT(?artist; separator="", "") AS ?artists) WHERE {
  # Find Rod Argent's profession
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Find Shaggy's associated musical artists
  ?shaggy rdfs:label ""Elorm Kabu Amenyah""@en ;
          dbo:associatedMusicalArtist ?artist .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?dorothea rdfs:label ""Dorothea of Lorraine""@en .
  ?dorothea dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?clapton dbo:bandMember ?band .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist ?birthNamePerson WHERE {
  # Part 1: Associated Musical Artist of $pacely
  ?pacely rdfs:label ""$pacely""@en .
  OPTIONAL { ?pacely dbo:musicalArtist ?associatedArtist . }

  # Part 2: Person born as the birth name of a native artist from Central Region, Ghana
  ?artist dbo:nativePlace ?centralRegion ;
          dbp:birthName ?birthName .
  FILTER (CONTAINS(LCASE(STR(?centralRegion)), ""central region, ghana""))
  
  OPTIONAL { 
    ?person rdfs:label ?birthName ;
            a dbo:Artist .
    FILTER (?person != ?artist)
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?spouse WHERE {
  # Part 1: Find the actor of ""Always"" (1989 film)
  ?film rdfs:label ""Always""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/Always_(1989_film)>)))
  ?film dbo:starring ?actor .

  # Part 2: Find the spouse of the awardee from Janusz Kamiński's awards
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?award dbo:recipient ?janusz ;
         dbo:spouse ?spouse .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify awards received by Janusz Kamiński
  ?kaminski rdfs:label ""Janusz Kamiński""@en .
  
  # Step 2: Find awardees of these awards
  ?award dbo:recipient ?kaminski ;
         dbo:recipient ?awardee .

  # Step 3: Identify actors in ""Paradise"" (2013 film)
  ?paradise rdfs:label ""Paradise (2013 film)""@en .
  ?paradise dbo:starring ?actor .

  # Step 4: Find common entity
  FILTER (?awardee = ?actor)

  # Step 5: Retrieve spouse information
  ?awardee dbo:spouse ?spouse .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?medalOfHonorWar ?militaryForce WHERE {
  ?person dbo:birthPlace dbr:Charleston,_South_Carolina ;
          dbo:award dbr:Medal_of_Honor ;
          dbo:award dbr:Gillmore_Medal .
  
  OPTIONAL { 
    ?medalOfHonorAward dbo:war ?medalOfHonorWar .
    FILTER (?medalOfHonorAward = <http://dbpedia.org/resource/Medal_of_Honor>)
  }
  
  OPTIONAL {
    ?gillmoreMedalAward dbo:militaryUnit ?militaryForce .
    FILTER (?gillmoreMedalAward = <http://dbpedia.org/resource/Gillmore_Medal>)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?war WHERE {
  ?award dbo:givenBy ""Edmund Hakewill-Smith""@en .
  ?award dbo:recipient ?awardee .

  ?tomPhillips rdfs:label ""Tom Phillips (Royal Navy officer)""@en .
  ?tomPhillips dbo:soldierIn ?war .

  OPTIONAL { 
    ?awardee dbo:force ?force .
    ?war dbo:force ?force .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person rdfs:label ""Chennupati Jagadish""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?yamaza rdfs:label ""Yamaza Enjirō""@en .
  ?yamaza dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""athlete""))
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
# Note: Replace ""Movie Name"" with the actual name of the movie.
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?movie rdfs:label ""Movie Name""@en .
  ?movie dbo:producer ?producer .
}
```",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?child WHERE {
  ?dawit rdfs:label ""Dawit I""@en .
  OPTIONAL { ?dawit dbo:spouse ?spouse . }
  OPTIONAL { ?dawit dbo:child ?child . }
}
```",2,2,3,1,2,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""Hong Kong C""@en .
  ?team a dbo:SoccerClub ;
        dbo:manager ?manager .
  
  ?manager a dbo:SportsManager ;
           dbo:sportsManager ?manager ;
           dbo:soccerManager ?manager .
}
```",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .
  OPTIONAL { ?movie dbo:director ?author . }
  OPTIONAL { ?movie dbo:writer ?author . }
}
```",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  ?peter rdfs:label ""Peter IV of Aragon""@en .
  OPTIONAL { ?peter dbo:birthName ?realName . }
  OPTIONAL { ?peter foaf:name ?realName . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?author WHERE {
  ?work dbo:starring ?vera .
  ?vera rdfs:label ""Vera Lynn""@en .
  ?work rdf:type dbo:Film ;
        rdf:type dbo:TelevisionShow .
  ?work dbo:creator ?author .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  
  # Step 1: Identify Archduchess Helena of Austria
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  
  # Step 2: Find Her Spouse
  ?helena dbo:spouse ?spouse .
  
  # Step 3: Identify Their Child who is a Royalty
  ?child dbo:parent ?helena ; dbo:parent ?spouse .
  OPTIONAL { ?child dbo:royalTitle ?title }.
  FILTER EXISTS { ?title }
  
  # Step 4: Identify Archduchess Margarete Sophie of Austria
  ?margarete rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  
  # Step 5: Find Her Child
  ?margaretesChild dbo:parent ?margarete .
  
  # Step 6: Identify Duke Philipp of Württemberg
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .
  
  # Step 7: Find His Grandchild
  ?philippsChild dbo:parent ?philipp .
  ?grandchild dbo:parent ?philippsChild .
  
  # Step 8: Determine Predecessor of the grandchild
  ?predecessor dbo:successor ?grandchild .
  
  FILTER (?child = ?margaretesChild)
}
",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Query for Stuart Tosh's associated musical artist
SELECT ?artist WHERE {
  ?stuart rdfs:label ""Stuart Tosh""@en .
  ?stuart dbo:musicalArtist ?artist .
}

# Query for Billy Lyall's associated musical artist
SELECT ?artist WHERE {
  ?billy rdfs:label ""Billy Lyall""@en .
  ?billy dbo:musicalArtist ?artist .
}

# Query for a band member of the associated musical artist of David Paton
SELECT ?bandMember WHERE {
  ?david rdfs:label ""David Paton""@en .
  ?david dbo:musicalArtist ?artist .
  ?artist dbo:member ?bandMember .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force ?war WHERE {
  ?tomPhillips rdfs:label ""Tom Phillips (Royal Navy officer)""@en .
  ?tomPhillips dbo:award ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""commander of the order of the british empire""))
  
  OPTIONAL { 
    ?tomPhillips dbo:militaryUnit ?force .
  }
  
  OPTIONAL {
    ?tomPhillips dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  VALUES ?nickname { ""The Heart of Pakistan"" ""Paris of the East"" ""City of Gardens"" ""City of Literature"" }
  
  ?settlement rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  
  OPTIONAL { 
    ?settlement dbo:abstract ?abstract .
    FILTER CONTAINS(LCASE(str(?abstract)), LCASE(str(?nickname)))
  }

  ?settlement dbo:country dbr:Pakistan .

  FILTER (
    CONTAINS(LCASE(str(?label)), ""heart of pakistan"") ||
    CONTAINS(LCASE(str(?label)), ""paris of the east"") ||
    CONTAINS(LCASE(str(?label)), ""city of gardens"") ||
    CONTAINS(LCASE(str(?label)), ""city of literature"")
  )
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Identify Shaggy by birth name
  ?shaggy rdfs:label ""Shaggy""@en .
  ?shaggy dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .

  # Identify Stonebwoy by birth name
  ?stonebwoy rdfs:label ""Stonebwoy""@en .
  ?stonebwoy dbo:birthName ""Elorm Kabu Amenyah"" .

  # Identify Rod Argent by professional identity
  ?rodArgent rdfs:label ""Rod Argent""@en .

  # Find associated musical artists for Shaggy and Stonebwoy that include Rod Argent
  {
    ?shaggy dbo:associatedMusicalArtist ?person .
    FILTER(?person = ?rodArgent)
  } UNION {
    ?stonebwoy dbo:associatedMusicalArtist ?person .
    FILTER(?person = ?rodArgent)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?martin rdfs:label ""Martin of Aragon""@en .
  
  # Find Martin's parents
  ?parent dbo:child ?martin ;
          a dbo:Person .

  # Filter for the parent who is royalty
  OPTIONAL { ?parent dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }

  # Find Peter IV as a child of this royal parent
  ?peter dbo:child ?parent ;
         rdfs:label ""Peter IV""@en .

  # Get references related to both Peter IV and the royal parent
  OPTIONAL { ?reference dbp:reference ?peter }
  OPTIONAL { ?reference dbp:reference ?parent }

  FILTER EXISTS { ?title } # Ensure the parent is royalty
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?alumnus dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""politico"")) .

  ?child dbo:parent ?alumnus .
  ?child dbo:father ?father .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Identify Philip I of Castile and his royal children
  ?philip rdfs:label ""Philip I of Castile""@en .
  ?philip dbo:child ?child1 .
  ?child1 dbo:royaltyTitle ?title1 .

  # Identify the commander in the Siege of Padua and their royal child
  ?commander rdfs:label ?labelCommander .
  FILTER(CONTAINS(LCASE(?labelCommander), ""siege of padua"") && CONTAINS(LCASE(?labelCommander), ""royalty""))
  ?commander dbo:child ?child2 .
  ?child2 dbo:royaltyTitle ?title2 .

  # Find the common father
  ?father dbo:child ?child1 .
  ?father dbo:child ?child2 .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?administration dbo:headOfState|dbo:partyLeader ?tenant .
  ?administration dbo:country dbr:Spain .
}
```",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria and his parent
  ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?charlesJoseph dbo:parent ?parent .

  # Step 2: Find a sibling (child of the same parent)
  ?sibling dbo:parent ?parent .
  
  # Step 3: Identify Cecilia Renata of Austria and her father
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaRenata dbo:parent ?ceciliaFather .

  # Step 4: Identify a commander in the Thirty Years' War related to Cecilia Renata's family
  ?commander rdfs:label ?labelCommander .
  FILTER(CONTAINS(LCASE(?labelCommander), ""thirty years war"") && CONTAINS(LCASE(?labelCommander), ""commander""))
  ?commander dbo:parent ?ceciliaFather .

  # Step 5: Find the child of this commander
  ?child dbo:parent ?commander .

  # Step 6: Retrieve the father of this child
  ?child dbo:father ?father .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character WHERE {
  ?gibson rdfs:label ""Walter B. Gibson""@en .
  ?gibson dbo:creator ?work .
  ?work dbo:abstract ?description .
  FILTER(CONTAINS(LCASE(?description), ""comics"") || CONTAINS(LCASE(?description), ""comic""))
  ?work dbo:character ?character .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?album rdfs:label ""The Miseducation of Lauryn Hill""@en .
  ?album dbo:creator ?artist .
  ?artist dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?club rdfs:label ""VfL Bochum""@en .
  ?club a dbo:SoccerClub .
  ?club dbo:member ?player .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member WHERE {
  # Find band members of David Paton's associated musical artist
  ?paton dbo:musicalArtist ?band1 .
  ?band1 dbo:member ?member .

  # Find band members of Billy Lyall's associated musical artist
  ?lyall dbo:musicalArtist ?band2 .
  ?band2 dbo:member ?member .

  # Ensure the individuals are correctly identified
  ?paton rdfs:label ""David Paton""@en .
  ?lyall rdfs:label ""Billy Lyall""@en .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?actor WHERE {
  # Films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Actors in these films
  ?film dbo:starring ?actor .

  # Filter actors who are also soccer players and athletes
  ?actor dbo:sport ?sport .
  FILTER (
    EXISTS { ?actor dbo:sport dbr:Soccer } ||
    EXISTS { ?actor dbo:sport ?otherSport . ?otherSport rdfs:label ""Athlete""@en }
  )

  # Person born on 1955-02-22 who is an athlete
  ?person dbo:birthDate ?date .
  FILTER (?date = ""1955-02-22""^^xsd:date)
  ?person dbo:sport ?athleteSport .
  
  # Check for commonality
  FILTER (?actor = ?person)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?reneta rdfs:label ""Reneta Kamberova""@en .
  ?reneta dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  OPTIONAL { ?bob dbo:profession ?profession . }
  OPTIONAL { ?bob dbo:bandMember ?band . }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?yurii rdfs:label ""Yurii Khmelnytsky""@en .
  ?yurii dbo:successor ?successor .
}

UNION

SELECT ?war WHERE {
  ?jean rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?jean dbo:commander ?war .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Maria Anna of Bavaria
  ?mariaAnna rdfs:label ""Maria Anna of Bavaria (1574–1616)""@en .
  
  # Step 2: Find her children
  ?mariaAnna dbo:child ?child .

  # Step 3: Determine the father of that child (likely her husband)
  ?father dbp:spouse ?mariaAnna .
  ?father dbo:child ?child .

  # Step 4: Identify the grandchildren
  ?child dbo:child ?grandchild .

  # Step 5: Filter for royalty among grandchildren
  ?grandchild a dbo:Monarch ;
              rdfs:label ?name .

  # Step 6: Check if any of these were commanders in war
  ?grandchild dbo:commanderInWar ?warCommand .

  # Step 7: Link to the Algerian War
  ?algerianWar rdfs:label ""Algerian War""@en ;
               a dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow .
  
  # Step 8: Ensure they commanded in the Algerian War
  ?warCommand dbp:conf",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Find Stephen V of Hungary's predecessor
  ?stephenV dbo:predecessor ?predecessor .
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .

  # Find Charles II of Naples' spouse
  ?charlesII dbo:spouse ?spouse .
  ?charlesII rdfs:label ""Charles II of Naples""@en .

  # Find the child common to both predecessor and spouse
  ?predecessor dbo:child ?commonChild .
  ?spouse dbo:child ?commonChild .

  # Find the grandchild who is royalty
  ?commonChild dbo:child ?grandchild .
  ?grandchild a dbo:Monarch ; # or other relevant royal properties
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?birthPlace WHERE {
  ?film rdfs:label ""Storm in a Teacup""@en .
  ?film dbo:producer ?producer .
  ?producer dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily""@en .
  ?parent dbo:child ?rogerIII .
  ?parent dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?unit rdfs:label ""North Carolina Air National Guard""@en .
  ?unit dbo:commander ?commander .
  
  ?commander a dbo:OfficeHolder ;
             a dbo:Politician .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""Hong Kong C Team""@en .
  ?team dbo:manager ?manager .
  ?manager rdf:type dbo:SoccerManager ;
           rdf:type dbo:SportsManager .
}
```",2,4,3,2,1,3,2,20,0,1,4,0.0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  # Identify Alberto Ruiz-Gallardón's residence and office
  ?alberto rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?alberto dbo:residence ?residence ;
           dbo:office ?office .

  # Identify Manuel Pinto da Costa's military conflict or societal event
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  ?manuel dbo:participatedIn ?event .

  # Find the connection between Alberto's residence/office and Manuel's event
  ?residence dbo:location ?location ;
             dbo:tenant ?tenant .
  ?office dbo:location ?location .

  ?event dbo:location ?location .

  FILTER(?tenant != ?alberto && ?tenant != ?manuel)
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war ?militaryForce WHERE {
  ?bayne rdfs:label ""William Bayne""@en .
  ?bayne dbo:commander ?war .

  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:militaryUnit ?unit .
  ?unit dbo:participatedIn ?war .

  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:residence ?santiagoResidence .
  ?santiagoResidence rdfs:label ""Santiago de Compostela""@en .
  
  ?election dbo:leader ?person ;
            dbo:date ""2009""^^xsd:gYear .
  
  ?person dbo:countryOfResidence ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?muna rdfs:label ""Princess Muna al-Hussein""@en .
  ?muna dbo:child ?child .
  OPTIONAL { ?child dbo:royaltyTitle ?title . FILTER (BOUND(?title)) }
}
```",1,2,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?yurii rdfs:label ""Yurii Khmelnytsky""@en .
  ?yurii dbo:successor ?successor .
}

SELECT ?commanderLabel WHERE {
  ?successor ?p ?war .
  FILTER(CONTAINS(LCASE(STR(?war)), ""great turkish war""))
  ?successor rdfs:label ?commanderLabel .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:party ?party .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Poland .
}
```",1,1,2,1,1,3,2,20,0,57328,108,0.0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?finland .
  ?person dbo:birthPlace ?russianEmpire .
  ?person dbo:deathPlace ?switzerland .

  FILTER (STRSTARTS(STR(?finland), ""http://dbpedia.org/resource/Grand_Duchy_of_Finland""))
  FILTER (STRSTARTS(STR(?russianEmpire), ""http://dbpedia.org/resource/Russian_Empire""))
  FILTER (STRSTARTS(STR(?switzerland), ""http://dbpedia.org/resource/Switzerland""))
}
```",3,3,4,1,3,2,3,28,1,0,0,1.0,1.0,1.0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlace .
}",2,2,3,2,1,2,3,28,0,3,87,0.0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Afeez Oyetoro's movies/shows
SELECT ?movie WHERE {
  ?actor foaf:name ""Afeez Oyetoro""@en .
  ?actor dbo:actedIn ?movie .
}

# Step 2: Find actors in those movies/shows
SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring ?actor .
  FILTER NOT EXISTS { ?actor foaf:name ""Afeez Oyetoro""@en }
}

# Step 3: Identify Tiwa Savage using her birth name
SELECT ?tiwaSavage WHERE {
  ?person foaf:name ""Cynthia Ikponmwenosa Morgan""@en .
  ?person rdfs:label ""Tiwa Savage""@en .
}

# Step 4: Check for any associations between the actor and Tiwa Savage
SELECT DISTINCT ?actor ?association WHERE {
  ?movie dbo:starring ?actor .
  FILTER NOT EXISTS { ?actor foaf:name ""Afeez Oyetoro""@en }
  
  ?tiwaSavage foaf:name ""Tiwa Savage""@en .
  
  OPTIONAL {
    ?actor dbo:associatedWith ?tiwaSavage .
    BIND(""Associated"" AS ?association)
  }
  UNION
  OPTIONAL {
    ?actor dbo:collaboratedWith ?tiwaSavage .
    BIND(""Collaborated"" AS ?association)
  }
}
```

[[ ## completed ##",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?derBlau rdfs:label ""Der Blau""@en .
  ?derBlau dbo:member ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?fatherOfEleonore ?childOfMariaAnna ?fatherOfChild WHERE {
  # Step 1: Find Eleonore of Austria and her father
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?eleonore dbo:father ?fatherOfEleonore .

  # Step 2: Find Maria Anna of Bavaria (born 1574) and one of her children
  ?mariaAnna rdfs:label ""Maria Anna of Bavaria (1574)""@en .
  ?mariaAnna dbo:child ?childOfMariaAnna .

  # Step 3: Find the father of that child
  ?childOfMariaAnna dbo:father ?fatherOfChild .

  # Ensure the father is royalty (optional check, assuming DBpedia has relevant labels)
  OPTIONAL { ?fatherOfChild rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen"")) }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Promises to Keep (Biden book)""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?shadowProfession ?actorProfession WHERE {
  { 
    ?shadow rdfs:label ""The Man Who Laughs""@en .
    ?shadow dbo:profession ?shadowProfession .
  }
  UNION
  {
    ?actor dbo:film ""Ab Kya Hoga""@en .
    ?actor dbo:film ""Dispatches from Elsewhere""@en .
    OPTIONAL { ?actor dbo:occupation <http://dbpedia.org/resource/Politician> . }
    ?actor dbo:profession ?actorProfession .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Identify Thomas Letsch's management role with VfL Bochum
SELECT ?letsch WHERE {
  ?letsch foaf:name ""Thomas Letsch""@en .
  ?letsch dbo:managerOfTeam ?team .
  ?team rdfs:label ""VfL Bochum""@en .
}

# Step 2: Identify the Chancellor of West Germany during Thomas Letsch's management period
SELECT ?chancellor WHERE {
  ?chancellor dbo:officeHolderOf ?position .
  ?position rdfs:label ""Chancellor of Germany""@en .
  FILTER EXISTS { 
    ?letsch dbo:managerOfTeam ?team .
    ?team dbo:season ?season .
    ?season dbo:endDate ?endDate .
    ?chancellor dbo:termEnd ?termEnd .
    FILTER (?endDate <= ?termEnd)
  }
}

# Step 3: Find the native country of the identified Chancellor
SELECT ?nativeCountry WHERE {
  ?chancellor foaf:nationality ?nationality .
  ?nationality rdfs:label ?nativeCountryLabel .
  BIND (STR(?nativeCountryLabel) AS ?nativeCountry)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?actor dbo:occupation ?occupation .
  ?occupation rdfs:label ""Actor""@en .
}
```",1,1,2,1,1,2,3,28,1554,8062,20026,0.16160565723793677,0.07201112140871177,0.09962815745608411
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find David Paton's associated musical artist
SELECT ?band WHERE {
  ?david a dbo:Musician ;
         rdfs:label ""David Paton""@en .
  ?david dbo:associatedBand ?band .
}

# Step 2: Find band members of that musical artist
SELECT DISTINCT ?member WHERE {
  ?band dbo:member ?member .
  ?member a dbo:MusicalArtist .
}

# Step 3: Identify the writer associated with Wizards of Waverly Place soundtrack
SELECT ?writer WHERE {
  ?soundtrack dbp:title ""Wizards of Waverly Place (soundtrack)""@en ;
              dbo:composer ?writer .
}

# Step 4: Find the associated musical artist of that writer
SELECT DISTINCT ?associatedArtist WHERE {
  ?writer a dbo:Musician ;
          dbo:associatedBand ?associatedArtist .
}

# Final step: Identify common band member
SELECT DISTINCT ?commonMember WHERE {
  # Members from David Paton's associated band
  ?band1 dbo:member ?commonMember .
  ?commonMember a dbo:MusicalArtist .

  # Members from the writer's associated band
  ?band2 dbo:member ?commonMember .
  
  FILTER(?band1 != ?band2)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alumnusBirthplace ?residentBirthplace WHERE {
  # Find birthplace of an alumnus of Plovdiv University ""Paisii Hilendarski""
  ?university rdfs:label ""Plovdiv University 'Paisii Hilendarski'""@en .
  ?alumnus dbo:alumni ?university ;
           dbo:birthPlace ?alumnusBirthplace .

  # Find birthplace of a resident of Sofia
  ?resident dbp:residence ?sofiaEntity ;
            dbo:birthPlace ?residentBirthplace .
  
  # Identify the entity for Sofia
  ?sofiaEntity rdfs:label ""Sofia""@en .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alias WHERE {
  ?steven rdfs:label ""Steven Kapur""@en .
  ?steven dbo:alias ?alias .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
# Query for William Bayne (Royal Navy officer)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce ?commander WHERE {
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
  OPTIONAL { ?militaryForce dbo:commander ?commander . }
}

# Query for Battle of Cape Finisterre (1805)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:participatingMilitaryUnit ?militaryForce .
}

# Query for 30th (Cambridgeshire) Regiment of Foot
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryConflict ?commander WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:militaryConflict ?militaryConflict .
  OPTIONAL { ?militaryConflict dbo:commander ?commander . }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  ?sawMinPhyu dbo:spouse ?spouse .
  OPTIONAL { ?spouse rdf:type ?type . }
  FILTER (
    EXISTS { ?spouse dbo:royalTitle ?title } ||
    ?type = <http://dbpedia.org/ontology/Royal> ||
    ?type = <http://dbpedia.org/ontology/Monarch>
  )
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Find parents
  ?parent dbo:child ?edward .

  # Filter for politician and office holder
  OPTIONAL { ?parent dbo:officeHolder ?office . }
  OPTIONAL { ?parent dbo:politicalPartyMember ?party . }

  FILTER EXISTS { ?parent dbo:officeHolder ?office } || 
               EXISTS { ?parent dbo:politicalPartyMember ?party }

  # Find children of the filtered parent(s)
  ?parent dbo:child ?child .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?theodorHeuss rdfs:label ""Theodor Heuss""@en .
  ?theodorHeuss dbo:nationality ?country .
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?association WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?curran rdfs:label ""Nick Curran""@en .
  
  # Check for direct association
  OPTIONAL { ?band dbo:associatedBand ?curran . }
  OPTIONAL { ?band dbo:memberOfBand ?curran . }
  OPTIONAL { ?curran dbo:associatedBand ?band . }
  OPTIONAL { ?curran dbo:memberOfBand ?band . }

  FILTER(?association != NULL)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  ?hu rdfs:label ""Hu Jieqing""@en .
  ?hu dbo:spouse ?spouse .
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""writer"") || CONTAINS(LCASE(STR(?occupation)), ""author""))
  ?spouse dbo:notableWork ?work .
  ?work dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional ?associatedArtist WHERE {
  # Find Rod Argent's profession
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:occupation ?profession .

  # Find another professional in the same field
  ?professional dbo:occupation ?sameProfession .
  
  FILTER(?sameProfession = ?profession && ?professional != ?rodArgent)

  # Identify $pacely and find associated musical artists
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely dbo:associatedBand ?band .
  ?band dbo:musicalArtist ?associatedArtist .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:deathPlace ?switzerland .
  FILTER (CONTAINS(LCASE(STR(?switzerland)), ""switzerland""))
  
  OPTIONAL { 
    ?person dbo:nationality ?finland .
    FILTER (CONTAINS(LCASE(STR(?finland)), ""grand duchy of finland"") || CONTAINS(LCASE(STR(?finland)), ""finland""))
  }
  
  OPTIONAL {
    ?person dbo:birthPlace ?finlandBirth .
    FILTER (CONTAINS(LCASE(STR(?finlandBirth)), ""grand duchy of finland"") || CONTAINS(LCASE(STR(?finlandBirth)), ""finland""))
  }
}
```",2,2,3,1,2,2,3,28,2,1021,0,0.0019550342130987292,1.0,0.003902439024390244
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person a dbo:SoccerPlayer ;
          dbo:manager true .

  # Check for shared teams with Juan Carlos Molina
  ?molinaTeam dbp:player ""Juan Carlos Molina""@en .
  ?person dbp:team ?molinaTeam .

  # Check for shared teams with Sergio Agüero
  ?agueroTeam dbp:player ""Sergio Agüero""@en .
  ?person dbp:team ?agueroTeam .

  # Retrieve current team
  OPTIONAL { ?person dbo:currentTeam ?team }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?parent WHERE {
  VALUES (?name) { (""Princess Sara bint Faisal""@en ""Prince Omar bin Faisal""@en) }
  
  ?person rdfs:label ?name .
  ?person dbo:parent ?parent .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Step 1: Find Charles I of Hungary and his father
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?charlesI dbo:father ?father .

  # Step 2: Find Charles II of Naples and his spouse
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?spouse .

  # Step 3: Check if the spouse is a parent of the father of Charles I of Hungary
  ?father dbo:parent ?parent .
  FILTER (?spouse = ?parent)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?leader WHERE {
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
  ?party dbo:leader ?leader .
  ?leader rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?party rdfs:label ""Republican Party (United States)""@en .
  ?party dbo:member ?member .
}
```",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Find his father
  ?philip dbo:father ?father .

  # Step 3: Determine the child of this father (Philip's sibling)
  ?sibling dbo:parent ?father .
  ?sibling a dbo:Monarch .  # Ensure the sibling is royalty

  # Step 4: Identify Béla IV of Hungary
  ?bela rdfs:label ""Béla IV of Hungary""@en .

  # Step 5: Find the child of Béla IV who is related to Philip I
  ?cousin dbo:parent ?bela .
  ?cousin a dbo:Monarch .  # Ensure the cousin is royalty

  # Check if the sibling and cousin are the same person (Philip's cousin)
  FILTER(?sibling = ?cousin)

  # Step 6: Determine the spouse of this individual
  ?cousin dbo:spouse ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?spouse WHERE {
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  ?charles rdfs:label ""Charles Martel of Anjou""@en .

  ?philip dbo:father ?father .
  ?charles dbo:parent ?father .

  ?father dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?kim rdfs:label ""Kim Wilson""@en .
  ?kim dbo:musicalArtist ?band .
}

UNION

SELECT ?realName WHERE {
  ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
  ?thunderbirds foaf:name ?realName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?amy rdfs:label ""Amy Arbus""@en .
  ?amy dbo:parent ?parent .
}

UNION

SELECT ?actor WHERE {
  ?film rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:actor ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?athlete WHERE {
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthDate ?birthday .

  ?athlete a dbo:Athlete ;
           dbo:birthDate ?birthday .
}
```",3,4,4,3,1,3,3,71,0,10,18,0.0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?greatGrandchild WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  FILTER(?alexander != <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)>)

  # Find a child
  ?child1 dbo:parent ?alexander .

  # Find a grandchild
  ?grandchild dbo:parent ?child1 .

  # Find a great-grandchild
  ?greatGrandchild dbo:parent ?grandchild .

  # Archduke Charles Louis of Austria
  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .

  # Find a child
  ?child2 dbo:parent ?archduke .

  # Find a grandchild who is royalty
  ?royalGrandchild dbo:parent ?child2 .
  ?royalGrandchild dbo:royaltyTitle ?title .

  # Match the great-grandchild with the royal grandchild
  FILTER(?greatGrandchild = ?royalGrandchild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?minye rdfs:label ""Minye Kyawswa""@en .
  ?minye dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bayneWarForce ?commander ?regimentConflict ?calderEventForce WHERE {
  
  # Find the military force of the war involving William Bayne
  ?bayne dbo:militaryConflict ?war .
  ?war dbo:participatingMilitaryUnit ?bayneWarForce .
  FILTER(CONTAINS(LCASE(?bayne), 'william bayne'))
  
  # Find a commander of the same war
  ?commander dbo:commanderOf ?war .
  
  # Find the military conflict involving the 30th (Cambridgeshire) Regiment of Foot
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:militaryConflict ?regimentConflict .
  
  # Find the military force associated with an event involving Robert Calder
  ?calder dbo:event ?event .
  ?event dbo:participatingMilitaryUnit ?calderEventForce .
  FILTER(CONTAINS(LCASE(?calder), 'robert calder'))
  
}",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?timeZone rdfs:label ""Japan Standard Time""@en .
  ?region dbo:timeZone ?timeZone .
  ?region a ?entity .
}
```",2,2,3,2,1,3,2,20,0,36,8916,0.0,0.0,0
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?john rdfs:label ""John McDermott (American artist)""@en .
  ?john dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type/rdfs:subClassOf* dbo:Settlement .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinand rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel""@en .
  ?ferdinand dbo:child ?child .

  ?luise rdfs:label ""Luise of Brunswick-Wolfenbüttel""@en .
  ?luise dbo:spouse ?luisesSpouse .
  
  ?luisesSpouse dbo:spouse ?spousesSpouse .

  FILTER(?child = ?spousesSpouse)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?entity WHERE {
  {
    ?entity dbo:country dbr:Colombia .
  }
  UNION
  {
    ?person foaf:nationality dbr:Colombia .
    ?person a ?entity .
  }
}
```",1,1,2,1,1,2,3,28,2141,0,0,1.0,1.0,1.0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthplace .
  ?entity dbo:locatedIn ?birthplace .
  ?entity dbo:award ?award .
  ?award dbo:number ""25""^^xsd:int .
  ?recipient dbo:award ?award .
  ?recipient dbo:participatedIn ?war .
}",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentSpouse WHERE {
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis dbo:parent ?parent .
  ?parent a dbo:Noble ;
          (dbo:title|dbo:royalty) ?title .
  ?parent dbo:spouse ?parentSpouse .
}",2,4,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?actor WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:starring ?audreyHepburn .
  ?audreyHepburn rdfs:label ""Audrey Hepburn""@en .

  OPTIONAL { 
    ?film dbo:director ?januszKaminskiSpouse .
    ?januszKaminski dbo:spouse ?januszKaminskiSpouse .
    ?januszKaminski rdfs:label ""Janusz Kamiński""@en .
  }

  ?film dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,1,72,0,0.0136986301369863,1.0,0.027027027027027025
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?cecilia rdfs:label ""Cecilia Renata of Austria""@en .
  ?cecilia dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?georgeDucas rdfs:label ""George Ducas""@en .
  ?georgeDucas dbo:successor ?successor .

  ?successor a dbo:Politician ;
            dbo:officeHolder ?office .

  ?michałKazimierzPac rdfs:label ""Michał Kazimierz Pac""@en .
  ?event dbo:participatedIn ?michałKazimierzPac ;
         dbo:commander ?successor .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession ?spouse WHERE {
  ?carrie rdfs:label ""Carrie Johnson""@en .
  OPTIONAL { ?carrie dbo:profession ?profession . }
  OPTIONAL { ?carrie dbo:spouse ?spouse . }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Identify Maria Anna of Bavaria (born 1574)
  ?maria rdfs:label ""Maria Anna of Bavaria""@en .
  ?maria dbo:birthYear ""1574""^^xsd:gYear .

  # Step 2: Find her child who is a royalty
  ?maria dbo:child ?royalChild .
  ?royalChild dbo:royalty true .

  # Step 3: Identify the father of this royal child
  ?royalChild dbo:father ?father .

  # Step 4: Find the child of this father
  ?father dbo:child ?finalChild .

  # Step 5: Connect to societal event, event, and television show related to 2nd Dragoon Regiment (France)
  OPTIONAL {
    ?event dbo:socialEvent true .
    ?event dbo:event true .
    ?event dbo:televisionShow true .
    ?event dbo:relatedTo <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> .
    FILTER(?finalChild = ?event) # Assuming a direct connection for simplicity
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?shirley rdfs:label ""Shirley Stoler""@en .
  ?shirley dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?dawit rdfs:label ""Dawit I""@en .
  ?dawit dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?hidenaga rdfs:label ""Toyotomi Hidenaga""@en .
  ?hidenaga dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?jamsetji rdfs:label ""Jamsetji Tata""@en .
  OPTIONAL { ?jamsetji dbo:nationality ?nationality . FILTER(CONTAINS(LCASE(STR(?nationality)), ""india"")) }
  OPTIONAL { ?jamsetji dbo:birthPlace ?birthPlace . FILTER(CONTAINS(LCASE(STR(?birthPlace)), ""india"")) }
  ?jamsetji dbo:work ?work .
}
```",2,3,3,2,1,2,2,9,0,0,68,0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label ?birthPlace WHERE {
  VALUES ?personLabel { ""Cece Bell""@en ""Glenn Youngkin""@en ""Vince Gilligan""@en }
  
  ?person rdfs:label ?personLabel .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?kim rdfs:label ""Kim Wilson""@en .
  ?kim dbo:memberOfBand ?band .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royalChild WHERE {
  ?martin rdfs:label ""Martin of Aragon""@en .
  
  # Find Martin's parent(s)
  ?parent dbo:child ?martin .

  # Identify the father
  ?father rdf:type dbo:Man ;
          dbo:spouse ?mother ;
          dbo:child ?parent .

  # Find the child of the father who is royalty
  ?royalChild dbo:child ?father .
  
  OPTIONAL { ?royalChild dbo:royalTitle ?title . }
}
```",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Archduchess Helena of Austria and her spouse's royal child
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?helena dbo:spouse ?spouseHelena .
  ?childHelena dbo:parent ?spouseHelena ;
               a dbo:Royal .

  # Step 2: Find Archduke Charles Louis of Austria and his spouse's royal child
  ?charles rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?charles dbo:spouse ?spouseCharles .
  ?childCharles dbo:parent ?spouseCharles ;
                a dbo:Royal .

  # Step 3: Find the grandchildren who are royalty
  ?grandChildHelena dbo:parent ?childHelena ;
                    a dbo:Royal .
  ?grandChildCharles dbo:parent ?childCharles ;
                     a dbo:Royal .

  # Step 4: Determine the predecessor of each grandchild
  ?grandChildHelena dbo:predecessor ?predecessor .
  OPTIONAL { ?grandChildCharles dbo:predecessor ?predecessor . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musician ?associatedArtist WHERE {
  ?person foaf:name ""Pacely""@en .
  ?person dbo:birthName ""Pacely"" .
  ?person dbo:profession ?prof .
  FILTER(CONTAINS(LCASE(STR(?prof)), ""musician""))
  OPTIONAL { ?person dbo:associatedBand ?band . }
  BIND(?person AS ?musician)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Producers of A Star Is Born (1937)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?producer WHERE {
  ?film dbo:title ""A Star Is Born""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1937)
  ?film dbo:producer ?producer .
}

# Producers of The Adventures of Tom Sawyer (1938)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?producer WHERE {
  ?film dbo:title ""The Adventures of Tom Sawyer""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1938)
  ?film dbo:producer ?producer .
}

# Fictional Character with Alter Ego ""Kent Allard""
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?character WHERE {
  ?character dbo:alterEgo ?alias .
  ?alias rdfs:label ""Kent Allard""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?album ?mainArtist WHERE {
  ?song dbo:artist dbr:T.I. ;
        a dbo:Song .
  ?song dbo:album ?album .
  ?album dbo:artist ?mainArtist .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?artist a dbo:Artist .
  ?artist dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthplace WHERE {
  # Part 1: Birthplace of the awardee of Sangeet Natak Akademi Fellowship
  { 
    ?person dbo:award ""Sangeet Natak Akademi Fellowship""@en .
    ?person dbo:birthPlace ?birthplace .
  }
  
  UNION
  
  # Part 2: Birthplace of Smita Patil
  {
    ?smita rdfs:label ""Smita Patil""@en .
    ?smita dbo:birthPlace ?birthplace .
  }
}
```",4,4,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?associatedArtist WHERE {
  ?band rdfs:label ""Cavalera Conspiracy""@en .
  ?band dbo:associatedBand ?associatedArtist .
  ?associatedArtist rdf:type dbo:MusicalGroup .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""VfL Bochum""@en .
  ?team dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp-owl: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?mark rdfs:label ""Mark Tournier""@en .
  ?mark dbo:birthPlace ?birthPlace .
  ?birthPlace a dbp-owl:Settlement .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find Charles Martel of Anjou's parent
  ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
  ?charlesMartel dbo:parent ?parent .

  # Step 2: Find the child of the child (royalty) of Stephen V of Hungary's predecessor
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:predecessorOf ?stephenV .
  ?child1 dbo:child ?predecessor .
  ?child2 dbo:child ?child1 .
  ?child2 rdf:type dbo:Monarch .

  # Step 3: Find the spouse of Charles II of Naples
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?spouse .

  # Step 4: Check for common entity among these relationships
  FILTER (?parent = ?child2 || ?parent = ?spouse)
  BIND(?parent AS ?commonEntity)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?child dbo:child ?baedaMaryamI .
  ?baedaMaryamIFather dbo:father ?baedaMaryamI .
  ?baedaMaryamIFather rdfs:label ?grandfather .

  OPTIONAL {
    ?shadow rdfs:label ""The Shadow (radio, film and television character)""@en .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  # Hashiba Hidekatsu's war involvement
  { 
    ?hashiba rdfs:label ""Hashiba Hidekatsu""@en .
    ?hashiba dbo:participatedIn ?war .
    BIND(?hashiba AS ?person)
  }
  
  UNION
  
  # Koichirō's war involvement
  {
    ?koichiro rdfs:label ""Koichirō""@en .
    ?koichiro dbo:participatedIn ?war .
    BIND(?koichiro AS ?person)
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?person dbo:birthPlace ?place .
  ?person dbo:partyAffiliation ?party .
}
```",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?antonios rdfs:label ""Antonios Varthalitis""@en .
  ?antonios dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}
```",2,3,3,2,1,2,3,28,0,1,12,0.0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?augustus rdfs:label ""Prince Augustus William of Prussia""@en .
  ?augustus dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?association WHERE {
  ?person1 rdfs:label ""$pacely""@en .
  ?person1 dbo:birthName ?birthName1 .
  
  ?person2 dbo:nationality dbr:Ghana .
  ?person2 dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .
  ?person2 a dbo:MusicalArtist .
  
  ?person1 dbo:associatedWith ?association .
  ?person2 dbo:associatedWith ?association .
  FILTER(?person1 != ?person2)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person dbo:residence ?place .
  ?place rdfs:label ""Chappaqua, New York""@en .
  
  ?person dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office holder""))
  )
  
  ?person dbo:commanderIn ?crisis .
  ?crisis rdfs:label ""Third Taiwan Strait Crisis""@en .

  ?work dbo:author ?person ;
        a dbo:Book, dbo:CreativeWork .
        
  ?work dbo:author ?author .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""VfL Bochum""@en .
  ?team dbo:manager ?manager .
  
  ?manager dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1968 && MONTH(?birthDate) = 8 && DAY(?birthDate) = 26)
  
  ?manager dbo:nationality ?nationality .
  ?nationality rdfs:label ""West Germany""@en .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award ?native WHERE {
  ?person foaf:name ""Ackquille Jean Pollard""@en .
  ?person dbo:awardReceived ?award .
  
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""state"") || CONTAINS(LCASE(?awardLabel), ""region"") || CONTAINS(LCASE(?awardLabel), ""settlement""))
  
  OPTIONAL {
    ?award dbo:nativePlace ?native .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?derBlau rdfs:label ""Der Blau""@en .
  OPTIONAL { ?derBlau dbo:hasMember ?member . }
  OPTIONAL { ?derBlau dbo:member ?member . }
}
```",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Identify Bobby Shmurda's entity
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  
  # Find band members of Bobby Shmurda
  ?bobbyShmurda dbo:bandMember ?member .

  # Find musical artists from Florida
  ?artist dbo:birthPlace ?place ;
          a dbo:MusicalArtist .
  ?place rdfs:label ""Florida""@en .

  # Get the birth name of these artists
  ?artist dbo:birthName ?birthName .

  # Match the birth name with band members
  ?member rdfs:label ?birthName .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?show a dbo:TelevisionSeries .
  ?show dbo:actor ?richardGrant .
  ?richardGrant rdfs:label ""Richard E. Grant""@en .
  ?show dbo:actor ?actor .
  FILTER(?actor != ?richardGrant)
}
```",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?dawitChild ?naodFather ?naodsGrandfather WHERE {
  # Identify Dawit I and his child
  ?dawitI rdfs:label ""Dawit I""@en .
  ?dawitI dbo:child ?dawitChild .

  # Identify Na'od, then find his father and grandfather
  ?naod rdfs:label ""Na'od""@en .
  ?naod dbo:father ?naodFather .
  ?naodFather dbo:father ?naodsGrandfather .

  # Check if Na'od's father or grandfather is royalty or an office holder
  OPTIONAL { ?naodFather dbo:royalTitle ?title . }
  OPTIONAL { ?naodFather dbo:officeHolder ?office . }
  OPTIONAL { ?naodsGrandfather dbo:royalTitle ?grandTitle . }
  OPTIONAL { ?naodsGrandfather dbo:officeHolder ?grandOffice . }

  FILTER (?title || ?office || ?grandTitle || ?grandOffice)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor (SAMPLE(?profession) AS ?professional)
WHERE {
  # Find the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .

  # Find actors in ""ATL""
  ?film dbp:title ""ATL""@en ;
        dbo:actor ?atlActor .

  # Find a common actor
  ?commonActor rdfs:label ?actorLabel .
  FILTER (CONTAINS(LCASE(?actorLabel), LCASE(""Common Actor Name""))) # Placeholder for actual name

  # Check if the common actor is linked to both the author and ATL
  OPTIONAL { ?author dbo:colleague ?commonActor . }
  OPTIONAL { ?atlActor = ?commonActor . }

  # Get the profession of the common actor
  ?commonActor dbo:occupation ?profession .
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Identify the commander in the Siege of Mukha
  ?commander dbo:event ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .

  # Step 2: Check if the commander is royalty
  OPTIONAL { ?commander dbo:royalTitle ?title . }

  # Step 3: Find the parent of the commander
  ?parent dbo:child ?commander .
  
  # Step 4: Identify the child of this royal parent who is also royalty
  ?parent dbo:child ?child .
  OPTIONAL { ?child dbo:royalTitle ?title2 . }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find a child of Alfonso VI
  ?alfonsoVI rdfs:label ""Alfonso VI of León and Castile""@en .
  ?alfonsoVI dbo:child ?childOfAlfonso .

  # Step 2: Find that child's child (grandchild of Alfonso VI)
  ?childOfAlfonso dbo:child ?grandChildOfAlfonso .

  # Step 3: Identify a royal parent of William I of Sicily's child
  ?williamI rdfs:label ""William I of Sicily""@en .
  ?williamI dbo:child ?childOfWilliamI .
  ?parentOfChildOfWilliamI dbo:child ?childOfWilliamI ;
                          dbo:royalTitle ?title .

  # Step 4: Identify Roger III's parent
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  ?parentOfRogerIII dbo:child ?rogerIII .

  # Step 5: Find the common entity that fits all criteria
  FILTER (?grandChildOfAlfonso = ?parentOfChildOfWilliamI)
  FILTER (?parentOfChildOfWilliamI = ?parentOfRogerIII)

  BIND(?parentOfChildOfWilliamI AS ?commonEntity)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find a band member of The Alan Parsons Project
SELECT ?member WHERE {
  ?project rdfs:label ""The Alan Parsons Project""@en .
  ?project dbo:musicalArtist ?member .
}

# Step 2: Check if any member is also known as Stuart Mcbeath Tosh
SELECT DISTINCT ?aliasMember WHERE {
  ?member foaf:alias ""Stuart Mcbeath Tosh"" .
  
  # Step 3: Find associated musical artists of this person
  OPTIONAL { 
    ?member dbo:associatedBand ?associatedArtist .
  }
}

# Combine the results to get the final answer
SELECT DISTINCT ?aliasMember ?associatedArtist WHERE {
  ?member foaf:alias ""Stuart Mcbeath Tosh"" .
  ?project rdfs:label ""The Alan Parsons Project""@en .
  ?project dbo:musicalArtist ?member .
  
  OPTIONAL { 
    ?member dbo:associatedBand ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceEntity WHERE {
  ?burhan rdfs:label ""Burhan Belge""@en .
  ?burhan dbo:birthPlace ?birthPlace .
  ?birthPlaceEntity rdf:type ?type .
  FILTER(?type != dbo:Place) # To exclude the birthplace itself and find related entities
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""Order of the Medjidie""@en .
  OPTIONAL { ?entity dbo:recipient ?recipient . }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Step 1: Find William II of Sicily's father
  ?william2 rdfs:label ""William II of Sicily""@en .
  ?william2 dbo:father ?father .

  # Step 2: Find Alfonso VI's grandchildren
  ?alfonso6 rdfs:label ""Alfonso VI of León and Castile""@en .
  ?alfonso6 dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # Step 3: Find Roger III's parent
  ?roger3 rdfs:label ""Roger III, Duke of Apulia""@en .
  ?roger3 dbo:parent ?parentOfRoger .

  # Step 4: Find child of Roger III's parent (sibling of Roger III)
  ?parentOfRoger dbo:child ?sibling .

  # Step 5: Combine results to find the common ancestor
  FILTER (?father = ?grandchild && ?grandchild = ?sibling)
  
  BIND(?father AS ?commonAncestor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?vince dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?birthPlace WHERE {
  ?cece rdfs:label ""Cece Bell""@en .
  ?cece dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  
  # Find Dorothea's parents
  ?dorothea dbo:parent ?parent .

  # Ensure the parent is royalty and involved in the Siege of Padua
  ?parent dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""royalty"") && CONTAINS(LCASE(?parent), ""siege of padua""))

  # Find the father of this royal parent
  ?parent dbo:parent ?father .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickCurranArtist ?kimWilsonBand WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?nickCurranArtist .

  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:band ?kimWilsonBand .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show WHERE {
  ?nobelPrizeInPhysics dbo:awardedBy ?host .
  ?maxBorn dbo:award ?nobelPrizeInPhysics .
  ?host dbo:almaMater ?institution .
  FILTER EXISTS { ?institution a dbo:EducationalOrganization }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName ?birthDate WHERE {
  ?person rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  OPTIONAL { ?person foaf:name ?fullName . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbpedia:Eton_College .
  ?child dbo:parent ?alumnus ;
         a dbo:Politician .
  ?child dbo:parent ?victorParent .
  ?victor dbp:name ""Victor Stanley""@en ;
          dbo:parent ?victorParent .
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?curran rdfs:label ""Nicholas Michael Curran""@en .
  ?curran a dbo:MusicalArtist .
  ?curran dbo:associatedBand ?associatedArtist .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbo:nickname ?nickname .
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?work WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbo:member ?player .
  ?player rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""the first glove""))
  OPTIONAL { ?player dbo:author ?work . }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?commander WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?profession WHERE {
  ?john rdfs:label ""John Boxer""@en .
  OPTIONAL { ?john dbo:birthName ?birthName . }
  OPTIONAL { ?john dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,2,9,0,2,39640,0.0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  ?person dbo:athlete true .
  ?person dbo:soccerPlayer true .
  ?person dbo:sportsManager true .
  ?person dbo:soccerManager true .
}",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?kimBand ?curranArtist WHERE {
  # Find Kim Wilson's band
  ?kim a dbo:Musician ;
      rdfs:label ""Kim Wilson""@en .
  ?kim dbo:band ?kimBand .

  # Find Nicholas Michael Curran's associated musical artist
  ?curran a dbo:Person ;
          rdfs:label ""Nicholas Michael Curran""@en .
  ?curran dbo:musicalArtist ?curranArtist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?linda rdfs:label ""Linda Miller (actress)""@en .
  ?linda dbo:child ?child .
  ?child dbo:nativePlace <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Cat%C3%B3lica_de_Puerto_Rico> .
  ?child dbo:country <http://dbpedia.org/resource/United_States> .
  OPTIONAL { ?child dbo:settlement ?settlement } .
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?santiago rdfs:label ""Santiago de Compostela""@en .
  OPTIONAL { ?santiago dbo:tenant ?tenant . }
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actor""))
}
```",2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  OPTIONAL { ?band dbo:alias ?realName . }
  FILTER (!bound(?realName)) # If no alias, use the label
  BIND(""The Fabulous Thunderbirds"" AS ?realName)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?profession WHERE {
  ?show rdfs:label ""Coke Studio Philippines""@en .
  ?show dbo:producer ?producer .
  ?producer dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,1,5,11,0.16666666666666666,0.08333333333333333,0.1111111111111111
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderOffice ?conflictName ?leaderOffice ?partyName WHERE {
  # Manuel Pinto da Costa's office as a commander in a military conflict
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  ?manuel dbo:office ?commanderOffice .
  ?commanderOffice dbo:militaryConflict ?conflict .
  ?conflict rdfs:label ?conflictName .

  # Miguel Maura's office as a leader of a political party
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:office ?leaderOffice .
  ?leaderOffice dbo:politicalParty ?party .
  ?party rdfs:label ?partyName .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?parent (dbo:child|dbo:spouse) ?child .

  ?work dbo:actor ?herchel ;
        dbo:actor ?actor .
  
  ?herchel rdfs:label ""Herschel Bernardi""@en .
  ?actor rdfs:label ?actorLabel .
  
  FILTER(?parent = ?mariclare || ?parent = ?spouse)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?season a dbo:SoccerClubSeason ;
          dbo:sportTeam ?team .

  FILTER(?team = db:VfL_Bochum) .
  FILTER(YEAR(?season) >= 2007 && YEAR(?season) <= 2008) .

  ?season dbo:manager ?manager .

  ?manager dbo:nationality <http://dbpedia.org/resource/Germany> ;
           dbo:birthPlace ?place .

  ?place rdfs:label ""West Germany""@en .
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?archduke dbo:child ?child .
  ?child dbo:royaltyTitle ?title .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Identify Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  
  # Find his child
  ?child1 dbo:childOf ?philippAlbrecht .

  # Find the child's child (grandchild)
  ?grandchild1 dbo:childOf ?child1 .

  # Identify Duke Philipp of Württemberg
  ?dukePhilipp rdfs:label ""Duke Philipp of Württemberg""@en .
  
  # Find his child and then that child's child
  ?child2 dbo:childOf ?dukePhilipp .
  ?grandchild2 dbo:childOf ?child2 .

  # Identify Archduke Charles Louis of Austria
  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .

  # Find the child of the child who is royalty
  ?royalGrandchild dbo:childOf ?grandchild2 .
  ?royalGrandchild a dbo:RoyalFamilyMember .

  # Determine the predecessor
  ?predecessor dbo:predecessor ?royalGrandchild .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""The Sky Ranger""@en .
  FILTER(CONTAINS(LCASE(STR(?film)), ""1928""))
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  # Find actors in ""Rustlers' Rhapsody""
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .

  # Find the profession of Frédéric Bouraly
  ?person rdfs:label ""Frédéric Bouraly""@en .
  ?person dbo:profession ?profession .

  # Check if any actor is also in the same profession as Frédéric Bouraly
  FILTER(?actor = ?person)
}
```",3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?photographer ?parent WHERE {
  ?photographer dbo:profession dbr:Photography .
  OPTIONAL { ?photographer dbo:parent ?parent . }
}
```",2,2,3,2,1,3,3,71,0,1,30,0.0,0.0,0
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist dbo:birthPlace dbr:Florida .
  ?artist rdf:type dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer ?commander WHERE {
  ?tvShow rdfs:label ""Always the Love Songs""@en .
  ?tvShow dbo:creator ?writer .

  ?battle rdfs:label ""Battle of Vienna (1683)""@en .
  ?battle dbo:commander ?commander .

  FILTER(?writer = ?commander)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader ?residence WHERE {
  ?party rdfs:label ""Ulster Unionist Party""@en .
  ?party dbo:leader ?leader .
  ?leader dbo:residence ?residence .
}
```",2,2,3,2,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  # Step 1: Identify the commander in the Algerian War
  ?war dbo:name ""Algerian War""@en .
  ?war dbo:commander ?commander .

  # Step 2: Find an event that is a societal event, another type of event, and a television show
  ?event rdfs:label ?label .
  FILTER(CONTAINS(?label, ""societal"") && CONTAINS(?label, ""event"") && CONTAINS(?label, ""television show"")) .

  # Step 3: Identify Archduke Charles Joseph of Austria and his lineage
  ?archduke dbo:name ""Archduke Charles Joseph of Austria""@en .
  ?parent dbo:child ?archduke .
  ?grandparent dbo:child ?parent .
  ?greatGrandfather dbo:child ?grandparent .

  # Step 4: Match the commander with the great-grandfather
  FILTER(?commander = ?greatGrandfather)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson""@en .
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" .
  ?bob dbo:bandMember ?band .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?naod rdfs:label ""Na'od""@en .
  ?naod dbo:father ?father .
  ?father dbo:father ?grandfather .
  
  # Ensure the grandfather is a royalty and an office holder
  OPTIONAL { ?grandfather dbo:royalty ?isRoyalty . FILTER(?isRoyalty = true) }
  OPTIONAL { ?grandfather dbo:officeHolder ?isOfficeHolder . FILTER(?isOfficeHolder = true) }

  # Reference to Lamont Cranston as The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?lamontCranston .
  ?lamontCranston rdfs:label ""Lamont Cranston""@en .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?william rdfs:label ""William Bayne""@en .
  ?william dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,1,5,1,0.16666666666666666,0.5,0.25
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find Frédéric Bouraly's profession
  ?frederic a dbo:Person ;
            rdfs:label ""Frédéric Bouraly""@en .
  ?frederic dbo:profession ?profession .

  # Identify the album ""Lasso the Moon"" and ensure it is both a film and a work
  ?lasso a dbo:Film, dbo:Work ;
         rdfs:label ""Lasso the Moon""@en .

  # Find actors associated with ""Lasso the Moon""
  ?lasso dbo:actor ?actor .
  
  # Ensure the actor has the same profession as Frédéric Bouraly
  ?actor dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?ian rdfs:label ""Ian Gregson""@en .
  FILTER(CONTAINS(LCASE(?ian), ""poet""))
  ?ian dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?apacheIndian rdfs:label ""Apache Indian""@en .
  ?apacheIndian dbo:work ?musicalWork .
  OPTIONAL { ?musicalWork dbo:composer ?writer . }
  FILTER NOT EXISTS { ?musicalWork dbo:composer ?writer } 
    MINUS { ?writer dbp:nativePlace ?birmingham . }
  ?birmingham rdfs:label ""Birmingham""@en .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?profession WHERE {
  ?kentAllard rdfs:label ""Kent Allard""@en .
  OPTIONAL { ?kentAllard dbo:alterEgo ?alterEgo . }
  OPTIONAL { ?alterEgo dbo:occupation ?profession . }
}
```",3,4,4,3,1,3,3,71,27559,556358,12081,0.04719677625415941,0.6952320887991927,0.08839288148477205
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?series WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:basedOn ?series .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?childLabel WHERE {
  ?alfonso rdfs:label ""Alfonso IV of Aragon""@en .
  ?alfonso dbo:child ?child .
  ?child rdfs:label ?childLabel .
  FILTER (LANG(?childLabel) = 'en')
}
```",2,3,3,2,1,3,2,20,0,6,3,0.0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"```sparql
# Query for the album ""What You Know"" by T.I. and its actors
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?actor WHERE {
  ?song rdfs:label ""What You Know""@en .
  ?song dbo:artist <http://dbpedia.org/resource/T.I._(rapper)> .
  ?song dbo:fromAlbum ?album .
  ?album dbo:actor ?actor .
}

# Query for the author of ""Smartbomb"" and related movies
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?film ?actor WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
  ?film dbo:writer ?author .
  ?film dbo:actor ?actor .
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Identify William I of Sicily and his royal children
  ?williamI rdfs:label ""William I of Sicily""@en .
  ?child dbo:parent ?williamI ;
         a dbo:Monarch .

  # Identify Roger III, Duke of Apulia and his parent(s)
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  ?parent dbo:child ?rogerIII .

  # Find the common child
  ?commonChild dbo:parent ?williamI ;
               dbo:parent ?parent .

  # Determine the father of this common child
  ?commonChild dbo:father ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandSpouse WHERE {
  ?duchess rdfs:label ""Duchess Luise of Brunswick-Wolfenbüttel""@en .
  ?duchess dbo:spouse ?spouse .
  ?spouse dbo:spouse ?grandSpouse .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Identify Shatrughan Sinha's profession
  ?sinha dbo:birthName ""Shatrughan Sinha""@en .
  ?sinha dbo:profession ?profession .

  # Step 2: Find a television show where he acted
  ?sinha dbo:film ?tvShow .
  ?tvShow rdf:type dbo:TelevisionSeries .

  # Step 3: Identify the actor with the same profession and birth name Richard Grant Esterhuysen
  ?actor dbo:birthName ""Richard Grant Esterhuysen""@en ;
         dbo:profession ?sameProfession ;
         dbo:film ?tvShow .
  
  FILTER(?profession = ?sameProfession)
}
```",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Robert""@en .
  ?person foaf:familyName ""Thompson""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician"") || CONTAINS(LCASE(?occupation), ""singer""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event ?militaryForce ?commander WHERE {
  VALUES ?label { ""Battle of Fort Royal""@en ""French campaign in Egypt and Syria""@en }
  
  ?event rdfs:label ?label .
  
  OPTIONAL { 
    ?event dbo:participatingMilitaryUnit ?militaryForce .
  }
  
  OPTIONAL {
    ?event dbo:commander ?commander .
  }
}
```",2,2,3,1,2,3,3,71,1,52,0,0.018867924528301886,1.0,0.037037037037037035
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find the actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:actor ?actor .

  # Find Eugène Cattin's profession
  ?eugeneCattin rdfs:label ""Eugène Cattin""@en .
  ?eugeneCattin dbo:profession ?profession .

  # Find parents of the professional in Eugène Cattin's profession
  ?professional dbo:profession ?profession .
  ?professional dbo:parent ?parent1 .

  # Find Doon Arbus and her parent(s)
  ?doonArbus rdfs:label ""Doon Arbus""@en .
  ?doonArbus dbo:parent ?parent2 .

  # Ensure the actor is a parent of both
  FILTER (?actor = ?parent1 || ?actor = ?parent2)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?michał rdfs:label ""Michał Kazimierz Pac""@en .
  ?event dbo:commander ?michał ;
         a dbo:MilitaryConflict ; # Assuming the event is a military conflict
         dbo:commander ?commander .

  ?commander a dbo:Politician ; # Ensuring the commander is a politician
             dbo:officeHolder ?office . # Ensuring they hold an office
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Step 1: Find the predecessor of Stephen V of Hungary
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:predecessor ?stephenV .

  # Step 2: Find the father and spouse of Philip I, Prince of Taranto
  ?philipI rdfs:label ""Philip I, Prince of Taranto""@en .
  ?father dbo:child ?philipI .
  ?spouse dbo:spouse ?father .

  # Step 3: Find the child of this spouse
  ?child dbo:child ?spouse .

  # Step 4: Find a royal descendant (grandchild) of that child
  ?grandchild dbo:child ?child ;
              rdf:type dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory WHERE {
  ?copenhagen rdfs:label ""Copenhagen""@en .
  ?copenhagen dbo:administrativeCenter ?territory .
}

SELECT ?ruledTerritory WHERE {
  ?olafI rdfs:label ""Olaf I of Denmark""@en .
  ?olafI dbo:ruledTerritory ?ruledTerritory .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
# Query for the tenant of Spain
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch WHERE {
  ?monarch dbo:country dbr:Spain .
  ?monarch a dbo:Monarch .
}

# Query for the tenant of Santiago de Compostela
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?archbishop WHERE {
  ?archbishop dbo:office dbr:Archbishopric_of_Santiago_de_Compostela .
  ?archbishop a dbo:Person .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?award dbo:date ""1925"" .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:associatedWithWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Identify Saw Min Phyu
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  
  # Find her spouse
  ?sawMinPhyu dbo:spouse ?spouse .

  # Find the child of the spouse
  ?spouse dbo:child ?child .

  # Check if the child is royalty and find predecessor
  ?child dbo:royalty ?isRoyalty .
  FILTER(?isRoyalty = true)
  ?child dbo:predecessor ?predecessor .

  # Identify Myat Hpone Pyo
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .

  # Find his father
  ?myatHponePyo dbo:father ?father .

  # Check if the father is royalty and find spouse
  ?father dbo:royalty ?isFatherRoyalty .
  FILTER(?isFatherRoyalty = true)
  ?father dbo:spouse ?spouseOfFather .

  # Ensure both predecessors are royalty (if needed, additional checks can be added here)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?eleonore rdfs:label ""Eleonore of Austria""@en .
  ?eleonore dbo:father ?father .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  # Find the author of ""The Live Anthology""
  ?work dbo:title ""The Live Anthology""@en .
  ?work dbo:author ?author .

  # Check if the author is a musical artist
  ?author rdf:type dbo:MusicalArtist .

  # Identify $pacely and find associated musical artists
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely dbo:associatedMusicalArtist ?associatedArtist .

  # Confirm Darryl Paa Kwesi Bannerman-Martin's identity
  ?darryl rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Find connections between the author, $pacely, and Darryl
  OPTIONAL { ?author dbo:associatedMusicalArtist ?darryl . }
  OPTIONAL { ?author dbo:associatedMusicalArtist ?associatedArtist . }

  # Ensure the professional is the same entity
  FILTER (?professional = ?author)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?myatHponePyo dbo:predecessor ?sawShweKhet .
  ?minHlaHtut dbo:parent ?pyakaungParent .
  ?royaltyChild dbo:childOf ?pyakaungParent ;
                dbo:predecessor ?myatHponePyo .
  ?father dbo:child ?royaltyChild .
  ?father dbo:spouse ?spouse .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nativePlace ?place .
  ?place rdfs:label ""New York""@en .
}
```",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:father ?father .
}

UNION

SELECT ?child WHERE {
  ?dawit rdfs:label ""Dawit I of Ethiopia""@en .
  ?dawit dbo:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria and his parent
  ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?charlesJoseph dbo:parent ?parent .

  # Step 2: Find the commander in the Thirty Years' War who is a child of Ferdinand II
  ?commander rdfs:label ?labelCommander ;
             dbo:childOf ?ferdinandII ;
             dbo:militaryConflict ?thirtyYearsWar .
  FILTER(CONTAINS(LCASE(?labelCommander), ""commander"") && CONTAINS(LCASE(?thirtyYearsWar), ""thirty years war"")) .

  # Step 3: Identify Ferdinand II
  ?ferdinandII rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .

  # Step 4: Find the child of this commander
  ?commander dbo:child ?childOfCommander .

  # Step 5: Determine the father of that child
  ?childOfCommander dbo:parent ?father .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?timeZone WHERE {
  ?mitaka rdfs:label ""Mitaka""@en .
  ?mitaka dbo:timeZone ?timeZone .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?birthEntity WHERE {
  ?person rdfs:label ""Little Hat Jones""@en .
  
  # Find institution in Georgia
  OPTIONAL {
    ?person dbo:almaMater ?institution .
    ?institution dbo:location ?location .
    ?location rdfs:label ?locationLabel .
    FILTER(CONTAINS(LCASE(?locationLabel), ""georgia"") && CONTAINS(LCASE(?locationLabel), ""united states""))
  }
  
  # Find entity in birth place if it's a country
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
    ?birthEntity dbo:locatedIn ?birthPlace .
  }
}
```",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .

  ?arthur dbo:father ?father .
  ?edward dbo:father ?father .
  ?victor dbo:father ?father .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  ?sergio rdfs:label ""Sergio Agüero""@en .
  ?sergio dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?jst rdfs:label ""Japan Standard Time""@en .
  ?country dbo:timeZone ?jst ;
           dbo:countryName ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battle ?combatant WHERE {
  VALUES ?battleLabel { ""Battle of Cape Finisterre (1805)"" ""Battle of Fort Royal"" }
  
  ?battle rdfs:label ?battleLabel .
  ?battle dbo:combatant ?combatant .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Paradise (2013 film)""@en .
  ?film dbo:starring ?actor .
}

UNION

SELECT ?spouse WHERE {
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?birthPlace WHERE {
  ?ethan rdfs:label ""Ethan Iverson""@en .
  ?ethan dbo:work ?work .
  ?work rdf:type ?type1 .
  ?work rdf:type ?type2 .
  FILTER (?type1 = dbo:MusicalArtist || ?type1 = dbo:Artist) 
  FILTER (?type2 = dbo:MusicalArtist || ?type2 = dbo:Artist)
  ?work dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceEntity WHERE {
  ?yamaza rdfs:label ""Yamaza Enjirō""@en .
  ?yamaza dbo:birthPlace ?birthPlace .
  OPTIONAL { ?birthPlace a ?birthPlaceEntity . }
}
```",2,2,3,2,1,2,3,28,0,20,104,0.0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?parent dbo:parent ?minHlaHtut .
  
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?predecessor dbo:predecessor ?myatHponePyo .

  ?child dbo:parent ?parent .
  ?child ?p ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?party dbo:government ?administration .
  ?administration dbo:country dbr:Spain .
}
```",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  
  # Step 2: Find his children who are royalty
  ?child dbo:father ?francis ;
         a dbo:Monarch ; # Assuming the child is a monarch (royalty)
         
  # Step 3: Identify the father of this royal child
  OPTIONAL { ?child dbo:father ?otherFather } .
  
  # Step 4: Find the parent(s) of this father
  OPTIONAL {
    ?parent dbo:child ?francis ;
            dbo:child ?otherFather .
  }
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Query to find the native country of Helmut Kohl
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?helmut rdfs:label ""Helmut Kohl""@en .
  ?helmut dbo:nationality ?country .
}

# Query to find the native country of the manager of SBV Vitesse for the 2020–21 season
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?vitesse dbo:manager ?manager .
  ?vitesse dbo:sportTeam ""SBV Vitesse""@en .
  FILTER (YEAR(?startDate) = 2020 && YEAR(?endDate) >= 2021)
}

SELECT ?country WHERE {
  ?manager rdfs:label ?name .
  ?manager dbo:nationality ?country .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""bill clinton""))
  
  OPTIONAL { ?spouse dbo:author ?work . }
  FILTER EXISTS { ?spouse dbo:author ?work }
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardNativeRegion WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:birthName ?birthName .

  # Step 2: Identify the band associated with Bobby Shmurda in New York (state)
  ?band dbo:member ?bobby ;
        dbp:location ?location .
  FILTER(CONTAINS(LCASE(?location), ""new york""))

  # Step 3: Find an award related to this band
  ?award dbo:recipient ?band .

  # Step 4: Determine the native region of the award
  ?awardNativeRegion dbo:nativeOf ?award ;
                    a dbo:Settlement, dbo:State .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Identify Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  
  # Step 2: Find his child
  ?philippAlbrecht dbo:child ?child1 .

  # Step 3: Find the grandchild (child of the child)
  ?child1 dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""royalty"") || CONTAINS(LCASE(?label), ""duke"") || CONTAINS(LCASE(?label), ""prince""))

  # Step 4: Find predecessor of this royal grandchild
  ?grandchild dbo:predecessor ?predecessor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?person rdfs:label ""Richard Grant Esterhuysen""@en .
  ?person dbo:birthName ""Richard Grant Esterhuysen"" .
  ?person foaf:name ""The Shadow""@en .
  ?film dbo:starring ?person ;
        a dbo:Film ;
        dbo:genre ?genre .

  # Check if the film is also categorized as a TV series
  OPTIONAL { ?tvSeries dbo:starring ?person ;
                   a dbo:TelevisionShow ;
                   rdfs:label ?title . }

  # Find other actors in the same work
  ?film dbo:starring ?actor .
  FILTER(?actor != ?person)
}
```",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?davydov rdfs:label ""Alexander Lvovich Davydov""@en .
  ?davydov dbo:militaryConflict ?war .
}

SELECT ?person ?war WHERE {
  ?order dbo:number ""25"" .
  ?order dbo:recipient ?person .
  ?person dbo:militaryConflict ?war .
}

SELECT ?entity ?war WHERE {
  ?entity dbo:nationality dbr:Russian_Empire .
  ?entity dbo:militaryConflict ?war .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?linda rdfs:label ""Linda Bruckheimer""@en .
  ?linda dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?almaMater WHERE {
  ?person rdfs:label ""Eleonora Menicucci de Oliveira""@en .
  ?person dbo:birthday ?birthday .
  FILTER (STR(?birthday) = ""1955-12-02""^^xsd:date)
  ?person dbo:almaMater ?almaMater .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?conflict ?office WHERE {
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  ?manuel dbo:participatedIn ?conflict .
  ?conflict a dbo:MilitaryConflict .
  ?manuel dbo:officeHolder ?office .
  ?office a dbo:Office .
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?charlesJoseph dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  
  # Author of 'El Deafo'
  ?author dbo:nationality dbr:United_States ;
          dbo:work ?elDeafo .
  ?elDeafo rdfs:label ""El Deafo""@en .
  ?author dbo:birthPlace ?authorBirthPlace .

  # Governor of Virginia
  ?governor dbo:governmentRole dbr:Governor_of_Virginia ;
            dbo:birthPlace ?governorBirthPlace .

  # Vince Gilligan
  ?vinceGilligan rdfs:label ""Vince Gilligan""@en .
  ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?album WHERE {
  ?artist rdfs:label ""T.I.""@en .
  ?song dbo:artist ?artist ;
        a dbo:Songs .
  ?song dbo:album ?album .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  ?ian rdfs:label ""Ian Gregson""@en .
  ?ian dbo:award ?award .
  ?award dbo:recipient ?movie .
  ?movie dbo:producer ?producer .
}
```",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  VALUES ?name { ""Nick Curran""@en ""Kim Wilson""@en }
  
  ?person rdfs:label ?name .
  
  OPTIONAL {
    ?person dbo:associatedBand ?band .
  }
}
```",3,4,4,2,2,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .

  ?person dbo:occupation ?occupation1 .
  ?occupation1 rdfs:label ?label1 .
  
  FILTER (CONTAINS(LCASE(?label1), ""musician"") || CONTAINS(LCASE(?label1), ""artist""))

  OPTIONAL {
    ?person dbp:alias ?alias .
  }
  FILTER (!bound(?alias)) # Ensures no alias is present, implying birth name is native
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1981 && MONTH(?date) = 12 && DAY(?date) = 1)
  
  OPTIONAL { ?person dbo:sport dbr:Soccer . }
  OPTIONAL { ?person dbo:occupation dbr:Athlete . }
  OPTIONAL { ?person dbo:occupation dbr:Soccer_player . }
  OPTIONAL { ?person dbo:occupation dbr:Sports_manager . }
  OPTIONAL { ?person dbo:occupation dbr:Soccer_manager . }

  # Assuming Lai Sun Cheung is a club or entity, we check for association
  OPTIONAL { ?person dbo:memberOf dbr:Lai_Sun_Cheung . } 

  FILTER (
    EXISTS { ?person dbo:sport dbr:Soccer }
    && EXISTS { ?person dbo:occupation dbr:Athlete }
    && EXISTS { ?person dbo:occupation dbr:Soccer_player }
    && EXISTS { ?person dbo:occupation dbr:Sports_manager }
    && EXISTS { ?person dbo:occupation dbr:Soccer_manager }
  )
}
```",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?father ?reference ?finalChild WHERE {
  # Step 1: Find a child of Roger II who is royalty
  ?roger2 dbo:child ?child .
  ?child dbo:royaltyStatus ?royalty .

  # Step 2: Find the father of this child, ensuring he is royalty and an office holder
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
  ?father dbo:royaltyStatus ?royaltyFather .
  ?father dbo:officeHolder ?office .

  # Step 3: Identify a reference related to William I who is royalty and an office holder
  ?william1 dbo:spouseOrChild ?reference .
  ?reference dbo:royaltyStatus ?royaltyRef .
  ?reference dbo:officeHolder ?officeRef .

  # Step 4: Find the child of this reference whose parent is a child of Alfonso VI
  ?parentOfFinalChild dbo:child ?finalChild .
  ?alfonso6 dbo:child ?parentOfFinalChild .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild ?father WHERE {
  ?william rdfs:label ""William I of Sicily""@en .
  ?william dbo:child ?child .
  
  # Assuming royal children have a title or role indicating royalty
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (STR(?deathDate) = ""2020-06-18""^^xsd:date)
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""The Campus Queen""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,6,0,1,1.0,0.8571428571428571,0.923076923076923
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?alterEgo WHERE {
  # Finding the child of Dawit I
  ?dawitI rdfs:label ""Dawit I""@en .
  ?dawitI dbo:child ?child .

  # Finding the alter ego of The Shadow
  ?shadow rdfs:label ""The Shadow""@en .
  OPTIONAL {
    ?shadow dbo:wikiPageRedirects ?alterEgo .
  }
}
```",3,3,4,2,2,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?jamshedpur .
  ?jamshedpur rdfs:label ""Jamshedpur""@en .
}
```",1,1,2,1,1,2,2,9,68,0,0,1.0,1.0,1.0
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?owner WHERE {
  ?arcadia rdfs:label ""USS Arcadia (ID-1605)""@en .
  OPTIONAL { ?arcadia dbo:owner ?owner . }
  OPTIONAL { ?arcadia dbo:operator ?owner . } # In case owner is not directly available
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?eleonore rdfs:label ""Eleonore of Austria""@en .
  ?eleonore dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:commander ?commander1 .

  # Find the commander of the Battle of Fort Royal
  ?battle1 rdfs:label ""Battle of Fort Royal""@en .
  ?battle1 dbo:commander ?commander2 .

  # Find the commander of the Battle of Cape Finisterre (1805)
  ?battle2 rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle2 dbo:commander ?commander3 .

  # Ensure the same person is the commander in both battles
  FILTER (?commander1 = ?commander2 && ?commander2 = ?commander3)
  
  BIND(?commander1 AS ?commander) 
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?work rdfs:label ""The First Glove""@en .
  ?work dbo:author ?author .
}

SELECT ?entity WHERE {
  ?entity rdfs:label ""Наши парни""@ru .
  UNION
  ?entity rdfs:label ""Nashi parni""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
# Query for Child of Saw Min Hla
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?sawMinHla dbo:child ?child .
}

# Query for Spouse of Saw Shwe Khet
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild ?father WHERE {
  # Step 1: Find Alfonso VI and his child
  ?alfonso rdfs:label ""Alfonso VI of León""@en .
  ?alfonso dbo:child ?child .

  # Step 2: From the child, find a grandchild
  ?child dbo:child ?grandchild .

  # Step 3: Find William I of Sicily and his children who are royalty
  ?william rdfs:label ""William I of Sicily""@en .
  ?william dbo:child ?royalChild .
  
  # Filter for royal titles (e.g., king, queen)
  ?royalChild dbo:title ?title .
  FILTER (
    str(?title) = ""King"" || 
    str(?title) = ""Queen""
  )

  # Step 4: Find the father of this royal child
  ?royalChild dbo:father ?father .

  # Check for commonality between grandchild and father
  FILTER (?grandchild = ?father)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Step 1: Find Paulus Powell's birth place
SELECT ?birthPlace WHERE {
  ?paulus dbo:birthPlace ?birthPlace .
  ?paulus rdfs:label ""Paulus Powell""@en .
}

# Step 2: Find the governor of that region
SELECT ?governor WHERE {
  ?region dbo:governmentHead ?governor .
  ?region rdfs:label ?birthPlaceLabel .
  FILTER(?birthPlaceLabel IN (VALUES))
}

# Step 3: Find Vince Gilligan's award
SELECT ?award WHERE {
  ?vince dbo:award ?award .
  ?vince rdfs:label ""Vince Gilligan""@en .
}

# Step 4: Find the birth place of the awardee
SELECT ?awardeeBirthPlace WHERE {
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
  FILTER(?award IN (VALUES))
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace ?switzerland .
  FILTER (strstarts(str(?switzerland), ""http://dbpedia.org/resource/Switzerland""))
  
  ?person dbo:birthPlace ?finland .
  FILTER (strstarts(str(?finland), ""http://dbpedia.org/resource/Grand_Duchy_of_Finland""))

  ?person dbo:birthPlace ?russia .
  FILTER (strstarts(str(?russia), ""http://dbpedia.org/resource/Russia""))
}
```",4,5,5,2,3,2,3,28,1,0,0,1.0,1.0,1.0
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member WHERE {
  ?david rdfs:label ""David Paton""@en .
  ?david dbo:musicalArtist ?band .
  ?band dbo:bandMember ?member .
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer ?bandMember WHERE {
  ?band rdfs:label ""Nothing to Gein""@en .
  ?band dbo:producer ?producer .

  FILTER (
    { ?producer a dbo:Organization } ||
    { ?producer a dbo:Band }
  )

  ?producer dbo:bandMember ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?shatrughan rdfs:label ""Shatrughan Sinha""@en .
  ?shatrughan dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  ?westport rdfs:label ""Westport, Connecticut""@en .
  
  # Assuming there's a property that links Westport to its ruling party
  ?westport dbo:rulingParty ?rulingParty .
  
  # Ensure the ruling party is classified as a political party and an organization
  ?rulingParty rdf:type dbo:PoliticalParty ;
               rdf:type dbo:Organization .

  # Find members of this ruling party
  ?partyMember dbo:memberOf ?rulingParty .
}
```",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?person WHERE {
  # Find Harriette Arlene Lake
  ?harriette rdfs:label ""Harriette Arlene Lake""@en .
  
  # Determine her political affiliation
  ?harriette dbo:partyMember ?party .

  # Identify the landmark at the specified elevation
  ?landmark geo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)

  # Find Roger Pryor (actor) and his spouse
  ?roger rdfs:label ""Roger Pryor""@en ;
         dbo:spouse ?spouse .

  # Ensure the person is both Harriette Arlene Lake and Roger Pryor's spouse
  FILTER(?harriette = ?spouse)
  
  # Return the person who fits all criteria
  BIND(?harriette AS ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?calder rdfs:label ""Robert Calder""@en .
  ?event dbo:commander ?calder ;
         a dbo:MilitaryConflict ;
         dbo:participatingUnit ?unit .
  
  ?unit rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  
  ?event dbo:militaryForce ?militaryForce .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?character ?alterEgo WHERE {
  ?character dbo:creator ?gibson .
  ?gibson rdfs:label ""Walter B. Gibson""@en .
  ?character rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""the shadow"") || CONTAINS(LCASE(?name), ""lamont cranston""))
  
  OPTIONAL {
    ?character dbo:alias ?alterEgo .
    FILTER(CONTAINS(LCASE(STR(?alterEgo)), ""singer""))
  }
}
```",4,6,5,3,2,3,3,71,0,1,5422,0.0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?tomPhillips rdfs:label ""Tom Phillips (Royal Navy officer)""@en .
  ?tomPhillips dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Commander in Third Taiwan Strait Crisis
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects ?redirect .
  FILTER(CONTAINS(LCASE(str(?redirect)), ""third taiwan strait crisis""))
  ?event dbo:agent ?commander .
}

# Author of a Work by a Resident of Chappaqua, New York
SELECT ?author ?work WHERE {
  ?person dbo:residenceLocation ?location .
  ?location rdfs:label ""Chappaqua, New York""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""office holder""))
  ?author dbo:authored ?work .
  ?author owl:sameAs ?person .
}

# Spouse of the Author Connected to ""An Invitation to the White House""
SELECT ?spouse WHERE {
  ?author dbo:authored ?work .
  ?work rdfs:label ""An Invitation to the White House""@en .
  ?author dbo:spouse ?spouse .
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician"") || CONTAINS(LCASE(str(?occupation)), ""office holder""))
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war rdf:type dbo:MilitaryConflict .
  ?war dbo:name ""French Revolutionary Wars""@en .
  ?commander dbo:participatedIn ?war ;
             (dbo:rank|rdfs:label) ?title .
  FILTER(CONTAINS(LCASE(?title), ""general"") || CONTAINS(LCASE(?title), ""commander""))
}
```",1,1,2,1,1,3,2,20,0,0,58,0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  # Part 1: War of the awardee with a 25th award (assuming Order of St. George)
  ?person dbo:award ?order .
  FILTER regex(str(?order), ""Order of Saint George"", ""i"") .
  ?person dbo:participatedIn ?war .

  UNION

  # Part 2: War associated with Alexander Lvovich Davydov
  ?davydov rdfs:label ""Alexander Lvovich Davydov""@en .
  ?davydov dbo:participatedIn ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?birthplace WHERE {
  VALUES (?name) { ""Ebrahim Alkazi""@en ""Smita Patil""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:birthPlace ?birthplace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenantSantiago ?tenantSpain ?officeLeaderGalicia WHERE {
  # Tenant of Santiago de Compostela (assuming Archbishop)
  ?santiago rdfs:label ""Santiago de Compostela""@en .
  ?santiago dbo:archbishop ?tenantSantiago .

  # Tenant of Spain (Monarch)
  ?spain rdfs:label ""Spain""@en .
  ?spain dbo:monarch ?tenantSpain .

  # Office of the Leader of 2009 Galician Regional Election
  ?election rdfs:label ""Galicia regional election, 2009""@en .
  ?election dbo:electedAs ?officeLeaderGalicia .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force ?commander WHERE {
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryForce ?force .
  ?force dbo:commander ?commander .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  # Find Marty Pollio's birth date
  ?marty a dbo:Person ;
         dbp:birthday ?martyBirthday .

  # Find athlete born on Marty Pollio's birthday
  ?athlete a dbo:Athlete ;
           dbp:birthday ?martyBirthday .

  # Find soccer player and manager born on 1979-11-03
  ?soccerPlayerManager a dbo:Person ;
                       dbp:birthday ""1979-11-03""^^xsd:date ;
                       dbo:occupation ?playerRole1, ?managerRole .
  FILTER (EXISTS { ?playerRole1 rdf:type dbo:SoccerPlayer } &&
          EXISTS { ?managerRole rdf:type dbo:SoccerManager })

  # Find teams for the soccer player and manager
  ?soccerPlayerManager dbo:team ?team .

  # Find teams for Sergio Agüero
  ?sergioAgüero a dbo:Person ;
                dbp:birthday ""1988-06-02""^^xsd:date ;
                dbo:team ?agüeroTeam .
  
  # Ensure the team is common among all conditions
  FILTER (?team = ?agüeroTeam)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battleForce ?commander ?event ?militaryForce WHERE {
  # Battle of Fort Royal
  ?battle rdfs:label ""Battle of Fort Royal""@en .
  ?battle dbo:participatingMilitaryUnit ?battleForce .

  # Commander in French campaign in Egypt and Syria
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?campaign dbo:commander ?commander .

  # Awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:recipientOfAward ?award .
  ?award rdfs:label ""Knight Commander of the Order of the Bath""@en .
  
  # Event that is societal and involves military force
  ?event dbo:eventType ?eventType ;
         dbo:participant ?awardee ;
         dbo:militaryUnit ?militaryForce .

  FILTER(?eventType IN (dbo:SocietalEvent, dbo:MilitaryEvent))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdfs:label ""Roy Barreras""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee ?force WHERE {
  ?awardee dbo:award ?cbe .
  ?cbe rdfs:label ""Commander of the Order of the British Empire""@en .

  OPTIONAL { ?awardee dbo:militaryUnit ?force . }
  OPTIONAL { ?awardee dbo:employer ?force . }
}
```",2,2,3,2,1,3,2,20,3,1111,159,0.0026929982046678637,0.018518518518518517,0.004702194357366771
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?team WHERE {
  # Step 1: Find actors in ""All or Nothing: Manchester City""
  ?show rdfs:label ""All or Nothing: Manchester City""@en .
  ?show dbo:castMember ?actor .
  
  # Step 2: Filter actors who are also soccer players and athletes
  ?actor dbo:occupation ?occupation1 .
  FILTER (?occupation1 IN (dbo:SoccerPlayer, dbo:Athlete))
  
  # Step 3: Identify person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date .
  ?person dbo:occupation ?occupation2 .
  FILTER (?occupation2 IN (dbo:SoccerPlayer, dbo:SoccerManager))
  
  # Step 4: Find the team of this person
  ?person dbo:team ?team .
  
  # Step 5: Ensure the actor is part of this team
  ?actor dbo:memberOfTeam ?team .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?group WHERE {
  ?film rdfs:label ""Burnt by the Sun""@en .
  { ?film dbo:cast ?group . }
  UNION
  { ?film dbo:director ?group . }
}
```",1,2,2,1,1,3,2,20,0,1,1,0.0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:manager ?team .
}",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?singerRole ?bandRole WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  
  OPTIONAL { 
    ?bob dbo:singer ?singerRole .
  }
  
  OPTIONAL { 
    ?bob dbo:bandMember ?bandRole .
  }
}
```",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:birthName ?birthName .

  # Find associated bands
  ?bobby dbo:associatedBand ?band .

  # Find band members who are also musical artists
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:MusicalArtist .

  FILTER(?member != ?bobby) # Ensure it's not Bobby Shmurda himself
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book a dbo:Book ;
        dbo:author ?author .
  
  FILTER (
    EXISTS { ?book rdfs:label ""My Life""@en } ||
    EXISTS { ?book rdfs:label ""Back to Work""@en }
  )
  
  OPTIONAL { ?bill dbo:presidencyOf dbr:Bill_Clinton_Presidency . }
  OPTIONAL { ?bill dbo:serviceInMilitaryBranch dbr:United_States_Navy . }
  OPTIONAL {
    ?bill dbo:spouse dbr:Hillary_Clinton .
    ?arcadia dbo:owner dbr:United_States_Navy ;
             rdfs:label ""USS Arcadia (ID-1605)""@en .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?description WHERE {
  ?zervas rdfs:label ""Napoleon Zervas""@en .
  OPTIONAL { ?zervas dbo:placeOfBirth ?birthPlace . FILTER (CONTAINS(LCASE(str(?birthPlace)), ""athens"")) }
  OPTIONAL { ?zervas dbo:memberOf|dbo:participatedIn ?warEntity . 
             ?warEntity rdfs:label ?description . 
             FILTER(CONTAINS(LCASE(STR(?description)), ""resistance"") || CONTAINS(LCASE(STR(?description)), ""world war ii"")) }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?zervas rdfs:label ""Napoleon Zervas""@en .
  ?zervas dbo:militaryConflict ?war .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?parent .
  OPTIONAL { ?parent dbo:officeHolder ?office . }
  FILTER EXISTS { ?parent dbo:officeHolder ?office } 
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Find band members of Uncle Murda
  ?uncleMurda rdfs:label ""Uncle Murda""@en .
  ?uncleMurda dbo:bandMember ?bandMember .

  # Find person born as Bobby Shmurda
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  FILTER EXISTS { ?bobbyShmurda dbo:birthName ""Bobby Shmurda"" }

  # Check if any band member is the same as Bobby Shmurda
  FILTER (?bandMember = ?bobbyShmurda)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producerTomSawyer ?producerClaimToFame WHERE {
  # Find the producer(s) of ""The Adventures of Tom Sawyer (1938 film)""
  ?film rdfs:label ""The Adventures of Tom Sawyer""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/Adventures_of_Tom_Sawyer_(1938_film)>)))
  ?film dbo:producer ?producerTomSawyer .

  # Find the actor from ""High Society Blues""
  ?highSocietyBlues rdfs:label ""High Society Blues""@en .
  ?highSocietyBlues dbo:actor ?actor .

  # Determine a notable work (claim to fame) of this actor
  ?notableWork dbo:starring ?actor .
  ?notableWork rdfs:label ?fameLabel .

  # Find the producer(s) of this notable work
  ?notableWork dbo:producer ?producerClaimToFame .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?host WHERE {
  ?nobelEvent dbo:eventLocation ?location .
  ?location rdfs:label ""Stockholm Concert Hall""@en .
  OPTIONAL { ?location dbo:educationalInstitution ?institution . }
}

SELECT ?awardee ?award WHERE {
  ?nobelEvent dbo:eventName ""Nobel Prize in Physics""@en .
  ?nobelEvent dbo:recipient ?awardee .
  ?awardee dbo:honorificTitle ?title .
  FILTER(?title = ""Nobel laureate"")
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?force WHERE {
  # Step 1: Identify Quincy Adams Gillmore and the award he received
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:award ?award .

  # Step 2: Find other awardees of that same award
  ?otherAwardee dbo:award ?award .

  # Step 3: Identify an entity related to Charleston, South Carolina
  ?charlestonEntity rdfs:label ?charlestonLabel .
  FILTER(CONTAINS(LCASE(?charlestonLabel), ""charleston south carolina""))

  # Step 4: Determine the force associated with this entity
  ?otherAwardee dbo:member ?force .
  ?force dbp:location ?charlestonEntity .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Vienna (1683)""@en .
  
  OPTIONAL { 
    ?commander dbo:succeededBy ?successor .
    ?successor rdfs:label ""Ivan Vyhovsky""@en .
  }
  
  OPTIONAL {
    ?commander dbo:reference ?reference .
    ?reference rdfs:label ""Paul Westerberg""@en .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
# Query 1: Ann Sothern's Birth Name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?birthName .
}

# Query 2: Ruling Party in Central, Louisiana
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?central rdfs:label ""Central, Louisiana""@en .
  ?mayor dbo:positionTitle ""Mayor""@en ;
         dbo:officeHolderOf ?central ;
         dbp:politicalParty ?party .
}

# Query 3: Actor of ""1,000 Dollars a Minute"" and Their Spouse
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?spouse WHERE {
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:spouse ?spouse .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?roger rdfs:label ""Roger III, Duke of Apulia""@en .
  ?roger dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?realName WHERE {
  { 
    ?nickCurran rdfs:label ""Nick Curran""@en .
    ?nickCurran dbo:associatedBand ?associatedArtist .
  }
  UNION
  {
    ?band rdfs:label ""The Fabulous Thunderbirds""@en .
    ?band dbo:member ?member .
    ?member foaf:name ?realName .
  }
}",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify GS9
  ?gs9 rdfs:label ""GS9""@en .
  
  # Step 2: Find members of GS9 who are both artists and musicians
  ?member dbo:member ?gs9 ;
          a dbo:MusicalArtist ;
          a dbo:Artist .

  # Step 3: For these members, find any associated musical artist
  ?associatedArtist dbo:associatedBandMember ?member .
  
  # Step 4: Check if the associated artist has a band and identify its members
  ?bandMember dbo:associatedBandMember ?associatedArtist .

  # Step 5: Verify if any of these individuals were born in Florida and retrieve their birth name
  ?person dbp:birthPlace ?place .
  ?place rdfs:label ""Florida""@en .
  
  FILTER(?member = ?person || ?bandMember = ?person)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?bandLabel WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1945 && MONTH(?date) = 3 && DAY(?date) = 30)
  ?person a dbo:MusicalArtist .
  ?person dbo:bandMember ?band .
  ?band rdfs:label ?bandLabel .
}
```",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?team rdfs:label ""Russia national football team""@en .
  ?team dbo:nickname ?nickname .
  FILTER(CONTAINS(LCASE(STR(?nickname)), ""white-blues""))
  
  ?team dbo:player ?player .

  OPTIONAL {
    ?player dbo:coach ?filimonov .
    ?filimonov rdfs:label ""Aleksandr Filimonov""@en .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?bob rdfs:label ""Bob Thompson""@en .
  FILTER EXISTS { ?bob dbo:musicArtist . }
  ?bob dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?shadowProfession ?bouralyProfession WHERE {
  # Find the profession of The Shadow
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?shadowProfession .

  # Find the profession of Frédéric Bouraly
  ?bouraly rdfs:label ""Frédéric Bouraly""@en .
  ?bouraly dbo:profession ?bouralyProfession .
}
```",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?kim rdfs:label ""Kim Wilson""@en .
  ?kim dbo:memberOfBand ?band .
}
```",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?award rdfs:label ""25th Annual Grammy Awards""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Duke|Duchess"", ""i"") }
}
```",1,2,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query for the producer of The Adventures of Tom Sawyer (1938 film)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?film rdfs:label ""The Adventures of Tom Sawyer""@en .
  FILTER(STRSTARTS(STR(?film), STR(""http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)"")))
  ?film dbo:producer ?producer .
}

# Query for the professional identity of Kent Allard
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realIdentity WHERE {
  ?entity rdfs:label ""Kent Allard""@en .
  OPTIONAL { ?entity foaf:name ?realName . }
  FILTER(?realName != ""Kent Allard"")
  ?entity dbo:alias ?realIdentity .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?person dbo:deathPlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""los angeles""))
  
  ?person dbo:work ?work .
  ?work rdf:type dbo:Film .

  ?work dbo:actor ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?michał rdf:type dbo:Commander .
  ?michał rdfs:label ""Michał Kazimierz Pac""@en .

  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:commander ?michał .

  ?successor dbo:succeededBy ?michał ;
             rdf:type dbo:Politician, dbo:OfficeHolder .

  OPTIONAL {
    ?rakoff rdfs:label ""David Rakoff""@en .
    ?reference dbo:author ?rakoff .
    ?reference dbo:subject ?successor .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Dawid Olejniczak's residence
  ?dawid dbo:residence ?residence .
  
  # Alexander Suvorov's war participation
  ?suvorov dbp:participatedInWar ?war .

  # Linking residence to a country
  ?residence dbo:country ?country .

  # Linking war to a country
  ?war dbo:location ?location .
  ?location dbo:country ?country .
  
  FILTER (str(?dawid) = ""Dawid_Olejniczak"" && str(?suvorov) = ""Alexander_Suvorov"")
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""Hartlepool United F.C.""@en .
  ?team dbo:manager ?manager .
  ?manager dbo:nativePlace ?place .
  FILTER (langMatches(lang(?place), ""en"") && contains(lcase(str(?place)), ""bristol""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?pacely rdfs:label ""Pacely""@en .
  ?pacely (dbo:associatedBand|dbo:memberOf) ?band .
  ?band dbo:member ?associatedArtist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find Charles Martel of Anjou's parent
  ?charles rdfs:label ""Charles Martel of Anjou""@en .
  ?charles dbo:parent ?parent .

  # Step 2: Find Philip I, Prince of Taranto's father and his spouse
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philip dbo:father ?father .
  ?father dbo:spouse ?spouse .

  # Step 3: Identify Stephen V of Hungary's predecessor
  ?stephen rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:successor ?stephen .

  # Step 4: Find the child of the predecessor and their child
  ?child1 dbo:parent ?predecessor .
  ?child2 dbo:parent ?child1 .

  # Ensure all are royalty
  FILTER EXISTS { ?charles dbo:royalTitle ?title }
  FILTER EXISTS { ?philip dbo:royalTitle ?title }
  FILTER EXISTS { ?stephen dbo:royalTitle ?title }
  FILTER EXISTS { ?",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the war associated with an award by the United States Congress
SELECT ?award ?war WHERE {
  ?award dbo:awardedBy dbr:United_States_Congress .
  ?award dbo:associatedWith ?war .
}

# Step 2: Find the awardee of the Gillmore Medal and their military force
SELECT ?recipient ?force WHERE {
  ?gillmoreMedal dbo:recipient ?recipient .
  ?recipient dbo:militaryForce ?force .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?host WHERE {
  ?nobelPrize rdfs:label ""Nobel Prize in Physics""@en .
  ?nobelPrize dbo:awardedBy ?host .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild WHERE {
  ?ferdinand rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en .
  
  # Find children of Ferdinand
  ?child dbo:parent ?ferdinand .

  # Identify the parent of this child and check if they are royalty
  ?parent dbo:child ?child .
  ?parent dbo:royalTitle ?title .

  # Get the child of this royal parent
  ?royalChild dbo:parent ?parent .
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:bandMemberOf ?band .
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?plotkin rdfs:label ""James Plotkin""@en .
  ?plotkin dbo:associatedBand ?band ;
           dbo:memberOfBand ?band .
  ?band dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?deathPlace WHERE {
  # Step 1: Identify Antonios Varthalitis and his death place
  ?antonios rdfs:label ""Antonios Varthalitis""@en .
  ?antonios dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 2: Identify an awardee related to war with award number 30
  ?warAwardee dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  
  FILTER(CONTAINS(LCASE(?awardLabel), ""30""))

  # Find common entity between death place and the awardee's context
  OPTIONAL { ?deathPlace rdfs:seeAlso ?commonEntity . }
  OPTIONAL { ?warAwardee rdfs:seeAlso ?commonEntity . }

  FILTER EXISTS { ?commonEntity . } 
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?spouse WHERE {
  { 
    ?roger rdfs:label ""Roger Pryor (actor)""@en .
    ?roger dbo:spouse ?spouse .
    BIND(?roger AS ?person)
  }
  UNION
  {
    ?ann dbo:birthName ?birthName ;
         dbo:partyAffiliation <http://dbpedia.org/resource/Republican_Party_(United_States)> .
    ?ann rdfs:label ""Ann Sothern""@en .
    ?ann dbo:spouse ?spouse .
    BIND(?ann AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Identify Paulus Powell
  ?paulus rdfs:label ""Paulus Powell""@en .
  
  # Step 2: Find his birth place
  ?paulus dbo:birthPlace ?birthPlace .

  # Step 3: Ensure the birth place is a region and administrative region
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:AdministrativeRegion .

  # Step 4: Identify the governor of this location
  ?governor dbo:officeHolderOf ?birthPlace .
  
  # Filter to ensure the governor is a politician
  ?governor rdf:type dbo:Politician .

  # Step 5: Get the birth place of the identified governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?profession ?person WHERE {
  # Step 1: Find Rod Argent's profession
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:occupation ?profession .

  # Step 2: Identify Darryl Paa Kwesi Bannerman-Martin (Stormzy)
  ?stormzy rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Find associated musical artists of Stormzy
  OPTIONAL { 
    ?stormzy dbo:associatedMusicalArtist ?artist1 .
  }

  # Step 3: Identify $pacely's birth name and related musical artist(s)
  ?tupac rdfs:label ""Tupac Shakur""@en .
  ?tupac foaf:name ?birthName .
  
  OPTIONAL {
    ?tupac dbo:associatedMusicalArtist ?artist2 .
  }

  # Step 4: Find a professional in the same profession as Rod Argent
  OPTIONAL {
    ?person rdfs:label ?label .
    ?person dbo:occupation ?profession .
    FILTER(?person != ?rodArgent && (?person = ?stormzy || ?person = ?tupac))
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?movie dbo:country dbr:India .
  ?movie dbo:starring ?actor .
  ?movie dbo:starring dbr:Dipankar_De .
  ?actor dbo:birthPlace ?birthPlace .
}
```",3,5,4,3,1,3,2,20,13,13,0,0.5,1.0,0.6666666666666666
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?albrecht dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingDate WHERE {
  ?university rdfs:label ""Federal University of Paraíba""@en .
  ?university dbo:foundingDate ?foundingDate .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))
  ?person foaf:name ?birthName .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Vienna (1683)""@en .
  ?battle dbo:participatedInMilitaryForce ?force .
  ?force dbo:leader ?commander .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:predecessor ?stephenV .
  ?predecessor dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?war ?entity WHERE {
  # Find Toyotomi Hideyoshi's children
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  ?hideyoshi dbo:child ?child .

  # Determine the war the child was involved in
  ?child dbo:participatedIn ?war .

  # Find Yamaza Enjirō's birthplace
  ?enji rdfs:label ""Yamaza Enjirō""@en .
  ?enji dbo:birthPlace ?birthPlace .

  # Find an entity associated with the birthplace
  ?entity dbo:location ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
# This query is more conceptual and does not directly map to DBpedia as it involves specific media knowledge.
# However, we can outline a hypothetical SPARQL query structure if such data were available in DBpedia.

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgoProfession WHERE {
  # Hypothetical resource for The Shadow video game character
  ?shadowCharacter rdfs:label ""The Shadow (video game)""@en .
  ?shadowCharacter dbo:profession ?alterEgoProfession .

  # Hypothetical resource for Ab Kya Hoga actor who is a politician
  ?actor rdfs:label ""Ravi Dubey""@en .
  ?actor dbo:profession ?actorProfession .
  
  FILTER(?actorProfession = dbo:Politician)
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?commander rdfs:label ""Jan II Kazimierz Waza""@en .
  ?commander dbo:succeededBy ?successor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:officeHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?pickett rdfs:label ""George Pickett""@en .
  ?pickett dbo:participatedIn ?war .
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?william rdfs:label ""William II of Sicily""@en .

  ?roger dbo:child ?child .
  ?child dbo:parent ?william .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?baedaMaryamI dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?baedaMaryamI dbo:father ?father .
  
  OPTIONAL {
    ?dawitI rdfs:label ""Dawit I""@en .
    ?baedaMaryamI dbo:child ?dawitI .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  ?sawMinPhyu dbo:spouse ?spouse .
  
  ?spouse dbo:child ?child .
  ?child a dbo:RoyalPerson .  # Assuming there's a class for royalty
  
  ?child dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity ?realName WHERE {
  ?entity (rdfs:label|foaf:nick) ""The Triple X's""@en .
  OPTIONAL { ?entity rdfs:label ?realName . }
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  
  # Step 2: Find children of Saw Shwe Khet who are royalty
  ?child dbo:parent ?sawShweKhet ;
         dbo:title ?titleChild .
  FILTER CONTAINS(LCASE(?titleChild), ""royalty"") .

  # Step 3: Identify the father of this child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Step 4: Find spouse of the father
  ?father dbo:spouse ?spouse .
  
  # Step 5: Ensure the spouse is royalty
  ?spouse dbo:title ?titleSpouse .
  FILTER CONTAINS(LCASE(?titleSpouse), ""royalty"") .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .
  ?child dbo:parent ?sawShweKhet ;
         dbo:parent ?spouse .
  ?child dbo:predecessor ?predecessor .
}",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist ?parent WHERE {
  ?artist dbo:musicalArtist true .
  ?artist dbo:birthPlace ?place .
  ?place rdfs:label ""London""@en .

  ?movie dbo:starring ?veraLynn .
  ?veraLynn rdfs:label ""Vera Lynn""@en .
  ?movie dbo:author ?artist .

  OPTIONAL { ?artist dbo:parent ?parent . }
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?residence WHERE {
  ?leader dbo:officeHolderOf dbp:Madrid_City_Council .
  ?leader dbo:termStart ?start .
  FILTER (?start <= ""2003-05-01""^^xsd:date && (?start >= ""2002-05-01""^^xsd:date || ?leader dbo:termEnd ?end && ?end > ""2003-05-01""^^xsd:date)) .

  OPTIONAL {
    ?leader dbo:residence ?residence .
  }
}
```",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vflManager ?letschTeam ?letschManager WHERE {
  # Find VfL Bochum's manager in the 2007-08 season
  ?vflBochum dbo:type/dbo:SoccerClub .
  ?vflBochum dbp:season ""2007–08"" .
  ?vflBochum dbo:manager ?vflManager .

  # Find Thomas Letsch's team and manager
  ?letschTeam dbo:type/dbo:SoccerClub .
  ?letschTeam dbo:manager ?letschPerson .
  ?letschPerson rdfs:label ""Thomas Letsch""@en .
  
  OPTIONAL { ?letschTeam dbp:season ?letschSeason . }
  
  # Check if the managers are the same
  FILTER (?vflManager = ?letschManager)
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?office WHERE {
  ?event dbo:wikiPageWikiLink dbr:Central_African_Republic_Civil_War .
  ?event dbo:agent ?commander .
  
  ?commander dbo:occupation dbr:Politician .
  ?commander dbo:office ?office .

  FILTER (CONTAINS(LCASE(STR(?office)), ""commander""))
}
```",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?band .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?person rdfs:label ""Alberto Núñez Feijóo""@en .
  ?person dbo:office ?office .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild ?predecessor WHERE {
  # Find Duke Philipp of Württemberg's child
  ?philipp dbo:child ?child .
  FILTER (str(?philipp) = ""Duke_Philipp_of_W%C3%BCrttemberg""^^xsd:string)

  # Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .

  # Find Philipp Albrecht, Duke of Württemberg's child
  ?albrecht dbo:child ?albrechtChild .
  FILTER (str(?albrecht) = ""Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg""^^xsd:string)

  # Find the predecessor of Philipp Albrecht's child
  ?predecessor dbo:succeededBy ?albrechtChild .

  # Match grandchild with predecessor
  FILTER (?grandchild = ?predecessor)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?party WHERE {
  VALUES ?name { ""Gustavo Petro""@en ""Roy Barreras""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:party ?party .
}
```",3,3,4,1,3,2,3,28,1,11,0,0.08333333333333333,1.0,0.15384615384615385
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceInJapan ?birthPlace WHERE {
  ?chieko rdfs:label ""Chieko Asakawa""@en .
  
  # Find residence in Japan
  OPTIONAL { 
    ?chieko dbo:residence ?residence .
    ?residence dbp:country ""Japan"" .
    BIND(?residence AS ?residenceInJapan)
  }
  
  # Find birthplace
  ?chieko dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?philip rdfs:label ""Philip I of Castile""@en .
  
  ?child dbo:parent ?philip ;
         dbo:child ?isabella .

  ?isabella rdfs:label ""Isabella of Austria""@en .
  
  OPTIONAL { ?child dbo:father ?father . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?laureate ?war WHERE {
  ?laureate dbo:award ""Nobel Prize""@en .
  ?laureate dbo:year ""1930""^^xsd:gYear .
  OPTIONAL { ?laureate dbo:nationality ?nationality . }
  OPTIONAL { ?laureate dbo:occupation ?occupation . }
  OPTIONAL {
    ?war dbo:participant ?laureate ;
         rdfs:label ?warLabel .
  }
}
```",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?martin rdfs:label ""Martin of Aragon""@en .
  ?martin dbo:parent ?parent .
  ?parent a dbo:Man ; # Ensures the parent is male
          (dbo:royalTitle|a dbo:RoyalFamily) . # Checks for royalty status
  BIND(?parent AS ?father)
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""and""@en .
  ?movie dbo:starring ?actor .
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""ATL""@en .
  ?movie dbo:starring ?actor .
}
```",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  
  # Step 1: Identify Min Hla Htut of Pyakaung
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  
  # Step 2: Find Parent of Min Hla Htut
  ?parent dbo:child ?minHlaHtut .
  
  # Step 3: Identify Child of the Parent
  ?parentChild dbo:parent ?parent .
  
  # Step 4: Identify Saw Shwe Khet
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  
  # Step 5: Find Child of Saw Shwe Khet
  ?child dbo:parent ?sawShweKhet .
  
  # Step 6: Identify Predecessor of the Child
  ?predecessor dbo:succeededBy ?child .
  
  # Step 7: Find Common Entity
  FILTER (?parentChild = ?predecessor)
  BIND(?parentChild AS ?commonEntity)
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successorManager WHERE {
  # Find the successor of the 2006-07 VfL Bochum season
  ?vflBochumSeason dbo:club dbp:VfL_Bochum ;
                   dbo:sport dbp:Soccer ;
                   dbo:season ""2006–07"" .
  
  ?successorSeason dbo:predecessor ?vflBochumSeason ;
                   dbo:manager ?successorManager .

  # Find the manager of the 2020-21 SBV Vitesse season
  ?vitesseSeason dbo:club dbp:SBV_Vitesse ;
                 dbo:sport dbp:Soccer ;
                 dbo:season ""2020–21"" .
  
  ?vitesseSeason dbo:manager ?commonManager .

  # Check if the same manager is linked to both seasons
  FILTER (?successorManager = ?commonManager)
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Query for actor of ATL (film)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actor WHERE {
  ?atl dbo:title ""ATL""@en .
  ?atl dbo:starring ?actor .
}

# Query for professional in the alter ego of The Shadow
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?profession .
}

# Query for actor of Shelby Oaks
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actor WHERE {
  ?shelbyOaks dbo:title ""Shelby Oaks""@en .
  ?shelbyOaks dbo:starring ?actor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePlace WHERE {
  ?person dbo:birthPlace ?nyState . # Awardee from New York State
  ?person dbo:award ?award .
  
  ?award dbo:nativePlace ?nativePlace .
  
  ?nativePlace dbo:country dbp:UnitedStates ; # Ensure it's American
               a dbo:Settlement .
}
```",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?mary dbo:parent ?parent .
  OPTIONAL { ?parent dbo:birthPlace ?place . }
  FILTER (CONTAINS(LCASE(str(?place)), ""middlesex""))
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify Bobby Shmurda
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  
  # Find associated musical artists
  ?bobbyShmurda dbo:associatedBand ?artist .

  # Find band members of these artists who are also musicians
  ?artist dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Identify person with the same birth name as Bobby Shmurda and native to Florida
  ?person rdfs:label ""Bobby Shmurda""@en .
  ?person foaf:name ?birthName .
  ?bobbyShmurda foaf:name ?birthName .
  
  ?person dbo:birthPlace ?florida .
  FILTER (CONTAINS(LCASE(STR(?florida)), ""florida""))

  # Ensure the band member is the same person
  ?bandMember rdfs:label ?personLabel .
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?university (MIN(?foundingDate) AS ?establishmentDate) WHERE {
  # Find universities attended by Luiza Erundina
  ?luiza dbo:almaMater ?uni1 .
  FILTER (?luiza = dbpedia:Luiza_Erundina)

  # Find universities attended by Eleonora Menicucci
  ?eleonora dbo:almaMater ?uni2 .
  FILTER (?eleonora = dbpedia:Eleonora_Menicucci)

  # Ensure the university is common to both and has required types
  VALUES ?university { ?uni1 ?uni2 }
  ?university rdf:type dbo:University ;
              rdf:type dbo:Organization ;
              rdf:type dbo:EducationalInstitution .

  # Retrieve founding date of the university
  OPTIONAL { ?university dbo:foundingDate ?foundingDate . }
}
GROUP BY ?university
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  ?location a dbo:Settlement ;
            dbo:country dbc:England .

  ?artist dbo:nationality dbc:English ;
          dbo:birthPlace ?location ;
          rdf:type dbo:Artist, dbo:MusicalArtist .

  ?artist dbo:parent ?parent .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?officeHolder WHERE {
  ?election rdfs:label ""2003 Madrid City Council election""@en .
  ?election dbo:mayor ?officeHolder .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?personLabel ?birthPlaceLabel WHERE {
  # Governor of Virginia who is a politician
  { 
    ?governor dbo:governorOf dbr:Virginia .
    ?governor rdf:type dbo:Politician .
    ?governor rdfs:label ?personLabel .
    ?governor dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }
  
  UNION
  
  # Awardee related to Vince Gilligan
  { 
    ?vince dbr:Vince_Gilligan .
    ?vince dbo:award ?award .
    ?awardee dbo:recipient ?award .
    ?awardee rdfs:label ?personLabel .
    ?awardee dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }
  
  UNION
  
  # Cece Bell
  { 
    ?cece rdfs:label ""Cece Bell""@en .
    ?cece dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Melbourne""@en .
  ?person rdfs:label ?name .
}
```",1,1,2,1,1,2,2,9,789,789,20,0.5,0.9752781211372065,0.6610808546292418
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamManager WHERE {
  # Step 1: Identify the leader of West Germany (Chancellor)
  ?leader dbo:country dbr:West_Germany .
  
  # Step 2: Determine the country
  ?country rdfs:label ""Germany""@en .

  # Step 3: Find the person born on 1968-08-26 and native of that country
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality ?country ;
          a dbo:SportsManager .
  
  # Step 4: Identify the soccer club season they managed
  ?season dbo:managesTeam ?team ;
          dbo:manager ?person .

  # Step 5: Retrieve the team's manager
  ?team dbo:manager ?teamManager .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?alterEgo WHERE {
  # Find the producer of A Star Is Born (1937)
  ?film rdfs:label ""A Star Is Born""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)>)))
  
  ?film dbo:producer ?producer .

  # Find the character Kent Allard in the film
  ?character rdfs:label ""Kent Allard""@en .
  ?film dbo:starring ?character .

  # Check for any fictional alter ego or professional identity
  OPTIONAL {
    ?character dbo:fictionalAlterEgo ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  VALUES ?name { ""Vince Gilligan""@en ""Cece Bell""@en ""Glenn Youngkin""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,1,3,3,3,71,1,3,0,0.25,1.0,0.4
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?leader dbo:leader ?party ;
          dbo:officeHolder ?office ;
          dbo:country dbr:Spain .

  OPTIONAL { 
    ?election dbo:electionDate ?date .
    FILTER (YEAR(?date) = 2009)
    ?candidate dbo:candidateFor ?election .
    ?candidate dbo:affiliation ?party .
  }

  ?person dbo:leader ?party ;
          dbo:officeHolder ?office ;
          dbo:country dbr:Spain .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?charles rdfs:label ""Charles I of Hungary""@en .
  ?charles dbo:father ?father .
  OPTIONAL { ?father dbo:royalTitle ?title . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work rdfs:label ""Always the Love Songs""@en .
  ?work dbo:author ?writer .

  # Find commanders in the Great Turkish War
  ?commander a dbo:MilitaryPerson ;
             dbo:militaryConflict ?conflict .
  ?conflict rdfs:label ""Great Turkish War""@en .

  # Check if the writer is also a commander
  FILTER (?writer = ?commander)
  
  BIND(?writer AS ?person)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember1, ?bandMember2 WHERE {
  # Part for David Paton's associated musical artist and its band members
  ?david a dbo:Person ;
         rdfs:label ""David Paton""@en .
  ?david dbo:musicalArtist ?artist1 .
  
  ?member1 dbo:bandMember ?artist1 ;
           rdfs:label ?bandMember1 .

  # Part for Stuart McBeath Tosh's associated musical artist and its band members
  ?stuart a dbo:Person ;
          rdfs:label ""Stuart McBeath Tosh""@en .
  ?stuart dbo:musicalArtist ?artist2 .
  
  ?member2 dbo:bandMember ?artist2 ;
           rdfs:label ?bandMember2 .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?actorDeathPlace WHERE {
  ?movie rdfs:label ""The Sky Ranger""@en .
  ?movie dbo:cast ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
}

UNION

SELECT ?carolynJones ?carolynJonesDeathPlace WHERE {
  ?carolynJones rdfs:label ""Carolyn Jones""@en .
  OPTIONAL { ?carolynJones dbo:deathPlace ?carolynJonesDeathPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  ?alfonso rdfs:label ""Alfonso IV of Aragon""@en .
  ?alfonso dbo:child ?child .
  ?child rdfs:label ?childLabel .
}
```",3,4,4,3,1,3,2,20,0,3,17,0.0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?awardee WHERE {
  ?award dbo:awardNumber ""30"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Myat Hpone Pyo's father
  ?myathponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?father dbo:child ?myathponePyo .

  # Step 2: Check if the father is royalty
  ?father dbo:royalty ?isRoyalty .

  # Step 3: Identify Min Hla Htut of Pyakaung's parent
  ?minHlaHtut rdfs:label ""Min Hla Htut""@en .
  ?parent dbo:child ?minHlaHtut .

  # Step 4: Find Saw Shwe Khet's child
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child dbo:child ?sawShweKhet .

  # Step 5: Determine predecessor relationship
  ?parent rdfs:subClassOf|<http://dbpedia.org/ontology/predecessor> ?child .

  # Step 6: Identify spouse of the royal father
  ?father dbo:spouse ?spouse .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?psoe rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?feijoo rdfs:label ""Alberto Núñez Feijóo""@en .
  ?feijoo dbo:office ?office .
  ?office dbo:party ?psoe .
  ?tenant dbo:office ?office .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?timeZone WHERE {
  ?mitaka rdfs:label ""Mitaka""@en .
  ?mitaka dbo:locatedIn ?region .
  
  OPTIONAL {
    ?region dbp:timeZone ?timeZone .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?nicknameClub ?player WHERE {
  # Denis Kolodin's nickname that is a soccer club
  ?denis rdfs:label ""Denis Kolodin""@en .
  ?denis dbo:nickname ?nickname .
  ?nickname rdfs:label ?nicknameLabel .
  
  OPTIONAL { 
    ?club rdfs:label ?nicknameLabel .
    ?club rdf:type dbo:SoccerClub .
    BIND(?nickname AS ?nicknameClub)
  }
  
  # Aleksandr Filimonov's associated player
  ?aleksandr rdfs:label ""Aleksandr Filimonov""@en .
  ?aleksandr dbo:teamMember ?player .
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?tenantOfMadrid ?commanderOffice ?miguelMauraOffice WHERE {
  # Find the tenant of Madrid who is also a politician
  ?person dbo:officeHolder ?office .
  ?office rdfs:label ""Madrid""@en .
  ?person dbo:politicalPartyMember ?party .

  # Find the commander in Central African Republic Civil War
  OPTIONAL { 
    ?warEvent dbo:commander ?person .
    ?warEvent rdfs:label ""Central African Republic Civil War""@en .
    ?person dbo:positionHeld ?commanderOffice .
  }

  # Find Miguel Maura's office
  ?miguelMaura rdfs:label ""Miguel Maura""@en .
  ?miguelMaura dbo:officeHolder ?miguelMauraOffice .

  FILTER(?person = ?tenantOfMadrid)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""Hong Kong C""@en .
  ?team a dbo:SoccerTeam ;
        dbo:sport dbo:Soccer .
  ?team dbo:manager ?manager .
  ?manager a dbo:SportsManager ;
           dbo:occupationType dbo:SoccerManager .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?politicianChild ?father WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
  
  # Ensure the child is a politician
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Find the father of this politician child
  ?child dbo:father ?father .

  # Verify relationships with Edward Stanley and Victor Stanley
  OPTIONAL { ?frederick dbo:child ?edward . }
  OPTIONAL { ?frederick dbo:child ?victor . }

  FILTER(?edward = <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> || 
         ?victor = <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)>)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?antoine rdfs:label ""Antoine, Duke of Lorraine""@en .
  ?antoine dbo:child ?francisI .
  ?francisI rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?parent dbo:child ?francisI ;
          a dbo:RoyalFamilyMember ;
          a dbo:Noble .
  ?parent dbo:spouse ?spouse .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childBirthPlace WHERE {
  ?chiang rdfs:label ""Chiang Ching-kuo""@en .
  ?chiang dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), 'politician'))
  ?child dbo:birthPlace ?childBirthPlace .
}",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Owner of USS Arcadia (ID-1605)
  ?arcadia dbo:owner ?owner .
  
  # Author of ""Back to Work"" book
  ?book dbo:author ?author .
  FILTER(STR(?book) = ""Back_to_Work_(2011_book)"")

  # Spouse of Hillary Clinton
  ?hillary foaf:name ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?spouse .

  # Find the commander in a war that is also a disease and societal event
  ?war dbo:commander ?commander .
  FILTER(STR(?war) = ""World_War_I"" || STR(?war) = ""Spanish_Flu"")
  
  # Ensure all individuals are connected to the same commander
  VALUES (?individual) { ?owner ?author ?spouse }
  ?individual dbo:commander ?commander .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?billClinton a dbo:Politician ;
               dbo:spouse ?hillaryClinton ;
               dbo:residenceLocation ?chappaqua ;
               dbo:militaryCommanderInWar ?war .
  ?hillaryClinton rdfs:label ""Hillary Clinton""@en .
  ?chappaqua rdfs:label ""Chappaqua, New York""@en .
  ?billClinton dbo:author ?work .
  ?work a dbo:Book .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Part 1: Associated Musical Artist of $pacely
SELECT ?musicalArtist WHERE {
  ?entity rdfs:label ""$pacely""@en .
  ?entity dbo:musicalArtist ?musicalArtist .
}

UNION

# Part 2: Person Born as the Birth Name of Joey B
SELECT ?person WHERE {
  ?joeyB rdfs:label ""Joey B""@en .
  ?joeyB dbo:birthName ?birthName .
  
  ?person rdfs:label ?birthName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?spouse .

  ?book dbo:author ?spouse ;
        rdfs:label ""Back to Work""@en .

  ?crisis dbo:commander ?spouse ;
          rdfs:label ""Third Taiwan Strait Crisis""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?residence WHERE {
  ?party dbo:leader ?leader .
  ?party rdfs:label ""Ulster Unionist Party""@en .
  
  ?leader dbo:residence ?residence .
  
  OPTIONAL { 
    ?leader dbo:nationality dbp:United_Kingdom .
  }
}
```",3,3,4,2,2,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mother WHERE {
  # Step 1: Identify Charles I of Hungary and his father
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?charlesI dbo:father ?father .

  # Step 2: Ensure the father is a child of Stephen V of Hungary
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:child ?father .

  # Step 3: Identify Philip I, Prince of Taranto and his father's spouse
  ?philipI rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philipI dbo:father ?philipIFather .
  ?philipIFather dbo:spouse ?mother .

  # Step 4: Ensure the mother is royalty (implicitly true by historical context)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:associatedBand ?associatedArtist .
}

UNION

SELECT ?realName, ?artist WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  OPTIONAL { ?nickCurran foaf:name ?realName . }
  ?nickCurran dbo:associatedBand ?artist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date .
  ?athlete rdf:type dbo:Athlete .
  
  ?team dbo:player ?athlete ;
        dbo:player dbr:Sergio_Agüero .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?sandro rdfs:label ""Sandro Bertaggia""@en .
  ?sandro dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Identify ""The Triple X's""
  ?tripleXs rdfs:label ""The Triple X's""@en .
  
  # Find commanders of the Battle of Fort Royal
  ?battle dbo:commander ?battleCommander ;
          dbp:name ""Battle of Fort Royal"" .

  # Find events involving Robert Calder and their commanders
  ?calderEvent dbo:commander ?commander ;
               rdfs:label ?eventLabel .
  ?calderEvent dbp:person ?robertCalder .
  ?robertCalder rdfs:label ""Robert Calder""@en .

  # Ensure the commander is common to both contexts
  FILTER(?commander = ?battleCommander)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Step 1: Find Nate Newton's Associated Band
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?nate foaf:name ""Nate Newton""@en .
  ?nate dbo:associatedBand ?band .
}

# Step 2: Find Associated Musical Artists of the Band's Organization
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?artist WHERE {
  ?band a dbo:MusicalGroup ;
        dbo:associatedBand ?nate .
  ?band dbo:associatedMusicalArtist ?artist .
}

# Step 3: Find the Organization for the Associated Artist (if it's a band and an organization)
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?organization WHERE {
  ?artist a dbo:Band ;
          dbo:associatedMusicalArtist ?band .
  ?artist dbo:associatedOrganization ?organization .
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthPlace WHERE {
  ?alumnus dbo:almaMater dbp:Plovdiv_University_Paisii_Hilendarski .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
  ?child dbo:childOf ?faisal ;
         rdfs:label ?childLabel .
  
  FILTER(CONTAINS(LCASE(?childLabel), ""prince"") || CONTAINS(LCASE(?childLabel), ""princess""))
  
  OPTIONAL { ?child rdfs:label ""Prince Omar bin Faisal""@en . }
  
  ?parent dbo:father ?child .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?alterEgo ?band WHERE {
  # Step 1: Identify Bob Thompson and his birth name
  ?bob a dbo:Musician ;
       rdfs:label ""Bob Thompson (musician)""@en .
  
  OPTIONAL { ?bob dbo:birthName ?birthName . }

  # Step 2: Identify Walter B. Gibson's fictional character and its alter ego
  ?character dbo:creator ?gibson ;
             rdfs:label ?characterLabel .

  ?gibson a dbo:Person ;
          rdfs:label ""Walter B. Gibson""@en .
  
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }

  # Step 3: Check if there is any band associated with the birth name of Bob Thompson
  OPTIONAL {
    ?band a dbo:Band ;
          dbo:leadMember ?birthName .
  }
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?commander dbo:commanderOf ?war .
  ?war rdfs:label ""Great Turkish War""@en .
  
  OPTIONAL { 
    ?commander dbo:succeededBy ?successor .
    ?successor rdfs:label ""Yurii Khmelnytsky""@en .
  }
  
  OPTIONAL {
    ?reference dbo:wikiPageRedirects ?ducasEntity .
    ?ducasEntity rdfs:label ""George Ducas""@en .
    ?commander dbo:wikiPageRedirects ?ducasEntity .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?birthEntity WHERE {
  
  # Part 1: Find the awardee and their associated war
  ?award dbo:recipient ?awardee .
  FILTER (str(?award) = ""Golden Sword for Bravery""^^xsd:string)
  ?awardee dbo:participatedIn ?war .

  # Part 2: Find the entity in the birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlace .
  
  # Find notable entities in the birthplace
  ?birthEntity dbo:location ?birthPlace .

}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?war WHERE {
  ?arcadia rdf:type dbo:Ship .
  ?arcadia rdfs:label ""USS Arcadia (ID-1605)""@en .
  ?arcadia dbo:owner ?owner .

  ?war dbo:participatedIn ?owner ;
       rdf:type dbo:War ;
       rdf:type dbo:Disease ;
       rdf:type ?societalEvent .

  FILTER(?societalEvent != dbo:War && ?societalEvent != dbo:Disease)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:childOf ?frederick ;
         rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?spouse dbo:spouse ?frederick ;
          dbo:parent ?child .
  BIND(?spouse AS ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence WHERE {
  ?david rdfs:label ""David Luckman""@en .
  ?david dbo:residence ?residence .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?leader dbo:officeHolder ?election .
  ?election rdfs:label ""2009 Galician regional election""@en .

  ?leader dbo:nationality dbr:Spain .

  ?leader dbo:residence ?countryResidence .
  FILTER (isLiteral(?countryResidence) && datatype(?countryResidence) = xsd:string)

  ?tenant dbo:resident ?countryResidence .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?brunoParty ?successor ?successorParty WHERE {
  # Find Bruno Retailleau's party
  ?bruno rdfs:label ""Bruno Retailleau""@en .
  ?bruno dbo:party ?brunoParty .

  # Find Patrice Martin-Lalande and his successor
  ?patrice rdfs:label ""Patrice Martin-Lalande""@en .
  ?patrice dbo:succeededBy ?successor .
  
  # Ensure the successor is a French politician
  ?successor rdf:type dbo:Politician ;
             dbo:nationality dbr:France .

  # Find the successor's party
  ?successor dbo:party ?successorParty .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  # Find Saw Shwe Khet's child
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?child1 .

  # Find Minye Kyawswa's grandchild
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:child ?parentOfGrandchild .
  ?parentOfGrandchild dbo:child ?grandchild .

  # Check if the child of Saw Shwe Khet is the grandchild of Minye Kyawswa
  FILTER (?child1 = ?grandchild)

  # Find the predecessor of this common child
  ?commonChild rdfs:label ?childLabel .
  OPTIONAL { ?commonChild dbo:successor ?predecessor . }
}
```",5,5,6,3,2,3,3,71,0,55505,1,0.0,0.0,0
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?residence ?country WHERE {
  # Find Alberto Núñez Feijóo's office
  ?feijoo rdfs:label ""Alberto Núñez Feijóo""@en .
  ?feijoo dbo:positionHeld ?office .

  # Find Álvaro Quirós' residence and country
  ?quiros rdfs:label ""Álvaro Quirós""@en .
  ?quiros dbo:residence ?residence .
  OPTIONAL { ?residence dbp:country ?country . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?arthur rdfs:label ""Arthur Stanley""@en .
  ?arthur dbo:occupation dbr:Politician .
  ?arthur dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager ?club WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person a dbo:SportsManager .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:manager ?club . }
  FILTER EXISTS { ?club a dbo:SoccerClub }
}
```",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory ?administration WHERE {
  # Part 1: Territories administered from Copenhagen
  ?copenhagen dbo:administrativeRegion ?territory .
  
  # Part 2: Administration of Prince Christian
  ?christian rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  ?christian dbo:title ?administration .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?emilia rdfs:label ""Emilia (Bulgarian singer)""@en .
  ?emilia dbo:profession ?profession .
}

UNION

SELECT ?band WHERE {
  ?emilia rdfs:label ""Emilia (Bulgarian singer)""@en .
  ?emilia dbo:memberOfBand ?band .
}
```",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?sawMinHla dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Linda Miller (actress)
  ?linda rdfs:label ""Linda Miller""@en .
  ?linda dbo:profession dbr:Acting .

  # Find her child
  ?linda dbo:child ?child .

  # Identify the award associated with New York
  ?award dbo:nativePlace dbr:New_York_(state) .

  # Find awardees who are American and settlements
  ?awardee dbo:recipientOf ?award ;
           rdf:type dbo:City ;
           dbp:country ""United States"" .

  # Ensure the child matches the criteria
  ?child rdfs:label ?awardeeLabel .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?lasso rdfs:label ""Lasso the Moon""@en .
  ?lasso dbo:profession ?actor .
  FILTER(CONTAINS(LCASE(STR(?actor)), ""actor""))
}

SELECT ?album WHERE {
  ?lasso rdfs:label ""Lasso the Moon""@en .
  ?lasso dbo:album ?album .
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?designer WHERE {
  ?car rdfs:label ""Aston Martin AMR1""@en .
  ?car dbo:designer ?designer .
}
```",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?child .
  ?child dbo:royalty ?isRoyalty1 .
  FILTER(?isRoyalty1 != '')
  ?child dbo:father ?father .
  ?father dbo:royalty ?isRoyalty2 .
  FILTER(?isRoyalty2 != '')
  ?father dbo:spouse ?spouse .
}",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
# Query 1: Associated Musical Artist of Nick Curran
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?associatedArtist .
}

# Query 2: Real Name of The Fabulous Thunderbirds
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:member ?member .
  OPTIONAL { ?member rdfs:label ?realName . }
}

# Query 3: Band Member Born on 1945-03-30
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?band WHERE {
  ?person dbo:birthday ""1945-03-30""^^xsd:date .
  ?person rdfs:label ?name .
  FILTER regex(?name, "".*"", ""i"") # Assuming the person is a musical artist
  ?person dbo:associatedBand ?band .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place that is a region and administrative region
  ?paulus dbo:birthPlace ?region .
  ?region rdf:type dbo:Region ;
          rdf:type dbo:AdministrativeRegion .

  # Step 2: Find the governor of that region
  ?governor dbo:governs ?region ;
           rdfs:label ?governorLabel .

  FILTER(CONTAINS(LCASE(?governorLabel), ""governor""))

  # Step 3: Find the birth place of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?claimToFameProducer WHERE {
  # Find the actor of ""Johnny Doughboy""
  ?actor dbo:actorInFilm ?johnnyDoughboy .
  ?johnnyDoughboy rdfs:label ""Johnny Doughboy""@en .

  # Find the producer of ""A Star Is Born"" (1937)
  ?producer dbo:producedFilm ?starIsBorn .
  ?starIsBorn rdfs:label ""A Star Is Born""@en ;
              dbo:releaseDate ?date .
  FILTER(year(?date) = 1937)

  # Ensure the same person is both actor and producer
  VALUES ?person { ?actor ?producer }

  # Find their claim to fame (most notable work)
  ?person dbo:notableWork ?claimToFame .

  # Identify the producer of this claim to fame
  ?claimToFameProducer dbo:producedFilm ?claimToFame .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?theme WHERE {
  ?dikhawa rdfs:label ""Dikhawa""@en .
  ?dikhawa dbo:genre ?theme .
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
# Query to find the author of ""El Deafo""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book dbo:title ""El Deafo""@en .
  ?book dbo:author ?author .
}

# Query to find the birthplace of the author
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?author dbo:birthPlace ?birthPlace .
}

# Query to find the governor of the author's birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governor WHERE {
  ?region dbo:governmentHead ?governor .
  ?author dbo:birthPlace ?region .
}

# Query to find the birthplace of Paulus Powell
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?paulus rdfs:label ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?birthPlace .
}

# Query to find the governor of Paulus Powell's birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governor WHERE {
  ?region dbo:governmentHead ?governor .
  ?paulus dbo:birthPlace ?region .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandParent WHERE {
  ?dorothea rdfs:label ""Dorothea of Lorraine""@en .
  ?dorothea dbo:father ?father .
  ?father dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?roy rdfs:label ""Roy Barreras""@en .
  ?roy dbo:party ?party .
}

SELECT ?country WHERE {
  ?daniel rdfs:label ""Daniel Elahi Galán""@en .
  ?daniel dbo:nationality ?country .
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?william rdfs:label ""William Tennant (Royal Navy officer)""@en .
  ?william dbo:serviceBranch ?force .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?nate rdfs:label ""Nate Newton""@en .
  ?nate dbo:associatedBand ?band .
  ?band rdf:type dbo:MusicalArtist ;
        rdf:type dbo:Organization .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Grand Duchy of Finland""@en .
}
```",1,1,2,1,1,2,3,28,355,0,0,1.0,1.0,1.0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  
  # Step 1: Identify Saw Min Phyu's spouse
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  ?sawMinPhyu dbo:spouse ?spousePhyu .
  
  # Step 2: Find the child of Saw Min Phyu's spouse
  ?spousePhyu dbo:child ?childPhyu .
  
  # Step 3: Filter for royalty among these children
  ?childPhyu dbo:royaltyStatus ?royaltyStatus .
  FILTER(?royaltyStatus = ""Royal"")
  
  # Step 4: Identify the predecessor of this royal child
  ?childPhyu dbo:predecessor ?predecessor .
  
  # Additional steps for Saw Min Hla and Saw Shwe Khet
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?sawMinHla dbo:spouse ?spouseHla .
  ?spouseHla dbo:child ?childHla .
  ?childHla dbo:spouse ?shweKhet .
  ?shweKhet rdfs:label ""Saw Shwe Khet""@en .

  # Ensure the child is the same for both relationships
  FILTER(?childPhyu = ?childHla)
}
",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?alfonso rdfs:label ""Alfonso IV of Aragon""@en .
  ?alfonso dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,2,1,1,0.6666666666666666,0.6666666666666666,0.6666666666666666
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?pickett rdfs:label ""George Pickett""@en .
  ?pickett dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
  ?pickett dbo:commander ?commander .
}
```",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?nate foaf:name ""Nate Newton""@en .
  ?nate dbo:member ?band .
  ?band a dbo:Band ;
        dbo:organization ?org .
  ?bandMember dbo:member ?band .
  ?bandMember a dbo:Organization .
}",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Juan Carlos Molina (footballer)
  ?molina rdfs:label ""Juan Carlos Molina""@en .
  
  # Actor who is also a soccer player and athlete
  ?actor dbo:occupation dbp:SoccerPlayer ;
         dbo:occupation dbp:Athlete ;
         foaf:name ?nameActor .

  # Films directed by Manuel Huerga
  ?film dbo:director ?huerga .
  ?huerga rdfs:label ""Manuel Huerga""@en .
  
  # Actor in the film
  ?film dbo:starring ?actor .

  # Teams of Pablo Aimar
  ?aimar rdfs:label ""Pablo Aimar""@en .
  ?team dbo:member ?aimar .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:parent ?frederick ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
  
  OPTIONAL { ?child dbo:parent ?edward . }
  OPTIONAL { ?descendant dbo:parent ?child .
             ?award rdfs:label ""Rodney Lees""@en .
             ?descendant dbo:awardee ?award .
           }

  FILTER(EXISTS { ?child dbo:parent ?edward } && EXISTS { ?descendant dbo:parent ?child . ?descendant dbo:awardee ?award })
  
  BIND(?frederick AS ?father)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  ?alvaro dbo:nationality ?nationality .
  ?alvaro dbo:residence ?country .

  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?tenant dbo:memberOfParty ?party ;
          dbo:nationality ?nationality .

  FILTER (?country = ?alvaroResidence)
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?show rdfs:label ""Dispatches from Elsewhere""@en .
  ?show dbo:castMember ?actor .

  # Ensure the actor's profession is Actor
  ?actor dbo:profession ?profession .
  FILTER (CONTAINS(LCASE(?profession), ""actor""))

  # Check if the actor is associated with The Shadow
  OPTIONAL {
    ?actor rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""the shadow""))
  }

  # Ensure there's a connection to The Shadow
  MINUS { ?actor rdfs:label ?label . FILTER(!CONTAINS(LCASE(?label), ""the shadow"")) }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  ?adenauer rdfs:label ""Konrad Adenauer""@en .
  ?adenauer dbo:nationality ?nationality .
  ?nationality dbp:countryName ?nativeCountry .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?successor WHERE {
  ?commander dbo:commanderOf [dbo:war dbp:Russo-Polish_War_1654–1667] .
  ?commander dbo:commanderOf [dbo:war dbp:Great_Turkish_War] .
  ?commander dbo:officeHolder true .
  ?commander dbo:successor ?successor .

  OPTIONAL {
    ?commander dbo:relatedTo <http://dbpedia.org/resource/George_Ducas> .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?person dbo:actor ?highSocietyBlues .
  ?person dbo:producer ?tomSawyer1938 .

  FILTER(STRSTARTS(LCASE(?highSocietyBlues), ""http://dbpedia.org/resource/high_society_blues""))
  FILTER(STRSTARTS(LCASE(?tomSawyer1938), ""http://dbpedia.org/resource/the_adventures_of_tom_sawyer_(1938_film)""))

  ?claimToFame dbo:filmProduction ?person .

  ?claimToFame dbo:producedBy ?producer .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?elorm rdfs:label ""Elorm Kabu Amenyah""@en .
  ?elorm dbo:associatedMusicalArtist ?associatedArtist .
}

SELECT ?writer WHERE {
  ?anthology dbo:title ""The Live Anthology""@en .
  ?anthology dbo:author ?writer .
  ?writer dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""musician"") || CONTAINS(LCASE(?profession), ""singer""))
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Query 1: Find Theodor Heuss's Native Country
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?theodorHeuss rdfs:label ""Theodor Heuss""@en .
  ?theodorHeuss dbo:nationality ?country .
}

# Query 2: Find VfL Bochum Manager in 2007–08
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?bochum rdfs:label ""VfL Bochum""@en .
  ?bochum dbp:coachDuringSeason2007_08 ?manager .
}

# Query 3: Find SBV Vitesse Manager in 2020–21
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?vitesse rdfs:label ""SBV Vitesse""@en .
  ?vitesse dbp:coachDuringSeason2020_21 ?manager .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?tracy dbo:participatedIn ?war .
  ?gillmore dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:location ?charleston . }
  FILTER (CONTAINS(LCASE(STR(?charleston)), ""charleston, south carolina""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author WHERE {
  ?hillary a dbo:Politician ;
           dbo:spouse ?spouse ;
           dbo:residenceLocation ?location .
  
  ?location rdfs:label ""Chappaqua, New York""@en .

  ?spouse a dbo:OfficeHolder ;
          foaf:name ?name .

  ?work dbo:author ?spouse ;
        a dbo:Book ;
        dbo:wikiPageRedirects ?redirect .

  ?redirect rdfs:label ?title .
  
  FILTER(?title = ""The Book Title""@en) # Replace with the actual title if known

  ?author dbo:author ?work .
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?ekaterina rdfs:label ""Ekaterina Zaharieva""@en .
  ?ekaterina dbo:birthPlace ?birthPlace .
}

SELECT ?resident ?birthPlace WHERE {
  ?resident dbo:residence dbr:Sofia .
  ?resident dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?work WHERE {
  ?politician dbo:residence ?location .
  ?location rdfs:label ""Chappaqua, New York""@en .
  ?politician rdf:type dbo:Politician ;
              dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          dbo:work ?work .
  ?work rdf:type dbo:Book ;
        dbp:title ""An Invitation to the White House"" .
  BIND(?spouse AS ?author)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?nicholas rdfs:label ""Nicholas II of Russia""@en .
  OPTIONAL { ?nicholas dbo:birthPlace ?place . }
  OPTIONAL { ?nicholas dbo:nationality ?nationality . }
  
  FILTER(?place != [] || ?nationality != [])
  
  {
    ?place dbo:country ?country .
  } UNION {
    ?nationality rdfs:label ?countryLabel .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(REPLACE(STR(?nationality), "" "", ""_"")))) AS ?country)
  }
}
```",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?bandMemberBand ?kimWilsonBand WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1945 && MONTH(?date) = 3 && DAY(?date) = 30)
  ?person rdf:type dbo:MusicalArtist .

  # Find the band of this person
  ?person dbo:bandMemberOf ?bandMemberBand .

  # Find Kim Wilson's band
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:bandMemberOf ?kimWilsonBand .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfPolitician WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?parent .

  ?child dbo:parent ?parent ;
         a dbo:Person ;
         (dbo:officeHolder|dbo:politicalPartyMember) ?officeOrMembership .

  ?politician dbo:parent ?child ;
              a dbo:Politician ;
              (dbo:officeHolder|dbo:politicalPartyMember) ?officeOrMembership .

  ?parentOfPolitician dbo:child ?politician .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?work rdfs:label ""The First Glove""@en .
  ?work dbo:author ?writer .
}
```",2,2,3,2,1,3,2,20,0,0,17,0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member WHERE {
  # Find members of Cavalera Conspiracy
  ?cavaleraConspiracy dbo:musicalArtist ?artist1 .
  ?artist1 rdfs:label ""Cavalera Conspiracy""@en .
  ?artist1 dbo:bandMember ?member .

  # Find members of Mudvayne
  ?mudvayne dbo:musicalArtist ?artist2 .
  ?artist2 rdfs:label ""Mudvayne""@en .
  ?artist2 dbo:bandMember ?member .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
# Query for Kim Wilson's Band (The Fabulous Thunderbirds)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?kim rdfs:label ""Kim Wilson""@en .
  ?kim dbo:memberOfBand ?band .
}

# Query for Nick Curran's Associated Musical Artist
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?nick rdfs:label ""Nick Curran""@en .
  ?nick dbo:associatedBand ?artist .
}

# Query for Eric Clapton's Band Members
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?eric rdfs:label ""Eric Clapton""@en .
  ?eric dbo:memberOfBand ?band .
  ?band dbo:member ?bandMember .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Step 1: Identify Alfonso VI and his children
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  ?alfonso dbo:child ?alfonsoChild .

  # Step 2: Find the grandchildren of Alfonso VI
  ?alfonsoChild dbo:child ?alfonsoGrandchild .

  # Step 3: Identify Roger II and his parent
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?roger dbo:parent ?rogerParent .

  # Step 4: Find the child of Roger's parent (which includes Roger himself)
  ?rogerParent dbo:child ?rogerChild .

  # Step 5: Identify common individuals who are grandchildren of Alfonso VI and related to Roger II
  FILTER(?alfonsoGrandchild = ?rogerChild)

  # Ensure the individual is royalty
  ?commonIndividual rdf:type dbo:Monarch .
  
  # Link the grandchild to the common individual
  ?alfonsoGrandchild rdfs:label ?commonIndividualLabel .
  FILTER(langMatches(lang(?commonIndividualLabel), ""en""))
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tracyWar, ?gillmoreWar WHERE {
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:participatedIn ?tracyWar .

  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:participatedIn ?gillmoreWar .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?shobhna rdfs:label ""Shobhna Samarth""@en .
  ?shobhna dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",1,2,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?monarch WHERE {
  ?spain a dbo:Country ;
         rdfs:label ""Spain""@en .
  ?spain dbo:monarch ?monarch .
}
```",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor ?spouseOfFather ?childOfParent WHERE {
  # Find Myat Hpone Pyo's predecessor
  ?myathponepyo rdfs:label ""Myat Hpone Pyo""@en .
  OPTIONAL { ?myathponepyo dbo:predecessor ?predecessor . }

  # Find Myat Hpone Pyo's father and check if he is royalty
  ?father dbo:child ?myathponepyo .
  FILTER EXISTS { ?father rdf:type dbo:RoyalPerson } .

  # Find the spouse of Myat Hpone Pyo's royal father
  OPTIONAL { ?father dbo:spouse ?spouseOfFather . }

  # Identify Min Hla Htut and his parent
  ?minhlahhtut rdfs:label ""Min Hla Htut""@en .
  ?parent dbo:child ?minhlahhtut .

  # Find the child of this parent (potentially Myat Hpone Pyo)
  OPTIONAL { ?parent dbo:child ?childOfParent . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?politician WHERE {
  # Step 1: Find actor of ""Dispatches from Elsewhere""
  ?dispatchSeries rdfs:label ""Dispatches from Elsewhere""@en .
  ?dispatchSeries dbo:actor ?actor1 .

  # Step 2: Get professions of the actor
  ?actor1 dbo:profession ?profession1 .

  # Step 3: Find politicians with matching profession
  ?politician a dbo:Politician ;
              dbo:profession ?profession1 .

  # Step 4: Find actor of ""Ab Kya Hoga""
  ?abSeries rdfs:label ""Ab Kya Hoga""@en .
  ?abSeries dbo:actor ?actor2 .

  # Step 5: Get professions of the second actor
  ?actor2 dbo:profession ?profession2 .

  # Ensure politician shares a profession with both actors
  FILTER (?profession1 = ?profession2)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  ?song dbo:title ""Lotus""@en .
  ?song dbo:artist dbr:R.E.M. .
  ?song dbo:producer ?producer .

  FILTER (
    { ?producer a dbo:Band . }
    || { ?producer a dbo:MusicalGroup . }
    || { ?producer a dbo:Organization . }
  )
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?realName WHERE {
  ?alfonso rdfs:label ""Alfonso IV of Aragon""@en .
  ?alfonso dbo:child ?child .
  ?child rdfs:label ?realName .
  OPTIONAL { ?child dbo:royalTitle ?title . FILTER(?title != """") }
}
```",4,5,5,3,2,3,2,20,2,4,1,0.3333333333333333,0.6666666666666666,0.4444444444444444
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?settlement WHERE {
  ?varthalitis dbo:deathPlace ?place .
  ?place rdf:type dbo:Settlement .
  ?zervas dbo:war ?war1 .
  ?ventiris dbo:war ?war2 .
  OPTIONAL { ?place dbo:location ?settlement . }
  FILTER(?war1 = ?war2)
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?property WHERE {
  ?charleston rdfs:label ""Charleston, South Carolina""@en .
  OPTIONAL { ?entity dbo:location ?charleston . BIND(""dbo:location"" AS ?property) }
  OPTIONAL { ?entity dbo:birthPlace ?charleston . BIND(""dbo:birthPlace"" AS ?property) }
  OPTIONAL { ?entity dbo:deathPlace ?charleston . BIND(""dbo:deathPlace"" AS ?property) }
}
```",1,1,2,1,1,3,3,71,0,177,12,0.0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?william rdfs:label ""William I""@en .
  ?parent dbo:child ?william .
  ?parent a dbo?RoyalFamilyMember ; 
          dbo:officeHolder ?office .
  ?parent dbo:child ?child .
  ?child a dbo?RoyalFamilyMember .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find Frédéric Bouraly's profession(s)
  ?frederic rdfs:label ""Frédéric Bouraly""@en .
  ?frederic dbo:profession ?profession .

  # Find actors of ""Rustlers' Rhapsody""
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .

  # Ensure the actor has the same profession as Frédéric Bouraly
  ?actor dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  OPTIONAL { 
    ?band rdfs:label ""Uncle Murda""@en .
    ?band dbo:member ?person .
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?carl dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:occupation dbo:Musician .
  OPTIONAL { ?nickCurran dbo:reference ?fabulousThunderbirds . }
  ?nickCurran dbo:associatedBand ?associatedArtist .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?na'od rdfs:label ""Na'od""@en .
  ?na'od dbo:father ?father .
  OPTIONAL { ?father dbo:royalty ?isRoyalty . }
  OPTIONAL { ?father dbo:officeHolder ?isOfficeHolder . }
  FILTER (?isRoyalty || ?isOfficeHolder)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?jamieT rdfs:label ""Jamie T""@en .
  ?jamieT dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?quintana rdfs:label ""Anxo Quintana""@en .
  
  ?quintana dbo:office ?office .
  ?office dbo:startDate ?start . # Ensures it's an event with a start date
  
  OPTIONAL { ?office dbo:memberOf ?administration . }
  OPTIONAL { ?administration dbo:country dbr:Spain . } # Ensure the administration is Spanish
  OPTIONAL { ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party . } # Link to PSOE

  FILTER EXISTS { ?quintana dbo:memberOf ?administration . }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbpedia:Eton_College .
  ?child dbo:childOf ?alumnus ;
         dbo:occupation dbp:politician .
  ?parent dbo:parentOf ?child .
  ?parent dbo:award <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  ?father dbo:fatherOf ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?birthPlace WHERE {
  # Glenn Youngkin's birthplace
  { 
    ?youngkin rdfs:label ""Glenn Youngkin""@en .
    ?youngkin dbo:birthPlace ?birthPlace .
    BIND(""Glenn Youngkin"" AS ?personLabel)
  }
  
  UNION
  
  # Awardee of Vince Gilligan's awards (example with one awardee)
  {
    ?gilligan rdfs:label ""Vince Gilligan""@en .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?birthPlace .
    ?gilligan dbo:nominatedFor|dbo:receivedAwards ?award .
    BIND(""Awardee of Vince Gilligan's awards"" AS ?personLabel)
  }
  
  UNION
  
  # Cece Bell's birthplace
  {
    ?author rdfs:label ""Cece Bell""@en .
    ?author dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?personLabel)
  }
}
```",5,5,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?miguelOffice ?commanderOffice WHERE {
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:office ?miguelOffice .
  
  ?commander a dbo:Politician ;
             dbo:position ?commanderPosition .
  FILTER(CONTAINS(LCASE(?commanderPosition), ""commander"") || CONTAINS(LCASE(?commanderPosition), ""officer""))

  ?conflict a dbo:MilitaryConflict ;
            dbo:participatedIn ?manuel .
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { ?commander dbo:office ?commanderOffice }
}",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?arthur rdfs:label ""Arthur Stanley""@en .
  FILTER NOT EXISTS { ?arthur dbo:occupation ?occupation . FILTER regex(?occupation, ""Royal Navy"") }
  ?arthur dbo:father ?father .

  ?victor rdfs:label ""Victor Stanley""@en .
  FILTER EXISTS { ?victor dbo:occupation ?occupation . FILTER regex(?occupation, ""Royal Navy"") }
  ?victor dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child ?father WHERE {
  ?philip rdfs:label ""Philip I of Castile""@en .
  ?philip dbo:child ?child .
  
  # Assuming royalty can be inferred by checking if the child has a title or role
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }
  
  ?child dbo:father ?father .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?child .
  OPTIONAL { ?child dbo:royalTitle ?title . }
}
```",1,2,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Ottoman_Empire .
  OPTIONAL { 
    ?order dbo:recipient ?entity ;
           rdfs:label ""Order of the Medjidie""@en .
  }
}
```",2,2,3,1,2,2,2,9,1,246,0,0.004048582995951417,1.0,0.00806451612903226
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalAssociatedArtist WHERE {
  # Step 1: Identify Khlyst (band)
  ?khlyst rdfs:label ""Khlyst""@en .
  
  # Step 2: Find members of the band who are musical artists
  ?khlyst dbo:member ?member .
  ?member a dbo:MusicalArtist .

  # Step 3: Find associated musical artist of the member
  ?member dbo:associatedMusicalArtist ?firstAssociatedArtist .

  # Step 4: Repeat for another level to find final associated artist
  ?firstAssociatedArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?spouse WHERE {
  # Step 1: Identify the author of ""Back to Work""
  ?book dbo:title ""Back to Work""@en .
  ?book dbo:author ?author .

  # Step 2 & 3: Find the commander of the U.S. Navy during World War II
  ?war rdfs:label ""World War II""@en .
  ?commander dbo:rank ""Admiral"" ;
             dbo:commanded ?navy ;
             foaf:name ?name .

  # Ensure the navy is the United States Navy
  ?navy rdfs:label ""United States Navy""@en .

  # Step 4: Check if this commander is married to the author and is a politician
  ?author dbo:spouse ?commander .
  ?commander foaf:name ?name ;
             dbo:officeHolder ?office .
  
  # Ensure the spouse is a politician and office holder
  ?office rdfs:label ?position .

  # Step 5: Verify connection to ""An Invitation to the White House""
  OPTIONAL {
    ?invitation dbo:title ""An Invitation to the White House""@en ;
                dbo:author ?commander .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?actor rdfs:label ""James Cagney""@en .
  ?actor dbo:role ?role .
  ?role rdfs:label ""Johnny Doughboy""@en .
  ?actor dbo:filmography ?work .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"```sparql
# Query 1: Identify the owner of USS Arcadia (ID-1605)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?owner WHERE {
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .
  ?ship dbo:ownedBy ?owner .
}

# Query 2: Find a book authored by Bill Clinton
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  ?author rdfs:label ""Bill Clinton""@en ;
          dbo:autobiography ?book .
}

# Query 3: Identify a disease that is also considered a societal event
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?disease WHERE {
  ?event a dbo:Disease ;
         rdfs:label ?label .
  FILTER CONTAINS(LCASE(?label), ""pandemic"" || ""epidemic"")
}

# Query 4: Find a commander associated with both the war (disease/societal event) and the owner of USS Arcadia
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?owner ?relation1 ?ship .
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .

  ?diseaseEvent a dbo:Disease ;
                dbo:commander ?commander .
  FILTER CONTAINS(LCASE(?diseaseEvent), ""pandemic"" || ""epidemic"")

  ?owner ?relation2 ?commander .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book dbo:title ""An Invitation to the White House""@en .
  ?book dbo:author ?author .
  ?author dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(?occupation), ""politician"") || 
     CONTAINS(LCASE(?occupation), ""office holder""))
  )
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?musicalArtist WHERE {
  # Find the actor of ""The Campus Queen""
  ?film rdfs:label ""The Campus Queen""@en .
  ?film dbo:actor ?actor .

  # Find Tiwa Savage and her associated musical artist
  ?tiwa rdfs:label ""Tiwa Savage""@en ;
        foaf:name ""Cynthia Ikponmwenosa Morgan"" .
  OPTIONAL { ?tiwa dbo:associatedMusicalArtist ?musicalArtist }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?siege dbo:event ""Siege of Mukha""@en .
  ?siege dbo:commander ?commander .
  
  FILTER EXISTS { ?commander rdf:type dbo:Monarch } .

  ?commander dbo:parent ?parent .
  
  FILTER EXISTS { ?parent rdf:type dbo:Monarch } .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?series WHERE {
  ?goldenMaster rdfs:label ""The Golden Master""@en .
  ?goldenMaster dbo:partOfSeries ?series .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?baedaMaryam1 rdf:type dbo:Monarch ;
                rdfs:label ""Baeda Maryam I""@en .
  ?baedaMaryam1 dbo:successorOrPredecessor ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?christian rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  OPTIONAL { ?christian dbo:office ?office . }
  OPTIONAL { ?christian dbo:positionHeld ?office . }
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?hidenaga rdfs:label ""Toyotomi Hidenaga""@en .
  ?hidenaga dbo:participatedIn ?war .
  FILTER (STRSTARTS(STR(?war), STR(<http://dbpedia.org/resource/Category:Wars_in_Japan>)))
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?cora rdfs:label ""Cora Sue Collins""@en .
  ?cora dbo:work ?work .
  ?work dbo:producer ?producer .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?almaMater WHERE {
  ?person rdfs:label ""Eleonora Menicucci""@en .
  ?person rdf:type dbo:Politician .
  ?person dbo:almaMater ?almaMater .
}
```",3,4,4,3,1,3,2,20,3,0,0,1.0,1.0,1.0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label WHERE {
  ?person dbo:birthName ""Koichirō""@en .
  OPTIONAL { ?person rdfs:label ?label FILTER (lang(?label) = 'en') }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthday WHERE {
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthDate ?birthday .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?child .
  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?childOfMinHla ?predecessor WHERE {
  # Find Saw Shwe Khet and their spouse
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .

  # Find the child of Saw Min Hla
  ?minHla rdfs:label ""Saw Min Hla""@en .
  ?minHla dbo:child ?childOfMinHla .

  # Find the child of Saw Shwe Khet and their predecessor
  ?sawShweKhetChild dbo:parent ?sawShweKhet .
  ?sawShweKhetChild dbo:predecessor ?predecessor .
}
```",4,4,5,2,3,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Identify Henry Clay Lewis and his birthplace
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is an American settlement
  ?birthPlace a dbo:Settlement ;
              dbo:country dbp:UnitedStates .

  # Identify the awardee of the Gillmore Medal
  ?gillmoreAwardee rdfs:label ?awardeeLabel .
  ?gillmoreAwardee dbo:award ""Gillmore Medal""@en .

  # Find the force associated with the awardee
  ?gillmoreAwardee dbo:militaryUnit ?force .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonProducer WHERE {
  { 
    ?cora rdfs:label ""Cora Sue Collins""@en .
    ?cora dbo:profession dbr:Film_producer .
    ?cora dbo:worksProduced ?work .
    ?work dbo:producer ?commonProducer .
  }
  UNION
  {
    ?starIsBorn rdfs:label ""A Star Is Born""@en .
    FILTER (YEAR(?starIsBorn) = 1937)
    ?starIsBorn dbo:producer ?commonProducer .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?recipient WHERE {
  ?award rdfs:label ""Sangeet Natak Akademi Fellowship""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?recipient WHERE {
  ?prize rdfs:label ""Nobel Prize in Physics""@en .
  ?recipient dbo:award ?prize .
}
```",1,1,2,1,1,3,2,20,31,132,0,0.1901840490797546,1.0,0.3195876288659794
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?spouse WHERE {
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:actor ?actor .
  ?actor dbo:politicalAffiliation ?party .
  ?party rdfs:label ""Republican Party (United States)""@en .
  ?actor dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?child WHERE {
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  ?alexander dbo:birthDate ?birth .
  ?alexander dbo:deathDate ?death .
  FILTER (?birth = ""1804-04-24""^^xsd:date && ?death = ""1881-06-6""^^xsd:date)
  ?alexander dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?native WHERE {
  ?shobhna rdfs:label ""Shobhna Samarth""@en .
  ?shobhna dbo:birthPlace ?birthplace .
  ?birthplace rdf:type <http://dbpedia.org/ontology/Country> .
  ?birthplace dbo:nativeName ?native .
}",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player WHERE {
  # Find Marcelo Sarmiento's birthdate and teams
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbo:birthDate ?birthdate .
  ?marcelo dbo:sport <http://dbpedia.org/resource/Soccer> .
  ?marcelo dbo:managerTeam ?team .

  # Find players in ""All or Nothing: Manchester City"" who are athletes
  ?show rdfs:label ""All or Nothing: Manchester City""@en .
  ?show dbo:actor ?player .
  ?player dbo:sport <http://dbpedia.org/resource/Soccer> .
  
  # Ensure the player is part of a team associated with Marcelo Sarmiento
  ?player dbo:team ?team .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shatrughanSinha rdfs:label ""Shatrughan Sinha""@en .
  ?shatrughanSinha dbo:profession ?profession .
}

UNION

SELECT ?alterEgo WHERE {
  ?theShadow rdfs:label ""The Shadow (video game)""@en .
  ?theShadow dbo:alterEgo ?alterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?central dbo:state ""Louisiana""@en .
  ?central dbp:government ?government .
  ?government dbo:politicalParty ?party .
}

SELECT ?birthName WHERE {
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Part 1: Find awards associated with George H. Cameron
  ?georgeH rdfs:label ""George H. Cameron""@en .
  ?georgeH dbo:award ?award .

  # Part 2: Find residences associated with Doug Beattie
  ?dougBeattie rdfs:label ""Doug Beattie""@en .
  ?dougBeattie dbo:residence ?residence .

  # Find common entities between awards and residences
  FILTER (?award = ?commonEntity || ?residence = ?commonEntity)
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence ?ukEntity WHERE {
  ?doug rdfs:label ""Doug Beattie""@en .
  
  OPTIONAL { 
    ?doug dbo:residence ?residence .
  }
  
  OPTIONAL {
    ?doug dbo:birthPlace ?ukEntity .
    FILTER (CONTAINS(LCASE(STR(?ukEntity)), ""united kingdom""))
  }
}
```",2,2,3,1,2,3,2,20,2,0,0,1.0,1.0,1.0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?lamont rdfs:label ""Lamont Cranston""@en .
  ?lamont dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:nativePlace ?place .
  ?place rdfs:label ""Grand Duchy of Finland""@en .
}

UNION

SELECT ?person WHERE {
  ?person dbo:nativePlace ?place .
  ?place rdfs:label ""Russia""@en .
}
```",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?alexander2 rdfs:label ""Alexander II, Grand Duke of Finland""@en .
  ?alexander2 dbo:nationality dbr:Russian_Empire .
  ?alexander2 dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?dawit rdfs:label ""Dawit I""@en .
  ?dawit dbo:child ?child .

  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?child dbo:parent ?baeda .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Identify the album ""Sappy""
  ?album rdfs:label ""Sappy""@en .
  
  # Find the writer of the album
  ?album dbo:composer ?writer .

  # Get band members of the writer's band
  ?writer dbo:bandMember ?bandMember .

  # Identify ""Filthy Friends"" and associated artists
  ?filthyFriends rdfs:label ""Filthy Friends""@en .
  ?filthyFriends dbo:associatedBand ?associatedArtist .

  # Check if any band member is also an associated artist of Filthy Friends
  FILTER (?bandMember = ?associatedArtist)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember ?associatedArtist ?writer WHERE {
  # Part 1: Band Member of The Alan Parsons Project
  ?project rdfs:label ""The Alan Parsons Project""@en .
  ?project dbo:bandMember ?bandMember .

  # Part 2: Associated Musical Artist of Stuart Tosh
  ?stuart rdfs:label ""Stuart Tosh""@en .
  ?stuart dbo:associatedMusicalArtist ?associatedArtist .

  # Part 3: Writer associated with Wizards of Waverly Place (Soundtrack)
  ?soundtrack rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .
  ?soundtrack dbo:composer ?writer .
  
  FILTER (?writer rdf:type dbo:MusicalArtist && ?writer rdf:type dbo:Artist)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?alexander rdfs:label ""Alexander II, Grand Duke of Finland""@en .
  ?alexander dbo:office ?office .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:creator ?creator .
  ?creator rdfs:label ""Walter B. Gibson""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Florida""@en .
}
```",1,1,2,1,1,3,3,71,970,0,1,1.0,0.9989701338825953,0.9994848016486347
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Identify VfL Bochum as a sports club, organization, and soccer club
  ?club rdfs:label ""VfL Bochum""@en .
  ?club dbo:type/dbo:subClassOf* dbo:SoccerClub ;
        dbo:type/dbo:subClassOf* dbo:SportsOrganization .

  # Find the manager during the 2007-08 season
  ?club dbp:managerDuringSeason ?manager .
  ?season rdfs:label ""2007–08 VfL Bochum season""@en .
  ?club dbp:season ?season .

  # Identify Theodor Heuss's nationality
  ?heuss dbo:nationality ?country .
  ?heuss rdfs:label ""Theodor Heuss""@en .

  # Ensure the manager is native to that country
  ?manager dbo:nationality ?country .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?athens rdfs:label ""Athens""@en .
  OPTIONAL { ?entity dbo:location ?athens . }
  OPTIONAL { ?entity dbp:city ?athens . }
}
```",1,1,2,1,1,2,3,28,0,261,12,0.0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band WHERE {
  ?award dbo:location ?ny .
  ?ny rdfs:label ""New York (state)""@en .
  ?award dbo:recipient ?band .
  ?band rdf:type dbo:Band .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie ?actor WHERE {
  # Find Janusz Kamiński's spouse
  ?janusz a dbo:Person ;
          rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .

  # Ensure the movie is a film and involves both Iliza Shlesinger and the spouse
  ?movie a dbo:Film ;
         dbo:starring ?iliza, ?spouseActor .
  
  ?iliza rdfs:label ""Iliza Shlesinger""@en .
  ?spouseActor foaf:name ?spouseName .

  # Match the spouse's name with Janusz Kamiński's spouse
  FILTER(?spouseName = ?spouseLabel)
  SERVICE <http://dbpedia.org/sparql> {
    ?spouse rdfs:label ?spouseLabel .
  }

  # Get other actors in the movie
  ?movie dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?entityInCharleston ?war ?award WHERE {
  # Identify Quincy Adams Gillmore
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  
  # Find his military force or role
  ?gillmore dbo:militaryUnit ?force .

  # Identify any entity related to Charleston, South Carolina
  OPTIONAL { 
    ?charleston rdfs:label ""Charleston, South Carolina""@en ;
                dbo:location ?entityInCharleston .
    ?gillmore dbo:participatedIn ?event .
    ?event dbo:location ?charleston .
  }

  # Determine the war he was involved in
  OPTIONAL { 
    ?war rdfs:label ?warLabel .
    ?gillmore dbo:participatedIn ?war .
  }
  
  # Find awards given by United States Congress
  OPTIONAL {
    ?award rdfs:label ?awardLabel ;
           dbo:awardedBy dbr:United_States_Congress .
    ?gillmore dbo:receivedAward ?award .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual WHERE {
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?albrecht dbo:child ?child1 .
  
  ?child1 dbo:child ?individual .

  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?archduke dbo:child ?child2 .
  ?child2 a dbo:Monarch .
  FILTER (?individual = ?child2)

  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?carl dbo:predecessor ?individual .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?artist rdfs:label ""T.I.""@en .
  ?artist dbo:work ?work .
  ?work rdf:type ?type .
  FILTER (
    EXISTS { ?work dbo:genre ""Song""@en } &&
    EXISTS { ?work rdf:type <http://dbpedia.org/ontology/MusicalWork> }
  )
}
```",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor ?ducasWriter WHERE {
  ?pac rdfs:label ""Michał Kazimierz Pac""@en .
  ?pac dbo:commanderOf ?force .
  
  ?force dbo:successor ?successor .

  ?successor dbo:officeHolder true .
  ?successor dbo:politicalParty ?party .

  ?ducasWriter dbo:authorOf ?work .
  ?work dbo:about ""George Ducas""@en .
  ?successor dbo:relatedTo ?ducasWriter .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leaderResidence WHERE {
  ?george rdfs:label ""George Savage""@en .
  ?george dbo:party ?party .
  ?party dbo:leader ?leader .
  ?leader dbo:residence ?leaderResidence .
}",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?season dbo:sportsTeam ?team .
  ?team rdfs:label ""VfL Bochum""@en .
  ?season dbo:startDate ?startYear .
  FILTER (YEAR(?startYear) = 2006 && MONTH(?startYear) >= 7 || YEAR(?startYear) = 2007 && MONTH(?startYear) < 7)
  
  ?successorSeason dbo:sportsTeam ?team .
  ?successorSeason dbo:seasonAfter ?season .

  ?manager dbo:managerOf ?successorSeason .
  ?manager dbo:nationality ?nationality .
  ?nationality rdfs:label ""West Germany""@en .

  ?manager a dbo:SoccerClub ;
           a dbo:Organization ;
           a dbo:SportsTeam .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?administeredTerritory ?mayor ?administeredByMayor WHERE {
  # Step 1: Identify Christian Ditlev Ammentorp Hansen
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  
  # Step 2: Find his death place
  ?hansen dbo:deathPlace ?deathPlace .

  # Step 3: Verify if the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 4: Identify territory administered from the death place
  ?administeredEntity dbo:administers ?administeredTerritory .
  ?administeredEntity dbo:location ?deathPlace .

  # Step 5: Find mayor of Duchy of Schleswig
  ?mayor rdfs:label ?mayorLabel .
  FILTER(CONTAINS(LCASE(?mayorLabel), ""mayor of duchy of schleswig""))

  # Step 6: Determine what the mayor administers
  ?mayor dbo:administers ?administeredByMayor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentAmy ?childAllan ?actorJudgment WHERE {
  # Find parent of Amy Arbus
  ?amy rdfs:label ""Amy Arbus""@en .
  ?amy dbo:parent ?parentAmy .

  # Find child of Allan Arbus and their parent
  ?allan rdfs:label ""Allan Arbus""@en .
  ?allan dbo:child ?childAllan .
  ?childAllan dbo:parent ?parentChildAllan .

  # Find actors in the movie Judgment: The Trial of Julius and Ethel Rosenberg
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actorJudgment .

  # Check for overlap between parents/children and actors
  {
    VALUES ?commonEntity { ?parentAmy ?childAllan ?parentChildAllan }
    ?commonEntity rdfs:label ?name .
    FILTER EXISTS { ?actorJudgment rdfs:label ?name . }
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?musicalArtist WHERE {
  ?anthology rdfs:label ""The Live Anthology""@en .
  ?anthology dbo:creator ?writer .
  
  ?writer dbo:profession ?profession1 .
  FILTER (CONTAINS(LCASE(str(?profession1)), ""writer"")) .

  ?writer dbo:profession ?profession2 .
  FILTER (CONTAINS(LCASE(str(?profession2)), ""musical artist"") || CONTAINS(LCASE(str(?profession2)), ""musician""))
  
  BIND(?writer AS ?musicalArtist)
}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?afeez rdfs:label ""Afeez Oyetoro""@en .
  ?afeez dbo:wikiPageExternalLink ?reference .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?cecilia rdfs:label ""Cecilia Renata of Austria""@en .
  ?cecilia dbo:parent ?father .
}

SELECT ?commander WHERE {
  ?regiment dbo:name ""2nd Dragoon Regiment (France)""@en .
  ?regiment dbo:commander ?commander .
}

SELECT ?event WHERE {
  ?commander dbo:relatedEvent ?event .
  ?event rdf:type dbo:SocietalEvent ;
         dbo:isTelevisionShow true .
}

SELECT ?child WHERE {
  ?father dbo:parent ?child .
  ?event dbo:relatedPerson ?child .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?kim rdfs:label ""Kim Wilson""@en .
  ?kim dbo:memberOfBand ?band .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?lamont rdfs:label ""Lamont Cranston""@en .
  { ?lamont dbo:work ?work . }
  UNION
  { ?lamont dbo:filmRole ?work . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander ?war WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:participatedIn ?conflict .
  ?conflict dbo:partOf ?war .
  FILTER (STRSTARTS(STR(?war), ""http://dbpedia.org/resource/War_of_the_""))
}
```",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement WHERE {
  # Henry Clay Lewis's birthplace as a settlement in America
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbp:UnitedStates .

  # Amasa Tracy's war participation
  ?amasa rdfs:label ""Amasa Tracy""@en .
  ?amasa dbo:participatedIn ?war .

  # Find a common settlement related to both
  OPTIONAL { ?birthPlace rdfs:seeAlso ?war . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherOfWilliamII ?royalChild ?childOfRoyalChild WHERE {
  # Step 1: Identify William II of Sicily and his father
  ?william2 rdfs:label ""William II of Sicily""@en .
  ?william2 dbo:father ?fatherOfWilliamII .

  # Step 2: Identify Constance of Burgundy's spouse
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouseOfConstance .

  # Step 3: Find the child of the spouse who is royalty
  ?spouseOfConstance dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 4: Find the child of that royal child
  ?royalChild dbo:child ?childOfRoyalChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  # Step 1: Identify Elorm Kabu Amenyah
  ?elorm a dbo:MusicalArtist ;
         rdfs:label ""Elorm Kabu Amenyah""@en .
  
  # Step 2: Find associated musical artist
  OPTIONAL { ?elorm dbo:associatedMusicalArtist ?associatedArtist . }
  
  # Step 3: Identify an artist from Central Region, Ghana
  ?artist a dbo:MusicalArtist ;
          dbp:nativePlace dbr:Central_Region,_Ghana ;
          rdfs:label ?birthName .
  
  # Step 4: Match birth name with associated musical artist
  FILTER (?associatedArtist = ?artist)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?alumnus ?birthPlace WHERE {
  ?university rdfs:label ""Пловдивски университет \""Паисий Хилендарски\""""@bg .
  ?university dbo:alumni ?alumnus .
  ?alumnus dbo:birthPlace ?birthPlace .
}",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?band rdfs:label ""Burnt by the Sun (band)""@en .
  OPTIONAL { ?band dbo:associatedBand ?associatedArtist . }
  OPTIONAL { ?band dbo:memberOf ?associatedArtist . }
  FILTER(?associatedArtist != ?band)
}
```",1,4,2,1,1,3,2,20,5,0,0,1.0,1.0,1.0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?manager WHERE {
  
  # Find VfL Bochum manager in the 2007-08 season
  ?bochum dbo:sport ""association football""@en .
  ?bochum dbp:season ""2007–08""@en .
  ?bochum dbo:manager ?manager2007_08 .

  # Find leader of West Germany and their native country
  ?leader dbo:countryLeaderOf <http://dbpedia.org/resource/West_Germany> .
  ?leader dbo:nativePlace ?nativeCountry .

  # Find SBV Vitesse manager in the 2020-21 season
  ?vitesse dbo:sport ""association football""@en .
  ?vitesse dbp:season ""2020–21""@en .
  ?vitesse dbo:manager ?manager2020_21 .

  # Combine conditions to find the common manager
  FILTER (?manager2007_08 = ?manager2020_21)
  FILTER EXISTS {
    ?person dbo:nativePlace ?nativeCountry .
    ?person = ?manager2007_08
  }
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalChild WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?margareteSophie dbo:parent ?parent .
  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .

  # Step 2: Find the child (royalty) of this parent
  ?parent dbo:child ?child1 .
  ?child1 rdf:type dbo:RoyalPerson .

  # Step 3: Find the spouse of Archduchess Helena of Austria
  ?helena dbo:spouse ?spouse .
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .

  # Step 4: Find the child (royalty) of this spouse
  ?spouse dbo:child ?child2 .
  ?child2 rdf:type dbo:RoyalPerson .

  # Step 5: Determine predecessor of the child from step 4
  ?predecessor dbo:succeededBy ?child2 .

  # Step 6: Find the child (royalty) of the child from step 2
  ?child1 dbo:child ?finalChild .
  ?finalChild rdf:type dbo:RoyalPerson .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?charlestonEntity ?war WHERE {
  # Find Medal of Honor awardees
  ?awardee dbo:award ?medal .
  ?medal rdfs:label ""Medal of Honor""@en .

  # Find entities in Charleston, South Carolina
  ?charlestonEntity dbp:location ?charlestonLocation .
  ?charlestonLocation rdfs:label ""Charleston, South Carolina""@en .

  # Find wars associated with awardees and Charleston entities
  ?awardee dbo:war ?war .
  OPTIONAL { ?charlestonEntity dbo:war ?war . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?siege rdfs:label ""Siege of Mukha""@en .
  ?siege dbo:commander ?commander .
  OPTIONAL { ?commander dbo:royalTitle ?title . }
  FILTER EXISTS { ?commander dbo:royalTitle ?title }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:father ?father .
  OPTIONAL { ?father dbo:royalty ?isRoyalty . FILTER(?isRoyalty != nil) }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?album rdfs:label ""The Miseducation of Lauryn Hill""@en .
  ?album dbo:artist ?person ;
         (dbo:composer|dbo:writer) ?person .
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?teammate WHERE {
  ?agüero rdfs:label ""Sergio Agüero""@en .
  ?agüero dbo:team ?team .
  ?team dbo:member ?teammate .
  FILTER(?teammate != ?agüero)
}

SELECT ?team WHERE {
  ?aimar rdfs:label ""Pablo Aimar""@en .
  ?aimar dbo:team ?team .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual WHERE {
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?child dbo:parent ?sawMinHla .

  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?spouse dbo:spouse ?sawShweKhet .

  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?predecessor dbo:successor ?myatHponePyo .

  FILTER (?child = ?spouse && ?child = ?predecessor)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?filmLabel ?producer WHERE {
  VALUES ?filmLabel { ""The Adventures of Tom Sawyer (1938 film)""@en ""A Star Is Born (1937 film)""@en }
  
  ?film rdfs:label ?filmLabel .
  ?film dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  VALUES ?personLabel { ""Toyotomi Hidenaga""@en ""Hashiba Hidekatsu""@en }
  
  ?person rdfs:label ?personLabel .
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?duke rdfs:label ""Duke Anthony Ulrich of Brunswick""@en .
  ?duke dbo:child ?dukeEntity .
  ?dukeEntity dbo:parent ?parent .
  ?parent a dbo:Monarch ; # Ensures the parent is royalty
          rdfs:label ?name .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?band rdfs:label ""Filthy Friends""@en .
  ?band dbo:associatedBand ?artist .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:party dbpedia:Spanish_Socialist_Workers'_Party ;
          dbo:country dbpedia:Spain .
}
```",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Arthur Stanley (politician)
  ?arthur rdfs:label ""Arthur Stanley""@en .
  
  # Step 2: Find his father
  ?arthur dbo:father ?father .

  # Step 3: Identify Edward Stanley, 17th Earl of Derby
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .

  # Step 4: Find a child of Edward Stanley who is both a politician and an office holder
  ?child dbo:parent ?edward .
  ?child rdf:type dbo:Politician ;
         dbo:officeHolder true .

  # Step 5: Identify the parent of this child (should be Edward Stanley)
  ?child dbo:parent ?parent .

  # Step 6: Check if there's a common entity between Arthur Stanley's father and the identified parent
  FILTER (?father = ?parent)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?individual WHERE {
  # Stephen V of Hungary's child
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?child dbo:parent ?stephenV .

  # Philip I, Prince of Taranto's father and his spouse
  ?philipI rdfs:label ""Philip I, Prince of Taranto""@en .
  ?father dbo:child ?philipI .
  ?spouse dbo:spouse ?father .

  # Charles Martel of Anjou's parent
  ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
  ?parent dbo:child ?charlesMartel .

  # Find the common individual
  FILTER (?child = ?spouse && ?child = ?parent)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonFather WHERE {
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?eleonore dbo:father ?commonFather .

  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaRenata dbo:father ?commonFather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  
  # Step 1: Identify Saw Shwe Khet's child
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?child .
  
  # Step 2: Find Myat Hpone Pyo and her father's spouse
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:father ?father .
  ?father dbo:spouse ?mother .
  
  # Step 3: Check if they are royalty and find predecessors
  OPTIONAL { ?child a dbo:Monarch . }
  OPTIONAL { ?mother a dbo:Monarch . }
  
  OPTIONAL { ?child dbo:predecessor ?predecessorChild . }
  OPTIONAL { ?mother dbo:predecessor ?predecessorMother . }

  FILTER(?predecessorChild || ?predecessorMother)
}
",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?club rdfs:label ""1. FC Magdeburg""@en .
  ?club dbo:member ?member .
}

UNION

SELECT ?designer WHERE {
  ?car rdfs:label ""Aston Martin AMR1""@en .
  ?car dbo:designer ?designer .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?profession WHERE {
  ?show dbo:title ""Ab Kya Hoga""@en .
  ?show dbo:castMember ?actor .
  
  OPTIONAL { 
    ?actor dbo:politicalAffiliation ?politics .
    FILTER EXISTS { ?politics a dbo:PoliticalParty } # Ensures the actor has political affiliation
  }
  
  ?actor dbo:profession ?profession .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resident WHERE {
  ?sofia rdfs:label ""Sofia""@en .
  ?sofia dbo:resident ?resident .
}
```",1,1,2,1,1,3,2,20,0,0,16,0,0.0,0
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:associatedMusicalArtist ?artist .
}
```",1,2,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?series rdfs:label ""Dispatches from Elsewhere""@en .
  ?series dbo:actor ?actor .
}

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alias ?alterEgo .
}

SELECT ?profession WHERE {
  ?person rdfs:label ""Shatrughan Sinha""@en .
  ?person dbo:profession ?profession .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  
  # Step 2: Find Philip's parent who is a royalty
  ?philip dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER regex(?parentLabel, ""King|Queen|Prince|Princess"", ""i"") .

  # Step 3: Identify the father of this royal parent
  ?parent dbo:parent ?grandfather .
  
  # Step 4: Find the spouse of this grandfather (royalty)
  ?grandfather dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?winston rdfs:label ""Winston Chang""@en .
  ?winston dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?quintana rdfs:label ""Anxo Quintana""@en .
  ?quintana dbo:positionHeld ?event .
  ?event dbo:office ?office .
  ?office dbo:country dbr:Spain ;
          dbo:member ?party .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person rdfs:label ""Eleonora Menicucci de Oliveira""@en .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:almaMater ?almaMater .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?alterEgo WHERE {
  # Part 1: Father of Baeda Maryam I
  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:father ?father .

  # Part 2: Alter ego of Lamont Cranston
  ?lamont rdfs:label ""Lamont Cranston""@en .
  OPTIONAL { ?lamont rdfs:label ?alterEgo . FILTER(CONTAINS(LCASE(?alterEgo), ""the shadow"")) }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  ?child dbo:childOf ?frederick ;
         dbo:almaMater <http://dbpedia.org/resource/Eton_College> ;
         rdf:type dbo:Politician .

  OPTIONAL { ?parent dbo:spouse ?frederick . }
  OPTIONAL { ?parent dbo:spouse ?otherParent .
             ?child dbo:childOf ?otherParent .
           FILTER(?otherParent != ?frederick) }

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?rem rdfs:label ""R.E.M.""@en .
  ?rem dbo:associatedMusicalArtist ?artist .
}
```",1,2,2,1,1,3,2,20,2,12,0,0.14285714285714285,1.0,0.25
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find films associated with Nat Levine
SELECT ?film WHERE {
  ?nat a dbo:Film ;
      dbo:director ?natLevine .
  FILTER(CONTAINS(LCASE(str(?natLevine)), ""nat levine""))
}

# Step 2: For each film, find actors involved
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  VALUES ?film { <film_uri_1> <film_uri_2> ... } # Replace with actual URIs from step 1
}

# Step 3: Find spouse of each actor
SELECT DISTINCT ?spouse WHERE {
  ?actor dbo:spouse ?spouse .
  VALUES ?actor { <actor_uri_1> <actor_uri_2> ... } # Replace with actual URIs from step 2
}

# Step 4: Identify landmark and ruling party
SELECT DISTINCT ?partyMember WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
  
  ?rulingParty dbp:rulingPartyAt ?landmark .
  ?partyMember dbo:memberOf ?rulingParty .
}

# Step",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film rdfs:label ""Paradise""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2013)
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent ?spouse WHERE {
  # Step 1: Identify Dorothea of Lorraine's father
  ?dorothea rdfs:label ""Dorothea of Lorraine""@en .
  ?dorothea dbo:father ?father .

  # Step 2: Find the parent (grandparent) of Dorothea's father
  ?father dbo:father ?parent .
  
  # Ensure the grandparent is also a parent of Francis I, Duke of Lorraine
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis dbo:parent ?parent .

  # Step 3: Identify the spouse of this parent (grandparent)
  ?parent dbo:spouse ?spouse .

  # Step 4: Filter for royalty and nobility
  FILTER EXISTS { ?parent a dbo:RoyalFamilyMember . }
  FILTER EXISTS { ?spouse a dbo:RoyalFamilyMember . }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  # Step 1: Find Stephen V's predecessor
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:predecessor ?stephenV .

  # Step 2: Find the spouse of the father of Philip's royal parent
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  ?royalParent dbo:child ?philip ;
               a dbo:Monarch .
  ?fatherOfRoyalParent dbo:parent ?royalParent .
  ?spouseOfFather dbo:spouse ?fatherOfRoyalParent .

  # Step 3: Find the child of the child (royalty) of the predecessor
  ?predecessorChild dbo:child ?predecessor ;
                    a dbo:Monarch .
  ?childOfPredecessorChild dbo:child ?predecessorChild ;
                           a dbo:Monarch .

  # Step 4: Find intersection or connection
  FILTER (?spouseOfFather = ?childOfPredecessorChild)
  
  BIND(?childOfPredecessorChild AS ?childOfChild)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumArtist WHERE {
  ?song dbo:title ""What You Know""@en .
  ?song dbo:artist dbr:T.I. .
  ?song dbo:album ?album .
  ?album dbo:artist ?albumArtist .
}
```",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?project rdfs:label ""The Alan Parsons Project""@en .
  ?project dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?vince dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?individual WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Find his father
  ?philip dbo:father ?father .

  # Step 3: Find the parent of his father (grandfather)
  ?father dbo:father ?grandfather .

  # Step 4: Retrieve the spouse(s) of the grandfather and filter for royalty
  ?grandfather dbo:spouse ?spouse .
  ?spouse rdf:type ?type .
  FILTER (?type = dbo:Monarch || ?type = dbo:RoyalFamilyMember)

  # Step 5: Identify Stephen V of Hungary and find his children
  ?stephen rdfs:label ""Stephen V of Hungary""@en .
  ?stephen dbo:child ?child .

  # Step 6: Identify Maria of Bytom and her spouse(s)
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?mariaSpouse .

  # Final step: Find the intersection
  FILTER (?spouse = ?child && ?spouse = ?mariaSpouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalSpouse WHERE {
  ?antoinette rdfs:label ""Antoinette of Brunswick-Wolfenbüttel""@en .
  
  ?child dbo:parent ?antoinette ;
         a dbo:RoyalFamilyMember .

  ?spouse1 dbo:spouse ?child .

  ?finalSpouse dbo:spouse ?spouse1 .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show WHERE {
  ?nobelPrize rdfs:label ""Nobel Prize in Physics""@en .
  ?nobelPrize dbo:organizer ?host .
  ?host a dbo:EducationalOrganization .
  ?show dbo:organizer ?host .
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?song ?actor WHERE {
  # Find the series ""The Golden Master""
  ?series dbo:title ""The Golden Master""@en .
  
  # Find alter ego in the series
  ?character dbo:characterName ?alterEgo ;
             dbo:partOfSeries ?series .

  # Find T.I.'s songs or albums
  ?song dbo:artist <http://dbpedia.org/resource/T.I._(rapper)> ;
        rdfs:label ?songLabel .
  
  # Find actors involved with the song or album
  OPTIONAL { 
    ?album dbo:song ?song .
    ?album dbo:performer ?actor .
  }
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?rod rdfs:label ""Rod Argent""@en .
  ?rod dbo:occupation ?profession .
  
  ?other rdf:type dbo:Person .
  ?other dbo:occupation ?profession .
  FILTER(?other != ?rod)
}
```",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successorSeason WHERE {
  ?vflBochumSeason rdfs:label ""2006–07 VfL Bochum season""@en .
  ?vflBochumSeason dbo:participatedInLeague ?league .
  
  ?nextSeason dbo:participatedInLeague ?league ;
              dbo:season ?successorYear .

  FILTER(?successorYear > ""2006-2007""^^xsd:string)
}
ORDER BY ?successorYear
LIMIT 1
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson""@en .
  ?bob a dbo:MusicalArtist .
  ?bob dbo:band ?band .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthplace WHERE {
  { 
    ?person rdfs:label ""Scott LaFaro""@en .
    ?person dbo:birthPlace ?birthplace .
  }
  UNION
  {
    ?person rdfs:label ""Bob Crewe""@en .
    ?person dbo:birthPlace ?birthplace .
  }
}
```",2,2,3,1,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?grant rdfs:label ""Richard E. Grant""@en .
  
  # Find films Richard E. Grant acted in
  ?film dbo:starring ?grant ;
        dbo:starring ?coActor .

  # Ensure the co-actor is also an actor
  ?coActor rdf:type dbo:Actor .

  # Find television series Richard E. Grant acted in
  ?tvSeries dbo:starring ?grant ;
            dbo:starring ?coActor .
  
  FILTER(?film != ?tvSeries) # Ensure it's the same co-actor in both film and TV series

  BIND(?coActor AS ?actor)
}
```",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?person WHERE {
  # Find Tony Hollings' birthdate
  ?tony a dbo:Person ;
        rdfs:label ""Tony Hollings""@en ;
        dbo:birthDate ?birthDate .

  # Find individuals born on the same date as Tony Hollings
  ?person a dbo:Person ;
          dbo:birthDate ?sameBirthDate .
  
  FILTER (?sameBirthDate = ?birthDate)

  # Check if they are an athlete, soccer player, sports manager, and soccer manager
  OPTIONAL { ?person dbo:athlete true . }
  OPTIONAL { ?person dbo:soccerPlayer true . }
  OPTIONAL { ?person dbo:sportsManager true . }
  OPTIONAL { ?person dbo:soccerManager true . }

  # Ensure all roles are present
  FILTER (BOUND(?person) && 
          EXISTS { ?person dbo:athlete true } &&
          EXISTS { ?person dbo:soccerPlayer true } &&
          EXISTS { ?person dbo:sportsManager true } &&
          EXISTS { ?person dbo:soccerManager true })
}
```",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Placeholder for when specific entity information is provided.
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  # Replace `?entity` with the actual resource URI or label of the target entity
  ?entity a dbo:Entity .
  ?entity dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,2,2,9,0,0,98447,0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityLabel ?parent WHERE {
  { 
    ?photographer rdfs:label ""Annie Leibovitz""@en .
    ?photographer dbo:parent ?parent .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  } UNION
  { 
    ?doonArbus rdfs:label ""Doon Arbus""@en .
    ?doonArbus dbo:parent ?parent .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Arthur Stanley (politician) and his father
  ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
  ?arthur dbo:father ?father .

  # Frederick Stanley, 16th Earl of Derby, and one of his children
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:parent ?frederick ;
         dbo:parent ?commonParent .

  # Common parent between Arthur Stanley's father and Frederick Stanley's child
  FILTER (?father = ?commonParent)

  # Check if the common parent is an awardee of Commander of the Royal Victorian Order
  OPTIONAL { ?commonParent dbo:honours <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> }
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?settlement WHERE {
  # Amasa Tracy's War
  ?tracy dbo:militaryService ?service .
  ?service dbo:conflict ?war .

  # Quincy Adams Gillmore's Birthplace
  ?gillmore dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbp:country ""United States""^^xsd:string .

  # Person Deceased on 1850-08-05 and part of Gillmore's force
  ?person dbo:dateOfDeath ?deathDate ;
          dbo:militaryService ?gillmoresForce .
  ?gillmoresForce dbo:commander ?gillmore .
  FILTER (STR(?deathDate) = ""1850-08-05""^^xsd:gYearMonth)

  # Ensure the birthplace is the same as the settlement
  ?person dbo:birthPlace ?settlement .

  # Return the war and the settlement
  BIND(?war AS ?resultWar)
  BIND(?settlement AS ?resultSettlement)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""musicalartist""))
  ?person dbo:bandMember ?band .
}
```",2,3,3,2,1,3,3,71,0,0,61,0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?maria rdfs:label ""Maria Anna of Bavaria""@en .
  ?maria dbo:birthYear ""1574""^^xsd:gYear .

  ?maria dbo:child ?child .
  ?child dbo:father ?father .
  ?father dbo:child ?grandchild .

  OPTIONAL { ?grandchild dbo:royaltyTitle ?title . FILTER(?title != """") }
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Identify Rodney Lees' award and the awardee's parent
SELECT ?award ?awardee ?parent WHERE {
  ?award dbo:recipient ?lees .
  ?lees rdfs:label ""Rodney Lees""@en .
  ?award dbp:name ?awardName .
  ?awardee dbo:recipient ?award .
  ?awardee dbo:parent ?parent .
}

# Step 2: Identify Edward Stanley, 17th Earl of Derby's child and the child's parent
SELECT ?stanley ?child ?childParent WHERE {
  ?stanley rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?stanley dbo:child ?child .
  ?child dbo:parent ?childParent .
  ?childParent dbo:officeHolder ?office .
}

# Step 3: Find common parent if any
SELECT DISTINCT ?commonParent WHERE {
  VALUES (?parent1) { (<result_from_step_1_parent>) }
  VALUES (?parent2) { (<result_from_step_2_childParent>) }
  FILTER(?parent1 = ?parent2)
  BIND(?parent1 AS ?commonParent)
}
```

Note: The placeholders `<result_from_step_1_parent>` and `<result_from_step_2_childParent>` need to be replaced with actual URIs obtained from the results of the first two queries.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?reference WHERE {
  # Step 1: Identify Baeda Maryam I
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  
  # Step 2: Find his child
  ?child dbo:parent ?baedaMaryamI .

  # Step 3: Identify the father of this child (likely Baeda Maryam I)
  ?father dbo:parent ?child .

  # Step 4: Find the grandfather (father of the father)
  ?grandfather dbo:parent ?father .

  # Step 5: Check if the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch .
  ?grandfather a dbo:OfficeHolder .

  # Step 6: Retrieve references for this individual
  ?grandfather dbo:reference ?reference .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?greatGreatGrandchild WHERE {
  ?alexander rdfs:label ""Alexander of Württemberg (1804-1881)""@en .
  ?margarete rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?alexander dbo:spouse ?margarete .
  ?child dbo:childOf ?alexander ; dbo:childOf ?margarete .
  ?grandchild dbo:childOf ?child .
  ?greatGrandchild dbo:childOf ?grandchild .
  ?greatGreatGrandchild dbo:childOf ?greatGrandchild .
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tvShow ?abstract WHERE {
  ?tvShow rdfs:label ""Vikings""@en .
  OPTIONAL { ?tvShow dbo:wikiPageRedirects ?redirect . }
  ?tvShow dbo:abstract ?abstract .
}
```",2,4,3,2,1,3,3,71,0,2,1,0.0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Rod Argent's profession
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Find Joey B's birth name
  ?joeyB rdfs:label ""Joey B""@en .
  ?joeyB foaf:name ?birthName .

  # Find a person with the same profession as Rod Argent and the same birth name as Joey B
  ?person dbo:profession ?profession .
  ?person foaf:name ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?pacelyArtist ?ghanaianArtist WHERE {
  # Step 1: Identify $pacely
  ?pacelyArtist rdfs:label ""$pacely""@en .
  
  # Step 2: Confirm Rod Argent's profession
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:profession ?musicianRole .
  FILTER(?musicianRole = dbp:musician)

  # Step 3: Identify the artist from Central Region, Ghana
  ?ghanaianArtist dbo:birthPlace ?centralRegionGhana .
  ?centralRegionGhana rdfs:label ""Central Region, Ghana""@en .
  ?ghanaianArtist rdfs:label ?birthName .
  
  # Step 4: Find association between $pacely and the Ghanaian artist
  OPTIONAL { ?pacelyArtist dbo:associatedBand ?commonBand . }
  OPTIONAL { ?ghanaianArtist dbo:associatedBand ?commonBand . }
  FILTER(?commonBand != NULL)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?designer WHERE {
  ?car rdfs:label ""Aston Martin AMR1""@en .
  ?car dbo:designer ?designer .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?charge rdfs:label ""Pickett's Charge""@en .
  ?charge dbo:militaryUnit ?unit .
  ?unit dbo:commander ?commander .
  ?war rdfs:label ""American Civil War""@en .
  ?unit dbo:participatedInWar ?war .
}
```",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?ada rdfs:label ""Ada Jane Low""@en .
  ?ada dbo:occupation dbo:Politician .
  ?ada dbo:predecessor ?predecessor .
}",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?actor rdfs:label ""Herschel Bernardi""@en .
  ?actor dbo:filmRole ?role .
  ?role dbo:work ?movie .
}
```",1,2,2,1,1,3,3,71,0,0,13,0,0.0,0
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?birthplaceEntity WHERE {
  # Step 1: Identify Quincy Adams Gillmore's award
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:award ?award .

  # Step 2: Find the awardee of that award and their force
  ?awardee dbo:award ?award .
  ?awardee dbo:militaryUnit ?force .

  # Step 3: Identify Henry Clay Lewis's birthplace
  ?lewis rdfs:label ""Henry Clay Lewis""@en .
  ?lewis dbo:birthPlace ?birthplace .
  
  # Ensure the birthplace is a settlement in America
  ?birthplace rdf:type dbo:Settlement ;
              dbp:country ""United States"" .

  BIND(?force AS ?force)
  BIND(?birthplace AS ?birthplaceEntity)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?author rdfs:label ""Cece Bell""@en .
  ?author dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?siege rdfs:label ""Siege of Mukha""@en .
  
  # Find commanders involved in the siege
  ?siege dbo:commander ?commander .

  # Filter for royal commanders
  ?commander a dbo:Monarch .

  # Find parent(s) of the royal commander
  ?commander dbo:parent ?parent .

  # Identify child(ren) of the parent who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?birthPlaceEntity WHERE {
  ?yamaza rdfs:label ""Yamaza Enjirō""@en .
  ?yamaza dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  OPTIONAL { ?birthPlace dbo:wikiPageRedirects ?redirect . }
  BIND(COALESCE(?redirect, ?birthPlace) AS ?finalBirthPlace)
  ?finalBirthPlace rdfs:label ?birthPlaceEntity .
}

UNION

SELECT DISTINCT ?war WHERE {
  ?hidekatsu rdfs:label ""Hashiba Hidekatsu""@en .
  ?hidekatsu dbo:participatedInBattle ?battle .
  ?battle dbo:wikiPageRedirects ?redirect .
  BIND(COALESCE(?redirect, ?battle) AS ?finalWar)
  ?finalWar rdfs:label ?war .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  { 
    ?bela rdfs:label ""Béla IV of Hungary""@en .
    ?bela dbo:child ?royalChild .
    ?royalChild a dbo:Monarch .
    ?royalChild dbo:child ?entity .
  }
  UNION
  {
    ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
    ?philip dbo:father ?father .
    ?father dbo:spouse ?entity .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalty WHERE {
  # Step 1: Identify Minye Kyawswa's child
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?child dbo:parent ?minyeKyawswa .

  # Step 2: Find the parent of that child (should be Minye Kyawswa)
  ?parent dbo:child ?child .

  # Step 3: Identify Myat Hpone Pyo's predecessor
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?predecessor dbo:predecessor ?myatHponePyo .

  # Step 4: Find the spouse of Myat Hpone Pyo's father
  ?father dbo:child ?myatHponePyo .
  ?spouse dbo:spouse ?father .

  # Step 5: Ensure the entity is royalty
  ?royalty rdfs:label ?spouseLabel .
  FILTER (?spouse = ?parent || ?spouse = ?predecessor)
  ?royalty a dbo:Royal .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?playerMolina ?actorSoccerAthlete ?soccerManager ?team WHERE {
  # Find Juan Carlos Molina and any player associated with him
  ?molina rdfs:label ""Juan Carlos Molina (footballer)""@en .
  ?molina dbo:playsFor ?playerMolina .

  # Find actor from ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?actor foaf:name ?nameActor ;
         dbo:role ?role ;
         dbo:sport ?sport .
  FILTER(CONTAINS(LCASE(?role), ""all or nothing: manchester city"") && 
         CONTAINS(LCASE(?sport), ""soccer"") &&
         CONTAINS(LCASE(?sport), ""athlete""))
  BIND(?actor AS ?actorSoccerAthlete)

  # Find person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:sport ?sportPlayer .
  FILTER(CONTAINS(LCASE(?",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Antoine, Duke of Lorraine
  ?antoine rdf:type dbo:Duke ;
           rdfs:label ""Antoine, Duke of Lorraine""@en .
  
  # Step 2: Find his children who are royalty
  ?child dbo:parent ?antoine ;
         rdf:type dbo:Monarch .

  # Step 3: Identify the parent of this child (excluding Antoine)
  ?otherParent dbo:child ?child ;
               rdf:type dbo:Monarch ;
               dbo:nobleTitle ?title .
  
  # Step 4: Find the spouse of this other parent
  ?otherParent dbo:spouse ?spouse .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  ?cokeStudio rdfs:label ""Coke Studio Philippines""@en .
  ?cokeStudio dbo:producer ?producer .
  ?producer dbo:profession ?profession .
  
  ?otherPerson dbo:profession ?profession .
  ?otherPerson rdfs:label ?professionalLabel .

  FILTER(?otherPerson != ?producer)
}
```",3,3,4,3,1,3,3,71,0,0,46017,0,0.0,0
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Charles I of Hungary's father and his royal parent
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?charlesI dbo:father ?fatherOfCharlesI .
  ?parentOfFather dbo:child ?fatherOfCharlesI .

  # Philip I, Prince of Taranto's grandfather and spouse
  ?philipI rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philipI dbo:father ?fatherOfPhilipI .
  ?spouseOfGrandfather dbo:spouse ?fatherOfPhilipI .

  # Béla IV of Hungary's descendant lineage
  ?belaIV rdfs:label ""Béla IV of Hungary""@en .
  ?royalChild dbo:child ?belaIV .
  ?grandchild dbo:child ?royalChild .

  # Find the common entity
  FILTER (?parentOfFather = ?spouseOfGrandfather)
  FILTER (?parentOfFather = ?commonEntity)
}",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?pacelyArtist ?joeyBBirthName ?associatedMusician WHERE {
  # Find $pacely and their associated musical artist
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely dbo:associatedBand ?pacelyArtist .

  # Find Joey B's birth name
  ?joeyB foaf:name ?joeyBBirthName .
  FILTER(CONTAINS(LCASE(?joeyB), ""joey b""))

  # Find the associated musician with Joey B
  ?joeyB dbo:profession dbr:Musician .
  ?joeyB dbo:associatedBand ?associatedMusician .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  { 
    ?cece rdfs:label ""Cece Bell""@en .
    ?cece dbo:birthPlace ?birthPlace .
    BIND(?cece AS ?person)
  } UNION {
    ?award dbo:recipient ?awardee .
    ?gilligan rdfs:label ""Vince Gilligan""@en .
    ?gilligan dbo:receivedAward ?award .
    ?awardee dbo:birthPlace ?birthPlace .
    BIND(?awardee AS ?person)
  } UNION {
    ?youngkin rdfs:label ""Glenn Youngkin""@en .
    ?youngkin dbo:birthPlace ?birthPlace .
    BIND(?youngkin AS ?person)
  }
}",5,5,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?commander WHERE {
  # Find the author of ""Back to Work""
  ?book rdfs:label ""Back to Work""@en .
  ?book dbo:author ?author .

  # Find the commander in the Third Taiwan Strait Crisis
  ?crisis rdfs:label ""Third Taiwan Strait Crisis""@en .
  OPTIONAL { ?crisis dbp:commander ?commander . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?author rdfs:label ""Kent Allard""@en .
  ?author dbo:alterEgo ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  { 
    ?vince rdfs:label ""Vince Gilligan""@en .
    ?vince dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?governor dbo:office <http://dbpedia.org/resource/Office_of_the_Governor_of_Virginia> ;
             dbo:positionTitle ""Governor of Virginia"" ;
             dbo:birthPlace ?birthPlace .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?greatGrandchild WHERE {
  # Step 1: Identify Alexander of Württemberg and his children
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  ?alexander dbo:child ?child .

  # Step 2: Find one child's child (grandchild)
  ?child dbo:child ?grandchild .

  # Step 3: Find grandchild's child (great-grandchild)
  ?grandchild dbo:child ?greatGrandchild1 .

  # Step 4: Identify Archduchess Margarete Sophie of Austria and her parent
  ?margarete rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?parent dbo:child ?margarete .

  # Step 5: Find one child's child (grandchild) of the parent
  ?parent dbo:child ?grandchild2 .

  # Step 6: Find grandchild's child (great-grandchild)
  ?grandchild2 dbo:child ?greatGrandchild2 .

  # Step 7: Check if any great-grandchildren are royalty and match both criteria
  FILTER (?greatGrandchild1 = ?greatGrandchild2",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence ?office WHERE {
  ?person rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?person dbo:office ?office .
  ?person dbo:residence ?residence .
  OPTIONAL { ?office dbp:commander ?tenant }.
  FILTER (STRSTARTS(STR(?office), ""http://dbpedia.org/resource/Office_of_the_Commander"") || STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/Residence""))
}",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Find Charles Martel of Anjou's parent
  ?charlesMartel rdfs:label ""Charles Martel, Count of Anjou""@en .
  ?charlesMartel dbo:parent ?parent .

  # Find Béla IV of Hungary's grandchild who is royalty
  ?belaIV rdfs:label ""Béla IV of Hungary""@en .
  ?belaIVChild dbo:childOf ?belaIV .
  ?belaIVGrandchild dbo:childOf ?belaIVChild .
  ?belaIVGrandchild a dbo:Monarch .

  # Find Charles II of Naples' spouse
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?spouse .

  # Check for common entity
  FILTER (?parent = ?commonEntity || ?belaIVGrandchild = ?commonEntity || ?spouse = ?commonEntity)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?ekaterina rdfs:label ""Ekaterina Zaharieva""@en .
  ?ekaterina dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         a dbo:TelevisionSeries ;
         a dbo:Work .
  
  ?movie dbo:creator ?author .

  ?person rdfs:label ?name ;
          dbo:artist true ;
          dbo:musicalArtist true ;
          dbo:dateOfDeath ""2020-06-18""^^xsd:date .

  FILTER(CONTAINS(LCASE(?name), ""deceased"")) .
  
  FILTER(?author = ?person)
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?minHlaHtut dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,5,0,0,1.0,1.0,1.0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander30th ?conflict30th ?bayneForce WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:commander ?commander30th .
  ?regiment dbo:participatedIn ?conflict30th .

  # Find William Bayne's military force in the Battle of Cape Finisterre
  ?bayne rdfs:label ""William Bayne""@en .
  ?bayne dbo:participatedIn ?battle .
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?bayne dbo:militaryForce ?bayneForce .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?cynthia rdfs:label ""Cynthia Morgan""@en .
  ?cynthia dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?agüeroTeam ?aimarTeam ?athlete WHERE {
  # Sergio Agüero's team
  ?agüero rdfs:label ""Sergio Agüero""@en .
  ?agüero dbo:team ?agüeroTeam .

  # Pablo Aimar's team
  ?aimar rdfs:label ""Pablo Aimar""@en .
  ?aimar dbo:team ?aimarTeam .

  # Athlete born on 1955-02-22
  ?athlete rdf:type dbo:Athlete ;
           dbo:birthDate ""1955-02-22""^^xsd:date .
}
```",4,5,5,2,3,3,3,71,1,23,0,0.041666666666666664,1.0,0.07999999999999999
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?royalParent ?child WHERE {
  # Step 1: Find Baeda Maryam I and his father
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?baedaMaryamI dbo:father ?father .

  # Step 2: Check if the father is royalty
  OPTIONAL { ?father dbo:royalTitle ?title . }

  # Step 3: Find the commander in Siege of Mukha and their parent(s)
  ?siege rdfs:label ""Siege of Mukha""@en .
  ?siege dbo:commander ?commander .
  ?commander dbo:parent ?parent .

  # Step 4: Check if the parent is royalty
  OPTIONAL { ?parent dbo:royalTitle ?title2 . }

  # Step 5: Identify any children of this royal parent
  OPTIONAL { ?parent dbo:child ?child . }
  
  FILTER (?father = ?parent) # Ensure we are comparing the same entity
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work ?otherAuthor WHERE {
  ?aleksandr rdfs:label ""Aleksandr Filimonov""@en .
  ?aleksandr dbo:work ?work .
  ?work dbo:author ?otherAuthor .
  FILTER(?otherAuthor != ?aleksandr)
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ship ?commander ?war WHERE {
  VALUES ?ship { 
    dbr:HMS_Prince_of_Wales_(53) 
    dbr:HMS_Repulse_(1916)
  }
  
  ?ship dbo:commandedBy ?commander .
  OPTIONAL { ?commander dbo:participatedInWar ?war . }
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?role WHERE {
  ?person rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?person dbo:militaryCommanderOf ?war .
  ?war rdfs:label ?role .
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?war rdfs:label ""Russo-Polish War (1654–1667)""@en .
  ?commander dbo:militaryCommanderOf ?war ;
             dbo:succeededBy ?successor .
  ?successor a dbo:Politician ;
             dbp:officeHolder true .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?birthPlace WHERE {
  # Find Mary Elphinstone and her parents
  ?maryElphinstone rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?maryElphinstone dbo:parent ?parent .

  # Find William Gayner and his birthplace
  ?williamGayner rdfs:label ""William Gayner""@en .
  ?williamGayner dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Country ;
              rdf:type dbo:Region .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?election dbo:election ""2009 Galician regional election""@en .
  ?candidate dbo:electedAs ?office ;
              dbo:election ?election .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?nicholas rdfs:label ""Nicholas II of Russia""@en .
  ?nicholas dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?alberto rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?alberto dbo:residence ?residence .
  ?residence dbo:resident ?tenant .
}
```",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Birmingham .
  ?work rdfs:label ""Boom Shack-A-Lak""@en .
  ?person dbo:work ?work .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?birthName WHERE {
  # Part 1: Band member of Uncle Murda
  ?uncleMurda rdfs:label ""Uncle Murda""@en .
  ?uncleMurda dbo:bandMember ?bandMember .

  UNION

  # Part 2: Native musical artist from Florida with birth name
  ?artist dbo:nativePlace ?place ;
          dbo:occupation dbo:MusicalArtist ;
          rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?place), ""florida""))
  ?artist dbo:birthName ?birthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?force WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:award ?award .
  OPTIONAL { ?gillmore dbo:militaryUnit ?force . }
}

SELECT ?awardee ?war WHERE {
  ?awardee dbo:award ""Medal of Honor""@en .
  ?awardee dbo:participatedIn ?war .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?john dbo:birthName ""Richard Grant Esterhuysen""@en .
  ?john dbo:profession dbr:Actor .
  ?production dbo:starring ?john .
  ?production dbo:type ?type1 .
  ?production dbo:type ?type2 .
  FILTER((?type1 = dbr:Film || ?type1 = dbr:TelevisionShow) && (?type2 = dbr:Film || ?type2 = dbr:TelevisionShow))
  ?production dbo:starring ?actor .
  FILTER(?john != ?actor)
}",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?lalhore rdfs:label ""Lahore""@en .
  ?person dbo:birthPlace ?lalhore .
}
```",1,1,2,1,1,2,2,9,881,0,0,1.0,1.0,1.0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?commander WHERE {
  ?entity rdfs:label ""The Triple X's""@en .
  ?entity dbo:participatedInWar ?war .
  ?war dbo:commander ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  ?starBornFilm rdfs:label ""A Star Is Born (1937 film)""@en .
  ?starBornFilm dbo:producer ?producer .

  ?tomSawyerFilm rdfs:label ""The Adventures of Tom Sawyer (1938 film)""@en .
  ?tomSawyerFilm dbo:producer ?producer .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vinceBirthPlaceLabel ?vinceGovernorLabel ?paulusBirthPlaceLabel ?paulusGovernorLabel WHERE {
  # Vince Gilligan's birth place
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?vince dbo:birthPlace ?vinceBirthPlace .

  # Governor of Vince Gilligan's birth place
  ?vinceBirthPlace a dbo:AdministrativeRegion .
  ?vinceBirthPlace dbp:governor ?vinceGovernor .
  
  # Paulus Powell's birth place
  ?paulus rdfs:label ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?paulusBirthPlace .

  # Governor of Paulus Powell's birth place
  ?paulusBirthPlace a dbo:AdministrativeRegion .
  ?paulusBirthPlace dbp:governor ?paulusGovernor .

  # Labels for output
  ?vinceBirthPlace rdfs:label ?vinceBirthPlaceLabel .
  ?vinceGovernor rdfs:label ?vinceGovernorLabel .
  ?paulusBirthPlace rdfs:label ?paulusBirthPlaceLabel .
  ?paulusGovernor rdfs:label ?paulusGovernorLabel .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?work WHERE {
  ?biden rdfs:label ""Joe Biden""@en .
  ?biden dbo:work ?work .
  ?work rdf:type dbo:WrittenWork ;
        rdf:type dbo:Book .
  OPTIONAL { ?work dcterms:isPartOf ?country . FILTER (STR(?country) = STR(<http://dbpedia.org/resource/United_States>)) }
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?athlete ?filmSoccerPlayer WHERE {
  # Part 1: Find athlete born on Marty Pollio's birthday
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthday ?birthday .

  ?athlete dbo:birthday ?birthday ;
           a dbo:Athlete .

  # Part 2: Find soccer player actor in Manuel Huerga's film
  ?huerga rdfs:label ""Manuel Huerga""@en .
  ?huerga dbo:film ?film .

  ?filmSoccerPlayer dbo:actor ?film ;
                    a dbo:SoccerPlayer, dbo:Athlete .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?curran rdfs:label ""Nicholas Michael Curran""@en .
  ?curran dbo:associatedBand ?band .
  ?band rdfs:label ?associatedArtistLabel .

  OPTIONAL {
    ?kim rdfs:label ""Kim Wilson""@en .
    ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
    
    FILTER(?associatedArtist = ?kim || ?associatedArtist = ?thunderbirds)
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?linda rdfs:label ""Linda Sue Cobb""@en .
  ?linda dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?office WHERE {
  { 
    ?mariano rdfs:label ""Mariano Rajoy""@en .
    ?mariano dbo:officeHeld ?office .
    BIND(?mariano AS ?person)
  }
  UNION
  { 
    ?miguel rdfs:label ""Miguel Maura""@en .
    ?miguel dbo:officeHeld ?office .
    BIND(?miguel AS ?person)
  }
}

SELECT ?mayor WHERE {
  ?madrid rdfs:label ""Madrid""@en ;
          dbo:mayor ?mayor .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
# Query for Robert Lamar Thompson's band and role
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?role WHERE {
  ?person rdfs:label ""Robert Lamar Thompson""@en .
  ?person dbo:band ?band ;
          dbo:role ?role .
}

# Query for the producer of Coke Studio Philippines and their profession
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?profession WHERE {
  ?show rdfs:label ""Coke Studio Philippines""@en .
  ?show dbo:producer ?producer .
  ?producer dbo:occupation ?profession .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?sara rdfs:label ""Princess Sara bint Faisal""@en .
  ?sara dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musician WHERE {
  ?musician rdf:type dbo:MusicalArtist .
}
```",1,1,2,1,1,3,3,71,7072,118373,491,0.05637530391805173,0.9350786724844639,0.10633946830265847
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander rdfs:label ?labelCommander .
  FILTER(CONTAINS(LCASE(?labelCommander), ""siege of mukha"") && CONTAINS(LCASE(?labelCommander), ""royalty"")) .
  
  # Identify the parent of this commander, also a royalty
  ?parent dbo:child ?commander .
  ?parent rdfs:label ?labelParent .
  FILTER(CONTAINS(LCASE(?labelParent), ""royalty"")) .

  # Find the child of this royal parent
  ?parent dbo:child ?child .
  
  # Reference to Lamont Cranston (The Shadow's alter ego)
  VALUES ?alterEgo { <http://dbpedia.org/resource/Lamont_Cranston> }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?dawitChild WHERE {
  ?dawit rdfs:label ""Dawit I""@en .
  ?dawit dbo:child ?dawitChild .

  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:child ?baedaChild .
  
  ?dawitChild dbo:father ?baedaFather .
  FILTER (?baedaFather = ?baeda)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  ?catherine dbo:father ?father .

  FILTER EXISTS { 
    ?father rdf:type dbo:Monarch .
  }

  OPTIONAL {
    ?father dbo:memberOf ?event .
    ?event rdfs:label ""Siege of Padua""@en .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?team WHERE {
  # Find Marty Pollio's birth date
  ?martyPollio rdfs:label ""Marty Pollio""@en .
  ?martyPollio dbo:birthDate ?birthDate .

  # Find Sergio Agüero and his teams
  ?sergioAgüero rdfs:label ""Sergio Agüero""@en .
  ?sergioAgüero dbo:team ?team .
  
  FILTER (?sergioAgüero dbo:birthDate = ?birthDate)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  ?sawMinPhyu dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbo:royalTitle ?title .
  ?child dbo:predecessor ?predecessor .
}",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?bandMember ?nativePlace WHERE {
  # Step 1: Identify the award that is a region, American, state, and settlement
  ?award dbo:type ?type .
  FILTER (?type IN (dbo:Region, dbo:State, dbo:Settlement))
  FILTER(CONTAINS(LCASE(?award), ""american""))

  # Step 2: Find connection between Coro de la Pontificia Universidad Católica de Puerto Rico and Bobby Shmurda's band members
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?bobby dbo:associatedBandMember ?bandMember .
  FILTER(CONTAINS(LCASE(?bobby), ""bobby shmurda""))

  # Step 3: Determine the native place of these band members
  ?bandMember dbp:nativePlace ?nativePlace .
  FILTER (?nativePlace = ?award)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No valid SPARQL query can be constructed due to incomplete input.
```",1,1,2,1,1,3,3,71,0,0,39790,0,0.0,0
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?artist rdfs:label ""Steven Kapur""@en .
  ?work dbo:creator ?artist .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Identify the manager of Thomas Letsch in the 2007–08 VfL Bochum season
SELECT ?manager WHERE {
  ?season rdfs:label ""2007–08 VfL Bochum season""@en .
  ?season dbo:manager ?manager .
}

# Step 2: Identify the player managed by Thomas Letsch in the 2007–08 VfL Bochum season
SELECT ?player WHERE {
  ?season rdfs:label ""2007–08 VfL Bochum season""@en .
  ?season dbo:teamMember ?player .
  ?player dbo:manager ?letsch .
  ?letsch rdfs:label ""Thomas Letsch""@en .
}

# Step 3: Identify Theodor Heuss's native country
SELECT ?country WHERE {
  ?heuss rdfs:label ""Theodor Heuss""@en .
  ?heuss dbo:nationality ?country .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?birthplace WHERE {
  VALUES (?name) { ""Ekaterina Zaharieva""@en ""Reneta Kamberova""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:birthPlace ?birthplace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?settlement WHERE {
  ?party dbo:leader ?leader .
  FILTER (STR(?party) = ""National Party of Greece""^^xsd:string)
  
  ?leader dbo:participatedIn ?war .

  ?antonios rdfs:label ""Antonios Varthalitis""@en .
  ?antonios dbo:deathPlace ?place .
  ?place a dbo:Settlement .

  FILTER (STR(?settlement) = STR(?place))
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?host WHERE {
  ?rainer rdfs:label ""Rainer Weiss""@en .
  ?rainer dbo:award ?award .
  ?award dbo:hostedBy ?host .
  FILTER (isBlank(?host) || ?host a dbo:EducationalOrganization)
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis dbo:parent ?parent .
}

SELECT ?spouse WHERE {
  ?renee rdfs:label ""Renée of Bourbon""@en .
  ?renee dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?yeshaq rdfs:label ""Yeshaq I""@en .
  ?yeshaq dbo:child ?child .
  ?child dbo:royalty true .
  OPTIONAL { ?baeda rdfs:label ""Baeda Maryam I""@en . ?baeda dbo:father ?child }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:militaryConflict ?campaign .
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?bayne dbp:awards ?awardEvent .
  ?awardEvent rdfs:label ""Knight Commander of the Order of the Bath""@en .
  OPTIONAL { ?campaign dbo:militaryForce ?militaryForce1 . }
  OPTIONAL { ?awardEvent dbo:militaryForce ?militaryForce2 . }
  FILTER (?militaryForce1 = ?militaryForce2)
  BIND(?militaryForce1 AS ?militaryForce)
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""<MovieName>""@en .
  ?movie dbo:starring ?actor .
  
  OPTIONAL {
    ?actor rdf:type dbo:<Profession> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?athlete WHERE {
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthday ?birthday .
  ?athlete dbo:birthday ?birthday ;
           a dbo:Athlete .
}

SELECT ?team WHERE {
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbo:team ?team ;
           a dbo:SoccerPlayer, dbo:SoccerManager .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query for Santiago de Compostela Tenant
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?santiago rdfs:label ""Santiago de Compostela""@en .
  ?santiago dbo:headquarter ?tenant .
}

# Query for Álvaro Quirós' Residence Tenant
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?tenant WHERE {
  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  ?alvaro dbo:nationality|dbo:residence ?country .
  ?country dbo:headquarter ?tenant .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?cynthia rdfs:label ""Cynthia Morgan""@en .
  ?cynthia dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?person dbo:awardeeOfOrder ""Knight Commander of the Order of the Bath"" .
  ?person dbo:commanderInWar ?war .
  ?war dbo:participatingUnit ""30th (Cambridgeshire) Regiment of Foot"" .
  ?person dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royParty ?danielCountry ?gustavoParty WHERE {
  # Roy Barreras' political party
  ?roy rdfs:label ""Roy Barreras""@en .
  ?roy dbo:politicalParty ?royParty .

  # Daniel Elahi Galán's country
  ?daniel rdfs:label ""Daniel Elahi Galán""@en .
  ?daniel dbo:nationality ?nationality .
  ?nationality rdfs:label ?danielCountry .

  # Gustavo Petro's political party
  ?gustavo rdfs:label ""Gustavo Petro""@en .
  ?gustavo dbo:politicalParty ?gustavoParty .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  
  # Step 1: Identify Quincy Adams Gillmore and his birthplace
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:birthPlace ?birthPlace .
  
  # Step 2: Ensure the birthplace is a settlement and in America
  ?birthPlace rdf:type dbo:Settlement .
  ?birthPlace dbo:country dbr:United_States .
  BIND(?birthPlace AS ?settlement) .
  
  # Step 3: Identify Medal of Honor awardee deceased on 1850-08-05
  ?awardee dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  ?awardee dbo:award dbr:Medal_of_Honor .
  
  # Step 4: Find the war associated with this awardee
  ?awardee dbo:participatedInWar ?war .
  
  # Step 5: Link to Quincy Adams Gillmore's force and ensure it matches the war
  ?gillmore dbo:militaryForce ?force .
  ?force dbo:participatedInWar ?war .
}
",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Aladdin (1958 film)""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show ?award WHERE {
  ?academy rdfs:label ""Royal Swedish Academy of Sciences""@en .
  OPTIONAL { ?academy dbo:event ?show . }
  ?academy dbo:award ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""nobel prize in physics""))
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence WHERE {
  ?doug rdfs:label ""Doug Beattie""@en .
  ?doug dbo:residence ?residence .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?musicalArtist WHERE {
  # Find Cynthia Morgan using her birth name
  ?cynthia dbo:birthName ""Cynthia Morgan""@en .
  
  # Retrieve associated musical artists for Cynthia Morgan
  OPTIONAL { ?cynthia dbo:musicalArtist ?musicalArtist . }
  
  UNION
  
  # Identify actors of The Campus Queen
  ?film rdfs:label ""The Campus Queen""@en .
  ?film dbo:actor ?actor .
  
  # Check if these actors have associated musical artists
  OPTIONAL { ?actor dbo:musicalArtist ?musicalArtist . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?shelbyOaks rdfs:label ""Shelby Oaks""@en .
  ?shelbyOaks dbo:starring ?actor .

  ?atlFilm rdfs:label ""ATL (film)""@en .
  ?atlFilm dbo:starring ?actor .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Identify Mariclare Costello
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  
  # Step 2: Find her spouse(s)
  ?mariclare dbo:spouse ?spouse .

  # Step 3: Identify the child of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Find the parent of this child
  ?child dbo:parent ?parent1 .

  # Step 5: Identify professionals in Photographer
  ?professional dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""photographer""))

  # Step 6: Find the parent of this professional
  ?professional dbo:parent ?parent2 .

  # Step 7: Check for common entity
  VALUES ?commonParent { ?parent1 ?parent2 }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  ?archduke rdfs:label ""Archduke Charles Joseph of Austria""@en .
  
  # Step 2: Find his parent
  ?parent dbo:child ?archduke .

  # Step 3: Identify the child of this parent
  ?child dbo:parent ?parent .

  # Step 4: Find a commander in war related to this child
  ?commanderRole dbo:agent ?child .
  ?commanderRole dbo:militaryUnit ?dragoonRegiment .

  # Step 5: Identify societal events and television shows
  ?event rdf:type dbo:SocietalEvent ;
         rdfs:label ?eventName .
  
  ?tvShow rdf:type dbo:TelevisionShow ;
          rdfs:label ?showName .

  # Ensure the event is both a societal event and a television show
  FILTER (?event = ?tvShow)

  # Step 6: Find the 2nd Dragoon Regiment (France)
  ?dragoonRegiment rdfs:label ""2nd Dragoon Regiment (France)""@en .

  # Step 7: Determine the father of the child associated with these criteria
  ?child dbo:father ?father .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?tenant WHERE {
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .
  OPTIONAL { ?administration dbo:headOfGovernment ?tenant . }
  FILTER(LANG(?administration) = ""es"")
}
```",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?peterIV rdfs:label ""Peter IV of Aragon""@en .
  ?peterIV dbo:birthName ?realName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?order rdfs:label ""Order of the Medjidie""@en .
  ?order dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,2,2,9,0,67,1,0.0,0.0,0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:militaryUnit ?force .
  ?award dbo:recipient ?gillmore ;
         dbo:awardingBody <http://dbpedia.org/resource/United_States_Congress> .
  ?award dbo:relatedWar ?war .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?father dbo:child ?ceciliaRenata .
  ?commander dbo:child ?father ;
             a dbo:MilitaryPerson ;
             dbo:societalEvent ?event ;
             dbo:televisionShow ?tvShow .
  ?algerianWar dbo:militaryForce ?militaryForce .
  FILTER(?militaryForce = <http://dbpedia.org/resource/French_Army> && 
         ?event != [] && ?tvShow != [])
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?thunderbirds ?associatedArtist ?nickCurran ?realName WHERE {
  ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
  ?thunderbirds dbo:associatedMusicalArtist ?associatedArtist .

  ?nickCurran rdfs:label ""Nick Curran (musician)""@en .
  ?nickCurran dbo:birthPlace ?birthPlace .
  OPTIONAL { ?nickCurran foaf:name ?realName . }

  FILTER(?associatedArtist != ?nickCurran)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?child .

  ?child dbo:parent ?william2 .
  ?william2 rdfs:label ""William II of Sicily""@en .

  ?roger2 rdfs:label ""Roger II of Sicily""@en .
  ?roger2 dbo:child ?child .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
# Query for Baeda Maryam I's Father
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:father ?father .
}

# Query for Yeshaq I's Parent and Their Royal Child
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?royalChild WHERE {
  ?yeshaq rdfs:label ""Yeshaq I""@en .
  ?yeshaq dbo:parent ?parent .
  ?parent dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:Monarch }
}

# Query for The Shadow's Alter Ego
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  FILTER EXISTS { ?alterEgo rdfs:label ""Lamont Cranston""@en }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
# Query for Henry Clay Lewis's Birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .
}

# Query for Awardee of an Award by United States Congress
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award dbo:awardingBody dbr:United_States_Congress ;
         a dbo:Award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:nationality dbr:United_States .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Bob Thompson (musician)""@en .
  ?person dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?nat rdfs:label ""Nat Levine""@en .
  ?nat dbo:filmProduction ?film .
}
```",1,2,2,1,1,3,3,71,0,0,96,0,0.0,0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""Bruno Daniel Marie Paul Retailleau""@en .
  ?person dbo:officeHolder ?office .
  OPTIONAL { ?person dbo:politicalPartyMember ?party . }
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Step 1: Identify Nat Levine's film
  ?nat a dbo:Film ;
      dbo:producer ""Nat Levine""@en .
  
  # Step 2: Find an actor of that film
  ?film dbo:actor ?actor .

  # Step 3: Identify Harriette Arlene Lake by birth name
  ?harriette foaf:name ""Harriette Arlene Lake"" ;
             a dbo:Person .

  # Ensure the actor is associated with Harriette Arlene Lake
  ?actor foaf:based_near ?harriette .

  # Step 4: Find the spouse of the actor
  ?actor dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Condition 1: Party member of Republican Party (United States)
  ?partyMember dbo:partyMemberOf dbr:Republican_Party_(United_States) .

  # Condition 2: Spouse of the actor from ""1,000 Dollars a Minute""
  ?actor rdfs:label ""1,000 Dollars a Minute""@en .
  ?actor dbo:spouse ?person .

  # Condition 3: Person born as the birth name of the parent of Tisha Sterling
  ?tisha foaf:name ""Tisha Sterling"" .
  ?parent foaf:parentOf ?tisha ;
          foaf:name ?birthName .
  ?person foaf:name ?birthName .

  # Ensure all conditions refer to the same person
  FILTER (?partyMember = ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
# Query to find an award named after a region/state/settlement in America
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?award dbo:country dbr:United_States .
  ?award rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""region"") || CONTAINS(LCASE(?label), ""state"") || CONTAINS(LCASE(?label), ""settlement""))
}

# Query to find information about Coro de la Pontificia Universidad Católica de Puerto Rico
SELECT ?native WHERE {
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?choir dbo:nativePlace ?native .
}

# Query to find band members of Uncle Murda and their birthplaces
SELECT ?member ?birthplace WHERE {
  ?band rdfs:label ""Uncle Murda""@en .
  ?band dbo:member ?member .
  ?member dbo:birthPlace ?birthplace .
}

# Query to find Bobby Shmurda's birth name
SELECT ?birthName WHERE {
  ?person rdfs:label ""Bobby Shmurda""@en .
  ?person foaf:name ?birthName .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?charles rdfs:label ""Charles Martel of Anjou""@en .
  ?charles dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonChild WHERE {
  # Find Cecilia Renata of Austria's father
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaRenata dbo:father ?father .

  # Find the child of Cecilia Renata of Austria's father
  ?child1 dbo:parent ?father .

  # Find Archduke Charles Joseph of Austria's parent
  ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?charlesJoseph dbo:parent ?parent .

  # Find the child of Archduke Charles Joseph of Austria's parent
  ?child2 dbo:parent ?parent .

  # Identify the common child
  FILTER (?child1 = ?commonChild && ?child2 = ?commonChild)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:predecessor ?stephenV .
  
  ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
  ?parent dbo:parent ?charlesMartel .

  FILTER(?predecessor = ?parent)

  ?child dbo:child ?parent ;
         a dbo:Monarch .

  ?grandchild dbo:child ?child ;
              a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:birthName ""Robert Lamar Thompson"" .
  ?sam dbo:band ?band .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?album rdfs:label ""The Live Anthology""@en .
  ?album dbo:writer ?writer .
  ?writer a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?commander dbo:participatedIn ?event .
  ?event rdfs:label ""Siege of Padua""@en .

  ?commander dbo:child ?child .

  OPTIONAL { 
    ?child dbo:royalTitle ?title .
  }
  
  FILTER EXISTS { ?child dbo:royalTitle ?title }
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  ?catherine dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Find birth place of Yamaza Enjirō
  ?yamaza rdfs:label ""Yamaza Enjirō""@en .
  ?yamaza dbo:birthPlace ?birthPlace .

  # Find war involving Toyotomi Hidenaga
  ?hidenaga rdfs:label ""Toyotomi Hidenaga""@en .
  ?hidenaga dbo:participatedIn ?war .

  # Find common entity between birth place and war
  {
    ?birthPlace ?p1 ?commonEntity .
  } UNION {
    ?war ?p2 ?commonEntity .
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?victor rdfs:label ""Victor Saville""@en .
  ?victor dbo:birthPlace ?birthPlace .
  ?native dbo:nativeOf ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,1531,0,0.0,0
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?mary dbo:parent ?parent .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:birthName ?person .
  
  OPTIONAL { 
    ?band rdfs:label ""Uncle Murda""@en .
    ?bandMember foaf:name ?person .
    ?bandMember dbo:member ?band .
  }
  
  OPTIONAL {
    ?person dbo:nativePlace ?place .
    ?place rdfs:label ""Florida""@en .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player WHERE {
  ?season rdfs:label ""2006–07 VfL Bochum season""@en .
  ?season dbo:successor ?successorSeason .

  ?successorSeason dbo:player ?player .
  
  ?player a dbo:SoccerPlayer ;
          dbo:sportsTeam ?team .
  
  ?team a dbo:SportsClub, dbo:Organisation .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?deathPlace WHERE {
  VALUES ?name { ""Reed Howes""@en ""Carolyn Jones""@en ""Sal Mineo""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:deathPlace ?deathPlace .
}
```",3,3,4,1,3,2,3,28,1,3,0,0.25,1.0,0.4
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team dbo:season ""2020–21"" .
  ?team dbo:manager ?manager .
  FILTER EXISTS { 
    ?manager dbo:birthPlace ?place .
    ?place rdfs:label ""West Germany""@en .
  }
  FILTER (?team rdfs:label = ""SBV Vitesse""@en)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?album rdfs:label ""Nothing to Gein""@en .
  ?album dbo:producer ?producer .
  
  # Check if the producer is an organization/group
  OPTIONAL { ?producer a dbo:Band . }
  OPTIONAL { ?producer a dbo:MusicalGroup . }

  # Retrieve members of the producer if it's a band or group
  ?producer dbo:member ?member .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Joey B.""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?alumnus dbo:child ?edward .
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?politician dbo:parent ?alumnus .
  ?politician rdf:type dbo:Politician .
  ?politician dbo:award dbr:Commander_of_the_Royal_Victorian_Order .
  ?politician dbo:father ?father .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?book a dbo:Book ;
        dbo:author ?billClinton ;
        rdfs:label ?work .
}
```",1,4,2,1,1,3,3,71,0,7,6,0.0,0.0,0
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person dbo:residence ?location .
  ?location rdfs:label ""Chappaqua, New York""@en .
  
  ?person dbo:occupation ?occupation1 ;
          dbo:occupation ?occupation2 .
  FILTER (
    (CONTAINS(LCASE(?occupation1), ""politician"") || CONTAINS(LCASE(?occupation2), ""politician"")) &&
    (CONTAINS(LCASE(?occupation1), ""office holder"") || CONTAINS(LCASE(?occupation2), ""office holder""))
  )
  
  ?person dbo:commander ?war .
  ?war rdfs:label ""War on Drugs""@en .

  ?person dbo:writtenWork ?work .
  ?work rdf:type/rdfs:subClassOf* dbo:Book ;
        rdf:type/rdfs:subClassOf* dbo:WrittenWork .

  ?work dbo:author ?author .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  ?award dbo:recipient ?awardee .
  FILTER (CONTAINS(LCASE(?award), ""anita borg institute women of vision awards"")) .

  ?awardee dbo:nationality dbr:Japan .

  OPTIONAL { 
    ?awardee dbo:reference ?tvShow .
    FILTER (CONTAINS(LCASE(STR(?tvShow)), ""television show""))
  }

  ?awardee dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Japan .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?birthPlace WHERE {
  ?film dbo:title ""Akaler Shandhaney""@en .
  ?film dbo:castMember ?actor .
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,2,20,0,0,10,0,0.0,0
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:residence db:Sofia .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?birthPlace WHERE {
  { 
    ?cece rdfs:label ""Cece Bell""@en .
    ?cece dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?personLabel)
  }
  UNION
  {
    ?governor dbo:office <http://dbpedia.org/resource/Office_of_the_Governor_of_Virginia> ;
             dbo:positionTitle ""Governor""@en ;
             rdfs:label ?governorLabel .
    ?governor dbo:birthPlace ?birthPlace .
    BIND(?governorLabel AS ?personLabel)
  }
  UNION
  {
    ?vince rdfs:label ""Vince Gilligan""@en .
    ?vince dbo:birthPlace ?birthPlace .
    BIND(""Vince Gilligan"" AS ?personLabel)
  }
}
```",4,5,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Charles Martel of Anjou
  ?charles rdfs:label ""Charles Martel of Anjou""@en .
  
  # Step 2: Find his parent(s)
  ?charles dbo:parent ?parent .

  # Step 3: Find the father of this parent (grandparent)
  ?parent dbo:parent ?grandparent .

  # Step 4: Find the spouse of the grandparent
  ?grandparent dbo:spouse ?spouse .

  # Step 5: Ensure the spouse is royalty
  ?spouse dbo:royalTitle ?title .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find Amasa Tracy and his associated war
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tracy ?war WHERE {
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:associatedWith ?war .
}

# Query to find the Gillmore Medal awardee and their force
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?force WHERE {
  ?awardee dbo:award ""Gillmore Medal""@en .
  ?awardee dbo:memberOf ?force .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?letsch rdfs:label ""Thomas Letsch""@en .
  ?letsch dbo:manager ?team .
  ?team a dbo:SoccerClub .
}
```",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Part 1: Eugène Cattin's profession and a professional in that field with their parent
  ?eugene rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:profession ?profession .

  ?professional dbo:profession ?profession .
  ?parentalRelation dbo:child ?professional .
  ?parentalRelation dbo:parent ?parent .

  # Part 2: Allan Arbus's child and the parent of that child
  OPTIONAL {
    ?allan rdfs:label ""Allan Arbus""@en .
    ?allan dbo:child ?child .
    
    ?childParentalRelation dbo:child ?child .
    ?childParentalRelation dbo:parent ?parent .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual ?royalChild ?father WHERE {
  # Step 1: Find children of Roger II of Sicily
  ?roger2 dbo:child ?childOfRoger .
  VALUES ?roger2 { <http://dbpedia.org/resource/Roger_II_of_Sicily> }

  # Step 2: Find grandchildren of Alfonso VI of León and Castile
  ?alfonso6 dbo:child ?childOfAlfonso .
  ?childOfAlfonso dbo:child ?grandChildOfAlfonso .
  VALUES ?alfonso6 { <http://dbpedia.org/resource/Alfonso_VI_of_Le%C3%B3n_and_Castile> }

  # Step 3: Find common individual
  FILTER (?childOfRoger = ?grandChildOfAlfonso)
  BIND(?childOfRoger AS ?commonIndividual)

  # Step 4: Find children of William I of Sicily who are royalty
  ?william1 dbo:child ?childOfWilliam .
  VALUES ?william1 { <http://dbpedia.org/resource/William_I_of_Sicily> }
  ?childOfWilliam rdf:type/rdfs:subClassOf* dbo:Monarch .

  # Step 5: Find the father of this royal child
  ?commonIndividual dbo:parent ?father .
  FILTER(?childOfWilliam = ?commonIndividual)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  # Reed Howes' death place
  { 
    ?reedHowes rdfs:label ""Reed Howes""@en .
    ?reedHowes dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  # Actor of ""Color Me Dead"" and their death place
  {
    ?film rdfs:label ""Color Me Dead""@en .
    ?film dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?luiza rdfs:label ""Luiza Erundina""@en .
  ?luiza dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:University ;
             rdf:type dbo:EducationalOrganization ;
             rdf:type dbo:School .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer WHERE {
  ?soundtrack rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .
  ?soundtrack dbo:composer ?writer .

  ?writer dbo:occupation ?occupation1 .
  FILTER (?occupation1 IN (dbo:MusicalArtist, dbo:Artist)) .

  OPTIONAL { 
    ?writer dbo:occupation ?occupation2 .
    FILTER (?occupation2 IN (dbo:MusicalArtist, dbo:Artist))
  }
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinand2 rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?ferdinand2 dbo:child ?child .

  OPTIONAL { 
    ?warEvent dbo:commander ?child .
    FILTER EXISTS { ?warEvent rdf:type dbo:SocietalEvent }
    FILTER EXISTS { ?warEvent rdf:type dbo:TelevisionShow }
  }

  OPTIONAL {
    ?regiment dbo:member ?child .
    FILTER CONTAINS(LCASE(str(?regiment)), ""2nd dragoon regiment france"")
  }

  OPTIONAL {
    ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
    ?eleonore dbo:father ?child .
  }
}
```",4,7,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war rdfs:label ""War""@en .
  ?war dbo:commander ?commander .
  ?commander dbo:nationality dbr:United_States .

  OPTIONAL {
    ?hclinton rdfs:label ""Hillary Clinton""@en .
    ?hclinton dbo:spouse ?billClinton .
    ?billClinton rdfs:label ""Bill Clinton""@en .
    
    ?billClinton dbo:occupation ?occupation .
    FILTER(?occupation IN (dbr:Politician, dbr:Office_holder))
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonEntity WHERE {
  # Álvaro Quirós's residence country
  ?alvaroQuirós rdfs:label ""Álvaro Quirós""@en .
  ?alvaroQuirós dbo:residenceCountry ?country .

  # Alberto Núñez Feijóo's office
  ?albertoNunezFeijoo rdfs:label ""Alberto Núñez Feijóo""@en .
  ?albertoNunezFeijoo dbo:office ?office .

  # Tenant of the PSOE administration
  ?psoeAdministration rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?psoeAdministration dbo:administrator ?tenant .

  # Find common entity among these results
  FILTER (?country = ?office || ?country = ?tenant || ?office = ?tenant)
  BIND(?commonEntity AS ?country) .
  UNION
  BIND(?commonEntity AS ?office) .
  UNION
  BIND(?commonEntity AS ?tenant) .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?title rdfs:label ""Knight Commander of the Order of the Bath""@en .
  ?person dbo:honoraryTitle ?title .
}
```",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?william rdfs:label ""William II of Sicily""@en .
  ?william dbo:father ?father .

  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor ?office WHERE {
  ?madridOffice a dbo:Mayor ;
                dbo:head ?mayor .
  ?madridOffice rdfs:label ""Madrid""@en .

  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Conservative Republican Party (Spain)""@en .
    ?party dbo:leader ?leader .
    ?office a dbo:PublicOffice ;
            dbo:holder ?leader .
    ?office rdfs:label ?officeLabel .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?ackquille rdfs:label ""Ackquille Jean Pollard""@en .
  ?ackquille dbo:nativePlace ?nativePlace .
  FILTER(CONTAINS(LCASE(STR(?nativePlace)), ""florida"")) .

  ?ackquille dbo:member ?band .
  ?band dbp:associatedMusicalArtist ?artist .

  ?gs9 dbp:associatedMusicalArtist ?artist .
  FILTER(?band = ?gs9)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?nat rdfs:label ""Nat Levine""@en .
  ?film dbo:producer ?nat ;
        dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,201,31,56,0.8663793103448276,0.7821011673151751,0.8220858895705522
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?song rdfs:label ""Boom Shack-A-Lak""@en .
  OPTIONAL { ?song dbo:composer ?writer . }
  OPTIONAL { ?song dbo:lyricist ?writer . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?patrick rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?patrick dbo:parent ?parent .
  ?parent dbo:nativePlace ?place .
  FILTER (STRSTARTS(STR(?place), STR(<http://dbpedia.org/resource/Middlesex>)))
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Find Archduke Charles Joseph of Austria
  ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en .
  
  # Step 2: Find his parent (likely father)
  ?parent dbo:child ?charlesJoseph .

  # Step 3: Find the child of this parent who is royalty
  ?royalChild dbo:child ?parent .
  FILTER EXISTS { ?royalChild a dbo:RoyalFamilyMember } 

  # Step 4: Identify Maria Anna of Bavaria (born 1574)
  ?mariaAnna rdfs:label ""Maria Anna of Bavaria (1574)""@en .

  # Step 5: Find her father
  ?fatherOfMaria dbo:child ?mariaAnna .

  # Step 6: Find the child of this father who is royalty
  ?royalChild2 dbo:child ?fatherOfMaria .
  FILTER EXISTS { ?royalChild2 a dbo:RoyalFamilyMember } 

  # Step 7: Identify the commonality (father of the child)
  ?commonFather dbo:child ?royalChild .
  ?commonFather dbo:child ?royalChild2 .

  # Return the father
  BIND(?commonFather AS ?father)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMember WHERE {
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:associatedMusicalArtist ?artist .
  ?artist dbo:bandMember ?group .
  ?artist dbo:birthPlace ?place .
  ?place rdfs:label ""Florida""@en .
  ?artist rdf:type dbo:Musician .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  # Person born on 1979-11-03 who is both a soccer player and manager
  ?person1 dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           (dbo:occupation dbr:Soccer_player | dbo:occupation dbr:Soccer_manager) .

  # Athlete born on 1955-02-22
  ?person2 dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:sport ?sport .

  # Sergio Agüero's team
  dbr:Sergio_Agüero dbo:team ?team .

  # Check if any of the identified persons play for the same team as Sergio Agüero
  OPTIONAL { ?person1 dbo:team ?team . }
  OPTIONAL { ?person2 dbo:team ?team . }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander ?tvShow ?militaryConflict WHERE {
  ?maria rdfs:label ""Maria I of Portugal""@en .
  
  # Assuming a property or related entity links Maria to a commander
  ?maria dbo:relatedCommander ?commander .

  # Check if the commander is linked to a TV show
  OPTIONAL { ?commander dbo:tvSeries ?tvShow . }

  # Check if the commander is linked to a military conflict
  OPTIONAL { ?commander dbo:militaryConflict ?militaryConflict . }
  
  FILTER (?tvShow != NULL && ?militaryConflict != NULL)
}
```",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?koichiro rdfs:label ""Koichirō""@en .
  ?koichiro dbo:participatedIn ?war .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?linda rdfs:label ""Linda Sue Cobb""@en .
  ?linda dbo:profession dbr:Film_producer .
  ?linda dbp:filmProduced dbr:12_Strong_(film) .
  ?linda dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""Khlyst (band)""@en .
  ?band dbo:member ?member .
  ?member rdf:type dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:father ?father .
  OPTIONAL { ?father dbo:royaltyStatus ?status }.
  FILTER EXISTS { ?father dbo:royaltyStatus ?status }
  ?father dbo:spouse ?spouse .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?party WHERE {
  # Find Daniel Elahi Galán's nationality
  ?galan rdfs:label ""Daniel Elahi Galán""@en .
  ?galan dbo:nationality ?country .

  # Find Roy Leonardo Barreras Montealegre's party affiliation
  ?barreras rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?barreras dbo:partyAffiliation ?party .
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?mariano rdfs:label ""Mariano Rajoy""@en .
  ?mariano dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?profession ?fictionalCharacter WHERE {
  ?bob a dbo:Musician ;
       rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?band .

  ?sam a dbo:Person ;
       rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession .

  ?walter a dbo:Writer ;
          rdfs:label ""Walter B. Gibson""@en .
  ?fictionalWork dbo:fictionalWorkOf ?walter ;
                 dbo:genre dbr:Comics ;
                 rdfs:label ?fictionalCharacterLabel .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(?fictionalCharacterLabel, "" "", ""_""))) AS ?fictionalCharacter)
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?actor WHERE {
  VALUES ?filmTitle { ""ATL (film)"" ""Shelby Oaks"" }
  
  ?film rdfs:label ?filmTitle .
  FILTER(LANG(?filmTitle) = 'en')
  
  ?film dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?father dbo:child ?ceciliaRenata .
  ?father dbo:child ?child .
  FILTER EXISTS { ?child dbo:description ?desc . FILTER(CONTAINS(LCASE(?desc), ""thirty years' war"")) }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  FILTER regex(str(?place), ""Florida"")
  ?person a dbo:MusicalArtist .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbp:birthName ?birthName }
  FILTER (?name = ?birthName)
}",4,5,5,3,2,3,3,71,1,7,58,0.125,0.01694915254237288,0.029850746268656716
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?actor WHERE {
  # Actor in 'All or Nothing: Manchester City'
  ?series dbo:title ""All or Nothing: Manchester City""@en .
  ?series dbo:castMember ?actor .
  
  # Actor is also a soccer player and athlete
  ?actor dbo:soccerPlayer _:player1 .
  ?actor dbo:athlete _:athlete1 .
  
  # Person born on 1955-02-22 who is an athlete
  ?person1 dbo:birthday ""1955-02-22""^^xsd:date .
  ?person1 dbo:athlete _:athlete2 .
  FILTER(?actor = ?person1)
  
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person2 dbo:birthday ""1979-11-03""^^xsd:date .
  ?person2 dbo:soccerPlayer _:player2 .
  ?person2 dbo:soccerManager _:manager1 .
  FILTER(?actor = ?person2)
}
",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession ?associatedArtist WHERE {
  ?person rdfs:label ""Elorm Kabu Amenyah""@en .
  OPTIONAL { ?person dbo:profession ?profession . FILTER(CONTAINS(LCASE(STR(?profession)), ""musician"")) }
  OPTIONAL { ?person dbo:associatedBand ?band ; dbo:member ?artist . BIND(?artist AS ?associatedArtist) }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?film rdfs:label ""A Star Is Born""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)>)))
  ?film dbo:producer ?producer .
}

SELECT ?professional ?producer WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo rdf:type dbo:Person ;
            dbo:profession ?professional .

  ?film rdfs:label ""The Adventures of Tom Sawyer""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)>)))
  ?film dbo:producer ?producer .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team ?actor WHERE {
  # Find Pablo Aimar's team
  ?pablo a dbo:SoccerPlayer ;
         rdfs:label ""Pablo Aimar""@en .
  ?pablo dbo:team ?team .

  # Find an actor who is also a soccer player and athlete
  ?actor a dbo:Actor, dbo:SoccerPlayer, dbo:Athlete ;
         rdfs:label ?actorLabel .

  # Find films directed by Manuel Huerga
  ?film a dbo:Film ;
        dbo:director ?huerga .
  ?huerga rdfs:label ""Manuel Huerga""@en .

  # Ensure the actor is in one of these films
  ?film dbo:actor ?actor .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?person rdfs:label ""Alberto Núñez Feijóo""@en .
  ?person dbo:officeHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant WHERE {
  ?psoeAdministration dbo:partyLeader ?leader .
  ?psoeAdministration dbo:country dbr:Spain .

  ?feijooOffice dbo:officeHolder ?holder .
  ?feijooOffice dbo:country dbr:Spain .
  
  ?tenant foaf:name ?name .
  FILTER CONTAINS(LCASE(?name), ""alberto núñez feijóo"") .
  
  OPTIONAL { ?tenant dbo:spouse ?leader . }
  OPTIONAL { ?tenant dbo:spouse ?holder . }

  FILTER EXISTS { ?tenant dbo:officeHolder ?feijooOffice . }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?residence WHERE {
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:party ?party .
  
  ?leader dbo:leaderOf ?party ;
          dbo:office ?office .

  FILTER EXISTS { 
    ?office dbo:election dbr:2003_Madrid_City_Council_election .
  }

  ?office dbo:residence ?residence .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Unable to construct a valid query due to incomplete input.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor WHERE {
  ?madrid rdfs:label ""Madrid""@en .
  ?madrid dbo:mayor ?mayor .
}
```",1,1,2,1,1,3,3,71,0,0,259,0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  # Step 1: Identify USS Arcadia (ID-1605) and its owner
  ?arcadia dbo:name ""USS Arcadia (ID-1605)"" .
  ?arcadia dbo:owner ?owner .

  # Step 2: Find Hillary Clinton's works and authors who are politicians
  ?work dbo:author ?author .
  ?author rdfs:label ""Hillary Clinton""@en .
  ?author dbo:officeHolder ?office .

  # Step 3: Determine the spouse of such an author
  ?author dbo:spouse ?spouse .

  # Step 4: Identify a disease that is also a societal event
  ?disease rdfs:label ?diseaseLabel .
  FILTER regex(?diseaseLabel, ""Disease"", ""i"") .
  ?disease dbo:societalEvent ?event .

  # Step 5: Link this disease to a war and identify the commander
  ?war dbo:disease ?disease .
  ?war dbo:commander ?commander .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?ethan rdfs:label ""Ethan Iverson""@en .
  ?ethan dbo:work ?work .
  ?work rdf:type ?type1, ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/MusicalArtist> && ?type2 = <http://dbpedia.org/ontology/Artist>)
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?currentBand WHERE {
  ?claptonBand dbo:bandMember ?bandMember .
  ?claptonBand rdfs:label ""Eric Clapton""@en .

  OPTIONAL { 
    ?fabulousThunderbird dbo:member ?bandMember .
    ?fabulousThunderbird rdfs:label ""The Fabulous Thunderbirds""@en .
  }

  ?currentBand dbo:bandMember ?bandMember .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?artist a dbo:Artist ;
          (dbo:nationality|dbo:birthPlace) ?centralRegion .
  ?writer a dbo:Writer ;
          dbo:work ?liveAnthology .
  ?liveAnthology rdfs:label ""The Live Anthology""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?artist = ?person && ?writer = ?person)
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book dbo:title ""Promise Me, Dad""@en .
  ?book dbo:author ?author .
  
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder true ;
          dbo:memberOf ?unit .

  ?unit rdfs:label ""North Carolina Air National Guard""@en .
}
```",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?organization WHERE {
  ?georgePickett rdfs:label ""George Pickett""@en .
  ?georgePickett dbo:memberOf ?party .
  
  ?party a dbo:PoliticalParty ;
         dbo:hasOrganization ?organization .

  ?organization dbo:location ?westport .
  FILTER (CONTAINS(LCASE(?westport), ""westport, connecticut""))
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  ?daniel rdfs:label ""Daniel Elahi Galán""@en .
  
  OPTIONAL { 
    ?daniel dbo:nationality ?nationality .
    ?nationality rdfs:label ?countryLabel .
    FILTER(LANG(?countryLabel) = 'en')
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?nationality), "" "", ""_""))) AS ?country)
  }
  
  OPTIONAL {
    ?daniel dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?placeLabel .
    FILTER(LANG(?placeLabel) = 'en')
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?birthPlace), "" "", ""_""))) AS ?country)
  }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?force WHERE {
  ?calder rdfs:label ""Robert Calder""@en .
  ?event dbo:participatedIn ?calder ;
         a dbo:MilitaryEngagement ;
         dbo:societalEvent true .
  ?event dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:hasForce ?force .
}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?athlete ?residenceCountry WHERE {
  ?athlete a dbo:Athlete ;
           dbo:nationality dbc:Poland ;
           dbo:birthPlace ?place .
  
  FILTER(CONTAINS(LCASE(str(?place)), ""lodz""))
  
  OPTIONAL { ?athlete dbo:residenceCountry ?residenceCountry }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?associatedArtist WHERE {
  { 
    ?toru rdfs:label ""Toru Iwatani""@en .
    ?toru dbo:associatedMusicalArtist ?associatedArtist .
  }
  UNION
  {
    ?joey rdfs:label ""Jo-Vaughn Virginie Scott""@en .
    ?joey dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?shirley rdfs:label ""Shirley Stoler""@en .
  ?shirley dbo:profession dbr:Actor .
  ?shirley dbo:birthPlace dbr:New_York_(state) .
  ?shirley dbo:child ?child .
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?antoinette rdfs:label ""Princess Antoinette of Brunswick-Wolfenbüttel""@en .
  ?antoinette dbo:child ?child .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Allan Arbus's child
  ?allanArbus rdfs:label ""Allan Arbus""@en .
  ?child dbo:childOf ?allanArbus .

  # Step 2: Check if this child acted in a movie with Herschel Bernardi
  ?movie dbo:starring ?child ;
         dbo:starring ?herSchelBernardi .
  ?herSchelBernardi rdfs:label ""Herschel Bernardi""@en .

  # Step 3: Find the parent of this actor who is a professional photographer
  ?parent dbo:parentOf ?child .
  ?parent dbp:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""photographer""))
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war rdfs:label ""Great Turkish War""@en .
  ?war dbo:participatedIn ?event .
  ?commander dbo:commanderOf ?event .
  OPTIONAL { 
    ?ducas rdfs:label ""George Ducas""@en .
    ?ducas dbo:relatedTo ?commander .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?tvShow WHERE {
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ""The Shadow""@en .

  ?work dbo:starring ?actor ;
        a dbo:TelevisionSeries .

  ?actor rdfs:label ""Richard E. Grant""@en .
  
  OPTIONAL { ?work dbo:starring ?alterEgoActor . }
  FILTER EXISTS { ?alterEgoActor = ?alterEgo }

  ?tvShow owl:sameAs ?work .
}
```",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?stuart rdfs:label ""Stuart Tosh""@en .
  ?stuart dbo:associatedBand ?band ;
          dbo:associatedBand ?artist .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace (GROUP_CONCAT(DISTINCT ?country; separator="", "") AS ?countries) WHERE {
  # Query for Winston Chang's birth place
  ?winston rdfs:label ""Winston Chang""@en .
  ?winston dbo:birthPlace ?birthPlace .

  # Query for Hu Jieqing's spouse who is a writer and their country of work
  ?hu rdfs:label ""Hu Jieqing""@en .
  ?hu dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Writer .
  ?spouse dbo:country ?country .
} 
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?author WHERE {
  ?george rdfs:label ""George Ducas""@en .
  ?george dbo:creator ?work .
  ?work dbo:author ?author .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Rodney Lees
  ?rodneyLees rdfs:label ""Rodney Lees""@en .
  
  # Step 2: Find awards associated with Rodney Lees
  ?rodneyLees dbo:award ?award .

  # Step 3: Identify other awardees of the same award
  ?otherAwardee dbo:award ?award .
  
  # Step 4: Identify Arthur Stanley (politician)
  ?arthurStanley rdfs:label ""Arthur Stanley""@en ;
                 rdf:type dbo:Politician .

  # Step 5: Find parent who is both an awardee and father to Arthur Stanley
  ?parent foaf:child ?otherAwardee .
  ?parent foaf:child ?arthurStanley .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?filmLabel ?actor ?deathPlace WHERE {
  { 
    ?film rdfs:label ""The Sky Ranger""@en .
    FILTER (YEAR(?film) = 1928)
    
    ?film dbo:starring ?actor .
    
    OPTIONAL { 
      ?actor dbo:deathPlace ?deathPlace .
    }
  } UNION {
    ?film rdfs:label ""Aladdin""@en .
    FILTER (YEAR(?film) = 1958)
    
    ?film dbo:starring ?actor .
    
    OPTIONAL { 
      ?actor dbo:deathPlace ?deathPlace .
    }
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?george rdfs:label ""George Savage (politician)""@en .
  ?george dbo:partyAffiliation ?party .
  FILTER EXISTS { ?party a dbo:PoliticalParty . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession (SAMPLE(?otherPerson) AS ?professionalInSameProfession) WHERE {
  ?eugene rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:occupation ?profession .

  ?otherPerson dbo:occupation ?profession .
  FILTER (?eugene != ?otherPerson)
}
```",2,2,3,2,1,3,3,71,0,2,940,0.0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?thunderbirds ?claptonBandMember ?associatedArtist ?nickCurran WHERE {
  # Identify The Fabulous Thunderbirds
  ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
  
  # Find band members of Eric Clapton
  ?clapton dbo:musicalArtist ?claptonBandMember .
  ?clapton rdfs:label ""Eric Clapton""@en .

  # Determine associated musical artists for each band member
  ?claptonBandMember dbo:associatedBand ?associatedArtist .

  # Identify Nick Curran as a musical artist
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:musicalArtist ?nickPersona .

  # Ensure Nick Curran's persona is a musical artist
  FILTER(?nickPersona = ?nickCurran)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?party WHERE {
  { 
    ?person rdfs:label ""Bruno Daniel Marie Paul Retailleau""@en .
    ?person dbo:partyAffiliation ?party .
  }
  UNION
  {
    ?person rdfs:label ""Guillaume Peltier""@en .
    ?person dbo:partyAffiliation ?party .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?governor WHERE {
  ?paulus rdfs:label ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?birthPlace .

  FILTER EXISTS { ?birthPlace rdf:type dbo:Region . }
  FILTER EXISTS { ?birthPlace rdf:type dbo:AdministrativeRegion . }

  ?birthPlace dbo:governor ?governor .
  
  FILTER EXISTS { ?governor rdf:type dbo:Politician . }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  
  # Step 2: Find Spouse of Saw Shwe Khet
  ?sawShweKhet dbo:spouse ?spouse .

  # Step 3: Identify Min Hla Htut of Pyakaung
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  
  # Step 4: Find Parent of Min Hla Htut
  ?minHlaHtut dbo:parent ?parent .

  # Step 5: Ensure Saw Shwe Khet is the child of this parent
  ?parent dbo:child ?sawShweKhet .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claptonBand ?wilsonBand WHERE {
  # Eric Clapton's band
  ?clapton dbo:bandMember ?member .
  ?member rdfs:label ""Eric Clapton""@en .
  ?member dbo:memberOf ?claptonBand .
  
  # Kim Wilson's band and its real name
  ?wilson dbo:bandMember ?member2 .
  ?member2 rdfs:label ""Kim Wilson""@en .
  ?member2 dbo:memberOf ?wilsonBand .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalty WHERE {
  { 
    ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
    ?albrecht dbo:child ?child .
    ?albrecht dbo:child ?predecessor1 .
    FILTER(?predecessor1 != ?child)
  }
  UNION
  {
    ?helena rdfs:label ""Archduchess Helena of Austria""@en .",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  VALUES ?name { ""Vince Gilligan""@en ""Cece Bell""@en ""Glenn Youngkin""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war rdfs:label ""The War""@en .
  ?regiment dbo:partOfMilitaryUnit ?war ;
            dbp:name ""2nd Dragoon Regiment (France)""@en .
  ?commander dbo:commanded ?regiment .
  ?eleonore dbo:father ?commander ;
            rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?carolyn rdfs:label ""Carolyn Jones""@en .
  ?carolyn dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?ferdinand rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?child dbo:childOf ?ferdinand .
  ?child dbo:militaryCommanderRole ?commanderRole .
  ?commanderRole dbo:unit ?dragoonRegiment .
  FILTER(?dragoonRegiment = <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)>) .
  ?child dbo:societalEvent ?event .
  ?child dbo:televisionShow ?show .
  ?ferdinand dbo:spouse ?father .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Eugène Cattin's profession
  ?eugene rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:profession ?profession .

  # Step 2: Find another professional in the same profession
  ?otherProfessional dbo:profession ?profession .

  # Step 3: Identify Mariclare Costello's spouse
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .

  # Step 4: Find the child of this spouse
  ?child dbo:parent ?spouse .

  # Step 5: Identify the parent of this child (who is also a professional in Eugène Cattin's profession)
  ?child dbo:parent ?parent .
  FILTER(?parent = ?otherProfessional)
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Taipei""@en .
  ?person rdfs:label ?name .
}
```",1,1,2,1,1,3,2,20,215,215,5,0.5,0.9772727272727273,0.6615384615384615
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find author of Smartbomb
  ?smartbomb dbo:title ""Smartbomb""@en .
  ?smartbomb dbo:author ?author .

  # Find actor from ATL
  ?atl dbo:title ""ATL""@en .
  ?atl dbp:starring ?atlasActor .

  # Find a movie with both the author of Smartbomb and an actor from ATL
  ?movie dbo:starring ?commonActor ;
         (dbo:author|dbp:starring) ?author ;
         (dbo:starring|dbp:starring) ?atlasActor .

  # Return the actors in that movie
  ?movie dbo:starring ?actor .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Dale Evans""@en .
  ?person foaf:name ""Harriette Arlene Lake"" .
  ?person dbo:nationality dbr:United_States .
  ?person dbp:politicalParty dbr:Republican_Party_(United_States) .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?gillmoreMedal rdfs:label ""Gillmore Medal""@en .
  ?gillmoreMedal dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?actor WHERE {
  # Find The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Find the actor of Lasso the Moon
  ?lasso rdfs:label ""Lasso the Moon""@en .
  ?lasso dbo:actor ?actor .

  # Check if there is any connection between alter ego and actor
  FILTER(?alterEgo = ?actor)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Step 1: Find Charles II of Naples' Spouse
SELECT ?spouse WHERE {
  ?charles rdfs:label ""Charles II of Naples""@en .
  ?charles dbo:spouse ?spouse .
}

# Step 2: Find the Parent of the Father (Grandparent) and Check Royalty
SELECT ?grandparent WHERE {
  ?spouse dbo:father ?son .
  ?son dbo:parent ?grandparent .
  OPTIONAL { ?grandparent dbo:royalTitle ?title . }
  FILTER EXISTS { ?title }
}

# Step 3: Find Maria of Bytom's Spouse
SELECT ?mariaSpouse WHERE {
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?mariaSpouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?westport rdfs:label ""Westport, Connecticut""@en .
  ?westport dbo:politicalParty ?party .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?kimWilsonBand ?nickCurranArtist ?kimWilsonRealName ?nickCurranRealName WHERE {
  # Find Kim Wilson's band
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:musicalArtist ?kimWilsonBand .

  # Find Nick Curran's associated musical artist
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:musicalArtist ?nickCurranArtist .

  # Get real names if available
  OPTIONAL { ?kimWilson foaf:name ?kimWilsonRealName . }
  OPTIONAL { ?nickCurran foaf:name ?nickCurranRealName . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?team WHERE {
  { 
    ?juanCarlos rdfs:label ""Juan Carlos Molina""@en .
    ?juanCarlos dbo:team ?team .
  }
  UNION
  {
    ?sergioAgüero rdfs:label ""Sergio Agüero""@en .
    ?sergioAgüero dbo:team ?team .
  }
}
```",2,2,3,1,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?person foaf:name ""Rod Argent""@en .
  OPTIONAL { ?person dbo:musicalArtist ?artist }.
  FILTER(CONTAINS(LCASE(?artist), 'the zombies'))
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceLabel ?partyLabel WHERE {
  ?person rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  OPTIONAL { 
    ?person dbo:party ?party .
    ?party rdfs:label ?partyLabel .
  }
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?archduke rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?archduke dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:royalTitle ?title .
  OPTIONAL { ?predecessor dbo:succeededBy <http://dbpedia.org/resource/Carl,_Duke_of_W%C3%BCrttemberg> .
             FILTER(?predecessor = ?grandchild) }
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:militaryConflict ?war .
}

SELECT ?award ?force WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:award ?award .
  ?gillmore dbo:militaryForce ?force .
}

SELECT ?entity WHERE {
  ?charleston rdfs:label ""Charleston, South Carolina""@en .
  OPTIONAL { ?entity dbo:location ?charleston . }
  FILTER (
    EXISTS { ?tracy rdfs:label ""Amasa Tracy""@en . ?tracy dbo:militaryConflict ?entity . } ||
    EXISTS { ?gillmore rdfs:label ""Quincy Adams Gillmore""@en . ?gillmore dbo:militaryForce ?entity . }
  )
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Allan Arbus
  ?allanArbus rdfs:label ""Allan Arbus""@en .
  
  # Find Allan Arbus's child
  ?child dbo:parent ?allanArbus .

  # Identify the decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles,_California ;
            rdfs:label ?decedentLabel .

  # Link the child to the decedent (assuming parent-child relationship)
  ?child dbo:parent ?decedent .

  # Find a work (movie) associated with the decedent
  ?work dbo:creator ?decedent ;
        rdf:type dbo:Film .

  # Identify an actor involved in that movie
  ?actor dbo:actedIn ?work .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Always (1989 film)""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?show ?theme WHERE {
  ?anumta rdfs:label ""Anumta Qureshi""@en .
  ?lahorePerson dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""lahore"")) .

  ?show dbo:castMember ?anumta ;
        dbo:castMember ?lahorePerson .

  OPTIONAL { ?show dbo:theme ?theme }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?entity ?label WHERE {
  ?entity dbo:established ""1955-12-02""^^xsd:date .
  ?entity rdfs:label ?label .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  VALUES ?name { ""Karl Gustav von Baggovut""@en ""Alexander Lvovich Davydov""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:participatedInBattle ?battle .
  ?battle dbo:wikiPageRedirects ?war .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer ?role WHERE {
  # Step 1: Identify ""The Shadow"" and his notable work
  ?shadow rdfs:label ""The Shadow""@en .
  ?work dbo:basedOn ?shadow ;
        dbo:producer ?producer .

  # Step 2: Find the producer of The Shadow's work
  ?producer a foaf:Person .

  # Step 3: Identify the actor of ""High Society Blues""
  ?actor rdfs:label ?actorLabel .
  ?film rdfs:label ""High Society Blues""@en ;
        dbo:starring ?actor .

  # Step 4: Determine the professional role of the producer
  OPTIONAL { ?producer dbo:occupation ?role }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?member WHERE {
  ?mark rdfs:label ""Mark Eitzel""@en .
  ?mark dbo:bandMember ?band .
  ?band dbo:member ?member .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?william rdfs:label ""William I""@en .
  ?child dbo:parent ?william ;
         a dbo:Monarch ; # Assuming royalty is represented by Monarch
         dbo:officeHolder ?office . # Assuming office holder has this property

  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?child dbo:parent ?roger .

  ?father dbo:child ?child .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?profession WHERE {
  ?lasso rdfs:label ""Lasso the Moon""@en .
  ?lasso a dbo:Film ;
         a dbo:Work .

  ?lasso dbo:actor ?actor .

  OPTIONAL { 
    ?actor dbo:profession ?profession .
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>

SELECT DISTINCT ?artist WHERE {
  ?artist dbo:musicalArtist true .
  ?artist dbo:artist true .
  ?artist dbp:birthPlace ?place .
  
  ?place rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""england"") || CONTAINS(LCASE(?placeLabel), ""uk""))
}
```",2,6,3,2,1,3,2,20,0,0,659,0,0.0,0
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?bill a dbo:Politician ;
        dbo:officeHolderOf ?office ;
        dbo:commanderDuring ?crisis ;
        dbo:author ""Back to Work""@en .
  
  FILTER(?crisis = <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis>)

  ?bill dbo:spouse ?spouse .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character ?alterEgo ?profession WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:character ?character .
  ?character dbo:alias ?alterEgo .
  OPTIONAL { ?alterEgo dbo:profession ?profession . }
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?politicianChild WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
  ?child rdf:type dbo:Politician .
  ?child dbo:sibling ?victor .
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?work dbo:author ?person .
  ?work rdfs:label ""Work of George Ducas""@en .
  
  ?yurii dbo:successor ?person .
  ?yurii rdfs:label ""Yurii Khmelnytsky""@en .
  
  ?war dbo:commanderOf ?person .
  ?war rdfs:label ""Great Turkish War""@en .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  ?margareteSophie rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  ?margareteSophie dbo:child ?child .

  # Find the children of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?philippAlbrecht dbo:child ?albrechtChild .

  # Check if any child of Margarete Sophie is a predecessor of Philipp Albrecht's children
  OPTIONAL {
    ?albrechtChild dbo:predecessor ?child .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant WHERE {
  # Step 1: Identify the leader of the 2003 Madrid City Council election
  ?leader dbo:officeHolder [
    a dbo:Election ;
    dbo:electedOffice dbp:MayorOfMadrid ;
    dbo:electionDate ?date .
    FILTER(YEAR(?date) = 2003)
  ] .

  # Step 2: Determine the residence of this leader
  ?leader dbo:residence ?madridResidence .

  # Step 3: Identify the commander in a military conflict involving Manuel Pinto da Costa
  ?conflict dbo:commander [
    dbo:officeHolder ?commander ;
    dbo:involvesManuelPintoDaCosta true .
  ] .

  # Step 4: Determine the residence of this commander
  ?commander dbo:residence ?militaryResidence .

  # Step 5: Find the tenant of both residences
  ?madridResidence dbo:tenant ?tenant .
  ?militaryResidence dbo:tenant ?tenant .
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant ?office WHERE {
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:member ?party .
  
  ?leader dbo:leader ?party ;
          dbo:officeHolder ?office .

  ?office dbp:city ""Madrid"" .
  
  ?tenant dbo:officeHolder ?office .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philip dbo:father ?father .

  ?father dbo:father ?grandfather .

  ?charles rdfs:label ""Charles I of Hungary""@en .
  ?charles dbo:father ?charlesFather .
  
  ?charlesFather dbo:father ?grandfather .

  ?grandfather a dbo:Monarch .
  ?grandfather dbo:spouse ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?parent .

  ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
  ?arthur dbo:parent ?parent .

  ?rodneyLeesAwardAwardee dbo:award ""Rodney Lees Award"" .
  ?rodneyLeesAwardAwardee dbo:parent ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?minHlaHtut dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Béla IV of Hungary
  ?belav dbp:father ""Béla III of Hungary""@en .
  ?belav rdfs:label ""Béla IV of Hungary""@en .

  # Step 2: Find Béla IV's children
  ?belav dbo:child ?child .

  # Step 3: For each child, find their children (grandchildren)
  ?child dbo:child ?grandchild .
  
  # Check if the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Step 4: Identify Charles I of Hungary and his father
  ?charles dbp:father ?father .
  ?charles rdfs:label ""Charles I of Hungarian""@en .
  
  # Find the grandfather (parent of Charles I's father)
  ?father dbo:child ?grandfather .

  # Step 5: Match the grandchild with the grandfather
  FILTER(?grandchild = ?grandfather)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Identify the ruling party in Central, Louisiana
  ?location rdfs:label ""Central, Louisiana""@en .
  ?location dbo:government ?government .
  ?government dbo:politicalParty ?rulingParty .

  # Find members of this ruling party
  ?member dbo:partyMember ?rulingParty .
  
  # Identify actors from the movie ""1,000 Dollars a Minute""
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  ?actor dbo:actorIn ?movie .
  
  # Check if any member is a spouse of an actor
  ?member dbo:spouse ?actor .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claptonBand ?curranArtist WHERE {
  # Part 1: Find Eric Clapton's band
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?clapton dbo:bandMember ?claptonBand .

  # Part 2: Find Nicholas Michael Curran's associated musical artist
  ?curran foaf:name ""Nicholas Michael Curran"" .
  ?curran dbo:musicalArtist ?curranArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor ?biographer WHERE {
  # Find the commander in the Russo-Polish War (1654–1667)
  ?commander dbo:participatedInWar ?war .
  ?war rdfs:label ""Russo-Polish War (1654–1667)""@en .

  # Identify the successor who is a politician and office holder
  ?commander dbo:successor ?successor .
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder true .

  # Find the writer of the work about George Ducas
  ?work dbo:aboutGeorgeDucas true .
  ?work dbo:author ?biographer .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
# Query to find the album of ""What You Know""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
}

# Query to find professionals associated with the album
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  ?album dbo:producer ?professional ;
         dbo:musicalArtist ?artist .
  FILTER(?artist = dbr:T.I.)
}

# Query to find movies related to the professional and identify actors
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  ?professional dbo:actedIn ?movie .
  ?movie dbo:starring ?actor .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?hu rdfs:label ""Hu Jieqing""@en .
  ?hu dbo:spouse ?spouse .
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""writer""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?show rdfs:label ""Ab Kya Hoga""@en .
  ?show dbo:castMember ?actor .
  ?actor dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?actor dbo:occupation dbr:Actor . }
    && EXISTS { ?actor dbo:occupation dbr:Politician . }
  )
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?person rdfs:label ""$pacely""@en .
  ?person dbo:associatedBand ?associatedArtist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .
  ?philipp dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  ?grandchild dbo:predecessor ?carl .

  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?margareteSophie dbo:child ?grandchild .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  ?letsch rdfs:label ""Thomas Letsch""@en .
  ?letsch dbo:manager ?team .
  ?team a dbo:SoccerClub ;
        dbo:sport ?sport .
  FILTER(?sport = dbo:Soccer)
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <http://www.geonames.org/ontology#>

SELECT DISTINCT ?pacelyArtist WHERE {
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely dbo:associatedMusicalArtist ?pacelyArtist .
}

UNION

SELECT DISTINCT ?musician WHERE {
  ?musician dbo:birthPlace ?place .
  ?place geo:featureName ""Central Region, Ghana"" .
  ?musician dbp:profession ""Musician""@en .
  ?musician rdfs:label ?nativeLabel .
  FILTER(LANG(?nativeLabel) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  ?hideyoshi dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedMusicalArtist WHERE {
  ?person rdfs:label ""Elorm Kabu Amenyah""@en .
  OPTIONAL { ?person dbo:associatedMusicalArtist ?associatedMusicalArtist . }
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild ?predecessor WHERE {
  # Step 1: Find Archduke Charles Louis of Austria's child
  ?charles a dbo:Person ;
           rdfs:label ""Archduke Charles Louis of Austria""@en .
  
  ?charlesChild dbo:child ?child ;
                rdfs:label ?childLabel .

  # Step 2: Find the child of that child who is royalty
  ?child dbo:child ?grandchild ;
         rdfs:label ?grandchildLabel .
  
  OPTIONAL { ?grandchild dbo:royalTitle ?title } .
  
  FILTER (LANG(?childLabel) = ""en"" && LANG(?grandchildLabel) = ""en"")

  # Step 3: Find Philipp Albrecht, Duke of Württemberg's child
  ?philippAlbrecht a dbo:Person ;
                   rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  
  ?philippChild dbo:child ?philippDescendant ;
                rdfs:label ?descendantLabel .

  # Step 4: Find the predecessor among Albrecht's children
  ?albrecht a dbo:Person ;
            rdfs:label ""Albrecht, Duke of Württemberg""@en .
  
  ?albrechtChild dbo:child ?predecessor ;
                 rdfs:label ?predecessorLabel .

  OPTIONAL { ?philipp",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
# Query to find Robert Lamar Thompson's stage name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?stageName WHERE {
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  ?person rdfs:label ?stageName .
  FILTER (lang(?stageName) = 'en')
}

# Query to find Walter B. Gibson's fictional character
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character WHERE {
  ?gibson dbo:creatorOf ?character .
  ?gibson rdfs:label ""Walter B. Gibson""@en .
  ?character rdf:type dbo:FictionalCharacter .
}

# Query to find the band of the musical artist
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?artist rdfs:label ""Robert Plant""@en .
  ?artist dbo:memberOfBand ?band .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Step 1: Find Roger II of Sicily's children and their parents
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?child dbo:parent ?rogerII ;
         dbo:parent ?parentOfChild .

  # Ensure the parent is royalty
  ?parentOfChild rdfs:label ?parentLabel .
  FILTER regex(?parentLabel, ""King|Queen|Prince|Princess"", ""i"")

  # Step 2: Find Constance of Burgundy's spouse and their children
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?spouse dbo:spouse ?constance ;
          rdfs:label ?spouseLabel .

  # Ensure the spouse is royalty
  FILTER regex(?spouseLabel, ""King|Queen|Prince|Princess"", ""i"")

  ?grandchild dbo:parent ?spouse ;
              dbo:parent ?childOfSpouse .

  # Step 3: Find common individual who fits both criteria
  ?commonIndividual dbo:parent ?parentOfChild .
  ?commonIndividual dbo:parent ?childOfSpouse .
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?author ?spouse WHERE {
  
  # Find the commander in the Third Taiwan Strait Crisis
  ?event dbo:location ?location .
  ?event rdfs:label ""Third Taiwan Strait Crisis""@en .
  ?event dbo:commander ?commander .

  # Identify Bill Clinton as the author of 'An Invitation to the White House'
  ?book dbo:author ?author .
  ?book rdfs:label ""An Invitation to the White House""@en .
  ?author rdfs:label ""Bill Clinton""@en .

  # Find Hillary Rodham Clinton as his spouse
  ?author dbp:spouse ?spouse .
  ?spouse rdfs:label ""Hillary Rodham Clinton""@en .
  FILTER (isLiteral(?commander) && isLiteral(?author) && isLiteral(?spouse))
}",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Identify William II of Sicily's father
  ?william2 rdfs:label ""William II of Sicily""@en .
  ?william2 dbo:father ?fatherOfWillII .

  # Step 2: Find the child of the parent of the child (royalty) of Roger II of Sicily
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?childOfRogerII dbo:child ?rogerII ;
                  a dbo:Monarch .
  ?parentOfChild dbo:child ?childOfRogerII .
  
  # Step 3: Identify the child of the child of Alfonso VI of León and Castile
  ?alfonsoVI rdfs:label ""Alfonso VI of León and Castile""@en .
  ?firstChildOfAlfonso dbo:child ?alfonsoVI ;
                      a dbo:Monarch .
  ?secondChildOfAlfonso dbo:child ?firstChildOfAlfonso .

  # Step 4: Combine information to find the common entity
  FILTER (?fatherOfWillII = ?parentOfChild)
  FILTER (?parentOfChild = ?secondChildOfAlfonso)

  BIND(?parentOfChild AS ?commonEntity)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?work WHERE {
  ?film rdfs:label ""High Society Blues""@en .
  ?film dbo:castMember ?actor .
  
  OPTIONAL { 
    ?actor dbo:film ?movieWork .
    ?actor dbo:work ?otherWork .
    
    FILTER(?movieWork = ?otherWork)
    
    # Assuming a property or method to determine significance, e.g., awards
    OPTIONAL { ?otherWork dbo:award ?award . }
  }
  
  # Filter for significant works (e.g., award-winning)
  FILTER EXISTS { ?otherWork dbo:award ?award }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?war dbo:participatingOrganisation ?navy .
  ?navy rdfs:label ""United States Navy""@en .
  FILTER(CONTAINS(LCASE(?warLabel), ""vietnam"") || CONTAINS(LCASE(?warLabel), ""disease""))
  ?war rdfs:label ?warLabel .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child dbo:childOf ?sawShweKhet .
  ?predecessor dbo:predecessor ?child .
  ?father dbo:father ?predecessor .
  ?spouse dbo:spouse ?father .

  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  ?minPhyuSpouse dbo:spouse ?sawMinPhyu .
  ?childOfSpouse dbo:childOf ?minPhyuSpouse .
}
",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?author rdfs:label ""Hillary Clinton""@en .
  ?author dbo:spouse ?spouse .
}
```",4,8,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?manager WHERE {
  ?letsch rdfs:label ""Thomas Letsch""@en .
  ?letsch dbo:manager ?team .
  
  ?season dbo:succesor ?successorSeason .
  ?season rdfs:label ""2006–07 VfL Bochum season""@en .

  ?player dbo:playsFor ?teamInSuccessor .
  ?teamInSuccessor dbo:participatesIn ?successorSeason .
  
  ?letsch dbo:manager ?player .
  
  ?teamInSuccessor dbo:manager ?manager .
}",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Nashi Parni""@en .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'uk') }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?birthPlace WHERE {
  { 
    ?person rdfs:label ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Vince Gilligan"" AS ?name)
  }
  UNION
  {
    ?person rdfs:label ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?name)
  }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran (dbo:associatedBand|dbo:member) ?band .
  ?band dbo:associatedBand ?associatedArtist ;
        dbo:member ?associatedArtist .
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild WHERE {
  # Step 1 & 2: Béla IV's children who are royalty
  ?bela dbo:child ?child .
  ?bela rdfs:label ""Béla IV of Hungary""@en .
  OPTIONAL { ?child dbo:monarch ?position . }",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Taipei""@en .
  
  ?person dbo:child ?child .

  OPTIONAL { 
    ?child dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician""))
  }

  FILTER(EXISTS { ?child dbo:occupation ?_ }) # Ensure the child has an occupation
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?ceceBirthPlace ?governor ?paulusBirthPlace ?awardeeBirthPlace WHERE {
  
  # Birth place of Cece Bell
  ?cece dbo:birthPlace ?ceceBirthPlace .
  ?cece rdfs:label ""Cece Bell""@en .

  # Governor of the birth place (region and administrative region) of Paulus Powell
  ?paulus dbo:birthPlace ?paulusBirthPlace .
  ?paulus rdfs:label ""Paulus Powell""@en .
  ?paulusBirthPlace a dbo:AdministrativeRegion ;
                   dbo:headOfState ?governor .

  # Birth place of the awardee from Vince Gilligan's awards list
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ?awardLabel .
  ?vince dbo:receivedAward ?award .
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?vera rdfs:label ""Vera Lynn""@en .
  ?vera dbo:filmography ?work .
  FILTER (
    (EXISTS { ?work rdf:type <http://dbpedia.org/class/yago/Movie5006> } ) ||
    (EXISTS { ?work rdf:type <http://dbpedia.org/ontology/TVEpisode> })
  )
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?william rdfs:label ""William Bayne""@en .
  ?william dbo:participatedIn ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?parent .

  OPTIONAL { 
    ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
    ?arthur dbo:father ?edward .
  }

  OPTIONAL {
    ?awardee dbo:title ""Commander of the Royal Victorian Order""@en ;
             dbo:recipient ?child .
    ?child dbo:parent ?edward .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?author WHERE {
  ?resident a dbo:Politician ;
            dbo:officeHolder true ;
            dbo:residence ?location .
  ?location rdfs:label ""Chappaqua, New York""@en .

  ?work dbo:author ?author ;
        rdf:type dbo:Book ;
        rdf:type dbo:WrittenWork .

  FILTER(?resident = ?author)
}
```",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?charles rdfs:label ""Charles Parsons (British Army officer)""@en .
  ?charles dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,4,5,0.0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?ferdinandAlbert2 rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en .
  ?child dbo:childOf ?ferdinandAlbert2 .
  ?child dbo:parent ?parent .
  OPTIONAL { ?parent dbo:royalTitle ?title . }
  FILTER EXISTS { ?parent dbo:royalTitle ?title } # Ensures the parent is royalty
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find Bobby Shmurda's birth name
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:birthName ?birthName .

  # Identify GS9 and its members
  ?gs9 rdfs:label ""GS9""@en .
  ?gs9 dbo:member ?member .

  # Filter members who are both artists and musical artists
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .

  # Check if any member shares the birth name with Bobby Shmurda
  ?member dbo:birthName ?birthName .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeCountry WHERE {
  ?leader rdfs:label ""Helmut Kohl""@en .
  ?leader dbo:nationality ?nativeCountry .
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonWork WHERE {
  # Actor of ""High Society Blues""
  ?actor1 dbo:starring _:a .
  _:a rdfs:label ""High Society Blues""@en .

  # Alter ego of The Shadow
  ?actor2 dbo:alterEgo _:b .
  _:b rdfs:label ""The Shadow""@en .

  # Producer of ""The Adventures of Tom Sawyer (1938 film)""
  ?producer dbo:producer _:c .
  _:c rdfs:label ""The Adventures of Tom Sawyer (1938 film)""@en .

  # Check if the actor and producer are the same person
  FILTER (?actor1 = ?producer)

  # Find common work they both produced
  ?commonWork dbo:producer ?actor1 ;
              dbo:producer ?actor2 .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?parent WHERE {
  VALUES (?name) { (""Doon Arbus""@en ""Amy Arbus""@en) }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonDescendant WHERE {
  # Identify Alexander of Württemberg
  ?alexander rdfs:label ""Alexander of Württemberg (1804-1881)""@en .
  
  # Retrieve third-generation descendants for Alexander
  ?child1 dbo:childOf ?alexander ; dbo:child ?grandchild1 .
  ?grandchild1 dbo:child ?greatGrandchild1 .
  ?greatGrandchild1 dbo:child ?thirdGenDescendantAlex .
  
  # Identify Archduke Charles Louis of Austria
  ?charles rdfs:label ""Archduke Charles Louis of Austria""@en .
  
  # Retrieve third-generation descendants for Archduke Charles Louis
  ?child2 dbo:childOf ?charles ; dbo:child ?grandchild2 .
  ?grandchild2 dbo:child ?greatGrandchild2 .
  ?greatGrandchild2 dbo:child ?thirdGenDescendantChar .
  
  # Find a common descendant who is royalty
  FILTER (?thirdGenDescendantAlex = ?thirdGenDescendantChar)
  ?commonDescendant rdfs:label ?descendantLabel .
  ?commonDescendant dbo:royalTitle ?title .
}
",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?davydov rdfs:label ""Alexander Lvovich Davydov""@en .
  ?davydov dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?sportsManager ?teamManaged ?vflBochumManager WHERE {
  # Find the sports manager born on 1968-08-26
  ?sportsManager a dbo:SoccerManager ;
                 dbo:birthDate ""1968-08-26""^^xsd:date ;
                 dbp:manager ?teamManaged .

  # Ensure the team is part of a soccer club season and sports team season
  ?teamManaged a dbo:SoccerClubSeason ;
               a dbo:SportsTeamSeason .

  # Find VfL Bochum's current manager
  ?vflBochum dbo:currentManager ?vflBochumManager .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplace WHERE {
  # Step 1: Find Henry Clay Lewis's birthplace
  ?henry dbr:Henry_Clay_Lewis .
  ?henry dbo:birthPlace ?birthplace .

  # Ensure the birthplace is a settlement in America
  ?birthplace rdf:type dbo:Settlement ;
              dbp:country ""United States""^^xsd:string .

  # Step 2: Find Quincy Adams Gillmore's award
  ?quincy dbr:Quincy_A._Gillmore .
  ?quincy dbo:award ?award .

  # Step 3: Identify Amasa Tracy's war involvement
  ?amasa dbr:Amasa_Tracy .
  ?amasa dbo:servedInWar ?war .

  # Step 4: Find a common entity related to the award and war
  OPTIONAL { ?award dbo:awardee ?force . }
  OPTIONAL { ?war dbo:participatingForce ?force . }

  FILTER(?force = ?force) # Ensure there is a common force/entity
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?pacely rdfs:label ""Pacely""@en .
  OPTIONAL { ?pacely dbo:associatedBand ?band . }
  OPTIONAL { ?band dbo:member ?associatedArtist . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfParent ?spouseOfFather WHERE {
  
  # Step 1: Identify Min Hla Htut of Pyakaung
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  
  # Step 2: Find Parent of Min Hla Htut of Pyakaung
  ?parent dbo:child ?minHlaHtut .
  
  # Step 3: Identify Child of the Parent
  ?parent dbo:child ?childOfParent .
  
  # Step 4: Find Spouse of the Father (same parent)
  ?parent dbo:spouse ?spouseOfFather .
  
  # Ensure both child and spouse are royalty
  ?childOfParent dbo:royalTitle ?title1 .
  ?spouseOfFather dbo:royalTitle ?title2 .
  
  # Step 5: Identify Saw Shwe Khet's Child
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?sawChild .
  
  # Ensure Saw Shwe Khet's child is royalty
  ?sawChild dbo:royalTitle ?title3 .
  
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?author dbo:work ?work .
  ?work rdfs:label ""Always the Love Songs""@en .

  OPTIONAL { 
    ?person dbo:succededBy ?successor .
    ?successor dbo:commanderInWar ?war1 .
    FILTER(?war1 IN (dbp:RussoPolishWar1654_1667, dbp:GreatTurkishWar))
  }

  OPTIONAL {
    ?person dbo:officeHolder ?office .
  }

  FILTER EXISTS { ?author = ?person }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis dbo:parent ?parent .
  ?parent a dbo:Royalty ;
          a dbo:Noble .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?kim rdfs:label ""Kim Wilson""@en .
  ?kim dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?margareteSophie rdfs:label ""Margarete Sophie of Austria""@en .
  ?margareteSophie dbo:parent ?parent .
  ?parent dbo:child ?child .
  ?child dbo:royalTitle ?title .
  ?child dbo:child ?grandchild .
}",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?war WHERE {
  ?algerianWar rdfs:label ""Algerian War""@en .
  ?algerianWar dbo:wikiPageWikiLink ?war .

  FILTER EXISTS { ?war rdf:type dbo:socialEvent . }
  FILTER EXISTS { ?war rdf:type dbo:Event . }
  FILTER EXISTS { ?war rdf:type dbo:televisionShow . }
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?nativeRegion WHERE {
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?choir dbo:award ?award .
  
  ?award dbo:nativeRegion ?nativeRegion .

  FILTER (CONTAINS(LCASE(?nativeRegion), ""state"") && CONTAINS(LCASE(?nativeRegion), ""settlement""))
}
```",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  
  ?albrecht dbo:child ?child .
  ?child dbo:predecessorOf ?carl .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  # Step 1: Identify The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Step 2: Find the producer of The Shadow's claim to fame (work)
  ?alterEgo dbo:producer ?producer .

  # Step 3: Identify Johnny Doughboy
  ?doughboy rdfs:label ""Johnny Doughboy""@en .
  
  # Step 4: Find the actor who played Johnny Doughboy
  ?doughboy dbo:actor ?actor .

  # Step 5: Link producer to actor's professional role
  ?producer rdfs:label ?professionalLabel .
  FILTER (lang(?professionalLabel) = ""en"")
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find the landmark with the specified elevation
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Step 2: Determine the country where this landmark is located
  ?landmark dbp:country ?country .

  # Step 3: Identify the ruling party in that country
  ?party a dbo:PoliticalParty ;
         dbo:country ?country ;
         dbo:currentLeader ?leader .
  
  # Step 4: Find a member of this ruling party who is Ann Sothern
  ?person rdfs:label ""Ann Sothern""@en ;
          dbo:birthName ""Ann Sothern"" ;
          dbo:member ?party .

  BIND(?person AS ?partyMember)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent ?movie WHERE {
  # Find Doon Arbus's parent
  ?doon rdfs:label ""Doon Arbus""@en .
  ?doon dbo:parent ?parent .

  # Find Herschel Bernardi's movie roles
  ?herschel rdfs:label ""Herschel Bernardi""@en .
  ?herschel dbo:filmRole ?role .
  ?role rdf:type dbo:Film ;
        dbo:actor ?herschel .
  
  # Ensure the role is a work (movie)
  ?role rdf:type dbo:Film .

  # Return both parent and movie
  BIND(?parent AS ?doonParent)
  BIND(?role AS ?herMovie)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor ?spouse WHERE {
  # Find Myat Hpone Pyo's predecessor
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:predecessor ?predecessor .

  # Find Saw Shwe Khet's royal child
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child dbo:parent ?sawShweKhet ;
         a dbo:RoyalPerson .

  # Find the spouse of Saw Shwe Khet (the father)
  ?sawShweKhet dbo:spouse ?spouse .

  # Find the child of Saw Min Hla
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?child2 dbo:parent ?sawMinHla ;
          a dbo:RoyalPerson .

  # Ensure the royal child is common to both Saw Shwe Khet and Saw Min Hla
  FILTER (?child = ?child2)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?william rdfs:label ""William I""@en .
  ?william dbo:royalTitle ?title .
  ?william dbo:officeHolder ?office .
  ?reference dbo:royalTitle ?title ;
             dbo:officeHolder ?office .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlaceEntity WHERE {
  ?burhan rdfs:label ""Burhan Belge""@en .
  ?burhan dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type ?type .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  
  # Optional: Filter to ensure the birthplace is a city or similar entity
  FILTER(?type IN (dbo:City, dbo:Settlement))
  
  BIND(CONCAT(STR(?birthPlace), "" "", STR(?birthPlaceLabel)) AS ?birthPlaceEntity)
}
```",2,2,3,2,1,2,2,9,0,1,249,0.0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?individual ?war WHERE {
  # For the awardee of the Golden Sword for Bravery
  { 
    ?individual dbo:award ""Golden Sword for Bravery""@en .
    ?individual dbo:participatedIn ?war .
  }
  
  UNION
  
  # For Karl Gustav von Baggovut
  {
    ?baggovut rdfs:label ""Karl Gustav von Baggovut""@en .
    ?baggovut dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?middlesex rdfs:label ""Middlesex""@en .
  ?person dbo:birthPlace ?middlesex .
}
```",1,1,2,1,1,2,3,28,935,0,0,1.0,1.0,1.0
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Query for the landmark at the specified elevation
SELECT ?landmark WHERE {
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float .
}

# Query for Roger Pryor's spouse
SELECT ?spouse WHERE {
  ?roger rdfs:label ""Roger Pryor (actor)""@en .
  ?roger dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mother WHERE {
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?child dbo:parent ?stephenV ;
         dbo:spouse ?father .
  ?mother dbo:spouse ?father ;
          a dbo:Monarch ; # Ensuring royalty status
          dbo:child ?charlesI .
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?season rdfs:label ""2007–08 VfL Bochum season""@en .
  ?season dbo:team ?club .
  ?club a dbo:SoccerClub .
  
  ?season dbo:manager ?manager .
  
  OPTIONAL { 
    ?manager dbp:nationality <http://dbpedia.org/resource/Germany> .
  }
}
```",6,13,7,3,2,3,3,71,0,1,1,0.0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?show ?theme WHERE {
  ?anumta rdfs:label ""Anumta Qureshi""@en .
  ?anumta dbo:actor ?show .
  OPTIONAL { ?show dbo:genre ?theme . }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?claimToFame WHERE {
  # Producer of ""A Star Is Born"" (1937 film)
  ?film rdfs:label ""A Star Is Born""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)>)))
  ?film dbo:producer ?producer .

  # Claim to fame of Cora Sue Collins
  ?cora rdfs:label ""Cora Sue Collins""@en .
  ?cora dbo:claimToFame ?work .
  ?work rdfs:label ?claimToFame .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party ?leader ?location WHERE {
  ?george rdfs:label ""George Savage (politician)""@en .
  
  # Find the political party George Savage is associated with
  ?george dbo:memberOf ?party .

  # Ensure the party is a political party and an organization
  ?party rdf:type dbo:PoliticalParty ;
         rdf:type dbo:Organization .

  # Identify the leader of the party
  ?party dbo:leader ?leader .

  # Find the location associated with the leader or the party
  OPTIONAL { ?leader dbo:location ?location . }
  OPTIONAL { ?party dbo:location ?location . }

  # Filter for locations in the United Kingdom
  FILTER (
    EXISTS {
      ?location rdfs:label ?locLabel .
      FILTER (CONTAINS(LCASE(?locLabel), ""united kingdom""))
    }
  )
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,1,0,6,1.0,0.14285714285714285,0.25
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actress ?child WHERE {
  ?actress a dbo:Actor ;
           dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""actress""))
  ?actress dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,3,5,932,0.375,0.0032085561497326204,0.006362672322375398
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Unable to construct a valid query due to incomplete input.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Find Stephen V of Hungary's child who is a parent of Charles Martel of Anjou
  ?stephenV dbo:child ?child .
  FILTER (CONTAINS(LCASE(?stephenV), ""stephen v of hungary"")) .

  ?child dbo:parent ?charlesMartel .
  FILTER (CONTAINS(LCASE(?charlesMartel), ""charles martel of anjou"")) .

  # Step 2: Find the spouse of this child's father
  ?father dbo:spouse ?spouse .
  ?stephenV dbo:child ?father .
  
  # Ensure the spouse is royalty and related to Philip, Despot of Romania
  ?spouse a dbo:Monarch .
  OPTIONAL { ?spouse dbo:parent ?philipDespot . FILTER (CONTAINS(LCASE(?philipDespot), ""philip despot of romania"")) }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Sal Mineo's Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?salMineo rdfs:label ""Sal Mineo""@en .
  ?salMineo dbo:deathPlace ?deathPlace .
}

# Query for the Actor of ""Color Me Dead"" and Their Death Place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?deathPlace WHERE {
  ?film rdfs:label ""Color Me Dead""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  
  # Step 2: Find Spouse of Saw Min Phyu
  ?sawMinPhyu dbo:spouse ?spouse .

  # Step 3: Identify Child of the Spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Step 4: Filter for Royalty
  ?child dbo:royalTitle ?title .

  # Step 5: Identify Parent of Min Hla Htut of Pyakaung
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?parent dbo:child ?minHlaHtut .

  # Step 6: Find Child of this Parent
  ?anotherChild dbo:parent ?parent ;
                a dbo:Person .

  # Step 7: Identify Predecessor of the Royalty
  ?royalChild dbo:predecessor ?predecessor .
  
  FILTER (?child = ?royalChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse ?childOfParent WHERE {
  # Step 1: Find Saw Shwe Khet and his spouse
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .

  # Step 2: Identify Minye Kyawswa and one of his children
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:child ?child .

  # Step 3: Find the parent of that child
  ?child dbo:parent ?parent .

  # Step 4: Identify a child of that parent
  ?parent dbo:child ?childOfParent .

  # Step 5: Check for overlap between spouse and childOfParent
  FILTER (?spouse = ?childOfParent)
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  ?philip dbo:parent ?parent .
  OPTIONAL { ?parent dbo:royaltyTitle ?title . FILTER (lang(?title) = 'en') }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?recipient ?war WHERE {
  ?recipient dbo:award dbr:Medal_of_Honor .
  ?recipient dbo:militaryConflict ?war .
}
```",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?tvShow WHERE {
  ?awards rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  ?awards dbo:reference ?reference .
  ?reference rdf:type dbo:TelevisionSeries .
  ?reference rdfs:label ?tvShow .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?artist ?profession WHERE {
  ?song rdfs:label ""What You Know""@en .
  ?song dbo:lyricsBy ?tI .
  ?tI rdfs:label ""T.I.""@en .
  
  ?song dbo:fromAlbum ?album .
  ?album dbo:artist ?artist .

  OPTIONAL { 
    ?artist dbo:profession ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tvShow WHERE {
  ?actor rdfs:label ""Richard E. Grant""@en .
  ?actor a dbo:Actor .
  ?work dbo:actor ?actor ;
        dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:label ""Television show""@en }
  BIND(?work AS ?tvShow)
}
```",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild WHERE {
  # Step 1: Find Stephen V's predecessor (likely his father)
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:predecessor ?stephenV .

  # Step 2: Find the child of the predecessor who is royalty
  ?childOfPredecessor dbo:child ?predecessor ;
                     rdf:type dbo:Monarch .

  # Step 3: Find Maria of Bytom's spouse
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?spouse dbo:spouse ?maria .

  # Step 4: Find the father of the spouse and then his parent (grandparent)
  ?fatherOfSpouse dbo:child ?spouse ;
                  rdf:type dbo:Monarch .
  ?grandParentOfSpouse dbo:child ?fatherOfSpouse ;
                       rdf:type dbo:Monarch .

  # Step 5: Find a child of the child from step 2 who is royalty
  ?childOfChild dbo:child ?childOfPredecessor ;
                rdf:type dbo:Monarch .
  
  # Ensure connection between lines
  FILTER(?grandParentOfSpouse = ?childOfChild)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Step 1: Find Joey B's birth name
  ?joeyB rdfs:label ""Joey B""@en .
  ?joeyB dbo:birthName ?birthName .

  # Step 2: Find associated musical artist of $pacely
  ?artist dbo:associatedBand ?band .
  ?band rdfs:label ""$pacely""@en .
  
  # Step 3: Identify writer of ""The Live Anthology""
  ?anthology rdfs:label ""The Live Anthology""@en .
  ?anthology dbo:writer ?writer .
  ?writer dbo:profession dbc:Musicians .

  # Step 4: Combine results
  FILTER(?artist = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?person foaf:name ""Alberto Núñez Feijóo""@en .
  ?person dbo:office ?office .
  ?office dbo:country dbr:Spain .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  
  # Part 1: Find the parent of the awardee of an award associated with Rodney Lees
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""rodney lees"")) .
  ?awardee dbo:parent ?parent .
  
  # Part 2: Find the parent of Edward Stanley, 17th Earl of Derby
  OPTIONAL {
    ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
    ?edward dbo:parent ?parent .
  }
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find Tony Hollings' birthdate
  ?tony rdfs:label ""Tony Hollings""@en .
  ?tony dbo:birthDate ?hollingsBirthDate .

  # Identify a person who is an athlete, soccer player, sports manager, and soccer manager
  ?person dbo:athlete true ;
          dbo:soccerPlayer true ;
          dbo:sportsManager true ;
          dbo:soccerManager true ;
          dbo:birthDate ?personBirthDate .

  # Ensure the birthdate matches Tony Hollings'
  FILTER (?personBirthDate = ?hollingsBirthDate)

  # Check if this person played alongside Lai Sun Cheung
  ?team dbo:member ?person .
  ?team dbo:member ?laiSunCheung .
  ?laiSunCheung rdfs:label ""Lai Sun Cheung""@en .
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?awardee ?entityInAthens WHERE {
  # Wars involving Napoleon, particularly related to Greece
  ?napoleonWar dbo:participatedIn ?war .
  ?napoleonWar rdfs:label ?napoleonLabel .
  FILTER(CONTAINS(LCASE(?napoleonLabel), ""greece"")) .

  # Eleftherios Venizelos and his award in 1930
  dbr:Eleftherios_Venizelos dbo:awardReceived ?awardee .
  ?awardee dbo:dateAwarded ""1930""^^xsd:gYear .

  # Entity in Athens related to these contexts
  ?entityInAthens dbo:location dbr:Athens .
  OPTIONAL { ?entityInAthens dbo:relatedTo ?n } .
  OPTIONAL { ?entityInAthens dbo:relatedTo ?a } .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  { 
    ?hashiba rdfs:label ""Hashiba Hidekatsu""@en .
    ?hashiba dbo:participatedIn ?war .
    BIND(?hashiba AS ?person)
  }
  UNION
  {
    ?koichiro rdfs:label ""Koichirō""@en .
    ?koichiro dbo:participatedIn ?war .
    BIND(?koichiro AS ?person)
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?spouse WHERE {
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philip dbo:father ?father .
  
  ?stephen rdfs:label ""Stephen V of Hungary""@en .
  ?stephen dbo:child ?father .

  ?father dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Identify Patrick Bowes-Lyon and his parents
  ?patrick rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?patrick dbo:parent ?parent .

  # Identify William Gayner and his birthplace
  ?william rdfs:label ""William Gayner""@en .
  ?william dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a region and a country
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Match parent with birthplace
  ?parent dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,2,0,0,1.0,1.0,1.0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryForce WHERE {
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?campaign a dbo:MilitaryConflict ;
            dbo:commander ?commander ;
            dbo:militaryForce ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember ?associatedArtist WHERE {
  ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
  ?thunderbirds dbo:bandMember ?member .
  OPTIONAL { ?member rdfs:label ""Eric Clapton""@en } 
  FILTER(?member = _:clapton)
  ?nick dbo:associatedBand ?artist .
  ?nick rdfs:label ""Nick Curran""@en .
}
",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  ?award dbo:recipient ?awardee .
  
  ?awardee dbo:nationality dbr:Japan .
  
  OPTIONAL { 
    ?awardee dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""television"") || CONTAINS(LCASE(?occupation), ""tv""))
  }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?musicalArtist WHERE {
  { 
    ?soundtrack rdfs:label ""Wizards of Waverly Place""@en .
    ?soundtrack dbo:composer ?writer .
    ?writer dbo:associatedMusicalArtist ?musicalArtist .
    ?musicalArtist rdf:type dbo:MusicArtist .
  }
  
  UNION
  
  {
    ?person rdfs:label ""Stuart Mcbeath Tosh""@en .
    ?person dbo:associatedMusicalArtist ?musicalArtist .
    ?musicalArtist rdf:type dbo:MusicArtist .
  }
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?parent dbo:child ?tisha .

  # Step 2: Find the spouse of that parent
  ?parent dbo:spouse ?spouse .

  # Step 3: Identify films produced by Nat Levine and find actors
  ?nat rdfs:label ""Nat Levine""@en .
  ?film dbo:producer ?nat ;
        dbo:actor ?actor .

  # Step 4: Match the spouse with an actor and get the birth name
  FILTER (?spouse = ?actor)
  ?actor foaf:name ?birthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?reedHowes rdfs:label ""Reed Howes""@en .
  ?reedHowes dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?parent WHERE {
  { 
    ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
    ?victor dbo:parent ?parent .
    BIND(?victor AS ?person)
  }
  UNION
  { 
    ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
    ?edward dbo:parent ?parent .
    BIND(?edward AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?war WHERE {
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  ?hideyoshi dbo:child ?child .
  ?child dbo:participatedIn ?war .
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""war"") && CONTAINS(LCASE(STR(?child)), ""japan""))
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Audrey Hepburn
  ?movie dbo:starring ?hepburnRole .
  ?hepburnRole dbo:characterName ?character ;
               dbo:actor ?audreyHepburn .
  ?audreyHepburn rdfs:label ""Audrey Hepburn""@en .

  # Find actors in the same movies
  ?movie dbo:starring ?role .
  ?role dbo:actor ?actor .

  # Ensure actor is also in ""Paradise"" (2013 film)
  ?paradiseFilm rdfs:label ""Paradise (2013 film)""@en .
  ?paradiseFilm dbo:starring ?paradiseRole .
  ?paradiseRole dbo:actor ?actor .

  FILTER(?actor != ?audreyHepburn) # Exclude Audrey Hepburn herself
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Part 1: Successor of the Commander in Russo-Polish War (1654–1667)
SELECT ?successor WHERE {
  ?commander dbo:officeHolder ?office .
  ?commander dbo:commanderOf <http://dbpedia.org/resource/Russo-Polish_War_(1654%E2%80%931667)> .
  ?commander dbo:successor ?successor .
}

# Part 2: Commander in the Battle of Vienna
SELECT ?commander WHERE {
  ?commander dbo:commanderOf <http://dbpedia.org/resource/Battle_of_Vienna> .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?conflict WHERE {
  ?bayne rdfs:label ""William Bayne""@en .
  ?bayne dbo:militaryConflict ?conflict .
}

SELECT ?militaryForce WHERE {
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:militaryForce ?militaryForce .
}

SELECT ?commander WHERE {
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?campaign dbo:commander ?commander .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenantOfMadrid ?officeOfCommander ?force WHERE {
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { 
    ?manuel dbo:officeHolder ?office .
    ?office dbo:location ?madrid .
    ?madrid rdfs:label ""Madrid""@en .
    BIND(?office AS ?tenantOfMadrid)
  }
  
  OPTIONAL {
    ?manuel dbo:officeHolder ?commandOffice .
    ?commandOffice dbo:title ?title .
    FILTER(CONTAINS(LCASE(STR(?title)), ""commander""))
    BIND(?commandOffice AS ?officeOfCommander)
  }

  OPTIONAL {
    ?manuel dbo:militaryConflict ?conflict .
    ?conflict a dbo:MilitaryConflict ;
              rdfs:label ?forceLabel .
    FILTER(CONTAINS(LCASE(STR(?forceLabel)), ""military conflict"") || CONTAINS(LCASE(STR(?forceLabel)), ""societal event""))
    BIND(?conflict AS ?force)
  }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?collinsProducer ?actorFameProducer WHERE {
  # Cora Sue Collins' claim to fame and its producer
  ?collins rdfs:label ""Cora Sue Collins""@en .
  ?collins dbo:film ?workCollins .
  ?workCollins dbo:producer ?collinsProducer .

  # Actor of High Society Blues and their claim to fame's producer
  ?movie rdfs:label ""High Society Blues""@en .
  ?movie dbo:actor ?actor .
  ?actor rdfs:label ?actorLabel .
  
  OPTIONAL {
    ?actor dbo:film ?workActor .
    ?workActor dbo:producer ?actorFameProducer .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mudvayneMember ?associatedBand WHERE {
  # Find Nate Newton's associated band (Converge)
  ?nateNewton dbo:memberOf ?converge .
  
  # Find members of Mudvayne
  ?mudvayneMember dbo:memberOf ?mudvayne .

  # Check if Mudvayne member is also a member of another band that is an organization
  ?mudvayneMember dbo:memberOf ?associatedBand .
  FILTER EXISTS { ?associatedBand rdf:type dbo:MusicalGroup . }
  
  # Ensure the associated band is distinct from Mudvayne
  FILTER (?mudvayne != ?associatedBand)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Find Alfonso VI and his children
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  ?alfonso dbo:child ?child1 .

  # Find grandchildren of Alfonso VI
  ?child1 dbo:child ?grandchild .

  # Find Roger II and his children
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?roger dbo:child ?child2 .

  # Check if any grandchild is also a child of Roger II
  FILTER (?grandchild = ?child2)
}
```",3,3,4,2,2,3,3,71,3,0,0,1.0,1.0,1.0
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Find alter ego from ""The Golden Master"" series
  ?alterEgo dbo:wikiPageRedirects ?goldenMasterSeries .
  ?goldenMasterSeries rdfs:label ""The Golden Master""@en .

  # Find actors associated with T.I.'s album containing ""What You Know""
  ?album dbp:artist <http://dbpedia.org/resource/T.I._(rapper)> ;
         dbo:track ?song .
  ?song rdfs:label ""What You Know""@en .
  ?album dbo:actor ?actor .

  # Check if the alter ego and actor are the same professional
  FILTER (?alterEgo = ?actor)
  BIND(?alterEgo AS ?professional)
}
```",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?rene rdfs:label ""Renée of Bourbon""@en .
  ?rene dbo:spouse ?spouse .

  ?child dbo:father ?spouse .
  ?child dbo:mother ?francisI .
  
  ?francisI rdfs:label ""Francis I, Duke of Lorraine""@en .
  
  ?parent dbo:child ?spouse .
  FILTER EXISTS { ?parent a dbo:Monarch } # Assuming royalty is represented by Monarch class
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?producer WHERE {
  ?film rdfs:label ""Nothing to Gein""@en .
  ?film dbo:productionCompany ?producer .
  ?producer rdf:type dbo:Organization ;
            rdf:type dbo:Group .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:actor ?actor .
  
  ?actor dbo:child ?doon .
  ?doon rdfs:label ""Doon Arbus""@en .

  ?actor dbo:child ?amy .
  ?amy rdfs:label ""Amy Arbus""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?tata rdfs:label ""Jamsetji Tata""@en .
  ?tata dbo:work ?work .
  OPTIONAL { ?work dbo:country ?country . FILTER (lang(?country) = 'en' && contains(str(?country), ""India"")) }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find actor in 'Judgment: The Trial of Julius and Ethel Rosenberg'
  ?movie rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Find Mariclare Costello's spouse
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .

  # Step 3: Identify child of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Find parent of this child (should be one of the spouses)
  ?parent dbo:parent ?child .

  # Step 5: Check if any parent is a Photographer
  OPTIONAL { ?parent dbo:occupation ""Photographer""@en }.

  FILTER EXISTS { ?parent = ?spouse }
}
",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birth place
  ?paulusPowell rdfs:label ""Paulus Powell""@en .
  ?paulusPowell dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birth place is a region and administrative region
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:AdministrativeRegion .

  # Step 3: Find the author of ""El Deafo""
  ?elDeafo dbo:title ""El Deafo""@en .
  ?elDeafo dbo:author ?author .
  ?author rdfs:label ?authorLabel .
  FILTER(CONTAINS(LCASE(?authorLabel), ""american""))

  # Step 4: Find the author's birth place
  ?author dbo:birthPlace ?authorBirthPlace .

  # Step 5: Identify the governor of the region
  ?governor dbo:governorOf ?birthPlace ;
            rdf:type dbo:Politician .
  
  # Step 6: Get the governor's birth place
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?albumArtist WHERE {
  ?song rdfs:label ""What You Know""@en .
  ?song dbo:artist ?tI .
  ?tI rdfs:label ""T.I.""@en .
  ?song dbo:album ?album .
  ?album dbo:artist ?albumArtist .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""A Picture of Britain""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonBandMember WHERE {
  
  # Step 1 & 2: Find the producer of 'Nothing to Gein' and check if it's an organisation/group
  ?album dbo:title ""Nothing to Gein""@en .
  ?album dbo:producer ?producer .
  ?producer rdf:type ?producerType .
  FILTER(?producerType IN (dbo:MusicalGroup",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?club rdfs:label ""VfL Bochum""@en .
  ?club rdf:type dbo:SoccerClub ;
        rdf:type dbo:SportsTeam ;
        rdf:type dbo:Organization .
  ?club dbo:manager ?manager .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?politician ?partyLabel ?officeLabel WHERE {
  VALUES (?name) { (""Miguel Maura""@en ""Mariano Rajoy""@en) }
  
  ?politician rdfs:label ?name .
  ?politician dbo:partyMember ?party .
  ?party rdfs:label ?partyLabel .

  OPTIONAL {
    ?office dbo:positionTitle ?title .
    ?office dbo:agent ?politician .
    FILTER(CONTAINS(LCASE(?title), ""leader"") || CONTAINS(LCASE(?title), ""president""))
    ?office rdfs:label ?officeLabel .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?vince dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?feijoo rdfs:label ""Alberto Núñez Feijóo""@en .
  
  ?feijoo dbo:office ?office .
  
  ?administration dbo:headOfState ?party ;
                  dbo:member ?feijoo .
  
  ?party rdfs:label ""Spanish Socialist Workers' Party (Spain)""@en .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?position WHERE {
  ?christian rdfs:label ""Christian IX of Denmark""@en .
  ?christian dbo:positionHeld ?position .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?movie ?producer WHERE {
  # Find Linda Bruckheimer's spouse
  ?linda rdfs:label ""Linda Bruckheimer""@en .
  ?linda dbo:spouse ?spouse .

  # Find a movie produced by Linda Bruckheimer and its producer
  ?linda dbo:producer ?movie .
  OPTIONAL { ?movie dbo:producer ?producer }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?award dbo:nativePlace ?native .
  ?native rdf:type dbo:Settlement .
  ?native dbo:country dbp:United_States_of_America .
}
```",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?parent WHERE {
  VALUES (?label) { (""Mary Elphinstone, Lady Elphinstone""@en ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en) }
  
  ?person rdfs:label ?label .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?clapton dbo:band ?band .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Eleonora Menicucci""@en .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthday WHERE {
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbo:birthDate ?birthday .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?doon rdfs:label ""Doon Arbus""@en .
  ?doon dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
# Step 1: Identify Michał Kazimierz Pac
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?michaelpac WHERE {
  ?michaelpac rdfs:label ""Michał Kazimierz Pac""@en .
}

# Step 2: Find the Great Turkish War and its Commanders
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war ?commander WHERE {
  ?war rdfs:label ""Great Turkish War""@en ;
       a dbo:MilitaryConflict .
  ?war dbo:commander ?commander .
}

# Step 3: Identify the Writer of ""Always the Love Songs""
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?writer WHERE {
  ?work rdfs:label ""Always the Love Songs""@en ;
        dbo:author ?writer .
}

# Step 4: Find the Successor who is a Politician or Office Holder
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?commander dbo:successor ?successor ;
             a dbo:MilitaryPerson .
  ?successor (dbo:officeHolder|a dbo:Politician) .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace WHERE {
  ?chieko rdfs:label ""Chieko Asakawa""@en .
  ?chieko dbo:birthPlace ?birthplace .

  OPTIONAL { 
    ?birthplace dbp:timeZone ""Japan Standard Time"" .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardeeParent ?edwardParent WHERE {
  
  # Find the awardee of Commander of the Royal Victorian Order and their parent
  ?award dbo:awardee ?awardee .
  ?award dbr:Commander_of_the_Royal_Victorian_Order .
  ?awardee dbo:parent ?awardeeParent .
  
  # Find Edward Stanley, 17th Earl of Derby and his parent
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?edwardParent .
  
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild WHERE {
  # Step 1: Find children of Béla IV who are royals
  ?belaIV rdfs:label ""Béla IV of Hungary""@en .
  ?belaIV dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  # Step 2: Find the child's child (grandchild of Béla IV)
  ?child dbo:child ?childOfChild .

  # Step 3: Identify Charles I and his father
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?charlesI dbo:father ?fatherOfCharlesI .

  # Step 4: Find the spouse of Charles II of Naples
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?spouse .

  # Step 5: Ensure the childOfChild is also a parent to Charles I's father and spouse of Charles II
  ?childOfChild dbo:parent ?fatherOfCharlesI .
  FILTER (?childOfChild = ?spouse)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?show dbo:actor ?richardGrant .
  ?richardGrant rdfs:label ""Richard E. Grant""@en .

  ?character dbo:portrayedBy ?actor .
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:featuredIn ?show .

  FILTER(?actor != ?richardGrant)
}
```",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?birthPlaceAuthor ?awardee ?birthPlaceAwardee WHERE {
  # Find the birthplace of Cece Bell, author of ""El Deafo""
  ?author rdfs:label ""Cece Bell""@en .
  ?author dbo:birthPlace ?birthPlaceAuthor .

  # Find the birthplace of Vince Gilligan
  ?awardee rdfs:label ""Vince Gilligan""@en .
  ?awardee dbo:birthPlace ?birthPlaceAwardee .
}
```",5,6,6,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinand rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?ferdinand dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,6,1,0.0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Query for Author of ""Smartbomb""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
}

# Query for Actors of ""ATL""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""ATL""@en .
  ?film dbo:starring ?actor .
}
```",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityLabel ?profession WHERE {
  { 
    ?lamont rdfs:label ""Lamont Cranston""@en .
    ?lamont dbo:profession ?profession .
    BIND(""The Shadow's Alter Ego"" AS ?entityLabel)
  }
  UNION
  {
    ?elvis rdfs:label ""Elvis Presley""@en .
    ?elvis dbo:profession ?profession .
    BIND(""Singer"" AS ?entityLabel)
  }
}
```",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?birthName WHERE {
  ?tisha dbo:parent ?parent .
  FILTER (CONTAINS(LCASE(?tisha), ""tisha sterling"")) .

  ?parent foaf:name ?birthName .
  
  OPTIONAL { 
    ?partyMembership dbo:member ?parent .
    FILTER(CONTAINS(LCASE(STR(?partyMembership)), ""republican party united states""))
  }
  
  OPTIONAL {
    ?marriage dbo:spouse ?parent ;
              dbo:spouse <http://dbpedia.org/resource/Roger_Pryor_(actor)> .
  }

  FILTER EXISTS { ?partyMembership . } 
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?timezone WHERE {
  ?japan rdfs:label ""Japan""@en .
  ?japan dbo:timeZone ?timezone .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:parent ?frederick .
  ?parent dbo:almaMater <http://dbpedia.org/resource/Eton_College> .
  ?parent dbo:child ?child .
  ?politician dbo:parent ?parent .
  ?politician rdf:type dbo:Politician .
  ?politician dbo:father ?father .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?dorothea dbo:parent ?parent .
  
  # Assuming gender information is available
  OPTIONAL { ?parent dbo:gender dbc:Males . }
  
  FILTER EXISTS { ?parent dbo:gender dbc:Males } .

  ?parent dbo:parent ?grandfather .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vitesseManager ?bochumPlayer ?bochumManager WHERE {
  # Manager of SBV Vitesse in the 2020–21 season
  ?vitesse dbp:season ""2020–21"" ;
           rdfs:label ""SBV Vitesse""@en .
  ?vitesse dbo:manager ?vitesseManager .

  # Player who was part of a sports club/organization that is also a soccer club and VfL Bochum in 2007–08
  ?player dbp:season ""2007–08"" ;
          dbo:playsFor ?bochum .
  
  ?club rdf:type dbo:SoccerClub, dbo:SportsOrganization .

  ?player dbo:playsFor ?club .
  ?bochum rdfs:label ""VfL Bochum""@en ;
           dbp:season ""2007–08"" .
  ?bochum dbo:manager ?bochumManager .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reignPeriod ?office WHERE {
  ?olaf rdfs:label ""Olaf I of Denmark""@en .
  OPTIONAL { ?olaf dbo:reign ?reignPeriod . }
  OPTIONAL { ?olaf dbo:officeHolder ?office . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:genre ?genre ;
          dbo:birthPlace ?place .
  FILTER (CONTAINS(LCASE(?place), ""florida""))
  ?artist dbo:birthName ?birthName .
}
```",3,4,4,3,1,3,3,71,0,0,59,0,0.0,0
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse ?work WHERE {
  ?hu rdfs:label ""Hu Jieqing""@en .
  ?hu dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Writer .
  ?spouse dbo:work ?work .
}",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find Rodney Lees' award
  ?rodneyLees rdfs:label ""Rodney Lees""@en .
  ?rodneyLees dbo:award ?award .

  # Step 2: Find the awardee of that award and their parent
  ?awardee dbo:award ?award .
  ?awardee dbo:parent ?parent .

  # Step 3: Identify an Eton College alumnus with a child who is a politician
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Eton_College> .
  ?child dbo:childOf ?alumnus ;
         rdf:type dbo:Politician .

  # Step 4: Find the father of this child
  ?father dbo:father ?child .

  # Step 5: Check if the parent from step 2 is the same as the father from step 4
  FILTER (?parent = ?father)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonChild WHERE {
  # Step 1: Find Archduchess Margarete Sophie of Austria's parent
  ?margareteSophie rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  ?margareteSophie dbo:parent ?parent .

  # Step 2: Find the child of that parent who is royalty
  ?childOfParent dbo:parent ?parent ;
                a dbo:Person ;
                rdfs:label ?childLabel .

  FILTER (CONTAINS(LCASE(?childLabel), ""royalty"")) 

  # Step 3: Identify Duke Philipp of Württemberg's grandchild
  ?dukePhilipp rdfs:label ""Duke Philipp of Württemberg""@en .
  ?dukeChild dbo:parent ?dukePhilipp ;
             a dbo:Person .

  ?grandchild dbo:parent ?dukeChild ;
              a dbo:Person ;
              rdfs:label ?grandchildLabel .

  # Step 4: Find the commonality
  FILTER (?commonChild = ?childOfParent && ?commonChild = ?grandchild)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  ?rogerIII dbo:parent ?parent .

  ?parent dbo:child ?williamII .
  FILTER (STR(?williamII) = ""William II of Sicily""^^xsd:string)

  ?parent dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:participatedIn ?war .
  FILTER EXISTS { ?war rdf:type dbo:MilitaryConflict }
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
# Query for actors of ""Dispatches from Elsewhere""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?series rdfs:label ""Dispatches from Elsewhere""@en .
  ?series dbo:actor ?actor .
}

# Query for Shatrughan Sinha's profession
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?sinha rdfs:label ""Shatrughan Sinha""@en .
  ?sinha dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?deathPlace WHERE {
  { 
    ?reed rdfs:label ""Reed Howes""@en .
    ?reed dbo:deathPlace ?deathPlace .
  }
  UNION
  {
    ?film rdfs:label ""Aladdin (1958 film)""@en .
    ?film dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,3,0,0.25,1.0,0.4
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?entity rdfs:label ""Shelby Oaks""@en .
  ?entity dbo:occupation ?occupation .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?curran rdfs:label ""Nicholas Michael Curran""@en .
  ?curran dbo:associatedBand ?band .
  ?band dbo:member ?artist .
  ?artist rdfs:label ?associatedArtist .
}

SELECT ?realName, ?band WHERE {
  ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
  ?thunderbirds rdfs:comment ?realName .
  
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:member ?band .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?belav rdfs:label ""Béla IV of Hungary""@en .
  
  # Find Béla IV's children
  ?belav dbo:child ?child .

  # For each child, find their children (Béla IV's grandchildren)
  ?child dbo:child ?grandchild .

  # Filter for those with a royal title
  OPTIONAL { ?grandchild dbo:royalTitle ?title . }
  
  FILTER EXISTS { ?grandchild dbo:royalTitle ?title }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event ?leader WHERE {
  ?anxo rdfs:label ""Anxo Quintana""@en .
  ?anxo dbo:leaderOf ?event .
  ?event dbo:leader ?leader .
}",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?eugene rdfs:label ""Eugène Cattin""@en .
  OPTIONAL { ?eugene dbo:actorIn ?film . FILTER(CONTAINS(LCASE(STR(?film)), ""judgment: the trial of julius and ethel rosenberg"")) }
  ?eugene dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?office ?residenceCountry ?psoeTenant WHERE {
  # Find Alberto Núñez Feijóo's office
  ?feijoo rdfs:label ""Alberto Núñez Feijóo""@en .
  ?feijoo dbo:office ?office .

  # Find Álvaro Quirós' residence country
  ?quiros rdfs:label ""Álvaro Quirós""@en .
  ?quiros dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .

  # Find the tenant of PSOE administration who is Spanish
  ?psoe rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?psoe dbo:leader ?tenant .
  ?tenant rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""spanish""))
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?victor dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinand rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?ferdinand dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,2,0,0.6666666666666666,1.0,0.8
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonActor WHERE {
  # Movies featuring Iliza Shlesinger
  ?movie1 dbo:starring ?iliza .
  ?iliza rdfs:label ""Iliza Shlesinger""@en .

  # Movies featuring Audrey Hepburn
  ?movie2 dbo:starring ?audrey .
  ?audrey rdfs:label ""Audrey Hepburn""@en .

  # Find common actor in both movies
  ?movie1 dbo:starring ?commonActor .
  ?movie2 dbo:starring ?commonActor .
}
```",4,8,5,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?yeJia rdfs:label ""Ye Jia""@en .
  ?yeJia dbo:member|dbo:player ?player .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalAssociatedArtist WHERE {
  ?lotusSong dbo:title 'Lotus'@en .
  ?lotusSong dbo:artist <http://dbpedia.org/resource/R.E.M.> .
  ?producer dbo:producer ?lotusSong .
  FILTER (CONTAINS(STR(?producer), ""band"") && CONTAINS(STR(?producer), ""organization"")) .
  ?producer dbo:associatedMusicalArtist ?artist1 .

  ?markEitzel rdfs:label 'Mark Eitzel'@en .
  ?bandMember dbo:member ?markEitzel .
  ?bandMember dbo:associatedMusicalArtist ?finalAssociatedArtist .
}",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession ?alterEgo ?actor WHERE {
  # Shatrughan Sinha's profession
  ?sinha rdfs:label ""Shatrughan Sinha""@en .
  ?sinha dbo:occupation ?profession .

  # Alter ego of The Shadow (video game)
  ?shadowGame rdfs:label ""The Shadow (video game)""@en .
  ?shadowGame dbo:characterName ?alterEgo .

  # Actor of Dispatches from Elsewhere
  ?show rdfs:label ""Dispatches from Elsewhere""@en .
  ?show dbo:actor ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?kate rdfs:label ""Kate Dimbleby""@en .
  ?kate dbo:parent ?parent .

  OPTIONAL { 
    ?book dbo:title ""A Picture of Britain""@en ;
          dbo:author ?author .
    FILTER (?parent = ?author)
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?cynthia rdfs:label ""Cynthia Morgan""@en .
  ?cynthia dbo:birthName ?birthName .
  ?cynthia dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?war dbo:name ""Russo-Polish War (1654–1667)""@en .
  ?war dbo:participatedIn ?commander .
  ?commander a dbo:MilitaryPerson ;
             dbo:officeHolder ?office .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?spouse .
  ?book dbo:author ?spouse ;
        rdfs:label ""Back to Work""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel WHERE {
  ?person dbo:deathPlace <http://dbpedia.org/resource/Switzerland> .
  ?person rdfs:label ?personLabel .
  FILTER (LANG(?personLabel) = ""en"")
}
```",1,1,2,1,1,2,3,28,0,891,906,0.0,0.0,0
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:country dbr:India .
  ?movie dbo:starring dbr:Dipankar_De .
}
```",1,3,2,1,1,3,2,20,3,1,0,0.75,1.0,0.8571428571428571
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfLeader ?tenant WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
  ?party dbo:leader ?leader .

  # Get the office held by this leader
  ?leader dbo:positionHeld ?officeOfLeader .

  # Find leaders from the 2003 Madrid City Council election
  ?election rdfs:label ""2003 Madrid City Council election""@en .
  ?election dbo:electedOfficial ?official .

  # Identify the residence of these officials and find tenants
  ?official dbo:residence ?residence .
  ?residence dbo:tenant ?tenant .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalArtist WHERE {
  ?song rdfs:label ""Lotus""@en .
  ?song dbo:producer ?producer .

  FILTER EXISTS { ?producer a dbo:Organization . }
  FILTER EXISTS { ?producer a dbo:MusicalBand . }

  ?producer dbo:associatedMusicalArtist ?artist1 .
  
  ?artist1 dbo:associatedMusicalArtist ?finalArtist .
}
```",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorBirthPlace ?vinceGilliganBirthPlace ?governorBirthPlace WHERE {
  
  # Birthplace of the author of 'El Deafo'
  ?ceceBell rdfs:label ""Cece Bell""@en .
  ?ceceBell dbo:birthPlace ?authorBirthPlace .

  # Birthplace of Vince Gilligan
  ?vinceGilligan rdfs:label ""Vince Gilligan""@en .
  ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .

  # Birthplace of the current governor of Virginia
  ?governor rdfs:label ?governorLabel .
  FILTER(CONTAINS(LCASE(?governorLabel), ""governor of virginia"") && CONTAINS(LCASE(?governorLabel), ""politician""))
  ?governor dbo:birthPlace ?governorBirthPlace .

}",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?edmund rdfs:label ""Edmund Hakewill-Smith""@en .
  ?edmund dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .
}
```",2,2,3,2,1,2,3,28,1,0,0,1.0,1.0,1.0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:label ""Photographer""@en .
}
```",1,1,2,1,1,3,3,71,83,347,854,0.1930232558139535,0.08858057630736393,0.12143379663496706
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player WHERE {
  
  # Find Marty Pollio's birthdate
  ?martyPollio rdfs:label ""Marty Pollio""@en .
  ?martyPollio dbo:birthDate ?birthday .
  
  # Find athletes born on the same date as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?sameBirthday .
  FILTER (?sameBirthday = ?birthday) .
  
  # Find teams associated with Pablo Aimar
  ?pabloAimar rdfs:label ""Pablo Aimar""@en .
  ?pabloAimar dbo:team ?aimarTeam .
  
  # Find players in Sergio Agüero's team(s)
  ?sergioAgüero rdfs:label ""Sergio Agüero""@en .
  ?sergioAgüero dbo:team ?agüeroTeam .
  
  # Find players in both Aimar's and Agüero's teams
  ?player dbo:playsFor ?commonTeam .
  FILTER (?commonTeam = ?aimarTeam || ?commonTeam = ?agüeroTeam) .
  
  # Ensure the player is also an athlete born on Marty Pollio's birthday
  FILTER (?player = ?athlete)
}
",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?amyParent ?allanChildParent ?actor WHERE {
  # Amy Arbus's parent
  ?amy a dbo:Person ;
       rdfs:label ""Amy Arbus""@en .
  ?amy dbo:parent ?amyParent .

  # Allan Arbus's child and their parent
  ?allan a dbo:Person ;
         rdfs:label ""Allan Arbus""@en .
  ?allan dbo:child ?child .
  ?child dbo:parent ?allanChildParent .

  # Actor of the movie with decedent at Los Angeles
  ?movie a dbo:Film ;
         dbo:actor ?actor .
  ?decedent dbo:decedentOf ?movie ;
            dbp:placeOfBirth ""Los Angeles""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?associatedArtist .

  OPTIONAL { 
    ?jimmyVaughan rdfs:label ""Jimmie Vaughan""@en .
    ?jimmyVaughan dbo:memberOf ?band .
    FILTER(?associatedArtist = ?band)
  }
}
```",4,5,5,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
# Query to find the tenant of Madrid (Mayor)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor WHERE {
  ?madrid dbo:mayor ?mayor .
  ?madrid rdfs:label ""Madrid""@en .
}

# Query to find the office held by Mariano Rajoy
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?rajoy rdfs:label ""Mariano Rajoy""@en .
  ?rajoy dbo:positionHeld ?office .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?cynthia rdfs:label ""Cynthia Morgan""@en .
  OPTIONAL { ?cynthia dbo:associatedBand ?associatedArtist . }
  OPTIONAL { ?cynthia dbo:collaborator ?associatedArtist . }
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?newyork rdfs:label ""New York (state)""@en .
  ?newyork dbo:award ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""all-america city award""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Identify Tisha Sterling's parent
SELECT ?parent WHERE {
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .
}

# Step 2: Find the birth name of the parent
SELECT ?birthName WHERE {
  ?parent dbo:birthName ?birthName .
}

# Step 3: Identify the landmark and its location
SELECT ?landmark ?location WHERE {
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:locatedIn ?location .
}

# Step 4: Determine the ruling party (this step might require external data)
# Assuming we have identified the country, e.g., ?country
SELECT ?rulingParty WHERE {
  ?country dbp:government ?government .
  ?government dbo:rulingParty ?rulingParty .
}

# Step 5: Find a person with the birth name and party membership
SELECT ?person WHERE {
  ?person dbo:birthName ?birthName ;
          dbo:partyMember ?rulingParty .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?value WHERE {
  ?ottomanEmpire rdfs:label ""Ottoman Empire""@en .
  ?ottomanEmpire ?property ?value .
}
```",1,1,2,1,1,2,2,9,4,1290,243,0.0030911901081916537,0.016194331983805668,0.005191434133679429
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movie ?actor WHERE {
  ?movie dbo:castMember ?afeez .
  ?afeez rdfs:label ""Afeez Oyetoro""@en .
  
  OPTIONAL { 
    ?movie dbo:musicalArtist ?cynthia .
    ?cynthia rdfs:label ""Cynthia Morgan""@en .
  }
  
  ?movie dbo:actor ?actor .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Bill Clinton""@en .
  ?person dbo:spouse ?spouse .
}
```",3,5,4,2,2,3,3,71,0,1,1,0.0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Part 1: Actor of the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:actor ?actor .

  # Part 2: Parent of a professional in Eugène Cattin's profession
  ?eugene rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:profession ?profession .
  ?professional dbo:profession ?profession .
  ?parent dbo:child ?professional .

  # Part 3: Parent of the child of Allan Arbus
  ?allan rdfs:label ""Allan Arbus""@en .
  ?allan dbo:child ?child .
  ?grandparent dbo:child ?child .

  # Find common individual satisfying all conditions
  FILTER (?actor = ?parent && ?parent = ?grandparent)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?singerRole ?band WHERE {
  ?person rdfs:label ""Robert Lamar Thompson""@en .
  OPTIONAL { ?person dbo:singer ?singerRole . }
  OPTIONAL { ?person dbo:musicalArtist ?artistRole . }
  OPTIONAL { ?person dbo:bandMember ?band . }
}
```",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeCountry ?decedent WHERE {
  # Find the native country of Nicholas II of Russia
  ?nicholas rdfs:label ""Nicholas II of Russia""@en .
  ?nicholas dbo:nationality ?nativeCountry .

  # Find the birthplace of Sandro Bertaggia
  ?sandro rdfs:label ""Sandro Bertaggia""@en .
  ?sandro dbo:birthPlace ?birthPlace .

  # Find a person who died in the same country as Sandro's birthplace
  ?decedent dbo:deathPlace ?birthPlace .
  ?decedent rdf:type dbo:Person .
}
```",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader ?office WHERE {
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
  ?party dbo:leader ?leader .
  ?leader foaf:title ?office .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Query for the birthplace of the actor from an Indian movie featuring Dipankar De
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorBirthPlace WHERE {
  ?movie dbo:starring ?actor .
  ?actor foaf:name ""Dipankar De""@en .
  ?movie dbo:country dbp:India .
  ?actor dbo:birthPlace ?actorBirthPlace .
}

# Query for the birthplace of Ebrahim Alkazi
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?ebrahim a dbo:Person ;
           foaf:name ""Ebrahim Alkazi""@en ;
           dbo:birthPlace ?birthPlace .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?koichiro rdfs:label ""Koichirō""@en .
  
  ?yamaza rdfs:label ""Yamaza Enjirō""@en .
  ?yamaza dbo:birthPlace ?birthPlace .

  ?koichiro dbo:associatedWith ?war .
  FILTER(?war != ?birthPlace) # Ensuring the war is not the birthplace itself
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?pacely rdfs:label ""Pacely""@en .
  ?pacely dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""Hong Kong C""@en .
  ?entity rdf:type dbo:Organization .
  ?entity rdf:type dbo:SportsClub .
  ?entity rdf:type dbo:SportTeam .
  ?entity rdf:type dbo:SoccerClub .
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyMember WHERE {
  ?central rdfs:label ""Central, Louisiana""@en .
  ?central dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
  ?rulingParty dbo:member ?partyMember .
}
```",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?person dbo:residenceLocation ?location .
  ?location rdfs:label ""Chappaqua, New York""@en .
  ?person dbo:officeHolderOf ?office .
  ?person dbo:commanderInWar ?war .
  ?war rdfs:label ""World War II""@en .
  ?person foaf:name ?name .
  FILTER regex(?name, 'Eisenhower', 'i') .

  OPTIONAL {
    ?work dbo:author ?person .
    ?work rdf:type dbo:Book .
  }
}",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?quintana rdfs:label ""Anxo Quintana""@en .
  ?quintana dbo:nationality dbr:Spain .
  
  ?event dbo:positionHeld ?quintana ;
         rdf:type dbo:AdministrativePost .

  OPTIONAL { 
    ?residence dbo:country dbr:Spain ;
               dbo:tenant ?quintana .
  }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceGlennYoungkin WHERE {
  ?glenn rdfs:label ""Glenn Youngkin""@en .
  ?glenn dbo:birthPlace ?birthPlaceGlennYoungkin .
}

UNION

SELECT ?birthPlaceRecipient WHERE {
  ?award dbo:recipient ?recipient .
  ?recipient rdfs:label ""Vince Gilligan""@en .
  ?recipient dbo:birthPlace ?birthPlaceRecipient .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work ?producer WHERE {
  # Part 1: Janet Gaynor's claim to fame
  { 
    ?janet rdfs:label ""Janet Gaynor""@en .
    ?janet dbo:film ?work .
    ?work dbo:producer ?producer .
  }
  
  UNION
  
  # Part 2: Producer of The Adventures of Tom Sawyer (1938 film)
  {
    ?movie rdfs:label ""The Adventures of Tom Sawyer (1938 film)""@en .
    ?movie dbo:producer ?producer .
  }
}
```",4,6,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royParty (GROUP_CONCAT(?fatherLabel; separator="", "") AS ?fatherName) ?fatherParty WHERE {
  # Query for Roy Barreras' party
  ?roy rdfs:label ""Roy Barreras""@en .
  ?roy dbo:party ?royParty .

  # Query for Sofía Petro's father and his party
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia dbo:child ?father .
  ?father rdfs:label ?fatherLabel .
  ?father dbo:party ?fatherParty .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?parent WHERE {
  # Find the author of ""A Picture of Britain""
  ?book dbo:title ""A Picture of Britain""@en .
  ?book dbo:author ?author .

  # Find artists and musical artists native to London
  ?artist a dbo:Artist ;
          dbo:nativePlace dbr:London ;
          (dbo:occupation dbo:Artist ; dbo:occupation dbo:MusicalArtist) .

  # Find the parent of such an artist
  ?artist foaf:parent ?parent .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityLabel ?profession WHERE {
  { 
    ?shadow rdfs:label ""The Shadow""@en .
    ?shadow dbo:profession ?profession .
  }
  UNION
  {
    ?actor rdfs:label ""Actor""@en .
    ?actor dbo:profession ?profession .
  }
  
  BIND(CONCAT(""Entity: "", STR(?entityLabel)) AS ?entityLabel)
}
```",3,3,4,2,2,3,3,71,0,0,4210,0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?residence WHERE {
  ?person dbo:country dbr:Spain .
  ?person dbo:residence ?residence .
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?band .
}

UNION

SELECT ?creator WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:creator ?creator .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Identify Ferdinand III and one of his children
  ?ferdinand rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?child dbo:parent ?ferdinand .

  # Step 2: Identify Cecilia Renata of Austria and her father
  ?cecilia rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaFather dbo:child ?cecilia .

  # Step 3: Find a commander in the Thirty Years' War who is also a child of Cecilia Renata's father
  ?commander dbo:parent ?ceciliaFather ;
             dbo:militaryCommanderOf <http://dbpedia.org/resource/Thirty_Year_War> .

  # Step 4: Determine the father of this commander
  ?father dbo:child ?commander .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild WHERE {
  ?margareteSophie rdfs:label ""Margarete Sophie of Austria""@en .
  ?margareteSophie dbo:parent ?parent .

  ?parent dbo:child ?child .
  
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess|Archduke|Archduchess"", ""i"") }
  
  BIND(IF(BOUND(?title), ?child, NULL) AS ?royalChild)
}
FILTER (?royalChild != ?margareteSophie)
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?naod rdfs:label ""Na'od""@en .
  ?naod dbo:father ?father .
  
  OPTIONAL { ?father dbo:royalTitle ?title . }
  OPTIONAL { ?father dbo:officeHolder ?office . }

  FILTER EXISTS { ?father dbo:royalTitle ?title } || EXISTS { ?father dbo:officeHolder ?office }
  
  ?father dbo:father ?grandfather .
  
  OPTIONAL { ?grandfather dbo:royalTitle ?gTitle . }
  OPTIONAL { ?grandfather dbo:officeHolder ?gOffice . }

  FILTER EXISTS { ?grandfather dbo:royalTitle ?gTitle } || EXISTS { ?grandfather dbo:officeHolder ?gOffice }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?alterEgoBand ?producerProfession WHERE {
  # Part 1: The Shadow's Alter Ego and Bob Thompson's Band
  OPTIONAL {
    ?lamont rdfs:label ""Lamont Cranston""@en .
    ?lamont dbo:band ?alterEgoBand .
  }
  
  OPTIONAL {
    ?bob rdfs:label ""Bob Thompson (musician)""@en .
    ?bob dbo:memberOfBand ?band .
    BIND(?band AS ?alterEgoBand)
  }

  # Part 2: Producer of Coke Studio Philippines
  ?producer rdfs:label ?producerLabel .
  FILTER(CONTAINS(LCASE(STR(?producerLabel)), ""coke studio philippines"")).
  ?producer dbo:profession ?producerProfession .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Linda Bruckheimer""@en .
  ?person dbo:birthName ""Linda Bruckheimer"" .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?battleMilitaryForce ?warMilitaryForce WHERE {
  # Part 1: Military force of Battle of Cape Finisterre (1805)
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:participatingMilitaryUnit ?battleMilitaryForce .

  UNION

  # Part 2: Military force of a war related to William Bayne
  ?person rdfs:label ""William Bayne""@en .
  ?war dbo:participant ?person ;
       a dbo:MilitaryConflict .
  ?war dbo:participatingMilitaryUnit ?warMilitaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenantOfCompostela ?tenantOfCountry ?officeFeijoo WHERE {
  # Tenant of Santiago de Compostela (e.g., Archbishop)
  ?compostela dbo:archbishop ?tenantOfCompostela .
  ?compostela rdfs:label ""Santiago de Compostela""@en .

  # Tenant of the residence country of Álvaro Quirós
  ?alvaro foaf:based_near ?country .
  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  ?country dbo:headOfState ?tenantOfCountry .

  # Office of Alberto Núñez Feijóo
  ?feijoo dbo:positionHeld ?officeFeijoo .
  ?feijoo rdfs:label ""Alberto Núñez Feijóo""@en .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Find children of Saw Shwe Khet
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:child ?child1 .

  # Find children of Saw Min Hla
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?sawMinHla dbo:child ?child2 .

  # Check if there is a common child
  FILTER (?child1 = ?child2)

  # Find the predecessor of this common child
  ?child1 dbo:predecessor ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?yandamuri rdfs:label ""Yandamuri Veerendranath""@en .
  ?yandamuri dbo:birthPlace ?entity .
  
  ?chennupati rdfs:label ""Chennupati Jagadish""@en .
  ?chennupati dbo:almaMater ?entity .
}",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Query for the manager of 2020–21 SBV Vitesse season
SELECT ?manager WHERE {
  ?vitesse dbo:sportTeam ""SBV Vitesse""@en .
  ?vitesse dbo:season ""2020–21"" .
  ?vitesse dbo:manager ?manager .
}

UNION

# Query for the manager of VfL Bochum
SELECT ?manager WHERE {
  ?bochum dbo:sportTeam ""VfL Bochum""@en .
  ?bochum dbo:manager ?manager .
}

UNION

# Query for the native country of Konrad Adenauer
SELECT ?country WHERE {
  ?adenauer rdfs:label ""Konrad Adenauer""@en .
  ?adenauer dbo:nationality ?country .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?almaMater WHERE {
  ?eleonora rdfs:label ""Eleonora Menicucci""@en .
  ?eleonora dbo:birthName ?birthName .
  
  ?eleonora dbo:almaMater ?institution .
  ?institution dbo:foundingDate ?foundingDate .

  FILTER (YEAR(?foundingDate) = 1955 && MONTH(?foundingDate) = 12 && DAY(?foundingDate) = 2)
}
```",4,5,5,3,2,3,2,20,0,1,1,0.0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonProducer WHERE {
  # Find actor and producer of ""Johnny Doughboy""
  ?work1 rdfs:label ""Johnny Doughboy""@en .
  ?work1 dbo:actor ?actor1 .
  ?work1 dbo:producer ?producer1 .

  # Find actor and producer of ""High Society Blues""
  ?work2 rdfs:label ""High Society Blues""@en .
  ?work2 dbo:actor ?actor2 .
  ?work2 dbo:producer ?producer2 .

  # Check if there is a common producer
  FILTER (?producer1 = ?producer2)
  BIND(?producer1 AS ?commonProducer)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ventirisWar ?zervasWar ?athensEntity WHERE {
  # Wars involving Konstantinos Ventiris
  ?ventiris dbo:wikiPageWikiLink ?ventirisWar .
  ?ventiris rdfs:label ""Konstantinos Ventiris""@en .

  # Wars involving Napoleon Zervas
  ?zervas dbo:wikiPageWikiLink ?zervasWar .
  ?zervas rdfs:label ""Napoleon Zervas""@en .

  # Entities located in Athens
  ?athensEntity dbp:location ?location .
  FILTER (str(?location) = ""Athens"")
}
```",3,3,4,1,3,2,3,28,1,121,0,0.00819672131147541,1.0,0.016260162601626018
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band WHERE {
  # Find bands associated with Eric Clapton
  ?clapton rdfs:label ""Eric Clapton""@en .
  ?clapton dbo:bandMember ?band .

  # Find associated artists or bands for Nick Curran
  ?curran rdfs:label ""Nick Curran""@en .
  ?curran dbo:associatedBand ?associatedBand .

  # Check if there is any overlap in bands
  FILTER (?band = ?associatedBand)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?role WHERE {
  ?georgeDucas rdfs:label ""George Ducas""@en .
  ?georgeDucas dbo:work ?work .
  OPTIONAL { 
    ?georgeDucas dbo:role ?role .
    FILTER(CONTAINS(LCASE(STR(?role)), ""commander"") && CONTAINS(LCASE(STR(?role)), ""great turkish war""))
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  
  # Step 2: Find Philip's parent who is a royalty
  ?parent1 dbo:child ?philip ;
          dbo:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""royalty"")) .

  # Step 3: Identify the spouse of Maria of Bytom
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouseOfMaria .

  # Step 4: Find the father of Maria's spouse who is a royalty
  ?parent2 dbo:child ?spouseOfMaria ;
          dbo:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""royalty"")) .

  # Step 5: Determine the parent of this royal father
  ?grandParent dbo:child ?parent2 ;
              dbo:title ?title3 .
  FILTER(CONTAINS(LCASE(?title3), ""royalty"")) .

  # Step 6: Identify the spouse of this grandparent
  ?grandParent dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Little Hat Jones""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
}
```",2,3,3,2,1,2,2,9,0,1,63421,0.0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?novel rdfs:label ""Cat Country""@en .
  
  # Check for author's nationality as a possible country association
  OPTIONAL { 
    ?novel dbo:author ?author .
    ?author dbo:nationality ?country .
  }
  
  # Check if there is any direct setting or location property (if available)
  OPTIONAL {
    ?novel dbo:setting ?location .
    ?location rdfs:label ?countryLabel .
    FILTER(lang(?countryLabel) = ""en"")
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(STR(?countryLabel)), "" "", ""_""))) AS ?country)
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?linda foaf:name ""Linda Bruckheimer""@en .
  ?linda dbo:birthName ""Linda Bruckheimer""@en .
  OPTIONAL { 
    ?film dbo:producer ?linda .
    FILTER(CONTAINS(LCASE(?film), ""12 strong""))
  }
  ?linda dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?amy rdfs:label ""Amy Arbus""@en .
  ?amy dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?adminRole WHERE {
  ?duchy rdfs:label ""Duchy of Schleswig""@en .
  ?duchy ?adminProperty ?adminRole .
}
```",2,2,3,2,1,2,3,28,0,182,2,0.0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderWar ?tvShow ?societalEvent ?georgeDucasWork ?writer WHERE {
  # Find Jean Baptist, Comte d'Arco
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  
  # Determine the war he commanded
  ?jeanBaptist dbo:commander ?commanderWar .

  # Identify a TV show and societal event related to that war
  ?tvShow dbo:subject ?commanderWar ;
          rdf:type dbo:TelevisionSeries .
  ?societalEvent dbo:subject ?commanderWar ;
                 rdf:type dbo:SocietalEvent .

  # Find George Ducas' work and its writer
  ?georgeDucas rdfs:label ""George Ducas""@en .
  ?georgeDucas dbo:work ?georgeDucasWork .
  ?georgeDucasWork dbo:author ?writer .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?antoine rdfs:label ""Antoine, Duke of Lorraine""@en .
  
  # Find Antoine's children who are royalty
  ?child dbo:childOf ?antoine ;
         dbo:royalty true .

  # Find the parent of this child
  ?child dbo:parent ?parent .

  # Ensure the parent is both royalty and noble
  ?parent dbo:royalty true .
  ?parent dbo:noble true .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?helena dbo:spouse ?spouse .
  ?spouse dbo:child ?royalChild .
  ?royalChild dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild2 WHERE {
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .

  ?child dbo:parent ?roger ;
         dbo:parent ?elvira ;
         a dbo:RoyalPerson .

  ?parent dbo:child ?child .

  ?royalChild1 dbo:parent ?parent ;
               a dbo:RoyalPerson .

  ?royalChild2 dbo:parent ?parent ;
               a dbo:RoyalPerson .
  
  FILTER(?royalChild1 != ?royalChild2)
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
# Query for actors associated with T.I.'s album ""Paper Trail""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?album rdfs:label ""Paper Trail""@en .
  ?album dbo:artist ?tI ;
         dbo:contributor ?actor .
  FILTER(?tI = <http://dbpedia.org/resource/T.I.>)
}

UNION

# Query for the profession of Lamont Cranston (The Shadow)
SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?lamontCranston ;
          dbo:occupation ?profession .
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  ?bobbyShmurda dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:father ?father .
}

SELECT DISTINCT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  OPTIONAL { ?shadow rdfs:label ?alterEgo . FILTER (lang(?alterEgo) = 'en') }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  ?john dbo:deathPlace ?deathPlace .
  FILTER(CONTAINS(LCASE(?john), ""john mcdermott (american artist)"")) .

  ?deathPlace a dbo:Settlement .

  ?deathPlace dbp:rulingParty ?rulingParty .
  
  ?rulingParty a dbo:PoliticalParty ;
              a dbo:Organisation .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?settlement WHERE {
  ?settlement rdf:type dbo:Settlement .
  ?settlement dbo:country ?england .
  ?england rdfs:label ""England""@en .
  ?settlement rdfs:label ?label .
  FILTER(LANG(?label) = 'en')
}",1,3,2,1,1,3,2,20,0,2254,6,0.0,0.0,0
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player1 ?player2 ?team WHERE {
  # Find a player related to Juan Carlos Molina
  ?molina rdfs:label ""Juan Carlos Molina (footballer)""@en .
  ?molina dbo:member ?teamMolina .
  ?teamMolina dbo:member ?player1 .

  # Find a player related to Sergio Agüero
  ?agüero rdfs:label ""Sergio Agüero""@en .
  ?agüero dbo:member ?teamAgüero .
  ?teamAgüero dbo:member ?player2 .

  # Find the team associated with Pablo Aimar
  ?aimar rdfs:label ""Pablo Aimar""@en .
  ?aimar dbo:team ?team .
  
  FILTER(?player1 != ?molina && ?player2 != ?agüero)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?richard dbo:birthName ""Richard Grant Esterhuysen""@en .
  ?shatrughan dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), 'actor'))
  FILTER(STRSTARTS(STR(?shatrughan), STR(""http://dbpedia.org/resource/Shatrughan_Sinha"")))

  ?show dbo:castMember ?richard ;
        dbo:castMember ?shatrughan .

  ?show dbo:actor ?actor .
}",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?deathPlace WHERE {
  { 
    ?person rdfs:label ""Carolyn Jones""@en .
    ?person dbo:deathPlace ?deathPlace .
  }
  UNION
  {
    ?film dbo:title ""Aladdin (1958 film)""@en ;
          dbo:actor ?actor .
    ?actor rdfs:label ?actorLabel .
    FILTER(CONTAINS(LCASE(?actorLabel), ""jonathan"") || CONTAINS(LCASE(?actorLabel), ""khan"")) # Assuming Jonathan Harris or Douglas Wilmer
    ?actor dbo:deathPlace ?deathPlace .
  }
  UNION
  {
    ?person rdfs:label ""Reed Howes""@en .
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",4,4,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?person rdfs:label ""Frédéric Bouraly""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbo:birthday ?birthday .

  ?person dbo:birthday ?sameBirthday .
  FILTER (?sameBirthday = ?birthday)

  ?person dbo:occupation ?occupation .
  VALUES ?occupation { 
    <http://dbpedia.org/ontology/SoccerPlayer> 
    <http://dbpedia.org/ontology/SoccerManager>
  }
  
  # Ensure the person has both occupations
  {
    SELECT DISTINCT ?person WHERE {
      ?person dbo:occupation <http://dbpedia.org/ontology/SoccerPlayer> .
    } LIMIT 1
  }
  UNION
  {
    SELECT DISTINCT ?person WHERE {
      ?person dbo:occupation <http://dbpedia.org/ontology/SoccerManager> .
    } LIMIT 1
  }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?hidekatsu rdfs:label ""Hashiba Hidekatsu""@en .
  ?hidekatsu dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  ?timeZone rdfs:label ""Eastern European Time""@en .
  ?region dbo:timeZone ?timeZone .
  ?region a dbo:Settlement .
}
```",2,3,3,2,1,3,2,20,0,0,159,0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?actor a dbo:Actress .
  ?actor rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,19241,0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?rene rdfs:label ""Renée of Bourbon""@en .
  ?rene dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?claude rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?child dbo:childOf ?claude .
  ?child dbo:parent ?parent .
}",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?author rdfs:label ""Hillary Clinton""@en .
  ?work dbo:author ?author ;
        rdf:type dbo:Book, dbo:WrittenWork .
}
```",1,3,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely dbo:musicalArtist ?musicalArtist .

  dbr:The_Live_Anthology dbo:author ?writer .

  ?writer rdf:type dbo:Musician .
  
  FILTER (?musicalArtist = ?writer)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?yeshaq rdfs:label ""Yeshaq I""@en .
  
  OPTIONAL { ?parent dbo:child ?yeshaq . }
  OPTIONAL { ?parent dbo:royalTitle ?title . FILTER(?title != """") }

  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,4,0,0,1.0,1.0,1.0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?value WHERE {
  ?person rdfs:label ""Emilia Yancheva Valeva""@en .
  ?person ?property ?value .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?herberson rdfs:label ""Herschel Bernardi""@en .
  ?herberson dbo:actedIn ?movie .

  ?doon rdfs:label ""Doon Arbus""@en .
  ?amy rdfs:label ""Amy Arbus""@en .

  ?parent dbo:child ?doon ;
          dbo:child ?amy .

  ?parent dbo:actedIn ?movie .
  
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album WHERE {
  ?song rdfs:label ""What You Know (T.I. song)""@en .
  ?song dbo:artist dbr:T.I._(rapper) .
  ?song dbo:album ?album .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentMary ?parentPatrick ?birthPlace WHERE {
  # Find Mary Elphinstone's parent(s)
  ?mary rdfs:label ""Mary Elphinstone, Lady Elphinstone""@en .
  ?mary dbo:parent ?parentMary .

  # Find Patrick Bowes-Lyon's parent(s)
  ?patrick rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?patrick dbo:parent ?parentPatrick .

  # Find William Gayner's birthplace
  ?william rdfs:label ""William Gayner""@en .
  ?william dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?parent .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?cityLabel WHERE {
  ?japan rdfs:label ""Japan""@en .
  ?japan a dbo:Country .
  ?city dbo:country ?japan ;
        rdfs:label ?cityLabel .
  FILTER(LANG(?cityLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,8710,8916,0.0,0.0,0
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?hidenaga rdfs:label ""Toyotomi Hidenaga""@en .
  ?hidenaga dbo:participatedIn ?war .
}

UNION

SELECT ?war WHERE {
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  ?hideyoshi dbo:participatedIn ?war .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?attacker ?defender WHERE {
  ?battle rdfs:label ""Battle of Vienna""@en .
  OPTIONAL { ?battle dbo:attacker ?attacker . }
  OPTIONAL { ?battle dbo:defender ?defender . }
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?rainer rdfs:label ""Rainer Weiss""@en .
  ?rainer dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?charlestonEntity WHERE {
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:militaryConflict ?war .
  
  ?charlestonEntity dbo:location dbpedia:Charleston,_South_Carolina ;
                    dbo:wikiPageRedirects ?relatedWarEvent .

  FILTER(?war = dbpedia:The_American_Civil_War)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person dbo:honor ""Commander of the Royal Victorian Order"" .
  ?person dbo:child ?arthurStanley .
  ?arthurStanley rdfs:label ""Arthur Stanley (politician)""@en .
  
  OPTIONAL { ?person foaf:parent ?parent . }
  
  ?descendant dbo:child ?edward17th .
  ?edward17th rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?descendant dbo:officeHolder true .
  ?descendant dbo:politician true .

  FILTER(?person = ?parent || ?descendant = ?parent)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?work ?writer WHERE {
  ?apacheIndian rdfs:label ""Apache Indian""@en .
  ?apacheIndian dbo:musicalWork ?work .
  ?work a dbo:MusicalWork .
  ?work dcterms:creator ?writer .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?spouse WHERE {
  ?work rdfs:label ""An Invitation to the White House""@en .
  ?work dbo:author ?author .
  
  FILTER(?author = dbpedia:Bill_Clinton) .

  ?author dbo:spouse ?spouse .
  
  OPTIONAL { ?spouse dbo:occupation ?occupation . }
  OPTIONAL { ?spouse dbo:officeHolder ?officeHolder . }

  FILTER EXISTS { ?spouse dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""politician"")) }
  FILTER EXISTS { ?spouse dbo:officeHolder ?officeHolder . }
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Step 1: Identify Shatrughan Sinha's profession
SELECT ?profession WHERE {
  ?sinha rdfs:label ""Shatrughan Sinha""@en .
  ?sinha dbo:occupation ?profession .
}

# Step 2: Find another professional in the same field
SELECT DISTINCT ?otherProfessional WHERE {
  ?sinha rdfs:label ""Shatrughan Sinha""@en .
  ?sinha dbo:occupation ?profession .
  ?otherProfessional dbo:occupation ?profession .
  FILTER(?otherProfessional != ?sinha)
}

# Step 3: Identify the television show Richard E. Grant acted in
SELECT DISTINCT ?tvShow WHERE {
  ?grant rdfs:label ""Richard E. Grant""@en .
  ?grant dbo:performerIn ?work .
  ?work rdf:type dbo:TelevisionSeries .
}

# Step 4: Find an actor from a movie that is also a television show
SELECT DISTINCT ?actor WHERE {
  ?tvShow rdf:type dbo:Film .
  ?tvShow dbo:starring ?actor .
}
```",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royalChild WHERE {
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouse1 .

  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?child dbo:parent ?spouse1 ;
         dbo:parent ?roger .

  ?spouse2 dbo:spouse ?child .
  
  ?royalChild dbo:parent ?spouse2 ;
              rdf:type dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?gustavo rdfs:label ""Gustavo Petro""@en .
  ?gustavo dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,6,0,0,1.0,1.0,1.0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?marianoOffice ?tenantOfAlbertoResidence ?partyLeaderOffice WHERE {
  # Mariano Rajoy's office
  ?mariano dbo:office ?marianoOffice .
  FILTER (str(?mariano) = ""Mariano_Rajoy"")

  # Alberto Ruiz-Gallardón's residence tenant
  ?alberto dbo:residence ?residence .
  ?tenant dbo:currentResidence ?residence .
  FILTER (str(?alberto) = ""Alberto_Ruiz-Gallardón"")
  
  # Miguel Maura's party and its leader's office
  ?miguel dbo:memberOfParty ?party .
  ?leader dbo:partyLeader ?party .
  ?leader dbo:office ?partyLeaderOffice .
  FILTER (str(?miguel) = ""Miguel_Maura"")
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?spouse WHERE {
  # Step 1: Identify Saw Min Hla and her children
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?sawMinHla dbo:child ?child .

  # Step 2: Identify Myat Hpone Pyo and his father
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:father ?father .

  # Step 3: Find the spouse of the father and check for royalty status
  ?father dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:royalTitle ?title . }
  
  FILTER EXISTS { ?child = ?myatHponePyo } 
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?samProfession WHERE {
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?samProfession .
}

UNION

SELECT ?shadowAlterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?shadowAlterEgo .
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?isabella rdfs:label ""Isabella of Austria""@en .
  ?isabella dbo:father ?father .
  
  ?maximilian rdfs:label ""Maximilian I, Holy Roman Emperor""@en .
  ?maximilian dbo:child ?father .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?alexander rdfs:label ""Alexander of Württemberg""@en .
  FILTER(?alexander != dbpedia:Alexander_of_W%C3%BCrttemberg) # To avoid matching the wrong entity
  ?alexander dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .

  ?child dbo:parent ?alexander .
  ?grandchild dbo:parent ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?profession .
}

SELECT ?occupation ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:occupation ?occupation .
  
  OPTIONAL {
    ?bob dbo:band ?band .
  }
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?parent .
  OPTIONAL { ?parent dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""politician"")) }
}

SELECT ?child WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
  OPTIONAL { ?child dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""politician"")) }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?sport WHERE {
  ?aleksandr rdfs:label ""Aleksandr Filimonov""@en .
  ?aleksandr dbo:plays ?sport .
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Find Saw Shwe Khet's child
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?child1 dbo:childOf ?sawShweKhet .

  # Step 2: Find Saw Min Hla's child
  ?sawMinHla rdfs:label ""Saw Min Hla""@en .
  ?child2 dbo:childOf ?sawMinHla .

  # Step 3: Find the common child
  FILTER (?child1 = ?child2)
  
  # Step 4: Identify Myat Hpone Pyo's father
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?father dbo:parentOf ?myatHponePyo .

  # Step 5: Find the spouse of Myat Hpone Pyo's father
  ?spouse dbo:spouse ?father .

  # Step 6: Check if the spouse is royalty and find predecessor
  OPTIONAL { ?spouse a dbo:Monarch . }
  OPTIONAL { ?predecessor dbo:predecessor ?spouse . }

  FILTER EXISTS { ?spouse a dbo:Monarch } # Ensure the spouse is royalty

  BIND(?predecessor AS ?result)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bayneMilitaryForce ?calderMilitaryForce WHERE {
  # For William Bayne
  ?bayne rdfs:label ""William Bayne""@en .
  OPTIONAL { 
    ?event dbo:militaryConflict ?bayneWar .
    ?bayneWar dbo:participatingMilitaryForce ?bayneMilitaryForce .
  }
  
  # For Robert Calder
  ?calder rdfs:label ""Robert Calder""@en .
  OPTIONAL {
    ?societalEvent dbo:event ?calderEvent .
    ?calderEvent dbo:participatingMilitaryForce ?calderMilitaryForce .
  }
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonTenant WHERE {
  # Part 1: Leader of 2003 Madrid City Council Election
  ?leader dbo:electedAs dbp:Mayor_of_Madrid ;
          dbo:officeHolder ?office1 .
  ?office1 dbo:term ""2003-2007""^^xsd:string .
  ?leader dbo:residence ?residence1 .

  # Part 2: Commander in Central African Republic Civil War
  ?commander dbo:militaryCommander ?role ;
             dbo:officeHolder ?office2 ;
             dbo:politician ?politician .
  ?role dbo:term ""Central_African_Republic_Civil_War""^^xsd:string .
  ?commander dbo:residence ?residence2 .

  # Find common tenant
  ?commonTenant dbo:tenantOf ?residence1 .
  ?commonTenant dbo:tenantOf ?residence2 .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""Linda Sue Cobb""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?relatedEntity WHERE {
  ?hidekatsu rdfs:label ""Hashiba Hidekatsu""@en .
  ?hidekatsu dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:participant ?relatedEntity . }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
   
SELECT DISTINCT ?commonEntity WHERE {
  { 
    ?margarete rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
    ?margarete dbo:child ?commonEntity .
  }
  UNION
  {
    ?alexander rdfs:label ""Alexander of Württemberg (1804–1881)""@en .
    ?alexander dbo:child ?child .
    ?child dbo:child ?grandchild .
    ?grandchild dbo:child ?commonEntity .
  }
  UNION
  {
    ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
    ?predecessor dbo:successor ?carl .
    ?predecessor = ?commonEntity .
  }
}
```

[[ ## completed ##",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?location WHERE {
  ?suvorov rdfs:label ""Alexander Suvorov""@en .
  ?suvorov dbo:participatedIn ?war .
  ?war dbp:location ?location .
  FILTER(CONTAINS(LCASE(?location), ""poland""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person dbo:actor <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""photographer"") && CONTAINS(LCASE(str(?occupation)), ""actor""))
  ?person dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Query 1: Uncle Murda's Band Members
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?uncleMurda foaf:name ""Uncle Murda""@en .
  ?uncleMurda dbo:member ?bandMember .
}

# Query 2: Person Born with a Specific Birth Name and from Florida
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""native""))
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Florida""@en .
  ?person a dbo:MusicalArtist .
}

# Query 3: Region, State, and Settlement of Coro de la Pontificia Universidad Católica de Puerto Rico
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region ?state WHERE {
  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?coro dbo:locatedIn ?location .
  ?location a dbo:Region ;
            rdfs:label",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?suvorov rdfs:label ""Alexander Suvorov""@en .
  ?suvorov dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?miguelOffice ?commanderOffice ?leaderTenant WHERE {
  # Miguel Maura's Office
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:office ?miguelOffice .

  # Commander in Central African Republic Civil War
  ?conf dbp:name ""Central African Republic Civil War"" .
  ?commander dbo:role ?commanderRole ;
             dbo:memberOf ?politicalEntity ;
             rdf:type dbo:Politician .
  ?conf dbo:participant ?commander .
  FILTER(CONTAINS(LCASE(?commanderRole), ""commander""))
  ?commander dbo:office ?commanderOffice .

  # Leader's Residence Tenant in 2003 Madrid City Council Election
  ?election dbp:name ""2003 Madrid City Council election"" .
  ?leader rdf:type dbo:Politician ;
          dbo:residence ?residence .
  ?residence dbo:tenant ?leaderTenant .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherSpouse WHERE {
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philip dbo:father ?father .
  ?father dbo:spouse ?fatherSpouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?party rdfs:label ""National Party of Greece""@en .
  ?party dbo:leader ?leader .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor ?decedent WHERE {
  # Find the predecessor of Ada Watson
  ?ada rdfs:label ""Ada Watson""@en .
  ?ada dbo:predecessor ?predecessor .

  # Find Mark Tournier's birthplace and ensure it is a settlement
  ?mark rdfs:label ""Mark Tournier""@en .
  ?mark dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .

  # Find the decedent at this birthplace
  ?decedent dbo:deathPlace ?birthPlace .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant ?office WHERE {
  # Find the tenant of Spain
  ?country dbo:name ""Spain""@en .
  ?country dbo:monarch ?tenant .

  # Find the office held by Alberto Núñez Feijóo
  ?person rdfs:label ""Alberto Núñez Feijóo""@en .
  ?person dbo:office ?office .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Color Me Dead""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?roger rdfs:label ""Roger Pryor (actor)""@en .
  ?roger dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchildFather WHERE {
  # Step 1: Identify Constance of Burgundy
  ?constance rdfs:label ""Constance of Burgundy""@en .
  
  # Step 2: Find her spouse
  ?constance dbo:spouse ?spouse .

  # Step 3: Determine their child
  ?child dbo:parent ?constance ;
         dbo:parent ?spouse .

  # Step 4: Identify the grandchild who is a royalty
  ?grandchild dbo:parent ?child .
  ?grandchild rdf:type dbo:Monarch .

  # Step 5: Find William I's reference that is a royalty and office holder
  ?william rdfs:label ""William I""@en .
  ?reference dbo:officeHolder ?william ;
             rdf:type dbo:Monarch .

  # Step 6: Determine the child of this reference who is also a royalty
  ?childOfReference dbo:parent ?reference .
  ?childOfReference rdf:type dbo:Monarch .

  # Step 7: Identify the father of this child
  ?father dbo:child ?childOfReference .
  
  # Return the father of the grandchild from step 4
  FILTER(?grandchild = ?childOfReference)
  BIND(?father AS ?grandchildFather)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  
  # Step 1: Identify the soccer player and manager born on 1979-11-03
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbr:Soccer_manager .
  
  # Step 2: Identify the actor who is also a soccer player and athlete
  ?actor dbo:occupation dbr/Actor .
  ?actor dbo:sport dbr/Soccer .
  ?actor dbo:athlete dbr/Athlete .
  ?film dbo:director dbr/Manuel_Huerga .
  ?film dbo:starring ?actor .
  
  # Step 3: Find the team associated with the soccer player and manager
  ?person dbo:team ?team .
}",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:partyMembership db:Republican_Party_(United_States) .
  ?person dbo:commanderOf ?war .

  FILTER EXISTS { 
    ?george rdfs:label ""George Pickett""@en .
    ?george dbo:commanderOf ?war .
  }
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Mariclare Costello
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  
  # Step 2: Find her spouse(s)
  ?mariclare dbo:spouse ?spouse .

  # Step 3: Determine the child of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Identify the parent of the child (likely the spouse itself)
  ?parent ?relation ?child .
  
  # Step 5: Find actors in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:actor ?actor .

  # Step 6: Cross-reference to see if any actor is also a parent
  FILTER(?parent = ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthplace WHERE {
  { 
    ?person rdfs:label ""Ebrahim Alkazi""@en .
    ?person dbo:birthPlace ?birthplace .
  }
  UNION
  {
    ?actor rdfs:label ""Utpal Dutt""@en .
    ?actor dbo:birthPlace ?birthplace .
  }
}",3,3,4,2,2,3,2,20,2,6,0,0.25,1.0,0.4
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Find a band member of The Alan Parsons Project and their association with Stuart McBeath Tosh
SELECT DISTINCT ?member ?associatedArtist WHERE {
  ?project dbo:musicalArtist ?member .
  ?project rdfs:label ""The Alan Parsons Project""@en .
  
  OPTIONAL {
    ?member dbp:associatedMusicians ?stuart .
    ?stuart rdfs:label ""Stuart McBeath Tosh""@en .
  }
  
  OPTIONAL {
    ?member dbo:associatedBandMember ?associatedArtist .
  }
}

# Part 2: Find an associated musical artist for Billy Lyall
SELECT DISTINCT ?lyall ?associatedArtist WHERE {
  ?lyall rdfs:label ""Billy Lyall""@en .
  ?lyall dbo:associatedMusicians ?associatedArtist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?location ?rulingParty WHERE {
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
  
  OPTIONAL { ?landmark dbo:location ?location . }
  
  OPTIONAL {
    ?location dbp:rulingParty ?rulingParty .
  }
}
```",2,2,3,2,1,3,3,71,0,269,3,0.0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entityInCharleston ?force WHERE {
  
  # Find the awardee of the Gillmore Medal
  ?gillmoreMedalAward dbo:recipient ?awardee .
  ?gillmoreMedalAward rdfs:label ""Gillmore Medal""@en .
  
  # Determine the force associated with the awardee
  ?awardee dbo:militaryUnit ?force .
  
  # Identify Amasa Tracy and his association with the American Civil War
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:participatedInWar ?civilWar .
  ?civilWar rdfs:label ""American Civil War""@en .
  
  # Find entities in Charleston, South Carolina related to these contexts
  ?entityInCharleston dbo:location ?charlestonLocation .
  ?charlestonLocation rdfs:label ""Charleston, South Carolina""@en .
  
  OPTIONAL {
    ?entityInCharleston dbo:relatedTo ?awardee .
  }
  OPTIONAL {
    ?entityInCharleston dbo:relatedTo ?tracy .
  }

}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?award rdfs:label ""Golden Sword for Bravery""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person rdfs:label ""Robert Lamar Thompson""@en .
  ?person a dbo:MusicArtist .
  OPTIONAL { ?person dbo:band ?band . }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team1 rdfs:label ""Hong Kong C Team""@en .
  ?team2 rdfs:label ""Ye Jia""@en .

  ?manager dbo:manager ?team1 ;
           dbo:manager ?team2 ;
           a dbo:SoccerManager ;
           dbo:sport ?sport .

  FILTER(?sport = dbo:Soccer)
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?jst rdfs:label ""Japan Standard Time""@en .
  ?country dbo:timeZone ?jst ;
           dbo:countryName ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgoProfession WHERE {
  ?shadow rdfs:label ""The Man Who Laughs""@en .
  ?shadow dbo:profession ?alterEgoProfession .
}

UNION

SELECT ?concepcionProfession WHERE {
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:birthName ""Robert Lamar Thompson"" .
  ?sam dbo:occupation ?concepcionProfession .
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager ?teamSeason WHERE {
  ?person rdf:type dbo:SportsManager .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1968 && MONTH(?date) = 8 && DAY(?date) = 26) .

  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ""West Germany""@en .

  ?person dbo:managerOf ?team .
  ?teamSeason rdf:type dbo:SoccerClubSeason ;
              dbo:sportsTeam ?team ;
              dbo:season ?season .
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist ?bandName WHERE {
  # Find associated musical artist for Nick Curran
  ?nickCurran rdfs:label ""Nick Curran""@en .
  OPTIONAL { 
    ?nickCurran dbo:associatedBand ?artistEntity .
    ?artistEntity rdfs:label ?associatedArtist .
  }

  # Find the real name of the band associated with Kim Wilson
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  ?kimWilson dbo:band ?bandEntity .
  ?bandEntity rdfs:label ?bandName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?uncleMurda rdfs:label ""Uncle Murda""@en .
  ?uncleMurda dbo:bandMember ?member .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"```sparql
# Query 1: Find The Shadow's Alter Ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alias ?alterEgo .
}

# Query 2: Find Movies that are also TV Shows and Richard E. Grant's Roles
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:basedOnBook ?book .
  ?book dbo:adaptationOf ?tvShow .
  ?actor dbo:film ?movie .
  ?actor rdfs:label ""Richard E. Grant""@en .
}

# Query 3: Confirm Shatrughan Sinha's Profession
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?profession WHERE {
  ?sinha rdf:type dbo:Person .
  ?sinha rdfs:label ""Shatrughan Sinha""@en .
  ?sinha dbo:occupation ?profession .
}
```",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?deathPlace WHERE {
  { 
    ?salMineo rdfs:label ""Sal Mineo""@en .
    ?salMineo dbo:deathPlace ?deathPlace .
    BIND(""Sal Mineo"" AS ?person)
  }
  UNION
  {
    ?carolynJones rdfs:label ""Carolyn Jones""@en .
    ?carolynJones dbo:deathPlace ?deathPlace .
    BIND(""Carolyn Jones"" AS ?person)
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?author ?spouse WHERE {
  ?book dbo:author ?author ;
        rdfs:label ?title .
  
  FILTER(CONTAINS(LCASE(?title), ""hillary clinton"") && 
         CONTAINS(LCASE(STR(?author)), ""politician"") &&
         CONTAINS(LCASE(STR(?author)), ""office holder""))

  OPTIONAL { ?author dbo:spouse ?spouse }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?force WHERE {
  ?awardee dbo:award ?gillmore .
  ?gillmore rdfs:label ""Gillmore Medal""@en .
  OPTIONAL { ?awardee dbo:force ?force . }
}
```",2,2,3,2,1,3,3,71,0,1,5,0.0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentBirthName WHERE {
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .
  ?parent dbo:birthName ?parentBirthName .
}
```",3,3,4,3,1,3,3,71,0,2,3,0.0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band rdfs:label ""Human Remains (band)""@en .
  OPTIONAL { ?band dbo:member ?member . }
  OPTIONAL { ?band dbp:members ?member . }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?dappyMusician ?stonebwoyArtist WHERE {
  # Find Dappy's associated musicians
  ?dappy rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?dappy dbo:associatedBand ?dappyMusician .

  # Find Stonebwoy's associated artists
  ?stonebwoy rdfs:label ""Elorm Kabu Amenyah""@en .
  ?stonebwoy dbo:associatedBand ?stonebwoyArtist .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find Lamont Cranston (The Shadow)
  ?shadow dbo:alterEgo ""Lamont Cranston""@en .
  
  # Find T.I.'s album and song
  ?album rdfs:label ""Paper Trail""@en ;
         dbo:song ?song .
  ?song rdfs:label ""Live Your Life""@en .

  # Find Michael Rapaport's involvement in Shelby Oaks
  ?movie rdfs:label ""Shelby Oaks""@en ;
         dbo:starring ?actor .
  
  # Check if the actor is connected to all entities
  FILTER(?actor = ?shadowActor && ?albumArtist = ?songArtist)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Identify Uncle Murda's Band
SELECT ?band WHERE {
  ?uncleMurda rdfs:label ""Uncle Murda""@en .
  ?uncleMurda dbo:memberOfBand ?band .
}

# Step 2: Find Awards Associated with Coro de la Pontificia Universidad Católica de Puerto Rico
SELECT ?award WHERE {
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?choir dbo:awardsReceived ?award .
}

# Step 3: Determine the Native Region of the Award
SELECT DISTINCT ?nativeRegion WHERE {
  ?award dbo:nativePlace ?place .
  ?place a dbo:State ;
         dbp:country ""United States"" .
}

# Step 4: Find Band Members from the Same Native Region
SELECT DISTINCT ?bandMember WHERE {
  ?bandMember dbo:nativePlace ?nativeRegion .
  ?band dbo:member ?bandMember .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor WHERE {
  ?duchy rdfs:label ""Duchy of Schleswig""@en .
  ?duchy dbo:mayor ?mayor .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?george rdfs:label ""George Ducas""@en .
  ?george dbo:author ?work .
}
```",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?george rdfs:label ""George Ducas""@en .
  ?george dbo:work ?work .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person rdfs:label ""Álvaro Quirós""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Step 1: Find the commander in Siege of Mukha
SELECT ?commander WHERE {
  ?event dbo:eventType dbc:Siege_of_Mukha .
  ?event dbo:commander ?commander .
}

# Step 2: Check if the commander is royalty
SELECT ?commander WHERE {
  ?commander a dbo:RoyalPerson .
}

# Step 3: Find the parent of the commander who is royalty
SELECT ?parent WHERE {
  ?commander dbo:child ?parent .
  ?parent a dbo:RoyalPerson .
}

# Step 4: Identify the child of this royal parent
SELECT ?child WHERE {
  ?parent dbo:child ?child .
}

# Step 5: Find The Shadow's alter ego
SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alias ?alterEgo .
}

# Step 6: Find the father of Baeda Maryam I
SELECT ?father WHERE {
  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:parent ?father .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Richard Grant Esterhuysen
  ?richard dbo:birthName ""Richard Grant Esterhuysen""@en .
  
  # Step 2: Find television shows he acted in
  ?show dbo:starring ?richard .

  # Step 3: Identify the politician from ""Ab Kya Hoga""
  ?abKyaHoga dbp:title ""Ab Kya Hoga""@en .
  ?abKyaHoga dbo:actor ?politician .
  ?politician dbo:profession dbc:Politicians_from_India .

  # Step 4: Find actors of that television show
  ?abKyaHoga dbo:starring ?actor .
}
```",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinand rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?ferdinand dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,2,1,0.5,0.6666666666666666,0.5714285714285715
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?birthPlaceLabel WHERE {
  { 
    ?cece rdfs:label ""Cece Bell""@en .
    ?cece dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    BIND(""Cece Bell"" AS ?personLabel)
  }
  UNION
  { 
    ?governor rdfs:label ""Glenn Youngkin""@en .
    ?governor dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    BIND(""Governor of Virginia"" AS ?personLabel)
  }
}
```",3,4,4,2,2,3,3,71,0,3,1,0.0,0.0,0
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?charles rdfs:label ""Charles II of Naples""@en .
  ?charles dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  # Find musical artists associated with Wizards of Waverly Place soundtrack
  ?soundtrack dbo:musicalArtist ?artist .
  ?soundtrack rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .

  # Find band members of The Alan Parsons Project
  ?bandMember dbo:bandMember ?artist .
  ?band rdfs:label ""The Alan Parsons Project""@en .
  ?band dbo:member ?bandMember .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?maria rdfs:label ""Maria Anna of Bavaria (1574)""@en .
  ?maria dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Identify Eton College
  ?etonCollege rdfs:label ""Eton College""@en .
  
  # Find alumni of Eton College
  ?alumnus dbo:alumniOf ?etonCollege .

  # Find children of the alumnus
  ?alumnus dbo:child ?child .

  # Check if the child is a politician
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?curran a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  ?curran dbo:associatedBand ?band .
  ?band dbo:member ?associatedArtist .
}

SELECT ?bandMember WHERE {
  ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en ;
                a dbo:Band .
  ?thunderbirds dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?description WHERE {
  ?lhr rdfs:label ""Lahore""@en .
  FILTER(CONTAINS(LCASE(?lhrLabel), ""heart of pakistan"") || 
         CONTAINS(LCASE(?lhrLabel), ""paris of the east"") ||
         CONTAINS(LCASE(?lhrLabel), ""city of gardens"") ||
         CONTAINS(LCASE(?lhrLabel), ""city of literature""))
  ?person dbo:birthPlace ?lhr .
  ?person rdfs:label ""Dikhawa""@en .
  OPTIONAL { ?person foaf:topicinterest ?description }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?season rdfs:label ""SBV Vitesse 2020–21""@en .
  ?season dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  ?conflict dbo:commander ?commander .
  ?manuel dbo:commander ?conflict .
  
  FILTER EXISTS { ?commander a dbo:OfficeHolder . }
  FILTER EXISTS { ?commander a dbo:Politician . }
}
```",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?party dbo:leader ?politician .
  FILTER (str(?party) = ""Conservative Republican Party (Spain)""@en)
  
  ?politician dbo:residence ?residence .
  ?ruizGallardon dbo:residence ?residence .

  ?marianoRajoy dbo:officeHolder ?office .
  ?politician dbo:officeHolder ?sameOffice .
  FILTER (?sameOffice = ?office)

  ?marianoRajoy dbp:name ""Mariano Rajoy""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Find the parent of Princess Sara bint Faisal
SELECT ?parent WHERE {
  ?sara rdfs:label ""Princess Sara bint Faisal""@en .
  ?sara dbo:parent ?parent .
}

UNION

# Find a royalty child of Prince Faisal bin Hussein and their parent
SELECT ?child ?parent WHERE {
  ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
  ?faisal dbo:child ?child .
  
  # Assuming royalty can be identified by having a title or role
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""Princess|Prince"", ""i"") }
  
  ?child dbo:parent ?parent .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?deathPlace WHERE {
  ?movie rdfs:label ""Color Me Dead""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?country WHERE {
  ?dawid rdfs:label ""Dawid Olejniczak""@en .
  ?dawid dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,2,20,0,1,108,0.0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?royaltyParent ?childFather WHERE {
  # Find The Shadow as the alter ego of Lamont Cranston
  ?shadow rdfs:label ""The Shadow""@en .
  
  # Find Dawit I, the parent of Yeshaq I who is royalty
  ?yeshaq dbo:parent ?dawitI .
  ?dawitI rdfs:label ""Dawit I""@en .
  
  # Find Lebna Dengel as the father of Baeda Maryam I
  ?baedaMaryam dbo:father ?lebnaDengel .
  ?lebnaDengel rdfs:label ""Lebna Dengel""@en .
  
  # Link The Shadow to Dawit I and then to Lebna Dengel
  FILTER(?shadow = ?dawitI) 
  FILTER(?dawitI = ?lebnaDengel)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Office of the Leader of the Conservative Republican Party (Spain)
SELECT ?leaderOffice WHERE {
  ?party rdfs:label ""Conservative Republican Party""@en .
  ?party dbo:country dbr:Spain .
  ?party dbo:leader ?leader .
  ?leader dbo:position ?leaderOffice .
}

# Part 2: Tenant of the Residence of Alberto Ruiz-Gallardón
SELECT ?tenant WHERE {
  ?residence dbo:resident dbr:Alberto_Ruiz-Gallardón .
  ?residence dbo:currentResident ?tenant .
}

# Part 3: Office of the Commander in the Central African Republic Civil War
SELECT ?commanderOffice WHERE {
  ?war rdfs:label ""Central African Republic Civil War""@en .
  ?war dbo:participant ?commander .
  ?commander dbo:position ?commanderOffice .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild WHERE {
  
  # Step 1: Identify Béla IV of Hungary
  ?belaIV rdfs:label ""Béla IV of Hungary""@en .
  
  # Step 2: Find his child who is royalty
  ?child dbo:parent ?belaIV ;
         dbo:royaltyTitle ?title .
  
  # Step 3: Identify Charles Martel and his parent
  ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
  ?parent dbo:child ?charlesMartel .
  
  # Step 4: Find the spouse of this parent
  ?spouse dbo:spouse ?parent .
  
  # Step 5: Locate Philip, Despot of Romania and his royal parent
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  ?royalParent dbo:child ?philip ;
               dbo:royaltyTitle ?title2 .
  
  # Step 6: Identify the father of this royal parent
  ?father dbo:parent ?royalParent .
  
  # Step 7: Match entities
  ?childOfChild dbo:parent ?child ;
                dbo:spouse ?father .
}
",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  ?alvaro dbo:nationality ?country .
}

UNION

SELECT ?leader WHERE {
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?party dbo:leader ?leader .
}
```",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Query to find any professional related to ""and""
SELECT ?entity WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""and""))
}

# Query to find professionals who are actors
SELECT DISTINCT ?actor WHERE {
  ?actor dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(STR(?occupation)), ""actor"")
}
```",2,2,3,1,2,3,3,71,0,0,4210,0,0.0,0
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?film dbo:title ""1,000 Dollars a Minute""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:memberOf ?party .
  
  ?landmark dbo:elevation ""20.1168""^^xsd:float .
  ?landmark dbo:governingBody ?government .
  ?government dbo:rulingParty ?party .

  ?actor dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer WHERE {
  ?soundtrack rdfs:label ""Wizards of Waverly Place (soundtrack)""@en .
  ?soundtrack dbo:musicalArtist ?writer ;
              dbo:artist ?writer .
}
```",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?kim rdfs:label ""Kim Wilson""@en .
  ?kim dbo:memberOfBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceCountry WHERE {
  ?shobhna rdfs:label ""Shobhna Samarth""@en .
  ?shobhna dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?birthPlace rdf:type dbo:Country .
    BIND(?birthPlace AS ?birthPlaceCountry)
  }
  
  FILTER NOT EXISTS {
    ?birthPlace rdf:type dbo:City .
  }

  ?jamshedpur rdfs:label ""Jamshedpur""@en .
  ?jamshedpur rdf:type dbo:City .
}
```",3,4,4,2,2,2,2,9,0,3,22,0.0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Unable to construct a query due to incomplete information.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?person foaf:givenName ""Richard""@en .
  ?person foaf:familyName ""Grant Esterhuysen""@en .
  ?person dbo:profession dbr:Actor .

  ?work dbo:starring ?person ;
        a ?type ;
        (dbo:genre ?genre1 ; dbo:genre ?genre2) .

  FILTER(?genre1 IN (dbr:Television_series, dbr:Film) && ?genre2 IN (dbr:Television_series, dbr:Film))

  ?work dbo:starring ?actor .
  FILTER(?person != ?actor)
}
```",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?pac a dbo:MilitaryPerson ;
       rdfs:label ""Michał Kazimierz Pac""@en .
  
  ?battle dbo:commander ?pac ;
          rdfs:label ""Battle of Vienna""@en .

  ?successor dbo:succeededBy ?pac ;
             dbo:officeHolder true ;
             dbo:politician true .

}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
# Query for Kim Wilson's Band
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?kim rdfs:label ""Kim Wilson""@en .
  ?kim dbo:band ?band .
}

# Query for Nick Curran's Associated Musical Artist
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?nick rdfs:label ""Nick Curran""@en .
  ?nick dbo:musicalArtist ?artist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  { 
    ?stuart rdfs:label ""Stuart Tosh""@en .
    ?stuart dbo:associatedBand ?band ;
            dbo:memberOfBand ?band .
    ?band dbo:associatedMusicalArtist ?artist .
  }
  UNION
  { 
    ?billy rdfs:label ""Billy Lyall""@en .
    ?billy dbo:associatedBand ?band ;
           dbo:memberOfBand ?band .
    ?band dbo:associatedMusicalArtist ?artist .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandfather WHERE {
  ?commander dbo:event ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .
  ?parent dbo:child ?commander .
  ?parent a dbo:Monarch .
  ?naodParent dbo:child ?naod .
  ?naodParent a dbo:Monarch .
  ?naodParent dbo:officeHolder ?office .
  ?grandfather dbo:child ?naodParent .
  ?grandfather a dbo:Monarch .
  ?grandfather dbo:officeHolder ?office2 .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""Mudvayne""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,1,3,4,0.25,0.2,0.22222222222222224
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?maria rdfs:label ""Maria I of Portugal""@en .
  ?maria dbo:relatedThroughTime ?entity .
  FILTER (
    (EXISTS { ?entity rdf:type dbo:TelevisionShow . }) &&
    (EXISTS { ?entity rdf:type dbo:MilitaryConflict . })
  )
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify William I of Sicily
  ?william rdfs:label ""William I of Sicily""@en .
  
  # Step 2: Find his children who are royalty
  ?william dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  # Step 3: Identify Constance of Burgundy
  ?constance rdfs:label ""Constance of Burgundy""@en .
  
  # Step 4: Find her spouse's child
  ?constance dbo:spouse ?spouse .
  ?spouse dbo:child ?spouseChild .

  # Step 5: Find the child of that child
  ?spouseChild dbo:child ?grandchild .

  # Step 6: Determine the father of the royalty child from step 2
  ?royaltyChild dbo:father ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?helena dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?award ?nativePlace WHERE {
  ?person foaf:name ""2 Chainz""@en .
  ?person dbo:birthName ""Ackquille Jean Pollard"" .
  ?person dbo:bandMemberOf <http://dbpedia.org/resource/Uncle_Murda> .
  ?person dbo:award ?award .

  ?award dbo:nativePlace ?nativePlace .
  
  FILTER (lang(?nativePlace) = 'en')
  FILTER EXISTS { ?nativePlace a dbo:State . }
  FILTER EXISTS { ?nativePlace a dbo:Settlement . }
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  OPTIONAL { ?person rdfs:label ""1,000 Dollars a Minute""@en . }
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,2,1,0.0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?calderEvent ?bayneRole WHERE {
  # Robert Calder's military force/event
  ?calder a dbo:NavyOfficer ;
          foaf:name ""Robert Calder""@en .
  ?calder dbo:participatedIn ?calderEvent .

  # William Bayne's role in the French campaign
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne""@en .
  ?campaign dbr:French_campaign_in_Egypt_and_Syria ;
            dbo:commander ?bayne .
  ?bayneRole rdfs:label ?roleLabel .
  FILTER(CONTAINS(LCASE(?roleLabel), ""commander""))
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?player WHERE {
  # Step 1: Find films directed by Manuel Huerga
  ?film dbo:director ?huerga .
  ?huerga rdfs:label ""Manuel Huerga""@en .

  # Step 2: Find actors in these films
  ?film dbo:starring ?actor .

  # Step 3: Filter actors who are also soccer players and athletes
  ?actor dbo:soccerPlayer ? .
  ?actor dbo:athlete ? .

  # Step 4: Find teams associated with Juan Carlos Molina
  ?molina rdfs:label ""Juan Carlos Molina (footballer)""@en .
  ?molina dbo:team ?team .

  # Step 5: Check if the actor played in the same team as Juan Carlos Molina
  ?actor dbo:team ?team .

  # Step 6: Find individuals born on 1979-11-03 who are both soccer players and managers
  ?person rdfs:label ?playerLabel .
  ?person dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = 1979 && MONTH(?birthday) = 11 && DAY(?birthday) = 3)
  ?person dbo:soccerPlayer ? .
  ?person dbo:manager ? .

  # Ensure the actor is the same as the person found in step 6
  FILTER (?actor = ?person)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?person dbo:nativePlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""florida""))
  
  OPTIONAL { 
    ?association dbo:bandMember ?person .
    ?association dbo:musicalArtist ?bobbyShmurda .
    ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  }
  
  ?person a dbo:MusicalArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?uncleMurda rdfs:label ""Uncle Murda""@en .
  ?uncleMurda dbo:bandMember ?bandMember .

  ?bandMember dbo:nativePlace ?nativePlace .
  ?nativePlace rdfs:label ""Florida""@en .

  ?bandMember dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ""Florida""@en .

  ?bandMember dbo:birthName ?birthName .
  FILTER EXISTS { ?bandMember dbo:birthName ?birthName . }

  ?bandMember rdf:type dbo:MusicalArtist .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find actors in ""Rustlers' Rhapsody""
  ?film rdfs:label ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .

  # Check if the actor is also known as The Shadow
  OPTIONAL { 
    ?actor rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""the shadow""))
  }
}
```",4,4,5,2,3,2,3,28,2,3,0,0.4,1.0,0.5714285714285715
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""Cavalera Conspiracy""@en .
  ?band a dbo:Band .
  ?band dbo:bandMember ?member .
}
```",2,3,3,2,1,3,2,20,1,1,88,0.5,0.011235955056179775,0.021978021978021976
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Shelby Oaks""@en .
  ?movie dbo:starring ?actor .
}

SELECT ?artist WHERE {
  ?album rdfs:label ?albumLabel .
  ?song dbo:fromAlbum ?album ;
        rdfs:label ""What You Know""@en .
  FILTER CONTAINS(?albumLabel, ""T.I."") .
  ?album dbo:artist ?artist .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?abstract WHERE {
  ?person rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:abstract ?abstract . FILTER (lang(?abstract) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander ?successor ?work WHERE {
  # Identify Jean Baptist, Comte d'Arco and his roles
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?jeanBaptist dbo:role ?commanderRole .
  ?commanderRole rdfs:label ?commanderLabel .
  FILTER regex(?commanderLabel, 'Television Show|Societal Event', 'i') .

  # Find successor of Yurii Khmelnytsky
  ?yuriiKhmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .
  ?yuriiKhmelnytsky dbo:succeededBy ?successor .

  # Reference works by George Ducas
  ?georgeDucas rdfs:label ""George Ducas""@en .
  ?georgeDucas dbo:work ?work .

  # Connect elements if possible
  OPTIONAL { ?commander foaf:name ?name . }
  OPTIONAL { ?successor foaf:name ?successorName . }
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?party rdfs:label ""National Party of Greece""@en .
  ?party dbo:leader ?leader .
  ?leader dbo:participatedIn ?war .
}
```",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:child ?child .
  
  ?child dbo:almaMater ?etongraduate .
  FILTER EXISTS { ?etongraduate rdfs:label ""Eton College""@en }
  
  ?child dbo:occupation ?occupation .
  FILTER EXISTS { ?occupation rdfs:label ?politicallabel . 
                 FILTER (CONTAINS(LCASE(?politicallabel), ""politician"")) }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?movie rdfs:label ""12 Strong""@en .
  ?movie dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?list rdfs:label ""List of awards and nominations received by Janusz Kamiński""@en .
  ?list dbo:award ?award .
  ?award dbo:recipient ?awardee .
  FILTER(?awardee != <http://dbpedia.org/resource/Janusz_Kamiński>)
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1 & 2: Find Duke Philipp's grandchild
  ?philipp rdfs:label ""Philipp of Württemberg""@en .
  ?philippChild dbo:child ?philippGrandchild .
  
  # Step 3 & 4: Find Philipp Albrecht's child and their predecessor
  ?albrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?albrechtChild dbo:child ?albrechtPredecessor .

  # Step 5: Find Archduchess Margarete Sophie's child
  ?margarete rdfs:label ""Margarete Sophie of Austria""@en .
  ?margareteChild dbo:child ?commonEntity .

  # Combine conditions to find the common entity
  FILTER (?philippGrandchild = ?albrechtPredecessor && ?commonEntity = ?philippGrandchild)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonCommander WHERE {
  # Retrieve the commander of Battle of Cape Finisterre (1805)
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:commander ?cfCommander .

  # Retrieve the military conflict associated with William Bayne and its commander
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?conflict dbo:participatedIn ?bayne .
  ?conflict dbo:commander ?wbCommander .

  # Find common commanders between the two events
  FILTER (?cfCommander = ?wbCommander)
  BIND(?cfCommander AS ?commonCommander)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player WHERE {
  # Find Marty Pollio's birthdate
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthDate ?birthday .

  # Find athletes born on that date
  ?athlete rdf:type dbo:Athlete ;
           dbo:birthDate ?birthday .

  # Find Pablo Aimar's teams
  ?pablo rdfs:label ""Pablo Aimar""@en .
  ?pablo dbo:team ?team .

  # Check if the athlete played for any of Pablo Aimar's teams
  ?athlete dbo:team ?team .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:country dbr:Spain .
  ?person dbo:nationality dbr:Spanish_people .
}
```",1,2,2,1,1,3,3,71,0,0,1550,0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?parent dbo:child ?child .
  OPTIONAL { ?parent = ?mariclare } ;
           OPTIONAL { ?parent = ?spouse } .
  ?decedent dbo:deathPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""los angeles"")) .
  ?decedent dbo:work ?movie .
  ?movie a dbo:Film .
  ?movie dbo:actor ?actor .
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Part 1: Find the parent of the awardee associated with Rodney Lees
  ?award dbo:recipient ?awardee .
  ?award dbo:holder ?rodneyLees .
  FILTER(?rodneyLees = <http://dbpedia.org/resource/Rodney_Lees>) .

  # Get parents of the awardee
  ?awardee dbo:parent ?parent .

  UNION

  # Part 2: Find the parent of the child of Frederick Stanley, 16th Earl of Derby
  ?frederickStanley dbo:child ?child .
  FILTER(?frederickStanley = <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby>) .

  # Get parents of the child (should be Frederick Stanley)
  ?child dbo:parent ?parent .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?frédéric rdfs:label ""Frédéric Bouraly""@en .
  ?frédéric dbo:occupation ?profession .

  ?otherPerson a dbo:Agent ;
               dbo:occupation ?profession .
  FILTER(?otherPerson != ?frédéric)
}
```",2,2,3,2,1,2,3,28,0,0,21580,0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?character rdfs:label ""Lamont Cranston""@en .
  ?movie dbo:starring ?character ;
         dbo:portrayedBy ?actor .
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""Наші Парни""@uk .
  ?band dbo:member ?member .
  FILTER EXISTS { 
    ?member dbo:associatedBand ?album .
    ?album dbo:artist Aleksandr Filimonov .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
# Query for Governor of Virginia's birth place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?governor a dbo:StateGovernor ;
            dbo:state ""Virginia""@en .
  ?governor dbo:birthPlace ?birthPlace .
}

# Query for Vince Gilligan's birth place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?vince a dbo:Person ;
         rdfs:label ""Vince Gilligan""@en .
  OPTIONAL { ?vince dbo:award ?award . }
  ?vince dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philip dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Part 1: Find parent of awardee of Commander of the Royal Victorian Order
  ?person dbo:award ?award .
  ?award rdfs:label ""Commander of the Royal Victorian Order""@en .
  ?person dbo:parent ?parent .

  UNION

  # Part 2: Find parent of child of Frederick Stanley, 16th Earl of Derby who is a politician
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:childOf ?frederick ;
         dbo:parent ?parent .
  ?parent rdf:type dbo:Politician .

}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Commander in Third Taiwan Strait Crisis
  ?crisis dbo:commander ?person .
  FILTER(STRSTARTS(STR(?crisis), ""Third Taiwan Strait Crisis""))

  # Author of a book
  ?book dbo:author ?person .

  # Resident and politician in Chappaqua, New York
  ?person dbo:residence ?location .
  ?location rdfs:label ""Chappaqua""@en .
  ?person dbo:officeHolder ?office .

  # Spouse of Hillary Clinton
  ?hillary dbo:spouse ?person .
  FILTER(STRSTARTS(STR(?hillary), ""Hillary Clinton""))
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war rdfs:label ""Thirty Years' War""@en .
  ?war dbo:participatedIn ?battle .
  ?battle dbo:leader ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?militaryForce WHERE {
  ?williamBayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?williamBayne dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
  ?event dbo:militaryForce ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?charles rdfs:label ""Charles Parsons (British Army officer)""@en .
  ?charles dbo:award ?award .
}
```",2,2,3,2,1,2,2,9,2,2,98448,0.5,2.031488065007618e-05,4.062811058971702e-05
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?emilia rdfs:label ""Emilia""@en .
  FILTER NOT EXISTS { ?emilia rdfs:label ?otherLabel . FILTER (CONTAINS(LCASE(?otherLabel), ""bulgarian singer"")) }
  ?emilia dbo:bandMember ?band .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
  ?charlesMartel dbo:parent ?parent .
}

SELECT ?spouse WHERE {
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?cokeStudio rdfs:label ""Coke Studio Philippines""@en .
  ?cokeStudio dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?residenceCountry ?war WHERE {
  # Find a Polish athlete from Łódź
  ?athlete dbo:nationality dbc:Countries_of_Europe#Poland ;
           dbo:birthPlace dbr:Łódź ;
           dbo:sport dbp:Sport .
  
  # Get the residence country of this athlete
  ?athlete dbo:residence ?residence .
  ?residence rdfs:label ?residenceCountry .

  # Find a war associated with Alexander Suvorov
  dbr:Aleksandr_Suvorov dbo:participatedIn ?war .

  # Check if the residence country is linked to that war
  ?war dbo:location ?location .
  ?location rdfs:label ?residenceCountry .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:child ?doon .
  ?doon rdfs:label ""Doon Arbus""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?office WHERE {
  ?miguel a dbo:Politician ;
          rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:party ?party .
  ?miguel dbo:office ?office .
}

SELECT ?commander ?office WHERE {
  ?war a dbo:War ;
       rdfs:label ""Central African Republic Civil War""@en .
  ?commander dbo:commanderOf ?war ;
             dbo:office ?office .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent ?movie WHERE {
  # Find Doon Arbus and her parent(s)
  ?doonArbus rdfs:label ""Doon Arbus""@en .
  ?doonArbus dbo:parent ?parent .

  # Find movies and their actors
  ?movie dbo:actor ?actor .

  # Check if any decedent of the actor is located in Los Angeles
  ?actor dbo:decedent ?decedent .
  ?decedent dbp:location ""Los Angeles""@en .
  
  # Ensure the parent is also an actor of the movie
  FILTER(?parent = ?actor)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  # Vince Gilligan's award awardee (Bryan Cranston)
  { 
    ?cranston rdfs:label ""Bryan Cranston""@en .
    ?cranston dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Author of El Deafo (Cece Bell)
  {
    ?bell rdfs:label ""Cece Bell""@en .
    ?bell dbo:birthPlace ?birthPlace .
  }

  UNION

  # Glenn Youngkin
  {
    ?youngkin rdfs:label ""Glenn Youngkin""@en .
    ?youngkin dbo:birthPlace ?birthPlace .
  }
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?partyMember ?birthName WHERE {
  # Find Roger Pryor and his spouse
  ?roger rdfs:label ""Roger Pryor (actor)""@en .
  ?roger dbo:spouse ?spouse .

  # Identify a party member of the ruling party in Central, Louisiana
  ?person dbo:residence dbr:Central,_Louisiana ;
          dbo:partyMemberOf ?party .
  FILTER EXISTS { ?party dbo:isRulingParty true }

  # Find the birth name of Ann Sothern
  ?ann rdfs:label ""Ann Sothern""@en .
  ?ann foaf:name ?birthName .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?afeez rdfs:label ""Afeez Oyetoro""@en .
  ?movie dbo:starring ?afeez ;
         a dbo:Film ; # Ensures it's a film
         (dbo:genre|dbo:category) ?showCategory .
  
  FILTER EXISTS { 
    ?showCategory rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""tv series"") || CONTAINS(LCASE(?label), ""television""))
  }
  
  ?movie dbo:starring ?actor .
  FILTER (?afeez != ?actor)
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residenceTenant ?officeTenant WHERE {
  ?alberto rdfs:label ""Alberto Ruiz-Gallardón""@en .
  
  # Find residence and its tenant
  OPTIONAL { 
    ?alberto dbo:residence ?residence .
    ?residence dbo:tenant ?residenceTenant .
  }
  
  # Find office as leader of the Conservative Republican Party (Spain) and its tenant
  OPTIONAL {
    ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
    ?alberto dbo:positionHeld ?office .
    ?office dbo:organization ?party .
    ?office dbo:tenant ?officeTenant .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Pacely""@en .
  ?person rdfs:label ?fullName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES (?name) { ""Vince Gilligan"" ""Cece Bell"" ""Glenn Youngkin"" }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?event rdfs:label ""Pickett's Charge""@en .
  ?event dbo:participatedIn ?battle .
  ?battle dbo:militaryUnit ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?coro dbo:award ?award .
  
  ?native dbo:nativePlace ?award ;
          a dbo:Settlement ;
          foaf:nationality <http://dbpedia.org/resource/United_States> .

  ?child dbo:parent ?native ;
         a dbo:Actress .
}
```",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?decedent WHERE {
  ?sandro rdfs:label ""Sandro Bertaggia""@en .
  ?sandro dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Country .
  ?decedent dbo:deathPlace ?birthplace .
}
```",2,3,3,2,1,2,3,28,906,0,0,1.0,1.0,1.0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person rdfs:label ""Charles III of Spain""@en .
  ?person dbo:spouse|dbo:childOf ?parent .
  ?parent rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  
  OPTIONAL { 
    ?war dbo:name ""War of the Spanish Succession""@en ;
         dbo:commander ?person .
  }
  
  OPTIONAL {
    ?regiment dbo:commander ?person ;
              rdfs:label ""2nd Dragoon Regiment (France)""@en .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplaceReneta, ?alumnus, ?birthplaceAlumnus WHERE {
  
  # Query for Reneta Kamberova's birthplace
  ?reneta rdfs:label ""Reneta Kamberova""@en .
  ?reneta dbo:birthPlace ?birthplaceReneta .
  
  # Query for an alumnus of Пловдивски университет ""Паисий Хилендарски""
  ?university rdfs:label ""Plovdiv University ""Paisii Hilendarski""""@bg .
  ?university dbo:alumni ?alumnus .
  ?alumnus dbo:birthPlace ?birthplaceAlumnus .

}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?princess rdfs:label ""Muna al-Hussein""@en .
  
  # Find children of Princess Muna al-Hussein who are royalty
  ?princess dbo:child ?child1 .
  ?child1 dbo:title ?title1 .
  FILTER EXISTS { ?child1 dbo:title ?title1 } .

  # Find grandchildren (children of the above children) who are royalty
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:title ?title2 .
  FILTER EXISTS { ?grandchild dbo:title ?title2 }
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?george rdfs:label ""George Hamilton Cameron""@en .
  ?george dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?flu rdfs:label ""Spanish Flu""@en .
  ?flu dbo:affectedCountry ?country .
  FILTER(?country = dbc:United_States).
  
  ?navy dbp:partOfMilitaryConflict dbc:World_War_I .
  ?navy dbo:commander ?commander .

  OPTIONAL { 
    ?commander dbo:birthPlace dbc:United_States .
  }
}
```",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorBirthPlace ?governorBirthPlace WHERE {
  # Find the birthplace of Cece Bell, author of El Deafo
  ?author dbo:birthName ""Cece Bell""@en .
  ?author dbo:work ?book .
  ?book rdfs:label ""El Deafo""@en .
  ?author dbo:birthPlace ?authorBirthPlace .

  # Find the birthplace of the current governor of Virginia
  ?governor dbo:officeHolderOf ?position .
  ?position rdfs:label ""Governor of Virginia""@en .
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement ?resident ?birthPlace WHERE {
  ?region dbo:timeZone dbp:EET .
  ?settlement dbo:location ?region .
  ?resident dbo:residence ?settlement ;
            dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,142,0,0.0,0
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commanderOffice ?madridTenant ?partyLeaderOffice WHERE {
  # Commander in Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:officeHolder ?commanderOffice ;
             dbo:politicalAffiliation ?war .
  FILTER(CONTAINS(LCASE(?war), ""central african republic civil war""))

  # Tenant of Madrid
  ?madridTenant a dbo:Politician ;
                dbo:officeHolder ?madridOffice .
  FILTER(CONTAINS(LCASE(STR(?madridOffice)), ""madrid""))

  # Leader of the party associated with Miguel Maura
  ?miguelMaura rdfs:label ""Miguel Maura""@en .
  ?party a dbo:PoliticalParty ;
         dbo:member ?miguelMaura .
  ?leader a dbo:Politician ;
          dbo:officeHolder ?partyLeaderOffice ;
          dbo:leaderOf ?party .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
# Query for Pablo Aimar's team
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?team WHERE {
  ?pablo a dbo:SoccerPlayer ;
         rdfs:label ""Pablo Aimar""@en .
  ?pablo dbo:team ?team .
}

# Query for Juan Carlos Molina's team
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?team WHERE {
  ?juan a dbo:SoccerPlayer ;
        rdfs:label ""Juan Carlos Molina (footballer)""@en .
  ?juan dbo:team ?team .
}

# Query for actor from ""All or Nothing: Manchester City""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:SoccerPlayer ;
         dbo:playedForTeam ?team .
  ?team rdfs:label ""Manchester City F.C.""@en .
  ?actor dbo:actedInFilmOrTVSeries ?show .
  ?show rdfs:label ""All or Nothing: Manchester City""@en .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
# Query 1: Associated Musical Artist of Nick Curran
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedBand WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?associatedBand .
}

# Query 2: Real Name of The Fabulous Thunderbirds
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?member ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:member ?member .
  OPTIONAL { ?member foaf:name ?realName . }
}

# Query 3: Band of a Band Member of Eric Clapton
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member ?otherBand WHERE {
  ?claptonBand rdfs:label ""Cream""@en .
  ?claptonBand dbo:bandMember ?member .
  ?member dbo:associatedBand ?otherBand .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # Manager of VfL Bochum in the 2007–08 season
  ?bochumSeason dbp:club ""VfL Bochum"" ;
                dbp:season ""2007–08"" .
  ?bochumSeason dbo:manager ?manager .

  # Manager of SBV Vitesse in the 2020–21 season
  ?vitesseSeason dbp:club ""SBV Vitesse"" ;
                 dbp:season ""2020–21"" .
  ?vitesseSeason dbo:manager ?manager .

  # Check if manager is from West Germany
  OPTIONAL { ?manager dbo:nationality ?nationality . }
  FILTER (CONTAINS(LCASE(?nationality), ""west germany""))
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?decedent WHERE {
  ?sandro rdfs:label ""Sandro Bertaggia""@en .
  
  # Ensure birthplace is a country
  ?sandro dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Verify nationalities
  ?sandro dbo:nationality ?finlandNationality .
  ?sandro dbo:nationality ?russianEmpireNationality .
  
  FILTER (
    EXISTS { ?finlandNationality rdfs:label ""Grand Duchy of Finland""@en . }
    && 
    EXISTS { ?russianEmpireNationality rdfs:label ""Russian Empire""@en . }
  )
  
  # Find decedents at the birthplace
  ?decedent dbo:deathPlace ?birthPlace .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?michał rdfs:label ""Michał Kazimierz Pac""@en .
  ?michał (dbo:participatedIn|dbo:associatedWith) ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         a dbo:Event .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award ""Sangeet Natak Akademi Fellowship""@en .
  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
}
LIMIT 1
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?carrie rdfs:label ""Carrie Johnson""@en .
  ?carrie dbo:spouse ?spouse .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Henry Clay Lewis's birthplace
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .

  # Quincy Adams Gillmore's force
  ?quincy rdfs:label ""Quincy Adams Gillmore""@en .
  ?quincy dbo:militaryUnit ?force .

  # Ensure both are settlements in America
  ?birthPlace a dbo:Settlement ;
              dbp:country ""United States"" .
  ?force a dbo:MilitaryUnit ;
         dbp:country ""United States"" .

  # Check if they refer to the same entity
  FILTER (?birthPlace = ?force)

  BIND(?birthPlace AS ?entity)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?politicalParty WHERE {
  ?central rdfs:label ""Central, Louisiana""@en .
  OPTIONAL { ?central dbo:politicalParty ?politicalParty . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?war WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""National Party of Greece""@en .
  
  ?party dbo:leader ?leader .

  ?leader dbo:participatedIn ?event .
  ?event dbo:location ?location .
  ?location rdfs:label ?cityLabel .

  FILTER (?cityLabel = ""Athens"" || ?cityLabel = ""Athina""@el)

  OPTIONAL { ?event dbo:conflict ?war . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find James Plotkin's associated musical artist
  ?plotkin dbo:associatedBand ?artist1 .
  
  FILTER (str(?plotkin) = ""James_Plotkin"")

  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:associatedBand ?artist2 .

  # Step 3: Identify band members of this second artist
  ?bandMember dbo:bandMember ?artist2 .
  
  # Step 4: Determine bands and groups related to Burnt by the Sun (band)
  ?burntBySun dbp:genre ?genre .
  FILTER (str(?burntBySun) = ""Burnt_by_the_Sun_(band)"")

  ?relatedBand dbo:genre ?genre ;
              a dbo:MusicalGroup, dbo:Organization .

  # Step 5: Find intersection
  VALUES ?bandMember { ?bandMember }
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?allan rdfs:label ""Allan Arbus""@en .
  ?allan dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club WHERE {
  ?letsch rdfs:label ""Thomas Letsch""@en .
  ?letsch dbo:manager ?team .
  ?team a dbo:SoccerClub ;
        dbo:nationality ?country .
  FILTER (str(?country) = ""West Germany"")
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royParty ?fatherName ?fatherParty WHERE {
  # Query for Roy Leonardo Barreras Montealegre's party
  ?roy rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?roy dbo:partyAffiliation ?royParty .

  # Query for Sofía Petro's father and his party
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia dbo:parent ?father .
  ?father rdfs:label ?fatherName .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty } 
}
",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person rdfs:label ""Harriette Arlene Lake""@en .
  ?person dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""central, louisiana""))
  ?person dbo:partyMember ?party .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?william rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?william dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?warLabel .
  FILTER(LANG(?warLabel) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?tvShow ?ducas WHERE {
  # Find the commander of the Battle of Vienna
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Vienna (1683)""@en .

  # Identify the TV show named ""The Battle of Vienna""
  ?tvShow rdfs:label ""The Battle of Vienna""@en .

  # Find any reference to George Ducas
  ?ducas rdfs:label ""George Ducas""@en .
  
  OPTIONAL {
    ?ducas dbo:relatedTo ?battle .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?caroline rdfs:label ""Caroline Louise Bevan Symonds""@en .
  ?caroline dbo:spouse ?spouse .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Joey B's birth name
  ?joeyB rdfs:label ""Joey B""@en .
  ?joeyB dbo:birthName ?birthName .

  # Find the writer of The Live Anthology who is a musical artist
  ?anthology dbo:author ?writer .
  FILTER(CONTAINS(LCASE(?anthology), ""the live anthology""))
  ?writer rdf:type dbo:MusicalArtist .
  
  # Match person with birth name and profession as a musical artist
  ?person rdfs:label ?birthNameLabel .
  ?person dbo:birthName ?birthName .
  ?person rdf:type dbo:MusicalArtist .

  FILTER(LCASE(?birthNameLabel) = LCASE(str(?birthName)))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?politicianChild WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
  
  # Confirming Frederick is the father
  OPTIONAL { ?child dbo:father ?father . }
  FILTER (?father = ?frederick)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?film rdfs:label ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityInOttomanEmpire ?award WHERE {
  # Part 1: Find entities related to the Ottoman Empire
  ?entityInOttomanEmpire dbo:country dbr:Ottoman_Empire .
  
  # Part 2: Find awards received by Charles Parsons
  OPTIONAL {
    ?charlesParsons rdfs:label ""Charles Parsons (British Army officer)""@en .
    ?charlesParsons dbo:award ?award .
  }
}
```",3,3,4,2,2,2,2,9,3,247,0,0.012,1.0,0.023715415019762848
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?shadow rdfs:label ""The Man Who Laughs""@en .
  ?shadow dbo:profession ?professional .
}

SELECT ?work WHERE {
  ?cora rdfs:label ""Cora Sue Collins""@en .
  ?cora dbo:claimToFame ?work .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?uri WHERE {
  ?uri rdfs:label ""Пловдивски университет „Паисий Хилендарски“""@bg .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:country dbr:United_States .
  ?person a dbo:Person .
}
LIMIT 10
```",1,1,2,1,1,2,2,9,10,0,63411,1.0,0.00015767647939956796,0.00031530324289385316
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""Cynthia Ikponmwenosa Morgan""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  # Step 1: Find Miguel Maura's political party
  ?miguel a dbo:Politician ;
          rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:party ?party .

  # Step 2: Find the leader of that political party
  ?leader a dbo:Person ;
          dbo:leaderOf ?party ;
          dbo:office ?office .

  # Step 3: Identify Alberto Ruiz-Gallardón's residence
  ?alberto a dbo:Politician ;
           rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?alberto dbo:residence ?residence .

  # Step 4: Find the tenant of that residence
  ?tenant dbo:residence ?residence .

  # Step 5: Check if the leader is the same as the tenant
  FILTER (?leader = ?tenant)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement WHERE {
  ?region dbo:timeZone dbp:EasternEuropeanTime .
  ?ekaterina rdfs:label ""Ekaterina Zaharieva""@en .
  ?ekaterina dbo:birthPlace ?birthPlace .
  FILTER(?birthPlace = ?settlement)
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tvShow WHERE {
  ?actor rdfs:label ""Richard E. Grant""@en .
  ?actor a dbo:Actor .
  ?role dbo:actor ?actor ;
        dbo:workExample ?tvShow .
  FILTER (STRSTARTS(STR(?tvShow), ""http://dbpedia.org/resource/Category:Television_shows""))
}
```",2,3,3,2,1,3,3,71,0,0,53,0,0.0,0
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorParadise ?actorAlways ?spouseKaminski WHERE {
  # Actor of Paradise (2013)
  ?paradiseFilm rdfs:label ""Paradise""@en .
  ?paradiseFilm dbo:releaseDate ?dateParadise .
  FILTER(YEAR(?dateParadise) = 2013) .
  ?paradiseFilm dbo:starring ?actorParadise .

  # Actor of Always (1989)
  ?alwaysFilm rdfs:label ""Always""@en .
  ?alwaysFilm dbo:releaseDate ?dateAlways .
  FILTER(YEAR(?dateAlways) = 1989) .
  ?alwaysFilm dbo:starring ?actorAlways .

  # Spouse of Janusz Kamiński
  ?kaminski rdfs:label ""Janusz Kamiński""@en .
  ?kaminski dbo:spouse ?spouseKaminski .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession .
}

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}

SELECT ?band WHERE {
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  ?bob dbo:band ?band .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force ?war WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  
  # Find the Medal of Honor award
  OPTIONAL { 
    ?gillmore dbo:award ?medalOfHonor .
    FILTER (str(?medalOfHonor) = str(dbr:Medal_of_Honor_(United_States)))
  }
  
  # Determine the military force
  OPTIONAL {
    ?gillmore dbo:militaryService ?force .
  }

  # Establish connection to Charleston, South Carolina
  OPTIONAL {
    ?event dbo:location dbr:Charleston,_South_Carolina ;
           dbo:agent ?gillmore .
  }
  
  # Determine the war associated with the Medal of Honor
  OPTIONAL {
    ?medalOfHonor dbo:relatedWar ?war .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?dateOfDeath WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en') .
  ?person dbo:dateOfDeath ?dateOfDeath .
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Los Angeles""@en .
}
```",1,1,2,1,1,3,3,71,0,0,2883,0,0.0,0
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName ?childLabel WHERE {
  ?peterIV rdfs:label ""Peter IV of Aragon""@en .
  ?peterIV foaf:name ?realName .

  ?peterIV dbo:child ?child .
  ?child rdfs:label ?childLabel .
  
  OPTIONAL { 
    ?child dbo:monarch ?monarchy .
  }
}
```",4,5,5,2,2,3,2,20,0,7,1,0.0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?ferdinand rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?child dbo:parent ?ferdinand ;
         dbo:father ?commander .
  FILTER EXISTS { 
    ?commander dbo:occupation ?occupation .
    ?occupation rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""commander"") && CONTAINS(LCASE(?label), ""thirty years' war""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Identify Yeshaq I and his parent who is a royalty
  ?yeshaqI rdfs:label ""Yeshaq I""@en .
  ?parent dbo:child ?yeshaqI ;
          dbo:royalty true .

  # Step 2: Identify Na'od and his father who is a royalty and an office holder
  ?na'od rdfs:label ""Na'od""@en .
  ?father dbo:child ?na'od ;
          dbo:royalty true ;
          dbo:officeHolder true .

  # Step 3: Find the child of Yeshaq I's parent who is a royalty
  ?parentChild dbo:parent ?parent ;
               dbo:royalty true .
  
  # Ensure the child found is distinct from Yeshaq I
  FILTER (?parentChild != ?yeshaqI)
  
  BIND(?parentChild AS ?child)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Shelby Oaks""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find actors in ATL
  ?atl dbo:starring ?actor .
  ?atl rdfs:label ""ATL""@en .

  # Find the same actor in Shelby Oaks
  ?shelbyOaks dbo:starring ?actor .
  ?shelbyOaks rdfs:label ""Shelby Oaks""@en .

  OPTIONAL {
    # Check for any connection to The Golden Master or its alter ego
    ?goldenMaster dbo:alterEgo ?actor .
    ?goldenMaster rdfs:label ""The Golden Master""@en .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Identify William I
  ?williamI rdfs:label ""William I""@en .
  
  # Step 2: Find a reference who is royalty and office holder related to William I
  ?reference dbo:child ?williamI ;
             a dbo:Monarch ; # Assuming Monarch as a class for royalty
             dbo:officeHolder ?office .

  # Step 3: Identify the child of this reference who is also a royalty
  ?child dbo:parent ?reference ;
         a dbo:Monarch .
  
  # Step 4: Find the father of that child
  ?father dbo:child ?child .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  ?band dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,0,84,1,0.0,0.0,0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  ?arcadia dbo:owner ?owner .
  ?arcadia rdfs:label ""USS Arcadia (ID-1605)""@en .

  # Identify the author of ""An Invitation to the White House"" and their spouse
  ?book dbo:author ?author .
  ?book rdfs:label ""An Invitation to the White House""@en .
  ?author foaf:mbox ?email .  # Assuming the author has an email listed, indicating a public figure
  ?author dbo:spouse ?spouse .

  # Find a common commander in World War I
  ?commander dbo:rank ?rank ;
             dbo:serviceInMilitaryOrganization ?organization .
  FILTER (?organization = ""World War I""@en) .
  
  # Link the owner and spouse to the commander
  OPTIONAL { ?owner dbo:commandedBy ?commander . }
  OPTIONAL { ?spouse dbo:commandedBy ?commander . }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alumnus WHERE {
  ?university rdfs:label ""Plovdiv University 'Paisii Hilendarski'""@en .
  ?university dbo:alumni ?alumnus .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Identify Bobby Shmurda's associated musical artist
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  
  # Find band members who are also musical artists
  ?artist dbo:musicalArtist ?bobby ;
          dbo:bandMember ?member .
  ?member a dbo:MusicalArtist .

  # Identify the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en ;
         dbo:award ?award .
  ?award dbo:region ?region .
  
  # Ensure the region is an American state and settlement
  ?region rdf:type dbo:State ;
          dbo:country dbc:United_States_of_America .

  # Find Bobby Shmurda's birthplace
  ?bobby dbo:birthPlace ?birthPlace .

  # Match the band member's native region with Bobby Shmurda's birth state
  ?member dbo:nativePlace ?nativePlace .
  ?nativePlace rdfs:label ?regionLabel .
  
  FILTER(?regionLabel = ?region)
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Find children of Albrecht, Duke of Württemberg
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?albrecht dbo:child ?child1 .

  # Find grandchildren of Albrecht (children of his children)
  ?child1 dbo:child ?grandchild .

  # Find children of Archduke Charles Louis of Austria
  ?charles rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?charles dbo:child ?child2 .

  # Check if they are royalty
  OPTIONAL { ?child1 dbo:royalTitle ?title1 . }
  OPTIONAL { ?child2 dbo:royalTitle ?title2 . }

  # Ensure the grandchild is also a child of Archduke Charles Louis's child and is royalty
  ?child2 dbo:child ?grandchild .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?emilia rdfs:label ""Emilia Yancheva Valeva""@en .
  ?emilia dbo:member ?band .
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?chieko rdfs:label ""Chieko Asakawa""@en .
  ?chieko dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?spouse WHERE {
  ?book dbo:title ""An Invitation to the White House""@en .
  ?book dbo:author ?author .
  ?author dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), 'politician') || CONTAINS(LCASE(?occupation), 'office holder')) .
  OPTIONAL { ?author dbo:spouse ?spouse . }
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Harriette Arlene Lake
  ?harriette rdfs:label ""Harriette Arlene Lake""@en .
  
  # Step 2: Find her spouse
  ?harriette dbo:spouse ?spouse .

  # Step 3: Identify Nat Levine and his film products
  ?nat rdfs:label ""Nat Levine""@en .
  ?nat dbo:filmProduction ?film .

  # Step 4: Find actors of those films
  ?film dbo:actor ?actor .

  # Step 5: Ensure the spouse is a member of the Republican Party
  ?spouse dbp:partyMembership ?party .
  FILTER (STR(?party) = ""Republican Party (United States)"")

  # Ensure the actor matches the spouse
  FILTER (?actor = ?spouse)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?eugene rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Identify Myat Hpone Pyo and his father
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:father ?father .

  # Ensure the father is royalty
  OPTIONAL { ?father dbo:royalTitle ?title . }

  # Identify Min Hla Htut and his parent
  ?minHlaHtut rdfs:label ""Min Hla Htut""@en .
  ?minHlaHtut dbo:parent ?parent .

  # Ensure the father of Myat Hpone Pyo is the same as the parent of Min Hla Htut
  FILTER (?father = ?parent)

  # Find the spouse of this royal father
  ?father dbo:spouse ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query to find the actor from ""Ab Kya Hoga"" who is also a politician
SELECT ?actor WHERE {
  ?show rdfs:label ""Ab Kya Hoga""@en .
  ?show dbo:castMember ?actor .
  ?actor rdf:type dbo:Actor .
  ?actor dbo:occupation ?occupation .
  FILTER EXISTS { ?actor dbo:politicalParty ?party } # Assuming political involvement is indicated by party membership
}

# Query to find the alter ego of The Shadow and check for any political roles
SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo rdf:type dbo:Person .
  OPTIONAL { ?alterEgo dbo:occupation ?occupation }
  FILTER EXISTS { ?alterEgo dbo:politicalParty ?party } # Assuming political involvement is indicated by party membership
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?gillmoreForce ?war ?awardee ?settlement WHERE {
  # Quincy Adams Gillmore's military force
  ?gillmore dbo:militaryUnit ?gillmoreForce .
  FILTER (str(?gillmore) = ""Quincy_Adam_Gillmore"")

  # Award by U.S. Congress and associated war
  ?award dbo:givenBy <http://dbpedia.org/resource/United_States_Congress> ;
         dbo:recipient ?awardee .
  ?awardee dbo:militaryConflict ?war .

  # Henry Clay Lewis's birthplace as a settlement
  ?henryClayLewis dbo:birthPlace ?settlement .
  FILTER (str(?henryClayLewis) = ""Henry_Clay_Lewis"" && rdf:type(?settlement, dbo:Settlement))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find the parent of Roger III, Duke of Apulia
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  ?rogerIII dbo:parent ?parent .

  # Step 2: Find Alfonso VI of León and Castile
  ?alfonsoVI rdfs:label ""Alfonso VI of León and Castile""@en .

  # Step 3: Find the children of Alfonso VI
  ?alfonsoVI dbo:child ?child1 .
  
  # Step 4: Find the grandchildren of Alfonso VI
  ?child1 dbo:child ?grandChild .

  # Step 5: Check if the parent of Roger III is a grandchild of Alfonso VI
  FILTER (?parent = ?grandChild)
  
  # Return the common entity
  BIND(?parent AS ?commonEntity)
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalParent WHERE {
  ?aisha rdfs:label ""Princess Aisha bint Faisal""@en .
  
  # Find her parent who is a royalty
  ?aisha dbo:parent ?parent1 .
  ?parent1 rdf:type dbo:Monarch .

  # Find the child of this parent who is also a royalty
  ?parent1 dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  # Find the parent of this child (who is a royalty)
  ?child dbo:parent ?finalParent .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfPolitician WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Find Edward's parent
  ?edward dbo:parent ?parent .

  # Find the child of that parent
  ?parent dbo:child ?child .

  # Check if the child is a politician and office holder
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") && CONTAINS(LCASE(?occupation), ""office""))

  # Find the parent of this child
  ?child dbo:parent ?parentOfPolitician .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?athlete WHERE {
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthDate ?birthday .

  ?athlete rdf:type dbo:Athlete ;
           dbo:birthDate ?birthday .
}
```",2,3,3,2,1,3,3,71,10,0,0,1.0,1.0,1.0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?song rdfs:label ""Always the Love Songs""@en .
  OPTIONAL { ?song dbo:composer ?writer . }
  OPTIONAL { ?song dbo:lyricist ?writer . }
}
```",2,2,3,2,1,3,3,71,0,0,98450,0,0.0,0
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Step 2: Find his parent(s)
  ?edward dbo:parent ?parent .

  # Step 3: From each parent, find children who are politicians and office holders
  ?parent dbo:child ?child .
  ?child dbo:officeHolder ?office .
  ?child dbo:politician ?politics .

  # Step 4: Among these children, find the one awarded the ""Commander of the Royal Victorian Order""
  ?child dbo:award ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""commander of the royal victorian order""))

  # Step 5: Identify this awardee's parent
  ?child dbo:parent ?finalParent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderRole ?partyLeader WHERE {
  # Find Manuel Pinto da Costa's military command role
  ?manuel a dbo:Person ;
          rdfs:label ""Manuel Pinto da Costa""@en .
  OPTIONAL { 
    ?manuel dbo:militaryCommander ?conflict .
    ?conflict rdfs:label ?commanderRole .
  }

  # Find the leader of the Conservative Republican Party (Spain)
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  OPTIONAL {
    ?party dbo:leader ?leader .
    ?leader rdfs:label ?partyLeader .
  }
}
```",5,10,6,3,2,3,3,71,0,1,1,0.0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?person rdfs:label ""George Hamilton Cameron""@en .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?character rdfs:label ""Johnny Doughboy""@en .
  ?character dbo:actor ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?winner WHERE {
  ?election a dbo:Election ;
            dbo:electionDate ?date ;
            dbo:place dbr:Galicia .
  FILTER(YEAR(?date) = 2009)
  ?election dbo:winner ?winner .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?billClinton dbo:spouse ?spouse .
}
```",4,6,5,2,3,3,3,71,0,1,1,0.0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book1 dbo:author ?author .
  ?book1 rdfs:label ""An Invitation to the White House""@en .
  
  ?book2 dbo:author ?author .
  ?book2 rdfs:label ""Back to Work (book)""@en .

  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder true ;
          dbo:militaryCommander ?commanderRole .

  ?commanderRole dbo:war dbr:World_War_I .
}

SELECT ?owner WHERE {
  ?ship dbo:owner ?owner .
  ?ship rdfs:label ""USS Arcadia (ID-1605)""@en .
}

SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person dbr:Herbert_Hoover . # Assuming Herbert Hoover fits the criteria
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?lamontProfession ?lutherProfession WHERE {
  # Find Lamont Cranston's profession from The Shadow creation by Walter B. Gibson
  ?shadow dbo:creator ?gibson .
  ?gibson rdfs:label ""Walter B. Gibson""@en .
  ?shadow dbo:alterEgo ?lamontCranston .
  ?lamontCranston dbo:profession ?lamontProfession .

  # Find Luther Vandross's profession and his band
  ?luther rdfs:label ""Luther Vandross""@en .
  ?luther dbo:birthName ?robertThompson .
  ?robertThompson rdfs:label ""Robert Lamar Thompson""@en .
  ?luther dbo:profession ?lutherProfession .
  OPTIONAL { ?band dbo:member ?luther . 
             ?band rdfs:label ""Change (band)""@en }
}
```",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?battle rdfs:label ""Battle of Fort Royal""@en .
  ?battle dbo:participatingMilitaryForce ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  
  ?philip dbo:parent ?parent .
  
  ?parent rdf:type dbo:Monarch .

  ?parent dbo:parent ?royalFather .

  ?royalFather dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  
  # Step 1: Find Archduchess Margarete Sophie of Austria's parent
  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?parent dbo:child ?margareteSophie .
  
  # Step 2: Find Philipp Albrecht, Duke of Württemberg's children and their predecessors
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?child dbo:parent ?philippAlbrecht .
  
  # Find the predecessor (likely a sibling or previous generation)
  OPTIONAL { ?predecessor dbo:siblingOf ?child . }
  
  # Step 3: Identify the grandchild of Margarete Sophie who is also a predecessor
  ?grandchild dbo:parent ?margareteSophie .
  FILTER(?grandchild = ?predecessor)
  
  # Ensure the entity is royalty
  OPTIONAL { ?grandchild dbo:royaltyTitle ?title . }
  FILTER(EXISTS { ?grandchild dbo:royaltyTitle ?title })
}
",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?gibson dbo:creatorOf ?shadow .
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?alterEgo .
  FILTER(CONTAINS(LCASE(STR(?alterEgo)), ""actor"") || CONTAINS(LCASE(STR(?alterEgo)), ""singer"") || CONTAINS(LCASE(STR(?alterEgo)), ""dancer""))
}
```",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Darryl""@en .
  ?person foaf:familyName ""Bannerman-Martin""@en .
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person dbo:profession ?profession .
  FILTER (
    EXISTS { ?profession rdfs:label ""Writer""@en . }
    || EXISTS { ?profession rdfs:label ""Musical artist""@en . }
  )
  OPTIONAL {
    ?work dbo:title ""The Live Anthology""@en ;
          dbo:artist ?person .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  # For Alberto Ruiz-Gallardón's residence
  ?alberto rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?alberto dbo:residence ?residence .
  
  # For Mariano Rajoy's office location
  ?mariano rdfs:label ""Mariano Rajoy""@en .
  ?mariano dbo:officeLocation ?office .

  # Find the tenant of the residence (Alberto Ruiz-Gallardón)
  OPTIONAL { ?residence dbo:resident ?tenant . FILTER(?tenant = ?alberto) }

  # Find the tenant of the office (Mariano Rajoy)
  OPTIONAL { ?office dbo:employee ?tenant . FILTER(?tenant = ?mariano) }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?player rdfs:label ""Jamie McCunnie""@en .
  ?player dbo:manager ?manager .

  ?manager dbo:nativePlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""bristol""))

  OPTIONAL { 
    ?team dbo:coach ?manager .
    ?team a dbo:SoccerClub .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?writtenWork WHERE {
  ?biden rdfs:label ""Joe Biden""@en .
  
  # Find the book that is American
  ?book dbo:author ?biden ;
        a dbo:Book ;
        dbo:country dbr:United_States .

  # Find any written work by Joe Biden
  ?writtenWork dbo:author ?biden ;
               a dbo:CreativeWork .
}
```",4,10,5,2,2,3,2,20,0,0,1,0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?club WHERE {
  ?player rdfs:label ""Jamie McCunnie""@en .
  ?player dbo:member ?club .
  ?club rdf:type dbo:SoccerClub ;
        rdf:type dbo:SportsTeam .
}
```",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?team rdfs:label ""Lai Sun Cheung""@en .
  ?team dbo:player ?player .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinand rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?ferdinand dbo:child ?child .

  # Assuming the child is a commander in war
  ?child dbo:militaryCommanderOf ?commanderRole .

  # Societal event and television show association (hypothetical properties)
  ?child dbo:societalEvent ?event .
  ?child dbo:televisionShow ?show .

  # Connection to 2nd Dragoon Regiment (France) (hypothetical property)
  ?child dbo:memberOf ?regiment .
  FILTER(STR(?regiment) = ""2nd Dragoon Regiment (France)"")

  # Father of the parent of Archduke Charles Joseph of Austria
  ?parent dbo:child ?archduke .
  ?archduke rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?child dbo:fatherOf ?parent .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?person rdfs:label ""Rodney Lees""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder WHERE {
  ?georgeDucas rdfs:label ""George Ducas""@en .
  OPTIONAL { ?georgeDucas dbo:officeHolder ?officeHolder . }
  FILTER (CONTAINS(LCASE(STR(?officeHolder)), ""russian-polish war"") || CONTAINS(LCASE(STR(?officeHolder)), ""1654-1667""))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ceceBirthPlace ?paulusBirthPlace ?governor ?governorBirthPlace WHERE {
  # Step 1: Find Cece Bell's birth place
  ?cece dbo:birthPlace ?ceceBirthPlace .
  ?cece rdfs:label ""Cece Bell""@en .

  # Step 2: Identify Paulus Powell's birth place
  ?paulus dbo:birthPlace ?paulusBirthPlace .
  ?paulus rdfs:label ""Paulus Powell""@en .
  
  # Ensure the birth place is a region and administrative region
  ?paulusBirthPlace rdf:type dbo:AdministrativeRegion .

  # Step 3: Find the governor of Paulus Powell's birth place
  ?governor dbo:officeHolderOf ?paulusBirthPlace .
  ?governor rdfs:label ?governorLabel .

  # Step 4: Retrieve the birth place of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorBirthPlace WHERE {
  ?author rdfs:label ""Cece Bell""@en .
  ?author dbo:birthPlace ?authorBirthPlace .
}

SELECT ?gilliganBirthPlace WHERE {
  ?person rdfs:label ""Vince Gilligan""@en .
  ?person dbo:birthPlace ?gilliganBirthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?daniel rdfs:label ""Daniel Elahi Galán""@en .
  ?daniel dbo:nationality ?country .
}
```",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Step 1: Find Marcelo Sarmiento's Birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthday WHERE {
  ?marcelo dbo:birthDate ?birthday .
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
}

# Step 2: Find a Soccer Player and Manager Born on the Same Day
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:birthDate ?birthday .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbr:Soccer_manager .
  FILTER(?birthday = ""YYYY-MM-DD""^^xsd:date)  # Replace YYYY-MM-DD with the actual date from step 1
}

# Step 3: Identify Sergio Agüero's Team
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?team WHERE {
  ?aguero dbo:sport dbr:Soccer .
  ?aguero rdfs:label ""Sergio Agüero""@en .
  ?aguero dbo:playsFor ?team .
  ?person dbo:birthDate ?birthday .
  FILTER(?birthday = ""YYYY-MM-DD""^^xsd:date)  # Use the same date from step 2
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?robert rdfs:label ""Robert Lamar Thompson""@en .
  ?robert a dbo:MusicalArtist .

  ?shadowAlterEgo rdfs:label ""Lamont Cranston""@en .
  ?shadowAlterEgo dbo:alterEgoOf ?theShadow .

  ?cranstonsBand dbo:bandMember ?shadowAlterEgo .
  ?cranstonsBand rdfs:label ?band .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event rdfs:label ""Third Taiwan Strait Crisis""@en .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,18,0,0,1.0,1.0,1.0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?thunderbirds rdfs:label ""The Fabulous Thunderbirds""@en .
  ?kimWilson rdfs:label ""Kim Wilson""@en .
  
  OPTIONAL { 
    ?thunderbirds dbo:bandMember ?bandMember .
    FILTER (?bandMember = ?kimWilson)
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty WHERE {
  # Identify Patrice Martin-Lalande
  ?patrice rdfs:label ""Patrice Martin-Lalande""@en .
  
  # Find the office or role he held and determine successors
  ?office dbo:holder ?patrice ;
          dbo:successor ?successor .

  # Ensure successor is a politician and French
  ?successor dbo:nationality dbr:France ;
            rdf:type dbo:Politician .

  # Retrieve the political party of the successor
  ?successor dbo:party ?successorParty .
}
```",2,4,3,2,1,2,2,9,0,0,6,0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  VALUES ?name { ""Cece Bell""@en ""Glenn Youngkin""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfRogerII WHERE {
  # Step 1: Identify Roger II of Sicily and his children
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?rogerII dbo:child ?childOfRogerII .

  # Step 2: Identify Constance of Burgundy, her spouse, and their child
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouseOfConstance .
  ?spouseOfConstance dbo:child ?childOfSpouse .

  # Step 3: Identify William I of Sicily and his children
  ?williamI rdfs:label ""William I of Sicily""@en .
  ?williamI dbo:child ?childOfWilliamI .

  # Step 4: Find the intersection where a child of Roger II is also a parent of a royalty linked through the lineage
  ?childOfRogerII dbo:parent ?parentOfRoyalty .
  ?parentOfRoyalty rdfs:label ?royaltyLabel .
  
  FILTER EXISTS {
    ?childOfSpouse dbo:parent ?parentOfRoyalty .
  }
  
  FILTER EXISTS {
    ?childOfWilliamI dbo:parent ?parentOfRoyalty .
  }

  # Ensure the parent is a royalty",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?charlesI dbo:father ?father .
  
  ?father rdfs:label ?fatherLabel .
  FILTER regex(?fatherLabel, ""royalty"", ""i"") .

  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?spouse .

  ?spouse rdfs:label ?spouseLabel .
  
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:child ?spouse .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  ?pablo rdfs:label ""Pablo Aimar""@en .
  ?pablo dbo:member ?team .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?show rdfs:label ""Dispatches from Elsewhere""@en .
  ?show dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,1,1.0,0.8333333333333334,0.9090909090909091
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Poland .
  ?person dbo:birthPlace dbr:Łódź .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""athlete""))
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?theodorHeuss rdfs:label ""Theodor Heuss""@en .
  ?theodorHeuss dbo:country ?country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  ?person dbo:birthPlace ?birthPlace .

  FILTER (
    EXISTS { ?birthPlace rdf:type dbo:State . }
    && EXISTS { ?birthPlace rdf:type dbo:Region . }
    && EXISTS { ?birthPlace rdf:type dbo:Settlement . }
    && EXISTS { ?birthPlace dbo:country dbr:United_States . }
  )
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find spouse of Charles II of Naples
  ?charlesII rdfs:label ""Charles II of Naples""@en .
  ?charlesII dbo:spouse ?spouse .

  # Step 2: Find child of the child (royalty) of predecessor of Stephen V of Hungary
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?predecessor dbo:predecessorOf ?stephenV .
  ?child1 dbo:child ?predecessor .
  ?grandChild dbo:child ?child1 .
  FILTER EXISTS { ?grandChild dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  # Step 3: Find parent of father (royalty) of Charles I of Hungary
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?father dbo:child ?charlesI .
  ?parent dbo:parent ?father .
  FILTER EXISTS { ?parent dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  # Combine results
  VALUES ?spouse {
    ?grandChild
    ?parent
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person a dbo:SportsManager .
  ?person dbo:managerOfTeam ?team .
  ?team rdfs:label ""VfL Bochum""@en .
  ?team dbp:sportSeason ""2007–08 VfL Bochum season"" .

  ?team dbo:manager ?manager .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?work WHERE {
  # Find the spouse of Hillary Clinton
  ?hillary rdfs:label ""Hillary Clinton""@en .
  ?hillary dbo:spouse ?spouse .

  # Find a work by Bill Clinton that is both a book and a work
  ?bill rdfs:label ""Bill Clinton""@en .
  ?bill dbo:author ?work .
  ?work rdf:type dbo:Book .
  ?work rdf:type dbo:Work .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?party WHERE {
  { 
    ?person rdfs:label ""Roy Barreras""@en .
    ?person dbo:partyAffiliation ?party .
  }
  UNION
  {
    ?santos rdfs:label ""Juan Manuel Santos""@en .
    ?santos dbo:partyAffiliation ?party .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?smita rdfs:label ""Smita Patil""@en .
  ?smita dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?tenantOffice ?warCommander WHERE {
  # Office of the leader of Conservative Republican Party (Spain)
  OPTIONAL {
    ?party rdfs:label ""Conservative Republican Party""@en .
    ?leader dbo:leader ?party ;
            dbo:positionHeld ?officeLeader .
  }

  # Tenant of Madrid
  OPTIONAL {
    ?person dbo:residence dbr:Madrid ;
            dbo:positionHeld ?tenantOffice .
  }
  
  # Office of the commander during Central African Republic Civil War
  OPTIONAL {
    ?war rdfs:label ""Central African Republic Civil War""@en .
    ?commander dbo:role ?war ;
               dbo:positionHeld ?warCommander .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?pacz rdfs:label ""Michał Kazimierz Pac""@en .
  ?event dbo:commander ?pacz ;
         a dbo:MilitaryConflict .
  ?pacz dbo:successor ?successor .
  ?successor (dbo:officeHolder|dbo:politician) ?role .
}
```",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?yeshaq rdfs:label ""Yeshaq I""@en .
  ?yeshaq dbo:spouse ?spouse .
  ?yeshaq dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo rdfs:label ""Lamont Cranston""@en .
}
```",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild WHERE {
  ?aisha rdfs:label ""Aisha bint Faisal""@en .
  
  # Find her parent(s)
  ?parent dbo:child ?aisha .
  
  # Ensure the parent is a royalty
  ?parent rdfs:label ?parentLabel .
  FILTER(CONTAINS(LCASE(?parentLabel), ""prince"") || CONTAINS(LCASE(?parentLabel), ""king"") || 
         CONTAINS(LCASE(?parentLabel), ""queen"") || CONTAINS(LCASE(?parentLabel), ""princess""))

  # Find the child(ren) of this royal parent
  ?royalParentChild dbo:child ?royalChild .
  
  # Ensure the child is a royalty
  ?royalChild rdfs:label ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""prince"") || CONTAINS(LCASE(?childLabel), ""king"") || 
         CONTAINS(LCASE(?childLabel), ""queen"") || CONTAINS(LCASE(?childLabel), ""princess""))
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?creation rdfs:label ""The Shadow""@en .
  ?creation dbo:creator ?gibson .
  ?gibson rdfs:label ""Walter B. Gibson""@en .
  ?creation dbo:alterEgo ?alterEgo .
}

SELECT ?profession WHERE {
  ?person rdfs:label ""Noel Cabangon""@en .
  ?person dbo:occupation ?profession .
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Bobby Shmurda
  ?bobby a dbo:MusicalArtist ;
         rdfs:label ""Bobby Shmurda""@en .
  
  # Step 2: Find band members associated with Bobby Shmurda who are also musical artists
  ?bandMember a dbo:MusicalArtist ;
              dbo:associatedBandMember ?bobby .

  # Step 3: Retrieve Bobby Shmurda's birth name
  ?bobby foaf:name ?birthName .
  
  # Step 4: Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico and its native region
  ?choir a dbo:MusicalGroup ;
         rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  ?award dbo:recipient ?choir ;
         dbo:nativeRegion ?region .

  # Ensure the region is an American state or settlement
  ?region a dbo:StateOrSettlement ;
          dbo:country dbr:United_States .

  # Step 5: Match the person who fits all criteria
  ?bandMember foaf:name ?birthName .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfRogerII ?royalChild WHERE {
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?rogerII dbo:child ?childOfRogerII .

  ?williamI rdfs:label ""William I of Sicily""@en .
  ?williamI dbo:child ?royalChild .
  
  FILTER EXISTS { ?royalChild a dbo:Monarch } # Ensuring the child is royalty

  ?childOfRogerII dbo:spouseOrPartner ?parentOfRoyalChild .
  ?parentOfRoyalChild dbo:child ?royalChild .

  FILTER (?parentOfRoyalChild = ?childOfRogerII) # Matching father to Roger II's child
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?associatedArtist WHERE {
  { 
    ?stuart rdfs:label ""Stuart Mcbeath Tosh""@en .
    ?stuart dbo:associatedBand ?band .
    ?band dbo:member ?associatedArtist .
  }
  UNION
  { 
    ?billy rdfs:label ""Billy Lyall""@en .
    ?billy dbo:associatedBand ?band .
    ?band dbo:member ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?club rdfs:label ""VfL Bochum""@en .
  ?club dbo:sportTeamInSeason dbp:season ""2007–08"" .
  ?club dbo:manager ?manager .
  ?manager dbo:nationality ?nationality .
  FILTER (CONTAINS(LCASE(?nationality), ""west germany""))
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Maria of Bytom's spouse
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouse .

  # Step 2: Find the father of Maria of Bytom's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Identify royalty among parents (assuming a property like dbo:royalTitle)
  OPTIONAL { ?fatherOfSpouse dbo:royalTitle ?title . }
  
  # Step 4: Find Philip I, Prince of Taranto's father
  ?philip rdfs:label ""Philip I, Prince of Taranto""@en .
  ?philip dbo:father ?fatherOfPhilip .

  # Step 5: Identify spouse of Philip I's father
  ?fatherOfPhilip dbo:spouse ?spouseOfFatherOfPhilip .

  # Step 6: Find common parent that is royalty
  OPTIONAL { ?spouseOfFatherOfPhilip dbo:royalTitle ?title2 . }
  
  FILTER EXISTS {
    ?commonParent IN (?fatherOfSpouse; ?spouseOfFatherOfPhilip) .
    OPTIONAL { ?commonParent dbo:royalTitle ?title3 . }",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""ATL""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""florida""))
  
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  
  OPTIONAL { 
    ?bandMember dbo:member ?person .
    ?bandMember rdfs:label ""Uncle Murda""@en .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?soccerPlayerManager ?athleteTeam WHERE {
  # Step 1: Find Marty Pollio's birthday
  ?martyPollio rdfs:label ""Marty Pollio""@en .
  ?martyPollio dbo:birthday ?birthday .

  # Step 2: Find an athlete born on Marty Pollio's birthday
  ?athlete rdf:type dbo:Athlete ;
           dbo:birthday ?birthday .

  # Step 3: Find a soccer player and manager born on 1979-11-03
  ?soccerPlayerManager rdf:type dbo:SoccerPlayer, dbo:SoccerManager ;
                       dbo:birthday ""1979-11-03""^^xsd:date .

  # Step 4: Check if this person played for the athlete's team
  ?athleteTeam dbo:team ?soccerPlayerManager .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Sandro Bertaggia's birthplace
  ?bertaggia rdfs:label ""Sandro Bertaggia""@en .
  ?bertaggia dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Step 3: Identify Alexander II's administration
  ?alexanderII rdfs:label ""Alexander II, Grand Duke of Finland""@en .
  ?alexanderII dbo:office ?administration .

  # Step 4: Find people native to this administration
  ?nativePerson dbo:nativePlace ?administration .

  # Step 5: Check if any of these people have descendants born in Sandro Bertaggia's birthplace
  ?nativePerson dbo:decedent ?descendant .
  ?descendant dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?george rdfs:label ""George Ducas""@en .
  { ?george dbo:wikiPageWikiLink ?reference . }
  UNION
  { ?george dbo:wikiPageExternalLink ?reference . }
}
```",1,1,2,1,1,3,3,71,0,52,2,0.0,0.0,0
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthday WHERE {
  ?tony rdfs:label ""Tony Hollings""@en .
  ?tony dbo:birthDate ?birthday .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event rdfs:label ""The War""@en .
  ?militaryForce dbo:participatedIn ?algerianWar .
  ?algerianWar rdfs:label ""Algerian War""@en .
  ?militaryForce dbo:commander ?commander .

  OPTIONAL {
    ?child dbo:father ?commander ;
           dbo:parent ?ferdinandIII .
    ?ferdinandIII rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Charles II of Naples' spouse
  ?charles dbo:spouse ?spouseOfCharles .
  FILTER (str(?charles) = ""Charles_II_of_Naples""^^xsd:string)

  # Step 2: Spouse of Maria of Bytom and their royal father's parent
  ?maria dbo:spouse ?spouseOfMaria .
  FILTER (str(?maria) = ""Maria_of_Bytom""^^xsd:string)
  
  ?spouseOfMaria dbo:father ?royalFather .
  ?royalFather a dbo:Monarch ; dbo:parent ?parentOfRoyalFather .

  # Step 3: Child of Béla IV of Hungary and their child
  ?bela dbo:child ?childOfBela .
  FILTER (str(?bela) = ""Béla_IV_of_Hungary""^^xsd:string)
  
  ?childOfBela a dbo:Monarch ; dbo:child ?grandChildOfBela .

  # Step 4: Find common entity
  VALUES ?commonEntity {
    ?spouseOfCharles
    ?parentOfRoyalFather
    ?grandChildOfBela
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  ?commander a dbo:OfficeHolder ;
             dbo:office ?koreanConflict .
  
  FILTER(CONTAINS(LCASE(STR(?koreanConflict)), ""korean conflict"") || CONTAINS(LCASE(STR(?koreanConflict)), ""korean war""))
  
  ?work dbo:creator ?commander ;
        rdf:type dbo:CreativeWork .

  ?author dbo:author ?work .
}
```",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?author dbo:book ?smartbomb .
  ?smartbomb rdfs:label ""Smartbomb""@en .

  # Find movies associated with this author
  ?movie dbo:starring ?author .
  
  # Identify The Shadow's alter ego and their professional role
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  ?shadowAlterEgo dbo:profession ?profession .

  # Find actors in the movie who are also associated with the profession of The Shadow's alter ego
  ?movie dbo:starring ?actor .
  ?actor dbo:occupation ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?phantomsmasher rdfs:label ""Phantomsmasher""@en .
  ?phantomsmasher dbo:associatedBand ?artist .
  ?artist dbo:bandMember ?bandMember .
  ?bandMember rdf:type ?type1, ?type2 .
  FILTER (?type1 = dbo:Band && (
    ?type2 = dbo:Group || 
    ?type2 = dbo:Organization))
  OPTIONAL {
    ?artist dbo:reference ?burntBySun .
    ?burntBySun rdf:type dbo:Group .
  }
}",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  # Step 1: Identify Bob Thompson (musician)
  ?bob rdfs:label ""Bob Thompson (musician)""@en .
  
  # Step 2: Find his birth name
  ?bob dbo:birthName ?birthName .

  # Step 3: Identify Sam Concepcion's profession
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession .

  # Step 4: Find the person with Bob Thompson's birth name and Sam Concepcion's profession
  ?person dbo:birthName ?birthName ;
          dbo:profession ?profession ;
          a dbo:MusicalArtist .

  # Step 5: Get the band of this person
  ?person dbo:bandMemberOf ?band .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?duke rdfs:label ""Anthony Ulrich, Duke of Brunswick-Wolfenbüttel""@en .
  ?duke dbo:parent ?parent .

  # Filter for royal parents
  FILTER (
    EXISTS { ?parent dbo:title ?title . 
             VALUES ?title { 
               dbc:Kings_of_Germany 
               dbc:Queens_of_Germany 
               dbc:Dukes_of_Brunswick-Lüneburg 
               dbc:Princes_of_Brunswick-Wolfenbüttel
             }
           }
  )

  # Find the child of this royal parent
  ?parent dbo:child ?child .

  # Check if this child is spouse of Prince Augustus William of Prussia
  ?prince rdfs:label ""Prince Augustus William of Prussia""@en .
  ?prince dbo:spouse ?child .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reignStart ?reignEnd ?country WHERE {
  ?christian rdfs:label ""Christian IX of Denmark""@en .
  OPTIONAL { ?christian dbo:reign ?reign . 
             ?reign dbo:startYear ?reignStart ;
                    dbo:endYear ?reignEnd . }
  OPTIONAL { ?christian dbo:countryAdministered ?country . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?deathPlace ?administeredTerritory ?ruledByChristianIX WHERE {
  
  # Find death place of Christian Ditlev Ammentorp Hansen and confirm it is a settlement
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Find territory administered from the death place (if available)
  OPTIONAL {
    ?adminRecord dbo:location ?deathPlace .
    ?adminRecord dbo:administrativeTerritory ?administeredTerritory .
  }

  # Find territories ruled by Christian IX of Denmark
  ?christianIX rdfs:label ""Christian IX of Denmark""@en .
  ?christianIX dbo:ruledTerritory ?ruledByChristianIX .

}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?club WHERE {
  ?denis rdfs:label ""Denis Kolodin""@en .
  ?denis dbo:team ?club .
}
```",1,2,2,1,1,3,2,20,10,0,0,1.0,1.0,1.0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?club ?nickname WHERE {
  ?denis rdfs:label ""Denis Kolodin""@en .
  ?denis dbo:member|dbo:team ?club .
  ?club dbo:nickname ?nickname .
}",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person rdfs:label ""George Pickett""@en .
  ?person dbo:role ""Commander of Pickett's Charge"" .
  
  OPTIONAL { 
    ?person dbo:partyMemberOf ?party .
    ?party rdfs:label ""Republican Party (United States)""@en .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?philippAlbrecht dbo:child ?child .
  ?child dbo:predecessor ?predecessor .
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?awardee WHERE {
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?vince dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Placeholder for when specific entity information is provided.
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  # Replace `?entity` with the actual resource URI or label of the target entity
  ?entity a dbo:Entity .
  ?entity dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?deathPlace WHERE {
  # Part 1: Find the war involving Napoleon Zervas
  ?zervas rdfs:label ""Napoleon Zervas""@en .
  ?zervas dbo:participatedIn ?war .

  # Part 2: Find the death place of Antonios Varthalitis that is a settlement
  ?varthalitis rdfs:label ""Antonios Varthalitis""@en .
  ?varthalitis dbo:deathPlace ?deathPlace .
  
  FILTER EXISTS { ?deathPlace rdf:type dbo:Settlement }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?yurii rdfs:label ""Yurii Khmelnytsky""@en .
  ?yurii dbo:successor ?successor .
  
  OPTIONAL { 
    ?successor rdfs:label ""George Ducas""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  OPTIONAL {
    ?alberto rdfs:label ""Alberto Ruiz-Gallardón""@en .
    ?alberto dbo:residence ?residence .
    ?residence dbo:resident ?tenant .
  }
  UNION
  OPTIONAL {
    ?miguel rdfs:label ""Miguel Maura""@en .
    ?miguel dbo:office ?office .
    ?office dbo:employee ?tenant .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?tenant WHERE {
  ?mariano rdfs:label ""Mariano Rajoy""@en .

  # Find the office held by Mariano Rajoy in 2003
  ?mariano dbo:positionHeld ?position .
  ?position dbp:electionDate ?electionDate ;
            dbp:office ?office .

  FILTER (YEAR(?electionDate) = 2003 && CONTAINS(LCASE(STR(?office)), ""madrid city council""))

  # Find the residence of the office holder
  ?office dbo:officeHolder ?tenant .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show ?award WHERE {
  # Find the show associated with the Royal Swedish Academy of Sciences
  ?academy rdfs:label ""Royal Swedish Academy of Sciences""@en .
  ?academy dbo:awards ?nobelPrize .
  ?nobelPrize rdfs:label ?show .

  # Find the award received by Max Born
  ?born rdfs:label ""Max Born""@en .
  ?born dbo:awards ?award .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find T.I.'s songs or albums
  ?work dbo:artist dbr:T.I. ;
        a dbo:Song .

  # Identify the album of the song
  ?album dbo:song ?work ;
         dbo:title ?albumTitle .

  # Find movies related to the album (e.g., soundtrack)
  ?movie dbo:soundtrack ?album .

  # Retrieve actors from the movie
  ?actor dbo:starringIn ?movie .
}
```",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?successor WHERE {
  ?war dbo:name ""Russo-Polish War (1654–1667)""@en .
  ?war dbo:commander ?commander .
  OPTIONAL { ?commander dbo:successor ?successor . }
  OPTIONAL { ?successor a dbo:OfficeHolder . }
  FILTER EXISTS {
    ?commander rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""george ducas"") || CONTAINS(LCASE(?label), ""jean baptist comte d'arco""))
  }
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?triple_x rdfs:label ""The Triple X's""@en .
  ?calder rdfs:label ""Robert Calder""@en .
  
  ?triple_x dbo:militaryConflict ?war .
  ?calder dbo:militaryForce ?force ;
          dbo:event ?event .

  ?force dbo:event ?event .
  ?event dbo:militaryConflict ?war .

  ?war dbo:commander ?commander .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Der Blau""@en .
  ?entity rdfs:label ?label .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonEntity WHERE {
  # Find Renée of Bourbon's spouse
  ?rene rdfs:label ""Renée of Bourbon""@en .
  ?rene dbo:spouse ?spouse .

  # Find Dorothea of Lorraine's father and his parent
  ?dorothea rdfs:label ""Dorothea of Lorraine""@en .
  ?dorothea dbo:father ?father .
  ?father dbo:parent ?commonEntity .

  # Ensure the spouse is also the common entity
  FILTER (?spouse = ?commonEntity)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?campaign dbo:commander ?commander .
}

SELECT ?battle ?commander WHERE {
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Richard Grant Esterhuysen""@en .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Identify Ian Gregson and his award
  ?ianGregson rdfs:label ""Ian Gregson (poet)""@en .
  ?ianGregson dbo:award ?award .

  # Step 2: Identify Linda Bruckheimer and her spouse
  ?lindaBruckheimer rdfs:label ""Linda Bruckheimer""@en .
  ?lindaBruckheimer dbo:spouse ?spouse .

  # Step 3: Find a movie associated with both the award and the spouse
  ?movie dbo:award ?award ;
         dbo:producer ?producer ;
         dbo:actor ?spouse .

}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?war WHERE {
  # Konstantinos Ventiris
  { 
    ?ventiris rdfs:label ""Konstantinos Ventiris""@en .
    ?ventiris dbo:participatedIn ?war .
    BIND(?ventiris AS ?entity)
  }
  
  UNION
  
  # Leader of the National Party of Greece
  {
    ?leader dbp:partyLeaderOf <http://dbpedia.org/resource/National_Party_of_Greece> .
    ?leader dbo:participatedIn ?war .
    BIND(?leader AS ?entity)
  }

  UNION

  # Entity in Athens
  {
    ?athensEntity dbo:location <http://dbpedia.org/resource/Athens> .
    ?athensEntity dbo:participatedIn ?war .
    BIND(?athensEntity AS ?entity)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Identify Saw Shwe Khet and his spouse
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .

  # Identify Min Hla Htut of Pyakaung and his parent
  ?minHlaHtut rdfs:label ""Min Hla Htut of Pyakaung""@en .
  ?minHlaHtut dbo:parent ?parent .

  # Ensure Saw Shwe Khet is the child of Min Hla Htut's parent
  ?parent dbo:child ?sawShweKhet .

  # Identify Myat Hpone Pyo and his predecessor
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?predecessor dbo:predecessor ?myatHponePyo .

  # Ensure Saw Shwe Khet is the predecessor of Myat Hpone Pyo
  FILTER (?sawShweKhet = ?predecessor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?allan rdfs:label ""Allan Arbus""@en .
  ?amy rdfs:label ""Amy Arbus""@en .
  
  ?child dbo:parent ?allan ;
         dbo:parent ?amy .

  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouse .
  
  OPTIONAL { ?spouse dbo:royalTitle ?title . FILTER (BOUND(?title)) }
  
  ?spouse dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,2,3,1,0.4,0.6666666666666666,0.5
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?band ;
              dbo:memberOfBand ?band .
  ?band dbo:associatedBand ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person dbo:officeHolder ?office .
  ?office dbo:positionHeld dbr:North_Carolina_Air_National_Guard_Commander .
  ?person dbo:politicalPartyMember ?party .

  ?work dbo:author ?person ;
        a dbo:CreativeWork, dbo:WrittenWork ;
        dbo:country dbr:United_States ;
        a dbo:Book .

  BIND(?person AS ?author)
}
```",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?zaraYaqob WHERE {
  ?dawitI rdfs:label ""Dawit I""@en .
  ?zaraYaqob dbo:child ?dawitI ;
             dbo:positionHeld ?office .
  FILTER EXISTS { ?office rdfs:label ?title . }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royalChild WHERE {
  ?peterIV rdfs:label ""Peter IV of Aragon""@en .
  ?peterIV dbo:father ?father .
  
  ?father dbo:child ?child .
  
  OPTIONAL { ?child dbo:royalTitle ?title . }
  
  FILTER EXISTS { ?child dbo:royalTitle ?title } # Ensures the child has a royal title
  BIND(?child AS ?royalChild)
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?event WHERE {
  ?ceciliaRenata dbo:father ?ferdinandIII .
  FILTER (str(?ceciliaRenata) = ""Cecilia Renata of Austria"")
  FILTER (str(?ferdinandIII) = ""Ferdinand III, Holy Roman Emperor"")

  ?child dbo:parent ?ferdinandIII .
  ?child dbo:parent ?otherParent .

  ?event a dbo:SocietalEvent ;
         a dbo:TelevisionShow .
  ?event dbo:relatedTo ""2nd Dragoon Regiment (France)""@en .
}",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Back to Work""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  { 
    ?person rdfs:label ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?person rdfs:label ""Glenn Youngkin""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?team WHERE {
  ?juanCarloMolina 
    rdfs:label ""Juan Carlos Molina""@en ;
    dbo:birthDate ?birthDate ;
    dbo:sport ?sport .
  
  FILTER (?birthDate = xsd:date(""1979-11-03"") && 
          (str(?sport) = ""Association football"" || str(?sport) = ""Soccer""))
  
  ?juanCarloMolina dbo:team ?team .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdfs:label ""Bruno Daniel Marie Paul Retailleau""@en .
  ?person dbo:party ?party .
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence WHERE {
  ?person rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?person dbo:residence ?residence .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:officeHolder ?office .
  FILTER EXISTS { ?office dbo:country dbr:Spain }
}
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  { 
    ?ceceBell rdfs:label ""Cece Bell""@en .
    ?ceceBell dbo:birthPlace ?birthPlace .
    BIND(?ceceBell AS ?person)
  }
  
  UNION
  
  {
    ?vinceGilligan rdfs:label ""Vince Gilligan""@en .
    ?award dbo:recipient ?vinceGilligan .
    ?award dbo:birthPlace ?birthPlace .
    BIND(?award AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?nickCurran ?associatedArtist ?fabulousThunderbirds ?bandMember WHERE {
  # Identify Nick Curran
  ?nickCurran a dbo:MusicalArtist ;
              dbo:birthday ""1945-03-30""^^xsd:date ;
              rdfs:label ""Nick Curran""@en .
  
  # Find associated musical artists with Nick Curran
  OPTIONAL { ?nickCurran dbo:associatedBand ?associatedArtist . }
  
  # Identify The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalGroup ;
                               rdfs:label ""The Fabulous Thunderbirds""@en .
  
  # Find band members of The Fabulous Thunderbirds
  OPTIONAL { 
    ?fabulousThunderbirds dbo:bandMember ?bandMember .
    ?bandMember a dbo:MusicalArtist .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Identify Actor in ""High Society Blues""
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actor WHERE {
  ?movie dbo:title ""High Society Blues""@en .
  ?movie dbo:castMember ?actor .
}

# Step 2: Find Claim to Fame (Notable Work)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?work WHERE {
  ?actor dbo:filmography ?work .
}

# Step 3: Identify Producer of the Notable Work
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?producer WHERE {
  ?work dbo:productionCompany ?company .
  ?company dbo:president ?producer .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  
  # Find children of Saw Shwe Khet
  ?sawShweKhet dbo:child ?child .
  
  # Ensure the child is royalty
  ?child dbo:title ?title .
  FILTER EXISTS { ?title rdfs:label ?royalTitle . FILTER regex(?royalTitle, ""king|queen|prince|princess"", ""i"") }
  
  # Find father of the royal child
  ?child dbo:father ?father .
  
  # Ensure the father is royalty
  ?father dbo:title ?fatherTitle .
  FILTER EXISTS { ?fatherTitle rdfs:label ?royalFatherTitle . FILTER regex(?royalFatherTitle, ""king|queen|prince|princess"", ""i"") }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies with Herschel Bernardi as an actor
  ?movie dbo:starring ?herberson .
  ?herberson rdfs:label ""Herschel Bernardi""@en .

  # Step 2: Identify Eugène Cattin's profession
  ?eugene foaf:profession ?profession .
  ?eugene rdfs:label ""Eugène Cattin""@en .

  # Step 3: Find the parent of Eugène Cattin's profession
  ?parent owl:subClassOf+ ?profession .

  # Step 4: Find an actor in the same movie who is associated with the parent profession
  ?movie dbo:starring ?actor .
  ?actor foaf:profession ?parent .
}
",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandfather WHERE {
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?dorothea dbo:parent ?parent .
  ?parent dbo:father ?grandfather .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  OPTIONAL { ?band dbo:alias ?realName . }
  FILTER (!bound(?realName)) # If no alias, use the label
  BIND(str(?band) AS ?realName)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Identify Rod Argent's profession
  ?rod a dbo:Musician ;
       foaf:name ""Rod Argent""@en .
  
  # Identify Joey B and Stonebwoy
  ?joey a dbo:MusicalArtist ;
        foaf:name ""Joseph Benjamin""@en ;
        foaf:birthName ""Joey B""@en .

  ?stonebwoy a dbo:MusicalArtist ;
              foaf:name ""Stonebwoy""@en ;
              foaf:birthName ""Elorm Kabu Amenyah""@en .
  
  # Find the professional who is a musician and associated with both Joey B and Stonebwoy
  ?professional a dbo:Musician ;
                foaf:name ?name ;
                (dbo:associatedBand|dbo:bandMember) ?joey ;
                (dbo:associatedBand|dbo:bandMember) ?stonebwoy .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Identify Allan Arbus
  ?allanArbus rdfs:label ""Allan Arbus""@en .
  
  # Step 2: Find Allan Arbus's children
  ?child dbo:parent ?allanArbus .

  # Step 3: Determine the parent of Allan Arbus's child
  ?childParent dbo:parent ?child .
  
  # Step 4: Identify professional in Photographer
  ?photographer rdfs:label ""Photographer""@en .
  
  # Step 5: Find the parent of the professional in Photographer
  ?photoParent dbo:profession ?photographer .

  # Step 6: Match the two parents
  FILTER (?childParent = ?photoParent)
  BIND(?childParent AS ?commonParent)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?munasChild dbo:childOf ?muna .
  ?muna rdfs:label ""Princess Muna al-Hussein""@en .

  # Assuming royalty can be inferred by a title or role
  OPTIONAL { ?munasChild dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  ?munasChild dbo:parent ?parent .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?artist rdfs:label ""Apache Indian""@en .
  ?artist dbo:work ?work .
  ?work rdf:type dbo:MusicalWork .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?movie rdfs:label ""Johnny Doughboy""@en .
  ?movie dbo:actor ?actor .
  ?actor dbo:notableWork ?work .
  ?work dbo:producer ?producer .

  UNION

  ?janet rdfs:label ""Janet Gaynor""@en .
  ?janet dbo:notableWork ?movie2 .
  ?movie2 a dbo:Film .
  ?movie2 dbo:producer ?producer2 .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tvSeries ?actor WHERE {
  ?tvSeries dbo:starring ?role .
  ?role foaf:name ""Richard E. Grant""@en .

  ?tvSeries dbo:basedOn ?comicsCharacter .
  ?comicsCharacter rdfs:label ?characterLabel .

  FILTER(CONTAINS(LCASE(?characterLabel), ""shadow""))

  ?tvSeries dbo:actor ?actorRole .
  ?actorRole foaf:name ?actorName .
  FILTER EXISTS { ?actorRole dbo:professionActor ?profession }
}
```",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?nobelPrize rdfs:label ""Nobel Prize in Physics""@en .
  ?nobelPrize dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,0,56,1,0.0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?juanCarlosMolinaPlayer ?actorSoccerPlayer ?sameBirthdatePerson
WHERE {
  # Find Juan Carlos Molina (footballer)
  ?juancarlos rdfs:label ""Juan Carlos Molina""@en .
  
  # Assuming we need to find a player related to him, possibly through a team or sport property
  ?juancarlos dbo:sportTeam ?team .
  ?team dbo:player ?juanCarlosMolinaPlayer .

  # Find actors in All or Nothing: Manchester City who are soccer players
  ?show rdfs:label ""All or Nothing: Manchester City""@en .
  ?show dbo:actor ?actor .
  ?actor dbo:sport ?soccerSport .
  
  FILTER(?soccerSport = <http://dbpedia.org/resource/Soccer>)

  # Find Marcelo Sarmiento's birthdate
  ?marceloSarmiento rdfs:label ""Marcelo Sarmiento""@en .
  ?marceloSarmiento dbo:birthday ?birthdate .

  # Find a person born on the same date who is both a soccer player and manager
  ?sameBirthdatePerson dbo:birthday ?birthdate .
  ?sameBirthdatePerson dbo:sport ?soccerSport2 .
  ?sameBirthdatePerson dbo:managerTeam ?team2 .
  
  FILTER(?soccerSport2 = <http://dbpedia.org/resource/Soccer>)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?calderRole ?war ?bayneRole WHERE {
  # French campaign in Egypt and Syria
  dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
  
  # Robert Calder's role
  OPTIONAL { 
    ?calder rdfs:label ""Robert Calder""@en .
    ?calder dbo:roleInEvent ?calderRole .
    FILTER(?calderRole = dbr:French_campaign_in_Egypt_and_Syria)
  }
  
  # Napoleonic Wars
  dbr:Napoleonic_Wars a dbo:MilitaryConflict ;
                      dbo:participatingMilitaryForce ?war .
  
  # William Bayne's role
  OPTIONAL {
    ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
    ?bayne dbo:roleInEvent ?bayneRole .
    FILTER(?bayneRole = dbr:Napoleonic_Wars)
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  { 
    ?phantomsmasher rdfs:label ""Phantomsmasher""@en .
    ?phantomsmasher dbo:associatedBand ?artist .
  }
  UNION
  {
    ?humanRemains rdfs:label ""Human Remains (band)""@en .
    ?humanRemains dbo:member ?artist .
  }
}",2,2,3,1,2,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference WHERE {
  ?peter rdfs:label ""Peter IV""@en .
  ?peter dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,1,7,0,0.125,1.0,0.2222222222222222
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?tvShow ?societalEvent WHERE {
  ?battle rdfs:label ""Battle of Vienna""@en .
  ?battle dbo:commander ?commander .

  OPTIONAL { 
    ?tvShow rdfs:label ?commanderLabel .
    ?tvShow a dbo:TelevisionSeries .
    FILTER (lang(?commanderLabel) = 'en' && ?commanderLabel = ?commander)
  }

  OPTIONAL {
    ?societalEvent rdfs:label ?commanderLabel .
    ?societalEvent a dbo:SocietalEvent .
    FILTER (lang(?commanderLabel) = 'en' && ?commanderLabel = ?commander)
  }
}
```",3,5,4,3,1,3,3,71,8,12,32,0.4,0.2,0.26666666666666666
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Ackquille Jean Pollard""@en .
  ?person dbo:nativePlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""florida""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?mariaAnna rdfs:label ""Maria Anna of Bavaria (1574–1646)""@en .
  ?mariaAnna dbo:child ?child .
  
  OPTIONAL { 
    ?ferdinandIII rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
    ?ferdinandIII dbo:child ?ferChild .
  }
  
  FILTER EXISTS {
    ?child dbo:spouse|dbo:partner ?ferChild .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?sam rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,45131,0,0.0,0
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant ?country WHERE {
  # Identify Santiago de Compostela and its tenant
  ?santiago rdfs:label ""Santiago de Compostela""@en .
  OPTIONAL { ?santiago dbo:tenant ?tenant . }

  # Determine the country associated with Santiago de Compostela's residence
  OPTIONAL { ?santiago dbo:country ?country . }

  # Find a Spanish citizen residing in Spain
  ?citizen dbo:nationality dbr:Spain ;
           dbo:citizenship dbr:Spain .
}
```",4,6,5,3,2,3,3,71,0,1,4,0.0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityLabel ?profession WHERE {
  { 
    ?shadow rdfs:label ""The Shadow""@en .
    ?shadow dbo:profession ?profession .
  }
  UNION
  {
    ?actor rdfs:label ""Actor""@en .
    ?actor dbo:profession ?profession .
  }
  BIND(CONCAT(""Entity: "", STR(?shadow), "" or "", STR(?actor)) AS ?entityLabel)
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?institution WHERE {
  ?kemp rdfs:label ""Brian Kemp""@en .
  ?kemp dbo:positionHeld ?position .
  ?position dbo:organization ?institution .
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?parent WHERE {
  ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
  ?faisal dbo:child ?child .
  
  # Assuming the child has a royal title or role
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Princess|Prince"", ""i"") }
  
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,2,20,2,4,0,0.3333333333333333,1.0,0.5
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Find children of Archduchess Margarete Sophie of Austria
  ?margareteSophie rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  ?margareteSophie dbo:child ?child .

  # Ensure the child is also a child of Albrecht, Duke of Württemberg
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?albrecht dbo:child ?child .

  # Check if this child preceded Carl, Duke of Württemberg
  OPTIONAL {
    ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
    ?predecessor rdfs:label ?childLabel .
    FILTER(?child = ?predecessor)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work ?actor WHERE {
  ?afeez rdfs:label ""Afeez Oyetoro""@en .
  ?afeez dbo:filmography ?work .
  
  # Ensure the work is both a film and possibly a television show
  ?work rdf:type dbo:Film .
  OPTIONAL { ?work rdf:type dbo:TelevisionShow . }
  
  # Find actors in these works
  ?work dbo:starring ?actor .
}
```",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:child ?child .

  ?charlesMartel rdfs:label ""Charles Martel of Anjou""@en .
  ?charlesMartel dbo:parent ?child .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Part 1: Actor in ""All or Nothing: Manchester City"" who is also a soccer player and an athlete
  ?actor dbo:role ?role .
  ?role rdfs:label ""All or Nothing: Manchester City""@en .
  ?actor dbo:sportTeam ?soccerTeam .
  ?actor rdf:type dbo:SoccerPlayer .
  ?actor rdf:type dbo:Athlete .

  # Part 2: Team of Pablo Aimar
  ?pabloAimar dbo:team ?aimarTeam .
  
  # Part 3: Player who is an athlete born on Marty Pollio's birthday
  ?player dbo:birthday ?birthday .
  FILTER (?birthday = ""1977-10-26""^^xsd:date) # Assuming Marty Pollio's birthday is October 26, 1977

  # Combine conditions to find a common player
  VALUES ?commonPlayer { ?actor ?pabloAimar ?player }
  
  # Ensure the player matches all criteria
  FILTER (?soccerTeam = ?aimarTeam)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?band rdfs:label ""Uncle Murda""@en .
  ?band dbo:bandMember ?person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?cityLabel .
  FILTER (CONTAINS(LCASE(?cityLabel), ""florida""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfRoyalParent WHERE {
  ?roger rdfs:label ""Roger II of Sicily""@en .
  
  # Find Roger's children
  ?roger dbo:child ?child .

  # For each child, find their parents
  ?child dbo:parent ?parent .

  # Check if the parent is royalty
  ?parent dbo:royalty ?royalStatus .

  # Find the children of this royal parent
  ?parent dbo:child ?childOfRoyalParent .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  # Find Sam Concepcion's profession
  ?sam a dbo:MusicalArtist ;
       rdfs:label ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession .

  # Find Bob Thompson (musician) and his band
  ?bob foaf:name ""Bob Thompson"" ;
      a dbo:Musician .
  ?bob dbo:band ?band .

  # Find artists with the same profession as Sam Concepcion and in the same band as Bob Thompson
  ?artist a dbo:MusicalArtist ;
          dbo:profession ?profession ;
          dbo:band ?band .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Identify Richard Grant Esterhuysen
  ?esterhuysen rdfs:label ""Richard Grant Esterhuysen""@en .
  
  # Find his professional alias (if any)
  OPTIONAL { ?esterhuysen foaf:name ?alias . }
  
  # Identify The Shadow and its alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Find actors associated with both a movie and its TV show adaptation
  ?actor dbo:birthName ?esterhuysen .
  ?movie dbo:starring ?actor ;
         dbo:basedOn ?tvShow .
  
  ?tvShow rdf:type dbo:TelevisionSeries .
  ?movie rdf:type dbo:Film .

  # Ensure the actor is connected to both The Shadow's alter ego and Richard Grant Esterhuysen
  FILTER(?alias = ?alterEgo)
}
```",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?billy rdfs:label ""Billy Lyall""@en .
  OPTIONAL { ?billy dbo:associatedBand ?band . }
  OPTIONAL { ?billy dbo:memberOfBand ?band . }
  ?band dbo:associatedMusicalArtist ?associatedArtist .
}
```",1,1,2,1,1,2,3,28,3,4,0,0.42857142857142855,1.0,0.6
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  # Step 2: Find his children
  ?frederick dbo:child ?child .

  # Step 3: Find the parents of Frederick's child
  ?child dbo:parent ?parent1 .

  # Step 4: Identify awardees of Commander of the Royal Victorian Order
  ?awardee dbo:award ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""commander of the royal victorian order""))

  # Step 5: Find the parents of the awardee
  ?awardee dbo:parent ?parent2 .

  # Step 6: Identify common parent
  VALUES ?commonParent { ?parent1 ?parent2 }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Artist ;
          dbo:musicalArtist true ;
          dbo:dateOfDeath ""2020-06-18""^^xsd:date .
  
  ?work dbo:artist ?person ;
        a dbo:Film, dbo:TelevisionSeries .

}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?manager WHERE {
  ?player rdfs:label ""Jamie McCunnie""@en .
  ?player dbo:team ?club .
  ?club a dbo:SoccerClub ; # Ensures the club is specifically a soccer club
        dbo:manager ?manager .
}
```",2,4,3,2,1,2,2,9,7,0,0,1.0,1.0,1.0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?george rdfs:label ""George Hamilton Cameron""@en .
  ?george dbo:award ?award .
}
```",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?huerga rdfs:label ""Manuel Huerga""@en .
  ?huerga a dbo:FilmDirector .
  ?film dbo:director ?huerga .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant ?office ?event WHERE {
  ?anxo rdfs:label ""Anxo Quintana""@en .
  
  OPTIONAL { 
    ?anxo dbo:positionHeld ?position .
    ?position dbo:city dbr:Santiago_de_Compostela .
    ?position dbo:office ?office .
    ?position dbo:event ?event .
  }
  
  OPTIONAL {
    ?tenant dbo:city dbr:Santiago_de_Compostela .
    ?tenant rdfs:label ?tenantLabel .
  }
}
```",4,5,5,3,2,3,3,71,0,7,2,0.0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?antoine rdfs:label ""Antoine, Duke of Lorraine""@en .
  ?antoine dbo:child ?child .
  FILTER EXISTS { 
    ?child (rdfs:label|dbo:title) ?title .
    FILTER(CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```",1,2,2,1,1,3,2,20,1,1,1,0.5,0.5,0.5
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  
  # Find associated bands or artists
  ?bobby dbo:associatedBand ?band ;
         dbo:associatedMusicalArtist ?artist .

  # Ensure the band member is also a musical artist
  ?bandMember dbo:member ?band ;
              rdfs:label ?label .
  FILTER (lang(?label) = ""en"")
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?governor WHERE {
  # Birth places
  ?paulus dbo:birthPlace ?place1 .
  ?vince dbo:birthPlace ?place2 .
  ?cece dbo:birthPlace ?place3 .

  FILTER(?paulus = dbpedia:Paulus_Powell)
  FILTER(?vince = dbpedia:Vince_Gilligan)
  FILTER(?cece = dbpedia:Cecily_Bell)

  # Ensure places are regions and administrative regions
  ?place1 rdf:type dbo:Region .
  ?place1 rdf:type dbo:AdministrativeRegion .
  
  ?place2 rdf:type dbo:Region .
  ?place2 rdf:type dbo:AdministrativeRegion .

  ?place3 rdf:type dbo:Region .
  ?place3 rdf:type dbo:AdministrativeRegion .

  # Check if they are the same region
  FILTER(?place1 = ?place2)
  FILTER(?place2 = ?place3)

  # Find governor of this common region
  ?region dbo:governor ?governor .
  
  BIND(?place1 AS ?region) 
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee ?additionalAward WHERE {
  ?awardee dbo:nobelPrize ?nobel .
  ?nobel dbo:category ""Physics"" .
  OPTIONAL { 
    ?awardee dbo:award ?additionalAward .
  }
}
```",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?helena rdfs:label ""Archduchess Helena of Austria""@en .
  ?helena dbo:spouse ?spouse .

  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent ;
         a dbo:Royal .

  ?otherParent rdfs:label ""Archduchess Margarete Sophie of Austria""@en .

  ?child dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?foundingLocation WHERE {
  ?jamsetji rdfs:label ""Jamsetji Tata""@en .
  
  # Retrieve birthplace
  OPTIONAL { 
    ?jamsetji dbo:birthPlace ?birthPlace .
    FILTER (lang(?birthPlaceLabel) = 'en' && contains(str(?birthPlaceLabel), ""India""))
  }
  
  # Retrieve founding location of a significant work or institution
  OPTIONAL {
    ?jamsetji dbo:foundingLocation ?foundingLocation .
    FILTER (lang(?foundingLocationLabel) = 'en' && contains(str(?foundingLocationLabel), ""India""))
  }

  BIND(STR(?birthPlace) AS ?birthPlaceLabel)
  BIND(STR(?foundingLocation) AS ?foundingLocationLabel)
}
```",3,4,4,2,2,2,2,9,0,0,21,0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
  ?child rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date .
  ?person a dbo:Athlete .

  OPTIONAL { 
    ?tvShow dbo:title ""All or Nothing: Manchester City""@en ;
            dbo:actor ?person .
  }

  OPTIONAL {
    ?person dbo:sport dbr:Soccer .
  }
}
```",4,7,5,2,2,3,3,71,0,10,1,0.0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate WHERE {
  ?person rdfs:label ""Stuart McBath Tosh""@en .
  ?person dbo:musicalArtist true .
  ?person dbo:birthDate ?birthDate .
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Find a child of Ferdinand II
  ?ferdinandII rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?child1 dbo:childOf ?ferdinandII .

  # Find a child of Ferdinand III
  ?ferdinandIII rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?child2 dbo:childOf ?ferdinandIII .

  # Check if the child of Ferdinand II is also a parent to any of Ferdinand III's children
  ?commonAncestor dbo:parent ?child2 .
  FILTER (?child1 = ?commonAncestor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?linda rdfs:label ""Linda Miller""@en .
  ?linda dbo:profession ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""actress""))
  ?linda dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?singer ?alterEgo ?band WHERE {
  ?bob a dbo:Musician ;
       rdfs:label ""Bob Thompson (musician)""@en .
  
  OPTIONAL { ?bob dbo:birthName ?birthName . }
  OPTIONAL { ?bob dbo:singer ?singer . }
  OPTIONAL { ?bob dbo:alterEgo ?alterEgo . FILTER(CONTAINS(LCASE(STR(?alterEgo)), ""the shadow"")) }
  OPTIONAL { ?bob dbo:band ?band . }

}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?anxo rdfs:label ""Anxo Quintana""@en .
  ?anxo dbo:positionHeld ?office .

  ?alvaro rdfs:label ""Álvaro Quirós""@en .
  ?santiago rdfs:label ""Santiago de Compostela""@en .
  ?santiago dbo:location ?country .
  FILTER(?country = <http://dbpedia.org/resource/Spain>)

  # Assuming the office is related to Spain in some way
  ?office dbo:country ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Find Saw Shwe Khet's spouse
  ?shweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?shweKhet dbo:spouse ?spouseShweKhet .

  # Find Saw Min Phyu's spouse and child
  ?minPhyu rdfs:label ""Saw Min Phyu""@en .
  ?minPhyu dbo:spouse ?spouseMinPhyu .
  ?spouseMinPhyu dbo:child ?royaltyChild .

  # Find predecessor of the royalty child
  ?royaltyChild dbo:predecessor ?predecessor .
}",4,5,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?coro dbo:award ?award .
  
  ?award dbo:country dbc:United_States_of_America ; # Ensures the award is American
         rdfs:label ?awardLabel .

  FILTER regex(?awardLabel, ""City|Town|Settlement"", ""i"") # Filters for settlement-related awards
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?alberto rdfs:label ""Alberto Núñez Feijóo""@en .
  
  # Find his office related to Santiago de Compostela
  ?office dbo:officeHolder ?alberto ;
          rdfs:label ?officeLabel .
  FILTER(CONTAINS(LCASE(?officeLabel), ""santiago de compostela""))

  # Identify his residence associated with this office
  ?residence dbo:residenceOf ?alberto .

  # Check if the residence is a country
  ?residence rdf:type dbo:Country .

  # Find tenants of that country who are Spanish citizens
  ?tenant dbo:nationality dbr:Spain ;
          dbo:countryResidence ?residence .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?playerInMolina ?playerInAgüero ?team WHERE {
  # Find Juan Carlos Molina
  ?molina rdfs:label ""Juan Carlos Molina (footballer)""@en .
  
  # Find Sergio Agüero
  ?agüero rdfs:label ""Sergio Agüero""@en .

  # Find players associated with them
  ?playerInMolina dbo:playerForTeam ?molina .
  ?playerInAgüero dbo:playerForTeam ?agüero .

  # Find Marcelo Sarmiento's birthdate
  ?sarmiento rdfs:label ""Marcelo Sarmiento""@en .
  ?sarmiento dbo:birthDate ?birthdate .

  # Find a person who is both a player and manager born on the same date as Sarmiento
  ?person dbo:SoccerPlayer true ;
          dbo:SoccerManager true ;
          dbo:birthDate ?birthdate .

  # Get the team associated with this person
  ?person dbo:playerForTeam ?team .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query for Roger Pryor's spouse
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?roger rdfs:label ""Roger Pryor (actor)""@en .
  ?roger dbo:spouse ?spouse .
}

# Query for a person born with the birth name of Tisha Sterling's parent
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .
  ?parent dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  FILTER(?person != ?parent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?series rdfs:label ""All or Nothing: Manchester City""@en .
  ?series dbo:starring ?player .
  
  ?player dbo:occupation ?actorRole .
  ?player dbo:occupation ?soccerPlayerRole .
  ?player dbo:occupation ?athleteRole .

  FILTER (
    (str(?actorRole) = str(dbo:Actor)) &&
    (str(?soccerPlayerRole) = str(dbo:SoccerPlayer)) &&
    (str(?athleteRole) = str(dbo:Athlete))
  )
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?catherineFather WHERE {
  # Find Catherine of Austria, Queen of Portugal and her father
  ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  ?catherine dbo:father ?catherineFather .

  # Find Dorothea of Denmark, Electress Palatine and one of her parents
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?dorothea dbo:parent ?dorotheaParent .

  # Check if the parent of Dorothea is the same as Catherine's father
  ?dorotheaParent dbo:father ?catherineFather .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Query for actor of Shelby Oaks
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Shelby Oaks""@en .
  ?movie dbo:starring|dbo:actor ?actor .
}

# Query for profession of The Shadow
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royaltyChild WHERE {
  # Step 1: Identify Constance of Burgundy's spouse
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouse .

  # Step 2: Find the child of the spouse
  ?spouse dbo:child ?childOfSpouse .

  # Step 3: Determine if this child is royalty
  ?childOfSpouse a dbo:Monarch ; 
                 rdfs:label ?royaltyLabel .

  # Step 4: Identify Roger III's parent
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  ?rogerIII dbo:parent ?parentOfRogerIII .

  # Step 5: Find the child of this parent
  ?parentOfRogerIII dbo:child ?childOfParent .

  # Step 6: Cross-reference with royalty from step 3
  FILTER (?childOfSpouse = ?childOfParent)
  
  BIND(?childOfSpouse AS ?royaltyChild)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?cecilia rdfs:label ""Cecilia Renata of Austria""@en .
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  
  ?cecilia dbo:parent ?father .
  ?eleonore dbo:parent ?father .

  ?father dbo:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Confirm Bobby Shmurda's native state
SELECT ?nativeState WHERE {
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
  ?bobbyShmurda dbo:nativePlace ?place .
  ?place dbp:stateOrProvince ?nativeState .
}

# Step 2: Find the person born with the birth name ""Florida"" and is a musical artist from Florida
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthName ""Florida""@en ;
          dbo:birthPlace ?birthPlace .
  ?birthPlace dbp:stateOrProvince ""Florida"" .
  ?person rdf:type dbo:MusicalArtist .
}

# Step 3: Identify any band members of this musical artist who are also musical artists
SELECT DISTINCT ?bandMember WHERE {
  ?artist dbo:member ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?atl dbo:title ""ATL""@en .
  ?atl dbo:starring ?actor .
}

SELECT ?profession WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?character dbo:alterEgoOf ?series .
  ?character dbo:profession ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  # Step 1: Identify Archduchess Margarete Sophie of Austria and her parent
  ?margareteSophie rdfs:label ""Margarete Sophie, Archduchess of Austria""@en .
  ?parent dbo:child ?margareteSophie .

  # Step 2: Find the child of this parent who is also a child of Albrecht, Duke of Württemberg
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .
  ?parent dbo:child ?royaltyChild .
  ?royaltyChild dbo:spouse ?albrecht .

  # Step 3: Retrieve the children of this identified individual (the ""child of the child"")
  ?royaltyChild dbo:child ?childOfChild .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?manuel rdfs:label ""Manuel Pinto da Costa""@en .
  ?manuel dbo:associatedWith ?event .
  ?event rdf:type ?eventType .
  FILTER (
    (?eventType = <http://dbpedia.org/class/yago/MilitaryConflict108069068> ||
     ?eventType = <http://dbpedia.org/ontology/SocialEvent>)
  )
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?hivWar rdfs:label ""HIV/AIDS epidemic""@en .
  ?commander dbo:spouse ?hillaryClinton .
  ?hillaryClinton foaf:name ""Hillary Clinton""@en .
  ?billClinton foaf:name ""Bill Clinton""@en .
  FILTER(?commander = ?billClinton) .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

WITH {
  SELECT ?greatGrandchild WHERE {
    ?alexander rdfs:label ""Alexander of Württemberg (1804-1881)""@en .
    ?alexander dbo:child ?child1 .
    ?child1 dbo:child ?grandChild1 .
    ?grandChild1 dbo:child ?greatGrandchild .
  }
}
WITH {
  SELECT ?predecessor WHERE {
    ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
    ?philippAlbrecht dbo:child ?child2 .
    OPTIONAL { ?child2 dbo:successor ?successor . }
    BIND(COALESCE(?successor, ?child2) AS ?predecessor)
  }
}
SELECT DISTINCT ?greatGrandchild WHERE {
  VALUES ?predecessor { ?predecessor }
  FILTER (?greatGrandchild = ?predecessor)
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?eugene rdfs:label ""Eugène Cattin""@en .
  ?eugene dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?afeez rdfs:label ""Afeez Oyetoro""@en .
  ?role dbo:actor ?afeez ;
        dbo:starring ?movie .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  
  # Step 2: Find Philip's parent who is a royalty
  ?philip dbo:parent ?parent .
  ?parent dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Step 3: Identify Béla IV of Hungary
  ?bela rdfs:label ""Béla IV of Hungary""@en .

  # Step 4: Find Béla IV's child who is a royalty
  ?bela dbo:child ?child .
  ?child dbo:title ?childTitle .
  FILTER(CONTAINS(LCASE(?childTitle), ""king"") || CONTAINS(LCASE(?childTitle), ""queen"") || 
         CONTAINS(LCASE(?childTitle), ""prince"") || CONTAINS(LCASE(?childTitle), ""princess""))

  # Step 5: Identify the father of Philip's parent
  ?parent dbo:father ?grandFather .

  # Step 6: Find the spouse of this grandfather
  ?grandFather dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderOffice ?miguelMauraOffice WHERE {
  # Find the office of a commander in the Central African Republic Civil War
  ?war rdfs:label ""Central African Republic Civil War""@en .
  ?person dbo:office ?commanderOffice ;
          dbo:occupation ""Commander""@en ;
          dbo:relatedWorkOrActivity ?war .

  # Find the office held by Miguel Maura
  ?miguelMaura rdfs:label ""Miguel Maura""@en .
  ?miguelMaura dbo:office ?miguelMauraOffice .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?helena rdfs:label ""Helena, Archduchess of Austria""@en .
  
  ?helena dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type ?royaltyType . 
                 VALUES ?royaltyType { dbo:Monarch dbo:RoyalFamilyMember } }
  
  ?child dbo:parent ?spouse .
  
  ?predecessor dbo:successor ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  # Step 1: Find Stephen V of Hungary's child
  ?stephenV rdfs:label ""Stephen V of Hungary""@en .
  ?stephenV dbo:child ?child .

  # Step 2: Identify Charles I of Hungary and his father
  ?charlesI rdfs:label ""Charles I of Hungary""@en .
  ?charlesIFather dbo:parent ?charlesI .
  
  # Ensure both are royalty (assuming they have a specific class or property)
  ?child rdf:type dbo:Monarch .
  ?charlesIFather rdf:type dbo:Monarch .

  # Step 3: Find the spouse of Charles I's father
  ?spouse dbo:spouse ?charlesIFather .

  # Ensure the spouse is royalty
  ?spouse rdf:type dbo:Monarch .

  # Step 4: Link to Philip, Despot of Romania
  ?philip rdfs:label ""Philip, Despot of Romania""@en .
  ?parentOfPhil rdf:type dbo:Parent .
  ?parentOfPhil dbo:child ?philip .
  
  # Ensure the parent is royalty
  ?parentOfPhil rdf:type dbo:Monarch .

  # Final condition: The child from step 1 should be the parent of the parent of Philip
  ?child dbo:parent ?parentOfPhil .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Find a royal child of Philip I of Castile
  ?child dbo:parent ?philip .
  ?philip rdfs:label ""Philip I of Castile""@en .
  
  # Assuming the child is royalty, we look for their father
  ?child dbo:father ?father .

  # Step 2: Find Dorothea of Denmark's parent
  ?dorotheaParent dbo:parent ?dorothea .
  ?dorothea rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .

  # Match the father from step 1 with a parent from step 2
  FILTER (?father = ?dorotheaParent)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthplace WHERE {
  ?william rdfs:label ""William Gayner""@en .
  ?william dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Region ;
              rdf:type dbo:Country .
}
```",1,3,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""actor""))
}
```",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:birthPlace ?location .
  FILTER (strstarts(str(?location), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?location rdfs:label ?placeLabel . FILTER(langMatches(lang(?placeLabel), ""en"") && contains(lcase(str(?placeLabel)), ""japan"")) } )
}
```",3,4,4,2,2,3,2,20,0,1,1,0.0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer WHERE {
  # Step 1: Find Apache Indian's musical works
  ?work dbo:artist ?apacheIndian .
  ?apacheIndian rdfs:label ""Apache Indian""@en .

  # Step 2: Identify Victor Saville's birthplace
  ?victorSaville dbo:birthPlace ?birthPlace .
  ?victorSaville rdfs:label ""Victor Saville""@en .

  # Step 3: Find individuals native to Victor Saville's birthplace
  ?native dbo:birthPlace ?birthPlace .
  
  # Step 4: Check if the individual is a writer of Apache Indian's work
  ?work dbo:writer ?writer .
  FILTER(?writer = ?native)
}
```",4,5,5,2,2,3,2,20,1,0,0,1.0,1.0,1.0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?mary dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?battle ?force WHERE {
  # Commander in the French Campaign in Egypt and Syria
  { 
    ?napoleon dbo:nationality dbr:France ;
              rdfs:label ""Napoleon Bonaparte""@en .
    BIND(""French Campaign in Egypt and Syria"" AS ?campaign)
    BIND(?napoleon AS ?commander)
    BIND(?campaign AS ?battle)
  }
  
  UNION
  
  # Battle of Fort Royal (1805)
  {
    ?fortRoyal dbo:participatedInBattle dbr:Battle_of_Fort_Royal_(1805) .
    ?fortRoyal dbp:commander ?commanderFR ;
               dbp:militaryForce ?forceFR .
    BIND(""Battle of Fort Royal"" AS ?battle)
  }
  
  UNION
  
  # Battle of Cape Finisterre (1805)
  {
    ?capeFinisterre dbo:participatedInBattle dbr:Battle_of_Cape_Finisterre_(1805) .
    ?capeFinisterre dbp:commander ?commanderCF ;
                    dbp:militaryForce ?forceCF .
    BIND(""Battle of Cape Finisterre"" AS ?battle)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Identify Mariclare Costello and her spouse
  ?mariclare rdfs:label ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .

  # Step 2: Find the child of the spouse
  ?spouse dbo:child ?child .

  # Step 3: Find the parent of that child
  ?child dbo:parent ?parent1 .

  # Step 4: Identify Amy Arbus and her parent
  ?amy rdfs:label ""Amy Arbus""@en .
  ?amy dbo:parent ?parent2 .

  # Step 5: Determine if there is a common parent
  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?commonParent)
}
```",4,4,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war rdfs:label ""Great Turkish War""@en .
  OPTIONAL { ?war dbo:commander ?commander . }
  OPTIONAL { ?war dbo:participant ?person .
             ?person dbo:role ?role .
             FILTER(CONTAINS(LCASE(?role), ""commander"") || CONTAINS(LCASE(?role), ""leader"")) 
           }
}
```",1,1,2,1,1,3,3,71,40,0,0,1.0,1.0,1.0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?albrechtChild ?philippPredecessor ?margareteParentChildChild WHERE {
  # Step 1: Find Albrecht's child
  ?albrecht dbo:child ?albrechtChild .
  ?albrecht rdfs:label ""Albrecht, Duke of Württemberg""@en .

  # Step 2: Find Philipp Albrecht's predecessor (previous generation)
  ?philipp dbo:child ?philippPredecessor .
  ?philipp rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  
  # Step 3: Identify the parent of Archduchess Margarete Sophie
  ?margareteParent dbo:parent ?margareteChild .
  ?margareteChild rdfs:label ""Archduchess Margarete Sophie of Austria""@en .

  # Step 4: Find the child of the child that is royalty
  ?margareteChild dbo:child ?secondGen .
  ?secondGen dbo:child ?margareteParentChildChild .
  ?margareteParentChildChild a dbo:RoyalFamilyMember . # Assuming this property indicates royalty

  # Step 5: Determine the predecessor relationship
  FILTER(?albrechtChild = ?philippPredecessor",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager ?team WHERE {
  ?manager a dbo:SportsManager ;
           dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1968 && MONTH(?date) = 8 && DAY(?date) = 26)
  
  OPTIONAL { ?manager dbo:team ?team . }
}
```",2,6,3,2,1,3,3,71,0,8,5,0.0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?war ?athensEntity WHERE {
  ?awardee dbo:award ?award .
  OPTIONAL { ?awardee dbo:birthday ?birthday . FILTER(YEAR(?birthday) = YEAR(NOW()) - 30) }
  OPTIONAL { ?awardee dbo:participatedIn ?war . }
  OPTIONAL { ?athensEntity dbo:location dbpedia:Athens . ?athensEntity dbo:relatedTo ?war . }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?william rdfs:label ""William I of Sicily""@en .
  ?william dbo:child ?child .
  ?child a dbo:Monarch ; # Ensures the child is a monarch, indicating royalty
         rdfs:label ?name .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?director ?producer WHERE {
  ?janet rdfs:label ""Janet Gaynor""@en .
  ?janet dbo:filmography ?film .
  
  OPTIONAL { ?film dbo:director ?director . }
  OPTIONAL { ?film dbo:producer ?producer . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalChild WHERE {
  # Step 1: Identify Maria Anna of Bavaria
  ?mariaAnna a dbo:Person ;
             rdfs:label ""Maria Anna of Bavaria""@en ;
             dbo:birthYear ""1574""^^xsd:gYear .

  # Step 2: Find her children
  ?mariaAnna dbo:child ?child .

  # Step 3: Identify the father (spouse) of each child
  ?father dbo:spouse ?mariaAnna .
  
  # Step 4: Check if any of these fathers have a royal child who was a commander in the Thirty Years' War
  ?father dbo:child ?royalChild .
  ?royalChild dbo:royalTitle ?title ;
              dbo:occupation dbr:Thirty_Years'_War_commander .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?claude rdfs:label ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?claude dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,3,4,0,0.42857142857142855,1.0,0.6
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  ?person rdf:type dbo:Athlete .
  ?person rdf:type dbo:SoccerPlayer .
  ?person rdf:type dbo:SportsManager .
  ?person rdf:type dbo:SoccerManager .
}
```",2,6,3,2,1,3,2,20,0,1,6,0.0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?person dbo:award ?order .
  ?order rdfs:label ""Knight Commander of the Order of the Bath""@en .
  
  ?event dbo:agent ?person ;
         a dbo:MilitaryEvent, dbo:SocietalEvent .

  ?event dbo:militaryForce ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeRegion WHERE {
  ?band a dbo:Band ;
        dbo:originPlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""new york"") || CONTAINS(LCASE(str(?place)), ""ny"")).

  ?band dbp:awardReceived ?award .

  ?award dbo:nativeOf ?nativeRegion .
  
  ?nativeRegion a dbo:State ;
                a dbo:PopulatedPlace ;
                dbo:country dbr:United_States_of_America .
}
```",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?michał rdfs:label ""Michał Kazimierz Pac""@en .
  ?michał dbo:commander ?event .
  ?event rdf:type dbo:MilitaryConflict .

  OPTIONAL { ?michał dbo:succeededBy ?successor . }
  
  FILTER EXISTS { 
    ?successor rdf:type dbo:Politician ;
               dbo:officeHolder true .
  }

  # Optional filter to include reference to George Ducas
  OPTIONAL {
    ?event dbo:reference ""George Ducas""@en .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Ackquille Jean Pollard's stage name
  ?pollard rdfs:label ""Ackquille Jean Pollard""@en .
  ?pollard dbo:birthName ""Ackquille Jean Pollard"" .
  
  # Identify his stage name and association with Bobby Shmurda
  ?stageName rdfs:label ?labelStageName .
  ?pollard dbp:alsoKnownAs ?stageName .
  ?bobbyShmurda dbo:bandMember ?stageName .
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .

  # Find bands from New York state that have received awards
  ?award dbo:recipient ?band .
  ?band dbo:location ?location .
  ?location rdfs:label ?stateLabel .
  FILTER (CONTAINS(LCASE(?stateLabel), ""new york"") && CONTAINS(LCASE(?stateLabel), ""state""))

  # Ensure the person is connected to all criteria
  ?person dbp:alsoKnownAs ?stageName .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?manager WHERE {
  ?team dbo:manager ?manager .
  ?letsch dbo:manager ?team .
  ?letsch rdfs:label ""Thomas Letsch""@en .

  ?heuss dbo:nationality ?country .
  ?heuss rdfs:label ""Theodor Heuss""@en .

  ?manager dbo:nationality ?country .
}
```",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
# Query for William Bayne's military conflict and force
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryConflict ?militaryForce WHERE {
  ?bayne rdfs:label ""William Bayne""@en .
  ?bayne dbo:militaryConflict ?militaryConflict .
  ?militaryConflict dbo:hasMilitaryForce ?militaryForce .
}

UNION

SELECT DISTINCT ?event ?militaryForce WHERE {
  ?knight rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""knight commander of the order of the bath"")).
  ?knight dbo:event ?event .
  ?event dbo:hasMilitaryForce ?militaryForce .
}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorAlways ?actorParadise ?spouseJanusz WHERE {
  # Actor of ""Always"" (1989 film)
  ?alwaysFilm rdfs:label ""Always""@en .
  FILTER(YEAR(?alwaysFilm dbo:releaseDate) = 1989) .
  ?alwaysFilm dbo:actor ?actorAlways .

  # Actor of ""Paradise"" (2013 film)
  ?paradiseFilm rdfs:label ""Paradise""@en .
  FILTER(YEAR(?paradiseFilm dbo:releaseDate) = 2013) .
  ?paradiseFilm dbo:actor ?actorParadise .

  # Spouse of Janusz Kamiński
  ?janusz rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:award ?award .
  ?janusz dbo:spouse ?spouseJanusz .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?recipient WHERE {
  ?award rdfs:label ""Commander of the Royal Victorian Order""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:childOf ?frederick ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
  BIND(?frederick AS ?parent)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring ?audreyHepburn .
  ?movie dbo:starring ?actor .
  
  ?audreyHepburn rdfs:label ""Audrey Hepburn""@en .
  FILTER(?actor != ?audreyHepburn)
}
```",2,4,3,2,1,2,3,28,61,11,1,0.8472222222222222,0.9838709677419355,0.9104477611940298
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find Doon Arbus's parent
  ?doonArbus rdfs:label ""Doon Arbus""@en .
  ?doonArbus dbo:parent ?parent .

  # Find a movie with Herschel Bernardi as an actor
  ?movie dbo:actor ?herSchelBernardi .
  ?herSchelBernardi rdfs:label ""Herschel Bernardi""@en .

  # Ensure the actor is also Doon Arbus's parent
  FILTER (?parent = ?actor)

  # Find Eugène Cattin's profession and its parent
  ?eugeneCattin rdfs:label ""Eugène Cattin""@en .
  ?eugeneCattin dbo:profession ?profession .
  ?profession rdfs:subClassOf+ ?parentProfession .

  # Ensure the actor is also the parent of Eugène Cattin's profession
  FILTER (?parentProfession = ?actor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Roger II's children who are royalty
  ?child1 dbo:parent ?rogerII .
  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?child1 rdf:type dbo:Monarch .

  # Parent of that child (should be Roger II)
  ?person dbo:parent ?child1 .

  # William I's children who are royalty
  ?child2 dbo:parent ?williamI .
  ?williamI rdfs:label ""William I of Sicily""@en .
  ?child2 rdf:type dbo:Monarch .

  # Father of that child (should be William I)
  ?person dbo:spouse ?motherOfChild2 .

  # Elvira's children
  ?elviraChild dbo:parent ?elvira .
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  
  # Match the person with all conditions
  FILTER (?person = ?child1 && ?person = ?elviraChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist ?bandName WHERE {
  # Find Nicholas Michael Curran's associated musical artist
  ?curran rdfs:label ""Nicholas Michael Curran""@en .
  ?curran dbo:musicalArtist ?associatedArtist .

  # Find Kim Wilson's band and its real name
  ?wilson rdfs:label ""Kim Wilson""@en .
  ?wilson dbo:band ?band .
  ?band rdfs:label ?bandName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?tvShow WHERE {
  # Find Shatrughan Sinha's profession
  ?shatrughanSinha rdfs:label ""Shatrughan Sinha""@en .
  ?shatrughanSinha dbo:profession ?profession .

  # Find a TV show featuring Richard E. Grant and an actor from the same profession as Shatrughan Sinha
  ?tvShow dbo:genre ?genre .
  FILTER(CONTAINS(LCASE(STR(?genre)), ""television series"") || CONTAINS(LCASE(STR(?genre)), ""tv series""))
  
  # Check if Richard E. Grant is part of this TV show
  ?tvShow dbo:castMember ?richardGrant .
  ?richardGrant rdfs:label ""Richard E. Grant""@en .

  # Find an actor from the same profession as Shatrughan Sinha in this TV show
  ?tvShow dbo:castMember ?actorFromProfession .
  ?actorFromProfession dbo:profession ?sameProfession .
  FILTER(?sameProfession = ?profession)
}
```",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band WHERE {
  ?nick a dbo:MusicalArtist ;
        dbo:birthDate ""1945-03-30""^^xsd:date .
  
  ?nick dbo:associatedMusicalArtist ?artist .

  ?member a dbo:Person, dbo:BandMember ;
          dbo:associatedMusicalArtist ?artist ;
          dbo:band ?band .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:PopulatedPlace .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:director ?huerga .
  ?huerga rdfs:label ""Manuel Huerga""@en .

  ?film dbo:starring ?actor .

  OPTIONAL { ?actor dbo:sport dbp:Soccer . }
  OPTIONAL { ?actor rdf:type dbo:Athlete . }

  FILTER (BOUND(?actor))
}
```",3,6,4,3,1,3,3,71,0,11,7,0.0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?nativeCountry WHERE {
  
  # Step 1: Find Theodor Heuss's native country
  ?theodorHeuss rdfs:label ""Theodor Heuss""@en .
  ?theodorHeuss dbo:nationality ?nationality .
  ?nationality rdfs:label ?nativeCountryLabel .
  FILTER(LANG(?nativeCountryLabel) = 'en')

  # Step 2: Find the sports manager born on 1968-08-26
  ?manager dbp:birthday ""1968-08-26""^^xsd:date .
  ?manager dbo:occupation ?occupation .
  FILTER(CONTAINS(LANG(?occupation), 'SportsManager'))

  # Step 3: Find the soccer club season managed by the sports manager
  ?season dbo:managedBy ?manager .
  ?season a dbo:SoccerClubSeason .

  # Step 4: Determine the native country of the administration managing the soccer club season
  ?club dbo:country ?adminCountry .
  ?adminCountry rdfs:label ?nativeCountryLabel2 .
  FILTER(LANG(?nativeCountryLabel2) = 'en')

  BIND(IRI(CONCAT('http://dbpedia.org/resource/', REPLACE(STR(?nativeCountry), ' ', '_'))) AS ?nativeCountry)
}
",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?marianoOffice ?partyLeader ?leaderOffice WHERE {
  # Find Mariano Rajoy's office
  ?mariano rdfs:label ""Mariano Rajoy""@en .
  ?mariano dbo:office ?marianoOffice .

  # Find the Conservative Republican Party (Spain)
  ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  # Find the leader of the party
  ?party dbo:leader ?partyLeader .

  # Find the office held by the party leader
  ?partyLeader dbo:office ?leaderOffice .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?ceciliaRenata dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?force WHERE {
  # Find Quincy Adams Gillmore and his award
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:award ?award .

  # Find Amasa Tracy and the war he participated in
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:participatedIn ?war .

  # Find a force associated with both the award and the war
  ?force dbo:militaryUnit ?award ;
         dbo:militaryUnit ?war .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?decedent dbo:deathPlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""los angeles"")) .

  ?parent dbo:child ?decedent ;
          dbo:occupation ?occupation .
  FILTER (str(?occupation) = ""Photographer"") .

  ?work dbo:creator ?parent ;
        a dbo:Film .
  
  ?work dbo:actor ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?william rdfs:label ""William Gayner""@en .
  ?william dbo:birthPlace ?birthplace .

  FILTER EXISTS { ?birthplace rdf:type dbo:Country . }
  FILTER EXISTS { ?birthplace rdf:type dbo:Region . }

  ?native dbo:nativeOf ?birthplace .
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Find Tony Hollings' birthdate
  ?tony rdfs:label ""Tony Hollings""@en .
  ?tony dbo:birthDate ?birthday .

  # Find people with the same birthday and roles
  ?person dbo:birthDate ?birthday .
  ?person dbo:athlete ?a .
  ?person dbo:soccerPlayer ?sp .
  ?person dbo:sportsManager ?sm .
  ?person dbo:soccerManager ?socm .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?paulus rdfs:label ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Region ;
              a dbo:AdministrativeRegion .
}
```",1,3,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war ?charlestonEntity ?force WHERE {
  # Find awardees of the Gillmore Medal
  ?medal dbo:recipient ?awardee .
  FILTER(STRSTARTS(LCASE(?medal), ""gillmore medal"")) .

  # Find wars associated with the awardee
  ?awardee dbo:servedInMilitaryConflict ?war .

  # Find entities in Charleston, South Carolina related to the awardee
  ?charlestonEntity dbo:location dbr:Charleston,_South_Carolina .
  ?charlestonEntity dbo:relatedTo ?awardee .

  # Determine the military force of the awardee
  ?awardee dbo:militaryUnit ?force .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?father WHERE {
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?child .

  ?child dbo:father ?father .
  
  ?father a dbo:Monarch ; 
          dbo:officeHolder ?office .
  
  OPTIONAL { ?father dbo:spouse ?williamI . }
  FILTER EXISTS { ?williamI rdfs:label ""William I""@en } 

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
# Step 1: Identify the writer of ""No Alternative""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?album dbo:title ""No Alternative""@en .
  ?album dbo:creator ?writer .
}

# Step 2: Find band members of the writer
PREFIX dbo: <http://dbpedia.org/ontology/>
 
SELECT ?band WHERE {
  ?person dbo:bandMember ?band .
  FILTER(?person = ?writer)  # Use the result from Step 1 here
}

# Step 3: Identify Filthy Friends and its associated musical artist
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?artist WHERE {
  ?band dbo:bandMember ?artist .
  ?band rdfs:label ""Filthy Friends""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgoProfession ?sinhaProfession WHERE {
  # The Shadow's alter ego profession
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?alterEgoProfession .

  # Shatrughan Sinha's profession
  ?sinha rdfs:label ""Shatrughan Sinha""@en .
  ?sinha dbo:occupation ?sinhaProfession .
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?entity WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:award dbr:Medal_of_Honor .
  ?person dbo:birthPlace ?birthplace .

  FILTER EXISTS { ?birthplace rdf:type dbo:Settlement . }
  FILTER EXISTS { ?birthplace dbo:country dbr:United_States . }

  ?entity dbo:location ?birthplace .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:country <http://dbpedia.org/resource/Japan> .
}
```",1,1,2,1,1,2,3,28,0,716,104,0.0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find artists associated with R.E.M.
  ?rem a dbo:MusicalBand ;
      dbo:associatedBand ?artist .

  # Step 2: For each artist found, find their associated bands/artists
  ?artist dbo:associatedBand ?intermediateArtist .

  # Step 3: Ensure the final result is a musical artist
  ?intermediateArtist a dbo:MusicalArtist ;
                     rdfs:label ?finalArtistLabel .
  
  FILTER (lang(?finalArtistLabel) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?associatedMusicalArtist ?bandMember WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person a dbo:MusicalArtist .
  
  OPTIONAL { 
    ?person dbo:musicalArtist ?associatedMusicalArtist .
  }
  
  OPTIONAL {
    ?person dbo:bandMember ?bandMember .
  }
}
```",5,7,6,3,2,3,3,71,0,2,1,0.0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentAmy ?parentDoon ?movie WHERE {
  # Find parents of Amy Arbus
  ?amy rdfs:label ""Amy Arbus""@en .
  ?amy dbo:parent ?parentAmy .

  # Find parents of Doon Arbus
  ?doon rdfs:label ""Doon Arbus""@en .
  ?doon dbo:parent ?parentDoon .

  # Find movies with actors who are decedents at Los Angeles
  ?movie a dbo:Film ;
         dbo:actor ?actor .
  
  OPTIONAL {
    ?actor dbo:deathPlace dbr:Los_Angeles_County,_California .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  # Bob Crewe's birthplace
  { 
    ?bobCrewe rdfs:label ""Bob Crewe""@en .
    ?bobCrewe dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Ethan Iverson's work and associated birthplace (if any)
  {
    ?ethanIverson rdfs:label ""Ethan Iverson""@en .
    ?ethanIverson dbo:work ?work .
    OPTIONAL { ?work dbo:birthPlace ?birthPlace . }
  }
}
```",3,5,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?war rdfs:label ""French campaign in Egypt and Syria""@en .
  ?bayne rdfs:label ""William Bayne""@en .
  ?bayne dbo:commanderOf ?militaryForce .
  ?militaryForce dbo:participatedIn ?war .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?spouse WHERE {
  # Find Nat Levine's film
  ?film dbo:producer ""Nat Levine""@en .
  
  # Find an actor in that film
  ?film dbo:actor ?actor .

  # Find the spouse of that actor
  ?actor dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find a book authored by Hillary Clinton
  ?work dbo:author dbr:Hillary_Clinton ;
        rdf:type dbo:Book .

  # Step 2: Find a work authored by Bill Clinton
  ?billWork dbo:author dbr:Bill_Clinton ;
            rdf:type dbo:Book .

  # Step 3: Identify the author of Bill Clinton's book
  ?billWork dbo:author ?author .

  # Step 4: Check if this author is a politician and office holder
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder ?office .

  # Step 5: Find the spouse of this author
  ?author dbo:spouse ?spouse .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    FILTER (str(?band) = ""Uncle Murda"")
  }
  
  OPTIONAL {
    ?person dbp:nativePlace ?place .
    ?place rdfs:label ?placeLabel .
    FILTER (
      CONTAINS(LCASE(?placeLabel), ""puerto rico"") ||
      CONTAINS(LCASE(?placeLabel), ""coro de la pontificia universidad católica de puerto rico"")
    )
  }
}
```",4,8,5,2,3,3,3,71,0,1,1,0.0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?calder rdfs:label ""Robert Calder""@en .
  ?event dbo:participatedIn ?calder ;
         a ?eventType1, ?eventType2 .
  FILTER (?eventType1 = dbo:MilitaryEngagement && ?eventType2 = dbo:SocietalEvent) .
  ?event dbo:militaryUnit ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?billClinton dbo:spouse ?spouse .
  ?spouse a dbo:Politician ;
          dbo:officeHolder ?office .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nicholasBirthCountry ?alexanderBirthCountry WHERE {
  ?nicholas rdfs:label ""Nicholas II of Russia""@en .
  ?nicholas dbo:birthPlace ?nicholasBirthPlace .
  ?nicholasBirthPlace dbo:country ?nicholasBirthCountry .

  ?alexander rdfs:label ""Alexander II, Grand Duke of Finland""@en .
  ?alexander dbo:birthPlace ?alexanderBirthPlace .
  ?alexanderBirthPlace dbo:country ?alexanderBirthCountry .
}
```",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  ?athlete dbo:nationality dbc:Poland ;
           (dbo:birthPlace|dbo:origin) dbr:Łódź .
  ?athlete a dbo:Athlete .
  ?athlete dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?country)
}
```",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person rdfs:label ""Joey B""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician""))
  OPTIONAL { ?person foaf:name ?birthName }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonDescendant WHERE {
  # Find Duke Philipp of Württemberg's second-generation descendants
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .
  ?philippChild dbo:child ?firstGenPhilipp .
  ?firstGenPhilipp dbo:child ?secondGenPhilipp .

  # Find Archduke Charles Louis of Austria's second-generation descendants
  ?charles rdfs:label ""Archduke Charles Louis of Austria""@en .
  ?charlesChild dbo:child ?firstGenCharles .
  ?firstGenCharles dbo:child ?secondGenCharles .

  # Ensure they are royalty
  ?secondGenPhilipp dbo:royalTitle ?title1 .
  ?secondGenCharles dbo:royalTitle ?title2 .

  # Find common descendant who is royalty
  FILTER (?secondGenPhilipp = ?secondGenCharles)
  BIND(?secondGenPhilipp AS ?commonDescendant)
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?charles rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?charles dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby and his politician child
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:parent ?frederick ;
         dbo:occupation ?politicianRole .
  FILTER(CONTAINS(LCASE(?politicianRole), ""politician""))

  # Step 2: Identify Edward Stanley, 17th Earl of Derby and his politician/office holder child
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?child2 dbo:parent ?edward ;
          dbo:occupation ?politicianOfficeRole .
  FILTER(CONTAINS(LCASE(?politicianOfficeRole), ""politician"") && CONTAINS(LCASE(?politicianOfficeRole), ""office holder""))

  # Step 3: Find the parent (father) of this child
  ?child2 dbo:parent ?commonParent .

  # Step 4: Ensure this parent is also the parent of Victor Stanley
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .
  ?victor dbo:parent ?commonParent .

  # Step 5: Identify the father of the politician child of Frederick Stanley
  ?child dbo:parent ?father .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?club rdfs:label ""1. FC Magdeburg""@en .
  ?club dbo:player ?member .
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?spouse WHERE {
  # Step 1: Identify Nat Levine and his films
  ?natLevine rdfs:label ""Nat Levine""@en .
  
  # Step 2: Find films produced by Nat Levine
  ?film dbo:producer ?natLevine .

  # Step 3: Identify actors in these films
  ?film dbo:starring ?actor .

  # Step 4: Filter actors who are members of the Republican Party
  ?actor dbp:party ""Republican Party (United States)""@en .

  # Step 5: Find spouses of these actors
  ?actor dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?gillmoreForce ?tracyWar ?lewisBirthplace WHERE {
  # Quincy Adams Gillmore's Force
  ?gillmore dbo:rank ?gillmoreForce .
  
  # Amasa Tracy's War
  ?tracy dbp:participatedInBattle ?battle .
  ?battle dbo:event ?tracyWar .

  # Henry Clay Lewis's Birthplace
  ?lewis dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
             rdfs:label ?settlementLabel .
  
  FILTER (CONTAINS(LCASE(?settlementLabel), ""united states"") || CONTAINS(LCASE(?settlementLabel), ""america""))
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?forceGillmore ?warGillmore ?forceMedalOfHonor ?warMedalOfHonor WHERE {
  # Gillmore Medal
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:militaryUnit ?forceGillmore .
  ?gillmore dbo:participatedInBattleOrWar ?battle .
  ?battle dbo:name ?warGillmore .

  # Medal of Honor (example with Audie Murphy)
  ?medalOfHonor rdfs:label ""Audie Murphy""@en .
  ?medalOfHonor dbo:militaryUnit ?forceMedalOfHonor .
  ?medalOfHonor dbo:participatedInBattleOrWar ?battle2 .
  ?battle2 dbo:name ?warMedalOfHonor
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  ?child dbo:parent ?baedaMaryamI ;
         a dbo:Person .
  ?baedaMaryamI dbo:monarch ?country .
  OPTIONAL { ?baedaMaryamI dbo:officeHolder ?office . }
  BIND(?baedaMaryamI AS ?father)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?darryl rdfs:label ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?darryl dbo:associatedBand ?associatedArtist ;
          dbo:memberOfBand ?associatedArtist .
  FILTER (str(?associatedArtist) = str(<http://dbpedia.org/resource/$pacely>))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?club rdfs:label ""Hong Kong C""@en .
  ?club a dbo:SoccerClub ;
        dbo:manager ?manager .

  ?manager rdfs:label ""Ye Jia""@en .
  ?manager a dbo:SportsManager, dbo:SoccerManager .

  ?manager dbo:player ?player .
}
```",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
# Step 1: Find Kent Allard's Alter Ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?kentAllard rdfs:label ""Kent Allard""@en .
  ?kentAllard dbo:alterEgo ?alterEgo .
}

# Step 2: Find Cora Sue Collins' Claim to Fame
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?coraCollins rdfs:label ""Cora Sue Collins""@en .
  ?coraCollins dbo:claimToFame ?work .
}

# Step 3: Determine the Profession of Kent Allard's Alter Ego
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?profession WHERE {
  ?alterEgo dbo:profession ?profession .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?docSeries rdfs:label ""All or Nothing: Manchester City""@en .
  ?docSeries dbo:actor ?player .
  
  ?player a dbo:SoccerPlayer ;
          a dbo:Athlete .

  OPTIONAL { 
    ?pablo rdfs:label ""Pablo Aimar""@en .
    ?team dbo:member ?pablo ;
          dbo:member ?player .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?filimonov rdfs:label ""Aleksandr Filimonov""@en .
  ?work dbo:author ?filimonov .
  ?work dbo:actor ?player .
}
```",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?charge dbo:militaryUnit ?unit .
  ?charge dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(?charge), ""pickett's charge"")) .

  OPTIONAL { 
    ?commander dbp:partyAffiliation ?party .
    FILTER(CONTAINS(LCASE(STR(?party)), ""republican party""))
  }
}
```",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?alterEgoRole WHERE {
  # Find the producer of ""The Adventures of Tom Sawyer"" (1938 film)
  ?film rdfs:label ""The Adventures of Tom Sawyer""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/Category:Fictional_characters_from_The_Adventures_of_Tom_Sawyer>)))
  ?film dbo:producer ?producer .

  # Find the professional role of The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?alterEgoRole .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Identify a notable movie of Janet Gaynor
SELECT ?movie WHERE {
  ?janet rdfs:label ""Janet Gaynor""@en .
  ?janet dbo:film ?movie .
}

# Step 2: Find the producer of that movie
SELECT ?producer WHERE {
  ?movie dbo:director ?producer .
}

# Step 3: Identify the professional role of the producer
SELECT ?role WHERE {
  ?producer a ?type .
  ?type rdfs:label ?role .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?billClinton dbo:author ?book .
  FILTER(CONTAINS(LCASE(?book), ""aids"") || CONTAINS(LCASE(?book), ""epidemic""))
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:commanderOf ?force .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
# Query 1: Janet Gaynor's Claim to Fame and Producer
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?producer WHERE {
  ?janet rdfs:label ""Janet Gaynor""@en .
  ?janet dbo:film ?movie .
  ?movie dbo:producer ?producer .
}

# Query 2: Producer of ""The Adventures of Tom Sawyer"" (1938 Film)
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?producer WHERE {
  ?tomSawyerFilm rdfs:label ""The Adventures of Tom Sawyer""@en .
  ?tomSawyerFilm dbo:productionYear ""1938""^^xsd:gYear .
  ?tomSawyerFilm dbo:producer ?producer .
}

# Query 3: Fictional Character Associated with Kent Allard
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?character WHERE {
  ?kentAllard rdfs:label ""Kent Allard""@en .
  ?kentAllard dbo:fictionalCharacter ?character .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?birthPlace WHERE {
  ?award dbo:recipient ?awardee .
  ?vince dbo:associatedAward ?award .
  ?vince rdfs:label ""Vince Gilligan""@en .
  ?awardee dbo:birthPlace ?birthPlace .
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query to find Nick Curran's associated musical artist
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedBand WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?associatedBand .
}

# Query to find a band member born on March 30, 1945
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:bandMemberOf ?band .
}

# Query to find the band of this person
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          dbo:bandMemberOf ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?lamont rdfs:label ""Lamont Cranston""@en .
  ?lamont dbo:alterEgo ?alterEgo .
}

SELECT ?child WHERE {
  ?dawit rdfs:label ""Dawit I""@en .
  ?dawit dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?team WHERE {
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  ?person dbo:sport dbr:Soccer .
  OPTIONAL { ?person dbo:occupation dbr:Soccer_manager . }
  ?person dbo:currentTeam ?team .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinandAlbert rdfs:label ""Ferdinand Albert II, Duke of Brunswick-Lüneburg""@en .
  ?ferdinandAlbert dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?phantomsmasher rdfs:label ""Phantomsmasher""@en .
  ?phantomsmasher dbo:associatedBand ?artist .

  ?artist dbo:bandMember ?bandMember .
  
  ?bandMember a dbo:Band ;
              a dbo:MusicalGroup ;
              a dbo:Organization .

  ?burntByTheSun rdfs:label ""Burnt by the Sun (band)""@en .
  ?burntByTheSun dbo:associatedBand ?bandMember .
}
```",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find Theodor Heuss's nationality
SELECT ?country WHERE {
  ?theodorHeuss rdfs:label ""Theodor Heuss""@en .
  ?theodorHeuss dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .
}

# Step 2: Find the manager of VfL Bochum in the 2006–07 season
SELECT ?manager WHERE {
  ?vflBochum dbp:season ""2006–07"" ;
             dbo:manager ?manager .
}

# Step 3: Find the manager of SBV Vitesse in the 2020–21 season
SELECT ?manager WHERE {
  ?sbVVitesse dbp:season ""2020–21"" ;
              dbo:manager ?manager .
}

# Step 4: Identify common manager and check connection to Theodor Heuss's native country
SELECT DISTINCT ?commonManager ?country WHERE {
  { 
    ?vflBochum dbp:season ""2006–07"" ;
               dbo:manager ?commonManager .
  }
  UNION
  {
    ?sbVVitesse dbp:season ""2020–21"" ;
                dbo:manager ?commonManager .
  }
  
  ?theodorHeuss rdfs:label ""Theodor Heuss""@en",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardeeBirthplace ?actorBirthplace WHERE {
  # Find the birthplace of Sangeet Natak Akademi Fellowship awardees
  ?awardee dbo:award ""Sangeet Natak Akademi Fellowship""@en .
  ?awardee dbo:birthPlace ?awardeeBirthplace .

  # Find the actor of ""Akaler Shandhaney"" and their birthplace
  ?actor rdfs:label ?actorLabel .
  ?actor dbo:film ?film .
  ?film rdfs:label ""Akaler Shandhaney""@en .
  ?actor dbo:birthPlace ?actorBirthplace .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bayneWar ?bayneForce ?bayneCommander ?regimentWar ?regimentForce ?regimentCommander WHERE {
  # Find William Bayne's war and military force
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:militaryConflict ?bayneWar .
  ?bayneWar dbo:militaryForce ?bayneForce .
  OPTIONAL { ?bayneWar dbo:commander ?bayneCommander . }

  # Find the 30th Regiment's war and military force
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?regiment dbo:militaryConflict ?regimentWar .
  ?regimentWar dbo:militaryForce ?regimentForce .
  OPTIONAL { ?regimentWar dbo:commander ?regimentCommander . }
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?entityInAndhraPradesh WHERE {
  ?jagadish rdfs:label ""Chennupati Jagadish""@en .
  ?jagadish dbo:almaMater ?almaMater .

  OPTIONAL {
    ?entity dbp:location ?location .
    FILTER(CONTAINS(LCASE(?location), ""andhra pradesh""))
    BIND(?entity AS ?entityInAndhraPradesh)
  }

  UNION
  {
    ?almaMater dbp:location ?location .
    FILTER(CONTAINS(LCASE(?location), ""andhra pradesh""))
    BIND(?almaMater AS ?entityInAndhraPradesh)
  }
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Ada Jane Low""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date .
  ?person rdf:type dbo:Athlete .
  
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?person .

  # Ensure the person is a soccer player and athlete
  ?person rdf:type dbo:SoccerPlayer .

  # Find teams associated with Pablo Aimar
  ?team dbo:player dbr:Pablo_Aimar .
  
  # Check if the person played for one of these teams
  ?person dbo:team ?team .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  # Step 1: Find actor of ""Johnny Doughboy""
  ?actor dbo:actorInFilm ?film .
  ?film rdfs:label ""Johnny Doughboy""@en .

  # Step 2: Find professional alter ego of The Shadow
  OPTIONAL { ?person rdfs:label ""The Shadow (radio drama character)""@en . }

  # Step 3: Find producer of ""A Star Is Born"" (1937 film)
  OPTIONAL {
    ?producer dbo:producedFilm ?starborn .
    ?starborn rdfs:label ""A Star Is Born""@en ;
              dbo:releaseDate ?date .
    FILTER(year(?date) = 1937)
  }

  # Step 4: Verify if these are the same person
  FILTER (?actor = ?person && ?producer = ?person)

  # Return the producer of their claim to fame
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?johnBoxer rdfs:label ""John Boxer""@en .
  ?johnBoxer dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,2,9,1,0,1,1.0,0.5,0.6666666666666666
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?elDeafo rdfs:label ""El Deafo""@en .
  ?elDeafo dbo:country dbr:United_States .
  ?elDeafo ?p ?reference .
}
```",1,2,2,1,1,3,3,71,0,73,1,0.0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?workCountry ?childBirthPlace WHERE {
  # Part 1: Country of Lao She's work
  {
    ?laoShe rdfs:label ""Lao She""@en .
    ?laoShe dbo:work ?work .
    ?work dbo:country ?workCountry .
  }
  
  UNION
  
  # Part 2: Birth place of Chiang Ching-kuo's child who is a politician
  {
    ?chiangChingKuo rdfs:label ""Chiang Ching-kuo""@en .
    ?chiangChingKuo dbo:child ?child .
    ?child rdf:type dbo:Politician .
    ?child dbo:birthPlace ?childBirthPlace .
  }
}
```",4,5,5,2,2,3,2,20,1,4,0,0.2,1.0,0.33333333333333337
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?faisal rdfs:label ""Faisal bin Hussein""@en .
  ?faisal dbo:child ?child .
  
  # Assuming royalty can be inferred by a specific property or label
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""Prince|Princess"", ""i"") }
  
  ?child dbo:parent ?parent .
  
  # Ensure the parent is common among all royal children
  MINUS {
    ?faisal dbo:child ?otherChild .
    OPTIONAL { ?otherChild dbo:title ?otherTitle . FILTER regex(?otherTitle, ""Prince|Princess"", ""i"") }
    ?otherChild dbo:parent ?differentParent .
    FILTER (?parent != ?differentParent)
  }
}
GROUP BY ?parent
HAVING (COUNT(DISTINCT ?child) > 1)
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?timezone rdfs:label ""Japan Standard Time""@en .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,2,2,9,0,0,2255,0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player WHERE {
  # Find Marcelo Sarmiento's birthdate
  ?marcelo a dbo:SoccerPlayer ;
           foaf:name ""Marcelo Sarmiento""@en ;
           dbo:birthDate ?birthdate .
  
  # Find soccer players and managers born on the same date
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:birthDate ?sameBirthdate .
  FILTER(?sameBirthdate = ?birthdate)
  
  # Identify films directed by Manuel Huerga
  ?film dbo:director ?huerga .
  ?huerga foaf:name ""Manuel Huerga""@en .
  
  # Find actors in those films who are also soccer players
  ?actor a dbo:SoccerPlayer ;
         dbo:actorInFilm ?film .
  BIND(?actor AS ?player)
}",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find Ann Sothern's birth name
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?birthName .

  # Find the actor of ""1,000 Dollars a Minute""
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .

  # Find the spouse of this actor
  ?actor dbo:spouse ?person .
}
```",4,4,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?child .

  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?roger dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,3,0,0,1.0,1.0,1.0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?movie ?tvShow ?actor WHERE {
  # Find the alter ego of The Shadow video game
  ?game rdfs:label ""The Shadow (video game)""@en .
  ?game dbo:character ?alterEgo .

  # Find movies related to The Shadow that are also TV shows
  ?movie dbo:basedOn ?shadowEntity ;
         dbo:adaptation ?tvShow .

  # Identify Richard Grant Esterhuysen's role in these adaptations
  ?actor foaf:name ""Richard Grant""@en .
  ?actor dbo:profession ?profession .
  ?actor dbo:actedIn ?movie .
  
  FILTER(?alterEgo != ?shadowEntity) # Ensure alter ego is a separate entity
}
```",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?producer WHERE {
  # Find The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alias ?alterEgo .

  # Find the producer of A Star Is Born (1937 film)
  ?film rdfs:label ""A Star Is Born (1937 film)""@en .
  ?film dbo:producer ?producer .

  FILTER (?alterEgo = ?producer) 
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?roger dbo:spouse ?elvira .
  
  ?roger dbo:child ?child .
  ?elvira dbo:child ?child .
  
  ?child dbo:parent ?williamI .
  ?williamI rdfs:label ""William I of Sicily""@en .

  ?child a dbo:Monarch .  # Ensuring the child is royalty
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?eet rdfs:label ""Eastern European Time""@en .
  ?eet dbo:region ?region .
}
```",1,2,2,1,1,3,2,20,0,0,20665,0,0.0,0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?award ?war WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Settlement . }
  FILTER EXISTS { ?birthPlace dbo:country dbr:United_States . }
  
  OPTIONAL {
    ?award dbo:recipient ?person ;
           dbo:awardingBody dbr:United_States_Congress .
    ?war dbo:relatedTo ?award .
  }
}
```",6,9,7,3,2,3,3,71,0,2,2,0.0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?war WHERE {
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  ?eleonore dbo:parent ?father .
  
  OPTIONAL { 
    ?father dbo:militaryCommanderOf ?war .
    FILTER EXISTS { ?war rdf:type dbo:SocietalEvent }
    FILTER EXISTS { ?war rdf:type dbo:Event }
    FILTER EXISTS { ?war rdf:type dbo:TelevisionShow }
  }

  OPTIONAL {
    ?algerianWar rdf:type dbo:MilitaryConflict ;
                 rdfs:label ""Algerian War""@en .
    ?father dbo:militaryCommanderOf ?algerianWar .
  }
}
```",4,7,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent ?spouse WHERE {
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis dbo:parent ?parent .

  ?parent dbo:spouse ?spouse .

  ?spouse rdf:type ?type1 .
  ?spouse rdf:type ?type2 .

  FILTER (
    (str(?type1) = ""http://dbpedia.org/ontology/RoyalFamilyMember"" && str(?type2) = ""http://dbpedia.org/ontology/Noble"") ||
    (str(?type2) = ""http://dbpedia.org/ontology/RoyalFamilyMember"" && str(?type1) = ""http://dbpedia.org/ontology/Noble"")
  )
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?davydov rdfs:label ""Alexander Lvovich Davydov""@en .
  ?davydov dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?baeda rdfs:label ""Baeda Maryam I""@en .
  ?baeda dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?party WHERE {
  { 
    ?gustavo rdfs:label ""Gustavo Petro""@en .
    ?gustavo dbo:party ?party .
    BIND(?gustavo AS ?person)
  }
  UNION
  { 
    ?roy rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
    ?roy dbo:party ?party .
    BIND(?roy AS ?person)
  }
}
```",3,4,4,2,2,2,3,28,1,6,0,0.14285714285714285,1.0,0.25
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalFather WHERE {
  ?maria rdfs:label ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouse .
  
  # Check if the spouse is royalty
  OPTIONAL { ?spouse dbo:royalTitle ?title . }
  
  FILTER EXISTS { ?spouse dbo:royalTitle ?title } .

  # Find the father of the royal spouse
  ?spouse dbo:father ?father .
  
  # Ensure the father is also royalty
  OPTIONAL { ?father dbo:royalTitle ?fatherTitle . }
  
  FILTER EXISTS { ?father dbo:royalTitle ?fatherTitle } .
  
  BIND(?father AS ?royalFather)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?biden rdfs:label ""Joe Biden""@en .
  ?biden dbo:author ?work .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?iliza rdfs:label ""Iliza Shlesinger""@en .
  ?film dbo:starring ?iliza ;
        a dbo:Film .
  ?film dbo:starring ?actor .
  FILTER(?actor != ?iliza)
}
```",2,4,3,2,1,2,3,28,6,31,1,0.16216216216216217,0.8571428571428571,0.27272727272727276
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardeeWar ?leaderWar WHERE {
  # Find the awardee of 1930 and their associated war
  ?person dbo:award ?award .
  ?award dbo:date ""1930""^^xsd:gYear .
  OPTIONAL { ?person dbo:participatedIn ?awardeeWar . }

  # Find the leader of the National Party of Greece and their associated war
  ?leader dbo:leaderOf <http://dbpedia.org/resource/National_Party_of_Greece> .
  OPTIONAL { ?leader dbo:participatedIn ?leaderWar . }
}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?parent ?child WHERE {
  ?event dbo:eventName ""Siege of Mukha"" .
  ?commander dbo:commanderOf ?event ;
             rdfs:label ?commanderLabel .
  FILTER(CONTAINS(LCASE(?commanderLabel), ""royalty"")) .

  OPTIONAL { ?commander dbo:father ?parent . }
  
  OPTIONAL { ?parent dbo:child ?child . }

  ?child dbo:father <http://dbpedia.org/resource/Baeda_Maryam_I> .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?parent dbo:child ?charlesJoseph .
  ?sibling dbo:parent ?parent .
  ?sibling dbo:father ?father .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?parent WHERE {
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?frederick dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,1,3,0,0.25,1.0,0.4
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?tvShow ?societalEvent WHERE {
  ?george rdfs:label ""George Ducas""@en .
  ?jean rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  OPTIONAL { ?george dbo:commander ?war . }
  OPTIONAL { ?jean dbo:commander ?war . }
  OPTIONAL { ?war dbo:depicts ?tvShow . FILTER (CONTAINS(LCASE(str(?tvShow)), 'television')) }
  OPTIONAL { ?war dbo:socialEvent ?societalEvent . FILTER (CONTAINS(LCASE(str(?societalEvent)), 'event')) }
}
",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?club rdfs:label ""1. FC Magdeburg""@en .
  ?club dbo:member ?member .
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?child dbo:parent ?roger ;
         rdfs:label ""William II of Sicily""@en .
  ?child dbo:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?movie rdfs:label ""Sunrise: A Song of Two Humans""@en .
  ?movie dbo:producer ?producer .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?eleonora rdfs:label ""Eleonora Menicucci""@en .
  ?eleonora dbo:almaMater ?almaMater .
}

SELECT ?foundingDate WHERE {
  ?university rdfs:label ""Federal University of Paraíba""@en .
  ?university dbo:foundingDate ?foundingDate .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  # Part 1: Find George H. Cameron's award
  ?georgeHCM rdfs:label ""George H. Cameron""@en .
  ?georgeHCM dbo:award ?award .

  # Part 2: Find the residence of the leader of Ulster Unionist Party
  ?leader rdfs:label ?leaderLabel .
  FILTER(CONTAINS(LCASE(?leaderLabel), ""leader of ulster unionist party""))
  ?leader dbo:residence ?residence .

  # Match the award entity with the residence entity
  ?award rdfs:label ?entityLabel .
  ?residence rdfs:label ?entityLabel .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member WHERE {
  ?film rdfs:label ""Burnt by the Sun""@en .
  ?film dbo:musicalArtist ?artist .
  
  FILTER EXISTS { ?artist a ?type . 
                 VALUES ?type { 
                   dbo:Band 
                   dbo:MusicalArtist 
                   dbo:Organization 
                 }
               }

  ?artist dbo:member ?member .
}
```",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find the alter ego of The Shadow
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  
  # Find actors in ATL film
  ?film rdfs:label ""ATL (2006 film)""@en .
  ?film dbo:starring ?actor .

  # Check if the alter ego is a professional actor
  OPTIONAL { ?actor rdfs:label ?actorLabel . FILTER(lang(?actorLabel) = 'en') }
  
  # Ensure the actor matches the alter ego's profession
  ?alterEgo dbo:profession ?profession .
  FILTER (?profession IN (dbo:Actor, dbo:Professional))
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?person rdfs:label ""Cynthia Ikponmwenosa Morgan""@en .
  OPTIONAL { ?person rdfs:label ""Nicki Minaj""@en . }
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""musician"") || CONTAINS(LCASE(STR(?occupation)), ""singer""))
  BIND(""Nicki Minaj"" AS ?artist)
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  
  ?alfonso dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  ?grandchild dbo:parent ?william2 .
  ?william2 rdfs:label ""William II of Sicily""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?alfonso rdfs:label ""Alfonso VI of León and Castile""@en .
  ?alfonso dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,6,0,2,1.0,0.75,0.8571428571428571
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfYeshaqIParent WHERE {
  ?yeshaq1 rdfs:label ""Yeshaq I""@en .
  ?yeshaq1 dbo:parent ?royalParent .
  ?royalParent dbo:royalTitle ?title .

  ?royalParent dbo:child ?childOfYeshaqIParent .

  ?naod rdfs:label ""Na'od""@en .
  ?naod dbo:father ?fatherOfNaod .
  ?fatherOfNaod dbo:royalTitle ?title2 .
  ?fatherOfNaod dbo:officeHolder ?office .

  ?fatherOfNaod dbo:parent ?grandFatherOfNaod .

  FILTER(?childOfYeshaqIParent = ?grandFatherOfNaod)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:United_Kingdom .
}
```",1,1,2,1,1,3,2,20,42999,0,0,1.0,1.0,1.0
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event rdfs:label ""Pickett's Charge""@en .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?war rdfs:label ""Algerian War""@en .
  ?war dbo:participatingMilitaryUnit ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?award ?show WHERE {
  ?academy rdfs:label ""Royal Swedish Academy of Sciences""@en .
  ?prize dbo:givenBy ?academy ;
         rdfs:label ""Nobel Prize in Physics""@en .
  ?prize dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:award ?award . }
  OPTIONAL { ?award dbo:show ?show . } # Assuming 'show' is a property that might exist
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Mariclare Costello
  ?mariclareCostello rdfs:label ""Mariclare Costello""@en .
  
  # Step 2: Find her spouse
  ?mariclareCostello dbo:spouse ?spouse .

  # Step 3: Identify the child of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Find the parent of this child
  ?child dbo:parent ?parent .

  # Step 5: Identify Amy Arbus and her parent
  ?amyArbus rdfs:label ""Amy Arbus""@en .
  ?amyArbus dbo:parent ?sameParent .

  # Step 6: Ensure both parents are the same entity
  FILTER (?parent = ?sameParent)
}
```",5,5,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory WHERE {
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?placeLabel .
  FILTER regex(?placeLabel, ""(city|town|settlement)"", ""i"")
  OPTIONAL { ?deathPlace dbp:administersTerritory ?territory . }
}",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?birthPlaceLabel WHERE {
  { 
    ?vince rdfs:label ""Vince Gilligan""@en .
    ?vince dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    BIND(""Vince Gilligan"" AS ?personLabel)
  }
  UNION
  { 
    ?glenn rdfs:label ""Glenn Youngkin""@en .
    ?glenn dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    BIND(""Glenn Youngkin"" AS ?personLabel)
  }
}
```",2,2,3,1,2,3,3,71,0,3,1,0.0,0.0,0
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
# Step 1: Find Prince Omar bin Faisal's parent
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?prince rdfs:label ""Prince Omar bin Faisal""@en .
  ?prince dbo:parent ?parent .
}

# Step 2: Find a royal child of Prince Omar bin Faisal's parent
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royalChild WHERE {
  ?parent rdfs:label ""Parent of Prince Omar bin Faisal""@en .
  ?parent dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
  BIND(IF(BOUND(?title), ?child, NULL) AS ?royalChild)
}

# Step 3: Find Princess Aisha bint Faisal's parent",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?theodorCountry ?managerName ?managerCountry WHERE {
  # Theodor Heuss's native country
  ?theodor dbo:nationality ?theodorCountry .
  ?theodor rdfs:label ""Theodor Heuss""@en .

  # Manager of SBV Vitesse for the 2020–21 season
  ?vitesse dbo:manager ?manager .
  ?manager rdfs:label ?managerName .
  ?manager dbo:nationality ?managerCountry .

  # Filter to ensure we are looking at the correct manager for the specified season
  ?vitesse dbo:sportTeam <http://dbpedia.org/resource/SBV_Vitesse> .
  FILTER(CONTAINS(LCASE(?managerName), ""2020-21"")) # Assuming the name or description contains the season info

  # Check if they share the same native country
  FILTER(?theodorCountry = ?managerCountry)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:nickName ""1,000 Dollars a Minute""@en .
  ?annSothern foaf:memberOfParty <http://dbpedia.org/resource/Republican_Party_(United_States)> .
  ?annSothern dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?stoneSour rdfs:label ""Stone Sour""@en .
  ?mudvayne rdfs:label ""Mudvayne""@en .

  ?person dbo:bandMember ?stoneSour .
  ?person dbo:bandMember ?mudvayne .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?galanCountry ?petroParty WHERE {
  ?galan rdfs:label ""Daniel Elahi Galán""@en .
  ?galan dbo:nationality ?country .
  FILTER (STR(?country) = ""Colombia"") .

  ?petro rdfs:label ""Gustavo Petro""@en .
  ?petro dbo:memberOf ?party .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person dbo:birthName ""Bob Thompson""@en .
  ?person rdf:type dbo:MusicalArtist .
  OPTIONAL { ?person rdfs:label ""The Shadow""@en . }
  ?person dbo:band ?band .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?philippAlbrecht rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  ?philippAlbrecht dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,2,1,0.3333333333333333,0.5,0.4
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  OPTIONAL { ?gillmore dbo:militaryUnit ?force . }
  OPTIONAL { ?gillmore dbo:deathPlace ?charleston . FILTER(CONTAINS(LCASE(STR(?charleston)), ""charleston, south carolina"")) }
}

SELECT DISTINCT ?war WHERE {
  ?recipient dbo:award ?medal .
  FILTER(STR(?medal) = ""Medal of Honor""^^xsd:string)
  ?recipient dbo:conflict ?war .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?tisha rdfs:label ""Tisha Sterling""@en .
  ?tisha dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?collinsProducer ?gaynorProducer ?shadowProducer WHERE {
  # Cora Sue Collins' work and producer
  ?collins rdfs:label ""Cora Sue Collins""@en .
  ?collins dbo:film ?workCollins .
  ?workCollins dbo:producer ?collinsProducer .

  # Janet Gaynor's movie and producer
  ?gaynor rdfs:label ""Janet Gaynor""@en .
  ?gaynor dbo:movie ?workGaynor .
  ?workGaynor dbo:producer ?gaynorProducer .

  # The Shadow's professional work and producer
  ?shadow rdfs:label ""The Shadow (radio show)""@en .
  ?shadow dbo:creator ?shadowCreator .
  ?shadowCreator dbo:profession ?shadowProfession .
  ?shadowCreator dbo:worksFor ?workShadow .
  ?workShadow dbo:producer ?shadowProducer .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?settlement ?war WHERE {
  # Quincy Adams Gillmore's force
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:militaryUnit ?force .

  # Henry Clay Lewis's birthplace
  ?lewis rdfs:label ""Henry Clay Lewis""@en .
  ?lewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbp:UnitedStatesOfAmerica .

  # Medal of Honor awardee and war
  ?medalAwardee dbo:awardedBy <http://dbpedia.org/resource/Medal_of_Honor> .
  ?medalAwardee dbo:conflict ?war .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find the cast members of ""Dispatches from Elsewhere""
  ?series rdfs:label ""Dispatches from Elsewhere""@en .
  ?series dbo:castMember ?actor .

  # Get professions of Shatrughan Sinha
  ?shatrughan rdfs:label ""Shatrughan Sinha""@en .
  ?shatrughan dbo:profession ?sinhaProfession .

  # Find common profession between the actor and Shatrughan Sinha
  ?actor dbo:profession ?commonProfession .
  FILTER (?commonProfession = ?sinhaProfession)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate ?birthPlace WHERE {
  ?person rdfs:label ""Roy Leonardo Barreras Montealegre""@en .
  ?person a dbo:Politician .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?harriette rdfs:label ""Harriette Arlene Lake""@en .
  ?harriette dbo:spouse ?spouse .
  
  ?roger rdfs:label ""Roger Pryor (actor)""@en .
  FILTER(?spouse = ?roger)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor ?spouse WHERE {
  # Find Myat Hpone Pyo and his predecessor
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:predecessor ?predecessor .

  # Find the father of Myat Hpone Pyo
  ?myatHponePyo dbo:father ?father .

  # Ensure the father is associated with royalty (e.g., has a title)
  OPTIONAL { ?father dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }

  # Find the spouse of the royal father
  ?father dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor ?author WHERE {
  # Find the successor of Yurii Khmelnytsky
  ?yurii rdfs:label ""Yurii Khmelnytsky""@en .
  ?yurii dbo:successor ?successor .

  # Find the author of Always the Love Songs
  ?work rdfs:label ""Always the Love Songs""@en .
  ?work dbo:author ?author .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement WHERE {
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?place .
  ?place rdf:type dbo:Settlement .
  OPTIONAL { ?place dbo:country ?country }.
  FILTER EXISTS { 
    ?country rdfs:label ?countryLabel .
    FILTER (CONTAINS(LCASE(?countryLabel), ""united states"") || CONTAINS(LCASE(?countryLabel), ""america""))
  }
}",2,4,3,2,1,3,3,71,0,0,12,0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for a notable awardee of an award associated with Vince Gilligan (e.g., Emmy Awards)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?birthPlace WHERE {
  # Assuming Vince Gilligan is known for the ""Emmy Award""
  ?award rdfs:label ""Emmy Award""@en .
  ?awardee dbo:recipientOfAward ?award .
  ?awardee dbo:birthPlace ?birthPlace .
}

# Query for Cece Bell's birthplace
SELECT ?birthPlace WHERE {
  ?ceceBell rdfs:label ""Cece Bell""@en .
  ?ceceBell dbo:birthPlace ?birthPlace .
}

# Query for the current governor of Virginia's birthplace
SELECT ?governor ?birthPlace WHERE {
  ?governor rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""governor of virginia"") && CONTAINS(LCASE(?name), ""current""))
  ?governor dbo:birthPlace ?birthPlace .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war rdfs:label ""Algerian War""@en .
  ?war dbo:commander ?commander .
  
  OPTIONAL { 
    ?event dbo:depicts ?commander .
    ?event rdfs:label ?eventLabel .
    FILTER(CONTAINS(LCASE(?eventLabel), ""societal"") || CONTAINS(LCASE(?eventLabel), ""television show""))
  }
}
```",3,6,4,3,1,3,3,71,0,56,124,0.0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Step 2: Find his child who is a politician
  ?child dbo:childOf ?edward ;
         dbo:politician true .

  # Step 3: Identify the alumnus of Eton College whose child is a politician
  ?alumnus dbo:alumnusOf <http://dbpedia.org/resource/Eton_College> .
  ?alumnusChild dbo:childOf ?alumnus ;
                dbo:politician true .

  # Step 4: Find the parent of this child who is both a politician and an office holder
  ?parent dbo:childOf ?alumnusChild ;
          dbo:politician true ;
          dbo:officeHolder true .

  # Step 5: Identify the grandparent (parent of the above parent)
  ?grandparent dbo:childOf ?parent .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fellowship ?description WHERE {
  ?fellowship rdfs:label ""Sangeet Natak Akademi Fellowship""@en .
  OPTIONAL { ?fellowship dbo:description ?description . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Russian Empire""@en .
}
```",1,1,2,1,1,2,3,28,5475,0,0,1.0,1.0,1.0
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Birmingham""@en .
}
```",1,1,2,1,1,3,2,20,1531,0,0,1.0,1.0,1.0
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
# Query 1: Miguel Maura's Office
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?miguel a dbo:Person ;
          rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:occupation ?office .
}

# Query 2: Tenant of Alberto Ruiz-Gallardón's Residence
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?tenant WHERE {
  ?alberto a dbo:Person ;
           rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?residence dbo:resident ?alberto ;
             dbo:tenant ?tenant .
}

# Query 3: Commander's Office in Central African Republic Civil War
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:role ?office .
  ?conflict dbo:participant ?commander ;
            rdfs:label ""Central African Republic Civil War""@en .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show WHERE {
  ?anumta rdfs:label ""Anumta Qureshi""@en .
  ?anumta dbo:performerIn ?show .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query 1: Find the owner of USS Arcadia (ID-1605)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner WHERE {
  ?ship dbo:owner ?owner .
  ?ship rdfs:label ""USS Arcadia (ID-1605)""@en .
}

# Query 2: Find the spouse of Hillary Clinton
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?clinton rdfs:label ""Hillary Clinton""@en .
  ?clinton dbo:spouse ?spouse .
}

# Query 3: Identify a disease that is also a societal event and its commander in war
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?disease ?commander WHERE {
  ?disease rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""black death"") || CONTAINS(LCASE(?label), ""plague""))
  OPTIONAL { ?disease dbo:commanderInWar ?commander }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?award WHERE {
  ?band a dbo:Band ;
        dbo:location ?location .
  
  ?location rdfs:label ?stateLabel .
  FILTER (CONTAINS(LCASE(?stateLabel), ""new york"") && LCASE(?stateLabel) = ""new york state"")

  ?band dbo:award ?award .

  ?award a ?type .
  FILTER (
    ?type = dbpedia:Region ||
    ?type = dbpedia:State ||
    ?type = dbpedia:Settlement
  )
}
```",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?zervas rdfs:label ""Napoleon Zervas""@en .
  ?zervas dbo:participatedIn ?war .
}
```",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?band dbo:award ?grammy .
  ?grammy rdfs:label ""Grammy Award""@en .
  ?band dbo:nativePlace ?region .
  ?region rdf:type dbo:State .
  ?region rdfs:label ?stateLabel .
  FILTER(?stateLabel = ""New York"" || ?stateLabel = ""New York (state)"")
  
  ?artist dbo:birthPlace dbp:country ""United States""@en ;
          dbo:nativePlace ?region .
  ?artist dbo:birthPlace ?floridaPlace .
  ?floridaPlace rdfs:label ?placeLabel .
  FILTER(?placeLabel = ""Florida"")
}
```",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?humanRemains rdfs:label ""Human Remains (band)""@en .
  ?humanRemains dbo:member ?bandMember .

  ?artist rdfs:label ?firstAssociatedLabel .
  FILTER(STRSTARTS(?firstAssociatedLabel, ""James Plotkin's associated artist""))
  ?artist dbo:associatedBand ?secondLevelArtist .

  ?secondLevelArtist = ?bandMember .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?yamazaBirthPlace ?toyotomiWar ?hidekatsuWar WHERE {
  # Yamaza Enjirō's birthplace
  ?yamaza rdfs:label ""Yamaza Enjirō""@en .
  ?yamaza dbo:birthPlace ?yamazaBirthPlace .

  # Toyotomi Hidenaga's wars
  ?toyotomi rdfs:label ""Toyotomi Hidenaga""@en .
  ?toyotomi dbo:participatedIn ?toyotomiWar .

  # Hashiba Hidekatsu's wars
  ?hidekatsu rdfs:label ""Hashiba Hidekatsu""@en .
  ?hidekatsu dbo:participatedIn ?hidekatsuWar .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?triple_x rdfs:label ""The Triple X's""@en .
  ?battle rdfs:label ""Battle of Fort Royal""@en .
  
  OPTIONAL { ?triple_x dbo:participatedIn ?conflict . }
  OPTIONAL { ?battle dbo:participatedIn ?conflict . }

  ?conflict dbo:commander ?commander .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
# Step 1: Find Marcelo Sarmiento's birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthday WHERE {
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbo:birthday ?birthday .
}

# Step 2: Find a soccer player and manager born on Marcelo Sarmiento's birthday
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:birthday ?birthday .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:position dbr:Manager .
  FILTER (?birthday = ""Marcelo Sarmiento's birthday""^^xsd:date) # Replace with actual date from Step 1
}

# Step 3: Find Sergio Agüero's team
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  ?aguero rdfs:label ""Sergio Agüero""@en .
  ?aguero dbo:team ?team .
}

# Step 4: Find an athlete born on February 22, 1955
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?athlete WHERE {
  ?athlete dbo:birthday ""1955-02-22""^^xsd:date .
  ?athlete dbo:sport ?sport .
}

# Step 5: Find the team of the soccer player and manager from Step 2
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  ?person dbo:birthday ""Marcelo Sarmiento's birthday""^^xsd:date . # Replace with actual date from Step 1
  ?person dbo:sport dbr:Soccer .
  ?person dbo:position dbr:Manager .
  ?person dbo:team ?team .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?christianPosition, ?olafPosition WHERE {
  ?christian rdfs:label ""Christian IX of Denmark""@en .
  ?christian dbo:positionHeld ?christianPosition .

  ?olaf rdfs:label ""Olaf I of Denmark""@en .
  ?olaf dbo:positionHeld ?olafPosition .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?charge rdfs:label ""Pickett's Charge""@en .
  ?charge dbo:participatedIn ?militaryForce .
  ?militaryForce dbo:participatedIn ?war .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""Doon Arbus""@en .
  ?person dbo:parent ?parent .
  
  OPTIONAL { 
    ?professional rdfs:label ?roleLabel .
    FILTER(CONTAINS(LCASE(?roleLabel), ""photographer"") && CONTAINS(LCASE(?roleLabel), ""actor""))
    ?professional dbo:child ?person .
    ?professional dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find Herschel Bernardi's movies
  ?movie dbo:starring ?herberson .
  ?herberson rdfs:label ""Herschel Bernardi""@en .

  # Identify Amy Arbus' parent
  ?parent dbo:child ?amyarbus .
  ?amyarbus rdfs:label ""Amy Arbus""@en .

  # Check if the same movie is linked to both Herschel Bernardi and Amy Arbus' parent
  ?movie dbo:starring ?parentactor .
  FILTER (?parentactor = ?parent)

  # Retrieve other actors from this movie
  ?movie dbo:starring ?actor .
  FILTER (?actor != ?herberson && ?actor != ?parent)
}
```",3,4,4,2,2,3,3,71,0,1,1,0.0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Find Isabella of Austria and her father
  ?isabella rdfs:label ""Isabella of Austria""@en .
  ?isabella dbo:father ?father .

  # Find a commander in the Siege of Padua who is royalty
  ?commander dbp:participatedInBattle <http://dbpedia.org/resource/Siege_of_Padua> ;
             rdfs:label ?labelCommander .
  FILTER(CONTAINS(LCASE(?labelCommander), ""royalty"")) .

  # Find the child of this commander
  ?commander dbo:child ?child .

  # Check if Isabella's father is the same as the commander's child
  ?child dbo:father ?father .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Step 1: Identify Henry Clay Lewis and his birthplace
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is a settlement in America
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbp:UnitedStates .

  # Step 3: Identify Medal of Honor awardees and their associated wars
  ?medalAwardee dbo:award ?medal .
  ?medal rdfs:label ""Medal of Honor""@en .
  ?medalAwardee dbo:participatedInWar ?war .

  # Step 4: Cross-reference to find common wars involving the settlement
  ?war dbp:location ?birthPlace .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Princess Muna al-Hussein's royal children
  ?muna rdfs:label ""Princess Muna al-Hussein""@en .
  ?muna dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild dbo:title ?title .
  FILTER EXISTS { ?title rdfs:label ?label . FILTER regex(?label, ""Prince|Princess"", ""i"") }

  # Step 2: Find the royal child's royal children
  ?royalChild dbo:child ?grandRoyalChild .

  # Ensure this grandchild is royalty
  ?grandRoyalChild dbo:title ?grandTitle .
  FILTER EXISTS { ?grandTitle rdfs:label ?grandLabel . FILTER regex(?grandLabel, ""Prince|Princess"", ""i"") }

  # Step 3: Find Princess Sara bint Faisal's parent
  ?sara rdfs:label ""Princess Sara bint Faisal""@en .
  ?sara dbo:parent ?parentSara .

  # Step 4: Identify the common parent between grandRoyalChild and Princess Sara bint Faisal
  ?grandRoyalChild dbo:parent ?commonParent .
  FILTER (?commonParent = ?parentSara)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musician ?associatedArtist WHERE {
  { 
    ?tupac rdfs:label ""Tupac Shakur""@en .
    ?tupac dbo:musicArtist ?musician .
    OPTIONAL { ?musician dbo:associatedMusicalArtist ?associatedArtist }
  } UNION {
    ?dangelo rdfs:label ""D'Angelo""@en .
    ?dangelo dbo:musicArtist ?musician .
    OPTIONAL { ?musician dbo:associatedMusicalArtist ?associatedArtist }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?film WHERE {
  ?audrey rdfs:label ""Audrey Hepburn""@en .
  ?audrey dbo:starring ?film .
  ?film rdf:type dbo:Film .
}
```",1,3,2,1,1,2,3,28,0,0,15,0,0.0,0
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyMember WHERE {
  
  # Step 1: Identify the ruling party in Central",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producerCollins ?producerHighSociety WHERE {
  # Cora Sue Collins' work producer
  ?cora rdfs:label ""Cora Sue Collins""@en .
  ?work dbo:actor ?cora ;
        dbo:producer ?producerCollins .

  # High Society Blues actor's movie producer
  ?movie rdfs:label ""High Society Blues""@en .
  ?actor dbo:starring ?movie ;
         rdfs:label ?actorLabel .
  ?movie dbo:producer ?producerHighSociety .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify a film associated with Nat Levine
  ?film dbo:producer ?natLevine .
  
  # Step 2: Find an actor in that film
  ?film dbo:starring ?actor .

  # Step 3: Identify Ann Sothern's birth name
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?birthName .

  # Step 4: Check if the actor is born with Ann Sothern's birth name
  ?actor dbo:birthName ?birthName .

  # Step 5: Find the spouse of this actor
  ?actor dbo:spouse ?spouse .
  
  # Ensure Nat Levine is correctly identified
  ?natLevine rdfs:label ""Nat Levine""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?billClinton dbo:spouse ?spouse .
}
```",3,5,4,2,2,3,3,71,0,1,1,0.0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
# Step 1: Find the author of Smartbomb
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Smartbomb""@en .
  ?book dbo:author ?author .
}

# Step 2: Find movies featuring this author
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?author dbo:birthName ""Author Name""@en .  # Replace with actual author name from previous query
  ?actor dbo:birthName ?author .
  ?actor dbo:film ?movie .
}

# Step 3: Identify The Golden Master series and its alter ego
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?series ?alterEgo WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:character ?alterEgo .
}
```",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonParent WHERE {
  # Find Arthur Stanley and his father
  ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
  ?arthur dbo:father ?commonParent .

  # Find Frederick Stanley, 16th Earl of Derby and one of his children
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child dbo:parent ?frederick ;
         dbo:parent ?commonParent .
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalChild WHERE {
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  
  ?sawMinPhyu dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  ?child rdf:type ?type .
  
  FILTER (
    ?type = dbo:Monarch ||
    EXISTS { ?child dbo:royalTitle ?title . }
  )
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child ?spouse WHERE {
  ?antoinette rdfs:label ""Antoinette of Brunswick-Wolfenbüttel""@en .
  ?antoinette dbo:child ?child .
  
  # Assuming royalty can be inferred from having a title or role
  OPTIONAL { ?child dbo:title ?title . FILTER (lang(?title) = 'en') }
  
  ?child dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person rdfs:label ""Robert Lamar Thompson""@en .
  ?person dbo:birthName ""Robert Lamar Thompson"" .
  ?person a dbo:MusicalArtist .
  OPTIONAL { ?person dbo:band ?band . }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Unable to construct a valid query due to incomplete input.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?philip rdfs:label ""Philip I of Castile""@en .
  ?philip dbo:child ?child .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis death place
  ?antoniosVarthalitis rdfs:label ""Antonios Varthalitis""@en .
  ?antoniosVarthalitis dbo:deathPlace ?place1 .
  ?place1 a dbo:Settlement .

  # Konstantinos Ventiris death place
  ?konstantinosVentiris rdfs:label ""Konstantinos Ventiris""@en .
  ?konstantinosVentiris dbo:deathPlace ?place2 .
  ?place2 a dbo:Settlement .

  # Check if the places are the same settlement
  FILTER (?place1 = ?place2)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  { 
    ?show dbp:title ""All or Nothing: Manchester City""@en .
    ?show dbo:castMember ?player .
    ?player dbo:sport ""Soccer""@en .
    ?player rdf:type dbo:Athlete .
  }
  UNION
  {
    ?aimar dbo:nationality dbr:Argentina ;
           dbo:sport ""Soccer""@en ;
           dbo:team ?team .
    FILTER (str(?aimar) = str(dbpedia:Pablo_Aimar))
    ?player dbo:playsFor ?team .
  }
  UNION
  {
    ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
            rdf:type dbo:Athlete .
    FILTER (?person = ?player)
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenantOfMadrid ?commanderOffice WHERE {
  # Identify Manuel Pinto da Costa and his roles
  ?manuel a dbo:Politician ;
          foaf:name ""Manuel Pinto da Costa"" .
  
  # Identify Miguel Maura and his roles
  ?miguel a dbo:Politician ;
          foaf:name ""Miguel Maura"" .

  # Find military conflicts involving them
  OPTIONAL { ?manuel dbo:memberOf ?conflict . }
  OPTIONAL { ?miguel dbo:memberOf ?conflict . }

  # Determine the tenant of Madrid during this conflict
  ?tenantOfMadrid a dbo:Politician ;
                  dbo:officeLocation dbr:Madrid ;
                  dbo:memberOf ?conflict .

  # Identify the commander's office related to the conflict
  ?commanderOffice a dbo:MilitaryCommand ;
                   dbo:relatedTo ?conflict .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Find Stuart Tosh's associated musical artist
  ?stuartTosh rdfs:label ""Stuart Tosh""@en .
  ?stuartTosh dbo:associatedBand ?artist1 .

  # Find David Paton's associated musical artist
  ?davidPaton rdfs:label ""David Paton""@en .
  ?davidPaton dbo:associatedBand ?artist2 .

  # Ensure the artists are the same
  FILTER (?artist1 = ?artist2)

  # Find a band member of this artist
  ?artist2 dbo:bandMember ?bandMember .
}
```",3,3,4,2,2,2,3,28,0,3,2,0.0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdfs:label ""Roy Barreras""@en .
  ?person dbo:country dbr:Colombia .
  ?person dbo:partyAffiliation ?party .
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person (GROUP_CONCAT(?parentLabel; separator="", "") AS ?parents) WHERE {
  { 
    ?patrick rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
    ?patrick dbo:parent ?parent1 .
    ?parent1 rdfs:label ?parentLabel .
  }
  UNION
  {
    ?mary rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
    ?mary dbo:parent ?parent2 .
    ?parent2 rdfs:label ?parentLabel .
  }
}
GROUP BY ?person
```",3,3,4,2,2,2,3,28,0,1,2,0.0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?curran rdfs:label ""Nicholas Michael Curran""@en .
  ?curran a dbo:MusicalArtist .

  OPTIONAL { 
    ?curran dbo:associatedBand ?band .
    ?band rdfs:label ?bandLabel .
    FILTER (CONTAINS(LCASE(?bandLabel), LCASE(""The Fabulous Thunderbirds"")) || CONTAINS(LCASE(?bandLabel), LCASE(""Eric Clapton"")))
  }

  OPTIONAL {
    ?curran dbo:memberOfBand ?band .
    ?band rdfs:label ?bandLabel .
    FILTER (CONTAINS(LCASE(?bandLabel), LCASE(""The Fabulous Thunderbirds"")) || CONTAINS(LCASE(?bandLabel), LCASE(""Eric Clapton"")))
  }

  OPTIONAL {
    ?curran dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?edward rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?edward dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  
  # Check if the person is an athlete, soccer player, sports manager, and soccer manager
  { ?person dbo:sport dbr:Soccer . }
  UNION
  { ?person dbo:occupation dbr:Athlete . }
  UNION
  { ?person dbo:occupation dbr:Sports_Manager . }
  UNION
  { ?person dbo:occupation dbr:Soccer_Manager . }

  # Check if the person is associated with Hong Kong C Team as a player and manager
  { ?person dbo:team dbr:Hong_Kong_C_Team . }
  { ?person dbo:managerOfTeam dbr:Hong_Kong_C_Team . }
}
```",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?tenant WHERE {
  ?psoe dbo:leader ?leader .
  ?election dbo:officeHolder ?leader .
  FILTER (CONTAINS(LCASE(STR(?election)), ""2009 galician regional election""))
  ?leader dbo:memberOf ?party .
  FILTER (?party = <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party>)
  ?tenant dcterms:isPartOf ?administration .
  FILTER (CONTAINS(LCASE(STR(?administration)), ""spain""))
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""The First Glove""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battle ?force WHERE {
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:participatedIn ?conflict .
  ?conflict dbo:militaryForce ?force .
}

UNION

SELECT ?bayneEvent ?event WHERE {
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:participatedIn ?bayneEvent .
  ?bayneEvent rdf:type dbo:MilitaryConflict .
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?otherProfessional WHERE {
  ?shatrughan rdfs:label ""Shatrughan Sinha""@en .
  ?shatrughan dbo:occupation ?profession .

  ?otherProfessional a dbo:Person ;
                    dbo:occupation ?profession .
  FILTER(?otherProfessional != ?shatrughan)
}
```",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award ""Sangeet Natak Akademi Fellowship""@en .
  ?awardee dbo:birthPlace ?birthPlace .
}

SELECT ?birthPlace WHERE {
  ?smita rdfs:label ""Smita Patil""@en .
  ?smita dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?team WHERE {
  # Find Marcelo Sarmiento's birthday
  ?marcelo a dbo:SoccerPlayer ;
           rdfs:label ""Marcelo Sarmiento""@en ;
           dbo:birthday ?birthday .

  # Find soccer players and managers born on the same date
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:birthday ?sameBirthday .
  
  FILTER (?sameBirthday = ?birthday)

  # Retrieve team information for these individuals
  ?person dbo:team ?team .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbpedia:London .
  ?person dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(?occupation), ""artist"") || CONTAINS(LCASE(?occupation), ""musical artist""))
  )
}
```",1,3,2,1,1,3,2,20,0,0,657,0,0.0,0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?nickArtist ?claptonBandMember ?bandOfMember WHERE {
  # Part 1: Associated Musical Artist of Nick Curran
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?nickArtist .

  # Part 2: Band of a Band Member of Eric Clapton
  ?ericClapton rdfs:label ""Eric Clapton""@en .
  ?ericClapton dbo:bandMember ?claptonBandMember .
  ?claptonBandMember dbo:associatedBand ?bandOfMember .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?party WHERE {
  ?sofia rdfs:label ""Sofía Petro""@en .
  ?sofia dbo:father ?father .
  OPTIONAL { ?father dbo:partyMembership ?party . }
}

SELECT ?country (GROUP_CONCAT(?entity; separator="", "") AS ?entities) WHERE {
  ?galan rdfs:label ""Daniel Elahi Galán""@en .
  ?galan dbo:nationality ?country .
  ?entity dbo:nationality ?country .
  FILTER (?entity != ?galan)
}
GROUP BY ?country
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Janusz Kamiński's Spouse
SELECT ?spouse WHERE {
  ?janusz a dbo:Person ;
         rdfs:label ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Step 2: Find the Movie Featuring Iliza Shlesinger and Janusz Kamiński's Spouse
SELECT ?movie WHERE {
  ?iliza a dbo:Person ;
         rdfs:label ""Iliza Shlesinger""@en .
  ?spouse a dbo:Person ;
          rdfs:label ?spouseLabel .
  ?movie dbo:starring ?iliza, ?spouse ;
         rdf:type dbo:Film, dbo:Work .
}

# Step 3: Find the Actor(s) in That Movie
SELECT ?actor WHERE {
  ?movie rdf:type dbo:Film, dbo:Work .
  ?movie dbo:starring ?actor .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bayneWarForce ?calderEventForce WHERE {
  # For William Bayne (Royal Navy Officer)
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:militaryUnit ?bayneWarForce .

  # For Robert Calder
  ?calder rdfs:label ""Robert Calder""@en .
  ?calder dbo:participatedIn ?event .
  ?event a dbo:Event, dbo:SocietalEvent ;
         dbo:militaryUnit ?calderEventForce .
}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  { 
    ?ventiris rdfs:label ""Konstantinos Ventiris""@en .
    ?ventiris dbo:participatedIn ?war .
    BIND(?ventiris AS ?person)
  }
  UNION
  {
    ?zervas rdfs:label ""Napoleon Zervas""@en .
    ?zervas dbo:participatedIn ?war .
    BIND(?zervas AS ?person)
  }
}
```",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  # Step 2: Find his child who is a politician
  ?child dbo:childOf ?frederick ;
         rdf:type dbo:Politician .

  # Step 3: Identify the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  
  # Step 4: Find the parent of this awardee
  ?parent dbo:childOf ?awardee .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find ""Ab Kya Hoga"" and its actors who are politicians
  ?show rdfs:label ""Ab Kya Hoga""@en .
  ?show dbo:castMember ?politicianActor .
  ?politicianActor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician""))

  # Step 2: Find Richard E. Grant's roles
  ?grant rdfs:label ""Richard E. Grant""@en .
  ?grant dbo:castMember ?role .

  # Step 3: Find actors of the same role who are also politicians
  ?role dbo:castMember ?actor .
  ?actor dbo:occupation ?actorOccupation .
  FILTER(CONTAINS(LCASE(STR(?actorOccupation)), ""actor""))
  
  # Ensure the actor is a politician as well
  OPTIONAL { ?actor dbo:occupation ?actorPoliticianOccupation . 
             FILTER(CONTAINS(LCASE(STR(?actorPoliticianOccupation)), ""politician"")) }
}
```",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?position WHERE {
  ?christian rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  ?christian dbo:positionHeld ?position .
}

SELECT ?mayor WHERE {
  ?duchy rdfs:label ""Duchy of Schleswig""@en .
  ?duchy dbo:mayor ?mayor .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?charlesJoseph rdfs:label ""Archduke Charles Joseph of Austria""@en .
  ?ferdinandII rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .

  ?parent1 dbo:child ?charlesJoseph .
  ?parent2 dbo:child ?ferdinandII .

  ?commonChild dbo:parent ?parent1 ;
               dbo:parent ?parent2 .

  ?commonChild dbo:father ?father .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?isabella rdfs:label ""Isabella of Austria""@en .
  ?isabella dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?eleonora rdfs:label ""Eleonora Menicucci de Oliveira""@en .
  ?eleonora dbo:almaMater ?almaMater .
}

SELECT ?foundingDate WHERE {
  ?university rdfs:label ""Federal University of Paraíba""@en .
  ?university dbo:foundingDate ?foundingDate .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Jamshedpur .
  ?person dbo:nationality dbr:India .
}
```",2,2,3,1,2,2,2,9,5,2,16,0.7142857142857143,0.23809523809523808,0.35714285714285715
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember ?profession WHERE {
  # Find Emilia's band members
  ?emilia rdfs:label ""Emilia (Bulgarian singer)""@en .
  ?emilia dbo:bandMember ?bandMember .

  # Find Jamie T's profession
  ?jamieT rdfs:label ""Jamie T""@en .
  ?jamieT dbo:occupation ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
  ?gillmore dbo:participatedIn ?event .
  ?event dbo:location ?charleston .
  ?charleston rdfs:label ""Charleston, South Carolina""@en .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?secondLevelArtist WHERE {
  # Step 1: Find James Plotkin's associated artists
  ?plotkin rdfs:label ""James Plotkin""@en .
  ?plotkin dbo:associatedBand ?firstLevelArtist .

  # Step 2: For each first-level artist, find their associated artists
  ?firstLevelArtist dbo:associatedBand ?secondLevelArtist .
}
```",2,2,3,2,1,3,2,20,13,0,0,1.0,1.0,1.0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?soccerPlayer ?team WHERE {
  ?soccerPlayer dbo:birthDate ""1979-11-03""^^xsd:date .
  ?soccerPlayer dbo:sport dbp:Soccer .
  OPTIONAL { ?soccerPlayer dbo:position dbp:Manager . }
  ?soccerPlayer dbo:team ?team .

  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date .
  ?athlete dbo:sport ?sport .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?docSeries rdfs:label ""All or Nothing: Manchester City""@en .
  ?docSeries dbo:actor ?actor .
  ?actor dbo:soccerPlayer true .
  ?actor dbo:athlete true .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?awardee WHERE {
  ?rodney rdfs:label ""Rodney Lees""@en .
  ?rodney dbo:award ?award .
  ?award dbo:recipient ?awardee .
}",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?cora rdfs:label ""Cora Sue Collins""@en .
  ?cora dbo:work ?work .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?roger rdfs:label ""Roger II of Sicily""@en .
  ?roger dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?peter rdfs:label ""Peter IV of Aragon""@en .
  ?peter dbo:child ?child .
  OPTIONAL { ?child dbo:monarch ?monarchy . }
}
```",3,4,4,2,2,3,2,20,0,7,1,0.0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?producer WHERE {
  # Find spouse of Linda Bruckheimer
  ?linda rdfs:label ""Linda Bruckheimer""@en .
  ?linda dbo:spouse ?spouse .

  # Find producer of the movie ""12 Strong""
  ?movie rdfs:label ""12 Strong""@en .
  ?movie dbo:producer ?producer .
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?bela rdfs:label ""Béla IV of Hungary""@en .
  ?bela dbo:child ?child .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  VALUES ?name { ""Vince Gilligan""@en ""Cece Bell""@en ""Glenn Youngkin""@en }
  
  ?person rdfs:label ?name .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find the alter ego of ""The Golden Master"" series
  ?character rdfs:label ?alterEgoLabel .
  FILTER(CONTAINS(LCASE(?alterEgoLabel), ""the golden master"")).
  
  # Link this character to a real-world actor if possible
  OPTIONAL { ?character dbo:portrayedBy ?actor . }
  
  # Find actors in the film ""ATL""
  ?atlFilm rdfs:label ""ATL""@en .
  ?atlFilm dbo:starring ?actor .

  # Ensure the actor is also linked to another movie
  ?otherMovie dbo:starring ?actor .
  FILTER(?atlFilm != ?otherMovie)
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?theme ?native WHERE {
  # Part 1: Find the theme of Dikhawa
  ?dikhawa rdfs:label ""Dikhawa""@en .
  OPTIONAL { ?dikhawa dbo:genre ?theme . }
  
  # Part 2: Find natives of Lahore
  ?person dbo:birthPlace <http://dbpedia.org/resource/Lahore> ;
          rdfs:label ?nativeLabel .
  FILTER(LANG(?nativeLabel) = 'en')
}
```",2,2,3,1,2,2,2,9,0,2,1,0.0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  # Find the time zone for Kiyosu
  ?kiyosu rdfs:label ""Kiyosu, Aichi""@en .
  ?kiyosu dbo:timeZone ?timezone .

  # Find the region associated with that time zone
  ?timezone dbo:region ?region .

  # Find Chieko Asakawa's birthplace
  ?asakawa rdfs:label ""Chieko Asakawa""@en .
  ?asakawa dbo:birthPlace ?birthplace .

  # Check if the birthplace is in the same region as Kiyosu's time zone
  ?birthplace dbo:locatedIn ?region .
  
  # Return the entity that matches both criteria
  BIND(?birthplace AS ?entity)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?calder rdfs:label ""Robert Calder""@en .
  ?calder dbo:militaryCommanderFor ?campaign .
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?calder dbo:commanderOfMilitaryUnit ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  { 
    ?ventiris rdfs:label ""Konstantinos Ventiris""@en .
    ?ventiris dbo:participatedIn ?war .
    BIND(?ventiris AS ?person)
  }
  UNION
  {
    ?leader rdfs:label ?leaderLabel .
    FILTER(CONTAINS(LCASE(str(?leaderLabel)), ""national party of greece"") && CONTAINS(LCASE(str(?leaderLabel)), ""leader""))
    ?leader dbo:participatedIn ?war .
    BIND(?leader AS ?person)
  }
}
```",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?project rdfs:label ""The Alan Parsons Project""@en .
  ?project dbo:bandMember ?member .

  OPTIONAL {
    ?stuart rdfs:label ""Stuart Tosh""@en .
    ?stuart dbo:associatedBandMember ?member .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?ferdinand rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?ferdinand dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), 'commander') || CONTAINS(LCASE(?occupation), 'military leader')) .
  ?child rdfs:label ?name .
  OPTIONAL {
    ?child dbo:child ?eleonore .
    ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  }
  FILTER(?eleonore != '')
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?party WHERE {
  VALUES ?names { ""Roy Leonardo Barreras Montealegre""@en ""Gustavo Petro""@en }
  
  ?person rdfs:label ?names .
  OPTIONAL { ?person dbo:party ?party . }
  
  FILTER (lang(?names) = 'en')
}
```",4,5,5,2,3,2,3,28,1,7,0,0.125,1.0,0.2222222222222222
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT 
  ?fortRoyalForce,
  ?campaignCommander,
  ?calderEvent,
  ?calderForce
WHERE {
  # Battle of Fort Royal military force
  ?battle rdfs:label ""Battle of Fort Royal""@en .
  ?battle dbo:participatingMilitaryForce ?fortRoyalForce .

  # French Campaign in Egypt and Syria commander
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?campaign dbo:commander ?campaignCommander .

  # Robert Calder's event and military force
  ?calder foaf:name ""Robert Calder""@en .
  ?event dbo:participatingPerson ?calder .
  ?event rdfs:label ?eventName .
  FILTER (regex(?eventName, ""Event"", ""i"") || regex(?eventName, ""Societal Event"", ""i""))
  ?event dbo:participatingMilitaryForce ?calderForce .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandchild WHERE {
  # Find Stephen V of Hungary's predecessor
  ?stephenV dbo:predecessor ?predecessor .
  
  # Ensure the predecessor is a Monarch (royalty)
  ?predecessor rdf:type dbo:Monarch .

  # Find the child of the predecessor
  ?predecessor dbo:child ?child .

  # Ensure the child is also a Monarch (royalty)
  ?child rdf:type dbo:Monarch .

  # Find the grandchild who is royalty
  ?child dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .
  
  # Bind Stephen V of Hungary to his DBpedia entity
  VALUES ?stephenV { <http://dbpedia.org/resource/Stephen_V_of_Hungary> }
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?album rdfs:label ""Sappy""@en .
  ?album a dbo:Album .
  ?album dbo:composer ?writer .
  ?writer dbo:bandMember ?bandMember .
}",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?laFaro rdfs:label ""Scott LaFaro""@en .
  ?laFaro dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?birthPlace WHERE {
  ?laurynHill rdfs:label ""Lauryn Hill""@en .
  ?laurynHill dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war WHERE {
  ?tennant rdfs:label ""William Tennant (Royal Navy officer)""@en .
  ?tennant dbo:commanderOf ?force .
  ?force dbo:participatedIn ?event .
  ?event dbp:name ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""sinking of prince of wales and repulse"") || CONTAINS(LCASE(?eventName), ""world war ii""))
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?cece rdfs:label ""Cece Bell""@en .
  ?cece dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?billClinton dbo:spouse ?spouse .
}
```",5,11,6,3,2,3,3,71,0,1,1,0.0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?actorLabel ?otherOccupation WHERE {
  ?person dbo:occupation ?actor .
  ?actor rdfs:label ""Actor""@en .

  ?person dbo:occupation ?otherOccupation .
  FILTER(?actor != ?otherOccupation)

  ?person rdfs:label ?actorLabel .
}
```",2,2,3,1,2,2,3,28,272,28240,3938,0.009539842873176206,0.06460807600950119,0.016624900678442637
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find Uncle Murda's band members
SELECT ?member WHERE {
  ?uncleMurda dbo:bandMember ?member .
  ?uncleMurda rdfs:label ""Uncle Murda""@en .
}

# Step 2: Find Bobby Shmurda's birth name
SELECT ?birthName WHERE {
  ?bobbyShmurda foaf:name ?birthName .
  ?bobbyShmurda rdfs:label ""Bobby Shmurda""@en .
}

# Step 3: Identify the award and its awardee
SELECT ?awardee WHERE {
  ?award dbo:recipient ?band .
  ?award rdfs:label ?regionLabel .
  FILTER (CONTAINS(?regionLabel, ""state"") && CONTAINS(?regionLabel, ""settlement""))
  ?band dbo:originLocation ?location .
  ?location rdfs:label ""New York (state)""@en .
}

# Step 4: Combine to find the person who fits all criteria
SELECT DISTINCT ?person WHERE {
  VALUES (?member) { ?bandMember }
  VALUES (?birthName) { ?bobbyBirthName }
  VALUES (?awardee) { ?awardRecipient }

  ?person dbo:bandMember ?member .
  ?person foaf:name ?birthName .
  ?person dbo:nativePlace ?location .
  ?location rdfs:label ?regionLabel .
  FILTER (CONTAINS(?regionLabel, ""state"") && CONTAINS(?regionLabel, ""settlement""))
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?award dbo:awardingBody dbr:United_States_Congress ;
         dbo:recipient ?recipient .
  ?recipient dbo:associatedWithWar ?war .
}
```",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?regiment rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  ?conflict dbo:participatedIn ?regiment .
  ?battle rdfs:label ""Battle of Fort Royal""@en ;
          dbo:involvedWith ?force1, ?force2 .
  
  OPTIONAL { ?conflict dbo:commander ?commander . }
  OPTIONAL { ?battle dbo:commander ?commander . }

  ?calderEvent rdfs:label ?eventLabel ;
               dbo:involvedWith ?force3 .
  FILTER regex(?eventLabel, ""Robert Calder"", ""i"") .

  OPTIONAL { ?calderEvent dbo:commander ?commander . }
  
  FILTER (?force1 = ?force3 || ?force2 = ?force3)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fullName ?birthDate ?occupation WHERE {
  ?person rdfs:label ""Caroline Louise Bevan Symonds""@en .
  OPTIONAL { ?person foaf:name ?fullName . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Step 1: Find Commander in Third Taiwan Strait Crisis
SELECT ?commander WHERE {
  ?event dbo:commander ?commander .
  ?event rdfs:label ""Third Taiwan Strait Crisis""@en .
}

# Step 2: Find Work by Bill Clinton
SELECT ?work WHERE {
  ?work dbo:author ?billClinton .
  ?billClinton rdfs:label ""Bill Clinton""@en .
  ?work rdf:type dbo:Book .
}

# Step 3: Find Spouse of the Author (Politician/Office Holder)
SELECT ?spouse WHERE {
  ?author dbo:spouse ?spouse .
  ?author rdfs:label ""Bill Clinton""@en .
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolder true .
}

# Step 4: Find Work by Hillary Clinton
SELECT ?work WHERE {
  ?work dbo:author ?hillaryClinton .
  ?hillaryClinton rdfs:label ""Hillary Clinton""@en .
  ?work rdf:type dbo:Book .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?margareteSophie rdfs:label ""Archduchess Margarete Sophie of Austria""@en .
  ?margareteSophie dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?annSothern rdfs:label ""Ann Sothern""@en .
  ?annSothern dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?claimToFame WHERE {
  # Find the actor of ""Johnny Doughboy""
  ?actor dbo:actorIn ?work1 .
  ?work1 rdfs:label ""Johnny Doughboy""@en .

  # Find the producer of A Star Is Born (1937)
  ?producer dbo:producerOf ?work2 .
  ?work2 rdfs:label ""A Star Is Born (1937 film)""@en .

  # Identify common person
  FILTER (?actor = ?producer)

  # Get claim to fame
  ?person dbo:claimToFame ?claimToFame .
  BIND(?actor AS ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character ?alterEgo WHERE {
  ?gibson rdfs:label ""Walter B. Gibson""@en .
  ?gibson dbo:creator ?character .
  ?character dbo:alterEgo ?alterEgo .
}
```",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?birthPlaceLabel WHERE {
  { 
    ?vince rdfs:label ""Vince Gilligan""@en .
    ?vince dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    BIND(""Vince Gilligan"" AS ?personLabel)
  }
  UNION
  { 
    ?glenn rdfs:label ""Glenn Youngkin""@en .
    ?glenn dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    BIND(""Glenn Youngkin"" AS ?personLabel)
  }
}
```",4,4,5,3,2,3,3,71,0,3,1,0.0,0.0,0
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?mary rdfs:label ""Hon. Mary Frances Bowes-Lyon""@en .
  ?mary dbo:parent ?parent .
  ?parent dbo:nativePlace ?place .
  FILTER (STR(?place) = ""Middlesex"")
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce ?event ?societalEvent ?awardee ?conflict WHERE {
  # Step 1: Identify William Bayne
  ?williamBayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  
  # Step 2: Find his military force
  ?williamBayne dbo:militaryForce ?militaryForce .

  # Step 3: Find events related to this military force that are societal events
  ?event rdf:type dbo:Event ;
         dbo:associatedWith ?militaryForce .
  ?societalEvent rdf:type dbo:SocietalEvent ;
                 rdfs:label ?eventLabel .
  
  # Step 4: Identify the awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:awardedBy <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> .

  # Step 5: Determine the military conflict associated with this awardee
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:associatedWith ?awardee .
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?ada rdfs:label ""Ada Watson""@en .
  ?ada dbo:predecessor ?predecessor .
  
  OPTIONAL { 
    ?predecessor dbo:officeLocation ?location .
    FILTER(CONTAINS(LCASE(STR(?location)), ""melbourne""))
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child ?father WHERE {
  ?francis rdfs:label ""Francis I, Duke of Lorraine""@en .
  ?francis dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:spouse ?spouse . # To check if the child has a spouse, indicating royalty
  }
  
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?team WHERE {
  # Step 1: Find Marcelo Sarmiento's birthdate
  ?marcelo rdfs:label ""Marcelo Sarmiento""@en .
  ?marcelo dbo:birthday ?birthday .

  # Step 2: Find an athlete born on 1955-02-22
  ?athlete dbo:birthdayLiteral ""1955-02-22""^^xsd:date ;
           a dbo:Athlete .

  # Step 3: Find a soccer player and manager born on the same date as Marcelo Sarmiento
  ?soccerPerson dbo:birthday ?birthday ;
                a dbo:SoccerPlayer, dbo:SoccerManager .

  # Step 4: Retrieve the team of this person
  ?soccerPerson dbp:team ?team .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ferdinand rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .
  ?ferdinand dbo:child ?child .

  OPTIONAL { 
    ?child dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""general""))
  }

  OPTIONAL {
    ?child dbo:wikiPageWikiLink ?war .
    FILTER(CONTAINS(LCASE(STR(?war)), ""thirty years war""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?commander dbo:event dbpedia:Siege_of_Padua .
  ?commander dbo:child ?child .
  ?child a dbo:Monarch .

  FILTER EXISTS { ?child dbp:spouse ?catherine . }
  FILTER EXISTS { ?catherine rdfs:label ""Catherine of Austria, Queen of Portugal""@en . }

  FILTER EXISTS { ?child dbp:spouse ?isabella . }
  FILTER EXISTS { ?isabella rdfs:label ""Isabella of Austria""@en . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?person rdfs:label ""Alberto Núñez Feijóo""@en .
  ?person dbo:office ?office .
  
  FILTER (
    EXISTS { ?office dbo:location ?location1 . ?location1 rdfs:label ""Santiago de Compostela""@es }
    || EXISTS { ?office dbo:location ?location2 . ?location2 rdfs:label ""Spain""@en }
  )
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?settlement WHERE {
  # Step 1 & 2: Find Henry Clay Lewis's birthplace
  ?henry rdfs:label ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .

  # Step 3: Ensure the birthplace is a settlement and in America
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Step 4 & 5: Find Amasa Tracy and the Gillmore Medal awardee
  ?amasa rdfs:label ""Amasa Tracy""@en .
  ?gillmoreAwardee dbo:awardedBy ?amasa ;
                   dbo:award dbr:Gillmore_Medal .

  # Step 6: Find the war associated with the Gillmore Medal awardee
  ?gillmoreAwardee dbo:servedIn ?war .

  # Step 7: Ensure the settlement is the same as the birthplace of Henry Clay Lewis
  FILTER(?birthPlace = ?settlement)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?person dbo:awardeeOf dbp:KnightCommanderOrderOfTheBath .
  ?person dbo:militaryForce ?force1 .
  ?battle dbo:participant ?person .
  FILTER(?battle = dbp:BattleOfFortRoyal) .

  ?event a dbo:SocietalEvent ;
         dbo:relatedMilitaryForce ?militaryForce .

  ?person dbo:event ?event .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?bobby rdfs:label ""Bobby Shmurda""@en .
  ?bobby dbo:birthName ?birthName .
  
  ?artist dbo:associatedBandMember ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .
  ?bandMember dbo:musicalArtist ?person .
  ?person dbo:memberOfGroup ?gs9 .
  ?gs9 rdfs:label ""GS9""@en .
  
  ?person dbo:nativePlace ?place .
  ?place rdfs:label ""Florida""@en .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?actor WHERE {
  ?song rdfs:label ""What You Know""@en .
  ?song dbo:fromAlbum ?album .
  ?album dbo:artist ?artist .
  ?artist a dbo:Actor .
}

SELECT ?actor WHERE {
  ?shelbyOaks rdfs:label ""Shelby Oaks""@en .
  ?shelbyOaks dbo:actor ?actor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?miguelOffice ?marianoOffice ?albertoResidence WHERE {
  # Find the office of Miguel Maura
  ?miguel rdfs:label ""Miguel Maura""@en .
  ?miguel dbo:office ?miguelOffice .

  # Find the office of Mariano Rajoy
  ?mariano rdfs:label ""Mariano Rajoy""@en .
  ?mariano dbo:office ?marianoOffice .

  # Find the residence of Alberto Ruiz-Gallardón
  ?alberto rdfs:label ""Alberto Ruiz-Gallardón""@en .
  ?alberto dbo:residence ?albertoResidence .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?athlete ?soccerActor WHERE {
  # Find Marty Pollio's birthday
  ?marty rdfs:label ""Marty Pollio""@en .
  ?marty dbo:birthday ?birthday .

  # Find an athlete born on the same day as Marty Pollio
  ?athlete dbo:birthday ?sameBirthday ;
           a dbo:Athlete .
  FILTER (?sameBirthday = ?birthday)

  # Find a soccer player and actor from ""All or Nothing: Manchester City""
  ?show rdfs:query ""All or Nothing: Manchester City""@en .
  ?soccerActor dbo:actorIn ?show ;
               a dbo:SoccerPlayer, dbo:Actor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?war rdfs:label ""Central African Republic Civil War""@en .
  ?war dbo:commander ?commander .
  ?commander a dbo:OfficeHolder ;
             a dbo:Politician .
}
```",1,3,2,1,1,3,3,71,179,0,0,1.0,1.0,1.0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:country dbc:India .
  ?movie dbo:starring ?dipankarDe .
  ?dipankarDe rdfs:label ""Dipankar De""@en .
  ?movie dbo:starring ?actor .
  FILTER(?actor != ?dipankarDe)
}
```",2,4,3,2,1,3,2,20,0,0,17,0,0.0,0
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Find the actor of ""Paradise"" (2013)
  ?paradiseFilm rdfs:label ""Paradise""@en .
  FILTER(STRSTARTS(STR(?paradiseFilm), STR(<http://dbpedia.org/resource/Paradise_(2013_film)>)))
  ?paradiseFilm dbo:starring ?actor .

  # Find Janusz Kamiński's spouse
  ?kaminski rdfs:label ""Janusz Kamiński""@en .
  ?kaminski dbo:spouse ?spouse .

  # Check if the actor has worked with Audrey Hepburn
  ?hepburnFilm dbo:starring ?actor, <http://dbpedia.org/resource/Audrey_Hepburn> .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Query for Actors in ""Always"" (1989 Film)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdfs:label ""Always""@en .
  FILTER (YEAR(?film) = 1989)
  ?film dbo:starring ?actor .
}

# Query for a Movie Featuring Iliza Shlesinger and Its Actor
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?actor WHERE {
  ?iliza rdfs:label ""Iliza Shlesinger""@en .
  ?film dbo:starring ?iliza .
  ?film rdfs:label ?movieLabel .
  FILTER (lang(?movieLabel) = 'en')
  ?film dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  # Identify Elvira of Castile and her children who are royalty
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .
  ?elvira dbo:child ?child .
  
  # Ensure the child is a royal figure
  ?child rdf:type dbo:Monarch .

  # Check if this child is the father of William I of Sicily
  ?child dbo:spouse ?williamMother .
  ?williamMother dbo:child ?williamI .
  ?williamI rdfs:label ""William I of Sicily""@en .

  # Identify Roger III and his parent(s)
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  ?parent dbo:child ?rogerIII .

  # Find the common child
  ?commonChild rdf:type dbo:Monarch .
  ?commonChild dbo:spouse ?williamMother .
  ?commonChild dbo:child ?rogerIII .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation = 20.116800000000001347) .
  
  ?location dbo:containsLandmark ?landmark .
  
  ?government dbp:governmentType ""parliamentary""@en ;
              dbo:country ?location .
  
  ?party dbo:memberOfGovernment ?government ;
         a dbo:PoliticalParty .
  
  ?partyMember dbo:memberOf ?party .
}
```",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist ?profession WHERE {
  ?album rdfs:label ""The Live Anthology""@en .
  ?album dbo:artist ?artist .
  ?artist dbo:occupation ?profession .
}
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?abstract WHERE {
  ?nickCurran rdfs:label ""Nick Curran""@en .
  ?nickCurran dbo:abstract ?abstract .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = 20.1168)
}
```",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?film rdfs:label ""The Adventures of Tom Sawyer (1938 film)""@en .
  ?film dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?tracy rdfs:label ""Amasa Tracy""@en .
  ?tracy dbo:birthPlace ?birthplace .
  
  ?birthplace rdf:type ?settlementType .
  FILTER (?settlementType IN (dbo:Settlement, dbo:City)) .

  OPTIONAL { 
    ?birthplace dbo:country dbr:United_States .
  }

  ?tracy dbo:participatedIn ?war .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?historicalFigure WHERE {
  # Find Lamont Cranston and his alter ego, The Shadow
  ?lamont rdfs:label ""Lamont Cranston""@en .
  ?lamont dbo:alias ?alterEgo .
  FILTER(CONTAINS(LCASE(?alterEgo), ""the shadow""))

  # Find Dawit I's child who is also Baeda Maryam I's father (Zara Yaqob)
  ?dawit rdfs:label ""Dawit I""@en .
  ?zara dbo:childOf ?dawit ;
        dbo:parentOf ?baedaMaryam .
  ?baedaMaryam rdfs:label ""Baeda Maryam I""@en .
  BIND(?zara AS ?historicalFigure)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?deathPlace WHERE {
  { 
    ?film dbo:title ""Color Me Dead""@en .
    ?film dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace } .
  }
  UNION
  {
    ?film dbo:title ""The Sky Ranger (1928 film)""@en .
    ?film dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace } .
  }
}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  # The Shadow's Alter Ego Actor
  { 
    ?shadow rdfs:label ""The Man Who Laughs""@en .
    ?adaptation dbo:character ?shadow .
    ?adaptation dbo:actor ?actor .
  }
  
  UNION
  
  # Actor of the Movie with ""What You Know""
  {
    ?movie rdfs:label ?title .
    FILTER(CONTAINS(LCASE(?title), ""what you know"")).
    ?movie dbo:actor ?actor .
  }

  UNION

  # Actor of the Album of What You Know (T.I. song)
  {
    ?album rdfs:label ""Paper Trail""@en .
    ?song dbo:album ?album ;
          rdfs:label ""What You Know""@en .
    ?album dbo:performer ?artist .
    OPTIONAL { ?movie dbo:performer ?artist ; dbo:actor ?actor . }
  }
}
```",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?nickCurran rdfs:label ""Nicholas Michael Curran""@en .
  ?nickCurran dbo:associatedBand ?associatedArtist .
  FILTER(CONTAINS(LCASE(STR(?associatedArtist)), 'fabulous thunderbirds'))
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia-settlement: <http://dbpedia.org/resource/Settlement>

SELECT ?christianIXAdmin ?olafIAdmin ?deathPlace ?administeredTerritory WHERE {
  # Find Christian IX of Denmark and his administration
  ?christianIX dbo:reign ?period .
  ?christianIX rdfs:label ""Christian IX of Denmark""@en .
  
  # Find Olaf I of Denmark and his administration
  ?olafI dbo:reign ?period2 .
  ?olafI rdfs:label ""Olaf I of Denmark""@en .

  # Identify Christian Ditlev Ammentorp Hansen's death place
  ?hansen dbo:deathPlace ?deathPlace .
  ?hansen rdfs:label ""Christian Ditlev Ammentorp Hansen""@en .

  # Check if the death place is a settlement
  ?deathPlace rdf:type dbpedia-settlement:Settlement .

  # Find territories administered from that settlement
  ?administeredTerritory dbo:administrativeCenter ?deathPlace .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?ada rdfs:label ""Ada Watson""@en .
  ?ada dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movie WHERE {
  ?person dbo:deathPlace ?place .
  FILTER (str(?place) = ""Los Angeles, California"")
  
  # Find movies associated with the person
  OPTIONAL { ?person dbo:filmography ?movie . }
  OPTIONAL { ?movie dbp:starring ?person . }

  # Ensure that a movie is selected
  FILTER EXISTS { ?movie a dbo:Film }
}
```",2,3,3,2,1,3,3,71,0,0,6475,0,0.0,0
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?antonios rdfs:label ""Antonios Varthalitis""@en .
  ?antonios dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Identify the writer of ""No Alternative""
  ?album dbo:title ""No Alternative""@en .
  
  # Step 2: Find band members associated with this album
  ?album dbo:bandMember ?member .

  # Step 3: For each member, find their associated musical artists
  ?member dbp:associatedMusicalArtist ?associatedArtist .

  # Step 4: Ensure the associated artist is also an artist
  ?associatedArtist a dbo:Artist .

  # Step 5: Check for association with R.E.M.
  OPTIONAL { ?associatedArtist dbo:bandMember <http://dbpedia.org/resource/R.E.M.> }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?childOfChild WHERE {
  # Step 1: Find children of Archduke Charles Louis of Austria
  ?charles dbo:child ?child .
  FILTER(CONTAINS(LCASE(?charles), ""archduke charles louis of austria""))

  # Step 2: Identify the royalty among these children
  ?child rdfs:label ?royalChildLabel .
  FILTER(STRSTARTS(LCASE(?royalChildLabel), ""a royal title"")) 

  # Step 3: Find predecessor (older sibling) of this royal child
  ?charles dbo:child ?predecessor .
  ?predecessor dbo:birthday ?predecessorBirth .
  ?child dbo:birthday ?childBirth .
  FILTER(?predecessorBirth < ?childBirth)

  # Step 4: Find spouse and children of Archduchess Helena of Austria
  ?helena dbo:spouse ?spouse .
  FILTER(CONTAINS(LCASE(?helena), ""archduchess helena of austria""))
  
  ?spouse dbo:child ?spouseChild .

  # Step 5:",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?campaign dbo:commander ?commander .
}

SELECT ?militaryForce WHERE {
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .
  ?campaign dbo:militaryConflict ?war .
  ?war dbo:participatingMilitaryUnit ?militaryForce .
}

SELECT ?force WHERE {
  ?bayne rdfs:label ""William Bayne (Royal Navy officer)""@en .
  ?bayne dbo:militaryService ?service .
  ?service dbo:participatingMilitaryUnit ?force .
}

SELECT ?force WHERE {
  ?battle rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle dbo:participatingMilitaryUnit ?force .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?successor ?writer WHERE {
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?jeanBaptist dbo:commanderOf ?war .
  
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""war"") && CONTAINS(LCASE(?warLabel), ""tv show""))

  ?yuriiKhmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .
  ?yuriiKhmelnytsky dbo:succeededBy ?successor .

  ?alwaysTheLoveSongs rdfs:label ""Always the Love Songs""@en .
  ?alwaysTheLoveSongs dbo:author ?writer .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorShelbyOaks ?actorAlbum ?professionalShadow WHERE {
  # Actor of Shelby Oaks
  ?shelbyOaks rdfs:label ""Shelby Oaks""@en .
  ?shelbyOaks dbo:actor ?actorShelbyOaks .

  # Actor of the album of What You Know (T.I. song)
  ?album rdfs:label ?albumLabel .
  FILTER(CONTAINS(LCASE(?albumLabel), ""what you know"") && CONTAINS(LCASE(?albumLabel), ""t.i."")) .
  ?album dbo:performer ?actorAlbum .

  # Professional in the alter ego of The Shadow
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?professionalShadow .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?william rdfs:label ""William I of Sicily""@en .
  ?elvira rdfs:label ""Elvira of Castile, Queen of Sicily""@en .

  # Find children of William and Elvira
  { ?william dbo:child ?child . }
  UNION
  { ?elvira dbo:child ?child . }

  # Ensure the child is royalty
  OPTIONAL { ?child dbo:monarch ?monarchy . FILTER(?monarchy != '') }

  # Return distinct children who are royalty
  FILTER(BOUND(?monarchy))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?decedent WHERE {
  ?markTournier rdfs:label ""Mark Tournier""@en .
  ?markTournier dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement .

  ?decedent dbo:birthPlace ?birthPlace .
  ?ancestor dbo:child ?decedent .
  ?ancestor ?relation ?markTournier .
}
```",2,3,3,2,1,2,2,9,0,0,809,0,0.0,0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?constance rdfs:label ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouse .
  FILTER EXISTS { 
    ?spouse rdf:type ?royaltyType .
    VALUES ?royaltyType { 
      dbo:Monarch 
      dbo:RoyalFamilyMember
      # Add other relevant royalty classes if necessary
    }
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?williamI rdfs:label ""William I of Sicily""@en .
  ?child dbo:parent ?williamI ;
         rdfs:label ?childLabel .

  ?rogerII rdfs:label ""Roger II of Sicily""@en .
  ?grandParent dbo:child ?rogerII .

  FILTER EXISTS { ?child dbo:parent ?grandParent . }

  ?father dbo:child ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?jeanBaptist dbo:commander ?commander .

  OPTIONAL { 
    ?war dbo:workExample ?tvShow .
    ?war rdf:type dbo:SocietalEvent .
    FILTER (CONTAINS(LCASE(STR(?tvShow)), ""television show""))
  }
}
```",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor ?birthPlace WHERE {
  ?governor a dbo:Governor ;
           dbo:stateGovernorFor dbp:Virginia .
  OPTIONAL { ?governor dbo:officeHolder ?office . }
  ?governor dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:director ?huerga .
  ?huerga rdfs:label ""Manuel Huerga""@en .

  ?film dbo:starring ?actor .

  OPTIONAL { ?actor dbo:soccerPlayer ?true . FILTER(?true) }
  OPTIONAL { ?actor dbo:athlete ?true . FILTER(?true) }

  FILTER((BOUND(?true)) && (?actor != ?huerga))
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerRole WHERE {
  ?letsch rdfs:label ""Thomas Letsch""@en .
  ?letsch dbo:manager ?managerRole .
  
  OPTIONAL { 
    ?managerRole dbo:team ?club .
    ?club rdfs:label ""VfL Bochum""@en .
  }
  
  FILTER EXISTS {
    ?managerRole dbp:season ?season .
    ?season rdf:type [
      rdf:type dbo:SoccerClubSeason ;
      owl:sameAs dbo:SportsSeason ;
      owl:sameAs dbo:SportsTeamSeason
    ] .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?work rdfs:label ""Always the Love Songs""@en .
  ?work dbo:author ?person .
  
  ?war rdfs:label ""Great Turkish War""@en .
  ?commander dbo:commanderOf ?war .
  ?commander = ?person .

  ?succession dbo:successor ?person .
  ?succession dbo:predecessor dbr:Yurii_Khmelnytsky .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  ?band rdfs:label ""Khlyst""@en .
  ?band dbo:member ?member .
  
  # Ensure the member is also a musical artist
  ?member dbo:artist ?artist .

  # Find associated artists of this member
  ?member dbp:collaboratedWith ?associatedArtist .
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse ?actor WHERE {
  # Step 1: Find Juan Carlos Molina's spouse
  ?juanCarlos rdfs:label ""Juan Carlos Molina (footballer)""@en .
  ?juanCarlos dbo:spouse ?spouse .

  # Step 2: Find films directed by Manuel Huerga
  ?manuelHuerga rdfs:label ""Manuel Huerga""@en .
  ?film dbo:director ?manuelHuerga ;
        a dbo:Film .

  # Step 3: Find actors in those films
  ?film dbo:actor ?actor .

  # Step 4: Filter actors who are also athletes
  ?actor dbo:occupation ?occupation .
  FILTER (?occupation IN (dbo:Athlete, ""Athlete""@en))
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?otherActor WHERE {
  ?work rdfs:label ""Ab Kya Hoga""@en .
  ?work dbo:starring ?actor .
  
  ?actor dbo:profession ?politicianRole .
  FILTER(?politicianRole = <http://dbpedia.org/ontology/Politician>) .

  ?otherWork dbo:starring ?otherActor .
  ?otherActor dbo:profession ?actingRole .
  FILTER(?actingRole = <http://dbpedia.org/ontology/Actor>) .

  FILTER(?actor != ?otherActor)
}
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?season rdfs:label ""2006–07 VfL Bochum season""@en .
  ?season dbo:successor ?successorSeason .
  ?successorSeason a dbo:SoccerLeagueSeason ;
                   dbo:team ?team .
  ?team a dbo:SoccerClub, dbo:SportsTeam, dbo:Organization .
  ?successorSeason dbo:manager ?manager .
}
```",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?work WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:officeHolder ?office ;
             dbo:work ?work .
  
  # Filter for the Korean conflict period
  ?event dbo:dateStart ?startDate ;
         dbo:dateEnd ?endDate ;
         dbo:place dbr:Korean_War .

  FILTER (?startDate <= ""1953-07-27""^^xsd:date && ?endDate >= ""1950-06-25""^^xsd:date)
  
  # Ensure the commander was involved in the Korean conflict
  ?commander dbo:participatedIn ?event .
}
```",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?person .
  ?person rdfs:label ""Vince Gilligan""@en .
  ?award dbo:recipient ?awardee .
}

SELECT ?birthPlace WHERE {
  ?ceceBell rdfs:label ""Cece Bell""@en .
  ?ceceBell dbo:birthPlace ?birthPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?polandEntity ?war ?tvShow WHERE {
  ?maria rdfs:label ""Maria I of Portugal""@en .
  
  # Find the commander associated with Maria I
  ?maria dbo:commander ?commander .

  # Link the commander to an entity in Poland and a war
  ?commander dbo:country ?polandEntity ;
             dbo:militaryConflict ?war .

  OPTIONAL {
    ?tvShow dbo:depicts ?commander .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceEntity ?warEntity WHERE {
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?elena rdfs:label ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?elena dbo:birthPlace ?birthPlaceEntity .

  # Find the war Alexander Lvovich Davydov participated in
  ?davydov rdfs:label ""Alexander Lvovich Davydov""@en .
  ?davydov dbo:participatedInWar ?warEntity .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?choir dbo:award ?award .

  FILTER EXISTS { ?award dbo:region ?region . }
  FILTER EXISTS { ?award dbo:country <http://dbpedia.org/resource/United_States> . }
  FILTER EXISTS { ?award dbo:stateOrProvince ?state . }
  FILTER EXISTS { ?award dbo:settlement ?settlement . }
}
```",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  VALUES ?person { 
    (dbr:Stuart_Tosh) 
    (dbr:Billy_Lyall)
  }
  
  ?person rdfs:label ?name .
  FILTER (
    (?name = ""Stuart Tosh""@en || ?name = ""Billy Lyall""@en)
  )
  
  OPTIONAL { ?person dbo:associatedBand ?artist . }
  OPTIONAL { ?person dbo:memberOfBand ?artist . }

  FILTER EXISTS { ?artist a dbo:MusicalArtist . }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Identify Minye Kyawswa
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  
  # Find his child
  ?child dbo:parent ?minyeKyawswa .

  # Find the parent of that child (grandchild of Minye Kyawswa)
  ?parentOfChild dbo:child ?child .

  # Identify Myat Hpone Pyo and find his father
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?father dbo:child ?myatHponePyo .

  # Ensure the father is the same as the parent of Minye Kyawswa's grandchild
  FILTER(?parentOfChild = ?father)

  # Find the spouse of that father, ensuring they are royalty
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?yeJiaPlayer ?laiSunCheungPlayer WHERE {
  ?yeJia rdfs:label ""Ye Jia""@en .
  ?yeJia dbo:player ?yeJiaPlayer .

  ?laiSunCheung rdfs:label ""Lai Sun Cheung""@en .
  ?laiSunCheung dbo:player ?laiSunCheungPlayer .
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
# Query for members of the Republican Party
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:partyMember dbr:Republican_Party_(United_States) .
}

# Query for a person born as Ann Sothern
PREFIX dbo: <http://dbpedia.org/ontology/>
  
SELECT ?person WHERE {
  ?person dbo:birthName ""Ann Sothern""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?author rdfs:label ""Cece Bell""@en .
  ?author dbo:nationality dbr:United_States .
  ?author dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?roger rdfs:label ""Roger III, Duke of Apulia""@en .
  ?parent dbo:child ?roger .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,7,0,0,1.0,1.0,1.0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu
  ?sawMinPhyu rdfs:label ""Saw Min Phyu""@en .
  
  # Step 2: Find Spouse of Saw Min Phyu
  ?sawMinPhyu dbo:spouse ?spouse .
  
  # Step 3: Identify Child of the Spouse who is royalty
  ?spouse dbo:child ?royaltyChild .
  ?royaltyChild a dbo:RoyalFamilyMember ;
                rdfs:label ?childLabel .
  FILTER (CONTAINS(LCASE(?childLabel), ""royalty""))
  
  # Step 4: Find Parent of Minye Kyawswa
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:parent ?parentOfMinye .
  
  # Step 5: Identify Child of the Parent of Minye Kyawswa
  ?parentOfMinye dbo:child ?childOfParent .
  
  # Step 6: Find Predecessor of the Royalty's Child
  ?royaltyChild dbo:predecessor ?predecessor .
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?philipp rdfs:label ""Duke Philipp of Württemberg""@en .
  ?philipp dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?band rdfs:label ""Burnt by the Sun""@en .
  ?band a dbo:Band ;
        dbo:member ?bandMember .
}
```",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Query for Rod Argent's Profession
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?rodArgent rdfs:label ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .
}

# Query for $pacely's Birth Name
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?pacely rdfs:label ""$pacely""@en .
  ?pacely foaf:name ?birthName .
}

# Query for Associated Musical Artist Using Birth Name
PREFIX dbo: <http://dbpedia.org/ontology/>
 
SELECT ?artist WHERE {
  ?person foaf:name ?birthName .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?war WHERE {
  ?awardee dbo:award ?golden_sword .
  ?golden_sword rdfs:label ""Golden Sword for Bravery""@en .
  ?awardee dbo:participatedInWar ?war .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?williamI rdfs:label ""William I""@en .
  ?rogerIII rdfs:label ""Roger III, Duke of Apulia""@en .
  
  ?parent dbo:child ?rogerIII .
  ?parent dbo:child ?reference .

  ?reference dbo:officeHolder ?office .
  ?reference dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandParent WHERE {
  ?charles rdfs:label ""Charles I of Hungary""@en .
  ?charles dbo:father ?father .
  
  # Ensure the father is royalty
  OPTIONAL { ?father dbo:kingOf ?country . }
  
  ?father dbo:parent ?grandParent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Birth place of a Governor of Virginia
  ?governor rdfs:label ""Governor of Virginia""@en .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Awardee of Vince Gilligan's award (assuming Emmy Awards)
  ?award rdfs:label ""Emmy Award""@en .
  ?awardee dbo:recipientOfAward ?award .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
  
  ?war dbo:militaryUnit ?regiment ;
       a dbo:SocietalEvent ;
       dbo:adaptation ?tvShow .

  ?war dbo:commander ?commander .
}
```",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?teamLabel ?manager WHERE {
  { 
    ?vitesse rdfs:label ""SBV Vitesse""@en .
    ?vitesse dbo:manager ?manager .
    OPTIONAL { ?vitesse dbo:sportSeason ?season . FILTER (STRSTARTS(STR(?season), ""2020-21"") || STRSTARTS(STR(?season), ""2021-22"")) }
  } UNION {
    ?bochum rdfs:label ""VfL Bochum""@en .
    ?bochum dbo:manager ?manager .
  }
  SERVICE <http://dbpedia.org/sparql> { 
    ?team rdfs:label ?teamLabel .
  }
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
# Predecessor of Myat Hpone Pyo
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?myatHponePyo rdfs:label ""Myat Hpone Pyo""@en .
  ?myatHponePyo dbo:predecessor ?predecessor .
}

# Spouse of Saw Shwe Khet
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?sawShweKhet rdfs:label ""Saw Shwe Khet""@en .
  ?sawShweKhet dbo:spouse ?spouse .
}

# Child of the Parent of the Child of Minye Kyawswa
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .
  ?minyeKyawswa dbo:child ?firstChild .
  ?firstChild dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  ?frederick rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  
  # Find his children who are politicians
  ?child dbo:parent ?frederick ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Identify Victor Stanley (Royal Navy officer)
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .

  # Find the parent of Victor Stanley
  ?parent dbo:child ?victor ;
          rdf:type dbo:Person .
  
  # Determine if this politician child is also a child of Victor Stanley's parent
  ?politicianChild dbo:parent ?parent .

  # The father we are looking for should be common to both the politician child and Victor Stanley
  ?father dbo:child ?politicianChild ;
          dbo:child ?victor .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
