id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Alexander II, Grand Duke of Finland's native country
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nativeCountry ?country1 .

  # Sandro Bertaggia's birthplace must be a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  FILTER( ?birthPlace rdf:type dbo:Country )
  
  # Nicholas II of Russia's native country
  dbr:Nicholas_II_of_Russia dbo:nativeCountry ?country2 .

  # Ensure the birthplace is the same as Alexander II's native country and Nicholas II's native country
  FILTER(?country1 = ?birthPlace)
  FILTER(?country1 = ?country2)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region,_Ghana .
  
  OPTIONAL { ?person foaf:name ?birthName . }
  
  OPTIONAL { 
    ?person dbo:profession dbr:Writer ;
            dbo:musicalArtistOf dbr:The_Live_Anthology .
  }

  OPTIONAL {
    ?association dbo:associatedMusicalArtist ?person ;
                 dbo:associatedMusicalArtist dbr:$pacely .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Find the professional associated with ""The Shadow""
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  ?professional dbo:alterEgo ?shadow .

  # Identify the actor of the film ""Lasso the Moon""
  ?lassoMoon a dbo:Film ;
             foaf:name ""Lasso the Moon""@en .
  ?actor dbo:starring ?lassoMoon .

  # Determine Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?bouralyProfession .
  
  # Find a professional in that field
  ?professional dbo:profession ?bouralyProfession .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Find USS Arcadia's owner
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Find Bill Clinton's authored works
  dbr:Bill_Clinton dbo:author ?billWork .
  
  # Identify Hillary Clinton as spouse of Bill Clinton and find her authored work
  ?hClinton a dbo:Person ;
            foaf:name ""Hillary Rodham Clinton""@en ;
            dbo:spouse dbr:Bill_Clinton .

  ?hClinton dbo:author ?hillaryWork .

  # Find the commander in the war that is both a disease and societal event
  ?war a dbo:Disease, dbo:SocietalEvent .
  ?war dbo:commander ?commander .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?author a dbo:Person ;
          dbo:author dbr:An_Invitation_to_the_White_House ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolder true ;
          dbo:commanderInWar ?war .

  ?owner dbo:owns dbr:USS_Arcadia_(ID-1605) .
  
  ?work a dbo:WrittenWork, dbo:Book ;
        dbo:author ?author .

  OPTIONAL { ?author dbo:spouse ?spouse . }
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?targetPerson WHERE {
  # Constance of Burgundy's spouse and their child who is royalty
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  OPTIONAL { ?childOfSpouse dbo:parent ?spouse . }
  FILTER(?childOfSpouse a dbo:RoyalFamilyMember)

  # This child's parent should be the father of William I of Sicily's royal child
  OPTIONAL { ?royalChild dbr:William_I_of_Sicily dbo:child ?father . }
  FILTER(?father = ?spouse)
  FILTER(?royalChild a dbo:RoyalFamilyMember)

  # This person is also a child of the parent of Roger II of Sicily's royal child
  OPTIONAL { ?parentOfRogerChild dbr:Roger_II_of_Sicily dbo:child ?grandParent . }
  OPTIONAL { ?targetPerson dbo:parent ?grandParent . }
  FILTER(?targetPerson = ?royalChild)
  FILTER(?targetPerson a dbo:RoyalFamilyMember)

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Birthplace of an actor from an Indian movie featuring Dipankar De
SELECT DISTINCT ?actorBirthPlace WHERE {
  ?movie a dbo:Film ;
         dbo:country dbr:India ;
         dbo:starring dbr:Dipankar_De .
  
  ?movie dbo:actor ?actor .
  
  ?actor dbo:birthPlace ?actorBirthPlace .
}

UNION

# Part 2: Birthplace of an awardee of the Sangeet Natak Akademi Fellowship
SELECT DISTINCT ?awardeeBirthPlace WHERE {
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship ;
          dbo:birthPlace ?awardeeBirthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?host WHERE {
  # Find awardees of the Nobel Prize in Physics and their awards
  ?nobelPrize a dbo:NobelPrizeInPhysics ;
              dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:award ?award . }

  # Find the host institution for the Nobel Prize in Physics
  ?nobelPrize dbo:hostedBy ?host .

  # Ensure the host is an educational institution
  FILTER(?host rdf:type dbo:EducationalOrganization)
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?authorName WHERE {
  ?person a dbo:Person ;
          foaf:name ?authorName .

  OPTIONAL { 
    ?koreanConflict dbo:commander ?person .
    ?work dbo:writtenWork ?person .
  }

  OPTIONAL {
    ?americanBook dbo:author ?person ;
                  dbo:nationality dbr:United_States .
  }

  OPTIONAL {
    ?northCarolinaGuard dbo:politician ?person .
  }
}
```",6,15,7,3,2,3,2,20,0,1048541,1,0.0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  # Find the Nobel Prize in Physics associated with Rainer Weiss
  dbr:Nobel_Prize_in_Physics_2017 dbo:recipient dbr:Rainer_Weiss .
  
  # Identify a show hosted by an educational institution
  ?host a dbo:EducationalOrganization ;
        dbo:host ?show .

  # Connect the host to the award through some relationship (hypothetical)
  OPTIONAL { ?host dbo:award dbr:Nobel_Prize_in_Physics_2017 }
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the death place of John McDermott (American artist)
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find the war commanded by George Pickett
  dbr:George_Pickett dbo:commanderInWar ?war .

  # Ensure the war is a societal event
  ?war a dbo:SocietalEvent .

  # Find the ruling party of the political party and organization in the death place
  ?politicalParty a dbo:PoliticalParty ;
                  dbo:location ?deathPlace .
  
  OPTIONAL { ?politicalParty dbo:rulingParty ?rulingParty . }
  
  # Get members of the ruling party
  ?partyMember dbo:memberOf ?rulingParty .

}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:parent ?fatherOfCecilia .

  # Archduke Charles Joseph of Austria's parent and commander in the war
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharles .
  ?commander a dbo:MilitaryPerson ;
             dbo:role ""Commander""@en ;
             dbo:child ?parentOfCharles .

  # The father of Cecilia Renata is also the commander's child
  FILTER(?fatherOfCecilia = ?commander)

  # Child of this identified father
  ?fatherOfCecilia dbo:child ?child .

  # Societal event, event, and television show related to Algerian War
  ?event a dbo:SocietalEvent ;
         dbo:event ""Algerian War""@en .
  
  ?televisionShow a dbo:TelevisionShow ;
                  dbo:relatedEvent ?event .

  # Military force involved in the Algerian War
  ?militaryForce a dbo:MilitaryForce ;
                 dbo:involvedIn ?algerianWar .

  FILTER(?child = ?televisionShow)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Maria Anna of Bavaria (born 1574)
  dbr:Maria_Anna_of_Bavaria_(1574) dbo:child ?mariaChild .
  
  # Child's father, ensuring it is royalty
  ?mariaChild dbo:parent ?fatherOfMariaChild .
  ?fatherOfMariaChild a dbo:RoyalFamilyMember .

  # Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:child ?charlesChild .
  
  # Parent of the child's parent (grandparent)
  ?charlesChild dbo:parent ?parentOfCharlesChild .
  ?parentOfCharlesChild dbo:parent ?grandparentOfCharles .

  # Find a commander in the Thirty Years' War
  ?commander a dbo:Person ;
             dbo:memberOf ?war .
  ?war rdfs:label ""Thirty Years' War""@en .

  # Linking relationships
  FILTER(?fatherOfMariaChild = ?grandparentOfCharles)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria and her child
  dbr:Maria_Anna_of_Bavaria (dbo:child|dbo:parent) ?mariaChild .
  
  # The father of Maria's child who is royalty
  ?mariaChild dbo:parent ?fatherOfMariaChild .
  ?fatherOfMariaChild a dbo:RoyalFamilyMember .

  # This person must be a commander in the Algerian War
  ?commanderInWar a dbo:MilitaryPerson ;
                  dbo:commanderOf dbr:Algerian_War ;
                  foaf:name ?name .
  
  FILTER(?fatherOfMariaChild = ?commanderInWar)

  # Ferdinand III's child
  dbr:Ferdinand_III,_Holy_Roman_Emperor (dbo:child|dbo:parent) ?ferdinandChild .

  # The child of the commander who is also a child of Ferdinand III
  ?commanderInWar dbo:child ?commonChild .
  ?commonChild dbo:parent ?ferdinandChild .
  
  BIND(?commonChild AS ?child)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?finalSpouse WHERE {
  # Duke Anthony Ulrich of Brunswick
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:child ?dukeChild .
  
  # Ensure the child is royalty
  ?dukeChild a dbo:RoyalFamilyMember .

  # Find the parent who is royalty
  ?dukeParent dbo:parent ?dukeChild .
  FILTER(?dukeParent != dbr:Duke_Anthony_Ulrich_of_Brunswick) .
  
  # Princess Antoinette of Brunswick-Wolfenbüttel
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?princessChild .

  # Ensure the child is royalty
  ?princessChild a dbo:RoyalFamilyMember .

  # Find the spouse of this child
  OPTIONAL { ?princessChild dbo:spouse ?princessSpouse . }

  # Find the spouse of the spouse (final target)
  OPTIONAL { ?princessSpouse dbo:spouse ?finalSpouse . }
  
  # Ensure the parent is royalty
  FILTER(?dukeParent a dbo:RoyalFamilyMember) .
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?entity WHERE {
  ?georgeHCameron a dbo:Person ;
                  foaf:name ""George H. Cameron""@en .
  
  ?georgeHCameron dbo:award ?entity .

  ?georgeSavage a dbo:Politician ;
                foaf:name ""George Savage (politician)""@en .
  
  ?georgeSavage dbo:party ?politicalParty .
  
  ?politicalParty dbo:leader ?leader .
  
  ?leader foaf:based_near ?residence .
  
  FILTER(?entity = ?residence)
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Zakes Mokae's TV shows
  dbr:Zakes_Mokae dbo:profession dbr:Actor ;
                  dbo:workFeaturedIn ?zmShow .

  # Alec Baldwin's role as The Shadow in a TV show
  dbr:Alec_Baldwin dbo:profession dbr:Actor ;
                   dbo:roleName ""The Shadow""@en ;
                   dbo:workFeaturedIn ?shadowShow .

  # Ravi Dubey's role in Ab Kya Hoga and his political career
  dbr:Ravi_Dubey dbo:profession dbr:Actor, dbr:Politician ;
                 dbo:workFeaturedIn dbr:Ab_Kya_Hoga .

  # Find the common TV show that connects these actors
  ?actor dbo:profession dbr:Actor ;
         dbo:workFeaturedIn ?commonShow .

  FILTER(?zmShow = ?shadowShow && ?shadowShow = ?commonShow)
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Maria of Bytom's spouse
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  ?maria dbo:spouse ?spouseMaria .

  # Spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseCharles .
  
  # Find the father of Maria's spouse and check if he is royalty
  ?fatherOfSpouseMaria a dbo:Person ;
                      foaf:name ?spouseName ;
                      dbo:child ?spouseMaria .
  FILTER(STRSTARTS(?spouseName, ""Royal""))

  # Parent of this father (if royalty)
  ?parentOfFather a dbo:Person ;
                  foaf:name ?fatherName ;
                  dbo:child ?fatherOfSpouseMaria .
  FILTER(STRSTARTS(?fatherName, ""Royal""))

  # Child of Charles II's spouse who is royalty
  ?childCharles a dbo:Person ;
                dbo:child ?spouseCharles .
  FILTER(STRSTARTS(?childCharlesLabel, ""Royal""))
  
  # Predecessor of Stephen V of Hungary and his child who is royalty
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  ?royalChild a dbo:Person ;
              foaf:name ?childName ;
              dbo:child ?predecessor .
  FILTER(STRSTARTS(?childName,",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorOfParadise ?commonActor WHERE {
  # Actors of ""Paradise (2013 film)""
  dbr:Paradise_(2013_film) dbo:actor ?actorOfParadise .

  # Movies featuring Audrey Hepburn
  ?movie a dbo:Film ;
         dbo:starring dbr:Audrey_Hepburn .
  
  # Common actors between ""Paradise (2013 film)"" and movies with Audrey Hepburn
  ?commonActor dbo:actor ?movie .
  FILTER(?actorOfParadise = ?commonActor)

  # Spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  OPTIONAL { ?spouse foaf:name ?spouseName }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath ;
          dbo:commanderInMilitaryConflict ?war .
  
  ?war a dbo:MilitaryConflict ;
       dbo:militaryForce ?militaryForce .

  OPTIONAL { ?person foaf:name ""The Triple X's""@en }
  
  ?bayneWar a dbo:MilitaryConflict ;
            dbo:militaryForce ?militaryForce ;
            foaf:name ""William Bayne""@en .
  
  FILTER(?war = ?bayneWar)
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?settlement WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the settlement is American
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Quincy Adams Gillmore's award and associated war
  OPTIONAL {
    dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .
    ?award dbo:war ?war .
  }
  
  # Ensure the settlement is related to both entities
  FILTER(?birthPlace = ?settlement)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find members of GS9 who are both artists and musical artists
  ?gs9Member dbo:memberOfGroup dbr:GS9 ;
             a dbo:MusicalArtist, dbo:Artist .

  # Step 2: Get the birth name of these members
  OPTIONAL { ?gs9Member foaf:name ?birthName . }

  # Step 3: Find a native musical artist from Florida with the same birth name
  ?floridaArtist dbo:nativePlace dbr:Florida ;
                foaf:name ?birthName .

  # Step 4: Determine the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
         a dbo:Region, dbo:State, dbo:Settlement .

  # Step 5: Find the band member of the musical artist linked to this person
  ?bandMember dbo:memberOfGroup ?floridaArtist .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  # Find the resource for Anita Borg Institute Women of Vision Awards
  dbr:Anita_Borg_Institute_Women_of_Vision_Awards dbo:awardRecipient ?awardee .
  
  # Filter awardees who are Japanese
  ?awardee foaf:nationality dbr:Japan .

  # Retrieve the birthplace of these awardees
  ?awardee dbo:birthPlace ?birthPlace .

  # Ensure that the entity is related to a television show (assuming genre or similar property)
  OPTIONAL { ?awardee dbo:genre dbr:Television_show . }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Find predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Find child of the predecessor who is royalty
  ?predecessor dbo:child ?parent .
  ?parent a dbo:RoyalFamily ;
          dbo:child ?childOfChild .

  # Find father of Charles I of Hungary who is royalty
  dbr:Charles_I_of_Hungary dbo:father ?fatherOfCharlesI .
  ?fatherOfCharlesI a dbo:RoyalFamily .

  # Find parent of the father of Charles I of Hungary who is royalty
  ?fatherOfCharlesI dbo:parent ?grandParentOfCharlesI .
  ?grandParentOfCharlesI a dbo:RoyalFamily .

  # Find spouse of the grandparent of Charles I of Hungary
  ?grandParentOfCharlesI dbo:spouse ?spouseOfGrandParent .

  # Find parent of Philip, Despot of Romania who is royalty
  dbr:Philip_Despot_of_Romania dbo:parent ?parentOfPhilip .
  ?parentOfPhilip a dbo:RoyalFamily .

  # Ensure the spouse of the grandparent of Charles I is also the parent of the parent of Philip
  FILTER(?spouseOfGrandParent = ?parentOfPhilip)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?governorBirthPlace ?ceceBellBirthPlace ?awardeeBirthPlace WHERE {
  # Paulus Powell's birth place and its region
  ?paulusPowell a dbo:Person ;
                foaf:name ""Paulus Powell""@en .
  ?paulusPowell dbo:birthPlace ?birthPlace .

  # The region where Paulus Powell was born
  ?region a dbo:Region, dbo:AdministrativeRegion ;
          dbo:location ?birthPlace .

  # Governor of the region
  ?governor a dbo:Person ;
            dbo:governmentRole ?role .
  ?role dbo:officeHolder ?person ;
        dbo:office ?office .
  ?office dbo:administrativeArea ?region .
  OPTIONAL { ?person dbo:birthPlace ?governorBirthPlace }

  # Cece Bell's birth place
  ?ceceBell a dbo:Person ;
            foaf:name ""Cece Bell""@en .
  OPTIONAL { ?ceceBell dbo:birthPlace ?ceceBellBirthPlace }

  # Vince Gilligan's award and its awardee
  ?vinceGilligan a dbo:Person ;
                 foaf:name ""Vince Gilligan""@en .
  ?award a dbo:Award ;
         dbo:recipient ?vinceGilligan .

  ?awardee a dbo:Person ;
           dbo:birthPlace ?awardeeBirthPlace .
  OPTIONAL { ?otherAwardRecipient a dbo:Person ;
                                dbo:recipient ?otherAward ;
                                dbo:birthPlace ?awardeeBirthPlace }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Landmark ;
            dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Determine the ruling party of this location
  ?location dbp:country ?landmark ;
            dbp:rulingParty ?party .
  
  # Find the actor known for ""1,000 Dollars a Minute""
  ?actor foaf:name ""John Travolta""@en ;
         dbo:work ?work .
  FILTER regex(str(?work), ""1,000 Dollars a Minute"", ""i"")
  
  # Identify the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
  
  # Locate Tisha Sterling's parent and identify them by their birth name
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  ?parent dbo:child ?tisha ;
          foaf:birthday ?birthDate .
  OPTIONAL { ?parent foaf:name ?birthName . }
  
  # Combine results to find the common entity
  FILTER(?party = ?spouse)
  FILTER(?spouse = ?birthName)
  
  # Find the party member of the ruling party
  ?member a dbo:Person ;
          dbp:memberOf ?party .
  OPTIONAL { ?member foaf:name ?partyMember . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?singerRole ?bandRole ?fictionalCharacter WHERE {
  # Part for Bob Thompson
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson (musician)""@en .
  
  OPTIONAL { ?bob foaf:name ?birthName . }
  OPTIONAL { ?bob dbo:singerInBand ?singerRole . }
  OPTIONAL { ?bob dbo:memberOfBand ?bandRole . }

  # Part for Walter B. Gibson
  ?walter a dbo:Person ;
          foaf:name ""Walter B. Gibson""@en .
  
  ?creation dbo:creator ?walter ;
            a dbo:FictionalCharacter, dbo:ComicsCharacter .

}
```",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Nat Levine's films
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .
  
  ?film dbo:producer ?natLevine ;
        rdf:type dbo:Film .

  # Actor of the film
  ?actor dbo:actorInFilm ?film ;
         a dbo:Actor .

  # Tisha Sterling's parent and their birth name
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tishaSterling ;
          foaf:birthday ?birthDate .
  
  ?parentBirthName foaf:name ?birthName .

  # Party member of the Republican Party (United States)
  ?partyMember a dbo:Person ;
               dbo:memberOfParty dbr:Republican_Party_(United_States) .

  # Spouse of the actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
  
  FILTER(?birthName = ?parentBirthName && ?parent = ?partyMember)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  # Identify the successor season of ""2006–07 VfL Bochum season""
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succeeds ?successorSeason .
  
  # Find a player in that successor season
  ?player dbo:playsFor ?club ;
          dbo:playsInSeason ?successorSeason .

  # Identify the manager of this player
  ?manager dbo:manages ?team ;
           foaf:birthday ""1968-08-26""^^xsd:date ;
           dbo:nationality dbr:Germany .
  
  # Ensure the team is a soccer club and matches the conditions
  ?team a dbo:SoccerClub ;
        dbo:season ?teamSeason .

  # Link the manager to the player's team season
  ?player dbo:playsInSeason ?teamSeason .

  # Additional filter for sports manager role
  ?manager a dbo:SportsManager .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalChild WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parentOfMargarete .

  # Child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?childOfPhilipp .

  # Predecessor of the child of Philipp Albrecht
  ?predecessor dbo:successor ?childOfPhilipp .

  # Child of the child of the child of Alexander of Württemberg (1804-1881)
  dbr:Aleksander_W%C3%BCrttemberg dbo:child ?grandChild1 .
  ?grandChild1 dbo:child ?grandGrandChild1 .
  ?grandGrandChild1 dbo:child ?greatGreatGrandChild .

  # The final child should be a royalty and related to the above entities
  ?finalChild dbo:parent ?predecessor ;
              dbo:parent ?greatGreatGrandChild ;
              a dbo:RoyalFamilyMember .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandOfPerson ?realNameBandOfKimWilson WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .

  # Identify Nick Curran's real name or persona association
  OPTIONAL { ?nickCurran foaf:name ""Nick Curran""@en .
             ?nickCurran dbo:alias ?realNamePerson . }

  FILTER(?person = ?realNamePerson)

  # Retrieve the band of this person
  ?bandMember dbo:memberOfBand ?bandOfPerson .

  FILTER(?person = ?bandMember)

  # Find Kim Wilson's associated band
  dbr:Kim_Wilson dbo:associatedBand ?bandOfKimWilson .
  
  # Get the real name of the band of Kim Wilson
  OPTIONAL { ?bandOfKimWilson foaf:name ?realNameBandOfKimWilson }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Find the birth place of Paulus Powell that is a region and administrative region
  ?paulusPowell dbo:birthPlace ?region .
  FILTER((?region rdf:type dbo:Region) && (?region rdf:type dbo:AdministrativeRegion))
  
  # Find the governor who is also a politician of this region
  ?governor dbo:governs ?region ;
           a dbo:Politician ;
           dbo:birthPlace ?governorBirthPlace .

  OPTIONAL {
    # Find the American author of El Deafo and their birth place
    dbr:El_Deafo dbo:author ?americanAuthor .
    FILTER((?americanAuthor rdf:type dbo:Person) && (CONTAINS(LCASE(?americanAuthor foaf:name), ""american"")))
    ?americanAuthor dbo:birthPlace ?authorBirthPlace .
  }

  OPTIONAL {
    # Find the birth place of Vince Gilligan
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?bandName ?realName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date ;
          foaf:name ?nickCurran .
  
  OPTIONAL { ?person dbo:associatedBandMember ?band . }
  OPTIONAL { ?band foaf:name ?bandName . }

  ?fabulousThunderbirds a dbo:BandsAndMusicians ;
                       foaf:name ""The Fabulous Thunderbirds""@en .

  ?fabulousThunderbirds dbo:realName ?realName .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandparent WHERE {
  # Princess Muna al-Hussein's royal child and their parent
  ?muna a dbo:Person ;
        foaf:name ""Muna al-Hussein""@en .
  
  OPTIONAL { ?munaChild dbo:child ?muna . }
  FILTER EXISTS { ?munaChild rdf:type dbo:Monarch }

  OPTIONAL { ?munaParent dbo:parent ?munaChild . }
  FILTER EXISTS { ?munaParent rdf:type dbo:Monarch }

  # Princess Aisha bint Faisal's royal child and their parent
  ?aisha a dbo:Person ;
         foaf:name ""Aisha bint Faisal""@en .

  OPTIONAL { ?aishaChild dbo:child ?aisha . }
  FILTER EXISTS { ?aishaChild rdf:type dbo:Monarch }

  OPTIONAL { ?aishaParent dbo:parent ?aishaChild . }
  FILTER EXISTS { ?aishaParent rdf:type dbo:Monarch }

  # Parent of Aisha's royal child's parent
  OPTIONAL { ?grandparent dbo:parent ?aishaParent . }
  FILTER EXISTS { ?grandparent rdf:type dbo:Monarch }

  # Find the common grandparent
  FILTER (?munaParent = ?grandparent)
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Find Allan Arbus and his child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  ?child dbo:parent ?allanArbus .

  # The child is an actor in a movie/work
  ?actor a dbo:Actor ;
         dbo:actedIn ?work .
  FILTER(?child = ?actor)

  # Find the person who died in Los Angeles
  ?decedent a dbo:Person ;
            dbo:deceasedPlace dbr:Los_Angeles .

  # Link to Eugène Cattin's parent
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  ?parentOfEugeneCattin dbo:child ?eugeneCattin .

  # Connect the chains
  OPTIONAL { ?actor dbo:deceased ?decedent }
  FILTER(?parentOfChild = ?parentOfEugeneCattin)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  # Birth place of the Governor of Virginia
  {
    SELECT ?birthPlace WHERE {
      ?governor a dbo:Politician ;
                dbo:positionHeld dbr:Governor_of_Virginia .
      OPTIONAL { ?governor dbo:birthPlace ?birthPlace . }
    } LIMIT 1
  }

  UNION

  # Birth place of the author of ""El Deafo""
  {
    SELECT ?birthPlace WHERE {
      ?author a dbo:Writer ;
              dbo:work dbr:El_Deafo ;
              dbo:nationality dbr:United_States .
      OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
    } LIMIT 1
  }

  UNION

  # Birth place of the awardee associated with Vince Gilligan's award
  {
    SELECT ?birthPlace WHERE {
      ?vince a dbo:Person ;
             foaf:name ""Vince Gilligan""@en .
      ?award dbr:Vince_Gilligan ;
             dbo:recipient ?awardee .
      OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
    } LIMIT 1
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChildCostello ?parentOfChildCattin WHERE {
  # Mariclare Costello's spouse and their child's parent
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  OPTIONAL { ?mariclare dbo:spouse ?spouse . }
  
  OPTIONAL { ?childCostello dbo:parent ?spouse . }
  
  OPTIONAL { ?parentOfChildCostello a dbo:Person ;
                                    dbo:child ?childCostello . }

  # Eugène Cattin's profession and their child's parent
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  
  OPTIONAL { ?eugeneCattin foaf:profession ?profession . }
  
  FILTER(?profession IN (dbo:Politician, dbo:Journalist)) # Assuming these are relevant professions
  
  OPTIONAL { ?childCattin dbo:parent ?eugeneCattin . }
  
  OPTIONAL { ?parentOfChildCattin a dbo:Person ;
                                  dbo:child ?childCattin . }

  # Actor of Judgment: The Trial of Julius and Ethel Rosenberg
  ?judgmentWork dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .
  
  OPTIONAL { ?actor dbo:actorInFilm ?judgmentWork . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nickname ?soccerClub WHERE {
  # Denis Kolodin's nickname and soccer club association
  ?denis a dbo:SoccerPlayer ;
         foaf:name ""Denis Kolodin""@en .
  
  OPTIONAL { ?denis foaf:nick ?nickname . }
  
  # Check if the nickname is also a soccer club
  ?soccerClub a dbo:FootballClub ;
              foaf:name ?nickname .

  # Aleksandr Filimonov's work and connection to Denis Kolodin
  ?aleksandr a dbo:Writer ;
             foaf:name ""Aleksandr Filimonov""@en .
  
  OPTIONAL { ?work dbo:author ?aleksandr . }
  
  # Assuming there is some relationship between Denis Kolodin and Aleksandr Filimonov through their roles
  OPTIONAL { ?denis dbo:relatedTo ?aleksandr . }
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?musicalArtist WHERE {
  ?cynthia a dbo:Person ;
           foaf:name ""Cynthia Morgan""@en .
  
  OPTIONAL { ?cynthia dbo:musicalArtist ?musicalArtist . }
}

UNION

SELECT DISTINCT ?movie WHERE {
  ?afeez a dbo:Actor ;
         foaf:name ""Afeez Oyetoro""@en .
  
  ?afeez dbo:actedIn ?movie .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Antonios Varthalitis death place that is a settlement
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  FILTER (isBlank(?deathPlace) || ?deathPlace a dbo:Settlement)

  # Awardee of ""30"" and their war involvement
  ?awardee dbo:award dbr:Award_30 ;
           dbo:participatedInWar ?war1 .

  # Leader of National Party of Greece and their war involvement
  ?leader dbo:partyLeader dbr:National_Party_of_Greece ;
          dbo:participatedInWar ?war2 .

  # Find common entity related to these conditions
  OPTIONAL { ?deathPlace ?p ?entity . }
  OPTIONAL { ?awardee ?q ?entity . }
  OPTIONAL { ?leader ?r ?entity . }

  FILTER(?war1 = ?war2)
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find alter ego of ""The Golden Master"" series
  ?series a dbo:TVSeries ;
          foaf:name ""The Golden Master""@en .
  
  OPTIONAL { ?series dbo:alterEgo ?alterEgo . }
  
  # Find actors in the TV series and movie associated with Wil Wheaton
  ?tvActor dbo:actorIn ?series .
  ?movie a dbo:Film ;
         dbo:author ?wilWheaton .
  ?wilWheaton foaf:name ""Wil Wheaton""@en .
  ?movieActor dbo:actorIn ?movie .
  
  # Find actor in T.I.'s album for the song ""Live Your Life""
  ?album a dbo:Album ;
         foaf:name ""Paper Trail""@en .
  ?song a dbo:Song ;
        foaf:name ""Live Your Life""@en .
  ?album dbo:song ?song .
  ?albumActor dbo:actorIn ?album .

  # Find common actor
  FILTER(?tvActor = ?movieActor)
  FILTER(?movieActor = ?albumActor)

  BIND(?tvActor AS ?actor)
}
```",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalInAlterEgoSeries ?actorOfMovieTVShow WHERE {
  # The Shadow (video game) alter ego is Lamont Cranston
  dbr:The_Shadow_(video_game) dbo:alterEgo dbr:Lamont_Cranston .
  
  # Professional in the series of Lamont Cranston
  dbr:Lamont_Cranston dbo:series ?series .
  ?professionalInAlterEgoSeries dbo:profession ?profession ;
                                 dbo:worksFor ?series .

  # Richard E. Grant's movie/TV show
  ?movieTVShow dbo:actor dbr:Richard_E._Grant .
  
  # Actor of the movie/TV show
  ?actorOfMovieTVShow dbo:actor ?movieTVShow .

  # Ab Kya Hoga actor who is a politician
  ?abKyaHogaActor dbo:profession dbr:Politician ;
                  dbo:actedIn dbr:Ab_Kya_Hoga .
  
  FILTER(?professionalInAlterEgoSeries = ?actorOfMovieTVShow)
}
```",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?event ?commander WHERE {
  # Find Edmund Hakewill-Smith's award
  ?award dbo:recipient dbr:Edmund_Hakewill-Smith ;
         dbo:awardedBy ?organization .
  
  # Identify the force associated with the organization
  ?organization dbo:member ?force .

  # Find societal events or military conflicts related to this force
  ?event a (dbo:SocietalEvent | dbo:MilitaryConflict) ;
         dbo:relatedForce ?force .

  # Determine the commander involved in these events
  ?commander dbo:commanded ?force ;
             dbo:involvedIn ?event .

  # Filter for the specific event ""Sinking of Prince of Wales and Repulse""
  OPTIONAL { ?event dbr:Sinking_of_Prince_of_Wales_and_Repulse . }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?retailleauParty ?successorParty WHERE {
  # Find the political party of Bruno Daniel Marie Paul Retailleau
  ?retailleau a dbo:Person ;
              foaf:name ""Bruno Daniel Marie Paul Retailleau""@en .
  OPTIONAL { ?retailleau dbo:party ?retailleauParty . }

  # Find Patrice Martin-Lalande's successor who is a politician and French
  ?martinLalande a dbo:Person ;
                 foaf:name ""Patrice Martin-Lalande""@en .
  
  ?successor a dbo:Person ;
             dbo:successorOf ?martinLalande ;
             dbo:nationality dbr:Francois,_King_of_France ; # Assuming French nationality
             dbo:party ?successorParty .

}
```",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Tisha Sterling's parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tisha .

  # Find the birth name of the parent
  OPTIONAL { ?parent foaf:name ?birthName . }

  # Identify Nat Levine's film product
  dbr:Nat_Levine dbo:product ?film .

  # Find the actor of the film
  ?actor dbo:actedIn ?film .

  # Find the spouse of the actor
  ?spouse dbo:spouse ?actor .

  # Ensure the person is the same as the parent with the birth name
  FILTER(?parent = ?person)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?child dbo:parent dbr:Baeda_Maryam_I .

  # Father of the father (grandfather) of Baeda Maryam I's child
  ?fatherOfChild dbo:parent ?child .
  ?grandfather dbo:parent ?fatherOfChild .

  # Ensure grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ;
               dbo:officeHolder ?office .

  # Commander in the Siege of Mukha who is royalty
  ?commander dbo:event dbr:Siege_of_Mukha ;
             a dbo:Monarch .
  
  # Parent of the commander who is royalty
  ?parentOfCommander dbo:child ?commander ;
                    a dbo:Monarch .

  # Alter ego of The Shadow
  ?alterEgo foaf:name ""The_Shadow""@en .

  # Connect all entities through relationships
  OPTIONAL { ?grandfather foaf:name ?name }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfFather WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:child ?child .
  
  ?child a dbo:RoyalFamilyMember .

  ?father dbo:parent ?child .

  ?parentOfFather dbo:parent ?father .

  dbr:Antoine,_Duke_of_Lorraine dbo:child ?antChild .
  
  ?antChild a dbo:RoyalFamilyMember .

  ?parentOfAntChild dbo:parent ?antChild .

  OPTIONAL { ?parentOfAntChild dbo:spouse ?spouse . }
  
  FILTER(?spouse a dbo:RoyalFamilyMember && ?spouse a dbo:Noble)

  FILTER(?parentOfFather = ?parentOfAntChild)
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personName ?deathPlace WHERE {
  # Death place of Reed Howes
  OPTIONAL {
    ?reedHowes a dbo:Person ;
               foaf:name ""Reed Howes""@en .
    ?reedHowes dbo:deathPlace ?deathPlace .
    BIND(""Reed Howes"" AS ?personName)
  }

  # Actors of Color Me Dead and their death places
  OPTIONAL {
    dbr:Color_Me_Dead dbo:starring ?actorOfColorMeDead .
    ?actorOfColorMeDead a dbo:Person ;
                       foaf:name ?actorName .
    ?actorOfColorMeDead dbo:deathPlace ?deathPlace .
    BIND(?actorName AS ?personName)
  }

  # Actors of Aladdin (1958 film) and their death places
  OPTIONAL {
    dbr:Aladdin_(1958_film) dbo:starring ?actorOfAladdin ;
                            foaf:name ?actorName .
    ?actorOfAladdin a dbo:Person ;
                    dbo:deathPlace ?deathPlace .
    BIND(?actorName AS ?personName)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Saw Shwe Khet and his child's father who is royalty
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?childOfSawShweKhet dbo:parent ?fatherOfChild ;
                     a dbo:RoyalFamilyMember .

  ?fatherOfChild dbo:spouse ?spouseOfFather .

  # Find Saw Min Phyu and the predecessor of her spouse's child who is royalty
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  ?spouseOfSawMinPhyu dbo:spouse ?sawMinPhyu ;
                      a dbo:RoyalFamilyMember .

  ?childOfSpouseMinPhyu dbo:parent ?spouseOfSawMinPhyu ;
                        a dbo:RoyalFamilyMember .

  ?predecessorChild dbr:Predecessor ?childOfSpouseMinPhyu .
  
  # Find Minye Kyawswa and the child of his parent's child
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .

  ?childOfMinyeKyawswa dbo:parent ?parentOfChildOfMinye .
  
  ?grandchildOfMinye dbo:parent ?childOfMinyeKyawswa .

  # Linking all conditions
  FILTER(?fatherOfChild = ?predecessorChild)
  FILTER(?spouseOfFather = ?spouseOfSawMinPhyu)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the organisation related to Hong Kong C
  ?organisation a dbo:SoccerClub ;
                dbo:sportTeam dbr:Hong_Kong_C .

  # Identify the manager who is also a player in this organisation
  ?manager a dbo:SportsManager, dbo:SoccerManager ;
           dbo:playerInTeam ?organisation .

  # Find the person born on 1981-12-01 who matches the criteria
  ?person a dbo:Athlete, dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
          foaf:birthday ""1981-12-01""^^xsd:date .
  
  FILTER(?manager = ?person)
}
```",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeOfLeaderMaura ?officeOfCommanderPintoDaCosta ?tenantResidenceLeader2003 WHERE {
  # Miguel Maura's political party and its leader's office
  ?miguel a dbo:Politician ;
          foaf:name ""Miguel Maura""@en .
  
  OPTIONAL { ?miguel dbo:memberOfParty ?party . }
  OPTIONAL { ?partyLeader a dbo:Person ;
                        dbo:office ?officeOfLeaderMaura ;
                        dbo:memberOfParty ?party . }

  # Manuel Pinto da Costa's military conflict and his office
  ?manuel a dbo:Politician, dbo:OfficeHolder ;
           foaf:name ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { ?conflict a dbo:MilitaryConflict ;
                     dbo:commander ?manuel . }
  OPTIONAL { ?manuel dbo:office ?officeOfCommanderPintoDaCosta . }

  # Leader of the 2003 Madrid City Council election and their residence
  ?electionEvent a dbo:Election ;
                 foaf:name ""Madrid City Council election, 2003""@en .
  
  OPTIONAL { ?leader a dbo:Person ;
                    dbo:electedDuring ?electionEvent ;
                    dbo:officeHolderOf ?office . }
  OPTIONAL { ?residence a dbo:Residence ;
                     dbo:tenant ?leader . }
  OPTIONAL { ?residence dbo:tenant ?tenantResidenceLeader2003 . }
}
```",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorBirthPlace ?awardeeBirthPlace ?governorBirthPlace WHERE {
  # Find the birth place of Cece Bell, author of El Deafo
  ?author a dbo:Writer ;
          foaf:name ""Cece Bell""@en .
  ?author dbo:nationality dbr:United_States .
  ?book dbo:author ?author ;
        foaf:name ""El Deafo""@en .
  ?author dbo:birthPlace ?authorBirthPlace .

  # Find the birth place of Vince Gilligan's Emmy Award awardee
  ?award a dbo:Award ;
         foaf:name ""Primetime_Emmy_Award_for_Outstanding_Original_Main_Title_Theme_Music_Composed_for_a_Series""@en .
  ?gilligan dbr:Vince_Gilligan ;
            dbo:recipientOfAward ?award .
  ?awardee dbo:recipientOfAward ?award ;
           dbo:birthPlace ?awardeeBirthPlace .

  # Find the birth place of Paulus Powell and its governor
  ?paulus a dbo:Person ;
          foaf:name ""Paulus_Powell""@en .
  ?paulus dbo:birthPlace ?region .
  ?region a dbo:AdministrativeRegion ;
          dbo:governor ?governor .
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo WHERE {
  # Find The Shadow as the alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alias ?shadow .
  ?shadow foaf:name ""The Shadow""@en .

  OPTIONAL {
    ?shadow dbo:parent ?childOfShadow .
    ?childOfShadow dbo:parent ?grandParentOfShadow .
    
    # Grandparent must be royalty and an office holder
    ?grandParentOfShadow a dbo:Person ;
                         dbo:royalty ?isRoyalty ;
                         dbo:officeHolder ?isOfficeHolder .

    OPTIONAL {
      ?grandParentOfShadow dbo:child ?naod .
      ?naod foaf:name ""Na'od""@en .
    }

    OPTIONAL {
      ?parentOfCommander dbo:parent ?commander .
      ?commander a dbo:Person ;
                 dbo:royalty ?isRoyalty .

      ?grandParentOfShadow dbo:child ?parentOfCommander .
    }
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:actor ?herchelBernardi .
  
  ?herchelBernardi foaf:name ""Herschel Bernardi""@en .

  OPTIONAL { 
    ?mariclare a dbo:Person ;
               foaf:name ""Mariclare Costello""@en .
    
    ?mariclare dbo:spouse ?spouse .
    
    ?child dbo:parent ?spouse .
    
    ?parentOfChild dbo:child ?child .
    
    OPTIONAL {
      ?eugeneCattin a dbo:Person ;
                    foaf:name ""Eugène Cattin""@en .
      
      ?eugeneCattin dbo:profession ?profession .
      
      ?professional a dbo:Person ;
                    dbo:profession ?profession .
      
      ?parentOfProfessional dbo:child ?professional .
    }
    
    FILTER(?parentOfChild = ?parentOfProfessional)
  }

  OPTIONAL { 
    ?actor a dbo:Actor ;
           dbo:actedIn ?movie .
  }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania's parent who is royalty
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  ?parentOfPhilip dbo:child ?philip .
  ?parentOfPhilip dbo:title ?royaltyTitle .

  # Step 2: Identify the father of this royal parent and his spouse
  ?fatherOfParent a dbo:Person ;
                  dbo:child ?parentOfPhilip .
  ?fatherOfParent dbo:title ?royaltyTitle .
  
  OPTIONAL { ?fatherOfParent dbo:spouse ?spouse . }

  # Step 3: Identify Maria of Bytom's spouse and the child's parent who is royalty
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .

  ?spouseOfMaria dbo:spouse ?maria .
  
  ?childOfSpouse dbo:parent ?spouseOfMaria .
  ?royalParentOfChild dbo:child ?childOfSpouse .
  ?royalParentOfChild dbo:title ?royaltyTitle2 .

  # Step 4: Identify the father of this royal parent
  ?fatherOfRoyalParent a dbo:Person ;
                       dbo:child ?royalParentOfChild .
  ?fatherOfRoyalParent dbo:title ?royaltyTitle3 .

  # Step 5: Identify Stephen V of Hungary's predecessor and their child who is royalty
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  ?childOfPredecessor dbo:parent ?predecessor .
  ?childOfPredecessor dbo:title ?royaltyTitle4 .

  # Step 6: Identify the child of this royal child
  ?grandChildOfPredecessor dbo:parent ?childOfPredecessor .
  ?grandChildOfPredecessor dbo:title ?royaltyTitle5 .

  FILTER(?spouse = ?fatherOfRoyalParent)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Bill_Clinton a dbo:Person ;
                   dbo:spouse dbr:Hillary_Clinton ;
                   dbo:residence dbr:Chappaqua, New York .
  
  OPTIONAL { 
    ?work dbo:author dbr:Bill_Clinton ;
          a dbo:Book .
    
    ?work dbo:author ?author .
  }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI ?alterEgo ?royaltyOfficeHolder WHERE {
  # Dawit I's child
  dbr:Dawit_I dbo:child ?childOfDawitI .

  # Lamont Cranston's alter ego (The Shadow)
  dbr:Lamont_Cranston dbo:alias ?shadowAlias .
  FILTER(CONTAINS(LCASE(?shadowAlias), ""the shadow""))
  BIND(""The Shadow"" AS ?alterEgo)

  # Baeda Maryam I's child
  dbr:Baeda_Maryam_I dbo:child ?childOfBaedaMaryamI .

  # Father of the father (grandfather) who is royalty and an office holder
  ?childOfBaedaMaryamI dbo:parent ?parent .
  ?parent dbo:parent ?royaltyOfficeHolder .
  
  FILTER(?royaltyOfficeHolder a dbo:Monarch || ?royaltyOfficeHolder a dbo:GovernmentOfficial)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?siege a dbo:Event ;
         dbo:location dbr:Padua ;
         dbo:participant ?commander .
  
  ?commander a dbo:Person ;
             dbo:royalty ""true""^^xsd:boolean .

  OPTIONAL { 
    ?isabella a dbo:Person ;
              foaf:name ""Isabella of Austria""@en ;
              dbo:parent ?commander .
  }

  OPTIONAL {
    ?philipChild a dbo:Person ;
                 dbo:parent dbr:Philip_I_of_Castile ;
                 dbo:royalty ""true""^^xsd:boolean .
    
    ?commander dbo:child ?philipChild .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # The child is a politician
  ?child a dbo:Politician .

  # This child has a parent who is the father we are looking for
  ?child dbo:parent ?father .

  # The child is also a parent of an awardee associated with Rodney Lees
  ?child dbo:parent ?awardeeParent .
  ?awardeeParent foaf:name ?awardName .
  FILTER(CONTAINS(?awardName, ""Rodney Lees""))

  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?relatedChild .

  # The related child is a politician and office holder
  ?relatedChild a dbo:Politician ;
               dbo:officeHolder ?office .

  # This related child has a parent who is also the father we are looking for
  ?relatedChild dbo:parent ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine a dbo:Person ;
                                     dbo:spouse ?spouse .

  # Find the child who is royalty
  ?child dbo:childOf dbr:François_Ier,_Duke_of_Lorraine ;
         a dbo:RoyalFamilyMember .

  # Identify the father of this child and then the parent of that father
  ?father dbo:parent ?child .
  ?parentOfFather dbo:parent ?father .

  # Find the spouse of the parent of Francis I, ensuring they are royalty and noble
  OPTIONAL { ?spouse a dbo:RoyalFamilyMember ; dbo:noble ?noble . }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?managerOfTeam WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:occupation dbr:Sports_manager ;
          dbo:managerForSportTeam dbr:VfL_Bochum .

  ?country dbo:leader dbr:Chancellor_of_Germany .
  ?person dbo:nationality ?country .

  ?team a dbo:SoccerClubSeason ;
        dbo:sportTeamSeason ?sportsSeason ;
        dbo:seasonOfSportsTeam ?sportsTeamSeason ;
        dbo:manager ?person .

  BIND(?person AS ?managerOfTeam)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  # Find Hu Jieqing's spouse who is a writer
  dbr:Hu_Jieqing dbo:spouse ?spouse .
  ?spouse a dbo:Writer ;
          dbo:work ?work .

  # Get the country of the work of this spouse
  ?work dbo:country ?country .

  # Find Hu Jieqing's child who is a politician
  dbr:Hu_Jieqing dbo:child ?child .
  ?child a dbo:Politician ;
         dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderName ?militaryForce1 ?militaryForce2 WHERE {
  # French campaign in Egypt and Syria as an event
  dbr:French_campaign_in_Egypt_and_Syria dbo:eventParticipant ?participant .
  
  # Commander of the French campaign
  ?participant dbo:commander ?commander .
  ?commander foaf:name ?commanderName .

  # Military force associated with the French campaign
  ?participant dbo:militaryForce ?militaryForce1 .

  # Another military conflict involving the same commander
  ?otherConflict a dbo:MilitaryConflict ;
                 dbo:eventParticipant ?participant2 .
  
  ?participant2 dbo:commander ?commander .
  ?otherConflict dbo:militaryForce ?militaryForce2 .

  # Award of Knight Commander of the Order of the Bath
  ?commander dbo:awardeeOf dbr:Knight_Commander_of_the_Order_of_the_Bath .

  # Reference to William Bayne (assuming this is a filter or additional condition)
  FILTER(?commander = dbr:William_Bayne) 
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Rodney Lees' award and its awardee
  ?rodneyLees a dbo:Person ;
              foaf:name ""Rodney Lees""@en .
  ?award dbo:recipient ?awardee .
  ?rodneyLees dbo:award ?award .

  # Politician who is a child of an Eton College alumnus
  ?alumnus dbo:alumniOf dbr:Eton_College ;
           dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician .

  # Parent of Frederick Stanley's child
  dbr:Fredrick_Stanley_16th_Earl_of_Derby dbo:child ?frederickChild .
  ?parentOfFrederickChild dbo:parent ?frederickChild .

  # Connecting the entities
  OPTIONAL { ?awardee dbo:parent ?parent . }
  OPTIONAL { ?politicianChild dbo:parent ?parent . }
  OPTIONAL { ?parentOfFrederickChild foaf:name ?parentName }

  FILTER(?awardee = ?politicianChild)
  FILTER(?politicianChild = ?frederickChild)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?child dbo:parent dbr:Baeda_Maryam_I ;
         a dbo:Person .

  # Father of Baeda Maryam I's child
  ?father dbo:child ?child ;
          a dbo:Person .

  # Grandfather (father of the father) of Baeda Maryam I's child
  ?grandfather dbo:child ?father ;
               a dbo:Person .

  # Commander in Siege of Mukha who is royalty
  ?commander dbo:role dbr:Siege_of_Mukha ;
             a dbo:RoyalFamilyMember .

  # Parent of the commander who is royalty
  ?royalParent dbo:child ?commander ;
               a dbo:Person .

  # The Shadow as an alias for Lamont Cranston
  ?lamont foaf:name ""Lamont Cranston""@en .
  ?shadow foaf:name ""The Shadow""@en .
  FILTER(?lamont = ?shadow)

  # Ensure the grandfather is both royalty and an office holder
  ?grandfather dbo:officeHolder true ;
               a dbo:RoyalFamilyMember .

  # Connect the entities through their roles
  OPTIONAL { ?grandfather dbo:spouse ?royalParent }
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorOfShelbyOaks ?albumActor ?alterEgoActor WHERE {
  # Find the album Shelby Oaks and its associated actor
  dbr:Shelby_Oaks dbo:artist dbr:T.I._(rapper) .
  OPTIONAL { dbr:Shelby_Oaks dbo:performer ?actorOfShelbyOaks . }

  # Find a song/musical work by T.I. and its album's actor
  ?song a dbo:Songs ;
        dbo:artist dbr:T.I._(rapper) .
  OPTIONAL { ?album dbo:song ?song ; dbo:performer ?albumActor . }

  # Find the alter ego character from The Golden Master series and its actor
  ?character dbo:actor ?alterEgoActor ;
             rdfs:label ""The Golden Master""@en .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouse WHERE {
  # Find the father of Myat Hpone Pyo who is royalty
  ?myatHponePyo dbo:parent ?father .
  FILTER(?father rdf:type dbo:Monarch) .

  # Find the spouse of this father
  OPTIONAL { ?father dbo:spouse ?spouse . }

  # Find Saw Min Phyu's spouse who is royalty and their child
  ?sawMinPhyu dbo:spouse ?royalSpouse .
  FILTER(?royalSpouse rdf:type dbo:Monarch) .
  OPTIONAL { ?royalSpouse dbo:child ?childOfRoyalSpouse . }

  # Find the predecessor of this child (i.e., the spouse's predecessor)
  OPTIONAL {
    ?predecessor dbo:successor ?childOfRoyalSpouse .
    FILTER(?predecessor rdf:type dbo:Monarch) .
  }

  # Find Minye Kyawswa's child and their parent
  ?minyeKyawswa dbo:child ?childOfMinyeKyawswa .
  OPTIONAL { ?parentOfChild dbo:child ?childOfMinyeKyawswa . }

  # Ensure the spouse is the predecessor of the child of Saw Min Phyu's royal spouse
  FILTER(?spouse = ?predecessor)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?associatedArtist WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Find $pacely by birth name and associated musical artist
  ?pacely a dbo:Person ;
          foaf:name ""$pacely""@en .
  OPTIONAL { ?pacely dbo:musicalArtist ?artist . }

  # Find the native artist from Central Region, Ghana by birth name and associated musical artist
  ?ghanaArtist a dbo:Person ;
               dbo:nativeCountry dbr:Ghana ;
               dbo:nativeRegion dbr:Central_Region_(Ghana) .
  OPTIONAL { ?ghanaArtist foaf:name ?birthName }
  OPTIONAL { ?ghanaArtist dbo:musicalArtist ?artist . }

  # Ensure the associated artist is linked to both $pacely and the Ghanaian artist
  FILTER(?artist = ?associatedArtist)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlaceEntity WHERE {
  ?burhanBelge a dbo:Person ;
               foaf:name ""Burhan Belge""@en .
  ?burhanBelge dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceEntity .
}

UNION

SELECT ?award WHERE {
  ?charlesParsons a dbo:MilitaryPerson ;
                  foaf:name ""Charles Parsons (British Army officer)""@en .
  ?charlesParsons dbo:honours ?award .
}
```",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?galanParty ?barrerasParty ?fatherName ?petroFatherParty WHERE {
  # Daniel Elahi Galán's country and party
  dbr:Daniel_Elahi_Galán dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .

  OPTIONAL { 
    dbr:Daniel_Elahi_Galán dbo:partyAffiliation ?galanParty .
  }

  # Roy Leonardo Barreras Montealegre's party
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:partyAffiliation ?barrerasParty .

  # Sofía Petro's father and his party
  OPTIONAL {
    dbr:Sofía_Petro dbo:parent ?father .
    ?father foaf:name ?fatherName .
    
    OPTIONAL { 
      ?father dbo:partyAffiliation ?petroFatherParty .
    }
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Napoleon Zervas
  ?zervas a dbo:Person ;
          foaf:name ""Napoleon Zervas""@en .
  ?zervas dbo:participatedIn ?war .

  # Awardee of 1930 and their wars
  ?awardee a dbo:Person ;
           dbo:awardReceived ?award .
  ?award dbo:date ""1930""^^xsd:gYear .
  ?awardee dbo:participatedIn ?war .

  # Death place of Antonios Varthalitis as a settlement
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .

}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusBirthplace ?residentBirthplace WHERE {
  # Find the alumnus of Plovdiv University ""Paisii Hilendarski""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski ;
           dbo:birthPlace ?alumnusBirthplace .

  # Identify a region with Eastern European Time
  ?region dbo:timeZone dbr:Eastern_European_Time ;
          dbo:settlement ?settlement .

  # Find the birthplace of a resident from that settlement
  ?resident dbo:residence ?settlement ;
            dbo:birthPlace ?residentBirthplace .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succesorSeason ?successorSeason .
  
  # Ensure it is a sports club, organization, and soccer club
  ?successorSeason a dbo:SoccerClub ;
                   a dbo:Organization ;
                   a dbo:SportsTeam .

  # Find the manager of this successor team
  ?successorSeason dbo:manager ?manager .

  # Check if the manager is Thomas Letsch
  OPTIONAL { ?manager foaf:name ""Thomas Letsch""@en }

  # Get the native country of Thomas Letsch
  OPTIONAL { ?manager dbo:nationality ?country }

  # Find the leader of West Germany and their administration (country)
  dbr:Konrad_Adenauer dbo:leaderOf dbr:West_Germany .
  dbr:West_Germany dbo:administrativeRegion ?adminCountry .

  # Filter to match the native country with the administration
  FILTER(?country = ?adminCountry)
}
```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Identify Saw Shwe Khet's child who is royalty
  ?child a dbo:Person ;
         dbo:parent ?sawShweKhetParent ;
         rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Find the parent of this royal child, ensuring they are royalty
  ?royalChildParent a dbo:Person ;
                    foaf:name ?childName ;
                    dbo:child ?child .
  
  # Identify Minye Kyawswa's child and find Saw Shwe Khet's predecessor
  ?minyeKyawswaChild a dbo:Person ;
                     dbo:parent ?minyeKyawswaParent .

  ?sawShweKhetPredecessor a dbo:Person ;
                          foaf:name ?predecessorName ;
                          dbo:successor ?child .

  # Find the father of this royal child, ensuring he is royalty
  ?father a dbo:Person ;
          rdf:type/rdfs:subClassOf* dbo:Royalty ;
          dbo:parent ?royalChildParent .

  # Retrieve the spouse of this father if he is royalty
  OPTIONAL { ?father dbo:spouse ?spouse . }
}
```",8,10,9,3,3,3,3,71,0,3,1,0.0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?emilia a dbo:Person ;
          dbo:birthName ""Emilia Yancheva Valeva""@en .
  
  ?jamieT dbo:profession ?profession .
  ?emilia dbo:profession ?sameProfession .

  FILTER(?profession = ?sameProfession)

  ?emilia dbo:bandMember ?bandMember .
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?authorOfCommanderWork ?bidenBookAuthor WHERE {
  # Find the commander in the Korean conflict and their works
  ?commander a dbo:OfficeHolder ;
             dbo:officeName ""Commander""@en ;
             dbo:heldByPositionDuringEvent ?koreanConflict .
  
  ?work a dbo:WrittenWork ;
        dbo:author ?authorOfCommanderWork ;
        dbo:creator ?commander .

  # Find Joe Biden's books
  dbr:Joe_Biden a dbo:Person ;
                foaf:name ""Joe Biden""@en ;
                dbo:book ?bidenBook .
  
  ?bidenBookAuthor a dbo:Person ;
                   dbo:author ?bidenBook .
}
```",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?spouse WHERE {
  # Find the landmark at the specified elevation
  ?landmark a dbo:Landmark ;
            dbo:elevation ""20.1168""^^xsd:float .
  
  # Determine the ruling party member associated with this landmark
  ?landmark dbp:governingParty ?party .
  ?partyMember a dbo:Person ;
               dbo:memberOf ?party .

  # Find films produced by Nat Levine and actors in these films
  dbr:Nat_Levine dbo:filmProduced ?film .
  ?actor dbo:actedIn ?film .
  
  # Determine the spouse of one such actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Find information about Ann Sothern's birth name and connections
  dbr:Ann_Sothern foaf:name ""Eleanora Sothern""@en ;
                  dbp:birthday ?birthDate .
  
  FILTER(?partyMember != ?spouse)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchild WHERE {
  # Find parent of Archduchess Margarete Sophie
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parentOfMargarete .

  # Find child of Duke Philipp
  dbr:Duke_Philipp_of_Württemberg dbo:child ?childOfPhilipp .

  # Find grandchild (child of the child) who is royalty from parent of Margarete
  ?grandchild1 dbo:parent ?childOfParentMargarete .
  ?childOfParentMargarete dbo:parent ?parentOfMargarete .
  ?grandchild1 a dbo:Royalty .

  # Find grandchild (child of the child) who is royalty from child of Philipp
  ?grandchild2 dbo:parent ?childOfChildPhilipp .
  ?childOfChildPhilipp dbo:parent ?childOfPhilipp .
  ?grandchild2 a dbo:Royalty .

  # Ensure one grandchild is a predecessor to another
  OPTIONAL { ?grandchild1 dbo:predecessor ?grandchild2 . }
  FILTER(?grandchild1 = ?grandchild || ?grandchild2 = ?grandchild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childWar ?birthPlaceEntity ?koichiroWar WHERE {
  # Toyotomi Hideyoshi's child and their war involvement
  OPTIONAL {
    dbr:Toyotomi_Hideyoshi dbo:child ?child .
    ?child dbo:participatedIn ?childWar .
  }

  # Yamaza Enjirō's birthplace entity and associated wars
  OPTIONAL {
    dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
    ?birthPlaceEntity a dbo:Place ;
                     rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
    ?birthPlaceEntity dbo:participatedIn ?birthPlaceWar .
  }

  # Koichirō's war involvement
  OPTIONAL {
    ?koichiro a dbo:Person ;
              foaf:name ""Koichirō""@ja .
    ?koichiro dbo:participatedIn ?koichiroWar .
  }
}
```",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  # Tupac Shakur
  ?tupac a dbo:Person ;
         foaf:name ""Tupac Amaru Shakur""@en ;
         dbo:profession dbo:Rapper .

  # Kurt Cobain
  ?kurt a dbo:Person ;
        foaf:name ""Kurt Cobain""@en ;
        dbo:profession dbo:Singer ;
        dbo:work <http://dbpedia.org/resource/The_Live_Anthology> .
  
  # Joey Belladonna
  ?joey a dbo:Person ;
        foaf:name ""Joey Belladonna""@en ;
        dbo:profession dbo:Singer .

  # Find associated musical artists
  OPTIONAL { ?tupac dbo:associatedMusicalArtist ?associatedArtist . }
  OPTIONAL { ?kurt dbo:associatedMusicalArtist ?associatedArtist . }
  OPTIONAL { ?joey dbo:associatedMusicalArtist ?associatedArtist . }

  FILTER(?associatedArtist != ?tupac && ?associatedArtist != ?kurt && ?associatedArtist != ?joey)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Constance of Burgundy's spouse and their children
  dbr:Constance_of_Burgundy dbo:spouse ?conSpouse .
  
  # Children of Constance's spouse who are also children of Roger II
  ?child1 dbo:parent ?conSpouse ;
         dbo:parent dbr:Roger_II_of_Sicily .

  # William I's child who is royalty and an office holder
  ?williamChild dbo:parent dbr:William_I ;
                a dbo:Royalty ;
                dbo:officeHolder ?office .

  # Connect the lineage to find the father of the relevant child
  ?child1 dbo:parent ?father .
  
  FILTER(?child1 = ?williamChild)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Find the producer of ""Storm in a Teacup""
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
  
  # Get the birthplace of this producer
  ?producer dbo:birthPlace ?birthPlace .

  # Determine who is native to that birthplace
  ?native dbo:nativeCountryOrRegion ?birthPlace .

  # Link Steven Kapur to ""The True Self""
  dbr:The_True_Self dbo:composer dbr:Steven_Kapur ;
                    a dbo:MusicalWork .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?countryOfWork WHERE {
  # Find Chiang Ching-kuo's child who is a politician
  dbr:Chiang_Ching-kuo dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician ;
                   dbo:birthPlace ?birthPlace .

  # Find Hu Jieqing's spouse who is a writer
  dbr:Hu_Jieqing dbo:spouse ?writerSpouse .
  ?writerSpouse a dbo:Writer ;
                dbo:workLocation ?countryOfWork .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find the film directed by Manuel Huerga
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .

  # Identify actors in this film who are also soccer players and athletes
  ?film dbo:starring ?actor .
  ?actor a dbo:SoccerPlayer, dbo:Athlete .

  # Find Marcelo Sarmiento's birthdate and roles
  ?marcelo a dbo:SoccerPlayer, dbo:SoccerManager ;
           foaf:name ""Marcelo Sarmiento""@en ;
           dbo:birthDate ?birthdateSarmiento .

  # Identify the person born on 1955-02-22 who is an athlete
  ?athletePerson a dbo:Athlete ;
                 dbo:birthDate ""1955-02-22""^^xsd:date .

  # Connect actors to Marcelo Sarmiento through team membership
  ?actor dbo:teamMember ?team .
  ?marcelo dbo:teamMember ?team .

  OPTIONAL { ?athletePerson dbo:teamMember ?team }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query for The Shadow (video game) alter ego in comics
SELECT ?alterEgo WHERE {
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow .
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  FILTER EXISTS { ?alterEgo a dbo:ComicsCharacter }
}

# Query for Ab Kya Hoga actor who is also a politician
SELECT ?actor WHERE {
  dbr:Ab_Kya_Hoga dbo:starring ?actor .
  ?actor a dbo:Actor ;
         dbo:occupation dbo:Politician .
}

# Query for Richard Grant Esterhuysen's profession
SELECT ?profession WHERE {
  dbr:Richard_Grant_Esterhuysen dbo:profession ?profession .
}

# Combine results to find common professional link
SELECT DISTINCT ?commonProfession WHERE {
  { SELECT ?alterEgo WHERE {
      dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow .
      dbr:The_Shadow dbo:alterEgo ?alterEgo .
      FILTER EXISTS { ?alterEgo a dbo:ComicsCharacter }
    } }
  
  UNION
  
  { SELECT ?actor WHERE {
      dbr:Ab_Kya_Hoga dbo:starring ?actor .
      ?actor a dbo:Actor ;
             dbo:occupation dbo:Politician .
    } }
  
  UNION
  
  { SELECT ?profession WHERE {
      dbr:Richard_Grant_Esterhuysen dbo:profession ?profession .
    } }

  FILTER(?alterEgo = ?actor || ?alterEgo = ?profession || ?actor = ?profession)
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfDorotheasParent WHERE {
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?dorotheasParent .
  
  dbr:Commander_in_the_Siege_of_Padua dbo:child ?commandersChild .
  
  ?commandersChild a dbo:Royal .

  FILTER(?dorotheasParent = ?commandersChild)

  ?dorotheasParent dbo:parent ?fatherOfDorotheasParent .
  
  dbr:Philip_I_of_Castile dbo:child ?philipsRoyaltyChild .
  FILTER(?philipsRoyaltyChild a dbo:Royal)

  ?philipsRoyaltyChild dbo:parent ?fatherOfPhilipsRoyaltyChild .

  FILTER(?fatherOfDorotheasParent = ?fatherOfPhilipsRoyaltyChild)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war ?force ?birthplace WHERE {
  # Find awards given by the United States Congress
  ?award dbo:awardedBy dbr:United_States_Congress ;
         dbo:recipient ?recipient .

  # Find Quincy Adams Gillmore's award
  ?gillmoreAward dbo:recipient dbr:Quincy_Adams_Gillmore ;
                 dbo:relatedTo ?war .
  
  # Ensure the war is related to both awards
  FILTER(?award = ?gillmoreAward)
  
  # Get the force associated with Quincy Adams Gillmore
  OPTIONAL { ?gillmoreAward dbo:force ?force . }
  
  # Find the person who died on 1850-08-05
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          foaf:nationality dbr:United_States ;
          dbo:birthPlace ?birthplace .

  # Ensure birthplace is a settlement in America
  FILTER(?birthplace != dbr:United_States)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfVictor WHERE {
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley (Royal Navy officer)""@en .
  
  OPTIONAL { ?victor dbo:child ?child . }
  FILTER EXISTS { ?child dbo:occupation dbo:Politician . }

  OPTIONAL { ?politicianChild dbo:parent ?child . }
  FILTER EXISTS { ?politicianChild dbo:alumniOf dbr:Eton_College . }

  OPTIONAL { ?grandchildParent dbo:child ?politicianChild . }
  FILTER EXISTS { ?grandchildParent dbo:occupation dbo:Politician . }
  
  OPTIONAL { ?grandchildParent dbo:officeHolder ?office . }

  OPTIONAL { ?victorParent dbo:parent ?victor . }
  BIND(?victorParent AS ?parentOfVictor)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Native place of Alexander II, Grand Duke of Finland
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nativePlace ?nativeFinland .

  # Native place of Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nativeRussia .

  # Person who is a decedent at Switzerland and native of the administration's country (Alexander II)
  ?person dbo:deathPlace dbr:Switzerland ;
          dbo:nativePlace ?nativeFinland .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?commander ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?tvShow a dbo:TelevisionSeries ;
          foaf:name ""Always the Love Songs""@en .
  ?tvShow dbo:creator ?writer .

  # Identify the commander in both a war and as a television show character
  ?commander a dbo:Person ;
             dbo:role ?warRole ;
             dbo:role ?tvRole .
  ?warRole rdfs:label ""Commander""@en .
  ?tvRole rdfs:subClassOf* dbo:TelevisionCharacter .

  # Find the military force involved in the Battle of Vienna
  ?battle a dbo:MilitaryConflict ;
          foaf:name ""Battle of Vienna""@en .
  ?battle dbo:militaryForce ?militaryForce .

  # Determine the successor who is a politician and office holder
  ?successor a dbo:Person ;
             dbo:officeHolder ?office ;
             dbo:predecessor ?commander .
  ?office rdfs:label ""Politician""@en .

  # Link to Michał Kazimierz Pac
  dbr:Michał_Kazimierz_Pac dbo:militaryConflict ?battle .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantOfAdministration ?residenceCountry WHERE {
  # Find the leader of the Spanish Socialist Workers' Party during the 2009 Galician regional election
  ?leader a dbo:Person ;
          dbo:party dbr:Spanish_Socialist_Workers'_Party ;
          dbo:office ""Leader""@en ;
          dbo:election dbr:2009_Galician_regional_election .

  # Find the tenant of the administration under this leader
  OPTIONAL { ?administration dbo:head ?leader .
             ?tenantOfAdministration a dbo:Person ;
                                     dbo:position ?administration . }

  # Find the residence country of a Spanish citizen linked to this context
  OPTIONAL { ?citizen a dbo:Person ;
                    foaf:nationality dbr:Spain .
                ?residenceCountry dbo:country ?citizen }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildOfAlfonsoVI ?royaltyChildOfParentOfRogerII WHERE {
  # Alfonso VI of León and Castile's grandchild
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?childOfAlfonsoVI .
  ?childOfAlfonsoVI dbo:child ?grandchildOfAlfonsoVI .

  # Roger II of Sicily's parent's child who is royalty
  dbr:Roger_II_of_Sicily dbo:parent ?parentOfRogerII .
  ?parentOfRogerII dbo:child ?royaltyChildOfParentOfRogerII .
  FILTER(?royaltyChildOfParentOfRogerII a dbo:Royalty)

  # Reference that is royalty and an office holder related to William I
  ?reference a dbo:Person ;
             dbo:officeHolder ?office ;
             dbo:parent ?parentOfReference .
  ?parentOfReference dbo:child ?reference .
  FILTER(?reference a dbo:Royalty)
  
  # Find the father of this reference who is royalty
  ?fatherOfReference dbo:child ?reference .
  FILTER(?fatherOfReference a dbo:Royalty)

  # Ensure connection to William I
  ?office dbr:William_I .

  # Final condition to find the child that connects all parts
  ?grandchildOfAlfonsoVI = ?royaltyChildOfParentOfRogerII .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Part 1: Parent of royalty child of Prince Faisal bin Hussein
  dbr:Prince_Faisal_bin_Hussein dbo:child ?royaltyChildFaisal .
  ?royaltyChildFaisal rdf:type dbo:Royalty .
  ?royaltyChildFaisal dbo:parent ?parentOfFaisal .

  # Part 2: Parent of royalty child of the royalty child of Princess Muna al-Hussein
  dbr:Princess_Muna_al-Hussein dbo:child ?firstRoyaltyChildMuna .
  ?firstRoyaltyChildMuna rdf:type dbo:Royalty .
  ?firstRoyaltyChildMuna dbo:child ?secondRoyaltyChildMuna .
  ?secondRoyaltyChildMuna rdf:type dbo:Royalty .
  ?secondRoyaltyChildMuna dbo:parent ?parentOfMuna .

  # Find common parent
  FILTER(?parentOfFaisal = ?parentOfMuna)
  BIND(?parentOfFaisal AS ?commonParent)
}
```",5,8,6,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfCommander WHERE {
  # Manuel Pinto da Costa as a commander in a military conflict
  dbr:Manuel_Pinto_da_Costa a dbo:Politician ;
                            dbo:officeHeld ?commanderRole .
  
  ?commanderRole dbo:roleName ""Commander""@en ;
                 dbo:relatedEvent ?militaryConflict .

  # The residence of the leader from the 2003 Madrid City Council election
  dbr:Madrid_City_Council_election_2003 dbo:electedLeader ?leader .
  
  ?residence a dbo:Residence ;
             dbo:tenant ?leader .

  # Office held by the leader of the Conservative Republican Party (Spain)
  dbr:Conservative_Republican_Party_(Spain) dbo:leader ?partyLeader .
  
  ?partyLeader dbo:officeHeld ?partyOffice .

  # Linking these entities
  FILTER(?commanderRole = ?officeOfCommander)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Bob Thompson (musician)
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson""@en .
  
  OPTIONAL { ?bob dbo:birthName ?birthName . }
  OPTIONAL { ?bob dbo:member ?band . }

  # Walter B. Gibson's creation
  dbr:Walter_B._Gibson dbo:creatorOf ?fictionalCharacter .
  FILTER(?fictionalCharacter IN (dbr:The_Shadow, dbr:Captain_Scarlet_and_the_Magic_Pen))

  # Coke Studio Philippines producer
  ?producer a dbo:Producer ;
            foaf:name ?producerName .
  
  OPTIONAL { ?producer dbo:worksFor dbr:Coke_Studio_Philippines . }

  FILTER(?bob = ?producer) # Assuming the same person is both Bob Thompson and the producer

}
```",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .
  
  ?actor a dbo:Actor, dbo:SoccerPlayer, dbo:Athlete ;
         dbo:roleInFilm ?film .

  ?martyPollio a dbo:Person ;
               dbo:birthday ?martyBirthday .
  ?marceloSarmiento a dbo:Person ;
                    dbo:birthday ?sarmientoBirthday ;
                    dbo:soccerPlayer true ;
                    dbo:soccerManager true .

  ?team1 dbo:player ?actor, ?martyPollio .
  ?team2 dbo:player ?actor, ?marceloSarmiento .

  FILTER(?martyBirthday = ""YYYY-MM-DD""^^xsd:date) ; # Replace with Marty Pollio's actual birthdate
  FILTER(?sarmientoBirthday = ""YYYY-MM-DD""^^xsd:date) ; # Replace with Marcelo Sarmiento's actual birthdate
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeOfCommander WHERE {
  ?manuel a dbo:Person ;
          foaf:name ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { ?manuel dbo:officeHolder ?commanderOffice . }
  FILTER(?commanderOffice = ?officeOfCommander)
  
  OPTIONAL { ?commanderOffice dbo:relatedEvent ?militaryConflict . }
  FILTER(?militaryConflict a dbo:MilitaryConflict || ?militaryConflict a dbo:SocietalEvent)

  ?alberto a dbo:Person ;
           foaf:name ""Alberto Ruiz-Gallardón""@en .
  
  OPTIONAL { ?alberto dbo:residence ?residence . }
  
  ?officeOfCommander dbo:tenant ?residence .

  ?miguel a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  
  OPTIONAL { ?miguel dbo:leaderOf ?politicalParty . }
  FILTER(?politicalParty a dbo:PoliticalParty)
  
  OPTIONAL { ?officeOfCommander dbo:relatedTo ?politicalParty . }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify Nate Newton
  ?nate a dbo:Musician ;
        foaf:name ""Nate Newton""@en .

  # Find the album ""Nothing to Gein"" associated with Nate Newton
  ?album dbo:artist ?nate ;
         foaf:name ""Nothing to Gein""@en .

  # Identify the producer of the album who is an organization and a group
  ?producer dbo:producedByAlbum ?album ;
            a dbo:Organization, dbo:Group .

  # Find a band member of this producer
  ?bandMember dbo:member ?producer .

  # Ensure this band member is associated with another musical artist that is both a band and an organization
  ?associatedArtist dbo:hasBandMember ?bandMember ;
                   a dbo:MusicalArtist, dbo:Organization, dbo:Group .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military conflict associated with William Bayne
  ?bayneEvent a dbo:MilitaryConflict ;
              dbo:participant dbr:William_Bayne .

  # Identify Robert Calder's involvement in a military force within that war
  ?calderEvent a dbo:MilitaryConflict ;
               dbo:participant dbr:Robert_Calder .
  
  FILTER(?bayneEvent = ?calderEvent)

  # Determine ""The Triple X's"" role or commander in that same war
  ?tripleXs a dbo:MilitaryForce ;
            dbo:commander ?commander .

  FILTER(?calderEvent = ?tripleXs)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant WHERE {
  ?anxo a dbo:Person ;
        foaf:name ""Anxo Quintana""@en ;
        foaf:nationality dbr:Spain .

  ?office a dbo:Event ;
          dbo:officeHolder ?anxo .

  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  ?party dbo:member ?anxo .

  ?citizen a dbo:Person ;
           foaf:nationality dbr:Spain ;
           dbo:country dbr:Spain .

  ?administration a dbo:Government ;
                  dbo:officeHolder ?tenant ;
                  dbo:member ?anxo .

  FILTER(?tenant = ?citizen)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childName WHERE {
  # Alfonso IV of Aragon and his child who is royalty
  dbr:Alfonso_IV_of_Aragon dbo:child ?alfonsoChild .
  
  # Ensure the child is royalty
  ?alfonsoChild a dbo:Monarch .

  # Find the father of this child, ensuring he is royalty
  OPTIONAL { ?alfonsoChild dbo:parent ?father . }
  FILTER(?father != dbr:Alfonso_IV_of_Aragon)
  ?father a dbo:Monarch .
  
  # Martin of Aragon and his parent
  dbr:Martin_of_Aragon dbo:parent ?martinParent .

  # Ensure the parent is royalty
  ?martinParent a dbo:Monarch .

  # Find the child of this parent, ensuring they are royalty
  OPTIONAL { ?martinParent dbo:child ?royalChild . }
  FILTER(?alfonsoChild = ?royalChild)

  # Get the real name of the child
  ?alfonsoChild foaf:name ?childName .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow (video game) and its alter ego in comics
  dbr:The_Shadow_(video_game) dbo:alterEgo ?comicsCharacter .
  
  # Comics character's professional role
  ?comicsCharacter dbo:profession ?professional .

  # Actor who played in a movie that is also a television show
  ?actor dbo:actedIn ?movie .
  ?movie rdf:type dbr:Film ;
         dbo:basedOn ?televisionShow .
  
  # Person born as Richard Grant Esterhuysen
  ?person foaf:name ""Richard Grant Esterhuysen""@en ;
          foaf:nick ?actorName .
  FILTER(?actor = ?actorName)

  # Profession of Shatrughan Sinha
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .

  # Ensure the professional role matches that of Shatrughan Sinha
  FILTER(?professional = ?sinhaProfession)
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfPerson ?associatedArtist ?realNameBandKimWilson WHERE {
  # Find the person born on 1945-03-30 and known as Nicholas Michael Curran
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nicholas Michael Curran""@en ;
          dbo:birthday ""1945-03-30""^^xsd:date .

  # Get the band of this person
  OPTIONAL { ?person dbo:bandMember ?bandOfPerson . }

  # Find any associated musical artist with Nicholas Michael Curran
  OPTIONAL { ?associatedArtist dbo:associatedMusicalArtist ?person . }

  # Find Kim Wilson and his band's real name
  ?kimWilson a dbo:MusicalArtist ;
             foaf:name ""Kim Wilson""@en .
  
  OPTIONAL { ?kimWilson dbo:bandMember ?bandOfKimWilson . }
  OPTIONAL { ?bandOfKimWilson foaf:name ?realNameBandKimWilson . }

}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Artist, dbo:MusicalArtist ;
          dbo:nativePlace ?location .
  
  ?location dbo:country dbr:England ;
            dbo:locationType dbr:Settlement .

  ?work a dbo:Work, dbo:TelevisionShow ;
        dbo:creator ?person .

  ?person dbo:dateOfDeath ""2020-06-18""^^xsd:date .

  ?parent dbo:child ?person .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Sue Cobb""@en .
  
  OPTIONAL { ?person dbo:birthName ""Linda Sue Cobb""@en . }
  
  ?movie dbo:producer ?person .
  
  ?award dbo:recipient ?movie .
  
  ?poet a dbo:Person ;
        foaf:name ""Ian Gregson""@en .
  
  FILTER(?poet = ?awardRecipient)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?person a dbo:Person ;
          dbo:birthday ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .
  
  ?player a dbo:SportsClub ;
          dbo:season ?vflBochumSeason .

  ?vflBochumSeason dbo:team dbr:VfL_Bochum ;
                   dbo:year ""2007–08""^^xsd:string .

  ?person dbo:managerOf ?player .
  
  ?country dbo:leader dbr:Konrad_Adenauer ;
           rdf:type dbo:Civilization .

  ?administration dbo:administrativeUnit ?country .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find a member of Khlyst who is also a musical artist
  ?khlystMember dbo:memberOf dbr:Khlyst ;
                a dbo:MusicalArtist .

  # Step 2: Find the associated musical artist of that member
  ?associatedArtist dbo:associatedBandOrMusicalArtist ?khlystMember .

  # Step 3: Identify the band/group associated with this musical artist
  ?bandGroup dbo:musicalArtist ?associatedArtist ;
             a dbo:Band ;
             a dbo:Group ;
             a dbo:Organization .

  # Step 4: Connect to ""Burnt by the Sun"" to find the final associated musical artist
  dbr:Burnt_by_the_Sun dbo:soundtrackOrMusicBy ?bandGroup .
  
  # Final step: Find the musical artist associated with this band/group
  ?finalArtist dbo:musicalArtist ?bandGroup .
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Bobby Shmurda's birth name
  ?bobby a dbo:Person ;
         foaf:name ""Bobby Shmurda""@en .
  
  OPTIONAL { ?bobby foaf:birthName ?birthName . }
  
  # Identify regions that are awards and native to Bobby Shmurda
  ?region a dbo:Award, dbo:Settlement, dbo:State, dbo:Region ;
          dbo:nativeOf ?bobby .
  
  # Ensure the region is part of New York State
  ?ny dbr:New_York_(state) dbo:contains ?region .
  
  # Find bands from New York associated with these regions as awardees
  ?band a dbo:Band ;
        dbo:award ?region ;
        dbo:member ?artist .
  
  # Ensure the band is part of an artist associated with GS9
  ?gs9 dbr:GS9 dbo:associatedMusicalArtist ?artist .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInMolina ?teamOfPerson ?actorPlayerAthlete WHERE {
  # Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:playsFor ?team .
  
  # Marcelo Sarmiento's birthday and finding a soccer player and manager born on that day
  dbr:Marcelo_Sarmiento dbo:birthday ?birthday .
  ?person dbo:birthday ?sameBirthday ;
          dbo:occupation ?occupation1, ?occupation2 .
  FILTER(?sameBirthday = ?birthday)
  FILTER(CONTAINS(LCASE(STR(?occupation1)), ""soccer player"") && CONTAINS(LCASE(STR(?occupation2)), ""manager""))
  
  # Manuel Huerga's film and finding an actor who is a soccer player and athlete
  dbr:Manuel_Huerga dbo:film ?film .
  ?actor dbo:actedIn ?film ;
         dbo:occupation ?occupation3, ?occupation4 .
  FILTER(CONTAINS(LCASE(STR(?occupation3)), ""soccer player"") && CONTAINS(LCASE(STR(?occupation4)), ""athlete""))
  
  # Linking the results
  BIND(?person AS ?playerInMolina)
  BIND(?team AS ?teamOfPerson)
  BIND(?actor AS ?actorPlayerAthlete)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Bobby Shmurda's associated musical artist
  ?bobby a dbo:Person ;
         foaf:name ""Bobby Shmurda""@en .
  ?bobby dbo:associatedMusicalArtist ?artist .

  # Band member of the associated musical artist who is also a musical artist
  ?bandMember dbo:memberOfBand ?artist ;
              a dbo:MusicalArtist .

  # Person born as the birth name of the native of Florida who is a musical artist
  ?floridaNative a dbo:Person ;
                 dbo:nativePlace dbr:Florida .
  ?floridaNative foaf:name ?birthName .
  
  ?person a dbo:Person ;
          foaf:birthday ?birthday ;
          foaf:name ?birthName .
  FILTER(?person != ?floridaNative)
  ?person dbo:associatedMusicalArtist ?artist .

  # Native of the award that is a region, American state, settlement, and awardee band from New York
  ?award a dbo:Award ;
         dbo:recipient ?band .
  ?band dbo:nativePlace dbr:New_York_(state) .
  
  ?region a dbo:Region ;
          foaf:name ?awardName .
  FILTER(?awardName = ?birthName)
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:award ?gillmoreAward .
  
  ?gillmoreAward dbo:name ""Gillmore Medal""@en ;
                 dbo:war ?gillmoreWar .

  OPTIONAL { 
    ?person dbo:award ?congressAward .
    ?congressAward dbo:name ?awardName ;
                   dbo:givenBy dbr:United_States_Congress ;
                   dbo:war ?congressWar .
  }

  ?person dbo:birthPlace ?birthPlace .
  
  FILTER(STRSTARTS(LCASE(?birthPlace), ""settlement"") && 
         EXISTS { ?birthPlace dbo:country dbr:United_States })
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?war WHERE {
  # Find the event ""Sinking of Prince of Wales and Repulse""
  dbr:Sinking_of_Prince_of_Wales_and_Repulse a dbo:MilitaryConflict ;
                                             dbo:societalEvent true .
  
  # Identify commanders associated with this event
  ?event dbo:commander ?commander .

  # Check if the commander has been awarded Commander of the Order of the British Empire
  OPTIONAL { ?commander dbo:honoraryTitle dbr:Commander_of_the_Order_of_the_British_Empire . }

  # Ensure we are looking at the correct event
  FILTER(?event = dbr:Sinking_of_Prince_of_Wales_and_Repulse)

  BIND(dbr:Sinking_of_Prince_of_Wales_and_Repulse AS ?war)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  ?mariclare dbo:spouse ?spouse .

  # Child of the spouse and their parent
  ?child dbo:parent ?spouse .
  ?parentOfChild dbo:child ?child .

  # Decedent at Los Angeles
  ?decedent dbr:Los_Angeles dbo:placeOfBirth ;
            foaf:name ?parentName .
  FILTER(?parentOfChild = ?decedent)

  # Profession matching Eugène Cattin's profession
  ?eugene a dbo:Person ;
          foaf:name ""Eugène Cattin""@en .
  ?eugene dbo:profession ?profession .

  FILTER(?parentOfChild dbo:profession ?profession)

  # Movie and actor association
  ?movie dbo:actor ?actor .
  ?movie dbo:work ?decedent .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Yurii Khmelnytsky and his successor
  dbr:Yuriy_Khmelnytsky dbo:succeededBy ?successor .
  
  # Successor's involvement in the Battle of Vienna
  ?successor dbo:commanderIn ?battle .
  dbr:Battle_of_Vienna rdfs:label ""Battle of Vienna""@en .

  # Link to a television show and societal event
  OPTIONAL { ?successor dbo:depictedBy ?tvShow . }
  OPTIONAL { ?successor dbo:relatedToSocietalEvent ?event . }

  FILTER EXISTS { ?tvShow rdf:type dbo:TelevisionSeries }
  FILTER EXISTS { ?event rdf:type dbo:SocietalEvent }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?finalChild WHERE {
  # Ferdinand Albert II and his child
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?childOfFerdinand .

  # The parent of this child who is royalty
  ?parentOfChild a dbo:Monarch ;
                 dbo:child ?childOfFerdinand .

  # Princess Antoinette and her child
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?childOfAntoinette .

  # The parent of this child who is royalty
  ?parentOfAntoinette a dbo:Monarch ;
                     dbo:child ?childOfAntoinette .

  # Spouse relationships
  ?spouseOfChildOfFerdinand dbo:spouse ?childOfFerdinand .
  ?spouseOfChildOfAntoinette dbo:spouse ?childOfAntoinette .

  # The spouse of the spouse of the child who is royalty
  ?finalSpouse dbo:spouse ?spouseOfChildOfAntoinette .

  # Final child we are interested in
  ?finalParent a dbo:Monarch ;
               dbo:parent ?finalSpouse .
  ?finalParent dbo:child ?finalChild .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?country WHERE {
  # Find the commander in the French Revolutionary Wars and their associated wars
  ?commander a dbo:MilitaryPerson ;
             dbo:nationality dbr:France ;
             dbo:participatedInWar ?frenchRevolutionaryWar .
  
  ?frenchRevolutionaryWar dbo:name ?war .

  # Find a Polish athlete native of Łódź and their country of residence
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:Poland ;
           foaf:based_near dbr:Łódź .
  
  OPTIONAL { ?athlete dbo:residenceCountry ?country . }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify GS9 members who are artists and musical artists
  ?gs9Member dbo:memberOf dbr:GS9 ;
             a dbo:Artist, dbo:MusicalArtist .

  # Step 2: Find associated musical artist of the member
  ?associatedArtist dbo:associatedBandOrMusician ?gs9Member .

  # Step 3: Identify award related to this associated musical artist
  ?award dbo:recipient ?associatedArtist ;
         a dbo:Region, dbo:AmericanState, dbo:Settlement .

  # Step 4: Find band from New York (state) that won the award
  ?nyBand dbo:award ?award ;
          dbo:location dbr:New_York_(state) ;
          a dbo:MusicalGroup .

  # Step 5: Identify member of this band who was born with a specific name and is native to Florida
  ?bandMember dbo:memberOf ?nyBand ;
              foaf:name ?birthName ;
              dbo:nativePlace dbr:Florida .
}
```",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Identify Pickett's Charge and its associated war
  dbr:Picketts_Charge dbo:partOf ?war .
  
  # Find the commander of the military force in Pickett's Charge
  ?commander dbo:commandedMilitaryForce ?militaryForce ;
             dbo:commandedDuring ?war .

  # Identify a political party that is an organization and has members in the ruling party at the death place
  ?party a dbo:PoliticalParty, dbo:Organization .
  ?partyMember dbo:memberOf ?rulingParty .
  ?rulingParty dbo:hasMember ?partyMember ;
               dbo:location ?deathPlace .

}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Maria Anna of Bavaria's father (who is royalty)
  dbr:Maria_Anna_of_Bavary_(1574) dbo:child ?mariaChild .
  ?mariaChild dbo:parent ?royalFather .

  # Archduke Charles Joseph's parent
  dbr:Archduke_Charles_Joseph_of_Austria dbo:child ?charlesChild .
  ?charlesChild dbo:parent ?archdukeParent .

  # Commander in the war (Algerian War) that is also a societal event and television show
  ?event a dbo:SocietalEvent ;
         dbo:isPartOf ?war .
  FILTER(?war = dbr:Algerian_War)
  
  ?event dbo:isPartOf ?tvShow .

  # Commander of the military force in the Algerian War
  ?commander dbo:commandedMilitaryForce ?militaryForce .
  ?militaryForce dbo:participatedIn ?war .

  # Linking commander to generational relationships
  OPTIONAL { ?royalFather dbo:child ?intermediate1 }
  OPTIONAL { ?archdukeParent dbo:child ?intermediate2 }

  FILTER(?intermediate1 = ?commander || ?intermediate2 = ?commander)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Triple Entente and its war
  dbr:The_Triple_Entente dbo:militaryConflict ?war .

  # Awardee of Knight Commander of the Order of the Bath related to a military force in a war involving William Bayne
  ?awardee dbo:awardReceived dbr:Knight_Commander_of_the_Order_of_the_Bath ;
          dbo:militaryForceInWar ?bayneWar .
  
  # William Bayne's involvement in a war
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?bayneWar .

  # Commander of the war related to Triple Entente
  ?war dbo:commander ?commander .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royaltyChild WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parentOfSophie .

  # Predecessor of Carl, Duke of Württemberg
  dbr:Carl,_Duke_of_W%C3%BCrttemberg dbo:predecessor ?predecessorOfCarl .

  # Child of the child of Alexander of Württemberg (1804-1881)
  dbr:Aleksander_I_von_W%C3%BCrttemberg dbo:child ?childOfAlexander .
  ?childOfAlexander dbo:child ?grandChildOfAlexander .

  # Find royalty among these relationships
  OPTIONAL { ?parentOfSophie dbo:child ?royaltyCandidate . }
  OPTIONAL { ?predecessorOfCarl dbo:child ?royaltyCandidate . }
  OPTIONAL { ?grandChildOfAlexander dbo:child ?royaltyCandidate . }

  FILTER(?royaltyCandidate = ?royaltyChild)
  FILTER(BOUND(?royaltyChild))
  FILTER(EXISTS { ?royaltyChild rdf:type dbo:RoyalPerson })
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Janusz Kamiński's awards and nominations
  ?award a dbo:Award ;
         dbo:recipient dbr:Janusz_Kamiński .

  # Audrey Hepburn's movies
  ?movie1 dbo:starring dbr:Audrey_Hepburn ;
          dbo:director dbr:Janusz_Kamiński .
  
  # Iliza Shlesinger's movies
  ?movie2 dbo:starring dbr:Iliza_Shlesinger .

  # Common actor in both sets of movies
  ?actor dbo:starring ?movie1 ;
         dbo:starring ?movie2 .

  # Retrieve the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Find predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Find child of the predecessor who is royalty
  ?predecessor dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:Monarch } 

  # Find spouse of Maria of Bytom and their father's parent (grandparent)
  dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .
  ?mariaSpouse dbo:father ?mariaFather .
  ?mariaFather dbo:parent ?mariaGrandparent .

  # Find father of Philip I, Prince of Taranto and their spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
  ?philipFather dbo:spouse ?philipSpouse .

  # Connect the child of the predecessor to both lineages
  ?royalChild dbo:parent ?mariaGrandparent ;
              dbo:spouse ?philipSpouse .

  # Ensure the final entity is royalty
  FILTER EXISTS { ?childOfChild a dbo:Monarch }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find the album ""Sappy"" and its writer
  dbr:Sappy a dbo:MusicalWork ;
            dbo:lyricist ?writer .

  # The writer is a band member of Nickelback
  ?bandMember a dbo:Band ;
              dbo:member ?writer .
  
  # The band member is also a musical artist
  ?bandMember dbo:associatedMusicalArtist ?artist .

  # Find another associated musical artist of this artist
  ?artist dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the initial artist is related to R.E.M.
  ?remArtist a dbo:Band ;
             dbo:member ?artist .
  FILTER(?remArtist = dbr:R.E.M.)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find alter ego in ""The Golden Master"" series
  ?alterEgo dbo:series dbr:The_Golden_Master ;
            dbo:profession ?professional .

  # Ensure the professional is an actor in the album ""Paper Trail""
  ?album a dbo:Album ;
         foaf:name ""Paper Trail""@en .
  ?album dbo:actor ?professional .

  # Find author of ""Smartbomb"" and ensure the professional acted in a movie related to this author
  ?book a dbo:Book ;
        foaf:title ""Smartbomb""@en .
  ?book dbo:author ?author .
  
  ?movie dbo:starring ?professional ;
         dbo:director ?director .
  ?director dbo:autobiography ?book .
}
```",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorCommander WHERE {
  # Jean Baptist, Comte d'Arco as a commander in a war that is also a TV show and societal event
  OPTIONAL { 
    ?war dbo:commander ?jeanBaptist ;
         rdf:type dbo:MilitaryConflict ;
         dbo:mediaAdaptation ?tvShow .
    FILTER(?tvShow != null)
    ?jeanBaptist foaf:name ""Jean Baptist, Comte d'Arco""@en .
  }

  # Michał Kazimierz Pac as a commander in a military conflict
  OPTIONAL {
    ?militaryConflict dbo:commander ?michaPac ;
                      rdf:type dbo:MilitaryConflict .
    ?michaPac foaf:name ""Michał Kazimierz Pac""@en .
  }
  
  # Successor of Michał Kazimierz Pac as a commander, who is also a politician and office holder
  OPTIONAL {
    ?successorCommander dbo:successorOf ?michaPac ;
                        rdf:type dbo:Politician ;
                        dbo:officeHolder ?office .
    FILTER(?office != null)
  }

  # Reference to the writer of the work of George Ducas
  OPTIONAL {
    ?georgeDucas dbo:author ?writer .
    ?writer foaf:name ?writerName .
  }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Find the tenant of the administration related to Spanish Socialist Workers' Party
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:member ?tenant ;
                  dbo:politicalParty ?party .

  # Find the residence country of Álvaro Quirós
  ?alvaroQuirós a dbo:Person ;
                foaf:name ""Álvaro Quirós""@en .
  
  ?residenceCountry dbo:resident ?alvaroQuirós ;
                    a dbo:Country .

  # Find the office of Anxo Quintana that is an event
  ?anxoQuintana a dbo:Person ;
                foaf:name ""Anxo Quintana""@en .
  
  ?officeEvent dbo:leader ?anxoQuintana ;
               a dbo:Event .

  FILTER(?tenant = ?alvaroQuirós)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT 
  ?bandOfKimWilson, 
  ?bandMemberBand, 
  ?associatedArtistOfBandMember, 
  ?associatedArtistOfNickCurran
WHERE {
  # Band associated with Kim Wilson
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  ?kimWilson dbo:musicalArtist ?fabulousThunderbirds .
  
  # Eric Clapton's band member and their associated musical artist
  ?ericClapton a dbo:Person ;
               foaf:name ""Eric Clapton""@en .
  ?bandMember dbo:memberOfBand ?claptonsBand ;
              dbo:musicalArtist ?associatedArtistOfBandMember .
  
  # Nick Curran's associated musical artist
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  ?nickCurran dbo:associatedMusicalArtist ?associatedArtistOfNickCurran .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?album a dbo:Album ;
         foaf:name ""Lasso the Moon""@en .
  
  ?film a dbo:Film ;
        dbo:work ?album .

  ?actor a dbo:Actor ;
         dbo:actorInFilm ?film .

  ?shadowAlterEgo a dbo:Person ;
                  dbo:alterEgoOf dbr:The_Shadow .

  ?actor dbo:professionalIn ?shadowAlterEgo .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producerProfession ?bandName ?shadowProfessional WHERE {
  # Producer of Coke Studio Philippines and their profession
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer a dbo:Person ;
            foaf:name ?producerName .
  OPTIONAL { ?producer dbo:profession ?producerProfession . }

  # Bob Thompson's birth name and associated band
  dbr:Bob_Thompson_(musician) foaf:name ?birthName .
  ?person a dbo:MusicalArtist ;
          foaf:name ?birthName .
  ?person dbo:band ?band .
  ?band foaf:name ?bandName .

  # The Shadow's alter ego and professional role
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  ?shadowAlterEgo a dbo:Person ;
                  dbo:profession ?shadowProfessional .
}
```",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?partyRoyBarreras ?partyFatherSofiaPetro WHERE {
  # Daniel Elahi Galán's country
  OPTIONAL { 
    dbr:Daniel_El%C3%A1i_Gal%C3%A1n dbo:country ?country .
  }
  
  # Roy Barreras' party
  OPTIONAL {
    dbr:Roy_Barreras dbo:partyMember ?partyRoyBarreras .
  }

  # Sofía Petro's father and his party
  OPTIONAL {
    ?sofiaPetroParent a dbo:Person ;
                      foaf:name ""Sofía_Petro""@en ;
                      dbo:child dbr:Sof%C3%ADa_Petro .
    
    ?sofiaPetroParent dbo:partyMember ?partyFatherSofiaPetro .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Philip, Despot of Romania and his parent (father)
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  ?philip dbo:parent ?fatherOfPhilip .

  # Find the parent of that father (grandparent) who is royalty
  ?grandparent a dbo:RoyalFamilyMember ;
               dbo:child ?fatherOfPhilip .

  # Find Béla IV of Hungary and his child who is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?royalChild .
  
  ?royalChild a dbo:RoyalFamilyMember .

  # Ensure the grandparent is related to this royal child
  FILTER(?grandparent = ?royalChild)

  # Find Maria of Bytom's spouse and their father who is royalty
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  ?maria dbo:spouse ?spouseOfMaria .

  ?fatherOfSpouse a dbo:RoyalFamilyMember ;
                  dbo:child ?spouseOfMaria .

  # Ensure the grandparent is related to this father
  FILTER(?grandparent = ?fatherOfSpouse)

  # Finally, find the spouse of the identified grandparent
  OPTIONAL { ?grandparent dbo:spouse ?spouse . }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  ?author a dbo:Person ;
          dbo:author ?book ;
          dbo:politician ?politicianRole ;
          dbo:officeHolder ?officeRole .

  OPTIONAL { ?book foaf:name ""Hillary Clinton""@en . }
  
  OPTIONAL {
    ?warCommander a dbo:WarCommander ;
                  dbo:commandedIn ?war .
    ?owner dbr:USS_Arcadia_(ID-1605) dbo:owner ?warCommander .
  }

  OPTIONAL {
    ?resident a dbo:Person ;
              foaf:name ""Chappaqua, New York""@en .
    ?author dbo:residence ?resident .
  }
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Paulus Powell's birth place and its governor
  OPTIONAL {
    dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
    ?region a dbo:Region ;
            dbo:administrativeRegion ?paulusBirthPlace .
    ?governor a dbo:Politician ;
              dbo:governs ?region .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }

  # Vince Gilligan's awards and awardees' birth places
  OPTIONAL {
    dbr:Vince_Gilligan dbo:award ?award .
    ?awardee dbo:recipientOf ?award .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }

  # American author of the reference to El Deafo
  OPTIONAL {
    dbr:El_Deafo dbo:referenceBy ?reference .
    ?author a dbo:Person ;
            foaf:nationality <http://dbpedia.org/resource/United_States> ;
            dbo:reference ?reference .
    ?author dbo:birthPlace ?authorBirthPlace .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Saw Min Phyu's spouse and their child
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  ?spouseOfSawMinPhyu dbo:spouse ?sawMinPhyu .
  ?childOfSpouse dbo:parent ?spouseOfSawMinPhyu .

  # Min Hla Htut of Pyakaung's parent and their child
  dbr:Min_Hla_Htut_of_Pyakaung dbo:child ?minHlaHtutParentChild .
  ?parentOfMinHlaHtut dbo:parent dbr:Min_Hla_Htut_of_Pyakaung .

  # Saw Shwe Khet's child that is royalty and their father
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  ?royalChildOfSawShweKhet dbo:child ?sawShweKhet ;
                           a dbo:Royalty .
  ?fatherOfRoyalChild dbo:spouse ?parentOfRoyalChild .

  # Predecessor of the child of Saw Min Phyu's spouse
  ?predecessor dbo:successor ?childOfSpouse .
  
  FILTER(?childOfSpouse = ?minHlaHtutParentChild)
  FILTER(?fatherOfRoyalChild = ?spouseOfSawMinPhyu)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonParent WHERE {
  # Find Hon. Mary Frances Bowes-Lyon and her parent
  ?mary a dbo:Person ;
        foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .
  ?parentOfMary dbo:child ?mary .

  # Find Claude Bowes-Lony, 14th Earl of Strathmore and Kinghorne and his child
  ?claude a dbo:Person ;
          foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne""@en .
  ?childOfClaude dbo:parent ?claude .

  # Find the common parent
  ?commonParent dbo:child ?mary .
  ?commonParent dbo:child ?childOfClaude .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?actor ?producer WHERE {
  # Find the alter ego of Kent Allard
  dbr:Kent_Allard_(print) dbo:alias ?alterEgo .

  # Find the actor in High Society Blues
  dbr:High_Society_Blues dbo:starring ?actor .

  # Find the producer related to Cora Sue Collins' work
  ?work dbo:producer ?producer .
  ?collins foaf:name ""Cora Sue Collins""@en .
  ?collins dbo:associatedWith ?work .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?player WHERE {
  # Find Tony Hollings' birthdate
  dbr:Tony_Hollings dbo:birthday ?birthDate .

  # Find players born on the same date as Tony Hollings who are athletes, soccer players, sports managers, and soccer managers
  ?person a dbo:Person ;
          dbo:birthday ?sameBirthDate ;
          (dbo:athlete | dbo:soccerPlayer | dbo:sportsManager | dbo:soccerManager) ?role .
  FILTER(?birthDate = ?sameBirthDate)

  # Find the manager of this player who is also a sports manager and soccer manager
  OPTIONAL { ?person dbo:manager ?manager . }
  ?manager (dbo:sportsManager | dbo:soccerManager) .

  # Check if this manager has any connection to Hong Kong C
  OPTIONAL {
    dbr:Hong_Kong_C dbo:member ?manager .
  }

  BIND(?person AS ?player)
}
```",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find members of Khlyst who are musical artists
  ?khlystMember a dbo:Band ;
                dbo:bandMember ?person .
  FILTER(?khlystMember = dbr:Khlyst_(band))
  
  # Ensure the member is also a musical artist
  ?person a dbo:MusicalArtist .

  # Step 2: Find associated musical artists of Khlyst members
  OPTIONAL { ?person dbo:associatedBandOrMusicalArtist ?artist1 . }

  # Step 3: Find members of Burnt by the Sun who are bands or groups
  ?burntBySunMember a dbo:Band ;
                    dbo:bandMember ?groupPerson .
  FILTER(?burntBySunMember = dbr:Burnt_by_the_Sun_(band))
  
  # Ensure the member is also a band, group, and organization
  ?groupPerson a dbo:MusicalGroup ;
               a dbo:Organization .

  # Step 4: Find associated bands of Burnt by the Sun members
  OPTIONAL { ?groupPerson dbo:associatedBandOrMusicalArtist ?artist2 . }

  # Step 5: Cross-reference results to find common artists
  FILTER(?artist1 = ?artist2)
  
  BIND(?artist1 AS ?associatedArtist)
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # For Johnny Doughboy
  OPTIONAL {
    dbr:Johnny_Doughboy dbo:work ?work1 .
    ?work1 dbo:producer ?producer .
  }

  # For Kent Allard (print) and his alter ego's reference
  OPTIONAL {
    dbr:Kent_Allard_(print) dbo:alterEgo ?alterEgo .
    ?alterEgo dbo:work ?work2 .
    ?work2 dbo:producer ?producer .
  }

  # For Janet Gaynor
  OPTIONAL {
    dbr:Janet_Gaynor dbo:film ?movie .
    ?movie dbo:producer ?producer .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?event a dbo:Event, dbo:SocietalEvent .
  
  ?awardee dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath ;
           dbo:militaryForce ?militaryForce .

  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:militaryForce ?militaryForce .

  ?bayne foaf:name ""William Bayne""@en .
  ?commander foaf:name ?commanderName ;
             dbo:participatedInWar ?war .

  ?regiment dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
            dbo:participatedInWar ?war .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?profession ?bandName ?birthName ?fictionalCharacter WHERE {
  # Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  OPTIONAL { ?sam dbo:profession ?profession . }

  # Bob Thompson (musician) details
  ?bob a dbo:Person ;
       foaf:name ""Bob Thompson (musician)""@en .
  OPTIONAL { ?bob foaf:name ?birthName . }
  OPTIONAL {
    ?bandMember a dbo:Band ;
                dbo:member ?bob .
    ?bandMember foaf:name ?bandName .
  }

  # Walter B. Gibson's fictional character
  ?gibson a dbo:Person ;
          foaf:name ""Walter B. Gibson""@en .
  OPTIONAL {
    ?fictionalCharacter dbo:fictionalCharacter ?gibson ;
                        rdf:type dbo:ComicsCharacter .
  }
  
  FILTER(?profession = ?bandName)
  FILTER(?birthName = ?fictionalCharacter)
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Archduchess Helena of Austria's spouse and their royal child
  ?helena a dbo:Person ;
          foaf:name ""Helena of Austria""@en .
  
  OPTIONAL { ?helena dbo:spouse ?spouse . }
  
  OPTIONAL { ?royalChild1 dbo:parent ?spouse ;
                          a dbo:RoyalFamilyMember . }

  # Predecessor of the royal child
  OPTIONAL { ?predecessor dbo:successor ?royalChild1 . }

  # Archduke Charles Louis of Austria's royal child and their grandchild
  ?charlesLouis a dbo:Person ;
                foaf:name ""Charles Louis, Archduke of Austria""@en .
  
  OPTIONAL { ?royalChild2 dbo:parent ?charlesLouis ;
                           a dbo:RoyalFamilyMember . }
  
  OPTIONAL { ?grandchild1 dbo:parent ?royalChild2 ;
                         a dbo:RoyalFamilyMember . }

  # Alexander of Württemberg's great-grandchild
  dbr:Alexander_of_W%C3%BCrttemberg dbo:child ?child1 .
  ?child1 dbo:child ?child2 .
  ?child2 dbo:child ?greatGrandChild .

  FILTER(?predecessor != ?royalChild1 && ?predecessor != ?royalChild2 &&
         ?predecessor != ?grandchild1 && ?predecessor != ?greatGrandChild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of ""High Society Blues""
  ?highSocietyActor dbo:actorIn dbr:High_Society_Blues .
  
  # Find the producer related to this actor's work
  OPTIONAL { ?highSocietyActor dbo:producedBy ?producer . }
  
  # Basil Rathbone is associated with ""The Shadow""
  ?rathbone a dbo:Person ;
            foaf:name ""Basil Rathbone""@en .
  
  # Find the producer related to Basil Rathbone's work
  OPTIONAL { ?rathbone dbo:producedBy ?producer . }
  
  # Find the actor of ""Johnny Doughboy""
  ?doughboyActor dbo:actorIn dbr:Johnny_Doughboy .
  
  # Find the producer related to this actor's work
  OPTIONAL { ?doughboyActor dbo:producedBy ?producer . }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?warOfGoldenSword ?warOf25 WHERE {
  # Find individuals who received the Golden Sword for Bravery
  ?person dbo:award dbr:Golden_Sword_for_Bravery ;
          dbo:nationality dbr:Russian_Empire .

  # Get wars they participated in
  OPTIONAL { ?person dbo:participatedIn ?warOfGoldenSword . }

  # Find individuals who received an award related to ""25""
  ?anotherPerson dbo:award ?award25 .
  
  # Assuming the award is identified by a resource with ""25"" in its name or description
  FILTER(CONTAINS(LCASE(STR(?award25)), ""25""))

  # Get wars they participated in
  OPTIONAL { ?anotherPerson dbo:participatedIn ?warOf25 . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorDispatches ?professionActorDispatches ?actorAbKyaHoga ?comicsCharacter WHERE {
  # Actor of Dispatches from Elsewhere
  dbr:Dispatches_from_Elsewhere dbo:actor ?actorDispatches .
  
  # Check if the actor is a politician
  OPTIONAL { ?actorDispatches foaf:profession ?professionActorDispatches . }
  FILTER(CONTAINS(LCASE(?professionActorDispatches), ""politician""))

  # Actor of Ab Kya Hoga who is a politician
  dbr:Ab_Kya_Hoga dbo:actor ?actorAbKyaHoga .
  
  OPTIONAL { ?actorAbKyaHoga foaf:profession ?professionActorAbKyaHoga . }
  FILTER(CONTAINS(LCASE(?professionActorAbKyaHoga), ""politician""))

  # Comics character alter ego of The Shadow (video game)
  dbr:The_Shadow_(video_game) dbo:alterEgo ?comicsCharacter .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?award ?bandMember WHERE {
  ?award a dbo:Award ;
         dbo:region ?region ;
         dbo:state ?state ;
         dbo:settlement ?settlement .
  
  FILTER(?region != """" && ?state != """" && ?settlement != """")
  
  ?award dbo:recipient ?band .
  ?band dbo:location ?nyLocation .
  ?nyLocation foaf:name ""New York (state)""@en .

  ?bandMember a dbo:Person ;
              dbo:memberOfBand ?band ;
              dbo:nativePlace ?floridaNativePlace ;
              foaf:name ?birthName .

  ?musicalArtist a dbo:MusicalArtist ;
                 dbo:nativePlace ?floridaNativePlace ;
                 foaf:name ?birthName .
  
  ?uncleMurdaMember a dbo:Person ;
                    dbo:memberOfBand <http://dbpedia.org/resource/Uncle_Murda> ;
                    foaf:name ?bandMemberName .

  FILTER(?bandMember = ?musicalArtist && ?bandMember = ?uncleMurdaMember)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?event a dbo:Disease ;
         dbo:societalEvent ""Spanish Flu""@en .
  
  ?navyCommander a dbo:Person ;
                 dbo:commanderOfMilitaryUnit ?usNavy ;
                 dbo:involvedIn ?event .

  ?billClinton a dbo:Person ;
               foaf:name ""Bill Clinton""@en ;
               dbo:spouse ?hillaryClinton .

  ?hillaryClinton a dbo:Person ;
                  foaf:name ""Hillary Clinton""@en ;
                  dbo:residenceLocation dbr:Chappaqua, New York .

  FILTER(?navyCommander = ?commander)
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find the child of Saw Shwe Khet and Saw Min Hla who is royalty
  ?child a dbo:Person ;
         dbo:parent ?sawMinHla ;
         dbo:royalty true .
  
  ?sawShweKhet dbo:child ?child .

  # Identify the father of this royal child
  ?father dbo:parent ?child ;
          dbo:royalty true .

  # Find the spouse of this father
  OPTIONAL { ?father dbo:spouse ?spouse . }

  # Consider the predecessor relationship for Saw Min Phyu's spouse's child
  ?sawMinPhyuSpouse dbo:spouse ?sawMinPhyu .
  
  ?sawMinPhyuChild dbo:child ?sawMinPhyuSpouse ;
                   dbo:predecessor ?predecessor .

  # Ensure the predecessor is royalty
  FILTER(?predecessor = ?father)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the ruling party in Central, Louisiana
  ?central a dbo:City ;
           dbo:country dbr:United_States ;
           foaf:name ""Central""@en .
  
  OPTIONAL { ?central dbo:government ?government . }
  OPTIONAL { ?government dbo:rulingParty ?rulingParty . }

  # Find films produced by Nat Levine
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .

  ?film dbo:producer ?natLevine ;
        a dbo:Film .
  
  # Identify an actor from one of these films
  ?actor dbo:actedIn ?film ;
         a dbo:Actor .

  # Determine the birth name of a parent of Tisha Sterling
  dbr:Tisha_Sterling dbo:parent ?parentOfTisha .
  ?parentOfTisha foaf:name ?birthName .

  # Find the spouse of the identified actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Identify the party member who is both part of the ruling party and this spouse
  ?partyMember a dbo:Person ;
               dbo:memberOfParty ?rulingParty ;
               foaf:name ?spouseName .

  FILTER(?spouse = ?partyMember)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies with actors
  ?movie dbo:actor ?actor .
  
  # Find albums related to T.I.'s work (songs and musical works)
  ?album dbo:artist dbr:T.I. ;
         dbo:song ?song .

  # Ensure the actor is also in the album's credits
  ?album dbo:performer ?actor .

  # Filter for songs that are also musical works
  ?song a dbo:Songs .
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?cynthia a dbo:Person ;
           foaf:name ""Cynthia Morgan""@en .
  
  OPTIONAL { ?cynthia dbo:associatedMusicalArtist ?associatedArtist . }
}

UNION

SELECT ?actorRole WHERE {
  ?afeez a dbo:Actor ;
         foaf:name ""Afeez Oyetoro""@en .

  OPTIONAL { ?afeez dbo:roleInFilm ?actorRole . }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?foundingDate WHERE {
  # Find Eleonora Menicucci's birth name and confirm she is a politician
  ?eleonora a dbo:Politician ;
            foaf:name ""Eleonora Menicucci""@en .
  
  # Find Luiza Erundina's alma mater
  dbr:Luiza_Erundina dbo:almaMater ?almaMater .

  # Ensure the alma mater is a university and an educational institution
  ?almaMater a dbo:University ;
             a dbo:EducationalOrganization .
  
  # Retrieve the founding date of the alma mater
  OPTIONAL { ?almaMater dbo:foundingDate ?foundingDate . }
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find the associated musical artist of the writer who is also a musical artist and an artist of ""Wizards of Waverly Place (soundtrack)""
SELECT DISTINCT ?writerArtist WHERE {
  ?soundtrack dbo:associatedMusicalArtist ?writer .
  ?writer foaf:name ?nameWriter .
  FILTER(CONTAINS(LCASE(?nameWriter), ""wizards of waverly place soundtrack""))
  
  OPTIONAL { ?writer dbo:associatedMusicalArtist ?writerArtist . }
  OPTIONAL { ?writer a dbo:MusicalArtist . }
  OPTIONAL { ?writer a dbo:Artist . }

  FILTER(BOUND(?writerArtist))
}

# Step 2: Find the associated musical artist of Stuart Tosh
SELECT DISTINCT ?stuartArtist WHERE {
  ?stuart foaf:name ""Stuart Tosh""@en .
  ?stuart dbo:associatedMusicalArtist ?stuartArtist .
}

# Step 3: Find a band member of the associated musical artist of David Paton
SELECT DISTINCT ?bandMember WHERE {
  ?davidPaton foaf:name ""David Paton""@en .
  ?davidPaton dbo:associatedMusicalArtist ?artist .
  
  ?artist dbo:bandMember ?bandMember .
}

# Combine results to answer the question
SELECT DISTINCT ?writerArtist ?stuartArtist ?bandMember WHERE {
  { SELECT DISTINCT ?writerArtist WHERE {
      ?soundtrack dbo:associatedMusicalArtist ?writer .
      ?writer foaf:name ?nameWriter .
      FILTER(CONTAINS(LCASE(?nameWriter), ""wizards of waverly place soundtrack""))
      
      OPTIONAL { ?writer dbo:associatedMusicalArtist ?writerArtist . }
      OPTIONAL { ?writer a dbo:MusicalArtist . }
      OPTIONAL { ?writer a dbo:Artist . }

      FILTER(BOUND(?writerArtist))
    }
  }
  
  UNION
  
  { SELECT DISTINCT ?stuartArtist WHERE {
      ?stuart foaf:name ""Stuart Tosh""@en .
      ?stuart dbo:associatedMusicalArtist ?stuartArtist .
    }
  }
  
  UNION
  
  { SELECT DISTINCT ?bandMember WHERE {
      ?davidPaton foaf:name ""David Paton""@en .
      ?davidPaton dbo:associatedMusicalArtist ?artist .
      
      ?artist dbo:bandMember ?bandMember .
    }
  }
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?foundingDate WHERE {
  # Query for Eleonora Menicucci's alma mater
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }

  # Query for the founding date of Federal University of Paraíba
  dbr:Federal_University_of_Para%C3%ADba dbo:foundingDate ?foundingDate .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find the band associated with Stuart Mcbeath Tosh
  ?stuart a dbo:Person ;
          foaf:name ""Stuart Mcbeath Tosh""@en .
  OPTIONAL { ?stuart dbo:bandMember ?band1 . }
  
  # Find the band associated with David Paton
  ?david a dbo:Person ;
         foaf:name ""David Paton""@en .
  OPTIONAL { ?david dbo:bandMember ?band2 . }

  # Ensure both bands are the same
  FILTER(?band1 = ?band2)

  # Find the writer of Wizards of Waverly Place (soundtrack) who is also a musical artist and an artist
  ?wizardsSoundtrack dbo:writer ?writer .
  FILTER(STRSTARTS(LCASE(?wizardsSoundtrack), ""wizards of waverly place soundtrack""))
  
  OPTIONAL { ?writer a dbo:Person ;
                   foaf:name ?writerName . }
  OPTIONAL { ?writer dbo:musicalArtist ?musicalArtist1 . }
  OPTIONAL { ?writer dbo:artist ?visualArtist1 . }

  # Ensure the writer is both a musical artist and an artist
  FILTER(?musicalArtist1 != UNDEF && ?visualArtist1 != UNDEF)

  # Find the associated musical artist of this writer
  OPTIONAL { ?musicalArtist1 dbo:associatedMusicalArtist ?associatedArtist . }
}
```",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaName ?locationInTokyo ?timeZoneRegion WHERE {
  dbr:Mitaka a dbo:PopulatedPlace ;
             foaf:name ?mitakaName .
  
  OPTIONAL { 
    ?mitaka dbo:locatedIn dbr:Tokyo .
    BIND(dbr:Tokyo AS ?locationInTokyo)
  }
  
  OPTIONAL {
    dbr:Japan dbo:timeZone ?timeZoneRegion .
  }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Child of the spouse that is royalty
  ?spouse dbo:child ?child .
  ?child a dbo:RoyalFamilyMember .

  # Child of the child (that is royalty)
  ?child dbo:child ?childOfChild .
  ?childOfChild a dbo:RoyalFamilyMember .

  # Reference to William I, who is royalty and an office holder
  dbr:William_I dbo:officeHolder ?reference .
  ?reference a dbo:RoyalFamilyMember ;
             dbo:royalty ?isRoyalty .
  
  # Father of the child related to the reference
  ?childOfChild dbo:parent ?father .
  ?father dbo:child ?relatedToReference .

  # Child of the parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRoger .
  ?parentOfRoger dbo:child ?childOfParentOfRoger .

  FILTER(?relatedToReference = ?reference)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?film ?deathPlace WHERE {
  VALUES (?film) { 
    (dbr:Aladdin_(1958_film)) 
    (dbr:Color_Me_Dead) 
    (dbr:The_Sky_Ranger_(1928_film))
  }
  
  ?film dbo:starring ?actor .
  ?actor a dbo:Person ;
         dbo:deathPlace ?deathPlace .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?greatGreatGrandchild ?royalGrandchild ?predecessor WHERE {
  # Alexander of Württemberg and his great-great-grandchild
  dbr:Aleksander_of_W%C3%BCrttemberg dbo:parent ?child1 .
  ?child1 dbo:parent ?grandchild1 .
  ?grandchild1 dbo:parent ?greatGrandchild1 .
  ?greatGrandchild1 dbo:parent ?greatGreatGrandchild .

  # Parent of Archduchess Margarete Sophie and her royal grandchild
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?parentMargarete .
  ?parentMargarete dbo:child ?child2 .
  ?child2 dbo:child ?royalGrandchild .
  FILTER(STRSTARTS(LCASE(?royalGrandchild), ""http://dbpedia.org/resource/""))

  # Spouse of Archduchess Helena, their royal child, and predecessor
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouseHelena .
  ?spouseHelena dbo:child ?royalChildHelena .
  FILTER(STRSTARTS(LCASE(?royalChildHelena), ""http://dbpedia.org/resource/""))
  
  # Predecessor of the royal child
  ?predecessor dbo:successor ?royalChildHelena .

  # Conditions to match the great-great-grandchild with other entities
  FILTER(?greatGreatGrandchild = ?royalGrandchild)
  FILTER(?royalGrandchild = ?predecessor)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childOfHideyoshi ?warOfChild ?koichiro ?warOfKoichiro WHERE {
  # Toyotomi Hideyoshi's child and their war
  dbr:Toyotomi_Hideyoshi dbo:child ?childOfHideyoshi .
  OPTIONAL { ?childOfHideyoshi dbo:participatedIn ?warOfChild . FILTER(?warOfChild a dbo:War) }

  # Koichirō and their war
  ?koichiro foaf:name ""Koichirō""@en .
  OPTIONAL { ?koichiro dbo:participatedIn ?warOfKoichiro . FILTER(?warOfKoichiro a dbo:War) }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Caroline Louise Bevan Symonds""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  # Find the person who died on 1850-08-05
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:United_States_of_America .

  # Find Quincy Adams Gillmore's force
  ?gillmoreAward dbo:recipient dbr:Quincy_Adams_Gillmore ;
                 dbo:award dbr:Medal_of_Honor .
  ?force dbo:member ?gillmoreAward .

  # Find the war associated with a Medal of Honor awardee
  ?medalOfHonorAward dbo:recipient ?awardee ;
                     dbo:war ?war .

  FILTER(?birthPlace = ?settlement)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor WHERE {
  ?adaJaneLow a dbo:Person ;
              foaf:name ""Ada Jane Low""@en .
  
  OPTIONAL { ?adaJaneLow dbo:predecessor ?predecessor . }
  FILTER EXISTS { ?predecessor a dbo:Politician }

  ?markTournier a dbo:Person ;
                foaf:name ""Mark Tournier""@en .

  ?markTournier dbo:birthPlace ?birthPlace .
  
  ?decedent dbo:deathPlace ?birthPlace .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:alumnusOf dbr:Plovdiv_University_Paisii_Hilendarski ;
          dbo:birthPlace ?birthPlace .
  
  ?region dbo:timeZone dbr:Eastern_European_Time ;
          dbo:settlement ?settlement .
  
  ?person dbo:residence ?settlement .
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamSarmiento ?teamPollio ?actorTeam WHERE {
  # Marcelo Sarmiento's team as a player and manager
  ?sarmiento a dbo:SoccerPlayer ;
             dbo:birthday ?birthdaySarmiento .
  OPTIONAL { ?sarmiento dbo:managerOf ?teamSarmiento . }
  OPTIONAL { ?sarmiento dbo:sportTeam ?teamSarmiento . }

  # Marty Pollio's team as an athlete
  ?pollio a dbo:Athlete ;
          dbo:birthday ?birthdayPollio .
  OPTIONAL { ?pollio dbo:sportTeam ?teamPollio . }

  # Actor from ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?actor dbr:All_or_Nothing:_Manchester_City dbo:castMember ;
        a dbo:SoccerPlayer, dbo:Athlete .
  OPTIONAL { ?actor dbo:sportTeam ?actorTeam . }

  # Ensure the birthdates match
  FILTER(?birthdaySarmiento = (SELECT ?bday WHERE {
    ?sarmiento dbo:birthday ?bday .
  }))
  
  FILTER(?birthdayPollio = (SELECT ?bday WHERE {
    ?pollio dbo:birthday ?bday .
  }))

}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find Snoop Dogg's birth name and associated artist
  ?snoop a dbo:Person ;
         foaf:name ""Snoop Dogg""@en .
  OPTIONAL { ?snoop dbo:birthName ?snoopBirthName . }
  OPTIONAL { ?snoop dbo:associatedMusicalArtist ?artist1 . }

  # Find the native of Central Region, Ghana who is an artist
  ?ghanaian a dbo:Person ;
            dbo:nationality dbr:Ghana ;
            dbo:birthPlace dbr:Central_Region,_Ghana .
  OPTIONAL { ?ghanaian dbo:birthName ?ghanaBirthName . }
  OPTIONAL { ?ghanaian dbo:associatedMusicalArtist ?artist2 . }

  # Find the writer of ""The Live Anthology"" and their profession
  ?anthologyWriter a dbo:Person ;
                   dbo:work dbr:The_Live_Anthology .
  OPTIONAL { ?anthologyWriter dbo:profession ?writerProfession . }
  
  # Ensure the Ghanaian's profession matches the anthology writer's profession if it is musical artist
  FILTER(?ghanaian dbo:profession ?writerProfession && ?writerProfession = ""MusicalArtist"")

  # Find associated artists of both individuals
  OPTIONAL { ?artist1 foaf:name ?associatedArtist . }
  OPTIONAL { ?artist2 foaf:name ?associatedArtist . }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?successor WHERE {
  # Commander in the Battle of Vienna
  dbr:Battle_of_Vienna dbo:commander ?commander .

  # Successor in Russo-Polish War (1654–1667)
  OPTIONAL { 
    ?war a dbo:MilitaryConflict ;
         dbo:name ""Russo-Polish War (1654–1667)""@en .
    ?war dbo:successor ?successor .
    FILTER(?commander != ?successor) # Ensure they are distinct
  }

  # Filter for politician and office holder
  OPTIONAL { 
    ?successor a dbo:Politician ;
               dbo:officeHolder ?office .
  }
}
```",8,12,9,3,3,3,3,71,1,19,0,0.05,1.0,0.09523809523809523
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?organization WHERE {
  # Find George Hamilton Cameron's awards
  ?cameron a dbo:Person ;
           foaf:name ""George Hamilton Cameron""@en .
  
  OPTIONAL { ?award dbo:recipient ?cameron . }
  
  # Find the political party related to George Savage and its leader
  ?savage a dbo:Politician ;
          foaf:name ""George Savage (politician)""@en .
  
  ?party dbo:member ?savage ;
         a dbo:PoliticalParty .
  
  OPTIONAL { ?leader dbo:leaderOf ?party . }
  
  # Find the residence of the leader
  OPTIONAL { ?leader foaf:based_near ?residence . }
  
  # Ensure the organization is both an organization and a political party
  ?organization a dbo:Organization ;
                a dbo:PoliticalParty .
  
  FILTER(?award = ?organization || ?party = ?organization)
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Maria Anna of Bavaria's child who is royalty
  dbr:Maria_Anna_of_Bavaria dbo:child ?mariaChild .
  ?mariaChild a dbo:RoyalFamilyMember ;
              dbo:parent ?fatherOfMariaChild .

  # Archduke Charles Joseph of Austria's parent and commander in war
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?archdukeParent .
  ?commanderInWar a dbo:MilitaryPerson ;
                  dbo:commanded ?secondDragoonRegiment ;
                  dbo:child ?archdukeChild .

  # Societal event that is an event and a television show
  ?societalEvent a dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow .
  
  # Linking the commander to the societal event
  ?commanderInWar dbo:participatedIn ?societalEvent .

  # Finding the child of the father of Maria Anna's child who is royalty
  ?fatherOfMariaChild dbo:child ?royalChild .

  # Finding the father of the child of Archduke Charles Joseph's parent
  ?archdukeParent dbo:child ?parentOfArchdukeChild .
  ?parentOfArchdukeChild dbo:child ?finalChild .

  FILTER(?royalChild = ?finalChild)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  ?child dbo:parent ?spouse .
  ?parentOfChild a dbo:Person ;
                 foaf:name ?spouseName .
  FILTER(?spouse = ?parentOfChild)

  ?decedent dbr:Los_Angeles dbo:deathPlace ;
            dbo:parent ?parentOfChild .

  ?professionalInPhotographer a dbo:Photographer ;
                             dbo:parent ?parentOfChild .

  ?work dbo:actor ?actor .
  ?work a dbo:Film .
  
  FILTER(?decedent = ?parentOfChild)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Parent of the child who is a politician and an office holder
  ?child dbo:parent ?parent .
  FILTER EXISTS { ?parent dbo:occupation dbp:Politician . }
  FILTER EXISTS { ?parent dbo:officeHolder true . }

  # Awardee of Commander of the Royal Victorian Order related to Edward Stanley's child
  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .
  ?child dbo:parentOfAwardee ?awardee .

  # Alumnus of Eton College whose child is a politician
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?alumnusChild dbo:parent ?alumnus .
  FILTER EXISTS { ?alumnusChild dbo:occupation dbp:Politician . }

  # Linking the parent of the child to the alumnus's child
  ?parentOfChild dbo:child ?alumnusChild .

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPrinceChristian ?mayorAdministration ?copenhagenAdministration WHERE {
  # Administration related to Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  OPTIONAL { 
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:positionHeld ?administrationPrinceChristian .
  }

  # Mayor's administration for the Duchy of Schleswig
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:administrativeArea dbr:Duchy_of_Schleswig ;
           dbo:positionHeld ?mayorAdministration .
  }
  
  # Administration from Copenhagen
  OPTIONAL {
    ?copenhagenAdmin a dbo:AdministrativeRegion ;
                    dbo:administers ?copenhagenAdministration ;
                    foaf:name ""Copenhagen""@en .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?writer WHERE {
  # Identify the producer of ""Storm in a Teacup""
  dbr:Storm_in_a_Teacup dbo:producer ?producer .

  # Find the birthplace of this producer
  ?producer foaf:birthPlace ?birthPlace .

  # Identify musical works by Apache Indian and their writers
  dbr:Apache_Indian dbo:musicalWork ?work .
  ?work dbo:writer ?writer .

  # Filter writers who are native to the identified birthplace
  ?writer dbo:nationality ?nationality ;
          foaf:birthPlace ?nativeBirthPlace .
  
  FILTER(?nativeBirthPlace = ?birthPlace)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:birthDate ""1979-11-03""^^xsd:date .
  
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .

  ?actor a dbo:Actor ;
         dbo:actorIn ?film ;
         foaf:name ?personName .

  FILTER(?person = ?actor)

  ?athlete a dbo:Person, dbo:Athlete ;
           dbo:birthday ?birthday .
  
  ?martyPollio a dbo:Person ;
               dbo:birthday ?martyBirthday .

  FILTER(?birthday = ?martyBirthday)
  
  ?filmAthlete a dbo:Actor ;
               dbo:actorIn ?film ;
               foaf:name ?athleteName .

  OPTIONAL { ?person dbo:memberTeam ?team }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativePlace ?sportsClub WHERE {
  # Find David Luckman's residence and its native place
  ?david a dbo:Person ;
         foaf:name ""David Luckman""@en .
  ?david dbo:residence ?residence .
  ?residence dbo:nativePlace ?nativePlace .

  # Find the sports club managed by Jamie McCunnie that is also a soccer club
  ?jamie a dbo:Person ;
         foaf:name ""Jamie McCunnie""@en .
  ?jamie dbo:manager ?sportsClub .
  ?sportsClub a dbo:SportsTeam ;
              dbo:sport dbr:Soccer .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Claude Bowes-Lyon's child
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .

  # William Gayner's birthplace that is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Parent of Claude Bowes-Lyon's child who is native to the birthplace of William Gayner
  ?child dbo:nativePlace ?birthPlace .
  ?parent dbo:child ?child .

  # Ensure this person is also the parent of Hon. Mary Frances Bowes-Lyon
  ?parent dbo:child dbr:Hon._Mary_Frances_Bowes-Lyon .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find actor and producer for ""High Society Blues""
  ?highSocietyBlues a dbo:Film ;
                    dbo:title ""High Society Blues""@en .
  
  ?actor1 dbo:actor ?highSocietyBluis ;
          dbo:producer ?work1 .

  OPTIONAL { ?work1 a dbo:Film . }
  
  # Find actor and producer for ""Johnny Doughboy""
  ?johnnyDoughboy a dbo:Film ;
                  dbo:title ""Johnny Doughboy""@en .
  
  ?actor2 dbo:actor ?johnnyDoughboy ;
          dbo:producer ?work2 .

  OPTIONAL { ?work2 a dbo:Work . }

  # Find the producer of these works
  ?producer dbo:producedAtTime ?work1 ;
            dbo:producedAtTime ?work2 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the writer who is also a musical artist of ""The Live Anthology""
  ?album dbo:creator ?writer ;
         foaf:name ""The Live Anthology""@en .
  
  ?writer a dbo:Writer ;
          dbo:musicalArtist ?musicalArtist .

  # Identify an artist from Central Region, Ghana
  ?artist a dbo:Person ;
          dbo:nativePlace dbr:Central_Region,_Ghana ;
          foaf:name ?birthName .

  # Link the artist to Elorm Kabu Amenyah
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah""@en .
  
  OPTIONAL { ?artist dbo:associatedMusicalArtist ?elorm }

  FILTER(?writer = ?musicalArtist)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:castMember ?veraLynn .
  
  ?veraLynn foaf:name ""Vera Lynn""@en .

  ?movie dbo:work ?work .
  ?work dbo:isPartOf ?tvShow .

  ?author dbo:author ?movie .

  ?parent a dbo:Person ;
          dbo:child ?author ;
          dbo:artist ?artistRole ;
          dbo:musicalArtist ?musicianRole .

  ?nativePlace a dbo:Settlement ;
               dbo:nativePlace ?parent ;
               dbo:country dbc:England .

}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producerOfHighSocietyBluesActor ?producerOfJohnnyDoughboyActor WHERE {
  # Find the actor of ""High Society Blues""
  ?highSocietyBlues dbo:actor ?actorHighSocietyBlues .
  dbr:High_Society_Blues a dbo:Film .

  # Find the producer of this actor's claim to fame (a movie)
  ?actorHighSocietyBlues dbo:filmProduction ?claimToFameMovie .
  ?claimToFameMovie dbo:producer ?producerOfHighSocietyBluesActor .

  # Find the actor of ""Johnny Doughboy""
  ?johnnyDoughboy dbo:actor ?actorJohnnyDoughboy .
  dbr:Johnny_Doughboy a dbo:Film .

  # Find the producer of this actor's claim to fame (a work)
  ?actorJohnnyDoughboy dbo:filmProduction ?claimToFameWork .
  ?claimToFameWork dbo:producer ?producerOfJohnnyDoughboyActor .

  # Identify the alter ego or professional identity related to ""Kent Allard""
  ?kentAllard a dbo:FictionalCharacter ;
              foaf:name ""Kent Allard""@en .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?nativeCountry .

  # Sports manager born on 1968-08-26
  ?manager a dbo:SportsManager ;
           foaf:birthday ""1968-08-26""^^xsd:date .
  
  # Successor of VfL Bochum 2006–07 season
  dbr:VfL_Bochum_2006%E2%80%9307_season dbo:succ ?successorSeason .

  # Manager manages a team in the successor season
  ?manager dbo:managesTeam ?team .
  ?team dbo:season ?successorSeason .

  # Manager manages a player in this team
  ?player a dbo:SoccerPlayer ;
          dbo:playsFor ?team .
  ?manager dbo:managesPlayer ?player .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Nate Newton's band
  ?nateNewton a dbo:Musician ;
              foaf:name ""Nate Newton""@en .
  
  ?nateBand a dbo:MusicalArtist, dbo:Organization ;
            dbo:musicalArtist ?nateNewton .

  # Find the producer of ""Nothing to Gein""
  ?album dbo:title ""Nothing to Gein"" ;
         dbo:producer ?producer .

  # Find the musical artist associated with this producer
  ?artist a dbo:MusicalArtist, dbo:Organization ;
          dbo:musicalArtist ?producer .

  # Get band members of this musical artist
  ?bandMember dbo:bandMember ?artist .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  # Shirley Stoler's profession
  dbr:Shirley_Stoler dbo:profession dbr:Actress .

  # Award/settlement in New York
  dbr:Pulitzer_Prize dbo:location dbr:New_York_City ;
                    a dbo:Award ;
                    dbo:country dbr:United_States .

  # Person with the same profession and native to the award/settlement
  ?person dbo:profession dbr:Actress ;
          dbo:nativePlace dbr:Pulitzer_Prize .

  # Retrieve the child of this person
  ?person dbo:child ?child .
}
```",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?successor ?militaryConflict ?writer WHERE {
  # Commander in the Battle of Vienna
  dbr:Battle_of_Vienna dbo:commander ?commander .

  # Successor who is a politician and office holder
  OPTIONAL { ?commander dbo:succeededBy ?successor .
             ?successor a dbo:Politician ;
                        dbo:officeHolder ?office . }

  # Michał Kazimierz Pac's military conflict
  dbr:Micahel_Kazimierz_Pac dbo:militaryConflict ?militaryConflict .

  # Reference to the writer of George Ducas's work
  OPTIONAL { dbr:George_Ducas dbo:work ?work .
             ?work dbo:writer ?writer . }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award ?child WHERE {
  # Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:awardsReceived ?award .
  
  # Ensure the award is an American settlement
  ?award a dbo:Settlement ;
         dbo:country dbr:United_States .

  # Find Shirley Stoler and her child
  ?shirley a dbo:Person ;
           foaf:name ""Shirley Stoler""@en .
  ?shirley dbo:child ?child .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war ?force ?settlement WHERE {
  # Find the war Amasa Tracy was involved in
  dbr:Amasa_Tracy dbo:militaryConflict ?war .

  # Identify Quincy Adams Gillmore's award and its awardee's force
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .
  ?award dbo:awardee ?force .

  # Find the person deceased on 1850-08-05 and their birthplace
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .
  
  FILTER(?settlement a dbo:Settlement)
  FILTER(STRSTARTS(LCASE(?settlement), ""american""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthplace ?actorBirthplace WHERE {
  # Part 1: Find the birthplace of the awardee of Sangeet Natak Akademi Fellowship
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship ;
          dbo:birthPlace ?awardeeBirthplace .

  # Part 2: Find the birthplace of an actor in a movie with Dipankar De
  ?movie dbo:actor dbr:Dipankar_De .
  ?movie dbo:actor ?actor .
  ?actor dbo:birthPlace ?actorBirthplace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find the nickname of Russia national football team
  dbr:Russia_national_football_team dbo:nickname ?nickname .

  # Find players associated with this team
  ?teamPlayer a dbo:Footballer ;
              dbo:memberTeam dbr:Russia_national_football_team .
  
  # Check if any player is an author of works by Aleksandr Filimonov
  OPTIONAL {
    ?playerWork dbo:author ?player ;
                dbo:writer dbr:Aleksandr_Filimonov .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?childOfYeshaq ?fatherOfChild ?childOfBaedaMaryam WHERE {
  # Find the alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Identify Yeshaq I and his child
  dbr:Isaac_I_of_Ethiopia a dbo:Monarch ;
                          dbo:child ?childOfYeshaq .

  # Find the father of Yeshaq I, ensuring he is royalty and an office holder
  ?fatherOfChild a dbo:Monarch ;
                dbo:officeHolder ?office ;
                dbo:parent dbr:Isaac_I_of_Ethiopia .
  
  # Identify Baeda Maryam I and his child
  dbr:Baeda_Maryam_I dbo:child ?childOfBaedaMaryam .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Spanish Socialist Workers' Party administration tenant
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  OPTIONAL { 
    ?administration dbo:hasMember ?member .
    ?member dbo:positionTitle ?title .
    FILTER(?title = ""Leader"" || ?title = ""President"")
    ?member foaf:name ?tenantName .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?tenantName), "" "", ""_""))) AS ?tenant)
  }
  
  # Tenant's citizenship and residence
  OPTIONAL { 
    ?tenant dbo:nationality dbr:Spain .
    ?tenant dbo:residence ?country .
    FILTER EXISTS { ?country a dbo:Country }
  }

  # Relation to Alberto Núñez Feijóo's office
  OPTIONAL {
    ?feijoo dbo:office ?office .
    ?feijoo foaf:name ""Alberto Núñez Feijóo""@en .
    FILTER(?tenant != ?feijoo)
  }
}
```",7,10,8,3,3,3,3,71,0,8,1,0.0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childOfRoyalParent ?realNamePeterIV WHERE {
  ?martin a dbo:Person ;
          foaf:name ""Martin of Aragon""@en .
  
  ?parentOfMartin dbo:child ?martin .
  ?parentOfMartin a dbo:Royalty .

  ?royalParent dbo:child ?childOfRoyalParent .

  FILTER(?parentOfMartin = ?royalParent)

  dbr:Peter_IV_of_Aragon foaf:name ?realNamePeterIV .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?tvShow WHERE {
  # Find Maria I of Portugal and her associated war
  dbr:Maria_I_of_Portugal dbo:commander ?war .

  # Ensure the war is also depicted as a television show
  ?war dbo:depicts ?tvShow .
  
  # Identify the Polish athlete from Łódź
  ?athlete dbo:nativePlace dbr:Łódź ;
           foaf:nationality dbr:Poland ;
           dbo:sportType ?sport .

  # Find the country of residence for this athlete
  ?athlete dbo:residence ?country .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territoryAdministered ?mayorAdministration ?royaltyPerson WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find territory administered from this death place
  ?territoryAdministered dbo:administersFrom ?deathPlace .

  # Find mayor of Duchy of Schleswig and their administration
  ?mayor a dbo:Mayor ;
         dbo:administrates ?duchyOfSchleswig .
  ?duchyOfSchleswig foaf:name ""Duchy of Schleswig""@en .
  ?mayorAdministration dbo:administers ?duchyOfSchleswig .

  # Find the person born as royalty, Prince Christian
  ?royaltyPerson a dbo:Royalty ;
                 foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeOfLeaderInMadrid ?commanderRole WHERE {
  # Part for Miguel Maura's political party leader in Madrid
  ?miguelMaura a dbo:Politician ;
               foaf:name ""Miguel Maura""@en .
  
  ?miguelMaura dbo:party ?politicalParty .

  OPTIONAL { 
    ?leaderOfParty a dbo:Person ;
                   dbo:office ?officeInMadrid ;
                   dbo:party ?politicalParty .
    
    FILTER(CONTAINS(LCASE(STR(?officeInMadrid)), ""madrid""))
    
    BIND(?officeInMadrid AS ?officeOfLeaderInMadrid)
  }

  # Part for Manuel Pinto da Costa's role in a military conflict
  ?manuelPintoDaCosta a dbo:Politician ;
                      foaf:name ""Manuel Pinto da Costa""@en .
  
  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              dbo:commander ?manuelPintoDaCosta .
    
    ?conflict dbo:officeHolder ?commanderRole .
    
    BIND(?commanderRole AS ?commanderRole)
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee WHERE {
  ?award a dbo:Award ;
         dbp:name ""Anita Borg Institute Women of Vision Awards""@en .
  
  ?awardee dbo:recipientOfAward ?award ;
           dbo:nationality dbr:Japan ;
           dbo:profession dbr:Television_Show_Personality .

  OPTIONAL { 
    ?awardee dbo:birthPlace ?birthplace .
    ?region a dbo:Region ;
            dbp:timeZone ""Japan Standard Time"" .
    FILTER(?birthplace = ?region)
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  # Find Ian Gregson's awards
  ?ianGregson a dbo:Person ;
              foaf:name ""Ian Gregson""@en .
  
  ?award dbo:recipient ?ianGregson .

  # Find the movie associated with the award
  ?movie dbo:awardsReceived ?award .

  # Find Linda Bruckheimer's birth name and her spouse
  ?lindaBruckheimer a dbo:Person ;
                   foaf:name ""Linda Bruckheimer""@en .
  
  ?lindaBruckheimer foaf:nick ?birthName .
  
  ?spouse a dbo:Person ;
          foaf:related ?lindaBruckheimer ;
          foaf:name ?spouseName .

  # Ensure the spouse is related to the movie
  ?movie dbo:producer ?producer .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Robert Plant""@en .
  OPTIONAL { ?person dbo:musicalBand ?band . }
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthdate .
  FILTER (YEAR(?birthdate) = 1945 && MONTH(?birthdate) = 3 && DAY(?birthdate) = 30)

  ?member dbo:memberOfBand ?band ;
          dbo:associatedBand dbr:The_Fabulous_Thunderbirds .

  OPTIONAL {
    ?nickCurran a dbo:MusicalArtist ;
                foaf:name ""Nick Curran""@en .
    ?nickCurran dbo:associatedBand ?band .
  }

  FILTER (?person = ?member || ?person = ?nickCurran)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify producer of ""Lotus (R.E.M. song)""
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .
  
  # Ensure the producer is an organization and a band/group
  ?producer a dbo:Organization ;
            dbo:musicGroup ?band .

  # Step 2: Identify writer of the album containing ""Sappy""
  dbr:Sappy dbo:album ?album .
  ?album dbo:writer ?writer .
  
  # Ensure the writer is a band member
  ?writer dbo:member ?bandMember .

  # Step 3: Find associated musical artists for both entities
  OPTIONAL { ?producer dbo:associatedMusicalArtist ?artist1 . }
  OPTIONAL { ?bandMember dbo:associatedMusicalArtist ?artist2 . }

  FILTER(?artist1 = ?artist2)
  BIND(?artist1 AS ?associatedArtist)
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?entityInBirthplace WHERE {
  # Find Elena Žalinkevičaitė-Petrauskienė and her awards
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:award ?goldenSwordAward .
  
  # Find the war related to the Golden Sword for Bravery award
  ?goldenSwordAward dbo:relatedWar ?war1 .

  # Assume there is another specific award related to a ""25th anniversary""
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:award ?anniversaryAward .
  
  # Find the war related to this 25th-anniversary award
  ?anniversaryAward dbo:relatedWar ?war2 .

  # Get entities in her birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  # Find other entities related to the birthplace
  ?entityInBirthplace a dbo:Entity ;
                     dbo:location ?birthPlace .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # The Shadow's alter ego professional role
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo a dbo:Person ;
            dbo:profession ?professional .

  # Author of Smartbomb and their movie roles
  dbr:Smartbomb dbo:author ?author .
  ?author dbo:filmActingRole ?movieRole .
  ?movieRole dbo:actor ?actor .

  # T.I.'s albums and songs that are musical works
  ?album dbo:artist dbr:T.I. ;
         dbo:song ?song .
  ?song a dbo:Songs ;
        dbo:musicalWork ?musicalWork .

  FILTER(?actor = ?professional)
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfAwardee WHERE {
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  
  ?rodneyLees dbo:award ?award .

  OPTIONAL { ?awardee dbo:parent ?parentOfAwardee . }
  
  OPTIONAL { ?parentOfAwardee dbp:child ?politicianChild . }
  
  FILTER(?politicianChild a dbo:Politician)
  
  OPTIONAL { ?alumnus dbp:almaMater dbr:Eton_College . }
  
  OPTIONAL { ?alumnus dbp:child ?childOfAlumnus . }
  
  OPTIONAL { ?parentOfChild a dbo:Person ;
                          foaf:name ?politicianName ;
                          dbo:officeHolder ?office .
  
          FILTER(?office != """")
        }
  
  OPTIONAL { ?parentOfChild dbp:child ?politicianChild . }

  OPTIONAL { ?derbyParent dbp:child ?parentOfChild . }
  
  OPTIONAL { ?derbyParent foaf:name ""Edward Stanley, 17th Earl of Derby""@en . }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  # Leader of the 2003 Madrid City Council election
  OPTIONAL {
    ?madridLeader a dbo:OfficeHolder ;
                  dbo:officeTitle ""Mayor""@en ;
                  dbo:electedDuring dbr:Madrid_City_Council_election,_2003 .
    ?madridResidence dbo:tenant ?tenant .
    FILTER(?madridLeader = ?residenceOwner)
  }

  # Commander in the Central African Republic Civil War
  OPTIONAL {
    ?commander a dbo:OfficeHolder ;
               dbo:officeTitle ""Commander""@en ;
               dbo:relatedEvent dbr:Central_African_Republic_Civil_War .
    ?commanderResidence dbo:tenant ?tenant .
    FILTER(?commander = ?residenceOwner)
  }

  # Leader of the political party associated with Miguel Maura
  OPTIONAL {
    ?miguelMauraParty a dbo:PoliticalParty ;
                      dbo:leader ?partyLeader .
    ?partyLeader a dbo:OfficeHolder ;
                 dbo:relatedPerson dbr:Miguel_Maura .
    ?partyLeaderResidence dbo:tenant ?tenant .
    FILTER(?partyLeader = ?residenceOwner)
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?targetChild WHERE {
  # Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Child of the spouse who is royalty
  ?childOfSpouse dbo:parent ?spouse ;
                rdf:type dbo:Monarch .

  # Father of this child (that is royalty) related to William I
  ?fatherOfChild dbo:child ?childOfSpouse ;
                 dbo:officeHolder ?office .
  
  # Reference that is royalty and an office holder related to William I
  ?reference dbo:officeHolder ?office ;
             rdf:type dbo:Monarch ;
             dbo:relatedTo dbr:William_I .

  # Child of the parent of the child (that is royalty) of Roger II of Sicily
  ?parentOfChild dbo:child ?royaltyChild .
  ?royaltyChild dbo:parent ?parentOfChild ;
                rdf:type dbo:Monarch .
  
  dbr:Roger_II_of_Sicily dbo:child ?royaltyChild .

  # Final target child
  ?targetChild dbo:parent ?fatherOfChild ;
               rdf:type dbo:Monarch .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country WHERE {
  ?anxo a dbo:Person ;
        foaf:name ""Anxo Quintana""@en .
  
  ?office dbo:leader ?anxo ;
          a dbo:Event .

  ?party dbo:member ?anxo ;
         foaf:name ""Spanish Socialist Workers' Party""@en .

  ?tenant dbo:member ?party ;
          foaf:nationality dbr:Spain .

  ?residence dbo:resident ?tenant .
  
  ?country dbo:country ?residence .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Al Pacino
  OPTIONAL {
    ?alPacino a dbo:Person ;
              foaf:name ""Alfredo James Pacino""@en .
    OPTIONAL { ?alPacino dbo:associatedBand ?associatedArtist . }
  }

  # Joey Badass
  OPTIONAL {
    ?joeyB a dbo:Person ;
           foaf:name ""Jo-Vaughn Virginie Scott""@en .
    OPTIONAL { ?joeyB dbo:associatedBand ?associatedArtist . }
  }

  # Rod Argent
  OPTIONAL {
    ?rodArgent a dbo:Person ;
               foaf:name ""Rodney Terence Argent""@en ;
               dbo:profession dbr:Musician .
    OPTIONAL { ?rodArgent dbo:associatedBand ?associatedArtist . }
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  # Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # The native place of the award should be a region, state, and settlement
  ?nativePlace dbo:nativePlace ?award ;
               a dbo:Region ;
               a dbo:State ;
               a dbo:Settlement .

  # Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda foaf:name ?bobbyShmurdaBirthName .

  # The person with the same birth name as Bobby Shmurda
  ?person foaf:name ?bobbyShmurdaBirthName ;
          dbo:nativePlace ?nativePlace .

  # Ensure this person is a band member of a musical artist who is part of GS9
  ?artist a dbo:MusicalArtist ;
          dbo:member ?gs9Member .
  ?gs9Member dbo:bandMember ?person .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors in ""Ab Kya Hoga""
  ?abKyaHoga a dbo:TelevisionShow ;
             dbo:title ""Ab Kya Hoga""@en .
  
  ?actor dbo:profession dbo:Actor ;
         dbo:workFeaturedIn ?abKyaHoga .

  # Check if the actor is also a politician
  OPTIONAL { ?actor dbo:occupation dbo:Politician . }

  # Find movies or TV shows featuring Richard E. Grant
  dbr:Richard_E._Grant dbo:profession dbo:Actor ;
                      dbo:workFeaturedIn ?grantWork .
  
  # Link the actor from ""Ab Kya Hoga"" with the work of Richard E. Grant
  ?actor dbo:workFeaturedIn ?grantWork .

  # Find professional associated with The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  ?professional dbo:profession ?shadowProfession ;
                foaf:name ?shadowAlterEgoName .
  
  FILTER(?actor = ?professional)
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  ?award a dbo:Award ;
         dbo:country dbr:United_States ;  # American award
         dbo:settlement ?settlement .      # Settlement property

  ?awardee dbo:nativePlace dbr:New_York_(state) ;  # Native of New York (state)
           dbo:child ?parent .

  ?parent a dbo:Person ;
          dbo:profession dbr:Actress .   # Parent is an actress
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?deathPlace WHERE {
  # Antonios Varthalitis death place
  ?antoniosVarthalitis a dbo:Person ;
                      foaf:name ""Antonios Varthalitis""@en .
  ?antoniosVarthalitis dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Konstantinos Ventiris wars
  ?konstantinosVentiris a dbo:Person ;
                        foaf:name ""Konstantinos Ventiris""@en .
  ?konstantinosWar dbo:participatedIn ?war .
  FILTER(?konstantinosVentiris = ?konstantinosWar)

  # Leader of National Party of Greece and wars
  ?leader a dbo:Person ;
          dbo:partyLeader <http://dbpedia.org/resource/National_Party_of_Greece> .
  ?leaderWar dbo:participatedIn ?war .

  # Ensure the death place is linked to these wars
  ?war dbo:location ?deathPlace .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:awardedMedal dbr:Medal_of_Honor .
  
  OPTIONAL { ?person dbo:war ?war . }
  
  ?person dbo:birthPlace ?birthPlace .
  
  FILTER (STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?birthPlace a dbo:Settlement } &&
          EXISTS { ?birthPlace dbo:country dbr:United_States_of_America })

  OPTIONAL {
    ?gillmorePerson dbo:awardedMedal dbr:Gillmore_Medal .
    FILTER(?person = ?gillmorePerson)
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?rulingParty ?birthName WHERE {
  # Find Roger Pryor and his spouse
  ?roger a dbo:Person ;
         foaf:name ""Roger Pryor""@en ;
         dbo:actor ?actorRole .
  
  OPTIONAL { ?roger dbo:spouse ?spouse . }

  # Identify the landmark at the given elevation and its ruling party
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)
  
  ?rulingParty a dbo:PoliticalParty ;
               dbo:hasMember ?partyMember .
  OPTIONAL { ?landmark dbo:rulingParty ?rulingParty . }

  # Find Tisha Sterling's parent and their birth name
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .

  ?parent a dbo:Person ;
          dbo:child ?tisha .
  
  OPTIONAL { ?parent foaf:name ?birthName }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # For Stuart Mcbeath Tosh
  OPTIONAL {
    ?stuart a dbo:Person ;
            foaf:name ""Stuart Mcbeath Tosh""@en .
    ?stuart dbo:musicalArtist ?associatedArtist .
  }

  # For the writer of Wizards of Waverly Place (soundtrack)
  OPTIONAL {
    dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:writer ?writer .
    ?writer a dbo:Person ;
            dbo:musicalArtist ?associatedArtist ;
            dbo:artist ?artistRole .
  }

  # For band members of The Alan Parsons Project
  OPTIONAL {
    dbr:The_Alan_Parsons_Project dbo:bandMember ?member .
    ?member a dbo:Person ;
            dbo:musicalArtist ?associatedArtist .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  {
    # Lauryn Hill's birthplace for ""The Miseducation of Lauryn Hill""
    dbr:The_Miseducation_of_Lauryn_Hill dbo:artist dbr:Lauryn_Hill .
    dbr:Lauryn_Hill dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    # Ethan Iverson's birthplace for his work as an artist and musical artist
    dbr:Ethan_Iverson a dbo:Artist ;
                      a dbo:MusicalArtist .
    dbr:Ethan_Iverson dbo:birthPlace ?birthPlace .
  }
}
```",4,7,5,2,2,2,2,9,0,1,1,0.0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Richard E. Grant's DBpedia resource
  dbr:Richard_E._Grant a dbo:Actor ;
                      foaf:name ""Richard E. Grant""@en .

  # Identify the television show/movie related to The Shadow comics character
  ?shadowComicsCharacter dbo:alterEgoOf dbr:The_Shadow_(comics) .
  
  ?tvShow dbo:basedOn ?shadowComicsCharacter ;
          dbo:actor ?actor .

  # Ensure Richard E. Grant is involved in the TV show/movie
  ?tvShow dbo:actor dbr:Richard_E._Grant .
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?administeredTerritory ?royaltyPerson WHERE {
  # Christian Ditlev Ammentorp Hansen's death place that is a settlement
  dbr:Christian_Ditlev_Ammenhorst_Hansen dbo:deathPlace ?deathPlace .
  FILTER(STRSTARTS(STR(?deathPlace), ""http://dbpedia.org/resource/""))

  # Olaf I of Denmark's administered territories
  dbr:Olaf_I_of_Denmark dbo:administers ?administeredTerritory .

  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck as royalty and administration
  ?royaltyPerson a dbo:Royalty ;
                 foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  OPTIONAL { ?royaltyPerson dbo:administers ?administeredTerritory . }

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producerOfStarIsBorn ?claimToFame ?alterEgo WHERE {
  # Producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerOfStarIsBorn .

  # Actor of Johnny Doughboy
  dbr:Johnny_Doughboy dbo:actor ?actor .
  
  # Claim to fame of the actor
  ?actor foaf:name ?actorName .
  OPTIONAL { ?claimToFame dbo:actor ?actor . FILTER(?actor = ?actor) }
  
  # Alter ego or professional identity related to Kent Allard
  dbr:Kent_Allard dbo:fictionalCharacter ?fictionalCharacter .
  OPTIONAL { ?alterEgo foaf:name ?fictionalCharacterName . FILTER(?fictionalCharacter = ?alterEgo) }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeOfLeader ?commanderOffice ?tenantResidence WHERE {
  # Miguel Maura's political party and its leader's office
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .
  
  OPTIONAL { 
    ?miguelMaura dbo:member ?party .
    ?party dbo:leader ?leader .
    ?leader foaf:holdsAccountFor ?officeOfLeader .
  }
  
  # Commander in the Central African Republic Civil War
  OPTIONAL {
    ?war a dbo:Event ;
         dbo:location dbr:Central_African_Republic_Civil_War .
    
    ?commander a dbo:Person, dbo:OfficeHolder ;
               foaf:name ?name .
    
    ?commander dbo:office ?commanderOffice .
  }
  
  # Alberto Ruiz-Gallardón's residence
  OPTIONAL {
    ?albertoRuizGallardon a dbo:Person ;
                          foaf:name ""Alberto Ruiz-Gallardón""@en .
    
    ?residence dbo:resident ?albertoRuizGallardon ;
               foaf:name ?tenantResidence .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Find the sports manager born on 1968-08-26 and native of West Germany
  ?person a dbo:SportsManager ;
          foaf:birthday ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:Germany .

  # The person manages a player that is a soccer club, organization, and sports club
  ?player a dbo:SoccerClub, dbo:Organization, dbo:SportsClub .
  ?person dbo:managerOf ?player .

  # Find the successor season of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succesor ?successorSeason .
  
  # The player is part of a team in this sports season
  ?team a dbo:SoccerClub ;
        dbo:season ?successorSeason .

  # Find the manager of that team for the specified season
  ?team dbo:manager ?manager .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Cora Sue Collins and her claim to fame
  ?collins a dbo:Person ;
           foaf:name ""Cora Sue Collins""@en .
  OPTIONAL { ?collins dbo:claimToFame ?work . }

  # Actor of High Society Blues and their claim to fame
  dbr:High_Society_Blues dbo:actor ?actor .
  OPTIONAL { ?actor dbo:claimToFame ?movie . FILTER(STRSTARTS(STR(?movie), ""http://dbpedia.org/resource/Category:Films"")) }

  # Professional (producer) related to both claims to fame
  ?work dbo:producer ?professional .
  ?movie dbo:producer ?professional .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Identify the album ""Lasso the Moon""
  dbr:Lasso_the_Moon a dbo:Album ;
                     dbo:workType dbo:Film ;
                     dbo:workType dbo:Work .

  # Find actors associated with this album/film/work
  OPTIONAL { dbr:Lasso_the_Moon dbo:actor ?actor . }

  # Ensure the actor is professional in the same profession as Frédéric Bouraly
  ?frédéric a dbo:Person ;
            foaf:name ""Frédéric Bouraly""@en .
  
  ?frédéric dbo:profession ?profession .

  ?actor a dbo:Actor ;
         dbo:profession ?sameProfession .

  FILTER(?profession = ?sameProfession)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # The Triple X's and their war
  ?tripleX a dbo:Person ;
           foaf:name ""The Triple X's""@en .
  ?tripleXWar dbo:militaryConflict ?war .
  ?war dbo:commander ?commander .

  # William Bayne and his military force
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?bayneWar .
  ?bayneWar dbo:militaryForce ?militaryForce .

  # Robert Calder and the societal event
  dbr:Robert_Calder dbo:event ?calderEvent .
  ?calderEvent a dbo:SocietalEvent ;
               dbo:relatedMilitaryForce ?militaryForce .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?entity WHERE {
  # Part 1: Entity in the birth place of Little Hat Jones that is a country
  {
    ?person dbo:name ""Little Hat Jones""@en .
    ?person dbo:birthPlace ?place .
    ?place rdf:type dbo:Country .
    BIND(?place AS ?entity)
  }
  
  UNION
  
  # Part 2: Institution in the administration of Brian Kemp
  {
    ?kemp dbo:name ""Brian Kemp""@en .
    ?kemp dbo:officeHolder ?position .
    ?position dbo:organization ?institution .
    BIND(?institution AS ?entity)
  }
}
```",4,5,5,2,2,2,2,9,0,0,346,0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBand WHERE {
  # Find the associated musical artist of Stuart Mcbeath Tosh
  ?stuart a dbo:Person ;
          foaf:name ""Stuart Mcbeath Tosh""@en .
  OPTIONAL { ?stuart dbo:musicalArtist ?band1 . }

  # Find the associated musical artist of David Paton
  ?david a dbo:Person ;
         foaf:name ""David Paton""@en .
  OPTIONAL { ?david dbo:musicalArtist ?band2 . }

  # Find the associated musical artist of Billy Lyall
  ?billy a dbo:Person ;
          foaf:name ""Billy Lyall""@en .
  OPTIONAL { ?billy dbo:musicalArtist ?band3 . }

  # Check for common band among these associations
  FILTER(?band1 = ?commonBand)
  FILTER(?band2 = ?commonBand)
  FILTER(?band3 = ?commonBand)
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?country WHERE {
  # Find Maria I of Portugal's associated wars that are also TV shows
  dbr:Maria_I_of_Portugal dbo:commanderInChief ?force .
  ?force dbo:participatesIn ?war .
  
  FILTER EXISTS { ?war a dbo:MilitaryConflict . }
  FILTER EXISTS { ?war dbo:wikiPageRedirects dbr:Category:Television_series_about_war . }

  # Find Dawid Olejniczak's country of residence
  dbr:Dawid_Olejniczak dbo:nationality ?country .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Béla IV of Hungary's child
  dbr:Béla_IV_of_Hungary dbo:child ?child .

  # Child's child (Béla IV's grandchild) who is royalty
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .

  # Philip I, Prince of Taranto's father and spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
  ?philipFather dbo:spouse ?spouseOfPhilipsFather .

  # Maria of Bytom's spouse and their parent who is royalty
  dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .
  ?mariaSpouse dbo:parent ?parentOfMariaSpouse .
  ?parentOfMariaSpouse a dbo:Monarch .

  # Linking the grandchild to the spouse of Philip I's father and parent of Maria's spouse
  FILTER(?grandchild = ?spouseOfPhilipsFather)
  FILTER(?grandchild = ?parentOfMariaSpouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  OPTIONAL { ?sawMinPhyu dbo:spouse ?spouse . }
  
  FILTER(?spouse != null)
  
  OPTIONAL { ?spouse dbo:royalty true . }
  
  OPTIONAL { ?child dbo:parent ?spouse . }
  
  OPTIONAL { ?predecessor dbo:predecessorOf ?child . }
  
  OPTIONAL {
    ?minHlaHtut a dbo:Person ;
                foaf:name ""Min Hla Htut of Pyakaung""@en .
    
    ?minHlaHtutParent dbo:parent ?minHlaHtut .
    
    ?child dbo:parent ?minHlaHtutParent .
  }
  
  OPTIONAL {
    ?myatHponePyo a dbo:Person ;
                   foaf:name ""Myat Hpone Pyo""@en .
    
    ?father dbo:child ?myatHponePyo .
    
    FILTER(?father != null)
    
    OPTIONAL { ?father dbo:royalty true . }
    
    OPTIONAL { ?spouse dbo:spouse ?father . }
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?theme WHERE {
  # Find shows associated with Anumta Qureshi
  ?person a dbo:Person ;
          foaf:name ""Anumta Qureshi""@en .
  
  OPTIONAL { ?person dbo:performerIn ?show . }
  
  # Identify themes related to Lahore
  dbr:Lahore dbo:commonName ?theme .
  FILTER(?theme IN (""The Heart of Pakistan"", ""Paris of the East"", ""City of Gardens"", ""City of Literature""))
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:childOf ?parent .

  # Parent is a child of the commander involved in Siege of Padua and royalty
  ?parent dbo:childOf ?commander .
  ?commander dbo:role ""Commander""@en ;
             dbo:participatedIn dbr:Siege_of_Padua ;
             rdf:type dbo:Royal .

  # Commander is father of Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria_Queen_of_Portugal dbo:childOf ?commander .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalChild WHERE {
  # Find the child of Duke Philipp of Württemberg
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?philippChild .
  
  # Find the child of that child (grandchild)
  ?philippChild dbo:child ?philippGrandchild .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?albrechtChild .
  
  # Find the predecessor (parent) of that child
  ?albrechtChild dbo:parent ?albrechtParent .

  # Find the parent of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?margareteParent .
  
  # Find the child of that parent (child's child)
  ?margareteParent dbo:child ?margareteChild .
  ?margareteChild dbo:child ?margareteGrandchild .

  # Ensure the final result is a royalty
  FILTER(?philippGrandchild = ?albrechtParent && ?philippGrandchild = ?margareteGrandchild)
  ?finalChild a dbo:Royalty .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeOfFinland ?decedentAtBertaggiaBirthplace ?nativeOfNicholasIIAdmin WHERE {
  # Find a person native to the Grand Duchy of Finland
  ?person dbo:nativePlace dbr:Grand_Duchy_of_Finland ;
          a dbo:Person .
  
  # Identify Sandro Bertaggia's birthplace and find someone who died there
  dbr:Sandro_Bertaggia dbo:birthPlace ?bertaggiaBirthplace .
  ?decedent dbo:deathPlace ?bertaggiaBirthplace ;
            a dbo:Person .

  # Determine Nicholas II's administrative region and find its natives
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nicholasAdminRegion .
  ?nativeOfNicholasIIAdmin dbo:nativePlace ?nicholasAdminRegion ;
                           a dbo:Person .

  FILTER(?bertaggiaBirthplace a dbo:Country)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather ?realName WHERE {
  # Part 1: Find the child of Peter IV's father who is royalty
  dbr:Peter_IV_of_Aragon dbo:father ?father .
  ?father dbo:child ?childOfFather .
  FILTER(?childOfFather != dbr:Peter_IV_of_Aragon) .
  ?childOfFather a dbo:Monarch .

  # Part 2: Find the real name of the royal child of Alfonso IV
  OPTIONAL {
    dbr:Alfonso_IV_of_Aragon dbo:child ?royalChild .
    ?royalChild a dbo:Monarch .
    ?royalChild foaf:name ?realName .
  }
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childOfChild WHERE {
  # Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?personA .
  
  # Child of Person A (Person B)
  ?personA dbo:child ?personB .

  # Reference related to William I, who is royalty and an office holder
  ?reference a dbo:Royalty ;
             dbo:officeHolder ?office ;
             dbo:child ?relatedChild .
  ?relatedChild dbo:parent ?fatherOfRelatedChild .
  
  # Ensure the reference is connected to William I
  ?reference foaf:name ""William_I""@en .

  # Parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRoger .

  # Connect Person B as a child of the parent of Roger III
  ?personB dbo:parent ?parentOfRoger .

  # Ensure all entities are royalty and/or office holders where specified
  FILTER(?reference a dbo:Royalty && ?office != """")
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?producerProfession WHERE {
  # Find the band associated with Robert Lamar Thompson (The Shadow)
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en .
  
  OPTIONAL { ?person dbo:member ?band . }
  
  # Find the producer of Coke Studio Philippines and their profession
  ?cokeStudio dbr:Coke_Studio_Philippines ;
              dbo:producer ?producer .
  
  ?producer a dbo:Person ;
            dbo:profession ?producerProfession .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfMember ?realNameOfThunderbirds ?associatedArtist WHERE {
  # Find Eric Clapton's band members
  ?clapton a dbo:Person ;
           foaf:name ""Eric Clapton""@en .
  
  ?member dbo:bandMember ?clapton .

  # Identify the bands of those members
  ?member dbo:band ?bandOfMember .

  # Find The Fabulous Thunderbirds' real name
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
                               foaf:name ?realNameOfThunderbirds .

  # Find Nick Curran's associated musical artist persona
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  
  ?nickCurran dbo:associatedMusicalArtist ?associatedArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeEvent ?tenantOfAdministration ?countryResidence WHERE {
  # Anxo Quintana's office as an event
  ?anxo a dbo:Person ;
        foaf:name ""Anxo Quintana""@en .
  
  OPTIONAL { 
    ?anxo dbo:positionHeld ?office .
    ?office dbo:event ?officeEvent .
  }
  
  # Tenant of the administration that is Spanish and from PSOE
  OPTIONAL {
    ?tenantOfAdministration a dbo:Person ;
                            foaf:nationality dbr:Spain ;
                            dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party .
    
    ?office dbo:positionHeld ?tenantOfAdministration .
  }
  
  # Álvaro Quirós' country of residence
  OPTIONAL {
    ?alvaro a dbo:Person ;
            foaf:name ""Álvaro Quirós""@en .
    
    ?alvaro dbo:residenceCountry ?countryResidence .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bidenAuthor ?commanderAuthor WHERE {
  # Query for Joe Biden's authored work
  ?work dbo:author ?biden ;
        a dbo:WrittenWork .
  ?biden a dbo:Person ;
         foaf:name ""Joe Biden""@en .

  # Query for the commander in North Carolina Air National Guard's authored book
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:nationality dbr:United_States ;
             foaf:name ?commanderName .
  
  ?book dbo:author ?commander ;
        a dbo:Book .

}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Find the leader of National Party of Greece
  ?leader a dbo:Person ;
          dbp:partyLeaderOf dbr:National_Party_of_Greece .

  # Find an awardee associated with '30'
  ?awardee a dbo:Person ;
           dbo:awardReceived ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""30""))

  # Wars involving the leader
  ?leader dbo:participatedInWar ?warLeader .

  # Wars involving the awardee
  ?awardee dbo:participatedInWar ?warAwardee .

  # Ensure both participated in the same war
  FILTER(?warLeader = ?warAwardee)
  
  # Filter wars that took place in Athens
  ?war dbo:location dbr:Athens .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find the child of Saw Shwe Khet who is royalty
  ?child a dbo:Person ;
         dbo:parent ?sawShweKhet ;
         rdf:type dbo:Royalty .

  # Find the parent of this child, who should also be royalty
  ?parentOfChild a dbo:Person ;
                 dbo:child ?child ;
                 rdf:type dbo:Royalty .

  # Get the spouse of this parent
  OPTIONAL { ?parentOfChild dbo:spouse ?spouse . }

  # Find Min Hla Htut's parent and relate it to Saw Shwe Khet
  ?minHlaHtut a dbo:Person ;
              dbo:child ?parentOfMinHlaHtut .

  ?sawShweKhetParent a dbo:Person ;
                     dbo:child ?sawShweKhet .

  # Ensure the predecessor relationship is considered
  OPTIONAL { ?sawShweKhetParent dbo:predecessor ?minHlaHtut }

  FILTER(?parentOfChild = ?spouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorOfRustlersRhapsody ?professionalOfTheShadow ?professionOfFredericBouraly WHERE {
  # Find the actor of Rustlers' Rhapsody
  dbr:Rustlers'_Rhapsody dbo:starring ?actorOfRustlersRhapsody .

  # Find the professional associated with The Shadow
  ?theShadow a dbo:Person ;
             foaf:name ""The Shadow""@en .
  OPTIONAL { ?theShadow dbo:profession ?professionalOfTheShadow . }

  # Determine Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?professionOfFredericBouraly .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:creator ?writer .

  # Identify the commander in the Battle of Vienna
  ?battle a dbo:MilitaryConflict ;
          dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), STR(dbr:Battle_of_Vienna)))

  # Find the successor who was active during the Russo-Polish War (1654–1667)
  ?successor dbo:succeededBy ?commander ;
             dbo:officeHolder true ;
             dbo:politicalAffiliation ?affiliation .
  ?war a dbo:MilitaryConflict ;
       dbo:date ?date .
  FILTER(STRSTARTS(STR(?war), STR(dbr:Russo-Polish_War_(1654–1667))))
  FILTER(YEAR(?date) >= 1654 && YEAR(?date) <= 1667)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenantOfSantiago ?tenantOfResidenceCountry ?officeOfAnxoQuintana WHERE {
  # Tenant of Santiago de Compostela
  dbr:Santiago_de_Compostela dbo:officeHolder ?tenantOfSantiago .

  # Tenant of the residence that is a country for a Spanish citizen from Spain
  ?person foaf:nationality dbr:Spain ;
          foaf:residence ?countryResidence .
  ?countryResidence a dbo:Country .
  ?person dbo:officeHolder ?tenantOfResidenceCountry .

  # Office held by Anxo Quintana in an administrative event
  dbr:Anxo_Quintana dbo:officeHolder ?officeOfAnxoQuintana ;
                   dbo:positionHeld ?event .
  ?event a dbo:Event .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?myatHponePyo a dbo:Person ;
                 foaf:name ""Myat Hpone Pyo""@en .
  
  OPTIONAL { ?myatHponePyo dbo:predecessor ?predecessor . }
  
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .
  
  ?childOfMinyeKyawswa dbo:child ?minyeKyawswa .
  ?parentOfChild dbo:parent ?childOfMinyeKyawswa .
  
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?royalChildOfSawShweKhet dbo:child ?sawShweKhet ;
                           rdf:type dbo:Royalty .
  
  ?fatherOfRoyalChild dbo:parent ?royalChildOfSawShweKhet .
  ?spouseOfFather dbo:spouse ?fatherOfRoyalChild .
  
  FILTER(?predecessor = ?parentOfChild && 
         ?spouseOfFather = ?parentOfChild &&
         ?royalChildOfSawShweKhet != ?childOfMinyeKyawswa)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author ?commander ?owner ?spouse WHERE {
  # Hillary Clinton as the author of ""Back to Work""
  dbr:Back_to_Work_by_Hillary_Clinton dbo:author ?author .
  
  # USS Arcadia's owner
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # War that is both a disease and societal event
  ?war a dbo:Disease ;
      a dbo:SocietalEvent .
  
  # Commander in the war
  ?commander dbo:commanderInWar ?war .
  
  # Spouse of the author who is a politician and office holder
  ?author foaf:mbox ?spouseEmail .
  ?spouse foaf:mbox ?spouseEmail ;
          dbo:spouse ?author .
  ?spouse dbo:officeHolder ?office .

}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchild WHERE {
  # Part related to Constance of Burgundy
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  
  ?constance dbo:spouse ?spouse .
  
  ?childOfSpouse dbo:parent ?spouse ;
                 a dbo:RoyalFamilyMember .

  ?grandchildOfSpouse dbo:parent ?childOfSpouse ;
                      a dbo:RoyalFamilyMember .

  # Part related to Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:father ?williamII .
  
  ?parentOfChild a dbo:Person ;
                 dbo:child ?royalParent .
  
  ?royalParent dbo:parent ?parentOfChild ;
               a dbo:RoyalFamilyMember .

  FILTER(?grandchildOfSpouse = ?royalParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find Yandamuri Veerendranath's birthplace
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .

  # Find the awardee of Australian Laureate Fellowship who is a scientist and from Australia
  ?awardee dbo:almaMater ?almaMater ;
          dbo:nationality dbr:Australia ;
          dbo:occupation dbr:Scientist ;
          dbo:award dbr:Australian_Laureate_Fellowship .

  # Match the alma mater with Yandamuri Veerendranath's birthplace
  FILTER(?birthPlace = ?almaMater)
}
```",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?deathPlace WHERE {
  # Sal Mineo's death place
  OPTIONAL {
    dbr:Sal_Mineo dbo:deathPlace ?deathPlace .
    BIND(""Sal Mineo"" AS ?actor)
  }
  
  # Actor(s) of ""The Sky Ranger"" (1928 film)
  OPTIONAL {
    dbr:The_Sky_Ranger_(film) dbo:starring ?actorResource .
    ?actorResource a dbo:Actor ;
                   foaf:name ?actorName ;
                   dbo:deathPlace ?deathPlace .
    FILTER(CONTAINS(LCASE(?actorName), ""the sky ranger""))
  }
  
  # Actor(s) of ""Color Me Dead""
  OPTIONAL {
    dbr:Color_Me_Dead_(film) dbo:starring ?actorResource .
    ?actorResource a dbo:Actor ;
                   foaf:name ?actorName ;
                   dbo:deathPlace ?deathPlace .
    FILTER(CONTAINS(LCASE(?actorName), ""color me dead""))
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfDoon ?actorName WHERE {
  # Find parent of Doon Arbus
  ?doon a dbo:Person ;
        foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?doon dbo:parent ?parentOfDoon . }

  # Identify Eugène Cattin's profession and find the actor of a movie related to someone who died in Los Angeles
  ?eugene a dbo:Person ;
          foaf:name ""Eugène Cattin""@en .
  OPTIONAL { ?eugene foaf:profession ?profession . }

  # Find person decedent at Los Angeles and their associated work (movie)
  ?decedent a dbo:Person ;
            dbo:diedInLocation dbr:Los_Angeles .
  OPTIONAL { ?work dbo:creator ?decedent ; 
             a dbo:Film . }
  
  # Find actor of the movie
  ?actor a dbo:Actor ;
         foaf:name ?actorName .
  OPTIONAL { ?actor dbo:actedIn ?work . }

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?alumnus a dbo:Person ;
           dbo:alumnusOf dbr:Eton_College .
  
  ?child1 dbo:parent ?alumnus ;
          a dbo:Politician ;
          dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .

  ?child2 dbo:parent ?alumnus ;
          dbo:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby .
  
  ?father dbo:child ?child1 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalSpouse WHERE {
  # Duchess Luise of Brunswick-Wolfenbüttel and her spouse's spouse
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?firstSpouse .
  OPTIONAL { ?firstSpouse dbo:spouse ?secondSpouse . }
  
  # Ferdinand Albert II, Duke of Brunswick-Lüneburg and his child's parent
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?childOfFerdinand .
  OPTIONAL { ?childOfFerdinand dbo:parent ?parentOfChild . }
  
  # Ensure the parent is royalty
  FILTER EXISTS {
    ?parentOfChild a dbo:RoyalFamilyMember .
  }

  # Child of this royal parent
  OPTIONAL { ?parentOfChild dbo:child ?finalSpouse . }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander dbo:event dbr:Siege_of_Mukha ;
             a dbo:RoyalPerson .

  # Find the parent of this commander, also royalty
  ?parentOfCommander dbo:child ?commander ;
                     a dbo:RoyalPerson .

  # Find Baeda Maryam I and their child
  dbr:Baeda_Maryam_I dbo:child ?childOfBaedaMaryamI .

  # Find the father of this child, who is royalty and an office holder
  ?fatherOfChild dbo:parent ?childOfBaedaMaryamI ;
                 a dbo:RoyalPerson ;
                 dbo:officeHolder ?office .

  # Link the parent of the commander to the father of Baeda Maryam I's child
  FILTER(?parentOfCommander = ?fatherOfChild)

  OPTIONAL { ?commander foaf:name ?commanderName }
  OPTIONAL { ?parentOfCommander foaf:name ?parentOfCommanderName }
  OPTIONAL { ?childOfBaedaMaryamI foaf:name ?childOfBaedaMaryamIName }
  OPTIONAL { ?fatherOfChild foaf:name ?fatherOfChildName }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild ?professionalInProfession ?actorMovie WHERE {
  # Find the child of Allan Arbus and then the parent of that child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  ?child dbo:parent ?allanArbus .
  ?parentOfChild dbo:child ?child .

  # Find Eugène Cattin's profession and another professional in that field
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  ?eugeneCattin dbo:profession ?profession .
  ?professionalInProfession dbo:profession ?profession .

  # Find movies Herschel Bernardi acted in
  ?herchelBernardi a dbo:Actor ;
                   foaf:name ""Herschel Bernardi""@en .
  ?actorMovie dbo:starring ?herchelBernardi .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?book a dbo:Book ;
        foaf:name ""An Invitation to the White House""@en .
  
  ?author dbo:author ?book ;
          a dbo:Person ;
          dbo:officeHolder ?office ;
          dbo:commanderInWar dbr:World_War_II .

  ?resident a dbo:Person ;
            dbo:residence dbr:Chappaqua,_New_York ;
            foaf:name ?name .
  
  FILTER(?author = ?resident)

  OPTIONAL { ?author dbo:spouse ?spouse . }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producerJanetGaynor ?producerTheShadow ?producerJohnnyDoughboy WHERE {
  # Find the producer of Janet Gaynor's works (movies)
  ?janet a dbo:Person ;
         foaf:name ""Janet Gaynor""@en .
  
  OPTIONAL { 
    ?workJanet dbo:actor ?janet ;
               a dbo:Film .
    
    ?workJanet dbo:producer ?producerJanetGaynor .
  }
  
  # Find the alter ego of The Shadow and its producer
  ?shadowAlterEgo a dbo:Person ;
                  foaf:name ""Lamont Cranston""@en .
  
  OPTIONAL { 
    ?workShadow dbo:actor ?shadowAlterEgo ;
                a dbo:Film .
    
    ?workShadow dbo:producer ?producerTheShadow .
  }
  
  # Find the actor of Johnny Doughboy and its producer
  ?johnnyDoughboyCharacter a dbo:FilmCharacter ;
                           foaf:name ""Johnny Doughboy""@en .
  
  OPTIONAL { 
    ?actorJohnny a dbo:Person ;
                 dbo:portrayal ?johnnyDoughboyCharacter .
    
    ?workJohnny a dbo:Film ;
                dbo:starring ?actorJohnny .
    
    ?workJohnny dbo:producer ?producerJohnnyDoughboy .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?deathPlace WHERE {
  { 
    dbr:The_Sky_Ranger_(film) dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
  }
  UNION
  {
    dbr:Carolyn_Jones dbo:deathPlace ?deathPlace .
  }
  UNION
  {
    dbr:Aladdin_(1958_film) dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Find the predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Find the child of this predecessor who is royalty
  ?predecessor dbo:child ?child .
  ?child a dbo:Royalty .

  # Find Charles Martel of Anjou's parent who is royalty
  dbr:Charles_Martel_of_Anjou dbo:parent ?charlesParent .
  ?charlesParent a dbo:Royalty .

  # Find the father of Philip, Despot of Romania's parent (who is royalty)
  dbr:Philip_Despot_of_Romania dbo:parent ?philipParent .
  ?philipParent a dbo:Royalty .
  
  # Find the spouse of this father
  ?fatherOfPhilippParent dbo:spouse ?spouse .

  # The child of this spouse who is royalty
  ?spouse dbo:child ?childOfSpouse .
  ?childOfSpouse a dbo:Royalty .

  # Ensure we are looking at the correct lineage
  FILTER(?child = ?childOfSpouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author ?spouse WHERE {
  # Find the work associated with Bill Clinton
  ?work dbo:author ?author .
  ?billClinton a dbo:Person ;
               foaf:name ""Bill Clinton""@en .
  OPTIONAL { ?billClinton dbo:writtenWork ?work . }

  # Find the spouse of the author who is a politician and office holder related to An Invitation to the White House
  ?spouse dbo:spouse ?author .
  ?invitation a dbo:Book ;
              foaf:name ""An Invitation to the White House""@en .
  OPTIONAL { ?spouse dbo:officeHolder ?office . }
  
  # Find the commander in a war that is both a disease and societal event
  ?war a dbo:Disease, dbo:SocietalEvent .
  OPTIONAL { ?spouse dbo:commander ?war . }

  # Connect to the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
  FILTER(?owner = ?author || ?owner = ?spouse)
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationChristianIX ?administeredTerritoryHansen ?mayorAdministrationSchleswig WHERE {
  # Administration of Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:administers ?administrationChristianIX .

  # Territory administered from the death place of Christian Ditlev Ammentorp Hansen
  OPTIONAL {
    dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .
    FILTER(STRSTARTS(STR(?deathPlace), ""http://dbpedia.org/resource/""))
    ?deathPlace a dbo:Settlement .
    ?administrationHansen dbo:administersFrom ?deathPlace .
    BIND(?administrationHansen AS ?administeredTerritoryHansen)
  }

  # Administration of the mayor of Duchy of Schleswig
  OPTIONAL {
    dbr:Duchy_of_Schleswig dbo:mayor ?mayorSchleswig .
    ?mayorSchleswig dbo:administers ?mayorAdministrationSchleswig .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania's parent who is royalty
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  OPTIONAL { ?philip dbo:parent ?parentOfPhilip . }
  
  OPTIONAL { ?parentOfPhilip dbo:royaltyStatus ?royaltyStatus1 . }
  FILTER(?royaltyStatus1 != """")

  # Step 2: Identify the parent (father) of this royal parent
  OPTIONAL { ?parentOfParent a dbo:Person ;
                            dbo:child ?parentOfPhilip .
  
  OPTIONAL { ?parentOfParent dbo:royaltyStatus ?royaltyStatus2 . }
  FILTER(?royaltyStatus2 != """")

  # Step 3: Identify the spouse of this royal grandparent
  OPTIONAL { ?parentOfParent dbo:spouse ?spouse . }

  # Step 4: Identify Maria of Bytom's spouse and their parent who is royalty
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  OPTIONAL { ?maria dbo:spouse ?spouseOfMaria . }
  
  OPTIONAL { ?parentOfSpouseOfMaria a dbo:Person ;
                                    dbo:child ?spouseOfMaria .
  
  OPTIONAL { ?parentOfSpouseOfMaria dbo:royaltyStatus ?royaltyStatus3 . }
  FILTER(?royaltyStatus3 != """")

  # Step 5: Identify the spouse of this royal parent
  OPTIONAL { ?parentOfSpouseOfMaria dbo:spouse ?mariaSpouse . }

  # Step 6: Identify Stephen V of Hungary's child
  dbr:Stephen_V_of_Hungary dbo:child ?stephenChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  ?kentAllard a dbo:FictionalCharacter ;
              foaf:name ""Kent Allard (print)""@en .
  
  OPTIONAL { ?kentAllard dbo:profession ?professional . }
  
  ?coraSueCollins a dbo:Person ;
                  foaf:name ""Cora Sue Collins""@en .
  
  OPTIONAL { ?coraSueCollins dbo:notableWork ?work1 . }
  
  ?janetGaynor a dbo:Person ;
               foaf:name ""Janet Gaynor""@en .
  
  OPTIONAL { ?janetGaynor dbo:notableWork ?movie . }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?manager ?player WHERE {
  # Find the manager of Hong Kong C Team who is a sports manager and soccer manager
  ?team dbo:manager ?manager .
  FILTER(STRSTARTS(STR(?team), ""http://dbpedia.org/resource/Hong_Kong_C_Team""))
  
  ?manager a dbo:SportsManager ;
           dbo:sportType dbo:Soccer .

  # Find Tony Hollings' birthdate
  ?tony a dbo:Person ;
        foaf:name ""Tony Hollings""@en ;
        dbo:birthday ?birthday .

  # Find players who are athletes, soccer players, sports managers, and soccer managers born on the same day as Tony Hollings
  ?player a dbo:Person ;
          dbo:birthday ?sameBirthday ;
          a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .

  FILTER(?birthday = ?sameBirthday)
}
```",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?bandName ?bobBirthName ?bobProfession WHERE {
  # Producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .

  # Check if the producer is a musical artist and find their band
  OPTIONAL { 
    ?producer a dbo:MusicalArtist .
    ?producer dbo:band ?band .
    ?band foaf:name ?bandName .
  }

  # Bob Thompson's birth name and profession
  dbr:Bob_Thompson_(musician) foaf:name ?bobBirthName ;
                              dbo:profession ?bobProfession .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Philip, Despot of Romania and his parent who is royalty
  dbr:Philip_Despot_of_Romania dbo:parent ?philipParent .
  
  # Find the father of this parent (royalty)
  OPTIONAL { ?philipParent dbo:father ?philipGrandFather . }
  
  # Identify Béla IV of Hungary and his royal child
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  FILTER(STRSTARTS(LCASE(?belasChild), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?belasChild a dbo:Monarch . })
  
  # Find the child of this royal child
  OPTIONAL { ?belasChild dbo:child ?royalGrandChild . }
  
  # Identify Charles I of Hungary and his parent (royalty)
  dbr:Charles_I_of_Hungary dbo:parent ?charlesParent .
  FILTER(STRSTARTS(LCASE(?charlesParent), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?charlesParent a dbo:Monarch . })
  
  # Find the father of this parent (royalty)
  OPTIONAL { ?charlesParent dbo:father ?charlesGrandFather . }
  
  # Linking back to find the spouse
  FILTER(?philipGrandFather = ?spouseOfPhilipsFather)
  OPTIONAL { ?spouseOfPhilipsFather foaf:name ?spouseName . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?host WHERE {
  dbr:Rainer_Weiss dbo:nobelPrizeInPhysicsAward ?award .
  
  ?award dbo:hostOrganization ?host .
  
  FILTER EXISTS { 
    ?host a dbo:EducationalInstitution .
  }
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement ?award ?force WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Show award related to United States Congress
  ?show dbo:award ?award .
  ?award dbo:awardee ?congressPerson .
  ?congressPerson dbo:memberOf dbr:United_States_Congress .

  # Gillmore Medal awardee's force
  ?gillmoreAwardee dbo:recipientOf dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:militaryForce ?force .
  
  BIND(?birthPlace AS ?settlement)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?successor ?writer WHERE {
  # Find Michał Kazimierz Pac's involvement in the Great Turkish War
  ?pac a dbo:Person ;
       foaf:name ""Michał Kazimierz Pac""@en .
  
  ?war a dbo:MilitaryConflict, dbo:Event ;
       foaf:name ""Great Turkish War""@en .

  ?pac dbo:commanderOf ?war .

  # Find the commander of the Great Turkish War
  ?commander a dbo:Person ;
             dbo:commanderOf ?war .

  # Find the successor who is both a politician and an office holder
  OPTIONAL { ?successor dbo:succeededBy ?commander .
             ?successor a dbo:Politician, dbo:OfficeHolder . }

  # Reference to the writer of George Ducas's work
  ?ducas a dbo:Person ;
         foaf:name ""George Ducas""@en .

  ?work dbo:author ?ducas ;
        dbo:writer ?writer .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?residence ?award WHERE {
  # Part 1: Residence of the leader of Ulster Unionist Party
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Ulster Unionist Party""@en .
  
  OPTIONAL { 
    ?party dbo:leader ?leader .
    ?leader foaf:based_near ?residence .
  }
  
  # Part 2: Entity in the award of reference to George Hamilton Cameron
  ?person a dbo:Person ;
          foaf:name ""George Hamilton Cameron""@en .
  
  OPTIONAL {
    ?person dbo:award ?award .
  }
}
```",5,5,6,3,2,3,2,20,0,2,2,0.0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samProfession ?samBand ?robertArtist ?waltersCharacter WHERE {
  # Sam Concepcion's profession and band
  dbr:Sam_Concepcion dbo:profession ?samProfession .
  OPTIONAL { dbr:Sam_Concepcion dbo:band ?samBand . }

  # Robert Lamar Thompson's associated musical artist by birthplace
  dbr:Robert_Lamar_Thompson dbo:birthPlace ?birthPlace .
  ?artist dbo:birthPlace ?birthPlace ;
          a dbo:MusicalArtist .

  BIND(?artist AS ?robertArtist)

  # Walter B. Gibson's fictional character that is also a comics character
  ?character dbo:fictionalWork ?work ;
             dbo:creator dbr:Walter_B._Gibson .
  FILTER EXISTS { ?work dbo:type dbr:ComicsCharacter }
  
  BIND(?character AS ?waltersCharacter)
}
```",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?desiredIndividual WHERE {
  # Roger III, Duke of Apulia's parent and their child
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?rogerParent .
  ?rogerParent dbo:child ?rogerChild .

  # Constance of Burgundy's spouse and their royal child
  dbr:Constance_of_Burgundy dbo:spouse ?constanceSpouse .
  ?constanceSpouse dbo:child ?royalChild1 .
  FILTER(STRSTARTS(LCASE(?royalChild1), ""king"") || STRSTARTS(LCASE(?royalChild1), ""queen""))

  # William I of Sicily's royal child and their father
  dbr:William_I_of_Sicily dbo:child ?williamChild .
  FILTER(STRSTARTS(LCASE(?williamChild), ""king"") || STRSTARTS(LCASE(?williamChild), ""queen""))
  ?williamChild dbo:parent ?fatherOfRoyalChild .

  # Desired individual is the child of Roger III's parent and also matches the other conditions
  ?rogerChild = ?royalChild1 .
  ?rogerChild = ?fatherOfRoyalChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  # Find the administration related to the Spanish Socialist Workers' Party
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  OPTIONAL { 
    ?administration dbo:member ?leader ;
                    dbo:politicalParty ?party .
    
    # Identify the leader during the 2009 Galician regional election
    ?electionEvent dbo:electionDate ?date ;
                   dbo:winner ?administration .
    FILTER(YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?electionEvent)), ""galicia""))
    
    ?leader foaf:name ?tenantName .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?tenantName), "" "", ""_""))) AS ?leaderResource)
    
    # Link to Álvaro Quirós's residence country
    dbr:Álvaro_Quirós dbo:nationality ?residenceCountry .
  }
  
  FILTER(?leader = ?leaderResource)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfParent ?fatherOfFather ?alterEgo WHERE {
  # Yeshaq I's parent who is royalty
  dbr:Yeshaq_I dbo:parent ?royalParent .
  
  # Child of the royal parent
  ?royalParent dbo:child ?childOfParent .

  # Baeda Maryam I's child and their father (who must be royalty and an office holder)
  dbr:Baeda_Maryam_I dbo:child ?baedaChild .
  ?baedaChild dbo:parent ?fatherOfBaedaChild .
  
  FILTER(?fatherOfBaedaChild a dbo:Royalty && ?fatherOfBaedaChild a dbo:OfficeHolder)

  # The father of the father (who is royalty and an office holder) of Baeda Maryam I's child
  ?fatherOfFather dbo:parent ?fatherOfBaedaChild .
  
  FILTER(?fatherOfFather = ?childOfParent)

  # Reference to the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?creation ?fictionalCharacter ?comicsCharacter ?producerProfession ?band WHERE {
  # Walter B. Gibson's creation
  dbr:Walter_B._Gibson dbo:creatorOf ?creation .
  
  # The Shadow as a fictional character and comics character
  ?creation rdfs:label ""The Shadow""@en ;
           a dbo:FictionalCharacter, dbo:ComicsCharacter .

  # Alex Gonzaga's profession related to Coke Studio Philippines
  dbr:Aleks_Gonzaga dbo:profession ?producerProfession .
  FILTER(CONTAINS(LCASE(?producerProfession), ""coke studio philippines""))

  # Bob Thompson's band association
  dbr:Bob_Thompson_(musician) dbo:memberOfBand ?band .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the ruling party in Central, Louisiana
  ?location a dbo:Place ;
            foaf:name ""Central, Louisiana""@en .
  
  OPTIONAL { 
    ?location dbo:government ?government .
    ?government dbo:member ?rulingParty .
    
    # Find a member of this ruling party
    ?partyMember dbo:memberOf ?rulingParty .
  }
  
  # Find Tisha Sterling's parent and their birth name
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  OPTIONAL {
    ?parent dbo:child ?tisha .
    ?parent foaf:name ?birthName .
  }
  
  # Find the actor of ""1,000 Dollars a Minute"" and their spouse
  ?movie dbo:title ""1,000 Dollars a Minute""@en ;
         dbo:actor ?actor .
  
  OPTIONAL {
    ?actor dbo:spouse ?spouse .
  }
  
  # Combine conditions to find the person who matches all criteria
  FILTER(?partyMember = ?parent && ?birthName = ?spouse)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?albumActor ?shadowActor WHERE {
  # Find T.I.'s albums and songs
  ?album a dbo:Album ;
         dbo:artist dbr:T.I. ;
         dbo:song ?song .
  
  ?song a dbo:Songs ;
        foaf:name ?songName .

  # Get the actor associated with the album
  OPTIONAL { ?album dbo:actor ?albumActor . }

  # Find the actor who played The Shadow
  ?shadowMovie dbo:starring ?shadowActor .
  ?shadowActor foaf:name ""Lamont Cranston""@en ; # Assuming Lamont Cranston is the alter ego of The Shadow

  FILTER(?albumActor = ?shadowActor)
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant ?residenceCountry WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Spain .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?partyPosition .
    ?partyPosition dbo:organization dbr:Spanish_Socialist_Workers'_Party .
  }
  
  OPTIONAL {
    ?person dbo:electionCandidateFor ?election .
    ?election dbo:date ""2009-01-01""^^xsd:date ;
              dbo:region dbr:Galicia .
  }

  OPTIONAL { 
    ?person dbo:residence ?residence .
    ?residence a dbo:Residence ;
               dbo:country ?residenceCountry .
  }
  
  FILTER EXISTS {
    ?partyPosition dbo:position ""Leader""@en .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?playerClub WHERE {
  # Thomas Letsch as manager in the 2007–08 VfL Bochum season
  ?team a dbo:SoccerTeam ;
        dbo:season ?vflBochumSeason .
  
  ?vflBochumSeason dbo:startDate ?start ;
                   dbo:endDate ?end .

  FILTER(YEAR(?start) = 2007 && YEAR(?end) = 2008)
  
  ?team dbo:manager ?letsch .
  ?letsch foaf:name ""Thomas Letsch""@en .

  # Player associated with the team
  ?player a dbo:SoccerPlayer ;
          dbo:playsFor ?team .

  # The player's club in that season
  ?playerClub a dbo:SoccerTeam ;
              dbo:member ?player .
  
  # Leader of West Germany and their native country
  ?leader foaf:name ""Konrad Adenauer""@en ; # or another leader if needed
          dbo:nationality ?country .

  FILTER(?country = dbr:Germany)
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?successorCommander WHERE {
  # Find Jean Baptist, Comte d'Arco and his roles
  ?jeanBaptist a dbo:Person ;
               foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  OPTIONAL { ?jeanBaptist dbo:commanderOf ?tvShow . }
  OPTIONAL { ?jeanBaptist dbo:commanderOf ?societalEvent . }

  # Find Michał Kazimierz Pac and his military conflict
  ?michalKazimierz a dbo:Person ;
                   foaf:name ""Michał Kazimierz Pac""@en .
  
  OPTIONAL { ?michalKazimierz dbo:commanderOf ?militaryConflict . }

  # Find the successor commander who is a politician and office holder
  ?successorCommander a dbo:Person ;
                      dbo:successorOf ?jeanBaptist ;
                      dbo:politician true ;
                      dbo:officeHolder true .

  # Link to the writer of ""Always the Love Songs""
  ?writer a dbo:Writer ;
          foaf:name ?writerName .
  
  OPTIONAL { ?writer dbo:work ?loveSongs . }
  FILTER(STR(?loveSongs) = ""Always the Love Songs"")

  # Ensure the successor commander is linked to the military conflict
  ?successorCommander dbo:commanderOf ?militaryConflict .

}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Philipp Albrecht's child
  ?philippAlbrechtChild dbo:childOf dbr:Philipp_Albrecht,_Duke_of_Württemberg .
  
  # Trace back to Alexander of Württemberg's great-grandchild
  ?alexanderGreatGrandchild dbo:parentOf ?philippAlbrechtChild ;
                            dbo:parentOf ?intermediate1 ;
                            dbo:parentOf ?intermediate2 ;
                            dbo:parentOf dbr:Alexander_of_Württemberg_(1804-1881) .
  
  # Find the child of Archduke Charles Louis's great-grandchild
  ?charlesGreatGrandchild dbo:parentOf ?alexanderGreatGrandchild ;
                          dbo:parentOf ?intermediate3 ;
                          dbo:parentOf ?intermediate4 ;
                          dbo:parentOf dbr:Archduke_Charles_Louis_of_Austria .
  
  # Ensure the final individual is royalty
  ?finalIndividual a dbo:RoyalFamilyMember ;
                   dbo:childOf ?charlesGreatGrandchild ;
                   dbo:predecessor ?predecessor .

  FILTER(?finalIndividual = ?philippAlbrechtChild)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?glennYoungkinBirthPlace ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Glenn Youngkin's birth place
  dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .

  # Vince Gilligan's award and the awardee of that award
  dbr:Vince_Gilligan dbo:award ?vinceAward .
  ?awardee dbo:award ?vinceAward ;
           dbo:birthPlace ?awardeeBirthPlace .

  # Author of ""El Deafo"" who is American
  dbr:El_Deafo dbo:author ?author .
  ?author dbo:nationality dbr:United_States ;
          dbo:birthPlace ?authorBirthPlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby and his child who is a politician
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  FILTER EXISTS { ?child dbo:occupation dbo:Politician . }

  # Parent of the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:title ""Commander of the Royal Victorian Order"" ;
           dbo:parent ?parentOfAwardee .

  # Edward Stanley, 17th Earl of Derby and his child who is a politician and office holder
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?edwardChild .
  FILTER EXISTS { ?edwardChild dbo:occupation dbo:Politician . }
  FILTER EXISTS { ?edwardChild dbo:officeHolder true . }

  # Connect the parent of the awardee to Edward Stanley's child
  ?parentOfAwardee = ?edwardChild .

  # Retrieve the father of the initial child (politician)
  ?child dbo:father ?father .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tvShow WHERE {
  # Shatrughan Sinha's profession and works
  dbr:Shatrughan_Sinha a dbo:Actor ;
                      dbo:profession ""actor""@en .
  
  OPTIONAL { 
    ?work dbo:starring dbr:Shatrughan_Sinha .
    ?work dbo:genre ?genre .
    
    # Filter for television shows
    FILTER(?genre = dbr:Television_show)
    BIND(?work AS ?tvShow)
  }
  
  # Richard Grant Esterhuysen (The Shadow) and his professional role
  OPTIONAL {
    dbr:The_Shadow a dbo:FictionalCharacter ;
                   foaf:name ""Richard Grant Esterhuysen""@en .
    
    ?shadowWork dbo:actor dbr:The_Shadow .
    FILTER(?shadowWork = ?tvShow)
  }
}
```",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # The Shadow's alter ego and the actor who played it
  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow ;
                  dbo:actor ?actor .
  
  # Movie involving both the actor from ""The Shadow"" and the author of ""Smartbomb""
  ?movie dbo:starring ?actor ;
         dbo:author ?smartbombAuthor .

  # Author of Smartbomb
  ?smartbombAuthor foaf:name ""AuthorName""@en .  # Replace with actual name if known

  # Album related to T.I.'s song and its actor
  ?album dbo:artist dbr:T.I. ;
         dbo:song dbr:What_You_Know_(T.I._song) .
  
  ?albumActor dbo:actorInAlbum ?album .

  # Find the professional who connects all these roles
  FILTER(?actor = ?albumActor)
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorBirthPlace ?awardeeBirthPlace WHERE {
  # Part 1: Actor of ""Akaler Shandhaney""
  ?movie a dbo:Film ;
         foaf:name ""Akaler Shandhaney""@en .
  
  ?movie dbo:actor ?actor .
  
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Part 2: Awardee of Sangeet Natak Akademi Fellowship
  ?fellowship a dbo:Award ;
              foaf:name ""Sangeet Natak Akademi Fellowship""@en .
  
  ?recipient dbo:award ?fellowship .
  
  ?recipient dbo:birthPlace ?awardeeBirthPlace .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBirthplace WHERE {
  # Henry Clay Lewis's birthplace that is a settlement and American
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  FILTER(?birthPlace != dbr:United_States) # Exclude the country itself
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Quincy Adams Gillmore's Medal of Honor details
  dbr:Quincy_Adams_Gillmore dbo:awardeeOfMedalOfHonor ?medalAward .
  ?medalAward dbo:militaryForce ?force .
  
  # Find the entity in the birthplace that matches the force
  ?entityInBirthplace a dbo:MilitaryUnit ;
                     dbo:location ?birthPlace .

  FILTER(?force = ?entityInBirthplace)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child1 WHERE {
  # Maximilian I, Holy Roman Emperor's child
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child1 .

  # Dorothea of Denmark's parent and their father (grandparent)
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?parentDorothea .
  ?parentDorothea dbo:father ?grandfatherDorothea .

  # Philip I of Castile's child who is royalty
  dbr:Philip_I_of_Castile dbo:child ?royaltyChild .
  FILTER( ?royaltyChild a dbo:RoyalFamilyMember )

  # Connect the entities through their relationships
  FILTER(?child1 = ?grandfatherDorothea)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?athleteWithSameBirthday ?soccerPlayerActor ?team WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Polio dbo:birthday ?birthday .

  # Find an athlete with the same birthday as Marty Pollio
  ?person a dbo:Person ;
          dbo:birthDate ?sameBirthday .
  FILTER(?sameBirthday = ?birthday)
  OPTIONAL { ?person dbo:athlete ?athleteWithSameBirthday . }

  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .

  # Find actors in the film who are soccer players and athletes
  ?actor a dbo:Person ;
         dbo:actedIn ?film .
  OPTIONAL { ?actor dbo:soccerPlayer ?soccerPlayerActor . }
  OPTIONAL { ?actor dbo:athlete ?soccerPlayerActor . }

  # Find Pablo Aimar's team
  dbr:Pablo_Aimar dbo:team ?team .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?officeOfCommander WHERE {
  ?manuel a dbo:Person ;
          foaf:name ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { ?manuel dbo:officeHolder ?office . }
  OPTIONAL { ?manuel dbo:politician ?politics . }

  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:societalEvent ?societalEvent .

  ?commanderOffice dbo:office ?officeOfCommander .
  FILTER(?commanderOffice = ?office)

  ?leader a dbo:Person ;
          dbo:electedDuring <http://dbpedia.org/resource/2003_Madrid_City_Council_election> .

  ?residence dbo:tenant ?manuel .
  FILTER(?residence = ?leaderResidence)
  
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .
  
  OPTIONAL { ?miguelMaura dbo:office ?miguelOffice . }
  FILTER(?commanderOffice = ?miguelOffice)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Maria Anna of Bavaria and her child
  dbr:Maria_Anna_of_Bavaria (dbo:spouse|dbo:child) ?mariaChild .
  
  # The father of the child who is royalty
  ?mariaChild dbo:parent ?fatherOfMariaChild .
  ?fatherOfMariaChild a dbo:RoyalFamilyMember .

  # This person must be a commander in a war that is societal, an event, and a television show
  ?warEvent a dbo:SocietalEvent ;
            a dbo:Event ;
            a dbo:TelevisionShow .
  
  ?commanderInWar dbo:commanded ?warEvent ;
                  foaf:name ?name .

  # The war involves the 2nd Dragoon Regiment (France)
  ?warEvent dbo:participated ?dragoonRegiment .
  dbr:2nd_Dragoon_Regiment_(France) a dbo:MilitaryUnit .

  # This person must also be the father of a child of Ferdinand III
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?ferdinandChild .
  ?commanderInWar dbo:parent ?ferdinandChild .

  # Linking all conditions together
  FILTER(?fatherOfMariaChild = ?commanderInWar)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer""@en .
  
  ?linda foaf:birthName ?birthName .

  OPTIONAL { ?linda dbo:spouse ?spouse . }

  OPTIONAL { ?movie dbo:producedBy ?producer . }
  
  OPTIONAL { ?spouse dbo:produced ?movie . }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore""@en ;
            dbo:dateOfDeath ""1850-08-05""^^xsd:date .
  
  ?gillmore dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  # Find the alter ego of ""The Shadow"" from a comics series
  ?shadowGame dbo:basedOn ?comicsCharacter .
  ?comicsCharacter dbo:alterEgo ?alterEgo .
  
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .
  FILTER(?sinhaProfession IN (dbo:Actor, dbo:Politician))
  
  # Find a TV show with Richard E. Grant and the professional from the alter ego
  ?tvShow dbo:starring ?richardGrant ;
          dbo:starring ?professional .
  dbr:Richard_E._Grant foaf:name ""Richard E. Grant""@en .
  
  FILTER(?alterEgo = ?professional)
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:nativePlace dbr:Florida .
  
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""region"") && CONTAINS(LCASE(?awardLabel), ""american"") && CONTAINS(LCASE(?awardLabel), ""state"") && CONTAINS(LCASE(?awardLabel), ""settlement""))
  
  ?person dbo:associatedAward ?award .

  ?choir a dbo:MusicalGroup ;
         foaf:name ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  ?person dbo:member ?choir .

  ?bobbyShmurda a dbo:MusicalArtist ;
                 foaf:name ""Bobby Shmurda""@en .
  ?bandMember a dbo:Band ;
              dbo:associatedMusicalArtist ?bobbyShmurda ;
              dbo:member ?person .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?album dbo:title ""Paper Trail""@en ;
         dbo:artist dbr:T.I. .
  
  OPTIONAL { ?album dbo:contributor ?actor . }
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBirthPlace ?writer WHERE {
  # Step 1: Find Victor Saville's birthplace and its native
  dbr:Victor_Saville dbo:native ?native .
  OPTIONAL { ?birthPlace dbo:native ?nativeOfBirthPlace . }
  
  # Step 2: Identify Steven Kapur's main work that is a musical piece and find its writer
  dbr:Steven_Kapur dbo:work ?musicalWork .
  FILTER(STRSTARTS(STR(?musicalWork), ""http://dbpedia.org/resource/"") && 
         (STR(?musicalWork) CONTAINS ""Musical""))
  
  OPTIONAL { ?musicalWork dbo:writer ?writer . }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?foundingDate WHERE {
  {
    ?luiza a dbo:Person ;
           foaf:name ""Luiza Erundina""@en .
    ?luiza dbo:almaMater ?university1 .
    ?university1 a dbo:University ;
                 dbo:foundingDate ?foundingDate .
  }
  
  UNION
  
  {
    ?eleonora a dbo:Person ;
              foaf:name ""Eleonora Menicucci de Oliveira""@en .
    ?eleonora dbo:almaMater ?university2 .
    ?university2 a dbo:University ;
                 dbo:foundingDate ?foundingDate .
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchildOfPhilipp ?royaltyGrandchildOfCharlesLouis ?predecessor WHERE {
  # Duke Philipp of Württemberg's grandchild
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?childOfPhilipp .
  ?childOfPhilipp dbo:child ?grandchildOfPhilipp .

  # Archduke Charles Louis of Austria's royalty grandchild
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?childOfCharlesLouis .
  ?childOfCharlesLouis dbo:child ?royaltyGrandchildOfCharlesLouis .
  FILTER(STRSTARTS(LCASE(?royaltyGrandchildOfCharlesLouis), ""http://dbpedia.org/resource/""))

  # Archduchess Helena of Austria's spouse and their child
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouseHelena .
  ?spouseHelena dbo:child ?childOfSpouseHelena .

  # Predecessor relationship
  OPTIONAL { ?predecessor dbo:successor ?grandchildOfPhilipp . }
  OPTIONAL { ?predecessor dbo:successor ?royaltyGrandchildOfCharlesLouis . }
  OPTIONAL { ?predecessor dbo:successor ?childOfSpouseHelena . }

  # Ensure the predecessor is linked to at least one of the grandchildren
  FILTER(?grandchildOfPhilipp = ?predecessor || ?royaltyGrandchildOfCharlesLouis = ?predecessor || ?childOfSpouseHelena = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?result WHERE {
  # Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa .

  # Parent of the child (which is Minye Kyawswa)
  ?parentOfChild a dbo:Person ;
                 dbo:child ?minyeKyawswaChild .
  
  # Spouse of Saw Shwe Khet
  ?sawShweKhet dbr:Saw_Shwe_Khet ;
               dbo:spouse ?spouseOfSawShweKhet .

  # Predecessor relationship (assuming historical context)
  ?predecessor a dbo:Person ;
               dbo:successor ?spouseOfSawShweKhet .
  
  # Child of the spouse of Saw Min Phyu
  ?sawMinPhyu dbr:Saw_Min_Phyu ;
              dbo:spouse ?spouseOfSawMinPhyu .

  ?childOfSpouseOfSawMinPhyu dbo:child ?spouseOfSawMinPhyu .
  
  # Ensure the child is royalty
  ?childOfSpouseOfSawMinPhyu a dbo:Royalty .

  # Final result condition
  FILTER(?parentOfChild = ?predecessor)
  BIND(?childOfSpouseOfSawMinPhyu AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?eleonore a dbo:Person ;
            foaf:name ""Eleonore of Austria, Queen of Poland""@en .
  
  ?eleonore dbo:father ?father .

  OPTIONAL { ?father dbo:role ?role . }
  FILTER(CONTAINS(LCASE(STR(?role)), ""commander"") || CONTAINS(LCASE(STR(?role)), ""societal event"") || CONTAINS(LCASE(STR(?role)), ""event"") || CONTAINS(LCASE(STR(?role)), ""television show""))

  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria (1574)""@en .

  ?mariaAnnaChild dbo:child ?mariaAnna .
  
  ?mariaAnnaFather dbo:father ?mariaAnna .
  
  ?mariaAnnaChildFather dbo:father ?mariaAnnaFather .
  
  FILTER(?mariaAnnaChildFather = ?father)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickCurranBand ?kimWilsonBandName ?personBorn1945Band WHERE {
  # Nick Curran's associated band
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:associatedBand ?nickCurranBand . }

  # Kim Wilson's band real name
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?kimWilson dbo:associatedBand ?kimWilsonBand . }
  OPTIONAL { ?kimWilsonBand foaf:name ?kimWilsonBandName . }

  # Person born on 1945-03-30 and their band
  ?personBorn1945 a dbo:Person ;
                  dbo:birthDate ""1945-03-30""^^xsd:date .
  OPTIONAL { ?personBorn1945 dbo:associatedBand ?personBorn1945Band . }
}
```",7,8,8,3,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfPhotographer ?actorInMovie WHERE {
  # Allan Arbus and his child's parent
  dbr:Allan_Arbus dbo:child ?child .
  OPTIONAL { ?child dbo:parent ?parentOfChild . }
  
  # Photographer related to Allan Arbus
  ?photographer a dbo:Photographer ;
                dbo:spouse ?allanArbus .
  OPTIONAL { ?parentOfChild dbo:parent ?parentOfPhotographer . }

  # Movie and actor connection
  ?movie dbo:starring ?actorInMovie .
  
  # Decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles ;
            foaf:name ?name .
  
  # Connect the decedent to the movie or photographer
  OPTIONAL { ?actorInMovie foaf:name ?name }
  UNION
  OPTIONAL { ?photographer foaf:name ?name }

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?politicianParent WHERE {
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  ?child dbo:parent ?politicianParent .
  FILTER(?politicianParent a dbo:Politician) .

  ?awardee foaf:name ""Rodney Lees""@en ;
          dbo:awardReceived ?award .
  ?awardee dbo:parent ?awardParent .

  FILTER(?politicianParent = ?awardParent)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonArtist WHERE {
  # Find the birth name of Tupac Shakur
  dbr:Tupac_Shakur dbo:birthName ?tupacBirthName .
  
  # Identify the musical artist associated with ""The Live Anthology""
  dbr:The_Live_Anthology dbo:musicalArtist ?anthologyArtist .

  # Find Kwame Kwei-Armah's DBpedia resource
  dbr:Kwame_Kwei-Armah a dbo:Person ;
                       foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Identify the common profession (writer and musician) between Kwame Kwei-Armah and Tupac Shakur
  ?commonArtist a dbo:Person ;
               dbo:profession dbr:Writer ;
               dbo:profession dbr:Musician .

  # Ensure the person is associated with both Kwame Kwei-Armah and Tupac Shakur
  OPTIONAL { ?commonArtist dbo:musicalArtist ?anthologyArtist }
  FILTER(?tupacBirthName = ""Lesane Parish Crooks""@en)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Hillary_Clinton .
  
  OPTIONAL { ?book foaf:name ""Living History""@en . }
  
  ?hClinton a dbo:Person ;
            foaf:name ""Hillary Clinton""@en ;
            dbo:spouse ?bClinton .

  ?bClinton a dbo:Person ;
            foaf:name ""Bill Clinton""@en ;
            dbo:residence dbr:Chappaqua,_New_York .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandfather WHERE {
  # Na'od's father
  ?naod a dbo:Person ;
        foaf:name ""Na'od""@en .
  ?naod dbo:parent ?father .

  # Father of Na'od's father (Grandfather)
  ?father dbo:parent ?grandfather .

  # Commander in the Siege of Mukha and their parent
  ?commander a dbo:Person ;
             dbo:participatedIn <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commanderParent dbo:child ?commander .
  
  # The Shadow's alter ego
  ?shadowAlterEgo foaf:name ""The Shadow""@en .

  # Ensure all individuals are royalty or office holders
  FILTER(?grandfather a dbo:Royalty || ?grandfather a dbo:OfficeHolder)
  FILTER(?commanderParent a dbo:Royalty)

  # Linking the entities through their relationships
  OPTIONAL { ?shadowAlterEgo foaf:name ""The Shadow's Alter Ego""@en }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?bob a dbo:Person ;
       foaf:name ""Bob Thompson""@en ;
       dbo:birthName ?birthName .
  
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en ;
       dbo:profession ?musicalArtist .

  ?shadow a dbo:Person ;
          foaf:name ""The Shadow""@en ;
          dbo:alterEgoOf ?bob .

  FILTER(?bob = ?birthName)
  
  OPTIONAL { ?person dbo:band ?band . }
  FILTER(?person = ?bob && ?person = ?musicalArtist)
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  # Find Roy Leonardo Barreras Montealegre and ensure he is a politician
  ?person a dbo:Politician ;
          foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  
  # Ensure the person is associated with Colombia (country of Daniel Elahi Galán)
  ?person dbo:nationality dbr:Colombia .

  # Find the political party of Gustavo Petro
  ?gustavoPetro a dbo:Politician ;
                foaf:name ""Gustavo Petro""@en .
  
  ?gustavoPetro dbo:party ?party .

  # Ensure the person is the same as Roy Leonardo Barreras Montealegre
  FILTER(?person = ?gustavoPetro)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucasRef ?successorOfCommander ?commanderInWar WHERE {
  # Reference to George Ducas
  dbr:George_Ducas a dbo:Person ;
                   rdfs:label ""George Ducas""@en .

  # Successor of the commander in the force involving Michał Kazimierz Pac
  OPTIONAL {
    ?force a dbo:MilitaryConflict ;
           dbo:participant ?michaPac .
    ?commander a dbo:Commander ;
               dbo:successor ?successorOfCommander .
    FILTER(?commander IN ?force)
    FILTER(?successorOfCommander a (dbo:Politician|dbo:OfficeHolder))
  }

  # Commander in the war related to Battle of Vienna
  OPTIONAL {
    dbr:Battle_of_Vienna dbo:participatedIn ?war .
    ?war a dbo:MilitaryConflict ;
         dbo:commander ?commanderInWar .
    FILTER(?war IN (dbo:TelevisionShow|dbo:SocietalEvent))
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  ?artist a dbo:Artist ;
          dbo:musicalArtist true ;
          dbo:nativePlace dbr:London .

  OPTIONAL { 
    ?movie dbo:author ?artist .
    ?movie a dbo:Work, dbo:TelevisionShow .
  }

  ?deceasedPerson a dbo:Artist ;
                  dbo:musicalArtist true ;
                  dbo:dateOfDeath ?deathDate .
  
  FILTER(?deathDate = ""2020-06-18""^^xsd:date)

  ?parent dbo:child ?artist .

  OPTIONAL { 
    ?deceasedPerson dbo:spouse ?artist .
  }
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonParent WHERE {
  # For Princess Aisha bint Faisal
  ?aisha a dbo:Person ;
         foaf:name ""Aisha bint Faisal""@en .
  
  ?aishaChild dbo:child ?aisha ;
              a dbo:RoyalPerson .

  ?aishaParent dbo:parent ?aishaChild .

  # For Prince Faisal bin Hussein
  ?faisal a dbo:Person ;
          foaf:name ""Faisal bin Hussein""@en .

  ?faisalChild dbo:child ?faisal ;
               a dbo:RoyalPerson .

  ?faisalParent dbo:parent ?faisalChild .

  # Find common parent
  FILTER(?aishaParent = ?faisalParent)
  
  BIND(?aishaParent AS ?commonParent)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  dbr:Ab_Kya_Hoga dbo:castMember ?actor .
  
  ?actor dbo:profession dbr:Politician .

  OPTIONAL { 
    dbr:Grant_Heslov dbo:castMember dbr:Ab_Kya_Hoga .
  }
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerOfTomSawyer ?claimToFame WHERE {
  # Find the producer of ""The Adventures of Tom Sawyer (1938 film)""
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerOfTomSawyer .

  # Identify the actor in ""High Society Blues""
  dbr:High_Society_Blues dbo:actor ?actor .
  
  # Find a claim to fame (movie or work) of this actor
  OPTIONAL { ?actor dbo:claimToFame ?claimToFame . }

  # Linking fictional character related to Kent Allard
  OPTIONAL {
    ?fictionalCharacter dbo:alterEgo dbr:Kent_Allard .
    ?actor foaf:name ?name .
    FILTER(?actor = ?fictionalCharacter)
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickCurranArtist ?jimmieVaughanBand WHERE {
  # Find Nick Curran and his associated musical artist
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:musicalArtist ?nickCurranArtist . }

  # Find the person born on 1945-03-30 (Jimmie Vaughan) and their band
  ?jimmieVaughan a dbo:Person ;
                 foaf:name ""Jimmie Vaughan""@en ;
                 dbo:birthday ""1944-02-24""^^xsd:date .
  OPTIONAL { ?jimmieVaughan dbo:musicalArtist ?bandMember . }
  OPTIONAL { ?bandMember dbo:band ?jimmieVaughanBand . }

  # Reference to The Fabulous Thunderbirds
  ?fabulousThunderbirds a dbo:MusicalBand ;
                       foaf:name ""The Fabulous Thunderbirds""@en .
  FILTER(?jimmieVaughanBand = ?fabulousThunderbirds)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Janusz Kamiński""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?film WHERE {
  ?film a dbo:Film .
  ?film dbo:starring dbr:Audrey_Hepburn ;
        dbo:starring dbr:Iliza_Shlesinger .
}
```",5,9,6,2,3,2,3,28,0,0,1,0,0.0,0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?awardee a dbo:Person ;
           foaf:nationality dbr:Japan .
  
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .

  ?awardee dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?kiyosu dbo:timeZone ?timeZone .
    ?region dbo:hasTimeZone ?timeZone .
    FILTER(?region = ?birthPlaceRegion)
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Identify the commander in the Siege of Mukha who is royalty
  ?commander a dbo:Person ;
             dbo:memberOf ?siegeEvent ;
             dbo:title ?royalTitle .
  
  # Ensure the siege event is the Siege of Mukha
  ?siegeEvent foaf:name ""Siege of Mukha""@en .

  # Identify Baeda Maryam I and his father, ensuring both are royalty
  ?baedaMaryam a dbo:Person ;
               foaf:name ""Baeda Maryam I""@en .
  
  ?father a dbo:Person ;
          dbo:title ?royalTitle ;
          dbo:child ?baedaMaryam .

  # Find Lamont Cranston's alter ego from media references
  ?lamontCranston a dbo:Agent ;
                  foaf:name ""Lamont Cranston""@en .
  
  OPTIONAL { ?lamontCranston dbo:alterEgo ?alterEgo . }
  
  # Link the entities through their relationships
  OPTIONAL { ?commander dbo:parent ?father . }
  
  # Find the child of the parent (royalty) of the commander
  OPTIONAL { ?father dbo:child ?child . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Find the successor season of VfL Bochum 2006-07
  dbr:VfL_Bochum_season_2006–07 dbo:sportsTeamSeasonOf ?successorSeason .
  
  # Ensure the successor is a football league season
  ?successorSeason a dbo:FootballLeagueSeason ;
                   dbo:participatingTeam ?team .

  # Find Thomas Letsch's team and its manager
  dbr:Thomas_Letsch dbo:managerOf ?letschTeam .
  ?letschTeam a dbo:SoccerClub ;
              dbo:sportsTeamSeason ?letschSeason .

  # Ensure the manager is linked to both the successor season and Letsch's team
  ?team dbo:manager ?manager .
  
  # The manager must be associated with Germany (Theodor Heuss' native country)
  ?manager dbo:nationality dbr:Germany .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAmy ?parentOfChild ?actor WHERE {
  # Find parent of Amy Arbus
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  OPTIONAL { ?amy dbo:parent ?parentOfAmy . }

  # Find spouse and child of Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  OPTIONAL { ?mariclare dbo:spouse ?spouse . }
  OPTIONAL { ?child dbo:parent ?spouse . }
  OPTIONAL { ?child dbo:parent ?parentOfChild . }

  # Find actor of a movie with decedent at Los Angeles
  ?movie dbo:actor ?actor ;
         a dbo:Film .
  OPTIONAL {
    ?decedent dbo:placeOfBirth ?losAngeles ;
              foaf:name ?decedentName .
    FILTER(STRSTARTS(?losAngeles, ""Los Angeles""))
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?team ?soccerPlayerManager ?athlete WHERE {
  # Find the team of Sergio Agüero when he was born
  dbr:Sergio_Ag%C3%BCero dbo:birthDate ?agüeroBirthDate ;
                         dbo:playsFor ?team .

  # Find a soccer player and manager born on Marcelo Sarmiento's birthday
  ?soccerPlayerManager a dbo:SoccerPlayer, dbo:SoccerManager ;
                       dbo:birthDate ?sarmientoBirthDate .
  
  dbr:Marcelo_Sarmiento dbo:birthDate ?sarmientoBirthDate .

  # Find an athlete born on Marty Pollio's birthday
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?pollioBirthDate .

  dbr:Marty_Pollio dbo:birthDate ?pollioBirthDate .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childOfChild WHERE {
  # Albrecht, Duke of Württemberg and his child
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?albrechtChild .

  # Child of the child who is royalty
  ?albrechtChild dbo:child ?childOfChild .
  ?childOfChild a dbo:RoyalFamilyMember .

  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?margareteParent .

  # Predecessor of the child of the spouse of Archduchess Helena of Austria who is royalty
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?helenaSpouse .
  ?helenaSpouse dbo:child ?helenaChild .
  ?helenaChild a dbo:RoyalFamilyMember .

  # Find predecessor relationship (assuming 'predecessor' is defined in DBpedia)
  ?helenaChild dbo:predecessor ?predecessor .

  # Ensure the child of Albrecht's child matches the predecessor
  FILTER(?childOfChild = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeOfCommander ?officeOfLeader ?residence WHERE {
  # Part 1: Office of the commander in Central African Republic Civil War
  {
    ?commander a dbo:Person ;
               dbo:occupation [ a dbo:Politician ; a dbo:OfficeHolder ] .
    ?war dbo:participatedIn ""Central_African_Republic_Civil_War"" .
    ?commander dbo:office ?officeOfCommander ;
               dbo:participatedIn ?war .
  }

  # Part 2: Office of the leader of Conservative Republican Party (Spain)
  {
    ?leader a dbo:Person ;
            dbo:occupation [ a dbo:Politician ] .
    ?party dbo:name ""Conservative_Republican_Party_(Spain)""@en .
    ?leader dbo:memberOfParty ?party ;
            dbo:office ?officeOfLeader .
  }

  # Part 3: Tenant of the residence of the leader in 2003 Madrid City Council election
  {
    ?electionEvent dbo:name ""2003_Madrid_City_Council_election""@en .
    ?leader a dbo:Person ;
            dbo:occupation [ a dbo:OfficeHolder ] .
    ?leader dbo:participatedIn ?electionEvent ;
            foaf:based_near ?residence .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedMusicalArtistElorm ?associatedMusicalArtistGhana WHERE {
  # Find Elorm Kabu Amenyah and his associated musical artist
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah""@en .
  OPTIONAL { ?elorm dbo:musicalArtist ?associatedMusicalArtistElorm . }

  # Find a person native to Central Region, Ghana with the same profession as Rod Argent
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  ?profession rdf:type dbo:Musician .

  ?ghanaPerson a dbo:Person ;
               dbo:nativePlace dbr:Central_Region,_Ghana ;
               foaf:profession ?profession .

  # Find the birth name of this person and their associated musical artist
  OPTIONAL { ?ghanaPerson dbo:birthName ?birthName . }
  OPTIONAL { ?ghanaPerson dbo:musicalArtist ?associatedMusicalArtistGhana . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?nickname WHERE {
  ?kolodin a dbo:Writer ;
           foaf:name ""Denis Kolodin""@en .
  
  ?kolodin dbo:author ?work .
  ?work rdfs:label ""The First Glove""@en .

  ?player dbo:relatedTo ?work ;
          dbo:nickname ?nickname .

  FILTER EXISTS { 
    ?club a dbo:SoccerClub ;
          foaf:name ?nickname .
  }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find Joey B's associated musical artist
  ?joeyB a dbo:MusicalArtist ;
         foaf:name ""Joey B""@en .
  
  OPTIONAL { ?joeyB dbo:associatedBandOrMusicalGroup ?associatedArtist . }

  # Find the writer of The Live Anthology and check if they are also a musical artist
  ?anthology dbo:author ?writer .
  FILTER(STR(?anthology) = ""The_Live_Anthology"")
  
  OPTIONAL { ?writer a dbo:Writer ;
                  foaf:name ?writerName . }
  
  OPTIONAL { ?writer a dbo:MusicalArtist ;
                  foaf:name ?writerName . }

  # Check if the writer is also associated with any musical artist
  OPTIONAL { ?writer dbo:associatedBandOrMusicalGroup ?associatedArtist . }

  FILTER(?joeyB != ?writer)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?warOfBaggovut ?birthPlaceEntity WHERE {
  # Find the war associated with an awardee of ""Golden Sword for Bravery""
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:participatedIn ?warOfAwardee .

  # Find the war associated with Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?warOfBaggovut .

  # Identify the birthplace entity of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceEntity .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find T.I.'s albums and songs
  ?album a dbo:Album ;
         dbo:artist dbr:T.I. .

  OPTIONAL { 
    ?song dbo:album ?album ;
          a dbo:Songs .
    
    # Identify actors associated with the song/musical work
    ?actor a dbo:Actor ;
           dbo:performerIn ?work .
    FILTER(?work IN (?song, ?album))
  }

  # Find the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .

  # Identify movies where both the actor and the author acted
  ?movie dbo:starring ?actor ;
         dbo:starring ?author .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?battleForce ?bayneConflict ?bayneCommander ?tripleXConflict ?tripleXCommander WHERE {
  # Military force of the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatingMilitaryUnit ?battleForce .

  # Military conflict involving William Bayne
  ?bayneConflict a dbo:MilitaryConflict ;
                 dbo:commander ?bayneCommander .
  OPTIONAL { ?bayneCommander foaf:name ""William Bayne""@en }

  # Military conflict associated with The Triple X's
  ?tripleXConflict a dbo:MilitaryConflict ;
                   dbo:commander ?tripleXCommander .
  OPTIONAL { ?tripleXCommander foaf:name ""The Triple X's""@en }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Find child of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  ?childOfSawShweKhet dbo:child ?sawShweKhet .

  # Find parent of the child of Minye Kyawswa
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .
  ?childOfMinyeKyawswa dbo:child ?minyeKyawswa .
  ?parentOfChildOfMinyeKyawswa dbo:parent ?childOfMinyeKyawswa .

  # Find spouse of the father of Myat Hpone Pyo
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  ?fatherOfMyatHponePyo dbo:parent ?myatHponePyo .
  ?spouseOfFatherOfMyatHponePyo dbo:spouse ?fatherOfMyatHponePyo .

  # Find the common child
  FILTER(?childOfSawShweK",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Pickett's Charge and its commander
  dbr:Picketts_Charge dbo:commander ?commander .
  
  # Commander is a member of a political party that is also an organization
  ?party a dbo:PoliticalParty ;
         dbo:member ?commander ;
         dbo:organization .

  # Political party ruling in Westport, Connecticut
  ?location dbr:Westport,_Connecticut ;
            dbo:politicalParty ?party .
}
```",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Roger II of Sicily and his child
  dbr:Roger_II_of_Sicily a dbo:Person ;
                        dbo:child ?child1 .
  
  # Child's parent (grandparent of the grandchild)
  ?child1 dbo:parent ?parentOfChild .

  # Grandchild who is royalty
  ?parentOfChild dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch } 

  # Reference to William I and Elvira of Castile, Queen of Sicily
  dbr:William_I_of_Sicily a dbo:Person ;
                          dbo:spouse dbr:Elvira_of_Castile,_Queen_of_Sicily .
  
  ?elviraChild dbo:child ?reference .
  FILTER EXISTS { ?reference a dbo:Monarch } 
  FILTER EXISTS { ?reference dbo:officeHolder ?office . }

  # Father of the child that is royalty
  ?reference dbo:parent ?fatherOfReference .

  # Linking grandchild to father of reference's child
  FILTER (?grandchild = ?fatherOfReference)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Nat Levine and his film products
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .
  
  OPTIONAL { 
    ?film dbo:producer ?natLevine .
    ?actor dbo:actedIn ?film .
    
    # Find the spouse of the actor
    OPTIONAL { ?actor dbo:spouse ?spouse . }
  }

  # Identify Harriette Arlene Lake and her party membership
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake""@en .

  OPTIONAL {
    ?partyMemberParty dbo:member ?harriette .
    
    # Find the landmark at the specified elevation
    ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
              dbo:location ?partyMemberParty .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  dbr:VfL_Bochum dbo:sportTeamSeason ?bochumSeason .
  ?bochumSeason dbo:season ""2007–08""@en .
  ?bochumSeason dbo:manager ?manager .

  dbr:Theodor_Heuss dbo:nativePlace ?germany .

  ?person a dbo:SportsManager ;
          foaf:birthday ""1968-08-26""^^xsd:date .
  
  ?otherSeason dbo:manager ?person .
  ?otherTeam dbo:sportTeamSeason ?otherSeason .

  FILTER(?germany = dbr:Germany)

  FILTER(?manager = ?person)
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Ann Sothern's birth name
  ?annSothern a dbo:Person ;
              foaf:name ""Ann Sothern""@en .
  ?annSothern foaf:birthName ?birthName .

  # Films produced by Nat Levine
  dbr:Nat_Levine dbo:film ?film .

  # Actor in the film
  ?actor a dbo:Actor ;
         dbo:actedIn ?film .

  # Spouse of the actor
  ?actor dbo:spouse ?person .

  # Political affiliation in Central, Louisiana
  ?partyMember a dbo:Person ;
               dbo:partyMember ?rulingParty .
  ?centralLA dbo:location dbr:Central,_Louisiana .
  ?rulingParty dbo:location ?centralLA .

  FILTER(?annSothern = ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artistPacely ?artistGhana WHERE {
  # Find the person with birth name ""Pacely""
  ?personPacely a dbo:Person ;
                foaf:name ""Pacely""@en .
  
  OPTIONAL { 
    ?personPacely dbo:musicalArtist ?artistPacely .
  }
  
  # Find the native of Central Region, Ghana who is an artist and professional musician
  ?personGhana a dbo:Person ;
               dbo:nationality dbr:Ghana ;
               dbo:birthPlace dbr:Central_Region,_Ghana ;
               foaf:isPrimaryTopicOf ?gnd .
  
  FILTER EXISTS { 
    ?gnd dbo:profession dbr:Musician .
  }
  
  OPTIONAL {
    ?personGhana dbo:musicalArtist ?artistGhana .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfArthur ?parentOfAwardee ?parentOfChild WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley""@en .
  OPTIONAL { ?arthur dbo:father ?fatherOfArthur . }

  # Rodney Lees
  ?rodneyLeesAward a dbo:Award ;
                   dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:parent ?parentOfAwardee . }

  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .
  FILTER(?child a dbo:Politician && ?child a dbo:OfficeHolder)
  OPTIONAL { ?child dbo:parent ?parentOfChild . }
  
  # Linking the queries together
  FILTER(?fatherOfArthur = ?parentOfAwardee || ?fatherOfArthur = ?parentOfChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?designer WHERE {
  # Query for members of Der Blau (Der Blaskapelle)
  OPTIONAL { 
    dbr:Der_Blaskapelle dbo:member ?member .
  }
  
  # Query for the designer of Aston Martin AMR1
  OPTIONAL {
    dbr:Aston_Martin_AMR1 dbo:designer ?designer .
  }
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?bobby a dbo:MusicalArtist ;
         foaf:name ""Bobby Shmurda""@en .
  
  ?bobby foaf:birthday ?birthDate ;
         foaf:name ?birthName .

  ?bandMember a dbo:Band ;
              dbo:member ?person ;
              dbo:associatedMusicalArtist ?bobby .

  ?award dbo:awardee ?band ;
         dbo:region ?region ;
         dbo:settlement ?settlement .
  
  ?state a dbo:State ;
         foaf:name ""New York (state)""@en ;
         dbo:partOf ?region .

  FILTER(?birthName = ?person && ?region = ?state)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthday ""1979-11-03""^^xsd:date ;
           a dbo:SoccerPlayer, dbo:SoccerManager .

  # Athlete with the same birthday as Marty Pollio
  ?martyPollio dbo:birthday ?birthdayMarty .
  ?athlete dbo:birthday ?birthdayMarty .

  # Actor from ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?actor dbr:All_or_Nothing:_Manchester_City dbo:actorIn ;
         a dbo:SoccerPlayer, dbo:Athlete .

  # Ensure the person1, athlete, and actor are connected through team memberships
  ?person1 dbo:sportTeam ?team .
  ?athlete dbo:sportTeam ?team .
  ?actor dbo:sportTeam ?team .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?episode dbo:title ""All or Nothing: Manchester City""@en .
  ?episode dbo:actor ?player .

  # Check if the player is a soccer player and athlete
  ?player dbo:soccerPlayer true ;
          dbo:athlete true .

  # Ensure the player was born on February 22, 1955
  ?player dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = 1955 && MONTH(?birthday) = 2 && DAY(?birthday) = 22)

  # Check if the player is also a soccer manager
  ?player dbo:manager true .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?force ?award WHERE {
  # Find the war related to the sinking of Prince of Wales and Repulse
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commander ?commander .
  ?commander dbo:participatedIn ?event .
  ?event dbo:war ?war .

  # Find the force and award for Edmund Hakewill-Smith
  dbr:Edmund_Hakewill-Smith dbo:militaryForce ?force ;
                            dbo:award ?award .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeArtist WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Florida ;
          dbo:bandMember ?band .
  
  ?band dbo:musicalArtist ?associatedArtist .

  ?member a dbo:Person ;
          dbo:associatedMusicalArtist ?gs9Artist ;
          foaf:name ?name .

  ?gs9Artist a dbo:MusicalArtist ;
             dbo:member ?gs9Member .

  ?nativeArtist a dbo:MusicalArtist ;
                foaf:name ?birthName .
  
  FILTER(?person = ?nativeArtist)
  FILTER(STR(?name) = STR(?birthName))
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?writer ?successor WHERE {
  # Find the writer of George Ducas's work
  ?georgeDucas a dbo:Writer ;
               foaf:name ""George Ducas""@en .
  OPTIONAL { ?georgeDucas dbo:work ?work . }
  OPTIONAL { ?work dbo:author ?writer . }

  # Identify Jean Baptist, Comte d'Arco as a commander in a war that is also a television show and societal event
  ?jeanBaptist a dbo:Person ;
               foaf:name ""Jean Baptist, Comte d'Arco""@en .
  OPTIONAL { ?jeanBaptist dbo:commanderInWar ?war . }
  
  # The Russo-Polish War (1654–1667) context
  ?russianPolishWar a dbo:MilitaryConflict ;
                    foaf:name ""Russo-Polish War (1654–1667)""@en .
  
  # Find the successor who is a politician and office holder
  OPTIONAL { ?jeanBaptist dbo:successor ?successor . }
  FILTER(?war = ?russianPolishWar)
  FILTER(?successor a dbo:Politician)
  FILTER(?successor a dbo:OfficeHolder)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfHideyoshi ?entityBirthPlaceWar ?warToyotomiHidenaga WHERE {
  # Child of Toyotomi Hideyoshi
  dbr:Toyotomi_Hideyoshi dbo:child ?childOfHideyoshi .

  # Entity related to the birthplace of Yamaza Enjirō
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  ?entityBirthPlaceWar dbo:location ?birthPlace .

  # War involving Toyotomi Hidenaga
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?warToyotomiHidenaga .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?force WHERE {
  # Find awards given by the United States Congress
  ?award a dbo:Award ;
         dbo:awardingBody dbr:United_States_Congress .

  # Identify awardees of these awards
  ?award dbo:recipient ?awardee .

  # Check if the awardee is connected to Charleston, South Carolina
  OPTIONAL { ?awardee dbo:location dbr:Charleston,_South_Carolina }

  # Find wars associated with this awardee
  OPTIONAL { ?awardee dbo:participatedIn ?war }

  # Identify Quincy Adams Gillmore's award and its awardee
  ?gillmoreAward a dbo:Award ;
                 dbo:recipient dbr:Quincy_Adams_Gillmore .

  # Find the force related to this awardee
  OPTIONAL { ?gillmoreAward dbo:participatedIn ?force }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathPlace dbr:Taipei ;
          dbo:child ?child .
  
  ?child a dbo:Politician ;
         dbo:birthPlace ?birthPlace .

  ?laoSheWork dbo:country ?workCountry .
  FILTER(?workCountry = ?birthPlace)
}
```",5,6,6,3,2,3,2,20,1,10,0,0.09090909090909091,1.0,0.16666666666666669
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?finalChild WHERE {
  # Find Alexander of Württemberg and his child
  dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) dbo:child ?firstChild .
  
  # Find the first child's child
  ?firstChild dbo:child ?secondChild .

  # Find the second child's child
  ?secondChild dbo:child ?thirdChild .

  # Find Archduchess Margarete Sophie of Austria and her child
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?margareteChild .

  # Ensure the third child is also a child of Margarete's lineage
  FILTER(?thirdChild = ?margareteChild)

  # Find Archduchess Helena and her spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?helenaSpouse .

  # Find the child of Helena's spouse who is royalty
  ?helenaSpouseChild dbo:child ?helenaSpouse .
  FILTER(STRSTARTS(STR(?helenaSpouseChild), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?helenaSpouseChild a dbo:RoyalFamilyMember })

  # Find the predecessor of Helena's spouse's child
  ?predecessor dbo:child ?helenaSpouse .

  # Ensure the final child is a royalty and matches all conditions
  FILTER(?thirdChild = ?predecessor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace ?awardeeBirthPlace WHERE {
  # Birth place of the Governor of Virginia
  ?governor a dbo:Politician ;
            dbo:officeHolderOf dbr:Governor_of_Virginia .
  OPTIONAL { ?governor dbo:birthPlace ?governorBirthPlace . }

  # Birth place of the American author of ""El Deafo""
  ?author a dbo:Writer ;
          dbo:work dbr:El_Deafo ;
          dbo:country dbr:United_States .
  OPTIONAL { ?author dbo:birthPlace ?authorBirthPlace . }

  # Birth place of awardees from Vince Gilligan's awards list
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  ?gilliganAwardList dbo:award ?award .
  FILTER(STRSTARTS(STR(?gilliganAwardList), ""http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan""))
  OPTIONAL { ?awardee dbo:birthPlace ?awardeeBirthPlace . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfEdward ?parentOfAwardee ?fatherOfChild WHERE {
  # Edward Stanley, 17th Earl of Derby's parent
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parentOfEdward .

  # Rodney Lees' award and its awardee
  ?award dbo:recipient ?awardee .
  ?awardee foaf:name ""Rodney Lees""@en .
  
  OPTIONAL { ?awardee dbo:parent ?parentOfAwardee . }

  # Alumnus of Eton College who is a politician and has a child
  ?alumnus dbo:almaMater dbr:Eton_College ;
           a dbo:Politician .

  ?child dbo:parent ?fatherOfChild .
  ?fatherOfChild foaf:name ?politicianName .

  OPTIONAL { ?alumnus dbo:child ?child . }

  FILTER(?parentOfEdward = ?parentOfAwardee)
  FILTER(?parentOfAward = ?fatherOfChild)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander ?militaryForceOfWar ?societalEvent WHERE {
  # Identify the war involving the 30th Regiment of Foot
  ?regiment a dbo:MilitaryUnit ;
            foaf:name ""30th (Cambridgeshire) Regiment of Foot""@en .
  
  OPTIONAL { 
    ?regiment dbo:participatedIn ?war .
    ?war dbo:commander ?commander .
  }
  
  # Identify the military force associated with William Bayne
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne""@en .
  
  OPTIONAL {
    ?bayne dbo:militaryForce ?militaryForceOfWar .
  }

  # Identify the societal event linked to Robert Calder
  ?calder a dbo:Person ;
          foaf:name ""Robert Calder""@en .
  
  OPTIONAL {
    ?calder dbo:societalEvent ?societalEvent .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?work a dbo:Book ;
        dbo:author ?author .
  
  ?author foaf:name ""Hillary Clinton""@en ;
          a dbo:Politician, dbo:OfficeHolder .

  OPTIONAL { ?author dbo:spouse ?spouse . }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?associatedArtist WHERE {
  # Find the band associated with Kim Wilson
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  ?kimWilson dbo:musicalBand ?band .
  ?band foaf:name ?bandName .

  # Find any associated musical artist related to Nick Curran
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbp:associatedMusicians ?associatedArtist . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent ?nativePlace WHERE {
  ?williamGayner a dbo:Person ;
                 foaf:name ""William Gayner""@en .
  
  ?williamGayner dbo:birthPlace ?birthPlace .
  
  FILTER((?birthPlace rdf:type dbo:Region) && (?birthPlace rdf:type dbo:Country))
  
  ?parent dbo:child ?patrickBowesLyon ;
          dbo:child ?maryFrancesBowesLyon .

  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .
  dbr:Mary_Frances_Bowes-Lyon dbo:parent ?parent .

  ?nativePerson a dbo:Person ;
                foaf:nativePlace ?birthPlace .
  
  FILTER(?parent = ?nativePerson)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # William I of Sicily's child who is royalty
  ?child1 dbo:parent dbr:William_I_of_Sicily ;
          a dbo:Person ;
          dbo:royalty true .

  # Alfonso VI's grandchild who is royalty
  ?grandchild dbo:parent ?child2 ;
              a dbo:Person ;
              dbo:royalty true .
  ?child2 dbo:parent dbr:Alfonso_VI_of_León_and_Castile .

  # Roger II of Sicily's parent's child who is royalty
  ?rogerChild dbo:parent ?parentOfRoger ;
              a dbo:Person ;
              dbo:royalty true .
  ?parentOfRoger dbo:child dbr:Roger_II_of_Sicily .

  # Find the common individual among these relationships
  FILTER(?child1 = ?grandchild && ?grandchild = ?rogerChild)

  # Retrieve the father of this common individual
  ?father dbo:child ?commonIndividual .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBandMember WHERE {
  ?cavaleraConspiracy a dbo:MusicalArtist ;
                      dbo:bandMember ?member .

  ?nothingToGein dbr:Nothing_to_Gein ;
                 dbo:producer ?producer .
  
  ?producer a dbo:Organization, dbo:MusicalGroup .

  ?producer dbo:bandMember ?commonBandMember .

  FILTER(?member = ?commonBandMember)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?vinceBirthPlace ?governorBirthPlace ?ceceBirthPlace WHERE {
  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceBirthPlace .

  # Paulus Powell's birthplace and governor of that place
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
  
  FILTER((?paulusBirthPlace rdf:type dbo:Region) && (?paulusBirthPlace rdf:type dbo:AdministrativeRegion))
  
  OPTIONAL {
    ?governor a dbo:Politician ;
              dbo:governs ?paulusBirthPlace .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }

  # Cece Bell's birthplace
  dbr:Cecil_Alice_Bell dbo:birthPlace ?ceceBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthEntity ?royParty ?fatherName ?fatherParty WHERE {
  # Roy Leonardo Barreras Montealegre details
  dbr:Roy_Leonardo_Barreras_Montealegre a dbo:Politician ;
                                        dbo:birthPlace ?birthEntity ;
                                        dbo:politicalParty ?royParty .

  # Sofía Petro's father details
  OPTIONAL { 
    ?sofia a dbo:Person ;
           foaf:name ""Sofía Petro""@en .
    ?sofia dbo:childOf ?father .
    ?father foaf:name ?fatherName ;
            dbo:politicalParty ?fatherParty .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?militaryForceOfWilliamBayne ?commanderInWar30thRegiment ?militaryForceOfAwardee WHERE {
  # Military force of the war involving William Bayne
  ?williamBayne a dbo:Person ;
                foaf:name ""William Bayne (Royal Navy officer)""@en .
  OPTIONAL { ?williamBayne dbo:militaryConflict ?war . }
  OPTIONAL { ?war dbo:militaryForce ?militaryForceOfWilliamBayne . }

  # Commander in the war involving the 30th Regiment of Foot
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:militaryConflict ?war2 .
  OPTIONAL { ?war2 dbo:commander ?commanderInWar30thRegiment . }

  # Military force related to an event involving the awardee of Knight Commander of the Order of the Bath
  ?awardee a dbo:Person ;
          dbo:award ""Knight Commander of the Order of the Bath"" .
  OPTIONAL { ?awardee dbo:event ?event . }
  OPTIONAL { ?event dbo:militaryForce ?militaryForceOfAwardee . }

  # Linking all parts together
  FILTER(?war = ?war2)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find movies with Iliza Shlesinger
  ?movieShlesinger dbo:starring dbr:Iliza_Shlesinger ;
                   a dbo:Film .

  # Find actor of ""Always"" (1989)
  dbr:Always_(film) dbo:starring ?alwaysActor .

  # Find spouse of an awardee from Janusz Kamiński's list
  ?kaminskiAward dbo:recipient dbr:Janusz_Kamiński ;
                 dbo:award ?award .
  OPTIONAL { ?kaminskiAward dbo:spouse ?spouse . }

  # Combine to find a movie that fits all criteria
  ?movieShlesinger dbo:starring ?actor .
  FILTER(?actor = ?alwaysActor || ?actor = ?spouse)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Find Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:parent ?fatherOfCecilia .

  # Find Ferdinand III's child who was a commander in the war
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?childFerdinand .
  
  OPTIONAL { 
    ?childFerdinand dbo:militaryCommander ?commanderInWar .
  }

  # Check if this child is related to an event and a television show of the Algerian War
  ?algerianEvent dbo:relatedMilitaryForce dbr:Algerian_War ;
                 rdf:type dbo:SocietalEvent .

  OPTIONAL {
    ?tvShow dbo:subject dbr:Algerian_War .
  }

  # Ensure the child is connected to these events
  FILTER(?child = ?childFerdinand && ?fatherOfCecilia = ?commanderInWar)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfBirthplace ?nativeOfWork WHERE {
  # Part 1: Shobhna Samarth's birthplace native
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .
  
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/Category:"")) 
    # Ensures the birthplace is a country by checking if it belongs to a category
  
  ?nativeOfBirthplace dbo:nationality ?birthPlace .

  # Part 2: Jamsetji Tata's work native
  dbr:Jamsetji_Tata dbo:occupation ?work .
  
  FILTER(STRSTARTS(STR(?work), ""http://dbpedia.org/resource/Category:"") && 
         CONTAINS(LCASE(STR(?work)), ""india""))
    # Ensures the work is related to India by checking if it belongs to a category containing 'india'
  
  ?nativeOfWork dbo:nationality ?work .
}
```",4,6,5,2,2,2,2,9,0,0,22,0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date ;
          a dbo:SoccerPlayer, dbo:SoccerManager .
  
  OPTIONAL { ?person dbo:soccerTeam ?team . }
  
  # Person born on 1955-02-22 who is an athlete
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date ;
           a dbo:Athlete .

  # Actor who is also a soccer player and athlete in Manuel Huerga's film
  ?actor a dbo:SoccerPlayer, dbo:Athlete, dbo:Actor .
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .
  
  OPTIONAL { ?actor dbo:soccerTeam ?team . }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardeeBirthPlace ?governorBirthPlace ?authorBirthPlace WHERE {
  # Part 1: Vince Gilligan's awardee
  {
    dbr:Vince_Gilligan dbo:nominatedFor ?award .
    ?award dbo:recipient ?awardee .
    ?awardee foaf:birthPlace ?awardeeBirthPlace .
  }

  UNION

  # Part 2: Governor of Paulus Powell's birth place
  {
    dbr:Paulus_Powell foaf:birthPlace ?region .
    ?region a dbo:AdministrativeRegion ;
            dbo:governor ?governor .
    ?governor a dbo:Politician ;
              foaf:birthPlace ?governorBirthPlace .
  }

  UNION

  # Part 3: Author of El Deafo
  {
    dbr:El_Deafo dbo:author ?author .
    ?author foaf:birthPlace ?authorBirthPlace .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war WHERE {
  { 
    dbr:Hashiba_Hidekatsu dbo:participatedIn ?war .
    BIND(dbr:Hashiba_Hidekatsu AS ?entity)
  }
  UNION
  {
    dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
    ?relatedEntity a dbo:Entity ;
                   dbo:location ?birthPlace ;
                   dbo:participatedIn ?war .
    BIND(?relatedEntity AS ?entity)
  }
  UNION
  {
    ?person foaf:name ""Koichirō""@en ;
            dbo:nickName ""Koichirō"" .
    ?person dbo:participatedIn ?war .
    BIND(?person AS ?entity)
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  ?quintana a dbo:Person ;
            foaf:name ""Anxo Quintana""@en .
  
  ?event dbo:leader ?quintana ;
         dbo:country dbr:Spain ;
         dbo:party dbr:Spanish_Socialist_Workers'_Party .

  ?event dbo:office ?office .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  ?annSothern a dbo:Person ;
              foaf:name ""Ann Sothern""@en .
  ?annSothern foaf:givenName ?birthName .

  # Actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?actor dbo:starringIn ?movie ;
         dbo:spouse ?spouse .

  # Landmark at elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)
  ?partyMember dbo:memberOf ?rulingParty .
  ?landmark dbo:locatedIn ?location .
  ?location dbo:governingBody ?rulingParty .

  # Combine results
  FILTER(?spouse = ?person)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?producer WHERE {
  # Step 1: Identify the writer of ""No Alternative""
  ?album a dbo:Album ;
         dbo:title ""No Alternative""@en .
  
  ?writer dbo:workAlbum ?album .

  # Step 2: Find a band member of this writer
  ?bandMember dbo:member ?writer .

  # Step 3: Identify associated musical artist and check if it's an artist
  ?associatedArtist dbo:associatedMusicalArtist ?bandMember .
  FILTER(?associatedArtist instanceof dbo:Artist) 

  # Step 4: Locate the producer of ""Lotus"" by R.E.M.
  dbr:Lotus (dbo:producer|dbo:recordLabel) ?producer .

  # Ensure the producer is an organization, band, or group
  FILTER((?producer instanceof dbo:Organization) || 
         (?producer instanceof dbo:Band) ||
         (?producer instanceof dbo:Group))
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityLabel ?birthPlace WHERE {
  # Part 1: Author of ""El Deafo""
  {
    dbr:Cece_Barrett dbo:authorOf dbr:El_Deafo .
    dbr:Cece_Barrett a dbo:Person ;
                    foaf:name ?authorName ;
                    dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Part 2: Governor of Virginia
  {
    dbr:Ralph_Northam dbo:governorOf dbr:Virginia ;
                     a dbo:Politician ;
                     foaf:name ?governorName ;
                     dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Part 3: Awardee of Vince Gilligan's Award
  {
    dbr:Vince_Gilligan dbo:awardReceived dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Acting_Performance_by_an_Actor_in_a_Drama_Series .
    ?awardee dbo:awardReceived dbr:Primetime_Emmy_Award_for_Outstanding_Lead_Acting_Performance_by_an_Actor_in_a_Drama_Series ;
             a dbo:Person ;
             foaf:name ?awardeeName ;
             dbo:birthPlace ?birthPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather ?royalOfficeHolder ?alterEgo WHERE {
  # Na'od's father and grandfather
  dbr:Na'ad_I dbo:child ?naod .
  ?naod dbo:parent ?fatherOfNaod .
  ?fatherOfNaod dbo:parent ?grandfather .

  # Yeshaq I's child who is royalty and an office holder
  dbr:Yeshaq_I dbo:child ?royalChild .
  ?royalChild a dbo:Monarch ;
              dbo:officeHolder ?royalOfficeHolder .

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston foaf:name ""Lamont Cranston""@en .
  ?alterEgo foaf:name ""The Shadow""@en .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Charles I of Hungary's father
  dbr:Charles_I_of_Hungary dbo:parent ?father .
  
  # Parent of Charles I's father (grandparent)
  ?father dbo:parent ?grandparent .

  # Ensure grandparent is royalty
  FILTER(?grandparent rdf:type dbo:Monarch)

  # Philip I, Prince of Taranto's father and spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:parent ?philipFather .
  ?philipFather dbo:spouse ?fatherSpouse .

  # Predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Child of predecessor who is royalty
  ?child dbo:parent ?predecessor .
  FILTER(?child rdf:type dbo:Monarch)

  # Ensure the parent of father (grandparent) matches the spouse of Philip's father
  FILTER(?fatherSpouse = ?grandparent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfLeader ?tenantOffice ?commanderOffice WHERE {
  # Part 1: Office of the leader of Conservative Republican Party (Spain)
  dbr:Conservative_Party_(Spain) dbo:leader ?leader .
  ?leader a dbo:Politician ;
          dbo:positionHeld ?officeOfLeader .

  # Part 2: Tenant of the residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  ?tenant a dbo:Person ;
          dbo:residence ?residence .
  ?tenant dbo:positionHeld ?tenantOffice .

  # Part 3: Office of the commander in the force of Manuel Pinto da Costa
  dbr:Manuel_Pinto_da_Costa dbo:commanderOf ?force .
  ?force a (dbo:MilitaryConflict | dbo:SocietalEvent) ;
         dbo:commander ?commander .
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:positionHeld ?commanderOffice .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  ?sandro a dbo:Person ;
          foaf:name ""Sandro Bertaggia""@en .
  ?sandro dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a country
  ?birthPlace a dbo:Country .

  # Find a person who is a decedent at that place
  ?decedent dbo:deathPlace ?birthPlace .

  # Ensure this person is native to Finland (administration of Alexander II)
  ?finlandAdmin a dbo:AdministrativeRegion ;
                foaf:name ""Finland""@en .
  ?decedent dbo:nationality ?finlandAdmin .

  # Ensure this person is also native to the Russian Empire
  ?russianEmpire a dbo:Country ;
                 foaf:name ""Russian Empire""@en .
  ?decedent dbo:nationality ?russianEmpire .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify Nelly as a member of GS9
  dbr:Nelly dbo:memberOfGroup dbr:GS9 .

  # Find associated musical artists with members of GS9
  ?gs9Member dbo:memberOfGroup dbr:GS9 .
  ?associatedArtist dbo:associatedMusicalArtist ?gs9Member .
  
  # Identify band members of these associated musical artists
  ?bandMember dbo:memberOfBand ?associatedArtist .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?birthPlaceEntity ?war WHERE {
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?eZP a dbo:Person ;
      foaf:name ""Elena Žalinkevičaitė-Petrauskienė""@en .
  
  ?eZP dbo:birthPlace ?birthPlace .

  # Find any entity related to the birthplace
  ?birthPlaceEntity dbo:location ?birthPlace .

  # Find the war associated with an award received by Alexander Lvovich Davydov
  ?ALD a dbo:Person ;
       foaf:name ""Alexander Lvovich Davydov""@en .
  
  ?award dbo:recipient ?ALD ;
         dbo:relatedWar ?war .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find the leader (Chancellor) of West Germany during the relevant period
  ?chancellor a dbo:Politician ;
              dbo:officeHolderOf dbr:Federal_Council_of_Germany ;
              dbo:country dbr:Germany .

  # Assuming the leader's term overlaps with the 2020-21 season
  ?chancellor dbo:nativeCountry ?nativeCountry .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  {
    ?person a dbo:Person ;
            dbo:residence dbr:Sofia .
    ?person dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?person a dbo:Person ;
            dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",5,5,6,3,2,3,2,20,2,34,0,0.05555555555555555,1.0,0.10526315789473684
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleForce ?awardeeConflictForce WHERE {
  # Military force of the Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:participatedIn ?battleEntity .
  ?battleEntity dbo:militaryUnit ?battleForce .

  # Awardee of Knight Commander of the Order of the Bath and their military conflict
  ?awardee a dbo:Person ;
           dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?awardeeConflictEntity dbo:commandedBy ?awardee .
  ?awardeeConflictEntity dbo:militaryUnit ?awardeeConflictForce .

  # Commander in the war of The Triple X's
  ?tripleX a dbo:Person ;
           foaf:name ""The Triple X""@en .
  ?tripleXWarEntity dbo:commandedBy ?tripleX .
  ?tripleXWarEntity dbo:militaryUnit ?tripleXForce .

  # Ensure the awardee is also involved in the same conflict as The Triple X's
  FILTER(?awardeeConflictEntity = ?tripleXWarEntity)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ciaraArtist ?niggaRawMovie WHERE {
  # Find Ciara's DBpedia resource and her role as a musical artist
  dbr:Ciara dbo:associatedMusicalArtist ?ciaraArtist .

  # Find Nigga Raw's DBpedia resource and his involvement in movies or shows
  dbr:Nigga_Raw dbo:actorIn ?niggaRawMovie .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find alter ego from ""The Golden Master""
  ?goldenMaster a dbo:TelevisionSeries ;
                foaf:name ""The Golden Master""@en .
  
  ?alterEgo dbo:characterName ?name ;
            dbo:actor ?person .
  
  # Find author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .
  
  # Find actor from ""ATL""
  dbr:ATL dbo:starring ?atlActor .

  # Check if the alter ego is an actor in a movie with both the author and ATL actor
  ?movie dbo:starring ?person, ?author, ?atlActor .
  
  # Return the professional (actor) who links these entities
  ?professional foaf:name ?name .
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?herberson .
  
  ?herberson foaf:name ""Herschel Bernardi""@en .

  OPTIONAL { 
    ?mariclare a dbo:Person ;
               foaf:name ""Mariclare Costello""@en .
    
    ?mariclare dbo:spouse ?spouse .
    
    ?child dbo:parent ?spouse .
    
    ?parentOfChild a dbo:Person ;
                   foaf:name ?spouseName .
    
    FILTER(?spouse = ?parentOfChild)
  }
  
  OPTIONAL {
    ?photographer a dbo:Photographer .
    
    ?photographerParent dbo:child ?photographer ;
                        foaf:name ?photographerName .
    
    ?parentOfPhotographer a dbo:Person ;
                          foaf:name ?photographerParentName .
    
    FILTER(?photographerParent = ?parentOfPhotographer)
  }
  
  OPTIONAL {
    ?actor a dbo:Actor ;
           dbo:actedIn ?movie .
  }

  FILTER(?herberson != ?actor) 
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Algerian War as a societal event and an event
  dbr:Algerian_War a dbo:SocietalEvent ;
                   a dbo:Event .

  # Commander in the Algerian War
  OPTIONAL { ?algerianWarCommander dbo:commanderOf ?algerianWar . }
  
  # Television show association
  OPTIONAL { ?televisionShow dbo:hasActor ?commander . }

  # Ferdinand II, Holy Roman Emperor's child
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?commander .

  # Archduke Charles Joseph of Austria's parent-child relationship
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?archdukeParent .
  
  # Commander is the father of someone who is a child of Archduke Charles Joseph's parent
  OPTIONAL { ?commander dbo:child ?intermediateChild . }
  OPTIONAL { ?intermediateChild dbo:parent ?archdukeParent . }

  FILTER(?algerianWarCommander = ?commander)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nicholas Michael Curran""@en .
  OPTIONAL { ?person dbo:musicalArtist ?artist . }
}

UNION

SELECT ?band WHERE {
  dbr:Eric_Clapton dbo:memberOfBand ?band .
}

UNION

SELECT ?realName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?person dbo:band ?band . }
  OPTIONAL { ?band foaf:name ?realName . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?plotkin a dbo:MusicalArtist ;
           foaf:name ""James Plotkin""@en .
  
  OPTIONAL { ?plotkin dbo:associatedBandOrMusicalArtist ?artist1 . }
  
  OPTIONAL { ?artist1 dbo:associatedBandOrMusicalArtist ?artist2 . }
  
  OPTIONAL { ?artist2 dbo:reference ?burntBySunGroup . }
  
  FILTER(STRSTARTS(LCASE(?burntBySunGroup), ""burnt by the sun""))
  
  OPTIONAL { ?artist2 a dbo:MusicalArtist ; foaf:name ?name . }
  
  OPTIONAL { ?band a dbo:Band ;
               a dbo:Organization ;
               a dbo:Group .
               
    FILTER(STRSTARTS(LCASE(?band), LCASE(?name)))
    
    ?band dbo:member ?bandMember .
  }
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeOfMarianoRajoy ?officeOfLeader ?tenant WHERE {
  # Mariano Rajoy's office
  ?mariano a dbo:Person ;
           foaf:name ""Mariano Rajoy""@en .
  OPTIONAL { ?mariano dbo:office ?officeOfMarianoRajoy . }

  # Miguel Maura's party and its leader's office
  ?miguel a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  OPTIONAL { ?miguel dbo:party ?party . }
  
  OPTIONAL {
    ?leader a dbo:Person ;
            dbo:officeLeaderOfParty ?party .
    OPTIONAL { ?leader dbo:office ?officeOfLeader . }
  }

  # Leader of the 2003 Madrid City Council election
  ?electionEvent a dbo:Election ;
                 dbo:electedOfficeHolder ?holder .
  
  FILTER(?electionEvent = dbr:Madrid_City_Council_election,_2003)
  
  OPTIONAL { ?residence dbo:tenant ?tenant . }
  OPTIONAL { ?holder dbo:officeHolderOf ?residence . }

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Claude Bowes-Lyon's child
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .

  # Parent of the child and Mary Elphinstone
  ?child dbo:parent ?parent .
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parent .

  # William Gayner's birthplace as a region and country
  dbr:William_Gayner foaf:nativePlace ?birthplace .
  ?birthplace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Ensure the parent is native to this place
  ?parent foaf:nativePlace ?birthplace .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the father of Cecilia Renata of Austria
  dbr:Cecilia_Renata_of_Austria dbo:parent ?fatherOfCecilia .

  # Find the parent of Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharles .

  # The father must be a commander in a war involving the 2nd Dragoon Regiment (France)
  ?commander a dbo:Person ;
             dbo:memberOf ?regiment .
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .

  # The child of this commander is what we are looking for
  ?fatherOfCecilia dbo:child ?child .

  # Ensure the person is a societal event and an event and a television show
  ?event a dbo:SocietalEvent ;
         rdfs:label ""2nd Dragoon Regiment (France)""@en .
  ?televisionShow a dbo:TelevisionShow ;
                  rdfs:label ""2nd Dragoon Regiment (France)""@en .

  # Link the commander to these events
  FILTER(?commander = ?event && ?commander = ?televisionShow)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?royalChild .

  # Parent A is the parent of the royal child and must be royalty and noble
  ?royalChild dbo:parent ?parentA .
  ?parentA a dbo:Person ;
           (dbo:RoyalFamilyMember|dbo:Noble) .

  # Find the spouse of Parent A
  OPTIONAL { ?parentA dbo:spouse ?spouse . }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  dbr:Janet_Gaynor dbo:film ?movie .
  UNION
  dbr:Janet_Gaynor dbo:work ?otherWork .
  
  FILTER(?movie != ?otherWork) # Ensure we don't duplicate the same work if it's listed under both properties.
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  
  ?sofia dbo:parent ?father .
  
  ?father dbo:politicalParty ?party .

  OPTIONAL { 
    ?colombianEntity dbo:country dbr:Colombia .
    FILTER(?father = ?colombianEntity)
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  
  OPTIONAL { 
    ?nickCurran dbo:bandMember ?band .
    ?band foaf:name ""The Fabulous Thunderbirds""@en .
    
    ?kimWilson a dbo:Person ;
               foaf:name ""Kim Wilson""@en .
    
    ?kimWilson dbo:bandMember ?band .
  }
  
  OPTIONAL {
    ?nickCurran dbo:associatedBand ?associatedArtist .
  }
}
```",5,6,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?musicalArtist WHERE {
  {
    ?joeyB a dbo:Person ;
           foaf:name ""Joey B""@en .
    OPTIONAL { ?joeyB dbo:musicalArtist ?musicalArtist . }
  } UNION {
    ?person a dbo:Person ;
            foaf:name ""Elorm Kabu Amenyah""@en .
    OPTIONAL { ?person dbo:musicalArtist ?musicalArtist . }
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?movie a dbo:Film ;
         a dbo:Work .
  
  ?iliza a dbo:Person ;
         foaf:name ""Iliza Shlesinger""@en .

  ?movie dbo:starring ?iliza .
}
```",1,3,2,1,1,2,3,28,1,6,0,0.14285714285714285,1.0,0.25
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?gs9 a dbo:MusicalGroup ;
       foaf:name ""GS9""@en .
  
  ?member dbo:member ?gs9 ;
          a dbo:Artist, dbo:MusicalArtist .

  ?associatedArtist dbo:associatedBandOrMusicalArtist ?member .

  ?bandMember dbo:member ?associatedArtist .
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist ?associatedBand WHERE {
  {
    ?person a dbo:MusicalArtist ;
            foaf:name ""Nick Curran""@en .
    OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
  }
  UNION
  {
    ?person a dbo:MusicalArtist ;
            foaf:name ""Kim Wilson""@en .
    OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
  }
}
```",4,5,5,3,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:Spanish_Socialist_Workers'_Party dbo:leader ?leader .
  
  OPTIONAL {
    ?election a dbo:Election ;
              dbo:electedOffice ?office ;
              dbo:date ""2009-05-22""^^xsd:date .
    
    ?office dbo:party dbr:Spanish_Socialist_Workers'_Party .
    
    FILTER EXISTS { ?leader dbo:heldPosition ?position . }
  }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Part 1: Find the actor of the album related to ""What You Know (T.I. song)""
  dbr:Trap_Muzik dbo:album dbr:What_You_Know_(T.I._song) .
  OPTIONAL { dbr:Trap_Muzik dbo:actor ?albumActor . }

  # Part 2: Find the author of ""Smartbomb"" and their movies
  dbr:Smartbomb dbo:author ?author .
  OPTIONAL { ?author foaf:name ?authorName . }
  OPTIONAL { ?movie dbo:starring ?author ; dbo:title ?movieTitle . }
  OPTIONAL { ?movie dbo:actor ?movieActor . }

  # Find the common actor
  FILTER(?albumActor = ?movieActor)
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor ?child ?spouse WHERE {
  # Find Myat Hpone Pyo and his predecessor
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  OPTIONAL { 
    ?myatHponePyo dbo:predecessor ?predecessor .
  }
  
  # Find Saw Min Hla's children
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  OPTIONAL {
    ?child dbo:parent ?sawMinHla .
  }

  # Find Myat Hpone Pyo's father and his spouse who is royalty
  ?myatHponePyo dbo:father ?father .
  
  OPTIONAL {
    ?spouse dbo:spouse ?father ;
            a dbo:RoyalPerson .
  }
  
  FILTER(?predecessor = ?child)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?singerRole ?alterEgoRole ?band WHERE {
  # Find Robert Lamar Thompson as a musical artist
  ?robert a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en .
  
  OPTIONAL { ?robert dbo:profession ?singerRole . }
  OPTIONAL { ?robert dbo:member ?band . }

  # Find The Shadow's alter ego and its professional role
  ?shadowAlterEgo a dbo:Person ;
                  foaf:name ?alterEgoName .
  
  FILTER(CONTAINS(?alterEgoName, ""The Shadow""))
  
  OPTIONAL { ?shadowAlterEgo dbo:profession ?alterEgoRole . }
}
```",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicArtist ;
          dbo:nativePlace dbr:Florida .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",2,3,3,2,1,3,3,71,0,0,59,0,0.0,0
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInTeam ?team WHERE {
  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?birthdate .

  # Find a person who is both a soccer player and manager, born on the same date
  ?person a dbo:SoccerPlayer ;
          dbo:managerOf ?team ;
          dbo:birthDate ?birthdate .
  
  # Get Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:playsFor ?playerInTeam .

  # Match the teams
  FILTER(?team = ?playerInTeam)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?spouse ?person WHERE {
  # Find the landmark with the specified elevation and its ruling party member
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:location ?location .
  ?location dbp:rulingParty ?rulingParty .
  ?partyMember a dbo:Person ;
               dbo:memberOf ?rulingParty .

  # Find the actor of ""1,000 Dollars a Minute"" and their spouse
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?actor dbo:actedIn ?movie ;
         foaf:name ?actorName .
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Find the person born as Harriette Arlene Lake
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en ;
          dbo:birthName ""Harriette Arlene Lake""@en .

  # Linking conditions (if any)
  OPTIONAL { ?spouse = ?partyMember }
  OPTIONAL { ?spouse = ?person }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  ?person dbo:placeOfBirth dbr:New_York_(state) .
  ?person dbo:award ?award .
  ?award dbo:country dbr:United_States .
  ?award a dbo:Settlement .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfDoonArbus ?parentOfProfessional WHERE {
  # Part for Doon Arbus's parent
  OPTIONAL {
    ?doonArbus a dbo:Person ;
               foaf:name ""Doon Arbus""@en .
    ?doonArbus dbo:parent ?parentOfDoonArbus .
  }

  # Part for the professional in Eugène Cattin's profession
  OPTIONAL {
    ?eugeneCattin a dbo:Person ;
                  foaf:name ""Eugène Cattin""@en .
    ?eugeneCattin dbo:profession ?profession .

    ?professional a dbo:Person ;
                  dbo:profession ?profession .
    ?professional dbo:parent ?parentOfProfessional .
  }
}
```",4,4,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?producerProfession ?professionalInSameProfession WHERE {
  # Part 1: Find Bob Thompson's band
  dbr:Bob_Thompson_(musician) dbo:band ?band .

  # Part 2: Find the producer of Coke Studio Philippines and their profession
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer foaf:profession ?producerProfession .

  # Part 3: Find another professional in the same profession as the producer
  ?professionalInSameProfession a dbo:Person ;
                               foaf:profession ?producerProfession .
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?episode dbo:title ""Shelby Oaks""@en ;
           dbo:partOfSeries dbr:The_Golden_Master .
  
  ?episode dbo:actor ?actor .

  OPTIONAL { 
    ?goldenMasterEpisode dbo:partOfSeries dbr:The_Golden_Master ;
                         dbo:character ?alterEgoCharacter .
    
    ?actor dbo:role ?role .
    FILTER(?role = ?alterEgoCharacter)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nicholas Michael Curran""@en .
  ?person dbo:birthDate ?birthDate .
  ?person dbo:musicalArtist ?artistRole .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mariclare Costello""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:parent ?parent .
  
  ?parent a dbo:RoyalFamilyMember .

  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Philipp_Albrecht,_Duke_of_Württemberg dbo:child ?child .
  
  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?child .
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Royalty }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find the DBpedia resource for ""2nd Dragoon Regiment (France)""
  dbr:2nd_Dragoon_Regiment_(France) a dbo:MilitaryUnit ;
                                  dbo:participatedIn ?war .

  # Ensure the war is classified as a societal event, an event, and a television show
  ?war a dbo:SocietalEvent ;
       a dbo:Event ;
       a dbo:TelevisionShow .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work a dbo:Book ;
        dbo:author ?author ;
        foaf:name ""Promise Me, Dad""@en .
  
  ?bidenWork dbo:author dbr:Joe_Biden ;
             a dbo:WrittenWork, dbo:American .

  FILTER(?work = ?bidenWork)
}
```",3,7,4,2,2,3,2,20,0,0,1,0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Theodor Heuss's native place
  dbr:Theodor_Heuss dbo:nativePlace ?heussNative .

  # Manager of the 2020–21 SBV Vitesse season
  dbr:2020%E2%80%9321_SBV_Vitesse_season dbo:manager ?vitesseManager .
  ?vitesseManager dbo:nativePlace ?vitesseNative .

  # Manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?bochumManager .
  ?bochumManager dbo:nativePlace ?bochumNative .

  # Ensure all native places are the same country
  ?heussNative dbo:country ?country .
  ?vitesseNative dbo:country ?country .
  ?bochumNative dbo:country ?country .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?deathPlace WHERE {
  dbr:Aladdin_(1958_film) dbo:actor ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?janet a dbo:Person ;
         foaf:name ""Janet Gaynor""@en .
  
  ?film dbo:actor ?janet ;
        a dbo:Film .

  OPTIONAL { ?film dbo:producer ?producer . }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  # Retrieve $pacely's birth name and check if they are a musician
  ?person1 foaf:name ""$pacely""@en .
  OPTIONAL { ?person1 dbo:birthName ?birthNamePacely . }
  OPTIONAL { ?person1 dbo:musicArtist ?artist . }

  # Retrieve Joey B's birth name and check if they are a musician
  ?person2 foaf:name ""Joey B""@en .
  OPTIONAL { ?person2 dbo:birthName ?birthNameJoeyB . }
  OPTIONAL { ?person2 dbo:musicArtist ?artist . }

  FILTER(?artist != UNDEF)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?associatedArtist WHERE {
  # Query for actors in ""The Campus Queen""
  ?film a dbo:Film ;
        foaf:name ""The Campus Queen""@en .
  OPTIONAL { ?film dbo:actor ?actor . }

  # Query for associated musical artist of Cynthia Morgan
  ?cynthia a dbo:MusicalArtist ;
           foaf:name ""Cynthia Morgan""@en .
  OPTIONAL { ?cynthia dbo:associatedMusicalArtist ?associatedArtist . }
}
```",2,2,3,1,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?administration WHERE {
  {
    # Administration of Christian IX of Denmark
    dbr:Christian_IX_of_Denmark dbo:administration ?administration .
    BIND(dbr:Christian_IX_of_Denmark AS ?entity)
  }
  UNION
  {
    # Attempt to find administration related to Duchy of Schleswig
    OPTIONAL { 
      dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
      ?mayor dbo:administration ?administration .
      BIND(dbr:Duchy_of_Schleswig AS ?entity)
    }
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?entity a dbo:Group ;
          foaf:name ""The Triple X's""@en .
  
  ?entity dbo:participatedIn ?event .
  
  FILTER(?event a dbo:MilitaryConflict)
  
  BIND(?event AS ?war)
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?birthName WHERE {
  # Find Carrie Johnson's spouse
  ?carrie a dbo:Person ;
          foaf:name ""Carrie Johnson""@en .
  OPTIONAL { ?carrie dbo:spouse ?spouse . }

  # Find John Boxer's birth name
  ?john a dbo:Person ;
        foaf:name ""John Boxer""@en .
  OPTIONAL { ?john foaf:name ?birthName . }
}
```",3,3,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  {
    # Assuming ""25"" refers to a specific award, replace with the correct resource if known
    ?award a dbo:Award ;
          rdfs:label ""25""@en .
    ?person dbo:recipientOfAward ?award .
    ?person dbo:participatedInWar ?war .
  }
  UNION
  {
    # Assuming ""Golden Sword for Bravery"" is the correct resource name in DBpedia
    dbr:Golden_Sword_for_Bravery a dbo:Award ;
                                 dbo:recipient ?person .
    ?person dbo:participatedInWar ?war .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerTomSawyer ?producerGaynorFame WHERE {
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Janet Gaynor's claim to fame is often considered to be the movie ""Seventh Heaven""
  dbr:Seventh_Heaven_(1927_film) dbo:producer ?producerGaynorFame .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         dbo:recipient ?awardee ;
         dbo:country dbr:Russian_Empire .
  
  OPTIONAL { ?award dbo:conflict ?war . }
  
  # Assuming there's an ordinal property or we can order by some criteria
  # This part is speculative as DBpedia might not have a direct way to filter the 25th awardee
  ORDER BY ?awardee
  
  LIMIT 1 OFFSET 24
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Baeda_Maryam_I dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
    BIND(""Vince Gilligan"" AS ?personName)
  } UNION {
    ?author a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
    BIND(""Cece Bell"" AS ?personName)
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:High_Society_Blues dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonChild WHERE {
  # Find the child of Ferdinand II
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?childOfFerdinand2 .
  
  # Find the children of Ferdinand III
  dbr:Ferdinand_III,_Holy_Roman_Empire dbo:child ?childOfFerdinand3 .

  # The child of Ferdinand II should be a parent of one of Ferdinand III's children
  ?commonChild dbo:parent ?childOfFerdinand3 .
  
  FILTER(?childOfFerdinand2 = ?commonChild)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war ?settlement WHERE {
  # Gillmore Medal awardee and their force
  ?gillmoreMedalAward a dbo:Award ;
                      rdfs:label ""Gillmore Medal""@en .
  ?awardee dbo:award ?gillmoreMedalAward ;
           dbo:militaryUnit ?force .

  # Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:participatedIn ?war .

  # Person deceased on 1850-08-05 and their birthplace
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .
  
  FILTER((?settlement a dbo:Settlement) && (dbo:nationality ?person dbr:United_States))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee ?charlestonEntity WHERE {
  ?award a dbo:Award ;
         dbo:givenBy dbr:United_States_Congress .
  
  ?award dbo:recipient ?awardee .

  OPTIONAL { 
    ?awardee dbo:location dbr:Charleston,_South_Carolina .
    BIND(?awardee AS ?charlestonEntity)
  }

  OPTIONAL {
    ?war a dbo:War ;
         dbo:relatedTo ?awardee .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Algerian War commander
  ?warEvent a dbo:MilitaryConflict ;
            dbo:name ""Algerian War""@en .
  
  ?commander dbo:commanderOf ?warEvent .

  # Societal event and television show context (assuming these are properties or related entities)
  OPTIONAL { ?commander dbo:societalEvent ?societyEvent . }
  OPTIONAL { ?commander dbo:televisionShow ?tvShow . }

  # Familial relationships
  ?ferdinandII dbr:Ferdinand_II,_Holy_Roman_Emperor ;
               dbo:child ?commander .

  ?commander dbo:parentOfChild ?child .
  
  ?ferdinandIII dbr:Ferdinand_III,_Holy_Roman_Empire ;
                dbo:child ?child .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?writer WHERE {
  # Find the commander in Russo-Polish War who is also a politician and office holder
  ?commander dbo:participatedInBattle ?battle ;
             dbo:occupation [ a dbo:Politician, dbo:OfficeHolder ] .
  
  FILTER(STRSTARTS(STR(?battle), ""Russo-Polish_War_(1654–1667)""))

  # Find the successor of this commander
  OPTIONAL { ?commander dbo:succeededBy ?successor . }

  # Ensure the same person was a commander in the Great Turkish War
  ?commander dbo:participatedInBattle ?greatTurkishWar .
  
  FILTER(STRSTARTS(STR(?greatTurkishWar), ""Great_Turkish_War""))

  # Reference to the writer of George Ducas's work
  dbr:George_Ducas dbo:authorOf ?work .
  ?writer dbo:authorOf ?work .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?force WHERE {
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Commander_of_the_Order_of_the_British_Empire .
  
  ?event dbr:Sinking_of_Prince_of_Wales_and_Repulse ;
         dbo:participant ?awardee .

  OPTIONAL { ?awardee dbo:militaryForce ?force . }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors involved in ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:castMember ?actor .

  # Identify the alter ego of ""The Shadow"" in comics
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow .
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  OPTIONAL {
    ?alterEgo dbo:profession ?profession .
    FILTER(?profession = dbo:Actor)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Maria of Bytom""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtistWriter ?associatedMusicalArtistPacely WHERE {
  # Find the writer of ""The Live Anthology""
  ?writer dbo:work ?anthology .
  ?anthology foaf:name ""The Live Anthology""@en .

  # Check if the writer is a musical artist
  OPTIONAL { ?writer dbo:musicalArtist ?musicalArtistWriter . }

  # Find the person with birth name ""$pacely""
  ?person foaf:birthName ""$pacely"" .
  
  # Get associated musical artists of this person
  OPTIONAL { ?person dbo:associatedMusicalArtist ?associatedMusicalArtistPacely . }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:West_Germany .
}
```",1,1,2,1,1,3,3,71,5170,0,0,1.0,1.0,1.0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?position WHERE {
  VALUES ?individual { 
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck 
    dbr:Olaf_I_of_Denmark
  }
  
  ?person a dbo:Person ;
          dbo:birthName ?individual .
  
  OPTIONAL { ?person dbo:positionHeld ?position . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1955-02-22""^^xsd:date ;
          a dbo:Athlete .
  OPTIONAL { ?person foaf:name ?name . }
}
```",2,3,3,2,1,3,3,71,0,10,18,0.0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Baeda Maryam I and his child
  dbr:Baeda_Maryam_I dbo:child ?baedaChild .

  # Father of Baeda Maryam I's child (grandfather)
  ?baedaChild dbo:parent ?royalOfficeHolder .
  FILTER(?royalOfficeHolder a dbo:Monarch || ?royalOfficeHolder a dbo:GovernmentOfficial) 

  # Commander in the Siege of Mukha who is royalty
  ?commanderInSiege dbo:commanderOf dbr:Siege_of_Mukha ;
                   a dbo:Monarch .
  
  # This commander's parent (the grandfather)
  ?royalOfficeHolder dbo:parent ?commanderInSiege .

  # The child of this commander
  ?commanderInSiege dbo:child ?child .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?ackquille a dbo:Person ;
             foaf:name ""Ackquille Jean Pollard""@en .
  
  ?ackquille dbo:musicalArtist ?associatedArtist .

  ?associatedArtist dbo:member ?bandMember .

  ?bandMember a dbo:MusicalArtist .

  ?gs9Member a dbo:Person ;
             dbo:memberOf dbr:GS9 .

  FILTER(?bandMember = ?gs9Member)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInRegion WHERE {
  ?kiyosu a dbo:PopulatedPlace ;
          foaf:name ""Kiyosu""@en .
  
  OPTIONAL { ?kiyosu dbo:timeZone ?timeZone . }
  
  OPTIONAL { ?region dbp:timeZone ?timeZone ; 
              dbo:entity ?entityInRegion . }
}
```",3,3,4,3,1,3,2,20,0,0,8916,0,0.0,0
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  # Find Amy Arbus and her parent
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  
  ?parent dbo:child ?amy ;
          dbo:deathPlace dbr:Los_Angeles .

  # Find movies where the parent acted
  ?movie dbo:actor ?parent ;
         a dbo:Film .

  OPTIONAL { ?movie dbo:actor ?actor . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander ?successor WHERE {
  # Michał Kazimierz Pac's involvement in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pac dbo:commanderInMilitaryConflict ?event .
  
  # Ensure the event is the Great Turkish War
  FILTER(CONTAINS(LCASE(STR(?event)), ""great turkish war""))

  # Find the commander of Michał Kazimierz Pac in this conflict
  ?person dbo:commanderOf ?commander .

  # Identify the successor who is a politician and an office holder
  ?commander dbo:successor ?successor .
  ?successor a dbo:Politician ;
             dbo:officeHolder true .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?actorName ?actorDeathPlace WHERE {
  # Query for Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # Query for the main actor of ""The Sky Ranger"" (1928)
  dbr:The_Sky_Ranger_1928 dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?p ?o WHERE {
  dbr:Mitaka ?p ?o .
}
```",1,1,2,1,1,2,2,9,1,21,0,0.045454545454545456,1.0,0.08695652173913045
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?film ?deathPlace WHERE {
  {
    # For ""Color Me Dead""
    dbr:Color_Me_Dead dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
    BIND(""Color Me Dead"" AS ?film)
  } UNION {
    # For ""Aladdin (1958 film)""
    dbr:Aladdin_(1958_film) dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
    BIND(""Aladdin (1958 film)"" AS ?film)
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake""@en .
  
  ?actor a dbo:Actor ;
         foaf:name ""1,000 Dollars a Minute""@en .

  ?harriette dbo:spouse ?actor .

  OPTIONAL { 
    ?partyMembership dbo:member ?person ;
                     dbo:politicalParty ?rulingParty .
    FILTER(?rulingParty = <http://dbpedia.org/resource/Ruling_party_in_Central,_Louisiana>)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ebrahim Alkazi""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?cora a dbo:Person ;
        foaf:name ""Cora Sue Collins""@en .
  
  ?work dbo:creator ?cora ;
        rdf:type dbo:CreativeWork .

  OPTIONAL { ?work dbo:producer ?producer . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:honoraryAward dbr:Gillmore_Medal .
  
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Russia_national_football_team dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shirley Stoler""@en .
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",2,2,3,2,1,3,2,20,0,0,19241,0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationChristianIX ?administrationOlafI ?territoryAdministered FROM {
  # Administration of Christian IX of Denmark
  OPTIONAL { 
    dbr:Christian_IX_of_Denmark dbo:positionHeld ?administrationChristianIX .
  }
  
  # Administration of Olaf I of Denmark
  OPTIONAL { 
    dbr:Olaf_I_of_Denmark dbo:positionHeld ?administrationOlafI .
  }

  # Territory administered from Copenhagen
  OPTIONAL {
    ?territory dbo:administeredBy dbr:Copenhagen ;
               dbo:administrativeCenter dbr:Copenhagen .
    BIND(?territory AS ?territoryAdministered)
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseChildRoyalty WHERE {
  # Find spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Find child of the spouse who is a royalty
  ?spouse dbo:child ?spouseChild .
  ?spouseChild a dbo:Monarch .

  # Find child of Béla IV of Hungary and their royal child
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  ?belasChild dbo:child ?belasGrandchild .
  ?belasGrandchild a dbo:Monarch .

  # Return the spouse's child who is royalty if it matches Béla IV's grandchild
  FILTER(?spouseChild = ?belasGrandchild)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Clinton""@en .
  
  OPTIONAL { 
    ?person dbo:spouse dbr:Hillary_Clinton .
  }
  
  OPTIONAL {
    ?book dbo:author ?person ;
          foaf:title ""Back to Work""@en .
  }

  # Assuming a metaphorical role in the HIV/AIDS crisis
  OPTIONAL {
    ?person dbo:occupation dbr:President_of_the_United_States .
    ?event dbo:relatedWork ?person ;
           foaf:name ""HIV/AIDS crisis""@en .
  }
}
```",4,6,5,2,3,3,3,71,0,1,1,0.0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard E. Grant""@en .
  
  ?work dbo:starring ?person ;
        a ?type .

  FILTER(?type IN (dbo:Film, dbo:TelevisionSeries))
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?authorOfWork ?commanderInWar WHERE {
  ?work a dbo:WrittenWork, dbo:Book, dbo:CreativeWork ;
        dbo:author ?person .
  
  ?person foaf:name ""Bill Clinton""@en .

  OPTIONAL { 
    ?war a dbo:SocietalEvent, dbo:Disease ;
         dbo:commanderInWar ?commander .
    
    ?commander dbo:memberOf dbr:United_States_Navy ;
               dbo:positionTitle ?title .
  }
  
  FILTER(?person = ?authorOfWork)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?descendant WHERE {
  # Alexander of Württemberg and his lineage
  dbr:Alexander_of_W%C3%BCrttemberg dbo:child ?firstChild .
  ?firstChild dbo:child ?secondChild .
  ?secondChild dbo:child ?thirdChild .

  # Archduchess Helena's spouse and their child
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?helenaSpouse .
  ?helenaSpouse dbo:child ?helenaChild .

  # Predecessor of the child who is royalty
  ?helenaChild rdfs:subClassOf* ?predecessor .
  ?predecessor rdf:type dbo:Royalty .

  # Find the descendant that matches the predecessor
  FILTER(?thirdChild = ?predecessor)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalParent WHERE {
  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby a dbo:Person ;
                                         dbo:child ?victor .

  # Victor Stanley (Royal Navy officer)
  ?victor foaf:name ""Victor Stanley""@en .
  
  # Parent of Victor's child who is a politician and an office holder
  ?victorsChild dbo:parent ?politicianOfficeHolder ;
                a dbo:Person ;
                (dbo:politician|dbo:officeHolder) .

  # Find the parent of this politician/office holder
  ?politicianOfficeHolder dbo:parent ?finalParent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child WHERE {
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .
  
  dbr:Stephen_V_of_Hungary dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee a dbo:Person .
  ?awardEvent dbo:prize dbr:Nobel_Prize_in_Physics ;
              dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  dbr:Max_Born a dbo:Person ;
               foaf:name ""Max Born""@en .
  OPTIONAL { dbr:Max_Born dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?otherProfessional WHERE {
  ?frédéric a dbo:Person ;
            foaf:name ""Frédéric Bouraly""@en .
  
  ?frédéric dbo:profession ?profession .

  ?otherIndividual a dbo:Person ;
                   dbo:profession ?profession .
  
  FILTER(?frédéric != ?otherIndividual)
  
  BIND(?otherIndividual AS ?otherProfessional)
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Saw Shwe Khet's child who is royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet ;
         a dbo:Royal .

  # Identify the father of this royal child, ensuring he is also royalty
  ?father dbo:child ?child ;
          a dbo:Royal .

  # Find the spouse of this royal father
  OPTIONAL { ?father dbo:spouse ?spouse . }

  # Ensure the father is a predecessor of Myat Hpone Pyo
  ?myatHponePyo dbr:Myat_Hpone_Pyo .
  FILTER(?father < ?myatHponePyo)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?notableWork ?producer WHERE {
  # Find Cora Sue Collins' profession and notable work
  ?collins a dbo:Person ;
           foaf:name ""Cora Sue Collins""@en .
  
  OPTIONAL { ?collins dbo:profession ?profession . }
  OPTIONAL { ?collins dbo:notableWork ?notableWork . }

  # Find the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?party WHERE {
  { 
    ?gustavo a dbo:Person ;
             foaf:name ""Gustavo Petro""@en .
    OPTIONAL { ?gustavo dbo:party ?party . }
    BIND(""Gustavo Petro"" AS ?personName)
  } UNION
  { 
    ?roy a dbo:Person ;
         foaf:name ""Roy Barreras""@en .
    OPTIONAL { ?roy dbo:party ?party . }
    BIND(""Roy Barreras"" AS ?personName)
  }
}
```",2,2,3,1,2,2,3,28,1,11,0,0.08333333333333333,1.0,0.15384615384615385
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:India .
}
```",1,1,2,1,1,2,2,9,1293,3513,7684,0.2690387016229713,0.14403475548624262,0.1876224334324893
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Herschel Bernardi""@en .
  
  ?person dbo:starring ?movie .
}
```",2,3,3,2,1,3,3,71,0,0,67,0,0.0,0
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:child ?margareteChild .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippChild .

  # Trace back three generations from Alexander of Württemberg (1804-1881)
  dbr:Aleksander_I_Karol_Józef_Ludwik_Franciszek_Xawery_Zygmunt_August_W%C3%BC%C5%84cielski_W%C4%99gierski_Habsburg_%C5%81owacki dbo:child ?alexChild1 .
  ?alexChild1 dbo:child ?alexChild2 .
  ?alexChild2 dbo:child ?alexChild3 .

  # Find the predecessor of margareteChild in relation to philippChild and alexChild3
  FILTER(?margareteChild = ?philippChild || ?margareteChild = ?alexChild3)
  BIND(?margareteChild AS ?predecessor)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  # Ensure the person is Spanish
  ?person dbo:nationality dbr:Spain .

  # Find the office held by Alberto Núñez Feijóo
  ?person dbo:positionHeld ?office .

  # Get his residence and ensure it's a country
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             foaf:name ?country .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workCountry ?birthPlace WHERE {
  # Lao She's work country
  dbr:Lao_She dbo:work ?work .
  ?work dbo:country ?workCountry .

  # Winston Chang's birthplace
  dbr:Winston_Chang dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?category WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:wikiPageCategories ?cat .
  ?cat rdfs:label ?categoryLabel .
  
  FILTER(CONTAINS(LCASE(?categoryLabel), ""societal event""))
  FILTER(CONTAINS(LCASE(?categoryLabel), ""military conflict""))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusBirthPlace ?renetaBirthPlace WHERE {
  # Find a notable alumnus of Plovdiv University ""Paisii Hilendarski""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski ;
           dbo:birthPlace ?alumnusBirthPlace .

  # Find Reneta Kamberova and her birthplace
  dbr:Reneta_Kamberova dbo:birthPlace ?renetaBirthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Siege_of_Padua dbo:commander ?commander .
  
  OPTIONAL { ?commander a dbo:RoyalFamilyMember . }
  FILTER EXISTS { ?commander a dbo:RoyalFamilyMember }
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?native WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Luckman""@en .
  
  OPTIONAL { ?person dbo:residence ?residence . }
  
  OPTIONAL { ?residence dbo:nativePlace ?native . }
}
```",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the war that is a societal event, an event, and a television show
  ?war a dbo:SocietalEvent ;
       a dbo:Event ;
       a dbo:TelevisionShow .

  # Identify the commander of the 2nd Dragoon Regiment (France) in this war
  dbr:2nd_Dragoon_Regiment_(France) dbo:commanderInWar ?commander .
  
  # Find the father of Cecilia Renata of Austria and his child
  dbr:Cecilia_Renata_of_Austria dbo:father ?fatherOfCeciliaRenata .
  ?child dbo:parent ?fatherOfCeciliaRenata .

  # Identify Eleonore of Austria's father
  dbr:Eleonore_of_Austria_Queen_of_Poland dbo:father ?fatherOfEleonore .

  # Ensure the commander is the child of Cecilia Renata's father and the father of Eleonore
  FILTER(?child = ?commander)
  FILTER(?fatherOfCeciliaRenata = ?fatherOfEleonore)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:actor ?richardGrant .
  
  ?richardGrant foaf:name ""Richard E. Grant""@en .

  OPTIONAL { 
    ?movie dbo:genre ?genre .
    FILTER(?genre = dbo:TelevisionSeries)
  }

  OPTIONAL {
    ?movie dbo:basedOn ?comicsCharacter .
    ?comicsCharacter foaf:name ""The Shadow""@en .
  }
  
  ?movie dbo:actor ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  dbr:Dispatches_from_Elsewhere dbo:castMember ?actor .
  
  ?actor a dbo:Actor ;
         foaf:name ?name .

  OPTIONAL { ?actor dbo:profession dbr:Actor . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:participatedIn ?war .
  FILTER (?war a dbo:SocietalEvent && ?war a dbo:MilitaryConflict)
}
```",3,5,4,3,1,3,2,20,0,0,12,0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Singer""@en .
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchild ?spouseOfSawShweKhet ?predecessor WHERE {
  # Find Min Hla Htut of Pyakaung and their child
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut of Pyakaung""@en .
  
  ?childOfMinHlaHtut dbo:parent ?minHlaHtut .

  # Find the grandchild (child of Min Hla Htut's child)
  ?grandchild dbo:parent ?childOfMinHlaHtut .

  # Find Saw Shwe Khet and their spouse
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  OPTIONAL { ?sawShweKhet dbo:spouse ?spouseOfSawShweKhet . }

  # Match the grandchild with Saw Shwe Khet's spouse
  FILTER(?grandchild = ?spouseOfSawShweKhet)

  # Find predecessor of the child of Saw Shwe Khet
  OPTIONAL { ?sawChild dbo:parent ?sawShweKhet . }
  
  OPTIONAL { ?predecessor dbo:successor ?sawChild . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find Elorm Kabu Amenyah's DBpedia resource
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah""@en .

  # Find Darryl Paa Kwesi Bannerman-Martin's DBpedia resource
  ?darryl a dbo:Person ;
          foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .

  # Identify the writer of ""The Live Anthology"" who is also a musical artist
  ?writer a dbo:Writer, dbo:MusicalArtist ;
          dbo:wroteWork dbr:The_Live_Anthology .

  # Ensure this person shares a profession with Elorm Kabu Amenyah
  ?elorm dbo:profession ?sharedProfession .
  ?writer dbo:profession ?sharedProfession .

  # Find associated musical artists for these individuals
  OPTIONAL { ?elorm dbo:associatedMusicalArtist ?associatedArtist . }
  OPTIONAL { ?darryl dbo:associatedMusicalArtist ?associatedArtist . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person ;
          dbo:residence dbr:Chappaqua,_New_York .
  
  OPTIONAL { ?person dbo:politicalPartyMember ?party . }
  OPTIONAL { ?person dbo:officeHolder ?office . }

  FILTER EXISTS { ?person dbo:politicalPartyMember ?party } .
  FILTER EXISTS { ?person dbo:officeHolder ?office } .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find The Shadow as the alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Identify Yeshaq I's parent who is royalty and find their child
  dbr:Yeshaq_I dbo:parent ?royalParent .
  ?royalParent a dbo:Monarch ;
               dbo:child ?child .

  # Return the alter ego reference
  FILTER(?alterEgo = dbr:The_Shadow)
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickCurranArtist ?fabulousThunderbirdsRealName ?claptonBand WHERE {
  # Nick Curran's associated musical artist
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:musicalArtist ?nickCurranArtist . }

  # The Fabulous Thunderbirds' real name
  ?fabulousThunderbirds a dbo:Band ;
                        foaf:name ""The Fabulous Thunderbirds""@en .
  OPTIONAL { ?fabulousThunderbirds dbo:member ?jimmieVaughan .
             ?jimmieVaughan foaf:name ?fabulousThunderbirdsRealName . }

  # Eric Clapton's band
  ?clapton a dbo:Person ;
           foaf:name ""Eric Clapton""@en .
  OPTIONAL { ?clapton dbo:musicalArtist ?bandMember .
             ?bandMember dbo:memberOfBand ?claptonBand }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force1 ?war1 ?force2 ?war2 WHERE {
  # Find awards given by Quincy Adams Gillmore and their awardees
  ?award1 a dbo:Award ;
          dbo:awardedBy dbr:Quincy_Adams_Gillmore .
  ?recipient1 dbo:recipientOfAward ?award1 .

  OPTIONAL { ?recipient1 dbo:militaryUnit ?force1 . }
  OPTIONAL { ?recipient1 dbo:participatedInWar ?war1 . }

  # Find awards given by United States Congress and their awardees
  ?award2 a dbo:Award ;
          dbo:awardedBy dbr:United_States_Congress .
  ?recipient2 dbo:recipientOfAward ?award2 .

  OPTIONAL { ?recipient2 dbo:militaryUnit ?force2 . }
  OPTIONAL { ?recipient2 dbo:participatedInWar ?war2 . }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  OPTIONAL { ?person dbo:residenceCountry ?country . }
  
  OPTIONAL { 
    ?office dbo:heldBy ?person ;
            dbo:electionYear ""2009""^^xsd:gYear ;
            dbo:electionRegion ""Galicia""@en .
  }

  OPTIONAL {
    ?santiago a dbo:Place ;
              foaf:name ""Santiago de Compostela""@en .
    
    ?person dbo:officeLocation ?santiago .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  OPTIONAL { 
    ?person dbo:commanderOfMilitaryUnit ?unit .
    ?unit dbo:militaryConflict ?conflict .
    FILTER(?conflict = dbr:War_related_to_30th_Regiment_of_Foot)
  }
  
  OPTIONAL {
    ?battle dbo:militaryForce ?militaryForce .
    FILTER(?battle = dbr:Battle_of_Fort_Royal)
  }

  OPTIONAL {
    ?awardEvent dbo:militaryForce ?militaryForce .
    FILTER(?awardEvent = ?person) 
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorOfPromisesToKeep ?authorOfWork WHERE {
  # Part 1: Author of ""Promises to Keep""
  OPTIONAL {
    dbr:Promises_to_Keep_(book) dbo:author ?authorOfPromisesToKeep .
  }

  # Part 2: Author of a written work by a commander in the Korean conflict
  OPTIONAL {
    ?commander a dbo:OfficeHolder ;
               dbo:officeName ?koreanConflictRole .
    
    FILTER(CONTAINS(LCASE(STR(?koreanConflictRole)), ""korean conflict""))
    
    ?work dbo:author ?authorOfWork ;
          dbo:creator ?commander .

    # Ensure the work is a written work
    FILTER EXISTS { ?work a dbo:CreativeWork }
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  dbr:Edmund_Hakewill-Smith dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force WHERE {
  ?awardee dbo:title ""Knight Commander of the Order of the Bath"" .
  ?awardee dbo:hasForce ?force .
  
  FILTER(?force a dbo:Event)
  FILTER(?force a dbo:SocietalEvent)
}
```",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?humanRemainsMember ?associatedArtistOfHumanRemains ?khlystMember ?associatedArtistOfKhlyst WHERE {
  # Find band members of Human Remains
  ?humanRemains a dbo:Band ;
                foaf:name ""Human Remains""@en .
  
  ?humanRemains dbo:bandMember ?humanRemainsMember .

  OPTIONAL {
    ?humanRemainsMember dbo:associatedMusicalArtist ?associatedArtistOfHumanRemains .
    FILTER EXISTS { ?associatedArtistOfHumanRemains a dbo:MusicalArtist }
  }

  # Find band members of Khlyst
  ?khlyst a dbo:Band ;
          foaf:name ""Khlyst""@en .

  ?khlyst dbo:bandMember ?khlystMember .

  OPTIONAL {
    ?khlystMember dbo:associatedMusicalArtist ?associatedArtistOfKhlyst .
    FILTER EXISTS { ?associatedArtistOfKhlyst a dbo:MusicalArtist }
  }
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  dbr:Federal_University_of_Para%C3%ADba dbo:established ?foundingDate .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find the war associated with ""The Triple X's""
  ?tripleX a dbo:Person ;
           foaf:name ""The Triple X's""@en .
  
  ?war dbo:participatedIn ?tripleX .

  # Find William Bayne and his role in the same war
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne""@en .
  
  ?bayneRole dbo:commanderOf ?militaryForce ;
             dbo:involvesMilitaryConflict ?war .

  FILTER(?war = ?war)
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war ?entityInBirthPlace WHERE {
  # Find wars involving Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .

  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė foaf:birthPlace ?birthPlace .

  # Find entities related to the birthplace
  ?entityInBirthPlace dbo:location ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?relatedProfession WHERE {
  dbo:Actor rdfs:subClassOf* ?relatedProfession .
  FILTER(?relatedProfession != dbo:Actor)
}
```",1,1,2,1,1,3,3,71,0,6,21580,0.0,0.0,0
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?award a dbo:Award ;
         dbo:name ""Commander of the Royal Victorian Order""@en .
  
  ?recipient dbo:recipientOfAward ?award .
  
  ?recipient dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Prince_Omar_bin_Faisal dbo:child* ?person .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,1,1,0.5,0.5,0.5
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Martin_of_Aragon dbo:child* ?person .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,4,0,0.3333333333333333,1.0,0.5
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfRoyalFather WHERE {
  # Ferdinand III and Maria Anna of Bavaria
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:spouse dbr:Maria_Anna_of_Bavaria_(1574-1616) .
  
  # Child of Ferdinand III and Maria Anna
  ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor ;
         dbo:parent dbr:Maria_Anna_of_Bavaria_(1574-1616) .

  # Father of the child (Ferdinand IV)
  ?fatherOfChild dbo:child ?child .
  
  # Check if father is royalty
  OPTIONAL { ?fatherOfChild dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""emperor"")) }
  
  # Child of the royal father (Ferdinand IV)
  ?childOfRoyalFather dbo:parent ?fatherOfChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Bristol .
}
```",1,1,2,1,1,2,2,9,971,0,0,1.0,1.0,1.0
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Anxo_Quintana dbo:member dbr:Spanish_Socialist_Workers'_Party .
  
  OPTIONAL { 
    ?quintanaOffice dbo:officeHolder dbr:Anxo_Quintana ;
                    dbo:organization dbr:Spanish_Socialist_Workers'_Party .
    
    ?event a dbo:Event ;
           dbo:place dbr:Spain ;
           dbo:participant ?quintanaOffice .
    
    FILTER EXISTS { ?quintanaOffice dbo:leader ?office }
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
                                      dbo:country dbr:Spain .
  
  ?person dbo:memberOfParliament ?administration ;
          dbo:memberOfParty dbr:Spanish_Socialist_Workers'_Party .

  FILTER EXISTS { 
    ?administration dbo:country dbr:Spain
  }
}
```",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Rodney_Lees dbo:award ?award .
  
  ?award dbo:recipient ?awardee .
  
  ?awardee dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?award a dbo:Award ;
         dbo:name ""Anita Borg Institute Women of Vision Awards""@en .
  
  ?award dbo:recipient ?person .

  OPTIONAL { 
    ?person dbo:nationality dbr:Japan .
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?child .
  ?child dbo:parent ?predecessor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Margarete_Sophie_of_Austria dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:El_Deafo dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Assuming ""The Triple X's"" is a known entity in DBpedia
  dbr:The_Triple_X_s dbo:participatedIn ?war .
  
  # Find the commander of that war
  ?war dbo:commander ?commander .

  # Identify awardees of Knight Commander of the Order of the Bath
  ?awardee dbo:honourReceived dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  # Check if there is a societal event related to the military force involved in the war
  OPTIONAL { ?militaryForce dbo:participatedIn ?societalEvent . }
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Sangeet_Natak_Akademi_Fellowship dbo:awardee ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) 
    dbo:director ?director ;
    dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather WHERE {
  ?naod a dbo:Person ;
        foaf:name ""Na'od""@en .
  
  ?naod dbo:parent ?father .
  ?father dbo:parent ?grandfather .

  FILTER EXISTS { ?grandfather dbo:royalty . }
  FILTER EXISTS { ?grandfather dbo:officeHolder . }

  OPTIONAL { ?grandfather foaf:name ?name . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:headOfState ?administration .
  OPTIONAL { ?administration dbo:country ?nativePlace . }
  OPTIONAL { ?administration dbo:city ?nativePlace . }
}
```",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Sappy""@en .
  
  ?album a dbo:Album ;
         dbo:musicalWork ?musicalWork ;
         dbo:work ?work ;
         dbo:artist ?artist .

}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  OPTIONAL { 
    dbr:Phantomsmasher dbo:associatedBand ?associatedArtist .
  }
  UNION
  OPTIONAL { 
    dbr:Phantomsmasher dbo:memberOfBand ?associatedArtist .
  }
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  OPTIONAL { ?mariclare dbo:spouse ?spouse . }
  
  OPTIONAL { ?child dbo:parent ?spouse . }
  
  OPTIONAL { ?parentOfChild dbo:parent ?child . }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Part 1: Spouse of Roger Pryor (actor)
  { 
    ?person a dbo:Person ;
            foaf:name ""Roger Pryor""@en .
    OPTIONAL { ?person dbo:spouse ?spouse . }
  }

  UNION

  # Part 2: Person born as Ann Sothern
  {
    ?person a dbo:Person ;
            foaf:birthday ?birthDate ;
            foaf:name ?name .
    FILTER(?name = ""Ann Sothern""@en)
    OPTIONAL { ?person dbo:spouse ?spouse . }
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?otherAward WHERE {
  ?nobelPrize a dbo:Award ;
              dbo:name ""Nobel Prize in Physics""@en .
  
  ?nobelPrize dbo:recipient ?awardee .

  OPTIONAL { 
    ?awardee dbo:award ?otherAward .
  }
}
```",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Find the birth name of Bob Thompson (musician)
  ?bob a dbo:Person ;
       foaf:name ""Bob Thompson""@en .
  
  OPTIONAL { ?bob foaf:name ?birthName . }
  
  # Identify the producer of Coke Studio Philippines
  ?producer a dbo:Person ;
            dbo:profession ?professional ;
            dbo:workLocation ?csph .

  FILTER(?csph = <http://dbpedia.org/resource/Coke_Studio_Philippines>)

  # Find the band associated with the person who has the same birth name as Bob Thompson
  ?person a dbo:MusicalArtist ;
          foaf:name ?birthName .
  
  ?band dbo:member ?person .

}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Glenn Youngkin""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorParadise ?actorAlways WHERE {
  dbr:Paradise_(2013_film) dbo:starring ?actorParadise .
  dbr:Always_(film) dbo:starring ?actorAlways .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfParent WHERE {
  # Find Yeshaq I's parent
  dbr:Yeshaq_I_of_Ethiopia dbo:parent ?yeshaqParent .
  
  # Find the child of Yeshaq I's parent (which is Yeshaq I himself)
  ?yeshaqParent dbo:child ?childOfParent .

  # Identify Na'od and his father
  dbr:Na'od_of_Ethiopia dbo:parent ?naodFather .
  
  # Ensure the father of Na'od is royalty and an office holder
  FILTER(?naodFather a dbo:Monarch || ?naodFather a dbo:OfficeHolder)
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAmy ?parentOfChild ?movie WHERE {
  # Find the parent of Amy Arbus
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  OPTIONAL { ?amy dbo:parent ?parentOfAmy . }

  # Find Allan Arbus's child and then that child's parent
  ?allan a dbo:Person ;
         foaf:name ""Allan Arbus""@en .
  OPTIONAL { ?allan dbo:child ?childOfAllan . }
  OPTIONAL { ?childOfAllan dbo:parent ?parentOfChild . }

  # Find movies with Herschel Bernardi as an actor
  ?actor a dbo:Person ;
         foaf:name ""Herschel Bernardi""@en .
  OPTIONAL {
    ?movie a dbo:Film ;
           dbo:starring ?actor .
  }
}
```",5,6,6,2,3,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Find Edward Stanley and his child who is a politician and office holder
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?edwardChild .
  
  FILTER(?edwardChild dbo:occupation/(dbo:Politician|dbo:OfficeHolder)) .

  # The parent of this child is Edward Stanley himself
  ?parentOfChild a dbo:Person ;
                 foaf:name ""Edward Stanley, 17th Earl of Derby""@en ;
                 dbo:child ?edwardChild .
  
  # Find Frederick Stanley and his child who is a politician
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .

  FILTER(?frederickChild dbo:occupation/dbo:Politician) .

  # The parent of this second child is Frederick Stanley himself
  OPTIONAL { ?parentOfChild foaf:name ""Edward Stanley, 17th Earl of Derby""@en }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?event WHERE {
  dbr:Anxo_Quintana dbo:office ?office .
  ?office dbo:event ?event .
}
```",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander in the Thirty Years' War
  ?warEvent a dbo:MilitaryConflict ;
            dbo:name ""Thirty Years' War""@en .
  
  ?commander dbo:commanderOf ?warEvent ;
             a dbo:Person .

  # Eleonore of Austria, Queen of Poland's father
  dbr:Eleonore_of_Austria,_Queen_of_Poland dbo:parent ?eleonoreFather .

  # Maria Anna of Bavaria's child and their parent who is royalty
  dbr:Maria_Anna_of_Bavary_(1574-1616) dbo:child ?mariaChild .
  ?mariaChildParent dbo:child ?mariaChild ;
                    a dbo:Royalty .

  FILTER(?commander = ?eleonoreFather)
  FILTER(?commander = ?mariaChildParent)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?birthName WHERE {
  dbr:Tisha_Sterling dbo:child* ?parent .
  OPTIONAL { ?parent dbo:birthName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,2,3,0.0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .
  
  ?miguelMaura dbo:office ?office .

  OPTIONAL { 
    ?office dbo:location dbr:Madrid .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kate Dimbleby""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Step 1: Identify Tisha Sterling's parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  OPTIONAL { ?tisha dbo:parent ?parent . }
  
  # Step 2: Get the birth name of Tisha Sterling's parent
  OPTIONAL { ?parent foaf:name ?birthName . }

  # Step 3: Identify the actor from ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:actor ?actor .

  # Step 4: Find the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Final step: Match the birth name with the spouse's name
  FILTER(?birthName = ?spouse)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandfather WHERE {
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .
  
  ?childOfBaeda dbo:parent ?baedaMaryamI .

  ?royalParent a dbo:Person ;
               dbo:officeHolder ?office ;
               foaf:name ?name .
  
  FILTER EXISTS { ?royalParent dbo:parent ?childOfBaeda }
  FILTER EXISTS { ?office dbo:isClassOf ?class ; 
                  rdf:type dbo:GovernmentPosition } 

  ?fatherOfRoyalParent a dbo:Person ;
                       dbo:parent ?royalParent .

  ?yeshaqI a dbo:Person ;
           foaf:name ""Yeshaq I""@en .
  
  ?parentOfYeshaq dbo:child ?yeshaqI .
  FILTER EXISTS { ?parentOfYeshaq dbo:royalty true }

  ?childOfParentOfYeshaq dbo:parent ?parentOfYeshaq .

  OPTIONAL { ?grandfather a dbo:Person ;
                        dbo:parent ?fatherOfRoyalParent }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?result WHERE {
  # Minye Kyawswa's child
  dbr:Minye_Kyawswa dbo:child ?minyeChild .

  # Parent of Minye Kyawswa's child (grandparent)
  ?minyeChild dbo:parent ?minyeParent .

  # Saw Shwe Khet's child
  dbr:Saw_Shwe_Khet dbo:child ?sawChild .

  # Predecessor of Saw Shwe Khet's child
  ?predecessor dbo:succeededBy ?sawChild .

  # Spouse of Saw Shwe Khet
  dbr:Saw_Shwe_Khet dbo:spouse ?spouseOfSawShweKhet .

  # Ensure the predecessor is also the spouse
  FILTER(?predecessor = ?spouseOfSawShweKhet)

  # Result is the child of the parent (grandparent) of Minye Kyawswa's child
  ?minyeParent dbo:child ?result .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Stone_Sour dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?commander WHERE {
  # Find George Ducas and his successor in the Russo-Polish War
  dbr:George_Ducas a dbo:Person ;
                   dbo:officeHolder ?office .
  
  OPTIONAL { 
    ?office dbo:successor ?successor .
    FILTER EXISTS { ?successor a dbo:Politician }
  }

  # Find commander related to Battle of Vienna, described as a television show and societal event
  ?warEvent a dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce ?militaryForce .

  OPTIONAL {
    ?commander a dbo:Person ;
               dbo:commanderOf ?militaryForce .
    
    # Assuming there's some way to link these roles to TV shows and societal events
    ?commander dbo:relatedTVShow ?tvShow .
    ?commander dbo:societalEvent ?event .
  }

  FILTER(?warEvent = dbr:Battle_of_Vienna)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Find the child of Saw Shwe Khet
  ?childShweKhet dbo:parent ?sawShweKhet .
  dbr:Saw_Shwe_Khet dbo:child ?childShweKhet .

  # Find the spouse of the father (parent) of that child
  ?spouseOfFather dbo:spouse ?fatherOfChildShweKhet .
  ?fatherOfChildShweKhet dbo:child ?childShweKhet .

  # Ensure this person is royalty
  FILTER(?spouseOfFather a dbo:Monarch)

  # Find the child of Saw Min Hla that is royalty
  ?royalChildMinHla dbo:parent dbr:Saw_Min_Hla .
  FILTER(?royalChildMinHla a dbo:Monarch)

  # Find the predecessor of these two royals
  OPTIONAL { ?predecessor dbo:successor ?spouseOfFather . }
  OPTIONAL { ?predecessor dbo:successor ?royalChildMinHla . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en .
  OPTIONAL { ?person dbo:birthName ""Harriette Arlene Lake""@en . }
  OPTIONAL { ?person dbo:partyAffiliation dbr:Republican_Party_(United_States) . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office ?country WHERE {
  ?anxo a dbo:Person ;
        foaf:name ""Anxo Quintana""@en .
  
  ?anxo dbo:positionHeld ?office .
  ?office dbp:event ?event .

  ?alvaro a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  ?alvaro foaf:nationality ?country .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bruno Retailleau""@en .
  OPTIONAL { ?person dbo:party ?party . }
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  dbr:Princess_Aisha_bint_Faisal dbo:parent ?parent .
  FILTER(?parent a dbo:Monarch)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?producer WHERE {
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commanderInWar ?successorCommander WHERE {
  ?jeanBaptist a dbo:Person ;
               foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  OPTIONAL { 
    ?war a dbo:MilitaryConflict ;
         dbo:depicts ?tvShow ;
         dbo:societalEvent ?societalEvent .
    
    ?jeanBaptist dbo:commanderInWar ?war .
    ?war dbo:commander ?commanderInWar .
  }
  
  OPTIONAL {
    ?michaPac a dbo:Person ;
              foaf:name ""Michał Kazimierz Pac""@en .
    
    ?force a dbo:MilitaryConflict ;
           dbo:event ?event .
    
    ?michaPac dbo:commanderInForce ?force .
    ?successorCommander dbo:successorOf ?michaPac ;
                        a dbo:Politician ;
                        dbo:officeHolder ?office .
  }
  
  FILTER(?commanderInWar != ?successorCommander)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  dbr:The_Golden_Master dbo:castMember ?actor .
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # Manager of SBV Vitesse in the 2020-21 season
  ?vitesseSeason dbo:club dbr:SBV_Vitesse ;
                dbo:season ""2020–21"" .
  
  ?vitesseSeason dbo:manager ?manager .

  # Manager's nationality is West Germany
  ?manager foaf:nationality dbr:West_Germany .

  # Manager also managed in the successor season of VfL Bochum (2007-08)
  ?bochumSuccessorSeason dbo:club dbr:VfL_Bochum ;
                         dbo:season ""2007–08"" .
  
  ?bochumSuccessorSeason dbo:manager ?manager .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentReference ?child WHERE {
  dbr:Yeshaq_I_of_Ethiopia dbo:parent ?parent .
  
  ?parent a dbo:Monarch ;
          dbo:country ?country .

  BIND(?parent AS ?parentReference)
  
  OPTIONAL { ?parent dbo:child ?child }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?joeyBBirthName ?stonebwoyBirthName WHERE {
  # For Joey B (Joseph Benjamin)
  dbr:Joseph_Benjamin dbo:birthName ?joeyBBirthName .
  
  # For Stonebwoy (Elorm Kabu Amenyah)
  dbr:Stonebwoy dbo:birthName ?stonebwoyBirthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo a dbo:Person ;
            dbo:profession ?profession .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?alterEgo WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?series a dbo:TVSeries ;
          foaf:name ""Dispatches from Elsewhere""@en .
  
  ?castMember dbo:cast dbp:Dispatches_from_Elsewhere .
  ?castMember foaf:name ?actor .

  # Find the alter ego of The Shadow in comics
  dbr:The_Shadow (dbo:alterEgo) ?alterEgo ;
                  dbo:genre dbr:Comics_genre .
  
  OPTIONAL { ?alterEgo dbo:profession ?professional }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label WHERE {
  dbr:Mitaka_Tokyo rdfs:label ?label .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Find the producer of the film ""Storm in a Teacup""
  dbr:Storm_in_a_Teacup dbo:producer ?producer .

  # Get the birthplace of each producer
  ?producer dbo:birthPlace ?birthPlace .

  # Find individuals who are native to that birthplace
  ?native dbo:nativePlace ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname WHERE {
  ?denis a dbo:Person ;
         foaf:name ""Denis Kolodin""@en .
  
  OPTIONAL { ?denis dbo:nickname ?nickname . }
  
  ?club a dbo:SoccerClub ;
        dbo:member ?denis .
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfShweKhet ?parentOfMinHlaHtut ?predecessorChild WHERE {
  # Find the spouse of Saw Shwe Khet
  ?shweKhet a dbo:Person ;
            foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?shweKhet dbo:spouse ?spouseOfShweKhet . }

  # Find the parent of Min Hla Htut of Pyakaung
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut of Pyakaung""@en .
  OPTIONAL { ?minHlaHtut dbo:parent ?parentOfMinHlaHtut . }

  # Find the spouse of Saw Min Phyu and their royalty child
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  OPTIONAL { ?sawMinPhyu dbo:spouse ?spouseOfSawMinPhyu . }
  
  # Find the royalty child of Saw Min Phyu's spouse
  ?royaltyChild a dbo:Royalty ;
                dbo:child ?spouseOfSawMinPhyu .

  # Find predecessor (previous) child of the royalty child
  ?predecessorChild dbo:parent ?spouseOfSawMinPhyu .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:West_Germany .
  
  ?club a dbo:Soccer_Club ;
        foaf:name ""VfL Bochum""@en .

  ?club dbo:manager ?person .

  BIND(?person AS ?manager)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  dbr:Nat_Levine a dbo:Person ;
                 dbo:producer ?film .
  
  ?film dbo:actor ?actor .
  
  ?actor dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,62,0,0.0,0
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Identify Saw Shwe Khet and their child who is royalty
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  # Find the father of this royal child, who is also royalty
  ?father dbo:child ?child ;
          a dbo:Monarch .

  # Identify the predecessor (parent) of the royal child
  ?predecessor dbo:child ?child .

  # Get the spouse of this father
  OPTIONAL { ?father dbo:spouse ?spouse . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?partyLabel WHERE {
  VALUES ?personName { ""Guillaume Peltier""@en ""Bruno Retailleau""@en }
  
  ?person a dbo:Person ;
          foaf:name ?personName .
  
  OPTIONAL { ?person dbo:party ?party . }
  
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = ""en"")
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete input.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Scientist ;
          dbo:nationality dbr:Australia ;
          dbo:award dbr:Australian_Laureate_Fellowship .
  
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
  
  ?entityInAndhraPradesh dbo:location dbr:Andhra_Pradesh .
  ?person dbo:affiliation ?entityInAndhraPradesh .
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?militaryForceOfWilliamBayne ?commanderOfTripleX WHERE {
  ?williamBayne a dbo:Person ;
                foaf:name ""William Bayne (Royal Navy officer)""@en .
  
  OPTIONAL { ?williamBayne dbo:militaryConflict ?conflict1 .
             ?conflict1 dbo:militaryForce ?militaryForceOfWilliamBayne . }
  
  ?tripleX a dbo:Group ;
           foaf:name ""The Triple X's""@en .

  OPTIONAL { ?tripleX dbo:militaryConflict ?conflict2 .
             ?conflict2 dbo:commander ?commanderOfTripleX . }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Identify Nicholas II of Russia
  dbr:Nicholas_II_of_Russia a dbo:Person .

  # Find descendants at Switzerland
  OPTIONAL { 
    ?descendant dbo:decedent dbr:Nicholas_II_of_Russia ;
                dbo:placeOfBirth ?nativePlace .
    FILTER(?nativePlace = dbr:Switzerland)
  }

  # Ensure native place is a country
  ?person dbo:nativePlace ?nativePlace .
  ?nativePlace a dbo:Country .

  # Link the person to be both decedent at Switzerland and native of a country
  FILTER(?descendant = ?person)
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Yeshaq_I dbo:parent ?father .
  
  ?father a dbo:Monarch .

  dbr:Baeda_Maryam_I dbo:child dbr:Yeshaq_I .

  ?father dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawit WHERE {
  # Dawit I's child who is also a father, royalty, and office holder
  dbr:Dawit_I dbo:child ?father .
  
  # Ensure the person is both royalty and an office holder
  ?father a dbo:Person ;
          dbo:royalty true ;
          dbo:officeHolder true .

  # Find Na'od as the child of this father
  ?father dbo:child dbr:Na'od .

  # Return the child of Dawit I who meets all criteria
  BIND(?father AS ?childOfDawit)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander WHERE {
  # Find Yurii Khmelnytsky's successor
  dbr:Yurii_Khmelnytsky dbo:succeededBy ?successor .

  # Find the commander of the military force in the Battle of Vienna
  dbr:Battle_of_Vienna dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .

  # Ensure the commander is also a television show and societal event
  ?commander rdf:type dbo:TelevisionShow ;
             dbo:societalEvent true .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  # Find political parties associated with Miguel Maura
  ?miguelMaura a dbo:Politician ;
               foaf:name ""Miguel Maura""@en .
  
  OPTIONAL { ?miguelMaura dbo:memberOfParty ?party . }
  
  # Find leaders of these parties
  ?leader a dbo:Politician ;
          dbo:officeHolder ?office ;
          dbo:memberOfParty ?party .

  # Ensure the office is in Madrid
  ?office dbo:location dbr:Madrid .
  
  # Check connection with Mariano Rajoy's office
  ?marianoRajoy a dbo:Politician ;
                foaf:name ""Mariano Rajoy""@en .
  
  OPTIONAL { ?marianoRajoy dbo:officeHolder ?relatedOffice . }
  
  FILTER(?office = ?relatedOffice)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country ?commander WHERE {
  # Find Dawid Olejniczak's residence that is a country
  ?dawid a dbo:Person ;
         foaf:name ""Dawid Olejniczak""@en .
  
  OPTIONAL { 
    ?dawid dbo:residence ?residence .
    ?residence rdf:type dbo:Country ;
               foaf:name ?country .
  }
  
  # Find commanders in the French Revolutionary Wars
  ?war a dbo:MilitaryConflict ;
       foaf:name ""French Revolutionary Wars""@en .

  OPTIONAL {
    ?commander a dbo:Person ;
               dbo:commanderOf ?war .
    ?commander foaf:name ?commanderName .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?sawShweKhet dbo:spouse ?entity . }

  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  OPTIONAL { ?myatHponePyo dbo:predecessor ?entity . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  ?child dbo:parent ?parent .

  FILTER EXISTS { 
    dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:nativePlace dbr:Middlesbrough
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Yeshaq_I dbo:child dbr:?yeshaqI ;
               dbo:parent ?parent .
  
  FILTER(?parent a dbo:Monarch)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find Harriette Arlene Lake
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake""@en .
  
  # Find her spouse
  OPTIONAL { ?harriette dbo:spouse ?spouse . }
  
  # Identify films associated with Nat Levine
  ?natlevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .
  ?film dbo:producer ?natlevine ;
        a dbo:Film .

  # Find actors in those films
  ?actor dbo:actorInFilm ?film ;
         a dbo:Actor .

  # Check if the spouse is an actor in Nat Levine's films
  FILTER(?spouse = ?actor)

  # Determine ruling party in Central, Louisiana (assuming Democratic Party for this example)
  ?party a dbo:PoliticalParty ;
         foaf:name ""Democratic Party""@en .
  
  # Check if the spouse is a member of the ruling party
  OPTIONAL { ?spouse dbo:memberOf ?party }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            foaf:name ""Japan Standard Time""@en .
  ?timeZone dbo:region ?region .
}

SELECT ?name WHERE {
  dbr:Mitaka dbo:location dbr:Tokyo .
  ?mitaka a dbo:Place ;
          foaf:name ?name .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?maxBornAward ?rainerWeissHost WHERE {
  # Max Born's awards
  ?maxBorn a dbo:Person ;
           foaf:name ""Max Born""@en .
  ?maxBorn dbo:award ?maxBornAward .

  # Rainer Weiss's awards and their host institutions
  ?rainerWeiss a dbo:Person ;
               foaf:name ""Rainer Weiss""@en .
  ?rainerWeissAward dbo:recipient ?rainerWeiss ;
                    a dbo:Award .
  OPTIONAL { ?rainerWeissAward dbo:hostInstitution ?host . }
  
  # Ensure the host is an educational institution
  FILTER EXISTS {
    ?host rdfs:subClassOf* dbo:EducationalOrganization .
  }

  BIND(?host AS ?rainerWeissHost)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?letschManager ?bochumManager ?heussCountry WHERE {
  # Thomas Letsch's manager role
  OPTIONAL {
    ?letsch a dbo:Person ;
            foaf:name ""Thomas Letsch""@en .
    ?letsch dbo:manager ?team .
    ?team a dbo:SoccerClub ;
          dbo:season ?season .
    ?season a dbo:SportsSeason ;
            dbo:sportTeam ?sportsTeam .
    ?sportsTeam a dbo:SportsTeam ;
                dbo:season ?sportsSeason .
    OPTIONAL { ?team dbo:manager ?letschManager . }
  }

  # VfL Bochum's manager
  OPTIONAL {
    dbr:VfL_Bochum dbo:manager ?bochumManager .
  }

  # Theodor Heuss's native country
  OPTIONAL {
    ?heuss a dbo:Person ;
           foaf:name ""Theodor Heuss""@en .
    ?heuss dbo:nationality ?heussCountry .
  }
}
```",5,9,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album ;
         foaf:name ""Lasso the Moon""@en .
  
  OPTIONAL { ?album dbo:work ?film . }
  FILTER EXISTS { ?film a dbo:Film }

  OPTIONAL { ?album dbo:work ?work . }
  FILTER EXISTS { ?work a dbo:Work }
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBirthplace WHERE {
  # Henry Clay Lewis' birthplace
  ?henry a dbo:Person ;
         foaf:name ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Gillmore Medal awardee's force and war
  ?gillmoreAwardee a dbo:Person ;
                   dbo:award dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:militaryUnit ?force1 .
  ?gillmoreAwardee dbo:participatedIn ?war .

  # Medal of Honor awardee's force and war
  ?medalOfHonorAwardee a dbo:Person ;
                       dbo:award dbr:Medal_of_Honor .
  ?medalOfHonorAwardee dbo:militaryUnit ?force2 .
  ?medalOfHonorAwardee dbo:participatedIn ?war .

  # Ensure the forces and wars are the same
  FILTER(?force1 = ?force2)
  FILTER(?war = ?war)

  # Return the entity in the birthplace
  ?entityInBirthplace a dbo:Settlement ;
                      dbo:location ?birthPlace .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?associatedMusicalArtist WHERE {
  ?person a dbo:Person ;
          foaf:name ""$pacely""@en .
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  OPTIONAL { ?person dbo:musicalArtist ?associatedMusicalArtist . }
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Spain ;
          foaf:nationality ""Spanish""@en .
  
  ?person dbo:residence ?countryResidence .
  
  FILTER(STRSTARTS(STR(?countryResidence), ""http://dbpedia.org/resource/""))

  ?countryResidence dbo:tenant ?tenant .
}
```",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?actorAlways ?movieWithIliza WHERE {
  # Find spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  # Find actors in Always (1989 film)
  dbr:Always_(1989_film) dbo:actor ?actorAlways .

  # Find a movie that is both a work and a film with Iliza Shlesinger as an actor
  ?movieWithIliza a dbo:Film ;
                  dbo:work ?work .
  ?work dbo:actor dbr:Iliza_Shlesinger .

  # Combine to find common actors across these conditions
  OPTIONAL { ?actorAlways = ?movieWithIliza }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?album dbo:artist dbr:T.I._(rapper) .
  ?song dbo:album ?album ;
        a dbo:Songs .
  OPTIONAL { ?song dbo:performer ?actor . }
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  {
    dbr:Hashiba_Hidekatsu dbo:participatedIn ?war .
  }
  UNION
  {
    dbr:Toyotomi_Hidenaga dbo:participatedIn ?war .
  }
  
  FILTER EXISTS { 
    ?war dbo:location dbr:Japan .
  }
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?savage a dbo:Person ;
          foaf:name ""21 Savage""@en .
  
  ?savage foaf:birthday ?birthday .
  ?savage dbo:birthPlace ?birthPlace .

  ?award a dbo:Award ;
         dbo:country dbr:New_York_(state) .
  
  ?band a dbo:Band ;
        dbo:recipientOfAward ?award .
  
  FILTER(?person = ?savage)
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativeOf ?nativePlace .
  
  ?florida a dbo:State ;
           foaf:name ""Florida""@en .

  ?person dbo:nativeOf ?nativePlace, ?florida ;
          dbo:birthName ?birthName ;
          a dbo:MusicalArtist .

  FILTER(?coro = dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico)
}
```",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find the song ""Lotus"" by R.E.M.
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Ensure the producer is an organization, band, or group
  ?producer rdf:type ?type .
  FILTER (
    ?type = dbo:Organization ||
    ?type = dbo:Band ||
    ?type = dbo:Group
  )

  # Find associated musical artists of the producer
  OPTIONAL { ?producer dbo:associatedMusicalArtist ?associatedArtist . }
}
```",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?work a dbo:Book ;
        dbo:author ?author .
  
  ?author dbo:wikiPageRedirects ?redirect .
  FILTER(CONTAINS(LCASE(STR(?redirect)), ""hillary clinton""))

  OPTIONAL { ?author dbo:spouse ?spouse . }

  ?author a dbo:Politician ;
          dbo:officeHolder ?office .

}
```",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?reference WHERE {
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .
  
  ?childOfBaedaMaryamI dbo:parent ?baedaMaryamI .

  ?royaltyOfficeHolder a dbo:Person, dbo:Royalty, dbo:GovernmentOfficial ;
                       dbo:parent ?childOfBaedaMaryamI .

  ?fatherOfRoyaltyOfficeHolder dbo:child ?royaltyOfficeHolder .
  
  ?yeshaqI a dbo:Person ;
           foaf:name ""Yeshaq I""@en .

  ?parentOfYeshaqI dbo:child ?yeshaqI ;
                   a dbo:Royalty .

  FILTER(?fatherOfRoyaltyOfficeHolder = ?parentOfYeshaqI)

  ?reference dbo:wikiPageRedirects ?fatherOfRoyaltyOfficeHolder .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedBand WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Paton""@en .
  OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?musicalArtist WHERE {
  ?afeez a dbo:Person ;
         foaf:name ""Afeez Oyetoro""@en .
  
  OPTIONAL { 
    ?movie dbo:starring ?afeez .
    ?movie dbo:actor ?actor .
  }
  
  OPTIONAL {
    ?cynthia a dbo:MusicalArtist ;
             foaf:name ""Cynthia Morgan""@en .
    
    ?associatedArtist dbo:associatedWith ?cynthia .
    ?associatedArtist a dbo:MusicalArtist ;
                      foaf:name ?musicalArtistName .
    BIND(?musicalArtistName AS ?musicalArtist)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  ?maryElphinstone a dbo:Person ;
                   foaf:name ""Mary Elphinstone, Lady Elphinstone""@en ;
                   dbo:nativePlace dbr:Middlesex .
  
  ?maryElphinstone dbo:child ?parent .

  OPTIONAL { 
    ?patrickBowesLyon a dbo:Person ;
                       foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
    
    ?patrickBowesLyon dbo:child ?parent .
  }
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Ann Sothern's birth name
  ?annSothern a dbo:Person ;
              foaf:name ""Ann Sothern""@en .
  
  OPTIONAL { ?annSothern foaf:birthday ?birthDate . }
  OPTIONAL { ?annSothern foaf:nick ?birthName . }

  # Find the landmark at the specified elevation
  ?landmark a dbo:Landmark ;
            dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Assume there's a property linking landmarks to political parties (this is hypothetical)
  OPTIONAL { ?landmark dbo:rulingParty ?party . }

  # Find Roger Pryor and his spouse
  ?rogerPryor a dbo:Person ;
              foaf:name ""Roger Pryor""@en .
  
  OPTIONAL { ?rogerPryor dbo:spouse ?spouse . }
  
  # Combine conditions to find the person who matches all criteria
  FILTER(?annSothern = ?person)
  FILTER(?rogerPryor = ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",3,5,4,3,1,3,3,71,0,0,12,0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?adaJaneLow a dbo:Person ;
              foaf:name ""Ada Jane Low""@en ;
              dbo:birthPlace ?birthPlace ;
              dbo:deathPlace dbr:Melbourne .
  
  OPTIONAL { ?adaJaneLow dbo:politicalRole ?role . }
  
  ?role dbo:predecessor ?predecessor .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Find child of Archduke Charles Louis who is royalty
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?grandchild .
  ?grandchild a dbo:RoyalFamily ;
              dbo:parent ?child .

  # Ensure the child is also a predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:Claude,_Duke_of_W%C3%BCrttemberg .
  
  FILTER(?child = ?predecessor)

  # Find child of Duke Philipp of Württemberg
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?philippChild .

  # Ensure the grandchild matches both conditions
  FILTER(?grandchild = ?philippChild)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?commander ?book WHERE {
  # Hillary Clinton's spouse
  ?hillary a dbo:Person ;
           foaf:name ""Hillary Clinton""@en .
  OPTIONAL { ?hillary dbo:spouse ?spouse . }

  # Commander in the Third Taiwan Strait Crisis
  ?crisis a dbo:MilitaryConflict ;
          foaf:name ""Third Taiwan Strait Crisis""@en .
  OPTIONAL { ?crisis dbo:commander ?commander . }

  # Bill Clinton's authored book
  ?bill a dbo:Person ;
        foaf:name ""Bill Clinton""@en .
  OPTIONAL {
    ?book a dbo:Book, dbo:WrittenWork ;
          dbo:author ?bill .
    ?book foaf:name ?bookName .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?movie WHERE {
  # Identify the fictional character created by Kent Allard
  ?character dbo:creator dbr:Kent_Allard ;
             a dbo:FictionalCharacter .

  # Find the alter ego or professional identity of that character
  OPTIONAL { ?character dbo:alterEgo ?professional . }

  # Identify the movie and work associated with this character
  ?movie dbo:work ?character .

  # Determine the actor of ""High Society Blues""
  dbr:High_Society_Blues dbo:actor ?actor .
  
  # Link the actor to the identified movie/work
  ?actor dbo:filmProduction ?movie .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Philip_Despot_of_Romania dbo:parent ?parent .
  
  FILTER EXISTS { ?parent a dbo:Monarch . } # Ensure the parent is royalty
  
  ?parent dbo:parent ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName ?nickCurranArtist ?kimWilsonBand WHERE {
  # Real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalGroup ;
                               foaf:name ?bandName .

  # Associated musical artist of Nick Curran
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedBand ?nickCurranArtist .
  }

  # Band of Kim Wilson
  OPTIONAL {
    dbr:Kim_Wilson dbo:bandMember dbr:The_Fabulous_Thunderbirds ;
                   ?kimWilsonBand .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley (Royal Navy officer)""@en .
  
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en ;
          dbo:child ?parent .

  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Eton_College ;
           dbo:child ?edward .
  
  ?politicianChild a dbo:Politician ;
                   dbo:parent ?parent .

  FILTER(?victor = ?politicianChild)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childReference WHERE {
  # Find the Siege of Mukha event
  dbr:Siege_of_Mukha dbo:commander ?commander .

  # Ensure the commander is royalty
  ?commander a dbo:RoyalPerson ;
             foaf:name ?commanderName .

  # Find the parent of this royal commander
  OPTIONAL { ?parent dbo:child ?commander .
             FILTER(?parent != ?commander) }

  # Ensure the parent is also royalty
  ?parent a dbo:RoyalPerson ;
          foaf:name ?parentName .

  # Retrieve the child of this royal parent
  OPTIONAL { ?parent dbo:child ?child . }

  # Get a reference to this child
  BIND(STR(?child) AS ?childReference)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the birthplace of Yandamuri Veerendranath
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .

  # Retrieve entities associated with this birthplace
  ?entity a dbo:Person ;
          dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,1100,166,0.0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie ?actor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Grant Esterhuysen""@en .
  OPTIONAL { ?person foaf:birthday ?birthDate . }
  FILTER(CONTAINS(LCASE(?person), ""richard grant esterhuysen""))
  
  ?movie a dbo:Film ;
         dbo:actor ?person .

  ?movie dbo:actor ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfDoon ?movie ?actorName ?photographerParent WHERE {
  ?doon a dbo:Person ;
        foaf:name ""Doon Arbus""@en .
  
  OPTIONAL { 
    ?doon dbo:child ?parentOfDoon .
  }
  
  ?movie a dbo:Film ;
         dbo:starring ?herchelBernardi .
  
  ?herchelBernardi a dbo:Person ;
                   foaf:name ""Herschel Bernardi""@en .
  
  OPTIONAL {
    ?actor a dbo:Person ;
           foaf:name ?actorName .
    
    FILTER(?herchelBernardi = ?actor)
  }
  
  ?photographer a dbo:Photographer ;
                dbo:child ?photographerChild .
  
  OPTIONAL { 
    ?photographerParent dbo:parent ?photographerChild .
  }
}
```",5,6,6,2,3,3,3,71,0,9,1,0.0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Republican_Party_(United_States) dbo:member ?member .
}
```",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?medalOfHonorAwardee dbo:awarded dbr:Medal_of_Honor ;
                       dbo:servedInMilitaryForce ?force .
  
  dbr:Quincy_Adams_Gillmore dbo:militaryUnit ?gillmoreForce .

  FILTER(?force = ?gillmoreForce)

  OPTIONAL { ?medalOfHonorAwardee dbo:participatedInWar ?war }
  OPTIONAL { dbr:Quincy_Adams_Gillmore dbo:participatedInWar ?war }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?shirley a dbo:Person ;
           foaf:name ""Shirley Stoler""@en .
  
  OPTIONAL { ?shirley dbo:profession ?profession . }
  
  OPTIONAL { ?shirley dbo:child ?child . }
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Elvira of Castile, Queen of Sicily's child
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?elviraChild .

  # Roger III, Duke of Apulia's parent and their child (who is royalty)
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?rogerParent .
  ?rogerParent dbo:child ?royaltyChild .
  
  FILTER(?elviraChild = ?royaltyChild)

  # The father of this child, who must be a royalty and an office holder related to William I
  ?father a dbo:Person ;
          dbo:parent ?royaltyChild .

  OPTIONAL { 
    ?officeHolder a dbo:OfficeHolder ;
                  foaf:name ?name .
    ?officeHolder dbo:child ?royaltyChild .
    FILTER(?father = ?officeHolder)
  }

  # Ensure the father is related to William I
  ?relatedToWilliam a dbo:Person ;
                   dbo:parent ?father .
  dbr:William_I_of_Sicily dbo:spouseOrCivilPartner ?relatedToWilliam .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?deathPlaceSettlement ?administeredTerritory ?birthRoyaltyTerritory WHERE {
  # Part 1: Find the death place of Christian Ditlev Ammentorp Hansen that is a settlement
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen""@en .
  
  OPTIONAL { ?hansen dbo:deathPlace ?deathPlace . }
  FILTER(?deathPlace != null)
  
  # Ensure the death place is a settlement
  ?settlement a dbo:Settlement ;
              rdfs:label ?placeLabel .
  FILTER(CONTAINS(LCASE(?placeLabel), LCASE(STR(?deathPlace))))
  
  # Find territory administered from this settlement
  OPTIONAL { ?settlement dbo:administeredTerritory ?administeredTerritory . }
  
  # Part 2: Identify the birthplace of Prince Christian of Schleswig-Holstein-Sonderburg-Beck associated with royalty
  ?prince a dbo:Person ;
          foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  
  OPTIONAL { ?prince dbo:birthPlace ?birthPlace . }
  FILTER(?birthPlace != null)
  
  # Ensure the birthplace is associated with royalty
  ?royaltyTerritory a dbo:Territory ;
                    rdfs:label ?territoryLabel .
  FILTER(CONTAINS(LCASE(?territoryLabel), LCASE(STR(?birthPlace))))
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader WHERE {
  dbr:Spanish_Socialist_Workers'_Party dbo:leader ?leader .
  
  ?leader a dbo:Person ;
          foaf:nationality dbr:Spain .
}
```",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Duchess Luise of Brunswick-Wolfenbüttel""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  { 
    # Query for Carolyn Jones' death place
    OPTIONAL {
      dbr:Carolyn_Jones a dbo:Person ;
                        dbo:deathPlace ?deathPlace .
      BIND(""Carolyn Jones"" AS ?person)
    }
  } UNION {
    # Query for the actor(s) of Aladdin (1958 film) and their death places
    ?film a dbo:Film ;
          foaf:name ""Aladdin""@en ;
          dbo:releaseDate ?date .
    FILTER(YEAR(?date) = 1958)
    
    ?film dbo:actor ?actor .
    OPTIONAL {
      ?actor a dbo:Person ;
             dbo:deathPlace ?deathPlace .
      BIND(STR(?actor) AS ?person)
    }
  }
}
```",3,3,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  dbr:Brian_Kemp dbo:positionHeld ?position .
  ?position dbo:organization ?institution .
  
  OPTIONAL { ?institution dbo:country dbr:United_States . }
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:sportsManager true .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  ?sawMinHla dbo:child ?child .

  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?myatHponePyo dbo:predecessor ?child .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Lao_She dbo:work ?work .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?commanderOffice ?conflict ?residence WHERE {
  # Find Miguel Maura's office
  ?miguel a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  OPTIONAL { ?miguel dbo:office ?miguelOffice . }

  # Find the commander who is an office holder and politician in a military conflict
  ?commander a dbo:Person, dbo:Politician ;
             dbo:office ?commanderOffice .
  OPTIONAL { ?conflict a dbo:MilitaryConflict ;
                   dbo:participant ?commander . }
  
  # Find Manuel Pinto da Costa's military conflict
  dbr:Manuel_Pinto_da_Costa dbo:militaryConflict ?conflict .

  # Find Alberto Ruiz-Gallardón's residence
  ?alberto a dbo:Person ;
           foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?alberto dbo:residence ?residence . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?shadow WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
}
```",3,3,4,3,1,3,3,71,0,2,98447,0.0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?deathPlace WHERE {
  {
    ?person a dbo:Person ;
            foaf:name ""Reed Howes""@en .
    ?person dbo:deathPlace ?deathPlace .
    BIND(""Reed Howes"" AS ?personName)
  }
  UNION
  {
    ?person a dbo:Person ;
            foaf:name ""Sal Mineo""@en .
    ?person dbo:deathPlace ?deathPlace .
    BIND(""Sal Mineo"" AS ?personName)
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?headOfState ?galicianLeaderOffice ?partyLeader WHERE {
  # Tenant of Spain (Head of State)
  ?spain a dbo:Country ;
         dbo:headOfState ?headOfState .
  
  # Office of the leader of 2009 Galician regional election
  ?electionEvent dbo:electionDate ?date ;
                 dbo:electedAs ?galicianLeaderOffice .
  FILTER(YEAR(?date) = 2009)
  FILTER(CONTAINS(LCASE(STR(?electionEvent)), ""galicia""))

  # Tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  ?partyLeader dbo:leader ?person .
  
  FILTER(CONTAINS(LCASE(STR(?person)), ""spain""))
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:El_Deafo dbo:author ?author .
  ?author dbo:nationality dbr:United_States .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthYear ""1574""^^xsd:gYear .
  
  ?child dbo:parent ?mariaAnna ;
         a dbo:RoyalFamilyMember .

  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          dbo:profession dbr:Actress ;
          dbo:nativePlace dbr:New_York_(state) .
  ?person dbo:child ?child .
}
```",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  dbr:Royal_Swedish_Academy_of_Sciences dbo:show ?show .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player WHERE {
  ?work dbo:creator ?author .
  ?author foaf:name ""Aleksandr Filimonov""@en .
  ?work rdfs:label ""Наши парни""@ru .

  OPTIONAL { ?work dbo:actor ?player . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?otherProfessional WHERE {
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  
  ?sam dbo:profession ?profession .

  ?otherIndividual a dbo:Person ;
                   dbo:profession ?profession .
  
  FILTER(?sam != ?otherIndividual)
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Ferdinand II, Holy Roman Emperor
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .

  # The child must be a commander in the war
  ?child dbo:commanderInWar ?war .

  # The child is associated with societal events and general events
  ?child dbo:societalEvent ?societalEvent .
  ?child dbo:event ?event .

  # The child is also linked to television shows
  ?child dbo:televisionShow ?tvShow .

  # Link the child to the 2nd Dragoon Regiment (France)
  ?regiment dbr:2nd_Dragoon_Regiment_(France) .
  ?child dbo:militaryUnit ?regiment .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # GS9 member who is an artist and musical artist
  ?gs9Member a dbo:Band ;
             dbo:member ?person .
  FILTER(CONTAINS(LCASE(?gs9Member), ""gs9""))
  
  ?person a dbo:Artist, dbo:MusicalArtist .

  # Associated musical artist of the GS9 member
  ?associatedArtist dbo:associatedBandMember ?person .

  # Band members of the associated musical artist
  ?associatedArtist dbo:member ?bandMember .
  
  # New York (state) as region, state, and settlement
  dbr:New_York_(state) a dbo:Region ;
                      dbo:country dbr:United_States ;
                      dbo:settlement .

  # Award related to New York (state)
  ?award dbo:location dbr:New_York_(state) .
  
  # Awardee of the award that is a band
  ?award dbo:recipient ?bandAwardee .
  FILTER(?bandAwardee a dbo:Band)

}
```",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Johnny_Doughboy dbo:film ?work .
  
  ?work dbo:producer ?producer .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ian Gregson""@en .
  
  OPTIONAL { ?person dbo:award ?award . }
  
  OPTIONAL { ?award dbo:relatedWork ?movie . }
}
```",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Luckman""@en .
  
  ?person dbo:manager dbr:Hartlepool_United_F.C. .

  ?residence dbo:resident ?person .
  
  OPTIONAL { ?residence dbo:nativePlace ?native . }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Promise_Me,_Dad dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Alexander Lvovich Davydov
  OPTIONAL { 
    dbr:Aleksandr_Lvovich_Davydov dbo:participatedIn ?war .
  }
  
  # Wars involving Karl Gustav von Baggovut
  OPTIONAL { 
    dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .
  }

  # Ensure the war is related to the Russian Empire
  FILTER EXISTS {
    ?war dbo:location dbr:Russian_Empire .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Aleksandr Filimonov""@en .
  ?person dbo:work ?work .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?medal a dbo:Award ;
         foaf:name ""Gillmore Medal""@en .
  
  ?medal dbo:recipient ?awardee .

  OPTIONAL { ?awardee dbo:force ?force . }

  ?location a dbo:Place ;
            foaf:name ""Charleston, South Carolina""@en .

  ?awardee dbo:locatedIn ?location .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city ?native WHERE {
  ?city a dbo:Settlement ;
        dbo:country dbr:Pakistan ;
        rdfs:label ?label .
  
  FILTER(CONTAINS(LCASE(?label), ""heart of pakistan"") ||
         CONTAINS(LCASE(?label), ""paris of the east"") ||
         CONTAINS(LCASE(?label), ""city of gardens"") ||
         CONTAINS(LCASE(?label), ""city of literature""))
  
  OPTIONAL { ?city dbo:nativePlace ?native . }
}
```",2,4,3,2,1,2,2,9,0,0,881,0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Minye_Kyawswa dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Find Arthur Stanley and his father
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley""@en ;
          rdf:type dbo:Politician .
  
  OPTIONAL { ?arthur dbo:parent ?father . }

  # Find awardees of the Commander of the Royal Victorian Order and their parents
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .

  OPTIONAL { ?awardee dbo:parent ?parentOfAwardee . }

  # Match father with parent of awardee
  FILTER(?father = ?parentOfAwardee)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Find the author of ""Back to Work""
  dbr:Back_to_Work_(book) dbo:author ?author .

  # Ensure both entities are the same person
  FILTER(?owner = ?author)

  # Identify a war that is both a disease and societal event (Spanish Flu during WWI)
  dbr:World_War_I dbo:participatingCommander ?commander .
  dbr:Spanish_Flu_Pandemic dbo:participatingCommander ?commander .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?war WHERE {
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  
  ?child dbo:participatedIn ?war .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?recipient WHERE {
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Steven Kapur""@en .
  
  ?work dbo:title ""The True Self""@en ;
        dbo:composer ?writer ;
        a dbo:MusicalWork .

  OPTIONAL { 
    ?writer dbo:nativePlace dbr:Birmingham .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jamie T""@en .
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",2,2,3,2,1,2,2,9,0,0,44694,0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  
  OPTIONAL { 
    ?association dbo:associatedBand dbr:The_Fabulous_Thunderbirds . 
    ?association dbo:member ?person .
  }
  
  ?bandMember dbo:memberOf ?band ;
              dbo:member ?person .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:child* ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder ?residence WHERE {
  ?election a dbo:Election ;
            dbo:electedOfficeHolder ?officeHolder .
  
  ?officeHolder dbo:position ""Mayor""@en ; # Assuming the leader is the Mayor
               dbo:electedDuring ?event .

  ?event dbo:date ""2003-05-25""^^xsd:date . # Date of the Madrid City Council election

  OPTIONAL { ?officeHolder dbo:residence ?residence }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Roger II's children who are royalty
  dbr:Roger_II_of_Sicily dbo:child ?child .
  FILTER(?child rdf:type dbo:Monarch) .

  # For each child, find their children (grandchildren of Roger II)
  ?child dbo:parent ?grandchild .
  FILTER(?grandchild rdf:type dbo:Monarch) .

  # Find a reference that is royalty and an office holder related to William I
  OPTIONAL {
    ?reference rdf:type dbo:Monarch ;
               dbo:officeHolder ?office .
    ?office dbo:holder dbr:William_I_of_Sicily .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  # Find Bobby Shmurda's band members who are also musical artists
  ?bobby a dbo:MusicalArtist ;
         foaf:name ""Bobby Shmurda""@en .
  
  ?bobby dbo:associatedBandMember ?member .
  ?member a dbo:MusicalArtist .

  # Identify awards related to New York (state)
  ?award dbo:location dbr:New_York_(state) ;
         a dbo:Award .

  # Find the awardee of such an award that is a band
  ?band dbo:awardedAward ?award .
  ?band a dbo:Band .

  # Determine the native region of this band
  ?region dbo:nativeRegionOf ?band ;
          a dbo:State ;
          dbo:country dbr:United_States_of_America .

}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  ?jeanBaptist a dbo:Person ;
               foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  OPTIONAL { ?jeanBaptist dbo:commander ?commander . }
  
  ?yuriiKhmelnytsky a dbo:Person ;
                    foaf:name ""Yurii Khmelnytsky""@en .
  
  OPTIONAL { ?yuriiKhmelnytsky dbo:successor ?successor . }
  
  FILTER(?jeanBaptist != ?yuriiKhmelnytsky)
  
  OPTIONAL {
    ?commander dbo:relatedEvent ?event .
    ?event a dbo:TelevisionShow ;
           dbo:societalEvent true .
  }
  
  OPTIONAL { ?reference foaf:name ""George Ducas""@en . }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  dbr:No_Alternative dbo:composer ?song .
  ?song dbo:lyricist ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution ?entity WHERE {
  ?institution a dbo:Institution ;
               dbo:location dbr:Georgia_(U.S._state) .
  
  ?entity dbo:country dbr:United_States .
}
```",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# No specific movie mentioned; unable to construct a query.
```",2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?office WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Mariano Rajoy""@en .
    ?person dbo:officeHeld ?office .
  }
  UNION
  {
    ?person a dbo:Person ;
            foaf:name ""Miguel Maura""@en .
    ?person dbo:officeHeld ?office .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work (GROUP_CONCAT(DISTINCT ?title; separator="", "") AS ?titles) WHERE {
  # Part 1: Get the author of ""Promises to Keep""
  OPTIONAL {
    dbr:Promises_to_Keep_(book) dbo:author ?biden .
    BIND(""Joe Biden"" AS ?promisesAuthor)
  }
  
  # Part 2: Get all written works by Joe Biden
  OPTIONAL {
    ?work a dbo:CreativeWork ;
          dbo:author dbr:Joe_Biden .
    ?work rdfs:label ?title .
    FILTER(LANG(?title) = ""en"")
  }

  # Return the author of ""Promises to Keep"" and titles of other works by Joe Biden
  VALUES (?promisesAuthor) { ""Joe Biden"" }
}
GROUP BY ?work ?promisesAuthor
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?participant WHERE {
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedIn ?battle .
  ?battle dbo:participatingMilitaryUnitOrCountry ?participant .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:ATL dbo:actor ?actor .
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?medal a dbo:Award ;
         foaf:name ""Medal of Honor""@en .
  
  ?recipient a dbo:Person ;
             dbo:recipient ?medal .
  
  ?recipient foaf:name ?personName .
}
```",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Saw Shwe Khet and their royal child
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  OPTIONAL { 
    ?royalChild dbo:parent ?sawShweKhet ;
                a dbo:RoyalFamilyMember .
    
    # Identify the father of this royal child who is also royalty
    ?fatherOfRoyalChild dbo:child ?royalChild ;
                        a dbo:RoyalFamilyMember .
    
    OPTIONAL { 
      ?spouse dbo:spouse ?fatherOfRoyalChild .
    }
  }

  # Identify Minye Kyawswa and their grandchild
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .

  OPTIONAL {
    ?childOfMinyeKyawswa dbo:parent ?minyeKyawswa .
    
    ?grandChild dbo:parent ?childOfMinyeKyawswa .
    
    # Ensure the child of Minye Kyawswa is royalty
    FILTER(?royalChild = ?grandChild)
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  ?person a dbo:Person ;
          dbo:nativePlace dbr:London ;
          dbo:occupation dbo:Artist ;
          dbo:occupation dbo:MusicalArtist .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonore_of_Austria,_Queen_of_Poland dbo:child ?eleonore .
  ?eleonore dbo:parent ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  OPTIONAL { 
    ?person dbo:nativePlace dbr:Russian_Empire . 
  }
  
  OPTIONAL { 
    ?person dbo:nativePlace dbr:Grand_Duchy_of_Finland . 
  }

  FILTER((BOUND(?person) && EXISTS{?person dbo:nativePlace dbr:Russian_Empire}) &&
         (EXISTS{?person dbo:nativePlace dbr:Grand_Duchy_of_Finland}))
}
```",2,2,3,1,2,2,3,28,0,0,126,0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoName ?profession WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo foaf:name ?alterEgoName .
  OPTIONAL { ?alterEgo dbo:profession ?profession . }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the ruling party in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut .

  # Find members of this political party
  ?member dbo:memberOf ?party .
  
  # Find wars involving George Pickett
  ?war a dbo:SocietalEvent ;
      dbo:commander dbr:George_Pickett .

  # Check if the member was also a commander in any war
  OPTIONAL { ?member dbo:commander ?war . }

  FILTER(?party = ?party && ?war = ?war)
}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?person WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Find Darryl Paa Kwesi Bannerman-Martin and confirm his birth name
  ?person a dbo:Person ;
          foaf:name ""Dizzee Rascal""@en ;
          foaf:birthday ?birthDate .
  
  OPTIONAL { ?person foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en }

  # Ensure the person has the same profession as Rod Argent
  ?person dbo:profession ?sameProfession .

  FILTER(?profession = ?sameProfession)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?birthPlace WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  
  ?award dbo:recipient ?person .
  
  ?person foaf:nationality dbr:Japan .
  
  OPTIONAL { 
    ?awardCategory dbo:categoryName ?categoryName .
    FILTER(CONTAINS(LCASE(?categoryName), ""television show""))
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            foaf:name ""30th (Cambridgeshire) Regiment of Foot""@en .
  
  ?battle a dbo:MilitaryConflict ;
          foaf:name ""Battle of Cape Finisterre (1805)""@en .

  ?regiment dbo:commander ?commander .
  ?battle dbo:commander ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors in the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .
  
  # Find children of Allan Arbus
  OPTIONAL { 
    dbr:Allan_Arbus dbo:child ?child .
    
    # Ensure the actor is also a parent of Allan Arbus's child (which should be Allan Arbus himself)
    ?child dbo:parent ?actor .
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfMargarete ?grandChildOfPhilipp WHERE {
  # Find child of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?childOfMargarete .

  # Find grandchild of Duke Philipp of Württemberg
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?childOfPhilipp .
  ?childOfPhilipp dbo:child ?grandChildOfPhilipp .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military force or figure known as ""The Triple X's""
  ?tripleX a dbo:MilitaryForce ;
           foaf:name ""The Triple X's""@en .

  # Link this force to the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_1805 dbo:commander ?battleCommanderCapeFinisterre .
  FILTER(?tripleX = ?battleCommanderCapeFinisterre)

  # Link this force to the Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:commander ?battleCommanderFortRoyal .
  FILTER(?tripleX = ?battleCommanderFortRoyal)

  # Ensure both commanders are the same person
  BIND(?battleCommanderCapeFinisterre AS ?commander)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeCountry WHERE {
  # Find Helmut Kohl as the leader of West Germany
  ?kohl a dbo:Person ;
        foaf:name ""Helmut Kohl""@en .
  
  # Find VfL Bochum and its manager in the 2007-08 season
  dbr:VfL_Bochum dbo:manager ?manager .
  ?manager dbo:nativeCountry ?nativeCountry .

  # Ensure the manager is also linked to Helmut Kohl (historical context)
  OPTIONAL { ?kohl dbo:spouseOrPartner ?manager . }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?abKyaHoga dbo:actor ?actor .
  ?dispatchesFromElsewhere dbo:actor ?actor .

  FILTER(STR(?abKyaHoga) = ""Ab_Kya_Hoga""@en)
  FILTER(STR(?dispatchesFromElsewhere) = ""Dispatches_from_Elsewhere""@en)

  ?actor dbo:profession ?profession .
  
  VALUES ?profession { 
    <http://dbpedia.org/ontology/Actor> 
    <http://dbpedia.org/ontology/Politician>
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:locatedIn dbr:Andhra_Pradesh .
}
```",1,1,2,1,1,2,2,9,0,0,166,0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Switzerland .
  OPTIONAL { ?person dbo:nationality dbr:Russian_Empire . }
}
```",2,2,3,1,2,2,3,28,36,870,0,0.039735099337748346,1.0,0.07643312101910829
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?war WHERE {
  # Part for Koichirō
  {
    ?koicho a dbo:Person ;
            foaf:name ""Koichirō""@en .
    OPTIONAL { ?koicho dbo:participatedInWar ?war . }
    BIND(?koicho AS ?person)
  }

  UNION

  # Part for Toyotomi Hideyoshi's child
  {
    dbr:Toyotomi_Hideyoshi dbo:child ?child .
    OPTIONAL { ?child dbo:participatedInWar ?war . }
    BIND(?child AS ?person)
  }
}
```",4,4,5,2,2,2,3,28,0,3,2,0.0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeRegion WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedBand dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # Identify the native region of this award that is a state and settlement in America
  ?nativeRegion dbo:nativePlace ?award ;
                a dbo:StateOrTerritory, dbo:Settlement ;
                dbo:country dbr:United_States_of_America .

  # Find band members associated with this award
  ?bandMember dbo:memberOfBand ?award .

  # Link the band member to French Montana (GS9)
  ?frenchMontana a dbo:MusicalArtist, dbo:Person ;
                 foaf:name ""French Montana""@en ;
                 dbo:member dbr:GS9 .
  
  # Ensure the band member is associated with French Montana
  ?bandMember dbo:associatedWithArtist ?frenchMontana .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Ferdinand II, Holy Roman Emperor
  dbr:Ferdinand_II,_Holy_Roman_Emperor a dbo:Person ;
    dbo:child ?child .

  # The child must be a commander in the Algerian War
  ?child dbo:commanderOfMilitaryForce ?militaryForce .
  ?militaryForce dbo:participatedInWar dbr:Algerian_War .

  # The child is also associated with societal events, general events, and television shows
  ?child dbo:societalEvent ?societalEvent .
  ?child dbo:event ?event .
  ?child dbo:televisionShow ?tvShow .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # GS9 resource
  dbr:GS9 a dbo:Band ;
          dbo:member ?member .

  # Member is an artist and musical artist
  ?member a dbo:Artist, dbo:MusicalArtist .

  # Associated musical artist of the member
  ?member dbo:associatedActs ?associatedArtist .
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?primaryProfession WHERE {
  # Find actors in ""Ab Kya Hoga""
  ?series dbo:cast ?actor .
  FILTER(STRSTARTS(STR(?series), STR(dbr:Ab_Kya_Hoga)))

  # Check if the actor is also a politician
  OPTIONAL { ?actor dbo:profession dbr:Politician . }

  # Retrieve primary profession of the actor
  OPTIONAL { ?actor dbo:profession ?primaryProfession . }
  
  FILTER(?actor != dbr:Ab_Kya_Hoga)
}
```",4,5,5,3,2,3,3,71,0,0,39640,0,0.0,0
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandfather WHERE {
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .
  
  ?child dbo:parent ?baedaMaryamI .

  OPTIONAL { ?childParent a dbo:Person ;
                         dbo:parent ?fatherOfChild . }

  OPTIONAL { ?grandfather a dbo:Person ;
                        dbo:parent ?fatherOfChild ;
                        (dbo:royalty | dbo:officeHolder) ?role . }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Gustavo_Petro dbo:politicalParty ?party .
  OPTIONAL { ?party dbo:country dbr:Colombia . }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Roger II of Sicily and his child who is the father of William II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?fatherOfWilliam .
  
  # Ensure this person is also a parent of William II of Sicily
  ?fatherOfWilliam dbo:parent dbr:William_II_of_Sicily .

  # Constance of Burgundy and her spouse's child (grandchild of Constance)
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  OPTIONAL { ?spouseChild dbo:child ?spouse . }
  
  # Ensure the person is royalty
  FILTER(?fatherOfWilliam = ?spouseChild && 
         ((?fatherOfWilliam a dbo:Monarch) || (?fatherOfWilliam a dbo:RoyalPerson)))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  dbr:United_States_Congress dbo:awards ?award .
  ?award dbo:recipient ?show .
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the album ""Nothing to Gein""
  dbr:Nothing_to_Gein a dbo:Album ;
                      dbo:producer ?producer .

  # Ensure the producer is an organization and a group
  ?producer a dbo:Organization ;
            a dbo:MusicalGroup .

  # Find band members of Stone Sour
  ?bandMember dbo:memberOf dbr:Stone_Sour ;
              foaf:name ?name .

  # Check if this band member is associated with the producer
  OPTIONAL { ?bandMember dbo:memberOf ?producer }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?leader dbo:electedAs [
    a dbo:Election ;
    dbo:electionDate ?date .
    FILTER(YEAR(?date) = 2003 && CONTAINS(LCASE(STR(?leader)), ""madrid city council""))
  ] .

  # Find residences of the leader
  OPTIONAL { ?leader dbo:residence ?residence . }

  # Find tenants of these residences
  OPTIONAL { ?residence dbo:tenant ?tenant . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?countryResidence ?adminPosition WHERE {
  # Find the office of the leader of the 2009 Galician regional election
  ?election a dbo:Election ;
            dbo:electedOffice ?office .
  FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/2009_Galician_regional_election""))

  # Find Álvaro Quirós' residence that is a country
  dbr:Álvaro_Quirós dbo:residence ?residence .
  FILTER(STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?residence a dbo:Country })

  # Find the tenant of the administration, which is Spanish, of PSOE
  dbr:Spanish_Socialist_Workers'_Party dbo:administration ?admin .
  ?adminPosition a dbo:AdministrativePost ;
                 dbo:officeHolder ?person .
  FILTER(STRSTARTS(STR(?person), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?person dbo:nationality dbr:Spain })

  # Link the entities
  OPTIONAL { ?office dbo:officeHolder ?person . }
  OPTIONAL { ?adminPosition dbo:officeHolder ?person . }

  FILTER(?person = dbr:Álvaro_Quirós)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 ?birthPlaceEntity WHERE {
  # Wars involving Karl Gustav von Baggovut
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war1 .

  # Wars involving Alexander Lvovich Davydov
  dbr:Alexander_Lvovich_Davydov dbo:participatedIn ?war2 .

  # Birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  # Get the entity in the birthplace
  ?birthPlace a dbo:Place ;
              foaf:name ?birthPlaceEntity .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  VALUES (?resource) { (dbr:Cat_Country_(novel)) (dbr:Winston_Chang) }
  
  OPTIONAL {
    ?resource a dbo:Book ;
              dbo:country ?country .
  }

  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Winston Chang""@en ;
            dbo:birthPlace ?birthPlace .
    
    BIND(?birthPlace AS ?country)
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .
  
  OPTIONAL { 
    ?dorotheaParent a dbo:Person ;
                    dbo:parent ?child .
    FILTER(STRSTARTS(STR(?dorotheaParent), ""http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine""))
  }
  
  OPTIONAL {
    ?catherineParent a dbo:Person ;
                     foaf:name ""Catherine of Austria, Queen of Portugal""@en .
    FILTER(?child = ?catherineParent)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?force ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Quincy Adams Gillmore""@en .
  
  OPTIONAL { ?person dbo:militaryUnit ?force . }
  
  ?person dbo:dateOfDeath ?deathDate .
  FILTER(?deathDate = ""1850-08-05""^^xsd:date)
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peterIV ?child WHERE {
  dbr:Peter_IV_of_Aragon ?peterIV .
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson""@en .
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  OPTIONAL { ?person dbo:band ?band . }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band (SAMPLE(?label) AS ?realName) WHERE {
  ?clapton a dbo:Person ;
           foaf:name ""Eric Clapton""@en .
  
  ?clapton dbo:bandMemberOf ?band .

  FILTER(CONTAINS(LCASE(STR(?band)), ""fabulous thunderbirds""))

  ?band rdfs:label ?label .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather WHERE {
  # Find The Shadow using Lamont Cranston as alias
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  
  OPTIONAL { ?shadow foaf:name ""Lamont Cranston""@en . }
  
  # Identify Na'od and his father
  ?naod a dbo:Person ;
        foaf:name ""Na'od""@en .
  
  ?father dbo:child ?naod .
  
  # Find the grandfather who is both royalty and an office holder
  ?father dbo:parent ?grandfather .
  
  FILTER EXISTS { ?grandfather a dbo:Monarch . }
  FILTER EXISTS { ?grandfather a dbo:OfficeHolder . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  ?mary a dbo:Person ;
        foaf:name ""Mary Elphinstone, Lady Elphinstone""@en .
  
  ?mary dbo:nativePlace dbr:Middlesex .

  ?mary dbo:parent ?parent .

  ?claudesChild dbo:childOf dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne ;
                dbo:parent ?parent .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  ?person dbo:office ?office .

  ?office dbo:location dbr:Santiago_de_Compostela .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader WHERE {
  dbr:Miguel_Maura a dbo:Person ;
                   dbo:member ?party .
  
  ?party a dbo:PoliticalParty ;
         dbo:leader ?leader .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Find the death place of John McDermott (American artist)
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  # Identify the commander of Pickett's Charge
  ?pickettsCharge dbo:commander ?commander ;
                  a dbo:MilitaryOperation .

  # Check if this commander is a party member of a ruling political party in the death place
  ?partyMember foaf:name ?commanderName .
  FILTER(?commander = ?partyMember)
  
  ?politicalParty a dbo:PoliticalParty ;
                  dbo:rulingPartyOf ?rulingCountry .
  
  ?rulingCountry dbo:location ?deathPlace .

}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Find the child of this parent who is royalty
  ?child dbo:parent ?parent ;
         rdf:type dbo:RoyalFamilyMember .

  # Ensure this child is a predecessor to Carl, Duke of Württemberg
  ?child dbo:predecessor dbr:Claude_Frederick_Carl,_Duke_of_W%C3%BCrttemberg .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Elvira of Castile, Queen of Sicily
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?williamII .
  
  # William II of Sicily's child (our target grandchild)
  ?williamII dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch ;
              dbo:parent ?parentOfGrandchild .

  # Link to Roger II of Sicily through parentage
  ?parentOfGrandchild dbo:child ?rogerIIChild .
  dbr:Roger_II_of_Sicily dbo:child ?rogerIIChild .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfWilliamII ?childOfParentOfRogerIII WHERE {
  # Find the father of William II of Sicily
  dbr:William_II_of_Sicily dbo:father ?fatherOfWilliamII .

  # Find a child of Roger III, Duke of Apulia and then find the parent of that child
  OPTIONAL {
    ?childOfRogerIII dbo:parent dbr:Roger_III,_Duke_of_Apulia .
    ?parentOfChild dbo:child ?childOfRogerIII .
    BIND(?parentOfChild AS ?childOfParentOfRogerIII)
  }

  # Find a child of Elvira of Castile, Queen of Sicily
  OPTIONAL {
    ?childOfElvira dbo:parent dbr:Elvira_of_Castile,_Queen_of_Sicily .
    BIND(?childOfElvira AS ?childOfParentOfRogerIII)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?lassoMoon a dbo:Album ;
             dbo:workType/dbo:subClassOf* dbo:Film ;
             dbo:workType/dbo:subClassOf* dbo:Work .
  
  ?lassoMoon foaf:name ""Lasso the Moon""@en .

  ?actor a dbo:Actor ;
         dbo:profession ?profession .
  
  FILTER(?profession = <http://dbpedia.org/resource/Actor>)

  ?castMember dbo:castMember ?actor .
  ?castMember dbo:work ?lassoMoon .
}
```",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Saw_Shwe_Khet dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Stephen_V_of_Hungary dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,1,0,0.8333333333333334,1.0,0.9090909090909091
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?eleonora a dbo:Person ;
            foaf:name ""Eleonora Menicucci de Oliveira""@en .
  
  OPTIONAL { ?eleonora dbo:birthday ?birthDate . }
  OPTIONAL { ?eleonora dbo:birthPlace ?birthPlace . }

  ?person a dbo:Politician ;
          dbo:birthday ?birthDate ;
          dbo:birthPlace ?birthPlace .

  FILTER(?person != ?eleonora)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region,_Ghana .
  
  ?person foaf:name ?birthName .

  ?artist a dbo:Artist ;
          foaf:name ?artistName ;
          dbo:profession dbr:Musician .

  FILTER(?birthName = ?artistName)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoName ?profession WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo foaf:name ?alterEgoName .
  OPTIONAL { ?alterEgo dbo:profession ?profession . }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fictionalCharacter WHERE {
  ?kentAllard a dbo:Person ;
              foaf:name ""Kent Allard""@en .
  
  ?reference dbo:wikiPageRedirects ?kentAllard .
  
  ?reference a dbo:FictionalCharacter .
  
  BIND(?reference AS ?fictionalCharacter)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalCollins ?producerWorkCollins ?producerMovieGaynor WHERE {
  # Cora Sue Collins' professional role and producer of her notable work
  ?collins a dbo:Person ;
           foaf:name ""Cora Sue Collins""@en .
  
  OPTIONAL { ?collins dbo:profession ?professionalCollins . }
  
  OPTIONAL { 
    ?work a dbo:Film ;
          dbo:starring ?collins .
    
    OPTIONAL { ?work dbo:producer ?producerWorkCollins . }
  }

  # Janet Gaynor's producer of her movie
  ?gaynor a dbo:Person ;
          foaf:name ""Janet Gaynor""@en .

  OPTIONAL {
    ?movie a dbo:Film ;
           dbo:starring ?gaynor .
    
    OPTIONAL { ?movie dbo:producer ?producerMovieGaynor . }
  }
}
```",5,8,6,2,3,3,3,71,1,14,0,0.06666666666666667,1.0,0.125
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?reference WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  ?party rdf:about ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?force ?birthplace WHERE {
  ?gillmore a dbo:Person ;
            foaf:name ""Quincy Adams Gillmore""@en ;
            dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
            dbo:nationality dbr:United_States .

  OPTIONAL { ?gillmore dbo:awardReceived ?award . }
  
  OPTIONAL { ?award dbo:force ?force . }

  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States ;
              dbo:birthPlace ?gillmore .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  ?letsch dbo:currentClubManager ?team .
  ?team dbo:sportTeamLeague ?league .
  ?league dbo:country dbp:Germany .

  FILTER(?letsch = ?manager)
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  OPTIONAL { 
    ?person dbo:office ?office .
    FILTER(STRSTARTS(LCASE(?office), ""member of the parliament of spain"") || STRSTARTS(LCASE(?office), ""minister""))
  }
  
  OPTIONAL {
    ?event a dbo:Event ;
           dbo:agent ?person .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Anxo_Quintana dbo:administration ?administration .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfStephenV ?spouseOfGrandparent WHERE {
  # Find child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?childOfStephenV .

  # Navigate to Philip's grandparent and their spouse
  dbr:Philip_Despot_of_Romania dbo:parent ?parentOfPhilip .
  ?parentOfPhilip dbo:parent ?grandparentOfPhilip .
  
  OPTIONAL { ?grandparentOfPhilip dbo:spouse ?spouseOfGrandparent } .

  # Ensure the spouse is royalty
  FILTER EXISTS {
    ?spouseOfGrandparent a dbo:Monarch ;
                         foaf:name ?name .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  dbr:Plovdiv_University_Paisii_Hilendarski dbo:alumnus ?alumnus .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Caroline Louise Bevan Symonds""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  OPTIONAL { ?sawMinPhyu dbo:spouse ?spouseOfSawMinPhyu . }
  
  OPTIONAL { ?childOfSpouse a dbo:Person ;
                           dbo:parent ?spouseOfSawMinPhyu ;
                           a dbo:Royalty . }

  OPTIONAL { ?myatHponePyo a dbo:Person ;
                          foaf:name ""Myat Hpone Pyo""@en .
  
            ?fatherOfMyatHponePyo dbo:child ?myatHponePyo ;
                                  a dbo:Royalty .

            ?spouseOfFatherOfMyatHponePyo dbo:spouse ?fatherOfMyatHponePyo . }

  OPTIONAL { ?sawMinHla a dbo:Person ;
                      foaf:name ""Saw Min Hla""@en .
  
            ?childOfSawMinHla dbo:parent ?sawMinHla . }
  
  FILTER(?childOfSpouse = ?spouseOfFatherOfMyatHponePyo)
  
  OPTIONAL { ?predecessor dbo:successor ?childOfSpouse . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Edmund_Hakewill-Smith dbo:award ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:militaryForce ?force .
}
```",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?person foaf:name ""Myat Hpone Pyo""@en .
  OPTIONAL { ?person dbo:predecessor ?predecessor . }
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:genre dbr:Comics .
  OPTIONAL { dbr:The_Shadow dbo:alterEgo ?alterEgo . }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producerCollins ?producerGaynor WHERE {
  ?cora a dbo:Person ;
        foaf:name ""Cora Sue Collins""@en .
  
  ?collinsWork dbo:claimToFame ?workCollins ;
               dbo:producer ?producerCollins .

  ?janet a dbo:Person ;
         foaf:name ""Janet Gaynor""@en .

  ?gaynorMovie dbo:claimToFame ?movieGaynor ;
               rdf:type dbo:Film ;
               dbo:producer ?producerGaynor .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mary Elphinstone, Lady Elphinstone""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .

  # Find movies where this author is an actor
  ?movie dbo:starring ?author ;
         dbo:actor ?actor .
}
```",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  # Identify the person Richard Grant Esterhuysen
  ?person a dbo:Person ;
          foaf:name ""Richard Grant Esterhuysen""@en .
  
  # Find movies or TV shows where he has acted
  ?movie dbo:starring ?person .

  # Ensure it is both a movie and a television show
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:TelevisionSeries .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?alterEgo WHERE {
  # Find the band of Bob Thompson (musician)
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbo:musicalBand ?band .
  }
  
  # Identify Walter B. Gibson's creation, ""The Shadow""
  OPTIONAL {
    dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson ;
                   a dbo:FictionalCharacter , dbo:ComicsCharacter .
    
    # Find the professional alter ego of The Shadow
    ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow ;
                    dbo:profession ?alterEgo .
  }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",2,2,3,2,1,3,2,20,0,0,87241,0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Always_the_Love_Songs dbo:writer ?writer .
}
```",1,1,2,1,1,3,3,71,0,2,3,0.0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?deathPlace WHERE {
  {
    ?person a dbo:Person ;
            foaf:name ""Reed Howes""@en .
    ?person dbo:deathPlace ?deathPlace .
    BIND(""Reed Howes"" AS ?personName)
  }
  UNION
  {
    ?person a dbo:Person ;
            foaf:name ""Carolyn Jones""@en .
    ?person dbo:deathPlace ?deathPlace .
    BIND(""Carolyn Jones"" AS ?personName)
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Peter_IV_of_Aragon dbo:father ?father .
  OPTIONAL { ?father dbo:title ?title . }
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query for the associated musical artist of Stuart Tosh
SELECT DISTINCT ?artist WHERE {
  ?stuart a dbo:Person ;
          foaf:name ""Stuart Tosh""@en .
  
  OPTIONAL { 
    ?stuart dbo:associatedBandOrMusicalArtist ?artist .
  }
}

UNION

# Query for the associated musical artist who is also a writer of Wizards of Waverly Place (soundtrack)
SELECT DISTINCT ?writerMusician WHERE {
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:musicalArtist ?musician ;
                                              dbo:composer ?writer .
  
  FILTER(?musician = ?writer)

  ?writer a dbo:Person ;
          foaf:name ?name .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person ;
          dbo:officeHolder ?office ;
          dbo:politicalParty ?party .
  
  OPTIONAL { ?office dbo:location dbr:Madrid . }
  OPTIONAL { ?office dbo:title ""Commander""@en . }

  ?event dbo:participant ?person ;
         rdfs:label ""Central African Republic Civil War"" .

  FILTER EXISTS { ?office dbo:location dbr:Madrid }
  FILTER EXISTS { ?office dbo:title ""Commander""@en }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:lyricsBy ?writer .

  # Identify the commander in the Russo-Polish War
  ?commander a dbo:Person ;
             dbo:officeHolderOf ?war .
  
  FILTER(?war = dbr:Russo-Polish_War_(1654–1667))

  # Find the successor who is a politician and office holder
  ?successor dbo:succeededBy ?writer ;
            a dbo:Politician, dbo:OfficeHolder .

  OPTIONAL { ?commander dbo:succeededBy ?successor }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office2003 ?partyOffice WHERE {
  # Mariano Rajoy's office in the 2003 Madrid City Council election
  OPTIONAL {
    ?rajoy a dbo:Person ;
           foaf:name ""Mariano Rajoy""@en .
    ?rajoy dbo:positionHeld ?position2003 .
    ?position2003 dbo:electionEvent dbr:Madrid_City_Council_election,_2003 .
    ?position2003 dbo:office ?office2003 .
  }

  # Mariano Rajoy's office as a leader of the Conservative Republican Party (Spain)
  OPTIONAL {
    ?rajoy dbo:leaderOfParty dbr:Conservative_Republican_Party_(Spain) .
    ?partyPosition dbo:office ?partyOffice .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:No_Alternative dbo:writer ?writer .
  ?writer dbo:bandMember ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalSpouse WHERE {
  # Identify the child of Princess Antoinette and Ferdinand Albert II who is royalty
  ?child a dbo:Person ;
         dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel ;
         dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttle .
  
  # Ensure the child is royalty
  ?child dbo:royalty ?royalTitle .

  # Find the spouse of this royal child
  OPTIONAL { ?child dbo:spouse ?firstSpouse . }

  # Find the spouse of that spouse
  OPTIONAL { ?firstSpouse dbo:spouse ?finalSpouse . }
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardAwardeeBirthPlace WHERE {
  # Find Paulus Powell's birth place and ensure it is a region and administrative region
  ?paulusPowell dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/""))
  
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:AdministrativeRegion .

  # Find the governor of this region
  ?governor a dbo:Politician ;
            dbo:governs ?birthPlace .
  ?governorBirthPlace dbo:birthPlace ?governor .

  # Find Vince Gilligan's awards and their awardees' birth places
  dbr:Vince_Gilligan dbo:award ?award .
  
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardAwardeeBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:givenName ""Harriette""@en ;
          foaf:surname ""Lake""@en .
  
  OPTIONAL { ?person dbo:spouse dbr:Roger_Pryor_(actor) . }
  
  OPTIONAL { ?partyMembership dbo:member ?person ;
                             dbo:politicalParty dbr:Republican_Party_(United_States) . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  ?person a dbo:Scientist ;
          dbo:nationality dbr:Australia ;
          dbo:award dbr:Australian_Laureate_Fellowship .
  
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",2,4,3,2,1,2,2,9,8,0,0,1.0,1.0,1.0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entityInAthens ?war WHERE {
  ?konstantinos a dbo:Person ;
                foaf:name ""Konstantinos Ventiris""@en .
  
  OPTIONAL { 
    ?konstantinos dbo:birthPlace dbr:Athens ;
                  dbo:participatedIn ?war . 
    BIND(dbr:Athens AS ?entityInAthens)
  }
  
  UNION
  
  {
    ?konstantinos dbo:residence dbr:Athens ;
                  dbo:participatedIn ?war .
    BIND(dbr:Athens AS ?entityInAthens)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Crewe""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?alterEgo WHERE {
  # Find the producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  # Ensure both are professionals (e.g., a person with a profession)
  ?producer a dbo:Person ;
            dbo:profession ?producerProfession .
  ?alterEgo a dbo:Person ;
            dbo:profession ?alterEgoProfession .
}
```",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  dbr:Nothing_to_Gein dbo:producer ?producer .
  
  ?producer a dbo:Organization ;
            a dbo:MusicalGroup .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  # Find the VfL Bochum resource and its seasons
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:sportTeamSeason ?season .

  # Identify the 2006–07 season
  ?season foaf:name ""2006–07""@en .
  
  # Find the successor season
  ?successorSeason dbo:follows ?season .

  # Get the manager of the team in the successor season
  ?successorSeason dbo:manager ?manager .

  # Find the person born on August 26, 1968, who was a sports manager
  ?person a dbo:SportsManager ;
          foaf:birthday ""1968-08-26""^^xsd:date .
  
  # Match this person with the manager of the successor season
  FILTER(?manager = ?person)
}
```",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?territory WHERE {
  # Administration of Olaf I of Denmark
  dbr:Olaf_I_of_Denmark dbo:administers ?administration .
  
  OPTIONAL { 
    ?administration dbo:territoryAdministeredFrom dbr:Copenhagen .
  }
}

UNION

SELECT ?administration WHERE {
  # Administration of Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:administers ?administration .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Janet Gaynor's notable work (claim to fame)
  OPTIONAL { 
    dbr:Janet_Gaynor dbo:film ?janetFilm .
    ?janetFilm dbo:producer ?producer .
  }
  
  # The Adventures of Tom Sawyer (1938 film) producer
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .

  # Producer associated with The Shadow's alter ego work
  OPTIONAL {
    dbr:The_Shadow dbo:work ?shadowWork .
    ?shadowWork dbo:producer ?producer .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Spanish Socialist Workers' Party as an organization in Spain
  dbr:Spanish_Socialist_Workers'_Party a dbo:Organization ;
                                     dbo:country dbr:Spain .

  # Alberto Núñez Feijóo's role in the administration of Spain
  dbr:Alberto_Núñez_Feijóo a foaf:Person ;
                           dbo:officeHolder ?office .
  
  # Find tenants (administrative roles) related to both entities
  OPTIONAL { ?tenant dbo:positionHeld ?office . }
  OPTIONAL { ?tenant dbo:memberOf dbr:Spanish_Socialist_Workers'_Party . }

  FILTER(?office = ?tenant)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .

  OPTIONAL { 
    ?season a dbo:SoccerClubSeason ;
            dbo:sportTeam dbr:VfL_Bochum ;
            dbo:manager ?person .
    
    FILTER(year(?season) = 2007 && year(?seasonEnd) = 2008)
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Kiyosu dbo:timeZoneRegion ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?polishEntity WHERE {
  dbr:French_Revolutionary_Wars dbo:commander ?commander .
  
  OPTIONAL { 
    ?commander dbo:location dbr:Poland .
    BIND(?commander AS ?polishEntity)
  }
}
```",3,3,4,2,2,3,2,20,0,58,1,0.0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war ?force WHERE {
  ?tomPhillips a dbo:Person ;
               foaf:name ""Tom Phillips""@en ;
               dbo:nationality dbr:United_Kingdom ;
               dbo:occupation dbr:Royal_Navy_officer .
  
  OPTIONAL { ?tomPhillips dbo:participatedIn ?war . }
  
  ?williamTennant a dbo:Person ;
                  foaf:name ""William Tennant""@en ;
                  dbo:nationality dbr:United_Kingdom ;
                  dbo:occupation dbr:Royal_Navy_officer .
  
  OPTIONAL { ?williamTennant dbo:commanderOf ?force . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Hillary_Clinton dbo:author ?work .
  ?work a dbo:Book ;
        dbo:author dbr:Hillary_Clinton .

  FILTER EXISTS { 
    dbr:Hillary_Clinton dbo:officeHolder ?office .
    ?office a dbo:PoliticalOffice .
  }
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?producer a dbo:Person ;
            dbo:productionCompany dbr:Storm_in_a_Teacup_(film) .
  
  ?writer a dbo:Person ;
          dbo:work dbr:Boom_Shack-A-Lak .

  FILTER(?producer = ?writer)

  ?producer dbo:birthPlace ?birthPlace .

  ?native dbo:nativeOf ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?manager WHERE {
  dbr:Hong_Kong_C_Team dbo:manager ?manager .
  
  FILTER EXISTS { ?manager rdf:type dbo:SportsManager . }
  FILTER EXISTS { ?manager rdf:type dbo:SoccerManager . }
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbr:Eton_College .
}
```",1,1,2,1,1,3,3,71,211,0,0,1.0,1.0,1.0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No valid SPARQL query can be generated due to incomplete question.
```",1,1,2,1,1,3,2,20,0,0,39790,0,0.0,0
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bobby Shmurda""@en .
  ?person foaf:givenName ?birthName .
  OPTIONAL { ?person dbo:nativePlace dbr:Florida . }
}
```",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfCharlesII ?royaltyParent WHERE {
  # Step 1: Find the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .

  # Step 2: Identify Maria of Bytom's spouse and find the father's parent who is royalty
  OPTIONAL {
    ?mariaSpouse a dbo:Person ;
                 dbo:spouse dbr:Maria_of_Bytom .
    
    ?fatherOfMariaSpouse dbo:child ?mariaSpouse .
    ?royaltyParent dbo:parent ?fatherOfMariaSpouse .
    FILTER(?royaltyParent rdf:type dbo:Monarch)
  }

  # Step 3: Find the child of Stephen V of Hungary
  OPTIONAL {
    dbr:Stephen_V_of_Hungary dbo:child ?stephenChild .
    
    # Ensure that the spouse of Charles II is related to this chain
    FILTER(?spouseOfCharlesII = ?royaltyParent)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royaltyChild ?commander WHERE {
  # Step 1: Identify Maria Anna of Bavaria and her child
  dbr:Maria_Anna_of_Bavaria_born_1574 dbo:child ?mariaChild .

  # Step 2: Find the father of this child
  ?mariaChild dbo:parent ?fatherOfMariaChild .

  # Step 3: From this father, find his children who are royalty
  ?fatherOfMariaChild dbo:child ?royaltyChild .
  FILTER(?royaltyChild rdf:type dbo:Monarch) 

  # Step 4: Identify the societal event and television show related to the 2nd Dragoon Regiment of France
  dbr:2nd_Dragoon_Regiment_(France) dbo:participatedIn ?warEvent .
  ?warEvent rdf:type dbo:SocietalEvent ;
            dbo:wikiPageRedirects ?tvShow .

  # Step 5: Find the commander associated with this event
  ?commander dbo:commanded ?warEvent .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?singer ?profession WHERE {
  ?singer a dbo:Singer .
  OPTIONAL { ?singer dbo:profession ?profession . }
}
```",1,1,2,1,1,2,2,9,0,0,10364,0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Audrey Hepburn
  ?movie a dbo:Film ;
         dbo:starring dbr:Audrey_Hepburn .

  # Identify the spouse of an awardee related to Janusz Kamiński's awards or nominations
  ?awardList dbo:recipient ?awardee .
  FILTER(CONTAINS(LCASE(STR(?awardList)), ""janusz kamiński""))
  
  OPTIONAL { ?awardee dbo:spouse ?spouse . }
  
  # Find the actor in that movie who is also the spouse of the awardee
  ?movie dbo:starring ?actor .
  FILTER(?spouse = ?actor)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?work WHERE {
  ?billClinton a dbo:Person ;
               foaf:name ""Bill Clinton""@en .
  
  ?work a dbo:WrittenWork, dbo:Book, dbo:CreativeWork ;
        dbo:author ?billClinton .

}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Albrecht,_Duke_of_Württemberg dbo:child ?child .
  dbr:Margarete_Sophie_of_Austria dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  ?person dbo:birthPlace ?birthplace .

  ?birthplace a dbo:Settlement ;
              geo:location ?location .
  
  ?location rdfs:label ?countryLabel .
  FILTER (CONTAINS(LCASE(?countryLabel), ""united states"") || CONTAINS(LCASE(?countryLabel), ""america""))
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?residenceCountry WHERE {
  ?alvaroQuirós a dbo:Person ;
                foaf:name ""Álvaro Quirós""@en .
  
  OPTIONAL { ?alvaroQuirós dbo:office ?office . }
  
  OPTIONAL { ?alvaroQuirós foaf:based_near ?residence . }
  
  FILTER EXISTS {
    ?residence a dbr:Country .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?album a dbo:Album ;
         foaf:name ""Shelby Oaks""@en .
  
  ?album dbo:artist dbr:T.I._(rapper) .

  ?song dbo:partOfAlbum ?album ;
        a dbo:Song .

  OPTIONAL { ?song dbo:performer ?actor . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jo-Vaughn Virginie Scott""@en .
  
  OPTIONAL { ?person dbo:birthName ""Jo-Vaughn Virginie Scott""@en . }
  
  ?person dbo:profession dbr:Musician .

  ?asapRocky a dbo:MusicalArtist ;
             foaf:name ""ASAP Rocky""@en .
  
  ?association dbo:associatedMusicalArtist ?asapRocky ;
               dbo:musicalArtist ?person .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Sappy a dbo:MusicalWork ;
            dbo:artist ?band .
  OPTIONAL { dbr:Sappy dbo:writer ?writer . }
}
```",2,5,3,2,1,3,2,20,1,0,25,1.0,0.038461538461538464,0.07407407407407407
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAwardee WHERE {
  # Step 1: Find awards associated with Rodney Lees and their awardees
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  
  ?rodneyLees foaf:name ""Rodney Lees""@en ;
              dbo:award ?award .

  # Step 2: Identify children of Frederick Stanley who are politicians
  ?frederickStanley foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .
  
  ?child dbo:parent ?frederickStanley ;
         a dbo:Politician .

  # Step 3: Determine the father of such a child
  ?fatherOfChild dbo:child ?child .

  # Step 4: Find the parent of the awardee from step 1
  ?awardeeParent dbo:parent ?awardee .
  
  BIND(?awardeeParent AS ?parentOfAwardee)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author WHERE {
  ?work dbo:actor ?veraLynn ;
        rdf:type dbo:Film .
  
  ?televisionShow dbo:actor ?veraLynn ;
                  rdf:type dbo:TelevisionSeries .

  FILTER(?work = ?televisionShow)

  ?veraLynn a dbo:Person ;
            foaf:name ""Vera Lynn""@en .

  ?author a dbo:Person ;
          dbo:child ?kateDimbleby .
  
  ?kateDimbleby a dbo:Person ;
                foaf:name ""Kate Dimbleby""@en .

  OPTIONAL { ?work dbo:writer ?author . }
  OPTIONAL { ?televisionShow dbo:writer ?author . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo a dbo:Person ;
            dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Sue Cobb""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Guillaume Peltier""@en .
  OPTIONAL { ?person dbo:party ?party . }
}
```",1,1,2,1,1,2,2,9,6,0,0,1.0,1.0,1.0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find the author of ""Cat Country""
  dbr:Cat_Country dbo:author ?author .
  
  # Identify the person who died in Taipei
  ?person dbo:deathPlace dbr:Taipei ;
          dbo:child ?child .

  # Ensure the child is a politician
  ?child dbo:occupation dbr:Politician .

  # Retrieve the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Stuart Mcbeath Tosh""@en .
  
  OPTIONAL { ?person dbo:associatedBand ?associatedArtist . }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeCountry ?managedTeam ?vflManager WHERE {
  # Find Thomas Letsch's native country and teams he managed
  ?thomasLetsch a dbo:Person ;
                foaf:name ""Thomas Letsch""@en .
  
  OPTIONAL { ?thomasLetsch dbo:nationality ?nativeCountry . }
  FILTER(?nativeCountry = dbr:West_Germany)

  OPTIONAL { ?thomasLetsch dbo:managerOf ?managedTeam . }

  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?vflManager .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?helena a dbo:Person ;
          foaf:name ""Helena of Austria""@en .
  
  ?helena dbo:spouse ?spouse .

  ?spouse a dbo:RoyalFamilyMember ; # Assuming royalty is represented by this class
          dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?authorBirthPlace WHERE {
  # Birth place of the Governor of Virginia (Glenn Youngkin)
  dbr:Glenn_Youngkin a dbo:Politician ;
                     dbo:birthPlace ?governorBirthPlace .

  # Birth place of Cece Bell, author of ""El Deafo""
  dbr:Cecily_Ann_Bell a dbo:Writer ;
                      dbo:nationality dbr:United_States ;
                      dbo:birthPlace ?authorBirthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandfather WHERE {
  # Find child of Baeda Maryam I and Dawit I
  ?child dbo:parent dbr:Baeda_Maryam_I ;
         dbo:parent dbr:Dawit_I .

  # Find father of this child who is royalty and an office holder
  ?father a dbo:Person, dbo:Royalty ;
          foaf:name ?fatherName ;
          dbo:officeHolder ?office .
  
  ?child dbo:parent ?father .

  # Find grandfather (father of the father) who is also royalty and an office holder
  ?grandfather a dbo:Person, dbo:Royalty ;
               foaf:name ?grandfatherName ;
               dbo:officeHolder ?grandfatherOffice .
  
  ?father dbo:parent ?grandfather .

  # Reference to Lamont Cranston (alter ego of The Shadow)
  OPTIONAL { ?lamont dbr:Lamont_Cranston . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?otherProfessional WHERE {
  ?shatrughan a dbo:Person ;
              foaf:name ""Shatrughan Sinha""@en .
  
  ?shatrughan dbo:profession ?profession .

  ?otherIndividual a dbo:Person ;
                   dbo:profession ?profession .
  
  FILTER(?shatrughan != ?otherIndividual)
}
```",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandchild WHERE {
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  
  OPTIONAL { ?constance dbo:spouse ?spouse . }
  
  OPTIONAL { ?spouseChild dbo:parent ?spouse . }
  
  OPTIONAL { ?grandchild dbo:parent ?spouseChild . }
  
  FILTER(?grandchild a dbo:Monarch || ?grandchild a dbo:RoyalPerson)
}
```",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  ?virginia a dbo:State ;
            dbo:name ""Virginia""@en .
  
  ?virginia dbo:governor ?governor .

  ?governor a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Landmark ;
            dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Find the ruling party associated with this landmark
  OPTIONAL { ?landmark dbo:governingBody ?rulingParty . }
  
  # Identify Harriette Arlene Lake and her political party membership
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en .
  OPTIONAL { ?person dbo:partyMember ?partyMember . }

  # Ensure the ruling party is the same as the party member's party
  FILTER(?rulingParty = ?party)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?associatedBand WHERE {
  {
    ?person a dbo:Person ;
            foaf:name ""Stonebwoy""@en .
    OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
  } UNION {
    ?person a dbo:Person ;
            foaf:name ""Shatta Wale""@en .
    OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
  }
}
```",3,3,4,2,2,3,3,71,0,42,1,0.0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfStephenV WHERE {
  # Find child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?childOfStephenV .

  # Find spouse of Maria of Bytom
  dbr:Maria_of_Bytom dbo:spouse ?spouseOfMaria .

  # Find parent (father) of the spouse
  ?spouseOfMaria dbo:parent ?fatherOfSpouse .

  # Find grandparent of the spouse and ensure they are royalty
  ?fatherOfSpouse dbo:parent ?grandparent .
  FILTER(?grandparent = ?childOfStephenV)
  ?grandparent a dbo:RoyalFamily .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Alfonso VI's child
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child .

  # Find the grandchild of Alfonso VI
  ?child dbo:child ?grandchild .

  # Identify the parent of the grandchild who is a royalty
  ?parentOfGrandchild rdf:type dbo:Royalty ;
                      dbo:child ?grandchild .
  
  # Ensure this parent is also an office holder and has a connection to William I
  ?parentOfGrandchild rdf:type dbo:OfficeHolder ;
                      dbo:relatedTo dbr:William_I .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfDoonArbus ?actor WHERE {
  # Find Doon Arbus and their parent
  dbr:Doon_Arbus dbo:child ?parentOfDoonArbus .
  
  # Ensure the parent is a Photographer
  ?parentOfDoonArbus a dbo:Photographer .

  # Identify an actor from a movie linked to someone who died in Los Angeles
  ?movie dbo:actor ?actor .
  ?decedent dbo:deathPlace dbr:Los_Angeles ;
            dbo:associatedWith ?movie .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  ?entity a dbo:Person ;
          dbo:alterEgo dbr:The_Shadow .
  
  ?album dbo:artist dbr:T.I. ;
         dbo:song ?song .

  OPTIONAL { ?song dbo:featuredArtist ?professional . }
  FILTER(?professional != dbr:T.I.)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Burhan Belge""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  dbr:Copenhagen dbo:administrativeCapital ?territory .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?galicianLeaderOffice ?spanishTenantOffice WHERE {
  # Find the leader of the 2009 Galician regional election
  ?election a dbo:Election ;
            dbo:electedOffice ?office .
  ?winner dbo:winner ?person .
  FILTER(year(?date) = 2009 && contains(lcase(str(?place)), ""galicia""))
  
  OPTIONAL { ?person dbo:office ?galicianLeaderOffice . }

  # Find the current tenant of Spain (head of state or government)
  ?country a dbo:Country ;
           rdfs:label ""Spain""@en .
  ?tenant dbo:headOfStateOrGovernment ?person2 .

  OPTIONAL { ?person2 dbo:office ?spanishTenantOffice . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find band members of Mark Eitzel
  ?markEitzel a dbo:Person ;
              foaf:name ""Mark Eitzel""@en .
  
  OPTIONAL { 
    ?markEitzel dbo:bandMember ?bandMember .
  }
  
  # Find associated musical artists of R.E.M.
  dbr:R.E.M. dbo:associatedMusicalArtist ?remAssociatedArtist .

  # Find the associated artist of these associated artists
  OPTIONAL {
    ?remAssociatedArtist dbo:associatedMusicalArtist ?associatedArtist .
    FILTER(?associatedArtist != dbr:R.E.M.)
  }
  
  # Ensure the final associated artist is an artist
  OPTIONAL { 
    ?associatedArtist a dbo:Artist .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Scott LaFaro""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Burnt_by_the_Sun dbo:associatedBand ?artist .
  
  FILTER EXISTS { ?artist a dbo:Band . }
  FILTER EXISTS { ?artist a dbo:Group . }
  FILTER EXISTS { ?artist a dbo:Organization . }
}
```",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild WHERE {
  # Ferdinand III and his child
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  
  # Father of the child (Ferdinand III)
  ?fatherOfChild dbo:parent ?child .

  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:parent ?ceciliaFather .

  # Child of Cecilia Renata's father
  ?ceciliaFather dbo:child ?ceciliaChild .
  
  FILTER(?fatherOfChild = ?ceciliaFather)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place that is a settlement
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .
  FILTER( ?deathPlace != dbr:Unknown )
  ?deathPlace a dbo:Settlement .

  # Find the territory administered by Olaf I of Denmark
  dbr:Olaf_I_of_Denmark dbo:administers ?territory .
  
  # Ensure the death place is related to the territory (common logic)
  OPTIONAL { ?deathPlace dbo:locatedIn ?territory }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Russia_national_football_team dbo:commonName ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  OPTIONAL { 
    ?person dbo:member dbr:Republican_Party_(United_States) .
  }
  
  OPTIONAL {
    ?roger a dbo:Person ;
           foaf:name ""Roger Pryor""@en .
    ?roger dbo:spouse ?person .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  dbr:Lao_She dbo:work ?work .
  ?work dbo:country ?country .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?primeMinisterRole ?mayorRole ?event WHERE {
  ?anxo a dbo:Person ;
        foaf:name ""Anxo Quintana""@en .

  OPTIONAL { 
    ?rolePrimeMinister dbo:officeHolder ?anxo ;
                       dbo:position ""Prime Minister of Spain"" .
    BIND(?rolePrimeMinister AS ?primeMinisterRole)
  }

  OPTIONAL {
    ?roleMayor dbo:officeHolder ?anxo ;
               dbo:position ""Mayor of Santiago de Compostela"" .
    BIND(?roleMayor AS ?mayorRole)
  }
  
  OPTIONAL {
    ?event dbo:leader ?anxo ;
           a dbo:Event .
    BIND(?event AS ?event)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?miguelOffice ?tenant WHERE {
  # Find Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Identify the leader of the 2003 Madrid City Council election and their residence
  ?leader a dbo:Politician ;
          dbo:electedAsLeaderOf ?madridElection .
  
  FILTER(?madridElection = dbr:Madrid_City_Council_election,_2003)
  
  ?leader dbo:residence ?residence .

  # Find the tenant of the leader's residence
  OPTIONAL { ?residence foaf:based_near ?tenant . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # For Stonebwoy
  OPTIONAL {
    ?stonebwoy a dbo:Person ;
               foaf:name ""Stonebwoy""@en .
    ?stonebwoy dbo:associatedBandOrMusicalArtist ?associatedArtist .
  }

  # For an artist from Central Region, Ghana
  OPTIONAL {
    ?artist a dbo:Person ;
            dbo:nationality dbr:Ghana ;
            dbo:birthPlace ?place .
    ?place dbo:wikiPageRedirects ?centralRegion .
    ?centralRegion rdfs:label ""Central Region, Ghana""@en .
    ?artist dbo:profession dbr:Musician .
    ?artist dbo:associatedBandOrMusicalArtist ?associatedArtist .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Allan_Arbus dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:Ulster_Unionist_Party dbo:leader ?leader .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William I's children who are royalty
  ?child dbo:parent dbr:William_I_of_Sicily ;
         rdf:type dbo:Monarch .

  # Trace back to Roger II and Elvira of Castile
  ?child dbo:parent dbr:Roger_II_of_Sicily .
  ?child dbo:parent dbr:Elvira_of_Castile .

  # Find the father of this child
  ?child dbo:father ?father .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the producer of ""Nothing to Gein""
  dbr:Nothing_to_Gein dbo:producer ?producer .

  # Ensure the producer is an organization/group
  ?producer a dbo:Band ;
            a dbo:MusicalGroup .

  # Find band members of this producer who are also in Stone Sour
  ?bandMember dbo:member ?producer .
  ?bandMember dbo:member dbr:Stone_Sour .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?notableWork WHERE {
  # Find the author of Kent Allard
  dbr:Kent_Allard (print) dbo:creator ?author .

  # Find the actor who played Johnny Doughboy and a notable work
  ?actor dbo:actor dbr:Johnny_Doughboy .
  ?actor dbo:notableWork ?notableWork .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find T.I.'s albums that are songs and musical works
  ?album a dbo:Album ;
         dbo:artist dbr:T.I. ;
         dbo:song ?song .
  
  # Ensure the album is also considered a musical work
  ?musicalWork a dbo:MusicalWork ;
               foaf:name ?albumName .
  FILTER(?album = ?musicalWork)
  
  # Find actors associated with these albums
  OPTIONAL { ?album dbo:actor ?actor . }
  
  # Identify movies of the actor and their authors (directors/writers)
  ?movie dbo:starring ?actor ;
         dbo:author ?author .
}
```",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Patrice Martin-Lalande""@en .
  
  ?person dbo:successor ?successor .

  FILTER (?successor != ?person)

  ?successor a dbo:Politician ;
             foaf:nationality <http://dbpedia.org/resource/France> .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationChristianIX ?administrationSchleswig ?territoryCopenhagen WHERE {
  # Administration of Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:monarchFor ?country .
  OPTIONAL { ?country dbo:administrativeUnit ?administrationChristianIX . }

  # Mayor or administration related to Duchy of Schleswig (historical context)
  OPTIONAL {
    ?schleswigEntity a dbo:AdministrativeRegion ;
                     rdfs:label ""Duchy of Schleswig""@en .
    ?mayorRole dbo:administrativeUnit ?schleswigEntity .
    OPTIONAL { ?mayorRole dbo:administrator ?administrationSchleswig . }
  }

  # Territory administered from Copenhagen
  dbr:Copenhagen dbo:administrativeCenterOf ?territoryCopenhagen .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Francis_I,_Duke_of_Lorraine dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyMember WHERE {
  # Find party members of the Republican Party (United States)
  ?member a dbo:Person ;
          dbo:memberOf ?party .
  FILTER(?party = dbr:Republican_Party_(United_States))

  # Identify Tisha Sterling's parent and their birth name
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .

  ?parent dbo:child ?tisha ;
          foaf:name ?parentName .
  
  OPTIONAL { ?parent foaf:birthday ?birthDate . }
  OPTIONAL { ?parent foaf:name ?birthName . }

  # Match the party member with a person whose birth name matches Tisha Sterling's parent
  FILTER(?partyMember = ?member)
  FILTER(?birthName = ?parentName)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Third_Taiwan_Strait_Crisis dbo:commander ?commander .
}

UNION

SELECT ?work WHERE {
  dbr:Bill_Clinton dbo:author ?work ;
                   a dbo:Book .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .
  ?child dbo:parent dbr:Catherine_of_Austria,_Queen_of_Portugal .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?producerProfession (GROUP_CONCAT(DISTINCT ?otherProfessional; separator=""; "") AS ?professionalsInField) WHERE {
  # Find the producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .

  # Determine the profession of this producer
  ?producer a ?producerProfession .

  # Find other professionals in the same field as the producer
  ?otherProfessional a ?producerProfession .
  
  FILTER(?producer != ?otherProfessional)
}
GROUP BY ?producer ?producerProfession
```",4,4,5,3,2,3,3,71,0,0,39640,0,0.0,0
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university ?foundingDate WHERE {
  ?luiza a dbo:Person ;
         foaf:name ""Luiza Erundina""@en .
  
  ?luiza dbo:almaMater ?university .

  ?university a dbo:University ;
              dbo:foundingDate ?foundingDate .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Find Eugène Cattin's profession
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  
  ?eugeneCattin dbo:profession ?profession .

  # Find professionals with the same profession as Eugène Cattin
  ?professional a dbo:Person ;
                dbo:profession ?profession .

  # Ensure this professional is an actor in a movie
  ?movie a dbo:Film .
  ?professional dbo:actor ?movie .

  # Identify the person who died in Los Angeles
  ?decedent a dbo:Person ;
            dbo:deathPlace ?place .
  
  FILTER(CONTAINS(LCASE(?place), ""los angeles""))

  # Find the parent of this professional actor
  ?parent a dbo:Person ;
          dbo:child ?professional .

}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Frederick Stanley, 16th Earl of Derby's child
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby ;
         a dbo:Person .

  # Parent of the child (who is also related to Rodney Lees' award and Arthur Stanley)
  ?parent dbo:child ?child .

  # Relation to Rodney Lees' award
  ?awardRecipient dbo:awardee dbr:Rodney_Lees ;
                  dbo:parent ?parent .

  # Relation to Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:father ?parent .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?foundingDate WHERE {
  ?luiza a dbo:Person ;
         foaf:name ""Luiza Erundina""@en .
  
  ?luiza dbo:almaMater ?university .

  ?university a dbo:University, foaf:Organization .

  ?university dbo:foundingDate ?foundingDate .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorDeathPlace ?salMineoDeathPlace ?carolynJonesDeathPlace WHERE {
  # Assuming we have identified the main actor of ""The Sky Ranger"" (1928 film) as someone named ""John Wayne""
  OPTIONAL { 
    ?person a dbo:Person ;
            foaf:name ""John Wayne""@en .
    ?person dbo:deathPlace ?actorDeathPlace .
  }

  OPTIONAL {
    dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  }
  
  OPTIONAL {
    dbr:Carolyn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
  }
}
```",4,4,5,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Duke Philipp of Württemberg's child and grandchild
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?child .
  ?child dbo:child ?grandchild .

  # Archduchess Helena of Austria's spouse and the child of that spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  ?spouseChild dbo:parent ?spouse .
  
  # Predecessor relationship (assuming a generic predecessor property)
  OPTIONAL { ?grandchild dbo:predecessorOf ?spouseChild . }

  # Ensure the result is royalty
  FILTER(?grandchild rdf:type dbo:RoyalFamilyMember)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  ?child rdf:type dbo:Monarch .

  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel ?spouseOfCharlesII ?childOfStephenV WHERE {
  # Parent of Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .

  # Spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .

  # Child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?childOfStephenV .
}
```",3,3,4,1,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace that is a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  FILTER( ?birthPlace a dbo:Country ) .

  # Find decedents who died at this birthplace
  ?decedent dbo:deathPlace ?birthPlace .

  # Ensure the decedent is native of Grand Duchy of Finland
  ?decedent dbo:nativePlace dbr:Grand_Duchy_of_Finland .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  ?institution a ?type .
  FILTER(?type IN (dbo:University, dbo:College, dbo:Hospital, dbo:School)) .
  ?institution dbo:location dbr:Georgia_(U.S._state) .
}
```",1,1,2,1,1,2,2,9,0,0,941,0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Part 1: Find the ruling party in Central, Louisiana
  ?central a dbo:PopulatedPlace ;
           dbo:country dbr:United_States ;
           rdfs:label ""Central, Louisiana""@en .
  
  OPTIONAL { 
    ?government dbo:governingBody ?localGovernment .
    ?localGovernment dbo:politicalParty ?rulingParty .
    
    # Find party member of the ruling party
    ?partyMember a dbo:Person ;
                 dbo:memberOfPoliticalParty ?rulingParty .
  }
  
  # Part 2: Find person with birth name of Tisha Sterling's parent
  dbr:Tisha_Sterling dbo:parent ?parent .
  ?parent foaf:name ?birthName .

  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ?birthName .
    
    FILTER(?partyMember = ?person)
  }
}
```",5,5,6,3,2,3,3,71,2,0,0,1.0,1.0,1.0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .
  
  ?miguelMaura dbo:member ?party .

  ?leader a dbo:Person ;
          dbo:leaderOf ?party ;
          foaf:holdsAccount ?office .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Linda_Miller_(actress) dbo:child ?child .
  
  ?child dbo:nativePlace dbr:New_York_(state) .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?child .
  FILTER(?child a dbo:Monarch)
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?parent WHERE {
  # Find the author of ""A Picture of Britain""
  ?book a dbo:Book ;
        foaf:name ""A Picture of Britain""@en .
  
  ?book dbo:author ?author .

  # Identify an English settlement
  ?location a dbo:Settlement ;
            dbo:country dbr:England .

  # Find the native person who is both an artist and a musical artist
  ?native dbo:nativePlace ?location ;
          a dbo:Artist, dbo:MusicalArtist .
  
  # Get the parent of this native
  ?parent dbo:child ?native .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio a dbo:TelevisionShow ;
              dbo:producer ?producer .

  # Find the band associated with this producer
  ?bandMember dbo:member ?producer .
  
  # Get Robert Lamar Thompson's profession
  ?robertLamar a dbo:Person ;
               foaf:name ""Robert Lamar Thompson""@en ;
               dbo:profession ?robertProfession .

  # Match professionals in the same field as Robert Lamar Thompson who are also musical artists
  ?professional a dbo:MusicalArtist ;
                dbo:profession ?robertProfession .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby and his children
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # The child must be a politician
  ?child a dbo:Politician .

  # The child is also the parent of Edward Stanley, 17th Earl of Derby
  ?child dbo:parent dbr:Edward_Stanley,_17th_Earl_of_Derby .

  # Find the father of this child (who is also Frederick Stanley)
  ?father a dbo:Person ;
          dbo:child ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  dbr:Prince_Faisal_bin_Hussein dbo:child ?child .
  ?child a dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Predecessor of Carl, Duke of Württemberg
  dbr:Carl,_Duke_of_W%C3%BCrttemberg dbo:predecessor ?predecessor .

  # Child of the predecessor who is a royalty
  ?predecessorChild dbo:child ?predecessor ;
                    rdf:type dbo:Royalty .

  # Ensure this child is also a descendant of Duke Philipp of Württemberg
  ?philippChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  ?philippGrandchild dbo:parent ?philippChild ;
                     rdf:type dbo:Person .

  # Link the child of the predecessor to the grandchild of Duke Philipp
  FILTER(?predecessorChild = ?philippGrandchild)

  # Find the child of this royalty who is also a descendant
  ?childOfChild dbo:parent ?predecessorChild ;
               rdf:type dbo:Person .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantOfMadrid ?officeOfCommander ?militaryConflict ?leaderOfParty WHERE {
  # Find the tenant of Madrid
  ?tenantOfMadrid dbo:location dbr:Madrid ;
                  a dbo:OfficeHolder ;
                  foaf:name ?name .

  # Find the office of the commander in military conflicts
  ?officeOfCommander a dbo:MilitaryConflict ;
                     dbo:commander ?commander .
  
  # Ensure the commander is an office holder and politician
  ?commander a dbo:Person ;
             dbo:officeHolder ?office ;
             foaf:name ?commanderName .

  # Find military conflicts that are societal events
  ?militaryConflict a dbo:MilitaryConflict ;
                    dbo:societalEvent ?societalEvent .
  
  # Identify Manuel Pinto da Costa's involvement in these roles
  dbr:Manuel_Pinto_da_Costa dbo:officeHolder ?tenantOfMadrid ;
                           foaf:name ""Manuel Pinto da Costa""@en .

  # Find the leader of the Conservative Republican Party (Spain)
  ?leaderOfParty a dbo:PoliticalParty ;
                 foaf:name ""Conservative Republican Party (Spain)""@en .
  
  OPTIONAL { ?leaderOfParty dbo:leader ?partyLeader }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:West_Germany dbo:headOfState|dbo:primeMinister ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?eleonore a dbo:Person ;
            foaf:name ""Eleonore of Austria, Queen of Poland""@en .
  
  ?eleonore dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .

  ?eleonore dbo:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?establishedEntity ?almaMater WHERE {
  # Find the entity established on December 2, 1955
  ?establishedEntity a dbo:Event ;
                     dbo:established ""1955-12-02""^^xsd:date .
  
  # Find Eleonora Menicucci's alma mater
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Na'od's grandfather who is royalty and an office holder
  ?naodGrandfather a dbo:Person ;
                   dbo:royalty true ;
                   dbo:officeHolder true ;
                   dbo:parent ?naodParent .

  # Na'od's parent
  ?naod dbr:Na'od ;
        dbo:parent ?naodParent .

  # Commander in the Siege of Mukha who is royalty
  ?commander a dbo:Person ;
             dbo:royalty true ;
             dbo:commanderInBattle ?siegeOfMukha .

  # The siege event
  dbr:Siege_of_Mukha dbo:commander ?commander .

  # Parent of the commander who is royalty
  ?parent a dbo:Person ;
          dbo:royalty true ;
          dbo:child ?commander .

  # Child of this royal parent
  ?parent dbo:child ?child .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  dbr:Korean_War dbo:commander ?commander .
  ?commander a dbo:Person ;
             dbo:officeHolder ?office .
}
```",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actor of Dispatches from Elsewhere
  dbr:Dispatches_from_Elsewhere dbo:actor ?actor .

  # Professional in the alter ego of The Shadow
  OPTIONAL { 
    ?shadow a dbo:Person ;
            foaf:name ""The Shadow""@en .
    ?shadow dbo:profession ?actor .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Singer""@en .
  ?person dbo:occupation ?occupation .
}
```",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery ;
           dbo:participatedIn ?war .
  
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .

  OPTIONAL { ?entity dbo:nationality dbr:Russian_Empire . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find the actor of Rustlers' Rhapsody
  dbr:Rustlers'_Rhapsody dbo:starring ?rustlerActor .
  
  # Find the professional in the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  ?shadowAlterEgo dbo:actor ?shadowActor .

  # Ensure both roles are played by the same actor
  FILTER(?rustlerActor = ?shadowActor)
  
  # Return the name of the actor
  ?rustlerActor foaf:name ?actorName .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  dbr:Dispatches_from_Elsewhere dbo:actor ?actor .
  OPTIONAL { ?actor foaf:profession ?profession . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?native WHERE {
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .

  dbr:Boom_Shack_A_Lak dbo:writer ?writer .

  ?native foaf:native ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Linda Bruckheimer""@en .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  # William II of Sicily's father
  dbr:William_II_of_Sicily dbo:father ?person .

  # Person is a child of Roger II of Sicily
  ?person dbo:child dbr:Roger_II_of_Sicily .

  # Person is a grandchild of Alfonso VI of León and Castile
  ?intermediateChild dbo:child dbr:Alfonso_VI_of_León_and_Castile .
  ?person dbo:child ?intermediateChild .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No query can be constructed due to incomplete question.
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  ?gs9Member a dbo:MusicalArtist ;
             dbo:member dbr:GS9 .
  
  ?gs9Member dbo:birthPlace ?placeOfBirth .

  FILTER(CONTAINS(LCASE(STR(?placeOfBirth)), ""florida""))

  ?associatedArtist dbo:associatedBandOrMusicalArtist ?band .

  ?band dbo:bandMember ?bandMember .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Algerian War as an event with a commander
  dbr:Algerian_War a dbo:Event ;
                   dbo:militaryCommander ?commander .

  # Eleonore of Austria, Queen of Poland and her father
  OPTIONAL { 
    dbr:Eleonore_of_Austria_Queen_of_Poland dbo:child ?eleonore .
    ?eleonore dbo:parent ?fatherOfEleonore .
  }

  # Cecilia Renata of Austria's grandfather
  OPTIONAL {
    dbr:Cecilia_Renata_of_Austria dbo:child ?ceciliaRenata .
    ?ceciliaRenata dbo:parent ?fatherOfCeciliaRenata .
    ?fatherOfCeciliaRenata dbo:parent ?grandfatherOfCeciliaRenata .
  }

  # Linking the commander to Eleonore's father and Cecilia Renata's grandfather
  FILTER(?commander = ?fatherOfEleonore)
  FILTER(?commander = ?grandfatherOfCeciliaRenata)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?televisionShow WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Grant Esterhuysen""@en .
  
  OPTIONAL { 
    ?person dbo:actorIn ?film .
    ?film dbo:genre/dbo:subClassOf* dbo:TelevisionSeries .
    ?film rdfs:label ?televisionShow .
  }
}
```",4,5,5,3,2,3,3,71,0,0,13,0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Find William Gayner's birthplace that is both a region and a country
  ?williamGayner a dbo:Person ;
                 foaf:name ""William Gayner""@en .
  
  ?williamGayner dbo:nativePlace ?birthplace .
  
  ?birthplace rdf:type dbo:Region, dbo:Country .

  # Find the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  # Identify the parent of this child
  ?parentOfChild dbo:child ?child .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession (GROUP_CONCAT(?band; separator="", "") AS ?bands) WHERE {
  # Query for Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?profession .

  # Query for Bob Thompson's band membership
  dbr:Bob_Thompson_Musician dbo:bandMember ?band .
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?name WHERE {
  dbr:Mitaka rdfs:label ?name .
  FILTER(LANG(?name) = ""en"")
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?date .
  FILTER(xsd:date(?date) = ""1979-11-03""^^xsd:date)
  
  OPTIONAL { ?person a dbo:SoccerManager . }
  
  ?agüero a dbo:SoccerPlayer ;
          foaf:name ""Sergio Agüero""@en .
  
  ?team a dbo:SportsTeam ;
        dbo:player ?person, ?agüero .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandSpouse ?royalChild WHERE {
  # Find Duchess Luise's spouse
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?luisesSpouse .
  
  # Find the spouse of Duchess Luise's spouse (i.e., grand-spouse)
  OPTIONAL { ?luisesSpouse dbo:spouse ?grandSpouse . }
  
  # Find Duke Anthony Ulrich's child who is royalty
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:child ?child .
  FILTER(?child a dbo:Monarch) 
  BIND(?child AS ?royalChild)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Vince_Gilligan dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor in ""High Society Blues""
  ?movie a dbo:Film ;
         foaf:name ""High Society Blues""@en .
  
  ?actor dbo:starring ?movie .

  # Identify another significant work by this actor
  ?significantWork dbo:starring ?actor ;
                   a dbo:Film .

  # Retrieve the producer of that significant work
  ?significantWork dbo:producer ?producer .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?deathPlace WHERE {
  dbr:The_Sky_Ranger_1928_Film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?professional WHERE {
  # Find the producer of Coke Studio Philippines and their profession
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer rdf:type ?producerType .

  # Find Bob Thompson's band and a member's profession
  dbr:Bob_Thompson_(musician) dbo:band ?band .
  ?bandMember dbo:member ?band ;
              rdf:type ?bandMemberType .

  # Ensure the professional shares the same profession as both individuals
  ?professional rdf:type ?producerType, ?bandMemberType .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?award a dbo:Award ;
         foaf:name ""Golden Sword for Bravery""@en .
  
  ?recipient dbo:recipient ?award .
  
  ?recipient dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?currentName WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Elorm Kabu Amenyah""@en .
  OPTIONAL { ?person foaf:name ?currentName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  {
    # Find people associated with the Russian Empire
    ?person a dbo:Person ;
            dbo:birthPlace ?place .
    ?place dbo:country dbr:Russian_Empire .
  }
  UNION
  {
    # Find places within the Russian Empire
    ?place a dbo:Place ;
           dbo:country dbr:Russian_Empire .
  }
  UNION
  {
    # Find events associated with the Russian Empire
    ?event a dbo:Event ;
           dbo:location ?place .
    ?place dbo:country dbr:Russian_Empire .
  }
}
```",1,1,2,1,1,2,3,28,0,0,87,0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?herberson .
  
  ?herberson foaf:name ""Herschel Bernardi""@en .

  ?child dbo:parent dbr:Allan_Arbus .
  ?parentOfChild dbo:child ?child .
  
  ?actor a dbo:Person ;
         dbo:spouseOrPartner ?parentOfChild ;
         dbo:starring ?movie .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  # Query for actors in ""Always (1989)""
  OPTIONAL { 
    dbr:Always_(film) dbo:actor ?actor .
  }
  
  # Query for spouse of Janusz Kamiński
  OPTIONAL {
    dbr:Janusz_Kamiński dbo:spouse ?spouse .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?partyLeader WHERE {
  # Find Mariano Rajoy and his office
  dbr:Mariano_Rajoy a dbo:Person ;
                    foaf:name ""Mariano Rajoy""@en .
  
  OPTIONAL { 
    dbr:Mariano_Rajoy dbo:positionHeld ?office . 
    ?office dbo:location dbr:Madrid .
  }
  
  # Find his role as leader of the People's Party (Spain)
  OPTIONAL {
    dbr:Mariano_Rajoy dbo:memberOfParty dbr:People%27s_Party_(Spain) ;
                      dbo:positionHeld ?partyLeader .
    ?partyLeader a dbo:PoliticalOffice ;
                 foaf:name ""Leader""@en .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?song ?actor WHERE {
  # Find the album ""Shelby Oaks"" by T.I.
  dbr:T.I. dbo:album ?album .
  FILTER(CONTAINS(LCASE(STR(?album)), ""shelby oaks""))

  # Identify songs within this album
  ?album dbo:song ?song .

  # Check for any notable collaborators or associated individuals (actors)
  OPTIONAL { ?song dbo:performer ?actor . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?glennYoungkinBirthPlace ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Glenn Youngkin's birth place
  dbr:Glenn_Youngkin dbo:birthPlace ?glennYoungkinBirthPlace .

  # Awardee of Vince Gilligan's awards and nominations
  OPTIONAL {
    dbr:List_of_awards_and_nominations_received_by_Vince_Gilligan dbo:awardRecipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }

  # Author of El Deafo who is American
  OPTIONAL {
    dbr:El_Deafo dbo:author ?author .
    ?author dbo:nationality dbr:United_States .
    ?author dbo:birthPlace ?authorBirthPlace .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Find awards given by the United States Congress
  ?award a dbo:Award ;
         dbo:givenBy dbr:United_States_Congress .

  # Find awardees of these awards
  OPTIONAL { ?award dbo:recipient ?awardee . }
}
```",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:decedentLocation dbr:Switzerland .
  
  OPTIONAL { 
    ?person dbo:nativePlace dbr:Grand_Duchy_of_Finland ;
            dbo:nativePlace dbr:Russian_Empire .
  }
  
  FILTER EXISTS {
    ?person dbo:nativePlace dbr:Grand_Duchy_of_Finland .
  }
  
  FILTER EXISTS {
    ?person dbo:nativePlace dbr:Russian_Empire .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:parent ?father .
  dbr:Isabella_of_Austria dbo:parent ?father .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Quincy_Adams_Gillmore dbo:awarded ?award .
  
  ?award dbo:recipient ?awardee .
  
  ?awardee dbo:memberOf ?force .
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query to find the writer of ""Always the Love Songs""
SELECT ?writer WHERE {
  ?album a dbo:Album ;
         foaf:name ""Always the Love Songs""@en .
  OPTIONAL { ?album dbo:creator ?writer . }
}

# Query to find the successor of the commander in the Russo-Polish War who was also a politician and office holder
SELECT DISTINCT ?successor WHERE {
  ?warEvent a dbo:MilitaryConflict ;
            foaf:name ""Russo-Polish War (1654–1667)""@en .
  
  ?commander dbo:commandedDuring ?warEvent ;
             dbo:officeHolder ?office .
  
  ?successor dbo:succeededBy ?commander ;
             dbo:officeHolder ?office .
}

# Query to find the television show or societal event associated with Jean Baptist, Comte d'Arco
SELECT DISTINCT ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  OPTIONAL { ?person dbo:commandedDuring ?warEvent . }
  OPTIONAL { ?person dbo:associatedWith ?event . }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?country WHERE {
  # Find Chiang Ching-kuo's child who is a politician
  dbr:Chiang_Ching-kuo dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician ;
                   dbo:birthPlace ?birthPlace .

  # Find the country associated with ""Cat Country"" novel
  dbr:Cat_Country dbo:setInLocation ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:child ?arthurChild .
  ?arthurChild dbo:parent ?commonParent .

  # Victor Stanley (Royal Navy officer)
  dbr:Victor_Stanley_(Royal_Navy_officer) dbo:child ?victorChild .
  ?victorChild dbo:parent ?commonParent .

  # Child of Frederick Stanley, 16th Earl of Derby
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .
  ?frederickChild dbo:parent ?grandchildParent .
  ?grandchildParent dbo:parent ?commonParent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?militaryForce WHERE {
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne""@en .
  
  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:participant ?bayne .

  ?war dbo:militaryForce ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Identify actors from those films
  ?film dbo:actor ?actor .

  # Find the spouse of one such actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Determine the birth name of Ann Sothern and find the corresponding person
  dbr:Ann_Sothern foaf:name ?birthName .
  
  # Find party members of the Republican Party (United States)
  ?partyMember a dbo:Person ;
               dbo:memberOfParty dbr:Republican_Party_(United_States) .

  # Connect these entities logically
  FILTER(?spouse = ?partyMember)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  dbr:Alexander_II,_Grand_Duke_of_Finland a dbo:Person ;
                                            dbo:nativePlace ?nativePlace .
  OPTIONAL { 
    dbr:Alexander_II,_Grand_Duke_of_Finland dbo:deathPlace ?deathPlace .
    FILTER(STRSTARTS(STR(?deathPlace), ""http://dbpedia.org/resource/Switzerland""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?leader WHERE {
  ?georgeSavage a dbo:Person ;
                foaf:name ""George Savage""@en .
  
  ?georgeSavage dbo:member ?party .
  
  ?party a dbo:PoliticalParty, dbo:Organisation .

  OPTIONAL { ?party dbo:leader ?leader . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joey B.""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:givenName ""Ackquille""@en .
  ?person foaf:familyName ""Pollard""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?artist a dbo:Artist ;
          foaf:name ?birthName .
  OPTIONAL { ?artist dbo:birthPlace ?place . }
  FILTER(CONTAINS(LCASE(STR(?place)), ""central region, ghana""))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Yurii_Khmelnytsky dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandfather WHERE {
  # Find Na'od's father
  ?naod a dbo:Person ;
        foaf:name ""Na'od""@en .
  
  ?naod dbo:parent ?father .

  # Find Na'od's grandfather (father of his father)
  ?father dbo:parent ?grandfather .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ;
               dbo:officeHolder ?office .
  
  # Reference to Lamont Cranston as The Shadow
  dbr:The_Shadow foaf:name ""Lamont Cranston""@en .

  # Find Dawit I's child
  dbr:Dawit_I dbo:child ?dawitChild .

  # Find the father of Dawit I's child
  ?dawitChild dbo:parent ?fatherOfDawitChild .
  
  FILTER(?grandfather = ?fatherOfDawitChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  # Identify William Tennant as a Royal Navy officer
  ?williamTennant a dbo:Person ;
                  foaf:name ""William Tennant""@en ;
                  dbo:nationality dbr:United_Kingdom ;
                  dbo:occupation dbr:Royal_Navy_officer .

  # Find the force he was part of
  ?williamTennant dbo:participatedIn ?force .

  # Identify the event and its commander
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commander ?commander ;
                                             dbo:war ?war .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander for the 30th (Cambridgeshire) Regiment of Foot
  OPTIONAL { 
    dbr:30th_Cambridgeshire_Regiment_of_Foot dbo:commander ?regimentCommander .
  }
  
  # Find the military force involved in the Battle of Fort Royal and its commander
  OPTIONAL {
    dbr:Battle_of_Fort_Royal dbo:militaryForce ?battleMilitaryForce ;
                             dbo:commander ?battleCommander .
  }

  # Join to find a common commander for both entities
  FILTER(?regimentCommander = ?battleCommander)
  
  BIND(?regimentCommander AS ?commander)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:GS9 dbo:member ?member .
  ?member a dbo:Artist ;
          dbo:musicalArtist true .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?manager WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:successor ?successorSeason .

  # Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason rdf:type dbo:FootballLeagueSeason ;
                   rdf:type dbo:SportsTeamSeason ;
                   rdf:type dbo:SportsSeason .

  # Find a player associated with this season
  ?player dbo:playsFor ?club .
  ?club dbo:member ?successorSeason .

  # Ensure the club is a sports club, organization, and soccer club
  ?club rdf:type dbo:SportsClub ;
        rdf:type dbo:Organization ;
        rdf:type dbo:SoccerClub .

  # Find the manager of this player
  ?player dbo:manager ?manager .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession (GROUP_CONCAT(?band; separator="", "") AS ?bands) WHERE {
  # Get Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?profession .

  # Get Bob Thompson's band(s)
  dbr:Bob_Thompson_musical_artist dbo:band ?band .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Bobby Shmurda's associated musical artist
  ?bobbyShmurda a dbo:Person ;
                foaf:name ""Bobby Shmurda""@en .
  
  OPTIONAL { 
    ?bobbyShmurda dbo:associatedMusicalArtist ?artist1 .
  }
  
  # Find Ackquille Jean Pollard (2 Chainz) band members who are musical artists
  ?ackquilleJeanPollard a dbo:Person ;
                        foaf:name ""Ackquille Jean Pollard""@en .
  
  OPTIONAL {
    ?ackquilleJeanPollard dbo:bandMember ?bandMember .
    FILTER(?bandMember != ?ackquilleJeanPollard)
    
    # Ensure the band member is also a musical artist
    ?bandMember a dbo:MusicalArtist .
  }
  
  # Find common entities between these two sets
  OPTIONAL { 
    ?artist1 = ?bandMember .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?writer WHERE {
  # Find Jean Baptist, Comte d'Arco and his commander in a war context
  ?jeanBaptist a dbo:Person ;
               foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  OPTIONAL { ?jeanBaptist dbo:commanderInWar ?war . }
  OPTIONAL { ?war dbo:depictedBy ?tvShow . }
  OPTIONAL { ?war dbo:societalEvent ?event . }

  # Find the commander
  ?commander a dbo:Person ;
             dbo:commanderInWar ?war .

  # Find the writer of ""Always the Love Songs""
  ?writer a dbo:Writer ;
          foaf:name ?name .
  
  OPTIONAL { ?writer dbo:work ?loveSongs . }
  FILTER(STRSTARTS(LCASE(?loveSongs), LCASE(""always the love songs"")))
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherParty WHERE {
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  
  ?sofia dbo:parent ?father .

  ?father dbo:partyAffiliation ?fatherParty .
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  dbr:1,000_Dollars_a_Minute dbo:actor ?actor .
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfMary ?childOfClaude ?parentOfChild WHERE {
  # Find parent of Mary Elphinstone, Lady Elphinstone
  OPTIONAL {
    ?mary a dbo:Person ;
          foaf:name ""Mary Elphinstone""@en .
    ?mary dbo:parent ?parentOfMary .
  }

  # Find child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  OPTIONAL {
    dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?childOfClaude .
    
    # Find parent of the child of Claude Bowes-Lyon
    ?childOfClaude dbo:parent ?parentOfChild .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?managerOfVfLBochum ?teamManagedByPerson WHERE {
  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?managerOfVfLBochum .

  # Identify Theodor Heuss's country (Germany)
  dbr:Theodor_Heuss dbo:nationality ?country .
  FILTER(?country = dbr:Germany)

  # Find a sports manager born on 1968-08-26 and native of Germany
  ?person a dbo:SportsManager ;
          foaf:birthday ""1968-08-26""^^xsd:date ;
          dbo:nationality ?country .

  # Ensure the person is from Germany
  FILTER(?country = dbr:Germany)

  # Find the team managed by this person
  OPTIONAL { ?person dbo:managerOfTeam ?teamManagedByPerson }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find the writer of George Ducas' work
  ?work dbo:author ?writer .
  ?work dbo:subject dbr:George_Ducas .

  # Ensure this writer is also the successor of Yurii Khmelnytsky
  ?succession dbo:successor ?writer ;
              dbo:predecessor dbr:Yurii_Khmelnytsky .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?singerProfession ?otherProfession ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson (musician)""@en .
  
  OPTIONAL { 
    ?person foaf:givenName ?firstName ;
            foaf:surname ?lastName .
    BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
  }
  
  OPTIONAL {
    ?person dbo:profession ?singerProfession .
    FILTER(CONTAINS(LCASE(STR(?singerProfession)), ""singer""))
  }

  OPTIONAL {
    ?person dbo:profession ?otherProfession .
    FILTER(!CONTAINS(LCASE(STR(?otherProfession)), ""singer""))
  }
  
  OPTIONAL {
    ?person dbo:bandMemberOf ?band .
  }
}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCharlesMartel ?grandchild WHERE {
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .
  
  dbr:Béla_IV_of_Hungary dbo:child ?childOfBelaIV .
  
  ?childOfBelaIV dbo:child ?grandchild .
  
  ?grandchild a dbo:Royalty .

  ?parentOfCharlesMartel dbo:child ?grandchild .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dawid Olejniczak""@en .
  ?person dbo:residence ?residence .
  FILTER (?residence rdf:type dbpedia-owl:Country)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Identify the war as a disease and societal event
  dbr:War a dbo:Disease ;
         dbo:socialEvent dbr:War .

  # Find Nicholas Eberstadt, author of ""Back to Work""
  ?author a dbo:Person ;
          foaf:name ""Nicholas Eberstadt""@en .
  ?work a dbo:Book ;
        foaf:name ""Back to Work""@en .
  ?author dbo:author ?work .

  # Identify Mary Louise Eberstadt, spouse of Nicholas and politician
  ?spouse a dbo:Person ;
          foaf:name ""Mary Louise Eberstadt""@en .
  ?author dbo:spouse ?spouse .
  ?spouse dbo:officeHolder ?office .

  # Find the work by Hillary Clinton that is a book
  dbr:Hillary_Clinton dbo:work ?clintonWork .
  ?clintonWork a dbo:Book ;
               foaf:name ""It Takes a Village""@en .

  # Commander in the war related to United States Navy
  ?commander a dbo:Person ;
             dbo:commanderOfMilitaryUnit ?unit .
  ?unit dbo:militaryBranch dbr:United_States_Navy ;
        dbo:participatesInWar dbr:War .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find the parent of Hon. Mary Frances Bowes-Lyon
  dbr:Mary_Frances_Bowes-Lyon dbo:parent ?parent .

  # Find the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .

  # Ensure this parent is a native of Middlesex
  ?parent dbo:nativePlace dbr:Middlesex .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  ?band a dbo:Band ;
        dbo:member ?uncleMurda ;
        dbo:location dbr:New_York_(state) .
  
  ?uncleMurda foaf:name ""Uncle Murda""@en .

  ?award dbo:recipient ?band ;
         a ?nativeType .

  FILTER(?nativeType IN (dbr:Region, dbr:American, dbr:State, dbr:Settlement))
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  dbr:Maria_I_of_Portugal a dbo:Person .
  
  OPTIONAL { 
    ?tvShow dbo:character ?commander ;
            dbo:portrayalOf dbr:Maria_I_of_Portugal .
    FILTER EXISTS { ?commander dbo:role ""Commander"" }
  }

  OPTIONAL {
    ?militaryConflict dbo:commanderInForce ?commander ;
                      dbo:relatedTo dbr:Maria_I_of_Portugal .
    FILTER EXISTS { ?commander dbo:role ""Commander"" }
  }
}
```",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace that is a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/Category:""))

  # Find the person who died at this birthplace
  ?decedent dbo:deathPlace ?birthPlace .

  # Ensure the decedent was native of Russian Empire
  ?decedent dbo:nativeCountry dbr:Russian_Empire .
}
```",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  ?party dbo:leader ?person .

  ?person dbo:nationality dbr:Spain .
  ?person dbo:residence dbr:Spain .
}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doug Beattie""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}

UNION

SELECT ?awardEntity WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Hamilton Cameron""@en .
  OPTIONAL { ?person dbo:award ?award .
             ?award dbo:recipient ?awardEntity . }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Bob Thompson""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  { 
    # Sal Mineo's death place
    OPTIONAL {
      dbr:Sal_Mineo dbo:deathPlace ?deathPlace .
      BIND(dbr:Sal_Mineo AS ?person)
    }
  } UNION {
    # Actor of ""Color Me Dead""
    OPTIONAL {
      dbr:Color_Me_Dead dbo:actor ?actor .
      ?actor dbo:deathPlace ?deathPlace .
      BIND(?actor AS ?person)
    }
  } UNION {
    # Reed Howes' death place
    OPTIONAL {
      dbr:Reed_Howes dbo:deathPlace ?deathPlace .
      BIND(dbr:Reed_Howes AS ?person)
    }
  }
}
```",4,4,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorPromiseMeDad ?authorPromisesToKeep WHERE {
  dbr:Promise_Me,_Dad dbo:author ?authorPromiseMeDad .
  dbr:Promises_to_Keep_(Biden_book) dbo:author ?authorPromisesToKeep .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writtenWork WHERE {
  ?biden a dbo:Person ;
         foaf:name ""Joe Biden""@en .
  
  ?biden dbo:work ?writtenWork .
  
  FILTER(?writtenWork a dbo:WrittenWork)
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyMember WHERE {
  # Find Harriette Arlene Lake and her spouse Roger Pryor
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake""@en .
  
  OPTIONAL { ?harriette dbo:spouse ?rogerPryor . }
  
  ?rogerPryor a dbo:Person ;
              foaf:name ""Roger Pryor (actor)""@en .

  # Find the ruling party in Central, Louisiana
  ?centralLocation a dbo:PopulatedPlace ;
                   dbo:locationCountry dbr:United_States ;
                   dbo:locationAdministrativeArea dbr:Louisiana ;
                   rdfs:label ""Central, Louisiana""@en .
  
  ?rulingParty dbo:member ?partyMember ;
               dbo:country dbr:United_States ;
               dbo:stateOrProvince dbr:Louisiana .

  # Ensure the party member is connected to Roger Pryor through marriage
  OPTIONAL { ?partyMember dbo:spouse ?rogerPryor }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find band members of The Alan Parsons Project
  OPTIONAL {
    dbr:The_Alan_Parsons_Project dbo:bandMember ?bandMember .
  }
  
  # Find associated musical artist of Billy Lyall
  OPTIONAL {
    dbr:Billy_Lyall dbo:associatedBand ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Juan Carlos Molina as a footballer
  dbr:Juan_Carlos_Molina_(footballer) dbo:player ?molinaPlayer .

  # Players in ""All or Nothing: Manchester City""
  dbr:All_or_Nothing:_Manchester_City dbo:player ?docuPlayer .
  
  # Ensure the player is both a soccer athlete and an actor
  ?docuPlayer a dbo:Soccer_Athlete ;
              dbo:actorInFilmOrTVSeries dbr:All_or_Nothing:_Manchester_City .

  # Find common players between Molina's team and the documentary actors
  FILTER(?molinaPlayer = ?docuPlayer)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?leaderOffice WHERE {
  # Part 1: Office of the Commander in Central African Republic Civil War
  {
    ?person a dbo:Person ;
            dbo:officeHolderOf ?war .
    ?war rdfs:label ""Central African Republic Civil War""@en .
    ?person dbo:politician true .
    OPTIONAL { ?person dbo:office ?commanderOffice . }
  }

  # Part 2: Office of the Leader of Conservative Republican Party (Spain)
  {
    ?leader a dbo:Person ;
            dbo:memberOfParty dbr:Conservative_Republican_Party_(Spain) .
    ?leader dbo:politician true .
    OPTIONAL { ?leader dbo:office ?leaderOffice . }
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .
  
  ?child dbo:parent ?father .
  
  ?father a dbo:Royalty ;
          foaf:name ""Philip I of Castile""@en .

}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Pablo Aimar's team
  dbr:Pablo_Aimar dbo:team ?team .

  # Find players in that team who are athletes and born on the specified date
  ?player a dbo:Athlete ;
          dbo:birthDate ""1955-02-22""^^xsd:date ;
          dbo:team ?team .
}
```",3,4,4,2,2,3,3,71,0,2,1,0.0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Konstantinos Ventiris""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find the television show ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga a dbo:TelevisionShow .

  # Find politicians associated with ""Ab Kya Hoga""
  ?politician dbo:profession dbo:Politician ;
              dbo:associatedWith dbr:Ab_Kya_Hoga .
  
  # Get the profession of this politician
  ?politicianProfession foaf:name ?professionName .

  # Find a movie that is also a television show featuring Richard E. Grant
  ?movie a dbo:Film, dbo:TelevisionShow ;
         dbo:starring dbr:Richard_E._Grant .
  
  # Get the actor of this movie who shares the same profession as the politician
  ?actor a dbo:Person ;
         foaf:name ?actorName ;
         dbo:profession ?actorProfession .

  FILTER(?actorProfession = ?politicianProfession)
}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album ;
         rdfs:label ""Nothing to Gein""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?shadow a dbo:VideoGame ;
          foaf:name ""The Shadow""@en .
  
  ?alterEgo dbo:characterName ""Lamont Cranston""@en ;
            dbo:alterEgoOf ?shadow .

  ?alterEgo dbo:occupation ?profession .
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find members of GS9 who are artists and musical artists
  ?gs9Member a dbo:MusicalArtist ;
             dbo:memberOfBand dbr:GS9 .
  
  # Identify the native region (Puerto Rico) related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativeRegion dbr:Puerto_Rico .
  
  # Find band members associated with these artists
  ?bandMember a dbo:MusicalArtist ;
              dbo:associatedBand ?gs9Member .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Chiang_Ching-kuo dbo:child ?child .
  ?child a dbo:Person ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  # Find Cora Sue Collins and her notable work
  ?collins a dbo:Person ;
           foaf:name ""Cora Sue Collins""@en .
  
  OPTIONAL { 
    ?work dbo:creator ?collins ;
          dbo:producer ?producer .
  }
  
  # Find producers of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Identify the professional identity associated with The Shadow
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  
  OPTIONAL {
    ?alterEgo a dbo:Person ;
              foaf:name ?professionalName .
    
    ?shadow dbo:alterEgo ?alterEgo .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?societalEvent WHERE {
  # Find George Ducas and his commander role
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas""@en .
  
  OPTIONAL { ?georgeDucas dbo:commander ?commander . }
  
  # Find the military force involved in the Battle of Vienna
  dbr:Battle_of_Vienna dbo:militaryForce ?militaryForce .
  
  # Find successor of Yurii Khmelnytsky
  ?yuriiKhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en .
  
  OPTIONAL { ?yuriiKhmelnytsky dbo:successor ?successor . }
  
  # Link commander to television show and societal event
  OPTIONAL { ?commander dbo:depicts ?tvShow } 
  OPTIONAL { ?commander dbo:societalEvent ?societalEvent }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
  
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?commander ;
       rdfs:label ?warLabel .

  FILTER(CONTAINS(LCASE(?warLabel), ""disease"") && CONTAINS(LCASE(?warLabel), ""societal event""))

  OPTIONAL { ?owner dbo:commander ?commander . }
}
```",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?greatGreatGrandChild WHERE {
  dbr:Aleksander_of_Württemberg dbo:child ?child1 .
  ?child1 dbo:child ?child2 .
  ?child2 dbo:child ?greatGreatGrandChild .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?mayor WHERE {
  # Find territories administered from Copenhagen
  ?copenhagen a dbo:City ;
              foaf:name ""Copenhagen""@en .
  
  OPTIONAL { 
    ?administeredTerritory dbo:administrativeCenter ?copenhagen ;
                           foaf:name ?territoryName .
    
    FILTER(?territoryName != ""Copenhagen"")
  }
  
  # Find information about the mayor related to Duchy of Schleswig
  dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child dbr:Peter_IV_of_Aragon .
  dbr:Peter_IV_of_Aragon foaf:name ?realName .
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Little Hat Jones""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",1,2,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?associatedArtist WHERE {
  # Find Kim Wilson's band
  dbr:Kim_Wilson dbo:band ?band .
  ?band foaf:name ?bandName .

  # Find Nick Curran's birth name or persona
  dbr:Nick_Curran foaf:name ?nickCurranName .
  
  # Find an associated musical artist with the same real name as Nick Curran
  ?artist a dbo:MusicalArtist ;
          foaf:name ?nickCurranName .
  
  BIND(?artist AS ?associatedArtist)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Minye Kyawswa's child
  ?minyeChild dbo:childOf dbr:Minye_Kyawswa .

  # Parent of Minye Kyawswa's child (i.e., Minye Kyawswa's parent)
  ?parent a dbo:Person ;
          dbo:child ?minyeChild .

  # Child of the parent (i.e., grandchild of Minye Kyawswa)
  ?grandchild dbo:childOf ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfRoyalFather WHERE {
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  ?maria dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:father ?royalFather .
    
    FILTER EXISTS { ?royalFather dbo:royalty ?isRoyalty }
    
    OPTIONAL {
      ?royalFather dbo:parent ?parentOfRoyalFather .
    }
  }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?author a dbo:Person ;
          dbo:dateOfDeath ?deathDate ;
          dbo:parent dbr:Kate_Dimbleby .
  
  FILTER(?deathDate <= ""2020-06-18""^^xsd:date)
  
  ?author dbo:artist true .
  ?author dbo:musicalArtist true .

  ?work a (dbo:Film|dbo:TelevisionShow) ;
        dbo:creator ?author .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:actor ?herbert .
  
  ?herbert foaf:name ""Herschel Bernardi""@en .

  ?movie dbo:actor ?actor .

  ?photographer a dbo:Photographer ;
                dbo:parent ?parentOfPhotographer .

  OPTIONAL { ?parentOfPhotographer foaf:name ?name }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,3,1,0.4,0.6666666666666666,0.5
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Emilia Yancheva Valeva""@en .
  
  OPTIONAL { ?person dbo:birthName ""Emilia Yancheva Valeva""@en . }
  
  ?person dbo:profession ?profession .

  FILTER(?profession IN (dbo:Singer, dbo:BandMember))
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Sal_Mineo dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  FILTER(?birthPlace a dbo:Settlement)
  
  OPTIONAL { 
    ?birthPlace dbo:country dbr:United_States .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Akaler_Shandhaney dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,4,0,5,1.0,0.4444444444444444,0.6153846153846153
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for the spouse of Hillary Clinton
SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hillary Clinton""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}

UNION

# Query for the commander in Third Taiwan Strait Crisis
SELECT ?commander WHERE {
  ?event dbp:title ""Third Taiwan Strait Crisis""@en ;
         dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer WHERE {
  ?person a dbo:Person ;
          foaf:name ""Steven Kapur""@en .
  
  ?work dbo:creator ?person ;
        a dbo:MusicalWork .

  OPTIONAL { ?work dbo:writer ?writer . }
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Constance of Burgundy's spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Child of the spouse who is royalty and father of William II of Sicily
  ?spouseChild a dbo:Person ;
               dbo:parent ?spouse ;
               rdf:type dbo:Royalty ;
               dbo:childOfParent ?parentOfRogerIII .
  
  ?spouseChild dbo:child dbr:William_II_of_Sicily .

  # Parent of Roger III, Duke of Apulia
  ?parentOfRogerIII dbo:child dbr:Roger_III,_Duke_of_Apulia .

  # Ensure the child is royalty and matches all conditions
  FILTER(?spouseChild = ?child)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?parentOfPhotographer ?parentOfChild WHERE {
  # Find actor of the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:actor ?actor .
  
  # Identify Allan Arbus's child
  dbr:Allan_Arbus dbo:child ?allanChild .

  # Find the parent of Allan Arbus's child
  ?allanChild dbo:parent ?parentOfChild .

  # Identify a professional photographer related to Allan Arbus
  ?photographer a dbo:Photographer ;
                foaf:name ?photographerName .
  
  # Find the parent of this photographer
  ?photographerParent dbo:child ?photographer ;
                      foaf:name ?photographerName .

  OPTIONAL { ?parentOfChild foaf:name ?parentName }
  OPTIONAL { ?photographerParent foaf:name ?photographerParentName }

  FILTER(?actor = ?parentOfPhotographer)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  dbr:Joe_Biden a dbo:Person ;
                foaf:name ""Joe Biden""@en .
  
  ?work dbo:author dbr:Joe_Biden ;
        a dbo:Work, dbo:WrittenWork, dbo:AmericanThing, dbo:Book .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award ?award .
  ?award rdfs:label ""Commander of the Order of the British Empire""@en .
}
```",1,1,2,1,1,3,2,20,838,63,15,0.93007769145394,0.9824150058616647,0.9555302166476626
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  ?person dbo:associatedWith ?war .
  
  ?war a dbo:War ;
       dbo:genre/dbo:TelevisionShow ;
       dbo:societalEvent .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant WHERE {
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  ?person dbo:residence ?residence .

  ?residence rdf:type dbo:Country .

  ?residence dbo:resident ?tenant .
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Find members of Filthy Friends
  dbr:Filthy_Friends dbo:bandMember ?member .

  # Ensure the member is also associated with Mark Eitzel's bands or projects
  OPTIONAL { 
    ?eitzelBand dbo:associatedBandMember ?member .
    FILTER(STRSTARTS(STR(?eitzelBand), ""http://dbpedia.org/resource/"") && STR(?eitzelBand) != ""http://dbpedia.org/resource/Filthy_Friends"")
  }

  # Identify Mark Eitzel's bands or projects
  dbr:Mark_Eitzel dbo:associatedBandMember ?eitzelBand .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  {
    # Find the birthplace of Cece Bell, author of ""El Deafo""
    ?author a dbo:Writer ;
            foaf:name ""Cece Bell""@en ;
            dbo:nationality dbr:United_States .
    OPTIONAL { ?author dbo:work ?elDeafo }
    FILTER EXISTS {
      ?elDeafo rdfs:label ""El Deafo""@en
    }
    ?author dbo:birthPlace ?birthPlace .
  } UNION {
    # Find the birthplace of Glenn Youngkin
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Faisal_bin_Hussein dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:Royalty . }
  
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession1 ?profession2 ?bandSam ?bandRobert WHERE {
  # Sam Concepcion's professions and band membership
  dbr:Sam_Concepcion dbo:profession ?profession1 .
  OPTIONAL { dbr:Sam_Concepcion dbo:profession ?profession2 . }
  OPTIONAL { dbr:Sam_Concepcion dbo:bandMember ?bandSam . }

  # Robert Lamar Thompson as a musical artist and his band
  dbr:Robert_Lamar_Thompson a dbo:MusicalArtist .
  OPTIONAL { dbr:Robert_Lamar_Thompson dbo:bandMember ?bandRobert . }
}
```",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?deceased a dbo:Person ;
            dbo:deathPlace dbr:Taipei .
  
  ?child dbo:child ?deceased ;
         rdf:type dbo:Politician .

  ?child dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,17,5,0.0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:Hartlepool_United_F.C. dbo:manager ?manager .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Toyotomi Hidenaga's wars
  ?hidenaga a dbo:Person ;
            foaf:name ""Toyotomi Hidenaga""@en .
  OPTIONAL { ?hidenaga dbo:nationality dbr:Japan . }
  OPTIONAL { ?hidenaga dbo:participatedIn ?warHidenaga . }

  # Toyotomi Hideyoshi's child
  ?hideyoshi a dbo:Person ;
             foaf:name ""Toyotomi Hideyoshi""@en .
  OPTIONAL { ?child dbo:childOf ?hideyoshi ;
                  dbo:participatedIn ?warChild . }
  
  # Find common wars
  FILTER(?warHidenaga = ?warChild)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  ?season a dbo:SoccerSeason ;
          dbo:team dbr:SBV_Vitesse ;
          dbo:manager ?manager .
  
  FILTER(year(?season) = 2020 || year(?season) = 2021)

  # Manager of VfL Bochum
  OPTIONAL { ?bochumManager a dbo:SoccerSeason ;
                           dbo:team dbr:VfL_Bochum ;
                           dbo:manager ?manager . }

  # Native of West Germany
  ?person a dbo:Person ;
          foaf:name ?name .
  
  FILTER(?manager = ?person)
  OPTIONAL { ?person dbo:nationality dbr:West_Germany }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commanderInWar ?successorCommander WHERE {
  ?jeanBaptist a dbo:Person ;
               foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  OPTIONAL { ?jeanBaptist dbo:role ?commanderRole . }
  FILTER(?commanderRole = dbo:MilitaryCommander)
  
  ?war a dbo:War ;
       dbo:hasParticipant ?jeanBaptist .
  
  OPTIONAL { ?war foaf:name ?warName .
             FILTER(CONTAINS(LCASE(STR(?warName)), ""television show"") || CONTAINS(LCASE(STR(?warName)), ""societal event"")) }
  
  ?michałKazimierzPac a dbo:Person ;
                     foaf:name ""Michał Kazimierz Pac""@en .
  
  OPTIONAL { ?michałKazimierzPac dbo:role ?forceRole . }
  FILTER(?forceRole = dbo:MilitaryConflict)
  
  OPTIONAL { ?michałKazimierzPac dbo:hasSuccessor ?successorCommander . }
  
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas""@en .
  
  OPTIONAL { ?jeanBaptist dbo:reference ?georgeDucas . }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award dbr:Australian_Laureate_Fellowship .
  ?person dbo:country dbr:Australia .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""scientist""))
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?janetProducer ?johnnyProducer WHERE {
  # Find Janet Gaynor's notable work and its producer
  OPTIONAL {
    dbr:Janet_Gaynor dbo:actor ?work .
    ?work dbo:producer ?janetProducer .
  }

  # Find the actor who played Johnny Doughboy and his producers
  OPTIONAL {
    ?johnnyRole dbo:character ""Johnny Doughboy"" ;
                dbo:actor ?johnnyActor .
    ?johnnyActor dbo:production ?johnnyWork .
    ?johnnyWork dbo:producer ?johnnyProducer .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:William_II_of_Sicily dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Janusz Kamiński""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team ?successor WHERE {
  # Find Thomas Letsch and his native country
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en ;
          dbo:nationality dbr:Germany .

  # Find the team managed by Thomas Letsch
  ?letsch dbo:managerOf ?team .
  
  # Ensure the manager is from West Germany (historical context)
  FILTER(?letsch dbo:nationality dbr:West_Germany)

  # Find the VfL Bochum 2006–07 season and its successor
  ?vflBochumSeason a dbo:SoccerClubSeason ;
                   dbo:sportTeam dbr:VfL_Bochum ;
                   dbo:season ""2006–07""@en .

  ?successor dbo:predecessor ?vflBochumSeason .
  
  # Link the team managed by Thomas Letsch to the successor
  ?team dbo:season ?successor .
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?book a dbo:Book ;
        foaf:name ""Smartbomb""@en .
  
  ?author dbo:author ?book .

  # Find movies related to this author
  ?movie dbo:writer ?author ;
         dbo:starring ?actor .

  # Retrieve professionals and actors involved in these movies
  OPTIONAL { ?movie dbo:professionals ?professional }
}
```",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find Carl, Duke of Württemberg's predecessor
  dbr:Claude_Frederic_Carl,_Duke_of_W%C3%BCrttemberg dbo:predecessor ?predecessor .

  # Find Albrecht, Duke of Württemberg's child
  OPTIONAL { 
    dbr:Albrecht_I_Duke_of_W%C3%BCrttemberg dbo:child ?albrechtsChild .
    
    # Find the child of Albrecht's child (grandchild)
    OPTIONAL {
      ?albrechtsChild dbo:child ?albrechtsGrandchild .
      
      # Ensure this grandchild is a royalty
      FILTER(?albrechtsGrandchild a dbo:Monarch || ?albrechtsGrandchild a dbo:RoyalFamilyMember)
    }
  }

  # Find the parent of Archduchess Margarete Sophie's parent
  OPTIONAL {
    dbr:Archduchess_Margarete_Sophie_of_Austria dbo:parent ?margaretesParent .
    
    OPTIONAL { 
      ?margaretesParent dbo:parent ?margaretesGrandparent .
      
      # Find the child of this grandparent
      OPTIONAL {
        ?margaretesGrandparent dbo:child ?grandparentChild .
        
        # Ensure this entity is a royalty
        FILTER(?grandparentChild a dbo:Monarch || ?grandparentChild a dbo:RoyalFamilyMember)
      }
    }
  }

  # Match the predecessor with the grandchild or grandparent's child if they are royalty
  FILTER(?predecessor = ?albrechtsGrandchild || ?predecessor = ?grandparentChild)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:parent ?father .
  dbr:Isabella_of_Austria dbo:parent ?father .
  ?father dbo:child dbr:Maximilian_I,_Holy_Roman_Emperor .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttle dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the predecessor of Carl, Duke of Württemberg
  dbr:C._of_Württemberg dbo:predecessor ?predecessor .

  # Identify Alexander of Württemberg (1804-1881)
  dbr:Aleksander_I_of_Württemberg a dbo:Person ;
                                  dbo:birthDate ""1804""^^xsd:gYear ;
                                  dbo:deathDate ""1881""^^xsd:gYear .

  # Find the child of Alexander
  ?child1 dbo:parent dbr:Aleksander_I_of_Württemberg .
  
  # Find the grandchild (child of the child) of Alexander
  ?grandChild dbo:parent ?child1 .

  # Find the great-grandchild (child of the grandchild) of Alexander
  ?greatGrandChild dbo:parent ?grandChild .

  # Ensure that the predecessor is also a third-generation descendant of Alexander
  FILTER(?predecessor = ?greatGrandChild)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Ferdinand Albert II, Duke of Brunswick-Lüneburg and his child who is spouse of Prince Augustus William of Prussia
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?spouse .
  
  # Spouse of Prince Augustus William of Prussia
  ?spouse foaf:name ""Princess Elisabeth Albertine of Saxe-Hildburghausen""@en ;
          dbo:spouse dbr:Prince_Augustus_William_of_Prussia .

  # Child of the spouse (Elisabeth Albertine)
  ?spouse dbo:child ?child .
  
  # Check if this child's parent is royalty
  OPTIONAL { ?parent a dbo:RoyalFamily ;
                   dbo:child ?child . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Margarete_Sophie_of_Austria dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:successor* dbr:Carl,_Duke_of_Württemberg .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?associatedArtist WHERE {
  { 
    ?snoop a dbo:Person ;
           foaf:name ""Snoop Dogg""@en .
    OPTIONAL { ?snoop dbo:associatedMusicalArtist ?associatedArtist . }
  } UNION {
    ?shaggy a dbo:Person ;
            foaf:name ""Shaggy (musician)""@en .
    OPTIONAL { ?shaggy dbo:associatedMusicalArtist ?associatedArtist . }
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?leader dbo:country dbr:West_Germany .
  ?leader dbo:positionTitle ""Chancellor""@en .
  ?leader dbo:administrations ?administration .
  ?administration a dbo:Government ;
                  dbo:country dbr:Germany .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?role WHERE {
  dbr:Juan_Carlos_Molina_(footballer) a dbo:Person ;
                                     foaf:name ""Juan Carlos Molina""@en .
  OPTIONAL { dbr:Juan_Carlos_Molina_(footballer) dbo:playerRole ?role . }
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?herchelBernardi, ?commonParent .

  ?herchelBernardi foaf:name ""Herschel Bernardi""@en .
  
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  OPTIONAL { ?mariclare dbo:spouse ?spouse . }
  OPTIONAL { ?spouseChild dbo:parent ?spouse ;
                        dbo:child ?spouseChild . }

  ?commonParent dbo:child ?amyArbus, ?spouseChild .

  ?amyArbus foaf:name ""Amy Arbus""@en .
  
  FILTER(?herchelBernardi != ?commonParent)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttle dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:spouse dbr:Prince_Augustus_William_of_Prussia .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find Karl Gustav von Baggovut's DBpedia resource
  dbr:Karl_Gustav_von_Baggovut a dbo:MilitaryPerson ;
                               dbo:participatedIn ?baggovutWar .

  # Find wars involving the Russian Empire
  dbr:Russian_Empire dbo:participatedIn ?russianEmpireWar .

  # Filter for common wars
  FILTER(?baggovutWar = ?russianEmpireWar)
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,48,0,0,1.0,1.0,1.0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actor who played Lamont Cranston (The Shadow)
  ?shadowRole a dbo:FilmCharacter ;
              dbo:name ""Lamont Cranston""@en .
  
  ?actor dbo:role ?shadowRole .

  # Actor in the film ATL
  dbr:ATL dbo:starring ?atlActor .
  
  FILTER(?actor = ?atlActor)
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?birthPlace WHERE {
  # Vince Gilligan's award awardee birthplace
  OPTIONAL {
    dbr:Vince_Gilligan dbo:award dbr:Emmy_Award .
    ?awardee dbo:recipient dbr:Emmy_Award ;
            dbo:birthPlace ?birthPlace .
  }
  
  # Cece Bell's birthplace
  OPTIONAL {
    dbr:Cecily_Bell dbo:birthPlace ?birthPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  dbr:Kiyosu dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Identify T.I.'s songs and albums
  ?album a dbo:Album ;
         dbo:artist dbr:T.I. .

  ?song a dbo:Songs ;
        dbo:lyricsBy dbr:T.I. ;
        dbo:partOfAlbum ?album .

  # Find actors associated with these albums (e.g., featured artists)
  ?actor foaf:name ?actorName .
  OPTIONAL { ?album dbo:featuredArtist ?actor . }

  # Identify movies where these actors have acted
  ?movie a dbo:Film ;
         dbo:starring ?actor .

  # Find another actor in the same movie
  ?coActor a dbo:Person ;
           dbo:starring ?movie .

  # Retrieve the professional connected through this chain
  OPTIONAL { ?coActor foaf:name ?professionalName }
  
  FILTER(?actor != ?coActor)
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional (IF(BOUND(?actor), ""Actor"", IF(BOUND(?director), ""Director"", ""Unknown"")) AS ?role) 
       ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:actor ?actor .
  OPTIONAL { dbr:A_Star_Is_Born_(1937_film) dbo:director ?director . }
  OPTIONAL { dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?native WHERE {
  ?williamGayner a dbo:Person ;
                  foaf:name ""William Gayner""@en .
  
  ?williamGayner dbo:birthPlace ?birthplace .

  ?birthplace rdf:type dbo:Region, dbo:Country .

  ?maryFrancesBowesLyon a dbo:Person ;
                        foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .

  ?maryFrancesBowesLyon dbo:parent ?parent .

  ?native dbo:nativePlace ?birthplace .
  
  FILTER(?parent = ?native)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Identify Napoleon Bonaparte
  dbr:Napoleon_Bonaparte a dbo:Person ;
                         dbo:awardeeOf dbr:Knight_Commander_of_the_Order_of_the_Bath ;
                         dbo:commanderInMilitaryAction dbr:French_campaign_in_Egypt_and_Syria .

  # Find events involving Napoleon Bonaparte
  ?event dbo:participant dbr:Napoleon_Bonaparte ;
         a dbo:Event, dbo:SocietalEvent .

  # Retrieve the military force associated with these events
  ?event dbo:militaryForce ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?actor a dbo:Actor ;
         dbo:starring dbr:Johnny_Doughboy .

  ?notableWork dbo:starring ?actor .

  ?notableWork dbo:producer ?producer .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Faisal_bin_Hussein dbo:child ?child .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  # Find Vince Gilligan's DBpedia resource
  dbr:Vince_Gilligan a dbo:Person .

  # Get awards and nominations related to Vince Gilligan
  ?awardOrNomination dbo:recipient dbr:Vince_Gilligan ;
                     a dbo:Award .

  # Identify awardees of those awards or nominations
  ?otherAwardee dbo:recipient ?awardOrNomination ;
               a dbo:Person .

  # Get the birthplace of these awardees
  ?otherAwardee dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?successor WHERE {
  ?war rdf:type dbo:Battle ;
       rdfs:label ""Russo-Polish War (1654–1667)""@en .
  
  ?war dbo:commander ?commander .
  
  ?commander dbo:successor ?successor .
  
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder ?office .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?work a dbo:Film ; 
        foaf:name ""Dispatches from Elsewhere""@en .
  
  ?work dbo:actor ?actor .

  ?actor a dbo:Person ;
         foaf:profession ?profession .

  FILTER(?profession = <http://dbpedia.org/resource/Actor>)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Koichirō""@en .
  ?person dbo:birthName ""Koichirō""@en .
  ?person dbo:foughtWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nick Curran""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlaceVinceGilligan WHERE {
  ?vinceGilligan a dbo:Person ;
                 foaf:name ""Vince Gilligan""@en .
  OPTIONAL { ?vinceGilligan dbo:birthPlace ?birthPlaceVinceGilligan . }
}

UNION

SELECT ?birthPlaceCeceBell WHERE {
  ?ceceBell a dbo:Person ;
            foaf:name ""Cece Bell""@en .
  OPTIONAL { ?ceceBell dbo:birthPlace ?birthPlaceCeceBell . }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Roger Pryor""@en .
  FILTER EXISTS { ?person dbo:occupation dbo:Actor . }
  
  OPTIONAL { ?person dbo:spouse ?spouse . }

  # Assuming we need to find the ruling party in Central, Louisiana
  OPTIONAL {
    ?location a dbo:Place ;
              foaf:name ""Central, Louisiana""@en .
    
    ?party dbo:locatedIn ?location ;
           dbo:member ?rulingMember .

    FILTER(?person = ?rulingMember)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bobby Shmurda""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:politician true ;
          dbo:memberOf dbr:North_Carolina_Air_National_Guard .

  ?work dbo:author ?person ;
        a dbo:Work, dbo:WrittenWork, dbo:Book ;
        dbo:country dbr:United_States .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country WHERE {
  # Theodor Heuss's nationality
  dbr:Theodor_Heuss dbo:nationality ?heussCountry .

  # Manager of VfL Bochum and their nationality
  ?manager a dbo:Person ;
           dbo:position ""Manager""@en ;
           dbo:team dbr:VfL_Bochum .
  ?manager dbo:nationality ?bochumManagerCountry .

  # Find the common country
  FILTER(?heussCountry = ?bochumManagerCountry)
  BIND(?heussCountry AS ?country)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  
  ?deathPlace a dbo:Settlement ;
              dbo:rulingParty ?party .

  FILTER(?party != dbr:None)
  
  ?party a dbo:PoliticalParty, dbo:Organization .
}
```",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?referenceToFather ?grandfather WHERE {
  # Find child of Baeda Maryam I
  ?child1 dbo:parent dbr:Baeda_Maryam_I ;
          dbo:parent ?father1 .

  # Find child of Dawit I
  ?child2 dbo:parent dbr:Dawit_I ;
          dbo:parent ?father2 .

  # Ensure the fathers are royalty and office holders
  FILTER(?father1 = ?father2)
  FILTER((?father1 a dbo:Monarch) && (?father1 a dbo:OfficeHolder))

  # Get reference to this father
  ?referenceToFather dbr:isReferenceOf ?father1 .

  # Find the grandfather (father of the father)
  ?father1 dbo:parent ?grandfather .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?juanCarlosTeam ?pabloAimarTeam WHERE {
  # Query for Juan Carlos Molina's team
  OPTIONAL { 
    dbr:Juan_Carlos_Molina dbo:team ?juanCarlosTeam .
  }
  
  # Query for Pablo Aimar's team
  OPTIONAL { 
    dbr:Pablo_Aimar dbo:team ?pabloAimarTeam .
  }
}
```",2,2,3,1,2,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yandamuri Veerendranath""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,3,0,0,1.0,1.0,1.0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather ?childOfPredecessor WHERE {
  # Step 1: Find Charles I of Hungary's father and his parent who is royalty
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  OPTIONAL { 
    ?father dbo:parent ?parentOfFather .
    FILTER(?parentOfFather a dbo:Monarch) # Ensure the parent is royalty
  }
  
  # Step 2: Find Stephen V of Hungary's predecessor and his child who is royalty
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  OPTIONAL { 
    ?predecessor dbo:child ?childOfPredecessor .
    FILTER(?childOfPredecessor a dbo:Monarch) # Ensure the child is royalty
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Brian_Kemp dbo:positionHeld ?position .
  ?position dbo:office ?office .
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .
  ?child rdf:type dbo:Royalty .

  FILTER EXISTS { ?child dbo:parentOf dbr:Isabella_of_Austria . }
  FILTER EXISTS { ?child dbo:parentOf dbr:Philip_I_of_Castile . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Robert Lamar Thompson""@en .
  
  OPTIONAL { 
    ?person dbo:profession ?profession .
    FILTER (
      (?profession = dbo:Singer) ||
      (?profession = dbo:BandMember)
    )
  }
  
  ?person a dbo:MusicalArtist .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceOfFortRoyal ?eventForCalder WHERE {
  # Military force involved in the Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:participatedIn ?militaryForceOfFortRoyal .

  # Event that is both societal and military, involving Robert Calder
  dbr:Robert_Calder dbo:participatedIn ?eventForCalder .
  
  FILTER EXISTS { ?eventForCalder a dbo:MilitaryEvent }
  FILTER EXISTS { ?eventForCalder a dbo:SocietalEvent }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find Carl, Duke of Württemberg's predecessor
  dbr:C._of_W%C3%BCrttemberg dbo:predecessor ?predecessor .

  # Find Duke Philipp of Württemberg's child and that child's child (grandchild)
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?child .
  ?child dbo:child ?grandchild .

  # Check if the predecessor is the grandchild
  FILTER(?predecessor = ?grandchild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  dbr:ATL dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
  OPTIONAL { ?actor rdf:type ?profession . }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander WHERE {
  # Query to find the author of ""Back to Work (book)""
  dbr:Back_to_Work_(book) dbo:author ?author .

  # Query to find a commander in a war that is also considered a disease and societal event
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryForce dbr:United_States_Navy .
  
  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
  
  # Filter for wars that are also diseases or societal events (e.g., Spanish Flu, World War I)
  FILTER(?war IN (dbr:Spanish_Flu_pandemic, dbr:World_War_I))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?shadowCreation ?bobThompsonRole WHERE {
  # Find the creation by Walter B. Gibson, which is ""The Shadow""
  dbr:Walter_B._Gibson dbo:creation ?shadowCreation .
  FILTER(CONTAINS(LCASE(STR(?shadowCreation)), ""the shadow""))

  # Find Bob Thompson's role as a singer
  dbr:Bob_Thompson_(musician) foaf:profession ?bobThompsonRole .
  FILTER(CONTAINS(LCASE(STR(?bobThompsonRole)), ""singer""))
}
```",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  dbr:Lasso_the_Moon a dbo:Album .
  
  OPTIONAL { 
    ?albumRelatedFilmOrWork dbo:relatedWork dbr:Lasso_the_Moon ;
                            a (dbo:Film|dbo:CreativeWork) .
    
    ?albumRelatedFilmOrWork dbo:starring ?actor .
  }
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify the parent of Archduke Charles Joseph of Austria
  dbr:Charles_Joseph_of_Austria dbo:child ?parent .

  # Step 2: Find the child of this parent
  ?parent dbo:child ?child .

  # Step 3: Determine the father of this child
  ?child dbo:father ?commander .

  # Step 4: Check if this person was a commander in the Thirty Years' War
  OPTIONAL { ?commander dbo:commanderInWar dbr:Thirty_Years'_War . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:politician true ;
          dbo:residence dbr:Chappaqua,_New_York .
  
  ?work a dbo:WrittenWork, dbo:Book ;
        dbo:author ?person .

}
```",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfShelbyOaks ?actorOfAlbum ?professionalInAlterEgo WHERE {
  # Actor of Shelby Oaks
  OPTIONAL { 
    dbr:Shelby_Oaks dbo:actor ?actorOfShelbyOaks .
  }

  # Actor of the album of What You Know (T.I. song)
  OPTIONAL {
    dbr:""What_You_Know_(song)"" dbo:album ?album .
    ?album dbo:actor ?actorOfAlbum .
  }
  
  # Professional in the alter ego of The Golden Master series
  OPTIONAL {
    dbr:The_Golden_Master_series dbo:alterEgo ?alterEgo .
    ?alterEgo dbo:professional ?professionalInAlterEgo .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Repulse a dbo:MilitaryConflict ;
                                              dbo:commander ?commander .
}
```",2,4,3,2,1,3,2,20,6,0,0,1.0,1.0,1.0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  # Find Rainer Weiss and his awards
  dbr:Rainer_Weiss dbo:award ?award .

  # Find the show related to this award
  ?award dbo:hostedBy ?show .

  # Ensure the host is an educational institution
  ?show a dbo:EducationalInstitution .
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor ?childOfParent WHERE {
  # Part 1: Find predecessor of Myat Hpone Pyo
  dbr:Myat_Hpone_Pyo dbo:predecessor ?predecessor .

  # Part 2: Trace lineage from Minye Kyawswa
  dbr:Minye_Kyawswa dbo:child ?child .
  ?child dbo:parent ?grandParent .
  ?grandParent dbo:child ?childOfParent .
}
```",4,4,5,3,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:1000_Dollars_a_Minute dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?show WHERE {
  ?person a dbo:Person ;
          foaf:name ""Afeez Oyetolo""@en .
  
  ?show a dbo:Film ;
        dbo:starring ?person .

}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession (GROUP_CONCAT(?associatedArtist; separator="", "") AS ?artists) WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  OPTIONAL { ?rodArgent dbo:profession ?profession . }

  # Find Stonebwoy and his associated musical artists
  ?stonebwoy a dbo:Person ;
              foaf:name ""Stonebwoy""@en .
  OPTIONAL {
    ?association dbo:associatedBandMember ?stonebwoy ;
                 dbo:bandMember ?associatedArtist .
    FILTER(?associatedArtist != ?stonebwoy)
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Dorothea_of_Lorraine dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?clapton a dbo:Person ;
           foaf:name ""Eric Clapton""@en .
  ?clapton dbo:bandMember ?band .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?artistFromGhana WHERE {
  # Find associated artist of Pacely
  OPTIONAL { 
    ?pacely a dbo:MusicalArtist ;
            foaf:name ""Pacely""@en .
    ?pacely dbo:associatedWith ?associatedArtist .
  }

  # Find an artist born in Central Region, Ghana
  OPTIONAL {
    ?artistFromGhana a dbo:Person ;
                     dbo:birthPlace dbr:Central_Region,_Ghana ;
                     foaf:name ?name .
    FILTER EXISTS { ?artistFromGhana dbo:occupation dbo:Artist }
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?spouse WHERE {
  # Part 1: Find the actor of ""Always"" (1989 film)
  dbr:Always_(film) dbo:starring ?actor .

  # Part 2: Find the spouse of the awardee from Janusz Kamiński's awards
  OPTIONAL {
    dbr:Janusz_Kamiński dbo:award ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:spouse ?spouse .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?janusz a dbo:Person ;
          foaf:name ""Janusz Kamiński""@en .
  
  # Ensure Janusz Kamiński is linked to awards
  ?awardList dbo:recipient ?janusz .

  # Ensure Janusz Kamiński acted in Paradise (2013 film)
  dbr:Paradise_(2013_film) dbo:starring ?janusz .

  OPTIONAL { ?janusz dbo:spouse ?spouse . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?medalOfHonorWar ?gillmoreMedalForce WHERE {
  ?person a dbo:Person ;
          dbo:honoredWith dbr:Medal_of_Honor ;
          dbo:honoredWith dbr:Gillmore_Medal .
  
  OPTIONAL { 
    ?medalOfHonorAward dbo:war ?medalOfHonorWar .
    FILTER(?medalOfHonorAward = ?person)
  }
  
  OPTIONAL {
    ?gillmoreMedalAward dbo:force ?gillmoreMedalForce .
    FILTER(?gillmoreMedalAward = ?person)
  }

  ?location a dbo:Place ;
            dbo:locatedIn dbr:Charleston,_South_Carolina ;
            dbo:resident ?person .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?force WHERE {
  {
    ?edmund a dbo:Person ;
            foaf:name ""Edmund Hakewill-Smith""@en .
    ?award dbo:recipient ?edmund .
    ?award dbo:militaryUnit ?force .
  }
  UNION
  {
    ?tom a dbo:Person ;
         foaf:name ""Tom Phillips (Royal Navy officer)""@en .
    ?award dbo:recipient ?tom .
    ?award dbo:militaryUnit ?force .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chennupati Jagadish""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Athlete ;
          dbo:birthDate ""1955-02-22""^^xsd:date .
}
```",1,2,2,1,1,3,3,71,10,0,0,1.0,1.0,1.0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:The_Matrix dbo:producer ?producer .
}
```",2,2,3,2,1,3,2,20,1,0,10671,1.0,9.37031484257871e-05,0.00018738873793684997
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dawitIResource ?child WHERE {
  dbr:Dawit_I a dbo:Person ;
              rdfs:label ""Dawit I""@en .
  
  OPTIONAL { dbr:Dawit_I dbo:child ?child . }
}
```",2,2,3,1,2,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  dbr:Hong_Kong_C a dbo:SoccerClub ;
                  dbo:manager ?manager .
  
  ?manager a dbo:SportsManager ;
           dbo:sportsTeamManaged dbr:Hong_Kong_C .

  OPTIONAL { 
    ?manager a dbo:SoccerManager ;
             dbo:sportTeamManaged dbr:Hong_Kong_C .
  }
}
```",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?movie WHERE {
  ?book dbo:wikiPageWikiLink <http://dbpedia.org/resource/Smartbomb> .
  ?book dbo:author ?author .
  
  ?author dbo:filmography ?movie .
}
```",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  dbr:Peter_IV_of_Aragon foaf:name ?realName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author WHERE {
  ?work a dbo:Film ;
        dbo:televisionShow .
  
  ?work dbo:starring ?veraLynn .
  ?veraLynn foaf:name ""Vera Lynn""@en .

  OPTIONAL { ?work dbo:writer ?author . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Archduchess Helena of Austria and her spouse
  ?helena a dbo:Person ;
          foaf:name ""Helena, Archduchess of Austria""@en .
  
  OPTIONAL { ?helena dbo:spouse ?spouse . }
  
  # Child of the spouse who is royalty
  OPTIONAL { ?child dbo:parent ?spouse ;
                   a dbo:RoyalFamilyMember ; 
                   foaf:name ?childName . }

  # Predecessor of this child
  OPTIONAL { ?predecessor dbo:successor ?child . }
  
  # Child of Archduchess Margarete Sophie of Austria
  OPTIONAL { ?margarete a dbo:Person ;
                     foaf:name ""Margarete Sophie, Archduchess of Austria""@en .
              ?margarete dbo:child ?child . }

  # Grandchild of Duke Philipp of Württemberg
  OPTIONAL { ?philipp a dbo:Person ;
                    foaf:name ""Philipp, Duke of Württemberg""@en .
              ?grandchild dbo:parent ?philippChild .
              ?philippChild dbo:parent ?philipp .
              FILTER(?child = ?grandchild) }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?stuartArtist ?billyArtist ?davidBandMember WHERE {
  # Find Stuart Tosh's associated musical artist
  ?stuart a dbo:Person ;
          foaf:name ""Stuart Tosh""@en .
  OPTIONAL { ?stuart dbo:musicalArtist ?stuartArtist . }

  # Find Billy Lyall's associated musical artist
  ?billy a dbo:Person ;
         foaf:name ""Billy Lyall""@en .
  OPTIONAL { ?billy dbo:musicalArtist ?billyArtist . }

  # Find David Paton's associated musical artist and its band member
  ?david a dbo:Person ;
          foaf:name ""David Paton""@en .
  OPTIONAL { ?david dbo:musicalArtist ?artist . }
  OPTIONAL { ?artist dbo:bandMember ?davidBandMember . }
}
```",4,4,5,2,3,2,3,28,0,20760,2,0.0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  dbr:Tom_Phillips_Royal_Navy_officer a dbo:Person ;
                                       dbo:awardedBy dbr:Commander_of_the_Order_of_the_British_Empire .
  
  OPTIONAL { dbr:Tom_Phillips_Royal_Navy_officer dbo:force ?force . }
  OPTIONAL { dbr:Tom_Phillips_Royal_Navy_officer dbo:participatedInWar ?war . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  ?city a dbo:Settlement ;
        dbo:country dbr:Pakistan .
  
  FILTER (
    (CONTAINS(LCASE(?cityLabel), ""heart of pakistan"") ||
     CONTAINS(LCASE(?cityLabel), ""paris of the east"") ||
     CONTAINS(LCASE(?cityLabel), ""city of gardens"") ||
     CONTAINS(LCASE(?cityLabel), ""city of literature""))
  )
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?darryl a dbo:Person ;
          foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah""@en .

  ?darryl dbo:associatedBand ?band .
  ?elorm dbo:associatedBand ?band .

  OPTIONAL { ?rod a dbo:Person ;
              foaf:name ""Rod Argent""@en ;
              dbo:profession ?profession . }
  
  FILTER(?profession = <http://dbpedia.org/resource/Musician>)

  ?darryl dbo:associatedArtist ?associatedArtist .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather ?peterIV WHERE {
  # Find Martin I of Aragon and his father
  dbr:Martin_I_of_Aragon dbo:parent ?father .

  # From the father, find a child who is royalty
  ?father dbo:child ?childOfFather .
  ?childOfFather rdf:type dbo:Monarch .

  # Reference to Peter IV of Aragon
  dbr:Peter_IV_of_Aragon ?peterIV .

  # Ensure the child of Martin's father and Peter IV are linked in context
  OPTIONAL { ?father foaf:name ?fatherName }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College ;
           dbo:child ?child .
  
  ?child a dbo:Politician .

  ?child dbo:parent ?father .
}
```",3,4,4,3,1,3,3,71,2,28,5,0.06666666666666667,0.2857142857142857,0.10810810810810811
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find Philip I of Castile's children who are royalty
  dbr:Philip_I_of_Castile dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch . }

  # Find commanders in the Siege of Padua who are royalty and have children
  ?commander dbo:participatedIn dbr:Siege_of_Padua ;
             dbo:child ?childOfCommander .
  FILTER EXISTS { ?commander a dbo:Monarch . }
  
  # Ensure the child from both paths is the same
  FILTER(?child = ?childOfCommander)

  # Find the father of this child, ensuring he is royalty
  ?child dbo:parent ?father .
  FILTER EXISTS { ?father a dbo:Monarch . }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
                                      dbo:country dbr:Spain .
  
  OPTIONAL { 
    ?person dbo:partyMember dbr:Spanish_Socialist_Workers'_Party .
    ?position dbo:officeHolder ?person ;
              (dbo:headOfState | dbo:primeMinister) .
  }
}
```",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Archduke Charles Joseph of Austria and his parent's child
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharles .
  
  OPTIONAL { 
    ?childOfParent dbo:parent ?parentOfCharles .
    ?childOfParent dbo:father ?father .
  }
  
  # Cecilia Renata of Austria and her father's child
  dbr:Cecilia_Renata_of_Austria dbo:father ?fatherOfCecilia .
  
  OPTIONAL { 
    ?childOfFather dbo:father ?fatherOfCecilia .
    ?childOfFather dbo:parent ?parentOfChild .
    
    # Commander in the Thirty Years' War
    ?commander a dbo:Person ;
               dbo:role dbr:Thirty_Years'_War_commander .
    
    FILTER(?childOfParent = ?childOfFather)
    FILTER(?father = ?commander)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  dbr:Walter_B._Gibson dbo:creator ?character .
  ?character a dbo:FictionalCharacter ;
             dbo:comicsCharacter true .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Lauryn_Hill dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,1,2,0.0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:sportTeamInSeason dbr:2007–08_VfL_Bochum_season .
  
  ?season dbo:team dbr:VfL_Bochum ;
          dbo:player ?player .

  FILTER(?season = dbr:2007–08_VfL_Bochum_season)
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find associated band for David Paton
  OPTIONAL { 
    dbr:David_Paton dbo:associatedBand ?band1 .
    ?band1 dbo:member ?bandMember .
  }
  
  # Find associated band for Billy Lyall
  OPTIONAL { 
    dbr:Billy_Lyall dbo:associatedBand ?band2 .
    ?band2 dbo:member ?bandMember .
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .
  
  ?film dbo:actor ?actor .

  ?actor a dbo:SoccerPlayer, dbo:Athlete .

  ?person a dbo:Person ;
          dbo:birthday ""1955-02-22""^^xsd:date ;
          a dbo:Athlete .

  ?actor foaf:name ?name .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Reneta Kamberova""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Thompson""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:bandMember ?band . }
}
```",2,2,3,1,2,3,3,71,0,2,4,0.0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?warCommanded ?tvShowOrEvent WHERE {
  dbr:Yurii_Khmelnytsky dbo:successor ?successor .

  dbr:Jean_Baptist_Comte_d'Arco dbo:commander ?warCommanded .

  OPTIONAL { ?warCommanded dbo:subject ?tvShowOrEvent . }
  OPTIONAL { ?warCommanded dbo:depicts ?tvShowOrEvent . }

  FILTER(?tvShowOrEvent != dbr:War)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Maria_Anna_of_Bavaria dbo:child ?child .

  ?father a dbo:Person ;
          dbo:parentOf ?child ;
          dbo:royaltyTitle ?title .
  
  ?commander a dbo:MilitaryCommander ;
             dbo:participatedInMilitaryConflict dbr:Algerian_War ;
             dbo:event ?event .

  FILTER(?event = dbr:Societal_event && ?event = dbr:Event && ?event = dbr:Television_show)

  ?father dbo:commander ?commander .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  ?predecessor dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  ?royalChild dbo:spouse dbr:Charles_II_of_Naples .

  BIND(?royalChild AS ?child)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
  ?producer dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .
  ?parent dbo:child ?childOfParent .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  ?ncAirGuard a dbo:MilitaryUnit ;
              foaf:name ""North Carolina Air National Guard""@en .
  
  ?ncAirGuard dbo:commander ?commander .

  ?commander a dbo:Person ;
             dbo:officeHolder true ;
             dbo:politician true .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:Hong_Kong_C_Team dbo:manager ?manager .
  
  ?manager a dbo:SportsManager ;
           dbo:sportTeamManaged dbr:Hong_Kong_C_Team .

  OPTIONAL { 
    ?manager dbo:occupation dbo:SoccerManager .
  }
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant WHERE {
  ?alberto a dbo:Person ;
           foaf:name ""Alberto Ruiz-Gallardón""@en ;
           dbo:officeHolder ?office .
  
  ?residence dbo:resident ?alberto ;
             dbo:tenant ?tenant .

  ?conflict a dbo:MilitaryConflict, dbo:SocietalEvent ;
            dbo:participant ?manuel .

  ?manuel foaf:name ""Manuel Pinto da Costa""@en .

  OPTIONAL { ?office dbo:commander ?commanderOffice }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  dbr:30th_Cambridgeshire_Regiment_of_Foot dbo:militaryConflict ?war .
  
  # Check if William Bayne was a commander in those wars
  OPTIONAL { 
    ?bayne a dbo:MilitaryPerson ;
           foaf:name ""William Bayne""@en .
    ?bayne dbo:commanderOf ?war .
  }
  
  # Retrieve the military force involved in these wars
  ?war dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Spain .
  
  ?person dbo:residence dbr:Santiago_de_Compostela .

  ?electionEvent dbo:winner ?person ;
                 dbo:electionDate ?date .
  FILTER(YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?electionEvent)), ""galician regional election""))

  OPTIONAL { ?person dbo:residence ?countryResidence }
  
  FILTER(EXISTS {
    ?countryResidence a dbo:Country
  })

  BIND(?countryResidence AS ?tenant)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Princess_Muna_al-Hussein dbo:child ?child .
  FILTER EXISTS { ?child a dbo:RoyalFamilyMember }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander WHERE {
  dbr:Yurii_Khmelnytsky dbo:successor ?successor .
  
  OPTIONAL { 
    ?person dbo:commanderInWar ?war .
    FILTER(CONTAINS(LCASE(?war), ""great turkish war""))
    ?person ?p ?commander .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  OPTIONAL { ?person dbo:party ?party . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Poland .
}
```",1,1,2,1,1,3,2,20,0,57328,108,0.0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Native of Grand Duchy of Finland
  OPTIONAL { ?person dbo:nativePlace dbr:Grand_Duchy_of_Finland . }
  
  # Native of Russian Empire
  OPTIONAL { ?person dbo:nativePlace dbr:Russian_Empire . }
  
  # Decedent at Switzerland
  OPTIONAL { ?person dbo:deathPlace dbr:Switzerland . }

  FILTER((BOUND(?person) && 
          ((?person dbo:nativePlace dbr:Grand_Duchy_of_Finland || ?person dbo:nativePlace dbr:Russian_Empire) &&
           ?person dbo:deathPlace dbr:Switzerland)))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Location ;
              dbo:location ?entity .
}
```",2,2,3,2,1,2,3,28,0,0,87,0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?musicalArtist WHERE {
  # Find movies/shows associated with Afeez Oyetoro
  ?show a dbo:Film ;
        dbo:starring ?afeez .
  
  # Ensure Afeez Oyetoro is the person we are looking for
  ?afeez foaf:name ""Afeez Oyetoro""@en .

  # Find actors of these shows/movies
  ?show dbo:actor ?actor .

  # Find Ciara's resource in DBpedia
  ?ciara a dbo:Person ;
         foaf:name ""Ciara""@en .
  
  # Ensure the person is Cynthia Ikponmwenosa Morgan (Ciara)
  FILTER(?ciara = dbr:Ciara_(singer))

  # Find musical artists associated with Ciara
  ?ciara dbo:musicalArtist ?musicalArtist .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Der_Blu dbo:member ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father ?royalChild WHERE {
  # Eleonore of Austria, Queen of Poland
  ?eleonore a dbo:Person ;
            foaf:name ""Eleonore of Austria""@en ;
            dbo:spouse ?husband .
  
  # Father of Eleonore
  ?eleonore dbo:father ?father .

  # Child of the father who is royalty
  ?royalChild a dbo:RoyalFamilyMember ;
              dbo:parent ?father .

  # Maria Anna of Bavaria (born 1574)
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthday ""1574-01-01""^^xsd:date .
  
  # Child of Maria Anna
  ?childOfMariaAnna dbo:parent ?mariaAnna .

  # The royal child is also the child of Maria Anna
  FILTER(?royalChild = ?childOfMariaAnna)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Promises_to_Keep_(Biden_book) dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alterEgoProfession ?actorPoliticianProfession WHERE {
  # Find The Shadow's alter ego and its profession
  ?shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?alterEgoProfession .

  # Find the actor who played in both ""Ab Kya Hoga"" and ""Dispatches from Elsewhere""
  ?actor foaf:name ?actorName .
  ?actor dbp:film ?abKyaHoga .
  ?actor dbp:film ?dispatchesFromElsewhere .
  
  FILTER(?abKyaHoga = <http://dbpedia.org/resource/Ab_Kya_Hoga>)
  FILTER(?dispatchesFromElsewhere = <http://dbpedia.org/resource/Dispatches_from_Elsewhere>)

  # Check if the actor is also a politician
  OPTIONAL { ?actor dbo:profession ?actorPoliticianProfession .
             FILTER(CONTAINS(LCASE(STR(?actorPoliticianProfession)), ""politician"")) }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeCountry WHERE {
  dbr:Helmut_Kohl a dbo:Person ;
                  dbo:nationality ?nativeCountry .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?profession WHERE {
  ?actor a dbo:Actor .
  OPTIONAL { ?actor dbo:profession ?profession . }
}
```",1,1,2,1,1,2,3,28,0,0,21580,0,0.0,0
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBandMember WHERE {
  # David Paton's associated band members
  dbr:David_Paton dbo:associatedBandMember ?bandMember1 .
  
  # Selena Gomez as a writer and artist on the Wizards of Waverly Place soundtrack
  dbr:Selena_Gomez dbo:associatedMusicalArtist ?bandMember2 ;
                   dbo:artist ?artist .

  # Ensure common band members are both musical artists and artists
  FILTER(?bandMember1 = ?bandMember2)
  
  OPTIONAL { ?commonBandMember a dbo:Person ; 
                            dbo:musicalArtist ?bandMember1 ;
                            dbo:artist ?artist . }
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusBirthPlace ?residentBirthPlace WHERE {
  # Find the birthplace of an alumnus of Plovdiv University ""Paisii Hilendarski""
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski ;
           dbo:birthPlace ?alumnusBirthPlace .

  # Find the birthplace of a resident of Sofia
  ?resident dbo:residence dbr:Sofia ;
            dbo:birthPlace ?residentBirthPlace .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistRole WHERE {
  ?kapur a dbo:Person ;
         foaf:name ""Steven Kapur""@en .
  
  OPTIONAL { ?kapur dbo:role ?artistRole . }
  FILTER(CONTAINS(LCASE(STR(?artistRole)), ""artist""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneMilitaryForce ?capeFinisterreMilitaryForce ?cambridgeshireCommander WHERE {
  # Military force of the war involving William Bayne
  dbr:William_Bayne_(Royal_Navy_officer) dbo:participatedIn ?war .
  ?war dbo:militaryForce ?bayneMilitaryForce .

  # Military force involved in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryForce ?capeFinisterreMilitaryForce .

  # Commander of the war involving the 30th Regiment of Foot
  dbr:30th_Regiment_of_Foot dbo:participatedIn ?war2 .
  ?war2 dbo:commander ?cambridgeshireCommander .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Min Phyu""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER EXISTS { ?spouse a dbo:Monarch }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .
  
  ?parent a dbo:Person ;
          dbo:politician true ;
          dbo:officeHolder true .

  ?parent dbo:child ?child .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Identify Theodor Heuss and his office
  dbr:Theodor_Heuss a dbo:Person ;
                    dbo:officeHolder ?office .

  # Find the country associated with this office
  ?office dbo:country ?country .

  # Get the native place of this country
  ?country dbo:nativePlace ?nativePlace .
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?associatedBand WHERE {
  # Get reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds ?reference .

  # Find associated musical artists of Nick Curran
  dbr:Nick_Curran dbo:associatedBand ?associatedBand .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country WHERE {
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing""@en .
  
  ?huJieqing dbo:spouse ?spouse .

  ?spouse a dbo:Writer .

  ?work dbo:author ?spouse ;
        dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?associatedArtist WHERE {
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  
  ?rodArgent dbo:profession ?profession .

  OPTIONAL { 
    ?band dbo:member ?rodArgent ;
          dbo:associatedBand ?artist .
    
    ?artist foaf:name ?associatedArtist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Switzerland ;
          dbo:birthPlace dbr:Grand_Duchy_of_Finland .
}
```",2,2,3,1,2,2,3,28,2,0,0,1.0,1.0,1.0
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:manager ?manager .

  ?molinaTeam dbo:member dbr:Juan_Carlos_Molina_(footballer) .
  ?agüeroTeam dbo:member dbr:Sergio_Agüero .

  ?person dbo:team ?molinaTeam .
  ?person dbo:team ?agüeroTeam .

  ?person dbo:team ?team .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?individual (IF(?name = ""Princess Sara bint Faisal"", ""Sara's Parent"", ""Omar's Parent"") AS ?parentLabel) WHERE {
  { 
    ?sara a dbo:Person ;
          foaf:name ""Princess Sara bint Faisal""@en .
    ?sara dbo:parent ?parent .
    BIND(""Princess Sara bint Faisal"" AS ?name)
  }
  UNION
  {
    ?omar a dbo:Person ;
          foaf:name ""Prince Omar bin Faisal""@en .
    ?omar dbo:parent ?parent .
    BIND(""Prince Omar bin Faisal"" AS ?name)
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  FILTER(?father rdf:type dbo:Monarch)
  
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Charles_II_of_Naples .

  ?father dbo:spouse ?spouse .
  
  ?parent dbo:child ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:Conservative_Republican_Party_(Spain) dbo:leader ?leader .
  FILTER(?leader rdf:type dbo:Politician)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Republican_Party_(United_States) dbo:member ?member .
}
```",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find Philip I, Prince of Taranto and his father
  dbr:Philip_I,_Prince_of_Taranto dbo:child ?philipFather .
  
  # Identify Béla IV of Hungary's child who is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  FILTER(STRSTARTS(LCASE(?belasChild), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?belasChild a dbo:Monarch } )

  # Find the spouse of Philip I's father whose child is also Béla IV's royal descendant
  ?philipFather dbo:spouse ?spouse .
  OPTIONAL { ?childOfSpouse dbo:parent ?spouse . }
  
  FILTER(?childOfSpouse = ?belasChild)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?philipI dbr:Philip_I,_Prince_of_Taranto ;
           dbo:parent ?father .
  
  ?charlesMartel dbr:Charles_Martel_of_Anjou ;
                 dbo:parent ?father .

  OPTIONAL { ?father dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?realName WHERE {
  ?kimWilson a dbo:Musician ;
             foaf:name ""Kim Wilson""@en .
  
  ?kimWilson dbo:musicalBand ?band .

  OPTIONAL { 
    ?fabulousThunderbirds a dbo:MusicalArtist ;
                          foaf:name ""The Fabulous Thunderbirds""@en .
    
    ?fabulousThunderbirds dbo:alias ?realName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  ?amy dbo:parent ?parent .
}

UNION

SELECT ?actor WHERE {
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:actor ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?player WHERE {
  # Find Marty Pollio and his birthday
  dbr:Marty_Polloi dbo:birthday ?birthday .

  # Find a person who is an athlete, has a player role, and shares the same birthday
  ?person a dbo:Person ;
          dbo:birthday ?sameBirthday ;
          dbo:athlete true ;
          dbo:sportRole ?player .
  
  FILTER(?birthday = ?sameBirthday)
}
```",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?greatGrandchild WHERE {
  # Alexander of Württemberg lineage
  dbr:Alexander_of_W%C3%BCrttemberg (dbo:child|+dbo:child)+ ?grandChild .
  ?grandChild dbo:child ?greatGrandchild .

  # Archduke Charles Louis of Austria lineage
  dbr:Archduke_Charles_Louis_of_Austria (dbo:child|+dbo:child) ?archdukeGrandChild .
  ?archdukeGrandChild dbo:child ?royaltyDescendant .

  # Ensure the great-grandchild is royalty and matches both lineages
  FILTER(?greatGrandchild = ?royaltyDescendant)
  FILTER(BOUND(?greatGrandchild))
  OPTIONAL { ?greatGrandchild a dbo:RoyalFamily . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Minye_Kyawswa dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?commander ?militaryForce2 WHERE {
  # Military force of the war involving William Bayne
  OPTIONAL { 
    dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?war .
    ?war dbo:militaryForce ?militaryForce1 .
  }

  # Commander in the war involving the 30th (Cambridgeshire) Regiment of Foot
  OPTIONAL {
    dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:militaryConflict ?war2 .
    ?war2 dbo:commander ?commander .
  }
  
  # Military force of the event involving Robert Calder
  OPTIONAL {
    dbr:Robert_Calder dbo:event ?event .
    ?event dbo:militaryForce ?militaryForce2 .
  }
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  dbr:Japan dbo:timeZone ?tz .
  FILTER(?tz = ""Asia/Tokyo"")
  BIND(dbr:Japan AS ?entity)
}
```",2,2,3,2,1,3,2,20,0,0,8916,0,0.0,0
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?person rdf:type dbo:Artist ;
          foaf:name ""John McDermott""@en .
  
  ?person dbo:deathPlace ?deathPlace .

  FILTER (?deathPlace rdf:type dbo:Settlement)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel's child
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttle dbo:child ?child .

  # Duchess Luise of Brunswick-Wolfenbüttel's spouse
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttle dbo:spouse ?luisespouse .

  # Spouse of the spouse of Duchess Luise
  ?luisespouse dbo:spouse ?secondSpouse .

  # Ensure the child is also related to the second spouse (spouse of the spouse)
  OPTIONAL { ?child dbo:parent ?secondSpouse }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Colombia .
}
```",1,1,2,1,1,2,3,28,2141,0,0,1.0,1.0,1.0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  # Assuming 'awardee of 25' refers to a specific entity or event
  # Placeholder for the awardee entity, which needs clarification
  ?awardeeOf25 a dbo:Event ; 
               dbo:location ?birthPlace .

  ?war dbo:place ?birthPlace ;
       dbo:relatedEvent ?awardeeOf25 .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:parent ?parent .
  
  FILTER(?parent a dbo:Royalty && ?parent a dbo:Noble)
  
  OPTIONAL { ?parent dbo:spouse ?spouse . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?audrey .
  
  ?audrey foaf:name ""Audrey Hepburn""@en .

  ?janusz foaf:name ""Janusz Kamiński""@en .
  ?janusz dbo:spouse ?spouse .
  
  ?spouse a dbo:Person ;
          dbo:profession dbo:FilmDirector .

  ?movie dbo:director ?spouse .

  ?movie dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  OPTIONAL { ?sofia dbo:parent ?father . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?referenceToGeorgeDucas ?successor WHERE {
  # Find reference related to George Ducas
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas""@en .
  
  OPTIONAL { ?georgeDucas dbo:wikiPageRedirects ?referenceToGeorgeDucas . }
  
  # Identify Michał Kazimierz Pac's military conflict
  ?militaryConflict a dbo:MilitaryConflict ;
                    dbo:participant ?pacz .
  
  FILTER(?pacz = dbr:Michał_Kazimierz_Pac)
  
  # Find the commander and their successor who is a politician and office holder
  ?commander a dbo:Person ;
             dbo:positionHeld ?militaryConflict .
  
  OPTIONAL { ?successor dbo:succeededBy ?commander . }
  
  FILTER(?successor a dbo:Politician && ?successor a dbo:OfficeHolder)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carrie Johnson""@en .
  
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",2,2,3,1,2,2,2,9,1,3,0,0.25,1.0,0.4
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria and her child Eleonore of Austria
  dbr:Maria_Anna_of_Bavaria_born_1574 dbo:child dbr:Eleonore_of_Austria_Queen_of_Poland .

  # Find the father of Eleonore, who is royalty and a commander in war
  ?father dbo:parent dbr:Eleonore_of_Austria_Queen_of_Poland ;
          a dbo:Person ;
          dbo:royalty true ;
          dbo:commanderInWar ?war .

  # Identify an event related to this person that is both a societal event and a television show
  ?event dbo:relatedTo ?father ;
         a dbo:SocietalEvent, dbo:TelevisionShow .

  # Return the child of this father who fits all criteria
  ?child dbo:parent ?father .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shirley Stoler""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Dawit_I dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  dbr:Jamsetji_Tata dbo:birthPlace ?native .
}
```",2,3,3,2,1,2,2,9,0,3,68,0.0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName ?authorBirthPlace ?governorName ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Query for the birth place of Cece Bell, author of ""El Deafo""
  OPTIONAL {
    dbr:Cecily_Ann_Bell dbo:birthPlace ?authorBirthPlace .
    BIND(""Cece Bell"" AS ?authorName)
  }

  # Query for the birth place of the current governor of Virginia
  OPTIONAL {
    ?governor a dbo:Politician ;
              dbo:governorOf dbr:Virginia .
    ?governor dbo:birthPlace ?governorBirthPlace .
    BIND(str(?governor) AS ?governorName)
  }

  # Query for the birth place of Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
    BIND(""Vince Gilligan"" AS ?vinceGilliganName)
  }
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kim Wilson""@en .
  
  ?person dbo:band ?band .

  ?band rdfs:label ?bandLabel .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Martin of Aragon's parent
  dbr:Martin_of_Aragon dbo:parent ?parent .

  # Step 2: Identify the father (grandparent) of this parent and ensure he is royalty
  ?parent dbo:father ?grandfather .
  FILTER(?grandfather a dbo:Monarch)

  # Step 3: Find the child of this royal grandfather
  ?grandfather dbo:child ?child .
}
```",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Find the spouse of Archduchess Helena
  ?helena a dbo:Person ;
          foaf:name ""Helena, Archduchess of Austria""@en .
  
  ?helena dbo:spouse ?spouse .

  # Find the child of this spouse who is royalty
  ?child1 dbo:parent ?spouse ;
          rdf:type dbo:Monarch .

  # Find predecessor of this royal child
  ?child1 dbo:predecessor ?predecessor .

  # Find the child of Archduke Charles Louis
  ?charles a dbo:Person ;
           foaf:name ""Charles Louis, Archduke of Austria""@en .
  
  ?charles dbo:child ?royalChild2 .

  # Ensure this child is royalty
  FILTER(?royalChild2 rdf:type dbo:Monarch)

  # Find the child of this royal child (grandchild)
  ?grandchild dbo:parent ?royalChild2 ;
              rdf:type dbo:Monarch .

  # Find predecessor of this grandchild
  ?grandchild dbo:predecessor ?predecessor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedBand WHERE {
  ?person a dbo:Person ;
          foaf:name ""$pacely""@en .
  ?person dbo:birthName ?birthName .

  FILTER(?birthName = ""Pacely"") # Assuming the birth name is known as ""Pacely""

  ?person dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(str(?profession)), ""musician""))

  OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerAStarIsBorn ?producerTomSawyer ?fictionalCharacter ?professionalAlterEgo WHERE {
  # Producers of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerAStarIsBorn .

  # Producers of The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Fictional character related to Kent Allard
  dbr:Kent_Allard dbo:fictionalCharacter ?fictionalCharacter .
  
  OPTIONAL {
    ?fictionalCharacter dbo:professionalAlterEgo ?professionalAlterEgo .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?albumArtist WHERE {
  dbr:T.I. a dbo:MusicalArtist ;
           dbo:album ?album .
  
  ?album dbo:song ?song .
  
  ?song dbo:artist ?albumArtist .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist a dbo:Person ;
          dbo:birthPlace dbr:Central_Region,_Ghana ;
          dbo:occupation dbr:Artist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardeeBirthPlace ?smitaPatilBirthPlace WHERE {
  # Find birthplace of Sangeet Natak Akademi Fellowship awardees
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship ;
          dbo:birthPlace ?awardeeBirthPlace .
  
  # Find birthplace of Smita Patil
  dbr:Smita_Patil dbo:birthPlace ?smitaPatilBirthPlace .
}
```",4,4,5,3,2,3,2,20,1,8,0,0.1111111111111111,1.0,0.19999999999999998
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  dbr:Cavalera_Conspiracy a dbo:MusicalArtist .
  OPTIONAL { dbr:Cavalera_Conspiracy dbo:associatedBand ?organization . }
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  dbr:VfL_Bochum dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mark Tournier""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (?birthPlace rdf:type dbo:Settlement)
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCharlesMartel ?royalChild ?spouseOfCharlesII WHERE {
  # Find the parent of Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .

  # Identify the predecessor of Stephen V of Hungary and find their child that is royalty
  OPTIONAL { 
    ?predecessor dbo:succeededBy dbr:Stephen_V_of_Hungary .
    ?predecessor dbo:child ?royalChild .
    FILTER (?royalChild rdf:type dbo:Royalty)
  }

  # Find the spouse of Charles II of Naples
  OPTIONAL {
    dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Find the child of Baeda Maryam I
  ?child dbo:parent dbr:Baeda_Maryam_I .

  # Identify the father of this child (the grandfather)
  ?child dbo:parent ?father .
  
  # Ensure the father is royalty and an office holder
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office .

  # The grandfather is the father of the father
  ?father dbo:parent ?grandfather .

  # Ensure the grandfather is also royalty and an office holder
  ?grandfather a dbo:Monarch ;
               dbo:officeHolder ?office2 .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war ?entity WHERE {
  # Part for Hashiba Hidekatsu
  OPTIONAL {
    ?hashiba a dbo:Person ;
             foaf:name ""Hashiba Hidekatsu""@en .
    ?hashiba dbo:participatedInWar ?war .
    ?war dbo:location ?location .
    FILTER(CONTAINS(LCASE(STR(?location)), ""japan""))
    BIND(?war AS ?entity)
  }
  
  # Part for Koichirō (Koichiro Matsuura)
  OPTIONAL {
    ?koichiro a dbo:Person ;
              foaf:name ""Koichiro Matsuura""@en .
    ?koichiro dbo:participatedInWar ?war2 .
    BIND(?war2 AS ?entity)
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
  FILTER EXISTS { ?person dbo:occupation dbr:Politician }
}
```",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Antonios Varthalitis""@en .
  
  ?person dbo:deathPlace ?deathPlace .

  FILTER (?deathPlace rdf:type dbo:Settlement)
}
```",2,3,3,2,1,2,3,28,0,0,12,0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Prince Augustus William of Prussia""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  # Subquery for Pacely
  {
    ?person a dbo:Person ;
            foaf:name ""Pacely""@en .
    OPTIONAL { ?person dbo:musicalArtist ?artist . }
  }

  UNION

  # Subquery for the artist native to Central Region, Ghana
  {
    ?centralRegionPerson a dbo:Person ;
                         dbo:nativeCountry dbr:Ghana ;
                         dbo:nativePlace dbr:Central_Region,_Ghana .
    OPTIONAL { ?centralRegionPerson dbo:musicalArtist ?artist . }
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Identify the person who is a resident of Chappaqua, New York, a politician, office holder, and commander in the Third Taiwan Strait Crisis.
  ?person a dbo:Person ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolder true ;
          dbo:politicalPartyMember true ;
          dbo:militaryCommanderOf dbr:Third_Taiwan_Strait_Crisis .

  # Find works authored by this person that are books and written works.
  ?work a dbo:Book, dbo:WrittenWork ;
        dbo:author ?person .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  ?person a dbo:Person ;
          dbo:sportsManager true ;
          foaf:birthday ""1968-08-26""^^xsd:date ;
          foaf:nationality dbr:West_Germany .

  ?person dbo:managerOfTeam dbr:VfL_Bochum .

  BIND(?person AS ?manager)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeRegion ?birthName WHERE {
  # Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbo:award ?award .
  
  # Check if this award has a native region that is an American state or settlement
  ?award dbo:nativeOf ?nativeRegion .
  FILTER (
    (strstarts(str(?nativeRegion), ""http://dbpedia.org/resource/"") &&
     ((?nativeRegion = dbr:United_States) ||
      (?nativeRegion IN (dbr:California, dbr:Texas, dbr:New_York_City)))) # Example states and settlements
  )
  
  # Find Bobby Shmurda's birth name
  ?bobby a dbo:Person ;
         foaf:name ""Bobby Shmurda""@en .
  ?bobby foaf:birthday ?birthDate .
  ?bobby foaf:name ?birthName .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?derBlau ?member WHERE {
  dbr:Der_Blau a dbo:Organisation ;
               rdfs:label ""Der Blau""@en .
  
  OPTIONAL { dbr:Der_Blau dbo:member ?member . }
}
```",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .

  # Find band members of the associated artist who are also musical artists
  ?bandMember a dbo:Band ;
              dbo:musicalArtist ?memberArtist .
  
  FILTER(?memberArtist = ?associatedArtist) .

  # Ensure the person is a musical artist and born in Florida
  ?person a dbo:MusicalArtist ;
          dbo:birthName ?birthName ;
          dbo:nativePlace dbr:Florida .

  # Link the band member to the person
  ?bandMember dbo:musicalArtist ?person .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?show a dbo:TelevisionSeries ;
        dbo:starring ?role .
  
  ?role dbo:actor ?person .
  ?person foaf:name ""Richard E. Grant""@en .

  OPTIONAL { ?show dbo:actor ?actor . }
}
```",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI ?grandfather WHERE {
  # Find Dawit I's child
  dbr:Dawit_I dbo:child ?childOfDawitI .

  # Trace back two generations from Na'od to find his grandfather
  dbr:Na'od dbo:parent ?naodParent .
  ?naodParent dbo:parent ?grandfather .

  # Ensure the grandfather is both a royalty and an office holder
  ?grandfather a dbo:Royalty ;
              a dbo:OfficeHolder .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .

  # Find an actor from ""ATL""
  dbr:ATL (dbo:actor) ?atlActor .

  # Find a movie that both the author and the ATL actor are associated with
  ?movie dbo:starring ?author ;
         dbo:starring ?commonActor .
  
  # Ensure the common actor is also an actor in ""ATL""
  ?movie dbo:starring ?atlActor .

  # The professional we seek is this common actor
  ?professional a dbo:Person ;
                foaf:name ?commonActorName .
  FILTER(?commonActor = ?professional)
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander a dbo:Person ;
             dbo:role ""Commander""@en ;
             dbo:event dbr:Siege_of_Mukha ;
             dbo:nationality ?royalty .

  # Ensure the commander is royalty
  ?royalty rdfs:subClassOf* dbo:Royalty .

  # Find the parent of this royal commander who is also royalty
  ?parent a dbo:Person ;
          dbo:child ?commander ;
          dbo:nationality ?parentRoyalty .

  # Ensure the parent is royalty
  ?parentRoyalty rdfs:subClassOf* dbo:Royalty .

  # Find the child of this royal parent
  ?parent dbo:child ?child .

  # Identify Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo ?alterEgo .

  # Link any reference from the alter ego to the entities found above
  OPTIONAL { ?reference dbo:reference ?alterEgo .
             ?reference dbo:relatedTo ?commander ;
                        dbo:relatedTo ?parent ;
                        dbo:relatedTo ?child }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?royalFather ?rogerParent WHERE {
  # Alfonso VI of León and Castile's grandchild
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child .
  ?child dbo:child ?grandchild .

  # Father of William I of Sicily's child who is royalty
  dbr:William_I_of_Sicily dbo:child ?williamChild .
  ?williamChild dbo:parent ?royalFather .
  FILTER(?royalFather a dbo:Monarch)

  # Parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?rogerParent .

  # Combine conditions to find the required entities
  OPTIONAL { ?grandchild = ?williamChild }
  OPTIONAL { ?royalFather = ?rogerParent }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:The_Alan_Parsons_Project dbo:bandMember ?bandMember .
}

UNION

SELECT ?associatedArtist WHERE {
  dbr:Stuart_Mcbeath_Tosh dbo:associatedBand ?associatedArtist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?orderReference WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?birthPlace dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ""Order of the Medjidie""@en .
    BIND(?redirect AS ?orderReference)
  }
}
```",3,3,4,2,2,2,2,9,0,2,1,0.0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfWilliamII ?grandchildOfAlfonsoVI ?parentOfRogerIIIChild WHERE {
  # Find the father of William II of Sicily
  dbr:William_II_of_Sicily dbo:father ?fatherOfWilliamII .

  # Find a child of Alfonso VI, then find a child of that child (grandchild)
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?childOfAlfonsoVI .
  ?childOfAlfonsoVI dbo:child ?grandchildOfAlfonsoVI .

  # Find the parent of Roger III's child
  dbr:Roger_III,_Duke_of_Apulia dbo:child ?childOfRogerIII .
  ?parentOfRogerIIIChild dbo:child ?childOfRogerIII .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    # Vince Gilligan's birth place
    dbr:Vince_Gilligan a dbo:Person ;
                       dbo:birthPlace ?birthPlace .
    BIND(dbr:Vince_Gilligan AS ?person)
  }
  
  UNION
  
  { 
    # Cece Bell's birth place (author of El Deafo)
    dbr:Cecily_Ann_Bell a dbo:Person ;
                        dbo:birthPlace ?birthPlace .
    BIND(dbr:Cecily_Ann_Bell AS ?person)
  }
}
```",4,4,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Dorothea of Denmark, Electress Palatine
  ?dorothea a dbo:Person ;
            foaf:name ""Dorothea of Denmark, Electress Palatine""@en .
  
  # Find her parent
  ?parent dbo:child ?dorothea .

  # Find the father of this parent
  ?father dbo:child ?parent .

  # The parent must be a child of a commander who was royalty during the Siege of Padua
  ?commander a dbo:Person ;
             dbo:royalty true ;
             dbo:eventParticipant ?siege .
  
  ?siege dbo:name ""Siege of Padua""@en .
  
  ?parent dbo:child ?commander .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?band WHERE {
  OPTIONAL {
    ?personA a dbo:Person ;
             foaf:name ""Nick Curran""@en .
    ?personA dbo:associatedBand ?associatedArtist .
  }
  
  OPTIONAL {
    ?personB a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
    ?personB dbo:bandMember ?band .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?show WHERE {
  ?maxBorn a dbo:Person ;
           foaf:name ""Max Born""@en ;
           dbo:award ?nobelPrize .
  
  ?nobelPrize rdf:type dbo:NobelPrizeInPhysics .

  OPTIONAL { ?maxBorn dbp:affiliation ?institution . }
  
  OPTIONAL { ?show dbo:hostedBy ?institution . }

  FILTER(?institution != NULL)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ""Hon. Mary Frances Bowes-Lyon""@en . }
}
```",1,1,2,1,1,2,3,28,1,1048575,0,9.5367431640625e-07,1.0,1.9073468138248312e-06
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  ?alumnus a dbo:EtonCollegeAlumni ;
           dbo:child dbr:Victor_Stanley_(Royal_Navy_officer) .
  
  ?politicianChild dbo:parent ?alumnus ;
                   rdf:type dbo:Politician .

  ?politicianChild dbo:father ?father .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nicholas Michael Curran""@en .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?band . 
    ?band dbo:member ?associatedArtist .
  }
  
  OPTIONAL { 
    ?person dbo:collaborator ?associatedArtist .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player WHERE {
  ?team a dbo:NationalSoccerTeam ;
        foaf:name ""Russia national football team""@en .
  
  ?player dbo:member ?team ;
          foaf:name ?name .

  OPTIONAL { 
    ?player foaf:nick ?nickname .
    FILTER(?nickname = ""The First Glove"" || ?name = ""The First Glove"")
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?conflict ?commander WHERE {
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedIn ?conflict .
  
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Boxer""@en .
  OPTIONAL { ?person dbo:birthName ?name . FILTER(?name = ""John Boxer"") }
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",2,2,3,2,1,2,2,9,0,0,39640,0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbo:birthday ""1981-12-01""^^xsd:date .
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?realName ?associatedArtist WHERE {
  # Part for Kim Wilson's band
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?kimWilson dbo:band ?band . }

  # Part for Nicholas Michael Curran's real name and associated musical artist
  ?nicholasCurran a dbo:Person ;
                  foaf:name ""Nicholas Michael Curran""@en .
  OPTIONAL { ?nicholasCurran foaf:name ?realName . }
  OPTIONAL { ?nicholasCurran dbo:musicalArtist ?associatedArtist . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Linda Miller (actress)
  dbr:Linda_Miller_(actress) a dbo:Person ;
                             dbo:child ?child .

  # Ensure the child is native of an award that is American and a settlement
  ?award a dbo:Award ;
         dbo:country dbr:United_States_of_America ;
         dbo:location ?settlement .
  
  ?settlement a dbo:Settlement ;
              foaf:name ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .

  # Link the child to the settlement through birthplace or similar property
  ?child dbo:birthPlace ?settlement .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  dbr:Santiago_de_Compostela dbo:tenant ?tenant .
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .
  ?actor a dbo:Actor ;
         dbo:profession ?profession .
  FILTER(?profession = ""Actor""@en)
}
```",2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?originalName WHERE {
  dbr:The_Fabulous_Thunderbirds dbo:originalName ?originalName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerProfession WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer a dbo:Person ;
            dbo:occupation ?producerProfession .
}
```",2,2,3,2,1,3,3,71,1,2,11,0.3333333333333333,0.08333333333333333,0.13333333333333333
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?partyLeader WHERE {
  # Find the office of Manuel Pinto da Costa as a commander in a military conflict
  OPTIONAL {
    dbr:Manuel_Pinto_da_Costa dbo:office ?commanderOffice .
    ?militaryConflict a dbo:MilitaryConflict ;
                      dbo:commander dbr:Manuel_Pinto_da_Costa .
  }

  # Find the office of Miguel Maura as a leader of a political party
  OPTIONAL {
    dbr:Miguel_Maura dbo:partyLeader ?partyLeader .
    ?politicalParty a dbo:PoliticalParty ;
                    dbo:leader dbr:Miguel_Maura .
  }
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  OPTIONAL { ?mariclare dbo:spouse ?spouse . }
  
  OPTIONAL { ?child dbo:parent ?spouse . }
  
  OPTIONAL { ?parentOfChild a dbo:Person ;
                           foaf:name ?spouseName .
              FILTER(?spouse = ?parentOfChild) }

  OPTIONAL { ?movie dbo:starring ?herchelBernardi, ?actor . }
  
  OPTIONAL { ?herchelBernardi a dbo:Actor ;
                             foaf:name ""Herschel Bernardi""@en . }
  
  OPTIONAL { ?movie dbo:work ?parentOfChild . }

}
```",5,6,6,3,2,3,3,71,0,60,1,0.0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Germany .
  
  ?person dbo:manager dbr:VfL_Bochum_season_2007–08 .

  ?vflBochumSeason a dbo:SoccerClubSeason ;
                   dbo:club dbr:VfL_Bochum ;
                   dbo:season ""2007-08""^^xsd:string .
  
  ?letschTeam a dbo:SoccerClubSeason ;
              dbo:manager ?person ;
              dbo:player dbr:Thomas_Letsch .

}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?child .
  FILTER(?child a dbo:Royalty)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  # Philipp Albrecht, Duke of Württemberg's child
  ?philippAlbrechtChild dbo:childOf dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg ;
                        rdf:type dbo:Person .

  # Duke Philipp of Württemberg's grandchild
  ?dukePhilippGrandchild dbo:childOf ?philippAlbrechtChild ;
                         rdf:type dbo:Person .

  # Archduke Charles Louis of Austria's great-grandchild who is royalty
  ?archdukeGreatGrandchild dbo:childOf ?dukePhilippGrandchild ;
                           rdf:type dbo:RoyalFamilyMember .

  # Find the predecessor (parent) of this great-grandchild
  ?predecessor dbo:child ?archdukeGreatGrandchild .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:The_Sky_Ranger_(1928_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .
  
  ?frédéric a dbo:Person ;
            foaf:name ""Frédéric Bouraly""@en .
  
  ?frédéric foaf:profession ?profession .

  OPTIONAL { ?actor foaf:profession ?actorProfession . }
  
  FILTER(?actorProfession = ?profession)
}
```",3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent WHERE {
  ?photographer a dbo:Photographer .
  ?parent dbo:child ?photographer .
}
```",2,2,3,2,1,3,3,71,1,4,29,0.2,0.03333333333333333,0.05714285714285715
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida .
}
```",1,2,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?tvShow a dbo:TelevisionSeries ;
          dbo:title ""Always the Love Songs""@en .
  ?tvShow dbo:creator ?writer .

  ?battle a dbo:MilitaryConflict ;
          dbo:name ""Battle of Vienna""@en .
  ?battle dbo:commander ?writer .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Ulster Unionist Party""@en .
  
  ?leader dbo:leader ?party ;
          foaf:name ?name .

  OPTIONAL { ?leader foaf:based_near ?residence . }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Algerian War and its military force
  dbr:Algerian_War dbo:militaryForce ?militaryForce .
  
  # Commander of the military force
  ?militaryForce dbo:commander ?commander .

  # Commander is also an event and a television show
  ?commander a dbo:Event ;
             a dbo:TelevisionShow .

  # Archduke Charles Joseph of Austria's parent's child
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
  ?parent dbo:child ?child .

  # The commander is the same as the child of Archduke's parent
  FILTER(?commander = ?child)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Thompson""@en ;
          dbo:birthName ""Bob Thompson""@en ;
          dbo:profession dbr:Singer .
  
  OPTIONAL { ?person dbo:musicalArtist ?band . }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the grandfather of Na'od who is royalty and an office holder
SELECT ?grandfather WHERE {
  # Find Na'od's father
  ?naod a dbo:Person ;
        foaf:name ""Na'od""@en .
  
  ?naod dbo:child ?father .

  # Find the grandfather (father of Na'od's father)
  ?father dbo:parent ?grandfather .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Person ;
               dbo:royalty true ;
               dbo:officeHolder true .
}

# Reference to Lamont Cranston, The Shadow's alter ego
SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?abstract WHERE {
  ?person a dbo:Person ;
          rdfs:label ""William Bayne""@en .
  OPTIONAL { ?person dbo:abstract ?abstract . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frédéric Bouraly""@en .
  
  OPTIONAL { ?person dbo:profession ?profession . }
  
  ?film a dbo:Film ;
        foaf:name ""Lasso the Moon""@en ;
        dbo:actor ?person .
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ian Gregson""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,1,2,0.0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCity ?musicalWork WHERE {
  dbr:Apache_Indian dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""birmingham""))
  BIND(""Birmingham"" AS ?nativeCity)
  
  OPTIONAL { 
    dbr:Apache_Indian dbo:musicalWork ?work .
    ?work a dbo:MusicalWork .
    BIND(str(?work) AS ?musicalWork)
  }
}
```",3,4,4,2,2,3,2,20,0,1,1,0.0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Kent_Allard a dbo:FictionalCharacter ;
                  dbo:alterEgo ?alterEgo .
  OPTIONAL { ?alterEgo dbo:profession ?profession . }
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?comicSeries WHERE {
  dbr:The_Shadow_(video_game) dbo:basedOn ?comicSeries .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
  ?child a dbo:Monarch ;
         foaf:name ?childName .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?albumActor ?movieActor WHERE {
  # Part 1: Find the album of ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  ?album dbo:artist ?albumArtist .

  # Part 2: Find the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?bookAuthor .

  # Part 3: Find a movie featuring the book's author
  OPTIONAL {
    ?movie dbo:starring ?actor .
    FILTER(?actor = ?bookAuthor)
    BIND(?actor AS ?movieActor)
  }

  # Bind album artist as actor for clarity in results
  BIND(?albumArtist AS ?albumActor)
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find the child of William I of Sicily who is royalty
  dbr:William_I_of_Sicily dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:RoyalFamily . }

  # Find the parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRoger .

  # Connect the child of this parent to find the royal child's father
  ?childOfParent dbo:child ?royalChild .
  FILTER(?parentOfRoger = ?childOfParent)

  # Find the father of this royal child
  ?royalChild dbo:father ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfSpouse WHERE {
  ?duchess a dbo:Person ;
           foaf:name ""Duchess Luise of Brunswick-Wolfenbüttel""@en .
  
  OPTIONAL { ?duchess dbo:spouse ?firstSpouse . }
  
  OPTIONAL { ?firstSpouse dbo:spouse ?spouseOfSpouse . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Shatrughan Sinha's profession
  ?shatrughan a dbo:Person ;
              foaf:name ""Shatrughan Sinha""@en .
  
  ?shatrughan dbo:profession ?profession .

  # Find Richard Grant Esterhuysen
  ?richard a dbo:Person ;
           foaf:name ""Richard Grant Esterhuysen""@en .

  # Ensure the person has the same profession and acted in a movie that is also a TV show
  ?person a dbo:Person ;
          foaf:name ?name .
  
  FILTER(?profession = ?personProfession)
  
  ?person dbo:profession ?personProfession .
  
  ?film a dbo:Film ;
        dbo:actor ?person ;
        dbo:genre ?genre .

  # Check if the film is also a TV show
  VALUES ?tvGenre { ""Television series"" }

  FILTER(?genre = ?tvGenre)

  # Ensure the person's birth name matches Richard Grant Esterhuysen
  OPTIONAL { ?person foaf:name ""Richard Grant Esterhuysen""@en }
  
  FILTER(EXISTS {
    ?richard foaf:name ""Richard Grant Esterhuysen""@en .
  })
}
```",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthDate ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Robert Lamar Thompson""@en .
  ?person dbo:musicalArtist true .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?militaryForce ?commander WHERE {
  VALUES ?event { 
    dbr:Battle_of_Fort_Royal 
    dbr:French_campaign_in_Egypt_and_Syria
  }
  
  ?event dbo:militaryUnit ?militaryForce .
  OPTIONAL { ?event dbo:commander ?commander . }

  FILTER(?battle IN (dbr:Battle_of_Fort_Royal, dbr:French_campaign_in_Egypt_and_Syria))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find the actor of the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .

  # Find Eugène Cattin's parent
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  OPTIONAL { ?eugeneCattin dbo:parent ?parentOfEugene . }

  # Find Doon Arbus' parent
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?doonArbus dbo:parent ?parentOfDoon . }

  # Check if the actor is a parent to both Eugène Cattin and Doon Arbus
  FILTER(?actor = ?parentOfEugene)
  FILTER(?actor = ?parentOfDoon)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify Michał Kazimierz Pac
  dbr:Micha%C5%82_Kazimierz_Pac a dbo:Person .

  # Find the force (event and military conflict)
  OPTIONAL { 
    ?force a dbo:Event ;
           dbo:militaryConflict ?militaryConflict .
  }

  # Find the commander who is also a politician and office holder
  ?commander a dbo:Person ;
             dbo:politician true ;
             dbo:officeHolder true .

  # Link the commander to Michał Kazimierz Pac through the force
  ?force dbo:commander ?commander .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Find predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Find child of the predecessor who is royalty
  ?predecessor dbo:child ?child .
  FILTER(?child a dbo:Monarch) 

  # Find father of Philip I, Prince of Taranto
  dbr:Philip_I,_Prince_of_Taranto dbo:parent ?fatherOfPhilip .

  # Find spouse of the father of Philip I, Prince of Taranto
  ?fatherOfPhilip dbo:spouse ?spouse .

  # Ensure the child is also a spouse of the father of Philip I, Prince of Taranto
  OPTIONAL { ?child dbo:spouse ?spouse }

  # Get the child of this royal child (grandchild)
  ?child dbo:child ?childOfChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?territory WHERE {
  { dbr:Copenhagen dbo:administrativeCapital ?territory . }
  UNION
  { dbr:Olaf_I_of_Denmark dbo:ruledTerritory ?ruledTerritory .
    BIND(?ruledTerritory AS ?territory)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?monarch WHERE {
  { 
    dbr:Spain dbo:monarch ?monarch .
  }
  UNION
  {
    dbr:Santiago_de_Compostela dbo:monarch ?monarch .
  }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?award dbo:number ""25"" .
  ?awardee dbo:recipientOfAward ?award .
  ?awardee dbo:relatedTo ?war .
}
```",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Find Saw Min Phyu and their spouse
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  OPTIONAL { ?sawMinPhyu dbo:spouse ?spouseOfSaw . }
  
  # Find the child of the spouse of Saw Min Phyu who is royalty
  OPTIONAL { ?childOfSpouse dbo:parent ?spouseOfSaw ;
                           a dbo:RoyalFamilyMember . }

  # Find predecessor of that child in a royal context
  OPTIONAL { ?predecessor dbo:successor ?childOfSpouse ;
                         a dbo:RoyalFamilyMember . }
  
  # Find Myat Hpone Pyo and their father
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  OPTIONAL { ?fatherOfMyat dbo:child ?myatHponePyo . }

  # Find the spouse of that father who is royalty
  OPTIONAL { ?spouseOfFather dbo:spouse ?fatherOfMyat ;
                            a dbo:RoyalFamilyMember . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  ?eleonore a dbo:Person ;
            foaf:name ""Eleonore of Austria, Queen of Poland""@en .
  
  ?eleonore dbo:father ?father .

  ?father dbo:spouse dbr:Ferdinand_II,_Holy_Roman_Emperor .

  OPTIONAL { ?father dbo:militaryCommander ?commandRole . }
  OPTIONAL { ?commandRole dbo:event ?warEvent . }
  FILTER(CONTAINS(LCASE(STR(?warEvent)), ""algerian war""))

  OPTIONAL { ?father dbo:participatedIn ?societalEvent . }
  OPTIONAL { ?father dbo:appearedIn ?tvShow . }

  FILTER EXISTS { ?commandRole a dbo:MilitaryCommander }
  FILTER EXISTS { ?societalEvent a dbo:SocietalEvent }
  FILTER EXISTS { ?tvShow a dbo:TelevisionShow }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Find the DBpedia resource for Darryl Paa Kwesi Bannerman-Martin ($pacely)
  dbr:Darryl_Paak dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Identify individuals who are writers
  ?writer a dbo:Writer ;
          foaf:name ?name .

  # Check if these individuals are also musical artists
  ?professional a dbo:MusicalArtist ;
                foaf:name ?name .

  # Ensure there is an association between them and $pacely as musical artists
  ?association dbo:musicalArtist ?professional .
  ?association dbo:musicalArtist dbr:Darryl_Paak .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?childOfSawShweKhet dbo:parent ?sawShweKhet ;
                     a dbo:Royalty .

  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?childOfSawShweKhet dbo:predecessor ?myatHponePyo .

  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut of Pyakaung""@en .

  ?parentOfMinHlaHtut dbo:child ?minHlaHtut .
  
  ?fatherOfChild a dbo:Person ;
                 dbo:parent ?childOfSawShweKhet ;
                 a dbo:Royalty .

  OPTIONAL { ?fatherOfChild dbo:spouse ?spouse . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:birthPlace dbr:New_York_(state) . }
}
```",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfBaedaMaryamI ?childOfDawitI WHERE {
  # Find the father of Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:father ?fatherOfBaedaMaryamI .

  # Reference Lamont Cranston as The Shadow's alter ego
  OPTIONAL { 
    dbr:Lamont_Cranston foaf:name ""Lamont Cranston""@en .
  }

  # Find the child of Dawit I
  dbr:Dawit_I dbo:child ?childOfDawitI .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharles .

  # Parent is a commander in the Thirty Years' War and child of Ferdinand II, Holy Roman Emperor
  ?parentOfCharles dbo:commanderInWar ?thirtyYearsWar .
  FILTER(CONTAINS(LCASE(STR(?thirtyYearsWar)), ""thirty years war""))
  
  ?parentOfCharles dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .

  # Child of this parent
  ?parentOfCharles dbo:child ?child .

  # Father of that child
  ?child dbo:father ?father .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mitaka ?timeZone WHERE {
  ?mitaka a dbo:City ;
          foaf:name ""Mitaka""@en .
  OPTIONAL { ?mitaka dbp:timeZone ?timeZone . }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceCountry ?institution WHERE {
  ?person a dbo:Person ;
          foaf:name ""Little Hat Jones""@en .
  
  # Retrieve birthplace and ensure it is a country
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbp:countryName ?birthPlaceCountry .

  # Find institutions in Georgia related to Little Hat Jones
  OPTIONAL {
    ?institution dbo:location dbr:Georgia_(U.S._state) ;
                 dbo:associatedPerson ?person .
  }
}
```",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Arthur_Stanley_(politician) dbo:parent ?father .
  
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?father .
  
  dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?father .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Sergio_Agüero dbo:playsFor ?team .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan_Standard_Time dbo:timeZone ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?militaryForce WHERE {
  {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedIn ?battle .
    ?battle dbo:militaryUnit ?militaryForce .
  }
  UNION
  {
    dbr:Battle_of_Fort_Royal dbo:participatedIn ?battle .
    ?battle dbo:militaryUnit ?militaryForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  { 
    dbr:Paradise_(2013_film) dbo:starring ?actor .
  }
  UNION
  {
    dbr:Janusz_Kamiński dbo:spouse ?actor .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?work ?birthplace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ethan Iverson""@en .
  
  ?person dbo:works ?work .

  OPTIONAL { ?work dbo:birthPlace ?birthplace . }
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?entity a dbo:City ;
            dbo:locatedIn ?birthPlace .
  }
  
  OPTIONAL { 
    ?entity a dbo:Organization ;
            dbo:headquarter ?birthPlace .
  }

  FILTER(?entity != dbr:Yamaza_Enjirō)
}
```",2,2,3,2,1,2,3,28,0,0,104,0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut of Pyakaung""@en .
  
  ?parent dbo:child ?minHlaHtut .
  
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .

  ?parent dbo:predecessor ?myatHponePyo .
  
  ?parent dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  ?headOfGovernment dbo:memberOfParliament ?party ;
                    dbo:headOfGovernment ?administration .

  ?administration dbo:country dbr:Spain .
}
```",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  dbr:François_Ier,_Duke_of_Lorraine a dbo:Person ;
                                      foaf:name ""François I, Duke of Lorraine""@en .
  
  ?child dbo:childOf dbr:François_Ier,_Duke_of_Lorraine ;
         a dbo:RoyalFamilyMember .

  ?father dbo:parent ?child .
  FILTER(?father = dbr:François_Ier,_Duke_of_Lorraine)

  ?parent dbo:parent ?father .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find the leader of West Germany (Chancellor)
  ?chancellor a dbo:Politician ;
              dbo:office ""Federal Chancellor""@en ;
              dbo:country dbr:West_Germany .

  # Find the manager of SBV Vitesse for 2020-21
  ?manager a dbo:SportsManager ;
           dbo:team dbr:SBV_Vitesse ;
           dbo:season ""2020–21""^^xsd:string .

  # Check if they are the same person
  FILTER(?chancellor = ?manager)

  # Get their native country
  OPTIONAL { ?chancellor dbo:nationality ?nativeCountry . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book WHERE {
  ?billClinton a dbo:Person ;
               dbo:spouse dbr:Hillary_Clinton ;
               dbp:residence dbr:Chappaqua,_New_York ;
               dbo:officeHolder ?office .
  
  ?book a dbo:Book ;
        dbo:author ?billClinton .

}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  # Identify Bobby Shmurda's band
  ?person a dbo:Person ;
          foaf:name ""Bobby Shmurda""@en .
  
  ?band dbo:member ?person ;
        dbo:award ?award .

  # Ensure the band is from New York (state)
  ?band dbo:location dbr:New_York_(state) .

  # Find the native place of the award
  ?award dbo:nativePlace ?nativePlace .
  
  # Ensure the native place is a region, American state, and settlement
  ?nativePlace a dbo:Region ;
               dbo:country dbr:United_States ;
               dbo:stateOrProvince ?state ;
               dbo:settlement ?settlement .

  FILTER(?state = ?settlement)
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Get child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippChild .

  # Step 2: Get grandchild (child of a child) of Archduke Charles Louis who is royalty
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?archdukeChild .
  ?archdukeChild dbo:child ?grandchildRoyalty .
  FILTER(?grandchildRoyalty a dbo:Royalty)

  # Step 3: Find the predecessor of this grandchild
  ?predecessor dbo:successor ?grandchildRoyalty .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tvShow WHERE {
  ?person a dbo:Person ;
          foaf:name ""The Shadow""@en .
  
  OPTIONAL { 
    ?person foaf:givenName ""Richard"" .
    ?person foaf:familyName ""Grant Esterhuysen"" .
  }
  
  ?role dbo:actor ?person .
  ?tvShow a dbo:TelevisionSeries ;
          dbo:starring ?role .
}
```",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Alexander Lvovich Davydov
  OPTIONAL {
    dbr:Aleksandr_Lvovich_Davydov dbo:participatedIn ?war .
  }
  
  # Awardees of the Order of St. George (4th class) and their wars
  OPTIONAL {
    ?awardee dbo:awardReceived dbr:Order_of_St._George_(4th_class) ;
            dbo:participatedIn ?war .
  }

  # Ensure all entities are related to the Russian Empire
  FILTER EXISTS { 
    ?entity dbo:nationality dbr:Russian_Empire .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthDate ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?manuelPintoDaCosta a dbo:Person ;
                       foaf:name ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { ?manuelPintoDaCosta dbo:officeHolder ?office . }
  
  FILTER EXISTS {
    ?office dbo:isPartOf ?conflict .
    ?conflict a (dbo:MilitaryConflict | dbo:SocietalEvent) .
  }
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?authorBirthPlace ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Birth place of the author of ""El Deafo""
  OPTIONAL { 
    ?author a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    ?author dbo:birthPlace ?authorBirthPlace .
  }

  # Birth place of the governor of Virginia
  OPTIONAL { 
    ?governor a dbo:Politician ;
              foaf:name ""Glenn Youngkin""@en ;
              dbo:governmentRole [
                dbo:officeHolder dbr:Governor_of_Virginia ;
                                dbo:holder ?governor .
              ] .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }

  # Birth place of Vince Gilligan
  OPTIONAL { 
    ?vinceGilligan a dbo:Person ;
                   foaf:name ""Vince Gilligan""@en .
    ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?album WHERE {
  ?song a dbo:Song ;
        dbo:musicalWork ?musicalWork ;
        dbo:artist dbr:T.I. .

  ?musicalWork a dbo:MusicalWork .
  
  ?song dbo:album ?album .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?ianGregson a dbo:Person ;
              foaf:name ""Ian Gregson""@en .
  
  ?award dbo:recipient ?ianGregson .

  OPTIONAL { ?award dbo:awardedMovie ?movie . }
  
  ?movie dbo:producer ?producer .
}
```",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickCurranBand ?kimWilsonBand WHERE {
  OPTIONAL {
    ?nickCurran a dbo:Person ;
                foaf:name ""Nick Curran""@en .
    ?nickCurran dbo:associatedBand ?nickCurranBand .
  }
  
  OPTIONAL {
    ?kimWilson a dbo:Person ;
               foaf:name ""Kim Wilson""@en .
    ?kimWilson dbo:associatedBand ?kimWilsonBand .
  }
}
```",3,4,4,2,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:musician :musician ;
          dbo:artist :artist .
  
  ?person dbo:birthPlace ?place .
  
  ?place rdfs:label ""Central Region, Ghana""@en .

  FILTER(LANG(?name) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Athlete ;
          dbo:sportTeamMemberOf dbr:Lai_Sun_Cheung ;
          dbo:birthDate ?birthdate .
  
  FILTER(YEAR(?birthdate) = 1981 && MONTH(?birthdate) = 12 && DAY(?birthdate) = 1)
  
  ?person dbo:occupation [ a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ] .
}
```",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childOfRogerII ?fatherOfChild ?royaltyOfficeHolder ?childOfAlfonsoVI WHERE {
  # Find the child of Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?childOfRogerII .
  
  # Find the father of that child, who is royalty
  OPTIONAL { ?fatherOfChild a dbo:Person ;
                          foaf:name ?fatherName ;
                          dbo:parent ?childOfRogerII . }
  FILTER(?fatherOfChild = ?royaltyOfficeHolder)
  
  # Reference to William I for finding another royalty and office holder
  dbr:William_I_of_Sicily a dbo:Person .
  OPTIONAL { ?royaltyOfficeHolder a dbo:Person ;
                                 foaf:name ?officeHolderName ;
                                 dbo:office ?office . }
  FILTER(?royaltyOfficeHolder != dbr:William_I_of_Sicily)
  
  # Find the child of the child of Alfonso VI
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?childOfAlfonsoVI .
}
```",6,9,7,3,3,3,3,71,1,10,0,0.09090909090909091,1.0,0.16666666666666669
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:William_I_of_Sicily dbo:child ?child .
  ?child a dbo:Monarch .
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:The_Campus_Queen dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,6,0,1,1.0,0.8571428571428571,0.923076923076923
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Dawit_I dbo:child ?child .
}

UNION

SELECT ?alterEgo WHERE {
  dbr:The_Shadow foaf:name ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { 
    ?person dbo:birthPlace dbr:Jamshedpur .
  }
  OPTIONAL { 
    ?person dbp:residence dbr:Jamshedpur .
  }
}
```",1,1,2,1,1,2,2,9,49,1048527,19,4.673004150390625e-05,0.7205882352941176,9.34540225281411e-05
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonore_of_Austria_Queen_of_Poland dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the 30th (Cambridgeshire) Regiment of Foot in a conflict
  ?regiment dbo:militaryConflict ?conflict .
  ?regiment dbp:name ""30th (Cambridgeshire) Regiment of Foot"" .

  # Find the commanders involved in Battle of Fort Royal and Cape Finisterre (1805)
  dbr:Battle_of_Fort_Royal dbo:commander ?fortRoyalCommander .
  dbr:Battle_of_Cape_Finisterre_1805 dbo:commander ?capeFinisterreCommander .

  # Find the commander common to both battles and the regiment's conflict
  FILTER(?conflict = dbr:Battle_of_Fort_Royal || ?conflict = dbr:Battle_of_Cape_Finisterre_1805)
  
  OPTIONAL { ?fortRoyalCommander dbp:name ?commanderName }
  OPTIONAL { ?capeFinisterreCommander dbp:name ?commanderName }

  # Ensure the commander is common across all
  FILTER(?fortRoyalCommander = ?capeFinisterreCommander && (?fortRoyalCommander = ?conflict || ?capeFinisterreCommander = ?conflict))
  
  BIND(?fortRoyalCommander AS ?commander)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer ?figure WHERE {
  # Find the writer of ""The First Glove""
  ?work a dbo:Book ;
        foaf:name ""The First Glove""@en .
  OPTIONAL { ?work dbo:author ?writer . }

  # Find figures associated with ""Наши парни / Nashi parni""
  ?band a dbo:Band ;
        foaf:name ""Наши парни / Nashi parni""@ru .
  OPTIONAL { ?band dbo:member ?figure . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?spouse WHERE {
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  OPTIONAL { 
    ?sawMinHla dbo:child ?child .
  }
  
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  OPTIONAL {
    ?sawShweKhet dbo:spouse ?spouse .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child1 .

  # Child of the child (Grandchild)
  ?child1 dbo:child ?grandchild .

  # William I of Sicily's child who is royalty
  ?williamChild a dbo:Person ;
                dbo:parent ?fatherOfRoyalty .
  
  dbr:William_I_of_Sicily dbo:child ?williamChild .

  # Ensure the father is royalty
  ?fatherOfRoyalty a dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Find Paulus Powell's birth place that is a region and administrative region
  ?paulusPowell dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/"") && 
         (CONTAINS(LCASE(STR(?birthPlace)), ""region"") || CONTAINS(LCASE(STR(?birthPlace)), ""administrative region"")))

  # Find the governor of that birth place
  ?governor dbo:officeHolder ?office .
  ?office dbo:positionTitle ""Governor""@en ;
          dbo:location ?birthPlace .

  ?governor foaf:name ?governorName .
  OPTIONAL { ?governor dbo:birthPlace ?governorBirthPlace . }

  # Find Vince Gilligan's award and the awardee of that award
  dbr:Vince_Gilligan dbo:awardReceived ?award .
  ?awardee dbo:awardReceived ?award .

  OPTIONAL { ?awardee dbo:birthPlace ?awardeeBirthPlace . }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Switzerland .
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
  }
  
  OPTIONAL {
    ?person dbo:nationality ?adminCountry .
    ?adminCountry dbo:countryLeader dbr:Nicholas_II_of_Russia .
  }
}
```",4,5,5,2,3,2,3,28,1,905,0,0.0011037527593818985,1.0,0.002205071664829107
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?davidPaton a dbo:Person ;
              foaf:name ""David Paton""@en .
  
  ?davidPaton dbo:member ?associatedBand .

  ?associatedBand dbo:bandMember ?bandMember .
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?album a dbo:Album ;
         foaf:name ""Nothing to Gein""@en .
  
  ?album dbo:producer ?producer .

  ?producer a dbo:Organization, foaf:Group .

  ?producer dbo:member ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shatrughan Sinha""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  # Find Westport, Connecticut
  dbr:Westport,_Connecticut dbo:locatedIn dbr:Connecticut .
  
  # Identify the ruling party in Westport, Connecticut
  ?rulingParty a dbo:PoliticalParty ;
               dbo:location dbr:Westport,_Connecticut ;
               dbo:member ?partyMember .

  # Ensure it is an organization and political party
  FILTER(?rulingParty = ?politicalParty)
}
```",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:givenName ""Harriette""@en ;
          foaf:familyName ""Lake""@en .
  
  OPTIONAL { 
    ?partyMember dbo:member ?person .
    ?landmark dbo:elevation ?elevation .
    FILTER(?elevation = 20.1168)
    ?rulingParty dbo:location ?landmark .
    ?partyMember dbo:memberOf ?rulingParty .
  }
  
  OPTIONAL {
    ?rogerPryor a dbo:Person ;
                foaf:name ""Roger Pryor (actor)""@en .
    ?person dbo:spouse ?rogerPryor .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Robert Calder's military force
  OPTIONAL {
    dbr:Robert_Calder dbo:commander ?force1 .
    ?force1 a dbo:MilitaryUnit ;
            dbo:participatedIn ?war1 .
  }

  # 30th (Cambridgeshire) Regiment of Foot's war
  OPTIONAL {
    dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedIn ?war2 .
  }

  # Find common military force involved in both contexts
  FILTER(?force1 = ?militaryForce)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?profession WHERE {
  dbr:Walter_B._Gibson dbo:creatorOf dbr:The_Shadow .
  
  OPTIONAL { 
    dbr:The_Shadow dbo:alternateName ?alterEgo .
    
    ?person a dbo:Person ;
            foaf:name ?alterEgo ;
            dbo:profession ?profession .
            
    FILTER(CONTAINS(LCASE(?profession), ""singer""))
  }
}
```",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?tomPhillips a dbo:Person ;
               foaf:name ""Tom Phillips""@en .
  OPTIONAL { ?tomPhillips dbo:participatedIn ?war . }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse WHERE {
  # Find the commander in Third Taiwan Strait Crisis
  ?event dbo:commander ?commander .
  FILTER(STR(?event) = ""Third_Taiwan_Strait_Crisis""@en)

  # Find the author of ""An Invitation to the White House""
  ?author a dbo:Person ;
          foaf:name ?name ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:officeHolder ?office .
  ?work dbo:author ?author ;
        foaf:name ""An_Invitation_to_the_White_House""@en .

  # Find the spouse of this author
  OPTIONAL { ?author dbo:spouse ?spouse . }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  dbr:French_Revolutionary_Wars dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,58,0,0,1.0,1.0,1.0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war WHERE {
  # Part for ""Awardee of 25""
  {
    ?award a dbo:Award ;
           dbo:date ""25""^^xsd:gYear .
    ?recipient dbo:recipient ?award .
    ?recipient dbo:participatedIn ?war .
  }
  
  UNION
  
  # Part for ""Alexander Lvovich Davydov""
  {
    dbr:Alexander_Lvovich_Davydov dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Ebrahim Alkazi""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Ebrahim Alkazi"" AS ?personName)
  }
  UNION
  {
    ?person a dbo:Person ;
            foaf:name ""Smita Patil""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Smita Patil"" AS ?personName)
  }
}
```",2,2,3,1,2,3,2,20,1,3,0,0.25,1.0,0.4
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?santiagoTenant ?spainTenant ?electionLeaderOffice WHERE {
  # Tenant of Santiago de Compostela (assuming tenant refers to mayor)
  dbr:Santiago_de_Compostela dbo:mayor ?santiagoTenant .

  # Tenant of Spain (assuming tenant refers to prime minister or similar leader)
  dbr:Spain dbo:headOfGovernment ?spainTenant .

  # Office of the leader in the 2009 Galician regional election
  dbr:Galicia_election,_2009 dbo:leader ?electionLeader .
  ?electionLeader dbo:office ?electionLeaderOffice .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find the battle event
  dbr:Battle_of_Cape_Finisterre_(1805) a dbo:MilitaryConflict ;
                                      dbo:participatedIn ?battle .

  # Identify military forces involved in the battle
  ?battle dbo:militaryForce ?militaryForce .

  # Identify commanders of the military force
  ?militaryForce dbo:commander ?commander .

  # Link to ""The Triple X's"" if applicable (assuming it refers to a known entity)
  OPTIONAL { ?commander foaf:name ""The Triple X's""@en }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  # Find Marty Pollio's birthday
  dbr:Marty_Pollio dbo:birthday ?martyBirthday .

  # Find an athlete born on Marty Pollio's birthday
  ?athlete a dbo:Athlete ;
           dbo:birthday ?martyBirthday .

  # Find the soccer player and manager born on 1979-11-03
  ?person a dbo:SoccerPlayer, dbo:SportsManager ;
          dbo:birthday ""1979-11-03""^^xsd:date .

  # Ensure this person played in the same team as Sergio Agüero
  ?sergioTeam dbo:teamMember dbr:Sergio_Agüero .
  ?person dbo:teamMember ?sergioTeam .

  # Retrieve the team
  ?sergioTeam a dbo:SportsTeam ;
              foaf:name ?team .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?militaryForce ?commander WHERE {
  VALUES ?battle { dbr:Battle_of_Fort_Royal dbr:French_campaign_in_Egypt_and_Syria }
  
  ?battle dbo:militaryForce ?militaryForce .
  OPTIONAL { ?battle dbo:commander ?commander . }
}

SELECT DISTINCT ?awardee ?event WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath ;
          a dbo:Person .

  ?person foaf:name ?awardeeName .

  ?event dbo:participant ?person ;
         a dbo:Event, dbo:SocietalEvent .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Roy Barreras""@en .
  OPTIONAL { ?person dbo:party ?party . }
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?award a dbo:Award ;
         dbo:name ""Commander of the Order of the British Empire""@en .
  
  ?award dbo:recipient ?awardee .

  OPTIONAL { ?awardee dbo:militaryForce ?force . }
}
```",2,2,3,2,1,3,2,20,0,0,162,0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?team WHERE {
  # Find the actor who is also a soccer player and athlete in ""All or Nothing: Manchester City""
  ?actor a dbo:Person ;
         dbo:actor dbr:All_or_Nothing:_Manchester_City ;
         dbo:soccerPlayer ?;
         dbo:athlete ? .

  # Find the person born on 1979-11-03 who is both a soccer player and manager
  ?person a dbo:Person ;
          dbo:birthday ?birthDate ;
          dbo:soccerPlayer ?;
          dbo:soccerManager ? .
  
  FILTER (YEAR(?birthDate) = 1979 && MONTH(?birthDate) = 11 && DAY(?birthDate) = 3)

  # Get the team of this person
  ?person dbo:teamMember ?team .

}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?group WHERE {
  dbr:Burnt_by_the_Sun_2009 dbo:musicBy ?group .
  FILTER(STRSTARTS(STR(?group), ""http://dbpedia.org/resource/Category:""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?date .
  FILTER(xsd:date(?date) = ""1979-11-03""^^xsd:date)
  
  ?person a dbo:SportsManager .
}
```",1,3,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Thompson""@en .
  
  FILTER EXISTS { 
    ?person dbo:profession ?p .
    ?p rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""singer"") || CONTAINS(LCASE(?label), ""band""))
  }
}
```",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?bobby a dbo:MusicalArtist ;
         foaf:name ""Bobby Shmurda""@en .
  
  ?bobby dbo:birthName ?birthName .

  ?associatedBandMember dbo:associatedBandMember ?bobby ;
                        a dbo:MusicalArtist ;
                        foaf:name ?bandMemberName .
  
  FILTER(?birthName = ?bandMemberBirthName)
  
  OPTIONAL { ?associatedBandMember dbo:birthName ?bandMemberBirthName }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author WHERE {
  # Bill Clinton's authored work
  ?work a dbo:Book ;
        dbo:author ?author .
  
  # Work is associated with Bill Clinton
  ?billClinton dbo:autobiography ?work .

  # Author was commander in the war (AIDS as societal event)
  OPTIONAL { ?author dbo:commanderInWar ?aidsCrisis . }
  FILTER(?aidsCrisis = dbr:AIDS)

  # Owner of USS Arcadia
  ?owner a dbo:Person ;
         dbo:ownsUSSArcadia dbr:USS_Arcadia_(ID-1605) .

  # Spouse of Hillary Clinton
  ?hillaryClinton foaf:name ""Hillary Rodham Clinton""@en .
  OPTIONAL { ?author dbo:spouse ?hillaryClinton }

  # Ensure the author is connected to all entities
  FILTER(?owner = ?author)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  dbr:Napoleon_Zervas dbo:participatedIn ?war .
  
  OPTIONAL { 
    ?war dbo:location dbr:Athens .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  OPTIONAL { 
    dbr:Napoleon_Zervas dbo:participatedIn ?war .
  }
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .
  
  FILTER EXISTS { ?parent a dbo:Politician . }
  FILTER EXISTS { ?parent a dbo:OfficeHolder . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?personWithBirthName WHERE {
  # Find band members of Uncle Murda
  ?uncleMurda a dbo:MusicalArtist ;
              foaf:name ""Uncle Murda""@en .
  OPTIONAL { ?uncleMurda dbo:bandMember ?bandMember . }

  # Find person with the birth name of Bobby Shmurda
  ?bobbyShmurda a dbo:Person ;
                foaf:name ""Bobby Shmurda""@en .
  ?bobbyShmurda foaf:birthday ?birthday .
  OPTIONAL { ?personWithBirthName foaf:name ?birthName .
             FILTER(?birthName = (SELECT ?name WHERE {
               ?bobbyShmurda foaf:givenName ?name
             }))
           }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?producerOfTomSawyer ?claimToFame ?producerOfClaimToFame WHERE {
  # Find the professional and producer of ""The Adventures of Tom Sawyer (1938 film)""
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:director ?professional .
  OPTIONAL { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerOfTomSawyer . }

  # Find the actor of ""High Society Blues"" and their claim to fame
  dbr:High_Society_Blues dbo:actor ?actor .
  OPTIONAL { ?actor dbo:notableWorkOrClaimToFame ?claimToFame . FILTER(STRSTARTS(STR(?claimToFame), ""http://dbpedia.org/resource/"")) }

  # Find the producer of this claim to fame
  OPTIONAL {
    ?claimToFame dbo:producer ?producerOfClaimToFame .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show WHERE {
  ?awardee a dbo:NobelPrize ;
           dbo:category dbr:Nobel_Prize_in_Physics .
  
  ?institution dbo:almaMater ?awardee .
  
  OPTIONAL { ?institution dbo:event ?show . }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find Quincy Adams Gillmore's resource and his military force
  dbr:Quincy_Adams_Gillmore a dbo:MilitaryPerson ;
                            dbo:militaryUnit ?force .

  OPTIONAL {
    # Identify awards associated with Quincy Adams Gillmore
    ?award dbo:recipient dbr:Quincy_Adams_Gillmore .
    
    # Find the awardee of the award
    ?award dbo:recipient ?awardee .
    
    # Consider entities related to Charleston, South Carolina
    OPTIONAL {
      ?charlestonEntity a dbo:Place ;
                        foaf:name ""Charleston, South Carolina""@en .
      
      # Link the awardee or force to Charleston if applicable
      OPTIONAL { ?awardee dbo:location ?charlestonEntity }
      OPTIONAL { ?force dbo:location ?charlestonEntity }
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Find the military force involved in the Battle of Vienna
  dbr:Battle_of_Vienna dbo:militaryForce ?militaryForce .
  
  # Identify the commander related to this military force and a television show
  ?commander dbo:commanderOf ?militaryForce ;
            dbo:isPartOf ?tvShow .

  # Ensure the commander is also linked to a societal event (Battle of Vienna)
  ?societalEvent dbo:relatedTo ?commander .
  
  # Find the successor of Yurii Khmelnytsky
  dbr:Yurii_Khmelnytsky dbo:successor ?successor .

  # Link the commander with the successor
  FILTER(?commander = ?successor)

  # Identify the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:writer ?writer .
  
  # Reference the writer in the query (though not directly linked to the commander)
  OPTIONAL { ?commander foaf:name ?writerName }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Ann Sothern's birth name
  ?annSothern a dbo:Person ;
              foaf:name ""Ann Sothern""@en .
  OPTIONAL { ?annSothern foaf:nick ?birthName . }

  # Ruling party in Central, Louisiana
  ?party a dbo:PoliticalParty ;
         dbp:country dbr:United_States ;
         dbp:stateOrTerritory dbr:Louisiana ;
         dbp:region ""Central""@en .
  OPTIONAL { ?member dbo:memberOf ?party . }

  # Actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en ;
         dbo:actor ?actor .
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Combine conditions
  FILTER(?annSothern = ?member)
  FILTER(?spouse = ?person)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?realName WHERE {
  # Find associated musical artist of Nick Curran
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:associatedBandOrMusicalArtist ?associatedArtist . }

  # Find the real name of The Fabulous Thunderbirds
  ?fabulousThunderbirds a dbo:Band ;
                        foaf:name ""The Fabulous Thunderbirds""@en .
  OPTIONAL { ?fabulousThunderbirds foaf:name ?realName . }
}
```",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida .
  
  ?bandMemberRelation dbo:bandMember ?person .
  ?bandMemberRelation dbo:musicalArtist ?associatedArtist .

  ?gs9Member a dbo:Person ;
             dbo:memberOfBand dbr:GS9 .
  ?gs9Member dbo:musicalArtist ?associatedArtist .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  ?person a dbo:Person ;
          dbo:birthday ""1945-03-30""^^xsd:date ;
          dbo:musicalArtist true .
  
  ?member dbo:bandMember ?person .
  ?member dbo:band ?band .
}
```",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?nickname WHERE {
  ?person a dbo:Person ;
          foaf:name ""Aleksandr Filimonov""@en .
  
  OPTIONAL { 
    ?person dbo:member ?team .
    ?team rdfs:label ""Russia national football team""@en .
    ?team dbo:nickname ?nickname .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?givenName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Bob Thompson""@en .
  OPTIONAL { ?person foaf:givenName ?givenName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgoProfession ?fredericProfession WHERE {
  # Query for The Shadow's alter ego profession
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  OPTIONAL { 
    ?shadow dbo:alterEgo ?alterEgo .
    ?alterEgo dbo:profession ?alterEgoProfession .
  }

  # Query for Frédéric Bouraly's profession
  ?frederic a dbo:Person ;
            foaf:name ""Frédéric Bouraly""@en .
  OPTIONAL { 
    ?frederic dbo:profession ?fredericProfession .
  }
}
```",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?kimWilson dbo:member ?band . }
}
```",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         dbo:awardNumber ""25""^^xsd:int .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:child ?child .
  FILTER(?child a dbo:Monarch)
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgo WHERE {
  # Find the producer of the film
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .

  # Identify Tom Sawyer as a fictional character related to the film
  ?film dbo:fictionalCharacter ?tomSawyer .
  FILTER(STRSTARTS(STR(?tomSawyer), STR(dbr:Tom_Sawyer)))

  # Find Huck Finn as an alter ego of Tom Sawyer
  ?huckFinn dbo:alterEgoOf ?tomSawyer .
  FILTER(STRSTARTS(STR(?huckFinn), STR(dbr:Huckleberry_Finn)))

  # Establish a connection between Huck Finn and Kent Allard
  OPTIONAL { ?huckFinn foaf:name ""Kent Allard""@en }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Los_Angeles .
  
  ?movie dbo:starring ?actor ;
         dbo:work ?person .

}
```",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?successor WHERE {
  # Michał Kazimierz Pac as a commander in a military conflict
  dbr:Mikołaj_Kazimierz_Pac a dbo:Person ;
                            dbo:officeHolder ?office ;
                            dbo:commanderOf ?event .
  
  # The event is a military conflict
  ?event a dbo:MilitaryConflict .

  # Find the successor of Michał Kazimierz Pac in his role as commander
  OPTIONAL { ?successor dbo:predecessor dbr:Mikołaj_Kazimierz_Pac ;
                        dbo:commanderOf ?event . }

  # Reference to Paul Westerberg, writer of Always the Love Songs
  OPTIONAL { dbr:Paul_Westerberg foaf:name ""Paul Westerberg""@en }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?war WHERE {
  # Find Dawid Olejniczak's residence that is a country
  ?dawid a dbo:Person ;
         foaf:name ""Dawid Olejniczak""@en .
  ?dawid dbo:residence ?residence .
  ?residence a dbo:Country .

  # Find the war associated with Alexander Suvorov
  ?suvorov a dbo:Person ;
           foaf:name ""Alexander Suvorov""@en .
  ?suvorov dbo:participatedIn ?war .
  
  BIND(?residence AS ?country)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:Hartlepool_United_F.C. dbo:manager ?manager .
  
  ?manager dbo:nationalityPlace dbr:Bristol .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?associatedBand WHERE {
  ?pacely a dbo:Person ;
          foaf:name ""Pacely""@en .
  ?pacely rdf:type dbo:Musician .
  OPTIONAL { ?pacely dbo:associatedBand ?associatedBand . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCharlesMartel ?spouseOfFatherOfPhilipI ?royalChild WHERE {
  # Find the parent of Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .

  # Find the father of Philip I, Prince of Taranto and his spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?fatherOfPhilipI .
  OPTIONAL { ?fatherOfPhilipI dbo:spouse ?spouseOfFatherOfPhilipI . }

  # Find a child who is royalty from the predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessorOfStephenV .
  ?childOfPredecessor dbo:parent ?predecessorOfStephenV ;
                     a dbo:RoyalFamilyMember .
  FILTER(?childOfPredecessor = ?royalChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Awardee of an award by United States Congress
  ?award1 a dbo:Award ;
          dbo:awardingBody dbr:United_States_Congress .
  
  ?recipient1 dbo:recipientOfAward ?award1 .

  # Gillmore Medal awardee
  ?award2 a dbo:Award ;
          foaf:name ""Gillmore Medal""@en .

  ?recipient2 dbo:recipientOfAward ?award2 .

  # Wars associated with the recipients of both awards
  ?recipient1 dbo:war ?war .
  ?recipient2 dbo:war ?war .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?host WHERE {
  dbr:Nobel_Prize_in_Physics dbo:awardedBy ?host .
  ?host a dbo:EducationalInstitution .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Find the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?child .

  # Step 2: Identify a royal parent of this child
  ?child dbo:parent ?royalParent .
  FILTER EXISTS { ?royalParent dbo:royalty . }

  # Step 3: Find the child of this royal parent
  ?royalParent dbo:child ?grandchild .
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandRealName ?memberResource WHERE {
  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
                               foaf:name ?bandRealName .

  # Find a band member who is a musical artist born on 1945-03-30
  ?memberResource a dbo:MusicalArtist ;
                  dbo:birthDate ""1945-03-30""^^xsd:date ;
                  dbo:memberOf dbr:The_Fabulous_Thunderbirds .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedBand WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Plotkin""@en .
  
  OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
  OPTIONAL { ?person dbo:memberOf ?associatedBand . }
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find the death place of Antonios Varthalitis
  ?antonios a dbo:Person ;
            foaf:name ""Antonios Varthalitis""@en .
  ?antonios dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the awardee of award number 30 and their associated war
  ?awardee a dbo:Person ;
           dbo:award dbr:Award_30 .
  ?war dbo:participant ?awardee .

  # Return the settlement if it matches the conditions
  FILTER(?deathPlace = ?settlement)
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?rogerPryor a dbo:Person ;
              foaf:name ""Roger Pryor""@en .
  OPTIONAL { ?rogerPryor dbo:spouse ?spouse . }
  
  OPTIONAL {
    ?annSothern a dbo:Person ;
                foaf:name ""Ann Sothern""@en .
    ?annSothern foaf:birthday ?birthDate .
    ?annSothern foaf:mbox ?email .
    ?annSothern foaf:givenName ?givenName .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace WHERE {
  # Find Paulus Powell's birth place
  ?paulus a dbo:Person ;
          foaf:name ""Paulus Powell""@en .
  
  ?paulus dbo:birthPlace ?birthPlace .

  # Ensure the birth place is both a region and an administrative region
  ?birthPlace a dbo:Region, dbo:AdministrativeRegion .

  # Find the governor of this region who is also a politician
  ?governor a dbo:Politician ;
            dbo:governmentRole ?role .
  
  ?role dbo:officeHolder ?governor ;
        dbo:officeName ""Governor""@en .
  
  ?role dbo:administrativeArea ?birthPlace .

  # Get the birth place of this governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?associatedPerson ?musicalArtist WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Identify Darryl Paa Kwesi Bannerman-Martin
  ?darryl a dbo:Person ;
          foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  # Find the musical artist associated with $pacely's birth name
  ?paulMcCartney a dbo:Person ;
                 foaf:name ""$pacely""@en .
  OPTIONAL { ?paulMcCartney dbo:musicalArtist ?musicalArtist . }

  # Link Darryl to Rod Argent (assuming some association)
  OPTIONAL { ?darryl dbo:associatedWith ?rodArgent }
  
  # Link the musical artist to Darryl
  OPTIONAL { ?musicalArtist dbo:associatedWith ?darryl }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?movie a dbo:Film ;
         dbo:country dbr:India .
  
  ?movie dbo:starring ?dipankarDe .
  ?dipankarDe foaf:name ""Dipankar De""@en .

  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}
```",3,5,4,3,1,3,2,20,0,0,13,0,0.0,0
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?established WHERE {
  dbr:Federal_University_of_Paraíba dbo:established ?established .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Artist ;
          dbo:nationality dbr:Ghana .
  
  OPTIONAL { 
    ?person dbo:residence dbr:Central_Region_(Ghana) .
  }
  
  ?person dbo:birthName ?birthName .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military unit involved in the Battle of Vienna
  ?battle a dbo:MilitaryConflict ;
          dbo:participatingMilitaryUnit ?militaryUnit .

  FILTER(?battle = dbr:Battle_of_Vienna)

  # Identify the commander of this military unit
  ?commander dbo:commanderOf ?militaryUnit .

  # Link to George Ducas, who is associated with the Battle of Vienna
  ?ducas a dbo:Person ;
         foaf:name ""George Ducas""@en .
  
  OPTIONAL { ?ducas dbo:depicts ?tvShow . }
  
  # Ensure the commander is also depicted in a television show
  OPTIONAL { ?commander dbo:depicts ?tvShow . }

  FILTER(?ducas != ?commander)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Stephen V of Hungary and his predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # From the predecessor, find a child who is royalty
  ?predecessor dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch } OR 
              EXISTS { ?child a dbo:RoyalFamilyMember }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInBirthPlace WHERE {
  # Toyotomi Hideyoshi's child
  dbr:Toyotomi_Hideyoshi dbo:child ?child .

  # Wars involving the child
  ?child dbo:participatedIn ?war .

  # Yamaza Enjirō's birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Entity in the birth place of Yamaza Enjirō
  ?entityInBirthPlace dbo:location ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Find the alter ego of The Shadow in comics
  ?shadowGame a dbo:VideoGame ;
              foaf:name ""The Shadow (video game)""@en .
  
  ?alterEgo dbo:characterOf ?shadowGame ;
            a dbo:ComicsCharacter .

  # Find an actor from Ab Kya Hoga who is also a politician
  ?actor a dbo:Actor ;
         dbo:actedIn <http://dbpedia.org/resource/Ab_Kya_Hoga> .
  
  ?actor foaf:name ?name .
  ?actor dbo:profession ?politicianRole .

  # Match the profession of the alter ego with that of the actor-politician
  ?alterEgo dbo:profession ?professional .
  
  FILTER(?professional = ?politicianRole)
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?commander a dbo:Person ;
             dbo:officeHolder true ;
             dbo:politician true .
  
  ?russianPolishWar dbo:commander ?commander ;
                   dbo:name ""Russo-Polish War (1654–1667)""@en .
  
  ?greatTurkishWar dbo:commander ?commander ;
                  dbo:name ""Great Turkish War""@en .

  OPTIONAL { ?commander dbo:successor ?successor . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  ?person dbo:officeHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Pickett""@en .
  ?person dbo:participatedIn ?war .
  FILTER(STRSTARTS(STR(?war), STR(dbo:War)))
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?child .
  ?child dbo:parent dbr:William_II_of_Sicily .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Baeda_Maryam_I dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?child WHERE {
  # Query for the father of Baeda Maryam I
  OPTIONAL { 
    dbr:Baeda_Maryam_I dbo:father ?father .
  }
  
  # Query for the child of Dawit I
  OPTIONAL { 
    dbr:Dawit_I dbo:child ?child .
  }
}
```",3,3,4,1,3,3,3,71,1,3,0,0.25,1.0,0.4
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?minPhyu a dbo:Person ;
           foaf:name ""Saw Min Phyu""@en .
  
  OPTIONAL { ?minPhyu dbo:spouse ?spouse . }
  
  OPTIONAL { ?child dbo:parent ?spouse ;
                   dbo:parent ?minHla ;
                   a dbo:Royalty . }

  FILTER(?minHla = (SELECT ?person WHERE {
    ?person a dbo:Person ;
            foaf:name ""Saw Min Hla""@en .
  }))

  OPTIONAL { ?child dbo:predecessor ?predecessor . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Triple X's""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  OPTIONAL { ?sawMinHla dbo:child ?child . }
  
  OPTIONAL { ?child dbo:parent ?father . }
  
  FILTER(?father a dbo:RoyalFamilyMember)
  
  OPTIONAL { ?father dbo:spouse ?spouse . }

  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  OPTIONAL { ?sawShweKhet dbo:child ?royalChild . }
  
  FILTER(?royalChild a dbo:RoyalFamilyMember)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  OPTIONAL { ?sawShweKhet dbo:child ?child . }
  OPTIONAL { ?sawShweKhet dbo:spouse ?spouse . }

  OPTIONAL {
    ?child dbo:predecessor ?predecessor .
  }
  
  OPTIONAL {
    ?spouse dbo:predecessor ?predecessor .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  ?person a dbo:Artist ;
          dbo:musicalArtist true ;
          dbo:nativePlace dbr:London .
  
  ?work a dbo:Film ;
        dbo:starring dbr:Vera_Lynn ;
        dbo:author ?person .

  OPTIONAL { ?person dbo:parent ?parent . }
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?mayor a dbo:Mayor ;
         dbo:electedDuring ?election .
  
  ?election dbo:date ""2003""^^xsd:gYear ;
            dbo:place dbr:Madrid_City_Council_election_2003 .

  ?residence dbo:resident ?mayor ;
             dbo:tenant ?tenant .
}
```",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerOfBochum ?teamManagedByLetsch WHERE {
  # Find manager of VfL Bochum for the 2007–08 season
  dbr:VfL_Bochum dbo:sportsTeamSeason ?bochumSeason .
  FILTER(CONTAINS(LCASE(STR(?bochumSeason)), ""2007-08""))
  ?bochumSeason dbo:manager ?managerOfBochum .

  # Find team managed by Thomas Letsch
  dbr:Thomas_Letsch dbo:managedTeam ?teamManagedByLetsch .
  
  # Ensure the team is a soccer club season and sports team season
  ?teamManagedByLetsch a dbo:SoccerClubSeason ;
                       a dbo:SportsTeamSeason .
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  ?person a dbo:Person ;
          dbo:memberOf ?organization .
  
  ?warEvent a dbo:Event ;
            dbo:location dbr:Central_African_Republic_Civil_War .

  ?person dbo:role ?role .
  FILTER(?role = ""Commander"" || ?role = ""Leader"")

  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?person dbo:politicalAffiliation ?affiliation . }

  FILTER EXISTS {
    ?organization dbo:member ?person .
    ?warEvent dbo:participant ?organization .
  }

  FILTER EXISTS {
    ?person dbo:occupation ""Politician"" .
  }
}
```",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Bob_Thompson_(musician) a dbo:MusicArtist ;
                               dbo:profession ?profession .
  
  FILTER(CONTAINS(LCASE(?profession), ""singer""))
  
  OPTIONAL { dbr:Bob_Thompson_(musician) dbo:band ?band . }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find the leader of the 2009 Galician regional election
  ?leader a dbo:Politician ;
          dbo:electedAs ?electionRole .
  ?electionRole dbo:date ""2009""^^xsd:gYear .

  # Find the tenant (mayor) of Santiago de Compostela
  ?tenant a dbo:Mayor ;
          dbo:city dbr:Santiago_de_Compostela .

  # Ensure they are the same person and get their office
  FILTER(?leader = ?tenant)
  ?leader dbo:office ?office .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?predecessor WHERE {
  # Find Duke Philipp of Württemberg and his child
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?philippChild .
  
  # Find the grandchild (child of Duke Philipp's child)
  ?philippChild dbo:child ?grandchild .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?albrechtChild .
  
  # Determine a predecessor in generational terms (e.g., parent)
  OPTIONAL { ?albrechtParent dbo:parent ?albrechtChild . }
  BIND(?albrechtParent AS ?predecessor)

  FILTER(?grandchild = ?predecessor)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?party WHERE {
  VALUES ?name { ""Gustavo Petro""@en ""Roy Barreras""@en }
  
  ?person a dbo:Person ;
          foaf:name ?name .
  OPTIONAL { ?person dbo:nationality dbr:Colombia . }
  OPTIONAL { ?person dbo:party ?party . }

  FILTER(?nationality = dbr:Colombia)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?entityInJapan WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chieko Asakawa""@en .
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  
  OPTIONAL { 
    ?person dbo:nationality ?nationality .
    FILTER(CONTAINS(LCASE(STR(?nationality)), ""japan""))
    BIND(?nationality AS ?entityInJapan)
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  dbr:Philip_I_of_Castile dbo:child ?child .
  
  # Ensure the child is royalty
  ?child a dbo:RoyalFamilyMember .

  # Find the father of this royal child
  ?child dbo:parent ?father .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardee ?war WHERE {
  ?award a dbo:Award ;
         dbo:recipient ?awardee ;
         dbo:dateReceived ?date .
  
  FILTER(YEAR(?date) = 1930)

  OPTIONAL { ?awardee dbo:participatedIn ?war . }
}
```",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?martin a dbo:Person ;
          foaf:name ""Martin of Aragon""@en .
  
  ?parent dbo:child ?martin .
  
  ?parent dbo:parent ?father .
  
  OPTIONAL { ?father dbo:royaltyTitle ?title . }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for movies with ""and"" in their title and their actors
SELECT DISTINCT ?movie ?actor WHERE {
  ?movie a dbo:Film ;
         rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""and""))
  ?movie dbo:starring ?actor .
}

UNION

# Query for the movie ""ATL"" and its actors
SELECT DISTINCT ?atlMovie ?actor WHERE {
  dbr:ATL a dbo:Film ;
          dbo:starring ?actor .
}
```",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfParent ?predecessor WHERE {
  # Find the parent of Min Hla Htut and their child
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  
  OPTIONAL { ?parent dbr:Pyakaung dbo:child ?minHlaHtut . }
  OPTIONAL { ?parent dbo:child ?childOfParent . }

  # Find the child of Saw Shwe Khet and their predecessor
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  OPTIONAL { ?sawShweKhet dbo:child ?childOfSawShweKhet . }
  OPTIONAL { ?predecessor dbo:successor ?childOfSawShweKhet . }

  # Ensure the child of parent and predecessor are the same
  FILTER(?childOfParent = ?predecessor)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succesor ?successorSeason .
  
  # Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason a dbo:FootballLeagueSeason ;
                   a dbo:SportsTeamSeason ;
                   a dbo:SportsSeason .

  # Find the manager of SBV Vitesse for the 2020–21 season
  dbr:2020%E2%80%9321_SBV_Vitesse_season dbo:manager ?vitesseManager .
  
  # Ensure the manager is also managing in the successor season of 2006–07 VfL Bochum
  ?successorSeason dbo:manager ?manager .

  # Filter to ensure the managers are the same
  FILTER(?manager = ?vitesseManager)
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actor of ATL (film)
  dbr:ATL_(film) dbo:starring ?atlActor .
  
  # Actor of Shelby Oaks
  dbr:Shelby_Oaks dbo:starring ?shelbyOaksActor .

  # Professional in the alter ego of The Shadow
  ?shadowActor a dbo:Person ;
               dbo:profession ?alterEgoRole .
  FILTER(?alterEgoRole IN (dbr:The_Shadow, dbr:Alter_Ego_of_The_Shadow)).

  # Ensure the actor is common to all three criteria
  FILTER(?atlActor = ?shelbyOaksActor)
  FILTER(?atlActor = ?shadowActor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  ?award a dbo:Settlement ;
         dbo:country dbr:United_States .
  
  ?awardee dbo:recipientOfAward ?award ;
           dbo:location dbr:New_York_(state) .

  OPTIONAL { ?award dbo:native ?native . }
}
```",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parent .
  ?parent dbo:nativePlace dbr:Middlesex .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?bobby a dbo:MusicalArtist ;
         foaf:name ""Bobby Shmurda""@en .
  
  ?bobby dbo:associatedBand ?associatedBand .

  ?associatedBand dbo:member ?bandMember .
  
  FILTER(?bandMember != ?bobby) # Exclude Bobby Shmurda himself

  ?bandMember a dbo:MusicalArtist ;
              foaf:name ?name .
  
  ?bandMember foaf:birthday ?birthday .
  ?bobby foaf:birthday ?bobbyBirthday .

  FILTER(?birthday = ?bobbyBirthday)

  ?bandMember dbo:nativeCountry dbr:United_States ;
              dbo:nativePlace dbr:Florida .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university ?foundingDate WHERE {
  ?luiza a dbo:Person ;
         foaf:name ""Luiza Erundina""@en .
  ?erundinaAlmaMater dbo:almaMater ?luiza .

  ?eleonora a dbo:Person ;
            foaf:name ""Eleonora Menicucci""@en .
  ?menicucciAlmaMater dbo:almaMater ?eleonora .

  FILTER(?erundinaAlmaMater = ?menicucciAlmaMater)
  
  ?university a dbo:EducationalOrganization ;
              foaf:name ?name ;
              dbo:foundingDate ?foundingDate .
              
  FILTER(?university = ?erundinaAlmaMater)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Artist ;
          dbo:musicalArtist true ;
          dbo:nativePlace ?location .
  
  ?location rdf:type dbo:Settlement ;
            dbo:country dbr:England .

  OPTIONAL { ?person dbo:parent ?parent . }
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:2003_Madrid_City_Council_election dbo:officeHolder ?leader .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governorBirthPlace ?awardeeBirthPlace ?ceceBellBirthPlace WHERE {
  # Governor of Virginia
  ?governor a dbo:Politician ;
            dbo:governmentRole [
              dbo:officeHolder ?person ;
              dbo:office dbr:Governor_of_Virginia
            ] .
  OPTIONAL { ?governor dbo:birthPlace ?governorBirthPlace . }

  # Awardee of Vince Gilligan's awards and nominations
  ?awardee dbo:award [
    dbo:recipient ?person ;
    dbo:nominee dbr:Vince_Gilligan
  ] .
  OPTIONAL { ?awardee dbo:birthPlace ?awardeeBirthPlace . }

  # Cece Bell
  ?ceceBell a dbo:Person ;
            foaf:name ""Cece Bell""@en .
  OPTIONAL { ?ceceBell dbo:birthPlace ?ceceBellBirthPlace . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  dbr:Melbourne dbo:decedent ?decedent .
}
```",1,1,2,1,1,2,2,9,0,0,809,0,0.0,0
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the leader of West Germany and their country
  dbr:Konrad_Adenauer dbo:nationality ?country .

  # Find the sports manager born on 1968-08-26 native to this country
  ?person a dbo:SportsManager ;
          foaf:birthday ""1968-08-26""^^xsd:date ;
          dbo:nativePlace ?nativePlace .
  
  FILTER(?nativePlace = ?country)

  # Find the soccer club season and its manager
  ?season a dbo:SoccerClubSeason ;
          dbo:team ?team .

  ?team dbo:manager ?manager .

  FILTER(?person = ?manager)
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer ?fictionalCharacter WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
  
  OPTIONAL {
    ?producer dbo:profession ?profession .
    
    ?character a dbo:FictionalCharacter ;
               foaf:name ?characterName .
    
    ?alterEgo a dbo:AlterEgo ;
              foaf:name ""Kent Allard""@en .
    
    ?character dbo:alterEgo ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Vince Gilligan"" AS ?personName)
  }
  UNION
  { 
    ?person a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?personName)
  }
  UNION
  { 
    ?person a dbo:Person ;
            foaf:name ""Glenn Youngkin""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Glenn Youngkin"" AS ?personName)
  }
}
```",3,3,4,1,3,3,3,71,1,3,0,0.25,1.0,0.4
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?primeMinister ?galicianLeader WHERE {
  # Prime Minister of Spain associated with PSOE
  ?primeMinister a dbo:PrimeMinister ;
                 dbo:party dbr:Spanish_Socialist_Workers'_Party .

  # President of the Xunta de Galicia in 2009, associated with PSOE
  ?galicianLeader a dbo:President ;
                  dbo:office dbr:Xunta_de_Galicia_President ;
                  dbo:termStart ?start ;
                  dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  FILTER(year(?start) = 2009)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Charles_I_of_Hungary dbo:father ?father .
  FILTER EXISTS { ?father a dbo:Monarch . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander WHERE {
  # Query for the writer of ""Always the Love Songs""
  OPTIONAL { 
    dbr:Always_the_Love_Songs dbo:creator ?writer .
  }

  # Query for the commander in the Great Turkish War
  OPTIONAL {
    ?war a dbo:MilitaryConflict ;
         foaf:name ""Great Turkish War""@en .
    ?war dbo:commander ?commander .
  }
}
```",3,3,4,2,2,3,3,71,1,39,0,0.025,1.0,0.04878048780487806
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMemberDavidPaton ?bandMemberStuartMcBeathTosh WHERE {
  # Find the band associated with David Paton
  ?davidPaton a dbo:Person ;
              foaf:name ""David Paton""@en .
  
  OPTIONAL { ?davidPaton dbo:musicalArtist ?bandDavidPaton . }
  
  # Find members of the band associated with David Paton
  ?memberDavidPaton dbo:memberOfBand ?bandDavidPaton ;
                    a dbo:Person .

  BIND(?memberDavidPaton AS ?bandMemberDavidPaton)

  # Find the person born as Stuart McBeath Tosh and his associated musical artist
  ?stuartMcBeathTosh a dbo:Person ;
                     foaf:name ""Stuart McBeath Tosh""@en .
  
  OPTIONAL { ?stuartMcBeathTosh dbo:musicalArtist ?bandStuartMcBeathTosh . }
  
  # Find members of the band associated with Stuart McBeath Tosh
  ?memberStuartMcBeathTosh dbo:memberOfBand ?bandStuartMcBeathTosh ;
                          a dbo:Person .

  BIND(?memberStuartMcBeathTosh AS ?bandMemberStuartMcBeathTosh)
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?deathPlace WHERE {
  { 
    # Query for actor of ""The Sky Ranger"" (1928)
    dbr:The_Sky_Ranger_(film) dbo:actor ?actor .
    ?actor foaf:name ?personName ;
           dbo:deathPlace ?deathPlace .
  }
  UNION
  { 
    # Query for Carolyn Jones
    dbr:Carolyn_Jones dbo:deathPlace ?deathPlace ;
                      foaf:name ""Carolyn Jones""@en .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
  ?child a dbo:Person ;
         foaf:name ?childName .
  
  OPTIONAL { 
    ?child dbo:royaltyTitle ?title .
    FILTER EXISTS { ?title }
  }
}
```",3,4,4,3,1,3,2,20,0,0,17,0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?recipient WHERE {
  ?award a dbo:Award ;
         rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""30""))
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?myatHponePyo a dbo:Person ;
                 foaf:name ""Myat Hpone Pyo""@en .
  
  ?fatherOfMyatHponePyo dbo:child ?myatHponePyo ;
                        dbo:royalty ?royalty .

  ?parentOfMinHlaHtut a dbo:Person ;
                      foaf:name ""Min Hla Htut of Pyakaung""@en .
  
  ?minHlaHtut dbo:parent ?parentOfMinHlaHtut .

  ?childOfSawShweKhet a dbo:Person ;
                      foaf:name ""Saw Shwe Khet""@en .
  
  ?sawShweKhet dbo:child ?childOfSawShweKhet .
  
  ?predecessorOfChildOfSawShweKhet dbo:predecessor ?childOfSawShweKhet .

  OPTIONAL { ?fatherOfMyatHponePyo dbo:spouse ?spouse . }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find the administration related to the Spanish Socialist Workers' Party
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  OPTIONAL { 
    ?administration dbo:member ?party .
    ?administration dbo:office ?office .
    
    # Check for any connection with Alberto Núñez Feijóo's office
    ?feijooOffice a dbo:Office ;
                  dbo:holder dbr:Alberto_Núñez_Feijóo .
    
    FILTER(?office = ?feijooOffice)
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaRef ?timeZoneRegion WHERE {
  dbr:Mitaka a dbo:PopulatedPlace ;
             rdfs:label ""Mitaka""@en .
  
  OPTIONAL { 
    ?mitakaRef rdfs:label ""Mitaka""@en .
  }
  
  dbr:Japan_Time_Zone a dbo:TimeZone ;
                      dbo:region ?timeZoneRegion .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname WHERE {
  ?denis a dbo:SoccerPlayer ;
         foaf:name ""Denis Kolodin""@en .
  
  OPTIONAL { ?denis foaf:nick ?nickname . }
  
  ?club a dbo:SoccerClub ;
        foaf:name ?nickname .

  ?aleksandr a dbo:SoccerPlayer ;
             foaf:name ""Aleksandr Filimonov""@en .
  
  ?aleksandr dbo:playsFor ?club .
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:officeLocation dbr:Madrid ;
          dbo:positionTitle ?title .
  
  OPTIONAL { ?person dbo:politician . }
  
  ?warEvent dbo:participant ?person ;
            rdfs:label ""Central African Republic Civil War""@en .

  ?miguelMauraOffice dbo:officeHolder ?person ;
                     dbo:officeLocation dbr:Miguel_Maura .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerClub ;
        foaf:name ""Hong Kong C""@en .
  
  ?team dbo:manager ?manager .

  ?manager a dbo:SportsManager, dbo:SoccerManager .
}
```",2,8,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?politician .
  
  # Politician who is a child of Frederick Stanley and parent of Edward Stanley
  ?politician rdf:type dbo:Politician ;
              dbo:parent dbr:Edward_Stanley,_17th_Earl_of_Derby .

  # Politician also parent of Victor Stanley (Royal Navy officer)
  ?politician dbo:child dbr:Victor_Stanley_(Royal_Navy_officer) .
  
  # Find the father of this politician
  ?politician dbo:parent ?father .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?francisI .
  
  # Francis I, Duke of Lorraine is royalty
  ?francisI a dbo:Person ;
            foaf:name ""Francis_I,_Duke_of_Lorraine""@en .

  # Parent of Francis I who is royalty and noble
  ?parent dbo:child ?francisI .
  FILTER EXISTS { ?parent dbo:royalty . }
  FILTER EXISTS { ?parent dbo:noble . }

  # Spouse of the parent
  OPTIONAL { ?parent dbo:spouse ?spouse . }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?birthPlace WHERE {
  dbr:Chiang_Ching-kuo dbo:child ?child .
  
  ?child a dbo:Person ;
         dbo:occupation ?occupation .

  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  OPTIONAL { ?child dbo:birthPlace ?birthPlace . }
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Clinton""@en .
  
  ?war a dbo:Disease, dbo:SocietalEvent ;
       dbo:commander ?commander .

  FILTER(?person = ?commander)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  dbr:Bill_Clinton a dbo:Person ;
                   dbo:spouse dbr:Hillary_Clinton ;
                   dbo:residence dbr:Chappaqua, New York ;
                   dbo:officeHolder dbr:President_of_the_United_States ;
                   dbo:militaryCommander dbr:United_States_Navy .

  ?work a dbo:Book ;
        foaf:primaryTopic dbr:Bill_Clinton .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity WHERE {
  { 
    ?pacely a dbo:Person ;
            foaf:name ""Pacely""@en .
    OPTIONAL { ?pacely dbo:associatedBand ?entity . }
  } UNION {
    ?joeyB a dbo:Person ;
           foaf:name ""Joey B""@en .
    OPTIONAL { ?joeyB foaf:birthday ?birthDate . }
    OPTIONAL { ?joeyB foaf:name ?birthName . }
    ?person foaf:name ?birthName .
    FILTER(?person = ?entity)
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse ?individual .

  # Author of ""Back to Work""
  ?book a dbo:Book ;
        foaf:name ""Back to Work""@en .
  ?book dbo:author ?individual .

  # Commander in Third Taiwan Strait Crisis
  ?crisis a dbo:MilitaryConflict ;
          foaf:name ""Third Taiwan Strait Crisis""@en .
  ?crisis dbo:commander ?individual .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?residence WHERE {
  dbr:Ulster_Unionist_Party dbo:leader ?leader .
  ?leader foaf:based_near ?residence .
  
  FILTER(STRSTARTS(LCASE(?residence), ""united kingdom""))
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Find Charles I of Hungary's father
  dbr:Charles_I_of_Hungary dbo:father ?father .

  # Ensure the father is royalty
  ?father a dbo:Monarch .

  # Find the parent (grandparent) of this father who is royalty
  OPTIONAL { ?father dbo:parent ?parentOfFather . }
  
  # Find Stephen V of Hungary's child
  dbr:Stephen_V_of_Hungary dbo:child ?stephenChild .
  
  # Ensure the grandparent is also a child of Stephen V of Hungary
  FILTER(?parentOfFather = ?stephenChild)
  
  # Find Philip I, Prince of Taranto's father
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .

  # Find the spouse of this father
  OPTIONAL { ?philipFather dbo:spouse ?spouseOfPhilipsFather . }
  
  # Ensure the grandparent is also the spouse of Philip I's father
  FILTER(?parentOfFather = ?spouseOfPhilipsFather)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realNameOfBand ?bandAssociation ?associatedArtist WHERE {
  # Find The Fabulous Thunderbirds real name
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalBand ;
                               foaf:name ?realNameOfBand .

  # Find Kim Wilson's association with the band
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?kimWilson dbo:musicalArtistIn ?bandAssociation . }
  FILTER(?bandAssociation = dbr:The_Fabulous_Thunderbirds)

  # Find associated musical artists related to Nick Curran
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:musicalArtistIn ?associatedArtist . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1955-02-22""^^xsd:date ;
          (dbo:Athlete|a dbo:Agent) .
  
  ?teamMember dbo:member ?person .
  ?teamMember dbo:member dbr:Sergio_Agüero .

  BIND(?person AS ?player)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sandro Bertaggia""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER(?birthPlace a dbo:Country)
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military force or figure known as ""The Triple X's""
  ?tripleX a dbo:MilitaryForce ;
           foaf:name ""The Triple X's""@en .

  # Identify the Battle of Fort Royal
  dbr:Battle_of_Fort_Royal a dbo:Battle ;
                           dbo:participatingMilitaryUnit ?fortRoyalForce .

  # Find Robert Calder and his associated event
  dbr:Robert_Calder a dbo:Person ;
                    dbo:associatedEvent ?calderEvent .
  
  # Link the commander to both ""The Triple X's"" and the Battle of Fort Royal
  OPTIONAL { ?tripleX dbo:commander ?commander . }
  OPTIONAL { ?fortRoyalForce dbo:commander ?commander . }

  # Ensure the commander is also linked to an event involving Robert Calder
  OPTIONAL { ?calderEvent dbo:commander ?commander . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?nateNewton a dbo:Musician ;
              foaf:name ""Nate Newton""@en .
  
  ?nateNewton dbo:associatedBand ?band .
  
  ?band a dbo:MusicalGroup ;
        dbo:associatedMusicalArtist ?associatedArtist .
  
  FILTER(?associatedArtist != ?band)
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace WHERE {
  dbr:Plovdiv_University_Paisii_Hilendarski dbo:alumni ?alumnus .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Prince Faisal bin Hussein and his child who is royalty
  dbr:Prince_Faisal_bin_Hussein dbo:child ?royalChild .
  
  # Ensure the child is a royal person
  ?royalChild a dbo:RoyalPerson .

  # Parent of this royal child
  ?royalChild dbo:parent ?parent .

  # Prince Omar bin Faisal and his parent
  dbr:Prince_Omar_bin_Faisal dbo:parent ?parent .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  # Find Bob Thompson's birth name and band
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson (musician)""@en .
  
  OPTIONAL { ?bob foaf:birthday ?birthDate . }
  OPTIONAL { ?bob foaf:nick ?birthName . }
  OPTIONAL { ?bob dbo:band ?band . }

  # Find Walter B. Gibson's fictional character
  ?walter a dbo:Person ;
          foaf:name ""Walter B. Gibson""@en .
  
  OPTIONAL { ?walter dbo:created ?fictionalCharacter . }
  FILTER(?fictionalCharacter = dbr:The_Shadow) # Assuming The Shadow is the character

  # Linking conditions
  FILTER(?birthName = ?bob)
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?ducasRole ?successor WHERE {
  # Find the commander of the Great Turkish War
  dbr:Great_Turkish_War dbo:commander ?commander .

  # Reference George Ducas in relation to the war or as a commander
  OPTIONAL { 
    dbr:George_Ducas dbo:role ?ducasRole .
    FILTER(?ducasRole IN (dbo:Commander, dbo:MilitaryPerson))
  }

  # Find Yurii Khmelnytsky's successor
  dbr:Yurii_Khmelnytsky dbo:succeededBy ?successor .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInBirthPlace WHERE {
  # Find the birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Find entities related to her birthplace
  ?entityInBirthPlace a dbo:Place ;
                     dbo:location ?birthPlace .

  # Find the awardee of the Golden Sword for Bravery and their associated war
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:participatedInWar ?war .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
  
  ?war a dbo:War ;
       dbo:disease true ;
       dbo:societalEvent true .

  ?owner dbo:participatedIn ?war .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  ?child dbo:parent ?parent .

  OPTIONAL { 
    ?victorChild a dbo:Person ;
                 foaf:name ""Victor Stanley (Royal Navy officer)""@en .
    
    ?victorChild dbo:parent ?parent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Luckman""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country WHERE {
  dbr:Alberto_Núñez_Feijóo dbo:nationality dbr:Spain .
  OPTIONAL { dbr:Alberto_Núñez_Feijóo dbo:residence ?residence . }
  ?residence dbo:country ?country .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?brunoParty ?successorParty WHERE {
  # Find the party of Bruno Retailleau
  ?bruno a dbo:Person ;
         foaf:name ""Bruno Retailleau""@en .
  OPTIONAL { ?bruno dbo:party ?brunoParty . }

  # Find Patrice Martin-Lalande's successor who is a politician and French
  ?patrice a dbo:Person ;
           foaf:name ""Patrice Martin-Lalande""@en .
  
  ?successor a dbo:Person ;
             dbo:successorOf ?patrice ;
             dbo:nationality dbr:Francois,_King_of_France ; # Assuming nationality is represented by France
             dbo:party ?successorParty .

  FILTER EXISTS { ?successor dbo:occupation dbo:Politician } # Ensure the successor is a politician
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find the child of Saw Shwe Khet
  ?sawShweKhetChild dbo:childOf dbr:Saw_Shwe_Khet ;
                   a dbo:Person .

  # Find the predecessor of this child
  OPTIONAL { ?sawShweKhetChild dbo:predecessor ?predecessor . }

  # Find the child of Minye Kyawswa
  ?minyeKyawswaChild dbo:childOf dbr:Minye_Kyawswa ;
                     a dbo:Person .

  # Find the parent of this child (i.e., Minye Kyawswa)
  OPTIONAL { ?parentOfChild dbo:parent ?minyeKyawswaChild . }

  # Find the predecessor of this parent
  OPTIONAL { ?parentOfChild dbo:predecessor ?predecessor . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?tenant WHERE {
  # Find the office of Alberto Núñez Feijóo
  ?feijo a dbo:Person ;
         foaf:name ""Alberto Núñez Feijóo""@en .
  ?feijo dbo:office ?office .

  # Find the residence of Álvaro Quirós and its tenant
  ?quiros a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  ?residence dbo:resident ?quiros ;
             dbo:tenant ?tenant .
  
  # Ensure the tenant is a country
  FILTER(?tenant IN (dbr:Countries))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Arthur Stanley""@en .
  OPTIONAL { ?person dbo:father ?father . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ?birthDate .
  
  FILTER(xsd:date(?birthDate) = ""1968-08-26""^^xsd:date)
  
  ?team dbo:sportsManagerFor ?person .
  
  ?season dbo:club ?team ;
          a dbo:SoccerClubSeason, dbo:SportsSeason, dbo:SportsTeamSeason .
}
```",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?territory WHERE {
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck a dbo:Person ;
                                                           foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  
  OPTIONAL { 
    ?person dbo:administers ?territory .
    FILTER(?person = dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck)
  }
  
  ?administration a dbo:Administration ;
                  dbo:location dbr:Copenhagen .
  
  ?administration dbo:administrator ?person .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?bandMember WHERE {
  ?emilia a dbo:Person ;
          foaf:name ""Emilia""@en .
  
  OPTIONAL { ?emilia dbo:profession ?profession . }
  FILTER(?profession IN (dbo:Singer))
  
  OPTIONAL { ?emilia dbo:bandMemberOf ?bandMember . }
}
```",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Min Hla""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  # Find Linda Miller (actress)
  ?lindaMiller a dbo:Person ;
               foaf:name ""Linda Miller""@en .
  
  # Find her child
  ?lindaMiller dbo:child ?child .

  # Find the award that is an American settlement in New York state
  ?awardLocation a dbo:Settlement ;
                 dbo:country dbr:United_States ;
                 dbo:stateOrProvince dbr:New_York_(state) .
  
  # Ensure the awardee's native place matches this location
  ?awardee dbo:nativePlace ?awardLocation .

  # Link the child to the awardee
  ?child dbo:nativePlace ?awardLocation .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?otherProfessional WHERE {
  ?album a dbo:Album ;
         foaf:name ""Lasso the Moon""@en .
  
  OPTIONAL { ?album dbo:work ?film . }
  FILTER EXISTS { ?film a dbo:Film }

  ?actor a dbo:Actor ;
         foaf:name ?actorName .

  ?otherProfessional a ?profession ;
                     foaf:name ?professionalName .

  ?album dbo:artist ?actor .
  ?album dbo:artist ?otherProfessional .

  FILTER(?actor != ?otherProfessional)
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?child dbo:child ?sawShweKhet ;
         a dbo:Royal .

  ?father dbo:parent ?child ;
          a dbo:Royal .

  OPTIONAL { ?father dbo:spouse ?spouse . }
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickCurranArtist ?fabulousThunderbirdsMemberName ?bandOfPersonBorn1945 WHERE {
  # Nick Curran's associated musical artist
  ?nickCurran a dbo:Musician ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:associatedBand ?nickCurranArtist . }

  # Real name of The Fabulous Thunderbirds members
  ?fabulousThunderbird a dbo:MusicalArtist ;
                       foaf:name ""The Fabulous Thunderbirds""@en .
  OPTIONAL { ?fabulousThunderbird foaf:name ?fabulousThunderbirdsMemberName . }

  # Person born on 1945-03-30 who is a musical artist and their band
  ?personBorn1945 a dbo:Musician ;
                  dbo:birthday ""1945-03-30""^^xsd:date .
  OPTIONAL { ?personBorn1945 dbo:associatedBand ?bandOfPersonBorn1945 . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Birth places for Paulus Powell, Cece Bell, and Vince Gilligan
  ?paulusPowell a dbo:Person ;
                foaf:name ""Paulus Powell""@en .
  ?paulusPowell dbo:birthPlace ?paulusBirthPlace .

  ?ceceBell a dbo:Person ;
            foaf:name ""Cece Bell""@en .
  ?ceceBell dbo:birthPlace ?ceceBirthPlace .

  ?vinceGilligan a dbo:Person ;
                 foaf:name ""Vince Gilligan""@en .
  ?vinceGilligan dbo:birthPlace ?vinceBirthPlace .

  # Governor of the region where Paulus Powell was born
  ?region a dbo:AdministrativeRegion ;
          dbo:administrativeArea ?paulusBirthPlace .
  
  ?governor a dbo:Person ;
            foaf:name ?governorName ;
            dbo:governmentRole ?role .

  ?role dbo:officeHolder ?governor ;
        dbo:office ?office .

  ?office dbo:administrativeRegion ?region .

  # Birth place of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?actor a dbo:Actor ;
         dbo:actedIn dbr:Johnny_Doughboy .
  
  ?producer1 a dbo:Producer ;
             dbo:produced dbr:A_Star_Is_Born_(1937_film) .

  FILTER(?actor = ?producer1)

  ?claimToFame dbo:claimToFame ?actor .

  ?work a dbo:Work ;
        dbo:producer ?producer .
  
  FILTER(?claimToFame = ?work)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme WHERE {
  dbr:Dikhawa dbo:theme ?theme .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?ceceBirthPlace ?governorBirthPlace WHERE {
  # Find the birthplace of Cece Bell, author of El Deafo
  ?cece a dbo:Writer ;
        foaf:name ""Cece Bell""@en .
  ?cece dbo:birthPlace ?ceceBirthPlace .

  # Find Paulus Powell's birthplace which is both a region and an administrative region
  ?paulus a dbo:Person ;
          foaf:name ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?region .
  
  ?region a dbo:Region ;
          dbo:administrativeRegion ?adminRegion .

  # Find the governor who is a politician in that region
  ?governor a dbo:Politician ;
            dbo:governs ?region .
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandParent WHERE {
  dbr:Dorothea_of_Lorraine dbo:child ?father .
  ?father a dbo:Person ;
          dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party ?country WHERE {
  # Query for Roy Barreras' party
  OPTIONAL { 
    ?royBarreras a dbo:Person ;
                 foaf:name ""Roy Barreras""@en .
    ?royBarreras dbo:party ?party .
  }
  
  # Query for Daniel Elahi Galán's country
  OPTIONAL {
    ?danielGalán a dbo:Person ;
                 foaf:name ""Daniel Elahi Galán""@en .
    ?danielGalán dbo:nationality ?country .
  }
}
```",3,3,4,2,2,2,3,28,5,0,0,1.0,1.0,1.0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Tennant""@en .
  OPTIONAL { ?person dbo:militaryUnit ?force . }
}
```",1,1,2,1,1,3,2,20,0,1,2,0.0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  dbr:Nate_Newton dbo:member ?band .
  ?band a dbo:Band ;
        a dbo:Organization .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Grand_Duchy_of_Finland .
}
```",1,1,2,1,1,2,3,28,355,0,0,1.0,1.0,1.0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  ?sawMinPhyu dbo:spouse ?spouse .

  ?child dbo:parent ?spouse ;
         a dbo:RoyalFamilyMember . # Assuming royalty is represented by this class

  ?predecessor dbo:successor ?child .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,2,1,1,0.6666666666666666,0.6666666666666666,0.6666666666666666
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?pickett a dbo:MilitaryPerson ;
           foaf:name ""George Pickett""@en .
  
  ?war a dbo:SocietalEvent ;
       dbo:participant ?pickett .

  OPTIONAL { ?war dbo:commander ?commander . }
}
```",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?nateNewton a dbo:Musician ;
              foaf:name ""Nate Newton""@en .
  
  ?nateNewton dbo:associatedBand ?band .

  FILTER(?band rdf:type dbo:MusicalArtist && ?band rdf:type foaf:Organization)

  ?band dbo:bandMember ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInMolina ?soccerAthletePlayer WHERE {
  # Find the player associated with Juan Carlos Molina
  dbr:Juan_Carlos_Molina_(footballer) dbo:player ?playerInMolina .

  # Find a film directed by Manuel Huerga and identify an athlete involved in it who is also a soccer player
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?soccerAthletePlayer .
  
  ?soccerAthletePlayer a dbo:SoccerPlayer ;
                       foaf:name ?athleteName .

  # Connect Pablo Aimar to a team context
  ?team dbo:member ?pabloAimar ;
        dbo:player ?soccerAthletePlayer .

  dbr:Pablo_Aimar dbo:member ?team .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?politicianChild .
  
  # The child is a politician
  ?politicianChild a dbo:Politician ;
                   dbo:parent ?father .

  # This child is the parent of Edward Stanley, 17th Earl of Derby
  ?politicianChild dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .
  
  # The father has received an award related to Rodney Lees
  OPTIONAL { ?father dbo:award ?award . }
  FILTER(CONTAINS(LCASE(STR(?award)), ""rodney lees""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Find the administration (tenant) of the Spanish Socialist Workers' Party
  dbr:Spanish_Socialist_Workers'_Party dbo:administration ?admin .
  ?admin dbo:country dbr:Spain .

  # Find Álvaro Quirós and his country of residence
  ?alvaro a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  ?alvaro dbo:nationality ?nationality .
  
  # Ensure the tenant is Spanish and matches both criteria
  FILTER(?admin = ?tenant)
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actor of Dispatches from Elsewhere
  dbr:Dispatches_from_Elsewhere dbo:starring ?dispatchActor .
  
  # Professional in the alter ego of The Shadow (Lamont Cranston)
  dbr:Lamont_Cranston dbo:portrayedBy ?shadowActor .

  # Find common actor
  FILTER(?dispatchActor = ?shadowActor)

  # Ensure they are professionals in acting
  ?actor a dbo:Actor ;
         foaf:name ?name .
  
  FILTER(?dispatchActor = ?actor || ?shadowActor = ?actor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person ;
          dbo:leaderOf dbr:West_Germany ;
          dbo:manager dbr:VfL_Bochum .
  
  OPTIONAL { ?person foaf:nativePlace ?nativePlace . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Find the commander involved in both wars
  ?commander a dbo:Person ;
             dbo:officeHolder true ;
             dbo:politician true .

  # Russo-Polish War (1654–1667)
  ?russianPolishWar dbr:Russo-Polish_War_(1654%E2%80%931667) dbo:commander ?commander .
  
  # Great Turkish War
  ?turkishWar dbr:Great_Turkish_War dbo:commander ?commander .

  # Find the successor of this commander
  OPTIONAL { ?commander dbo:succeededBy ?successor . }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Identify the actor of ""High Society Blues""
  ?actor a dbo:Actor ;
         dbo:actedIn dbr:High_Society_Blues .

  # Identify the producer of ""The Adventures of Tom Sawyer (1938 film)""
  ?producer1 a dbo:FilmProducer ;
             dbo:produced dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .

  # Find a common movie or work involving both individuals
  ?commonWork dbo:actor ?actor ;
              dbo:filmProducer ?producer1 ;
              dbo:filmProducer ?producer .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?eL a dbo:Person ;
      foaf:name ""E.L.""@en .
  
  OPTIONAL { 
    ?album dbo:artist ?eL ;
           dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  # Query for Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?nativePlace .

  # Query for VfL Bochum manager in the 2007–08 season
  OPTIONAL {
    ?bochumManager a dbo:SportsTeam ;
                   dbo:manager ?person1 .
    ?seasonBochum dbr:VfL_Bochum_season_2007%E2%80%9308 dbo:team ?bochumManager .
    FILTER(?person1 = ?nativePlace)
  }

  # Query for SBV Vitesse manager in the 2020–21 season
  OPTIONAL {
    ?vitesseManager a dbo:SportsTeam ;
                    dbo:manager ?person2 .
    ?seasonVitesse dbr:SBV_Vitesse_season_2020%E2%80%9321 dbo:team ?vitesseManager .
    FILTER(?person2 = ?nativePlace)
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?force WHERE {
  # Find the war Amasa Tracy participated in
  ?tracy a dbo:MilitaryPerson ;
         foaf:name ""Amasa Tracy""@en .
  ?tracy dbo:participatedIn ?war .

  # Find the force commanded by Quincy Adams Gillmore
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore""@en .
  ?force dbo:commandedBy ?gillmore .

  # Link to Charleston, South Carolina
  OPTIONAL { ?entity dbo:location dbr:Charleston,_South_Carolina . }
  
  FILTER(?war = ?entity || ?force = ?entity)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Identify Bill Clinton as a resident of Chappaqua, New York and an office holder
  dbr:Bill_Clinton dbo:residence dbr:Chappaqua,_New_York ;
                   a dbo:OfficeHolder .

  # Find Hillary Clinton's works that are books and written works
  ?work dbo:author dbr:Hillary_Clinton ;
        a dbo:Book, dbo:WrittenWork .

  # Determine the spouse relationship between Bill Clinton and Hillary Clinton
  OPTIONAL { dbr:Bill_Clinton foaf:mbox <mailto:billclinton@whitehouse.gov> . }
  OPTIONAL { ?spouse foaf:name ""Hillary Rodham Clinton""@en ;
                  dbo:spouse dbr:Bill_Clinton . }

  # Find the author of the work associated with Hillary Clinton
  ?author a dbo:Person ;
          foaf:name ?name .
  FILTER(?spouse = ?author)
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?ekaterinaBirthPlace ?residentName ?residentBirthPlace WHERE {
  # Part for Ekaterina Zaharieva's birthplace
  ?ekaterina a dbo:Person ;
             foaf:name ""Ekaterina Zaharieva""@en .
  ?ekaterina dbo:birthPlace ?ekaterinaBirthPlace .

  # Part for the resident of Sofia's birthplace
  OPTIONAL {
    ?resident a dbo:Person ;
              dbo:residence dbr:Sofia ;
              foaf:name ?residentName .
    ?resident dbo:birthPlace ?residentBirthPlace .
  }
}
```",3,3,4,2,2,3,2,20,2,13,0,0.13333333333333333,1.0,0.23529411764705882
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?authorOfWork ?spouseOfLauraBush WHERE {
  # Hillary Clinton as the resident of Chappaqua, NY
  ?hillary a dbo:Person ;
           foaf:name ""Hillary Clinton""@en ;
           dbo:residence dbr:Chappaqua,_New_York .

  # Spouse of Hillary Clinton
  OPTIONAL { ?hillary dbo:spouse ?billClinton . }

  # Bill Clinton as an author
  OPTIONAL {
    ?billClinton a dbo:Person ;
                 foaf:name ""Bill Clinton""@en .
    ?work dbo:author ?billClinton ;
          a dbo:WrittenWork, dbo:Book, dbo:Work .
    BIND(?billClinton AS ?authorOfWork)
  }

  # Laura Bush as the author of ""An Invitation to the White House""
  ?lauraBush a dbo:Person ;
             foaf:name ""Laura Bush""@en ;
             dbo:work dbr:An_Invitation_to_the_White_House .

  # Spouse of Laura Bush
  OPTIONAL { ?lauraBush dbo:spouse ?georgeWbush . }
  BIND(?georgeWbush AS ?spouseOfLauraBush)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  dbr:Nicholas_II_of_Russia a dbo:Monarch ;
                             dbo:country ?administration .
  ?administration dbo:nativeCountry ?nativeCountry .
}
```",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandOfPerson ?realNameOfKimWilsonBand WHERE {
  # Part 1: Find the band of a person born on March 30, 1945
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .
  
  OPTIONAL { 
    ?bandMember dbo:bandMember ?bandOfPerson .
    ?bandOfPerson foaf:name ?bandName .
  }
  
  # Part 2: Find the real name of Kim Wilson's band
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  
  OPTIONAL {
    ?kimBandMember dbo:bandMember ?realNameOfKimWilsonBand .
    ?realNameOfKimWilsonBand foaf:name ?bandRealName .
  }
}
```",6,7,7,3,2,3,3,71,0,11187,2,0.0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandparent WHERE {
  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby a dbo:Person ;
                                         foaf:name ""Edward Stanley""@en .

  # His children (Victor and Arthur)
  OPTIONAL { dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child . }
  
  # Children of his children (grandchildren)
  OPTIONAL { ?child dbo:child ?grandchild . }

  # Filter grandchildren who are politicians or office holders
  FILTER (?grandchild a dbo:Politician || ?grandchild a dbo:OfficeHolder)

  # Find the parent of such a grandchild
  OPTIONAL { ?grandchild dbo:parent ?parentOfGrandchild . }
  
  # The parent of this grandchild is the grandparent we are looking for
  OPTIONAL { ?parentOfGrandchild dbo:parent ?grandparent . }

  # Ensure the grandparent is Edward Stanley, 17th Earl of Derby
  FILTER(?grandparent = dbr:Edward_Stanley,_17th_Earl_of_Derby)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?player WHERE {
  dbr:The_First_Glove dbo:writer ?writer .
  
  OPTIONAL { 
    ?writer a dbo:Person ;
            dbo:sport ?sport .
    
    FILTER(?sport != """")
    
    BIND(?writer AS ?player)
  }
}
```",2,2,3,2,1,3,2,20,0,1,17,0.0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  ?cavaleraConspiracy a dbo:MusicalArtist ;
                      dbo:bandMember ?member .
  FILTER(STRSTARTS(STR(?cavaleraConspiracy), STR(dbr:Cavalera_Conspiracy)))

  ?mudvayne a dbo:MusicalArtist ;
            dbo:bandMember ?member .
  FILTER(STRSTARTS(STR(?mudvayne), STR(dbr:Mudvayne)))
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfKimWilson ?associatedArtistNickCurran ?bandMemberEricClaptonBand WHERE {
  # Band associated with Kim Wilson
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?kimWilson dbo:musicalArtist ?bandOfKimWilson . }

  # Associated musical artist of Nick Curran
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:associatedMusicalArtist ?associatedArtistNickCurran . }

  # Band member of Eric Clapton and their band
  ?ericClapton a dbo:Person ;
               foaf:name ""Eric Clapton""@en .
  OPTIONAL {
    ?bandMemberOfEricClapton dbo:musicalArtist ?bandMemberEricClaptonBand ;
                             dbo:member ?ericClapton .
  }
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Alfonso VI and his child
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child .
  
  # Find the grandchild of Alfonso VI
  ?child dbo:child ?grandchild .

  # Find Roger II and one of his children
  dbr:Roger_II_of_Sicily dbo:child ?rogerChild .

  # Find the parent of Roger's child (which is Roger or his spouse)
  ?parentOfRogerChild dbo:child ?rogerChild .
  
  # Ensure the grandchild is also a royalty
  FILTER(?grandchild = ?parentOfRogerChild)
  FILTER( ?grandchild rdf:type dbo:Royalty )
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force WHERE {
  # Find the war associated with Amasa Tracy
  OPTIONAL { 
    ?tracy a dbo:Person ;
           foaf:name ""Amasa Tracy""@en .
    ?tracy dbo:servedIn ?war .
  }

  # Find the force commanded by Quincy Adams Gillmore
  OPTIONAL { 
    ?gillmore a dbo:Person ;
              foaf:name ""Quincy Adams Gillmore""@en .
    ?gillmore dbo:commanderOf ?force .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shobhna Samarth""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER(?birthPlace a dbo:Country)
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  dbr:Spain dbo:headOfState ?tenant .
  UNION
  dbr:Spain dbo:monarch ?tenant .
}
```",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor ?spouseOfFather ?childOfParent WHERE {
  # Predecessor of Myat Hpone Pyo
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  OPTIONAL { ?myatHponePyo dbo:predecessor ?predecessor . }

  # Father of Myat Hpone Pyo who is royalty and his spouse
  OPTIONAL {
    ?fatherOfMyat a dbo:Person ;
                  foaf:name ""Father of Myat Hpone Pyo""@en .
    ?myatHponePyo dbo:parent ?fatherOfMyat .
    FILTER(?fatherOfMyat rdf:type dbo:Royalty)
    OPTIONAL { ?fatherOfMyat dbo:spouse ?spouseOfFather . }
  }

  # Parent of Min Hla Htut and their child
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  OPTIONAL {
    ?parentOfMinHlaHtut a dbo:Person ;
                        foaf:name ""Parent of Min Hla Htut""@en .
    ?minHlaHtut dbo:parent ?parentOfMinHlaHtut .
    OPTIONAL { ?parentOfMinHlaHtut dbo:child ?childOfParent . }
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorDispatches ?profession WHERE {
  # Find actor of Dispatches from Elsewhere
  ?dispatches a dbo:TVSeries ;
              foaf:name ""Dispatches from Elsewhere""@en .
  
  ?dispatches dbo:actor ?actorDispatches .

  # Find actors of Ab Kya Hoga who are politicians
  ?abKyaHoga a dbo:TVSeries ;
             foaf:name ""Ab Kya Hoga""@en .
  
  ?abKyaHoga dbo:actor ?actorAbKyaHoga .
  
  ?actorAbKyaHoga dbo:profession ?politicianProfession .
  
  # Check if the profession is related to politics
  FILTER(?politicianProfession IN (dbo:Politician, dbo:GovernmentOfficial))

  # Find shared professions between actors of both shows
  OPTIONAL { ?actorDispatches dbo:profession ?profession }
  
  FILTER(?profession = ?politicianProfession)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:R.E.M._song_Lotus dbo:producer ?producer .
  
  FILTER EXISTS { ?producer a dbo:Organization . }
  FILTER EXISTS { ?producer a dbo:Band . }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?realName WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
  ?child a dbo:Monarch .
  OPTIONAL { ?child foaf:name ?realName . }
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?war1 ?war2 WHERE {
  # Antonios Varthalitis death place that is a settlement
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  FILTER EXISTS { ?deathPlace a dbo:Settlement }

  # Wars involving Napoleon Zervas
  OPTIONAL {
    dbr:Napoleon_Zervas dbo:participatedInWar ?war1 .
  }
  
  # Wars involving Konstantinos Ventiris
  OPTIONAL {
    dbr:Konstantinos_Ventiris dbo:participatedInWar ?war2 .
  }
}
```",4,5,5,2,3,2,3,28,0,1,1,0.0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Charleston,_South_Carolina .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:William_I dbo:child ?child .
  
  ?child a dbo:RoyalFamilyMember .

  OPTIONAL { ?reference dbo:royalty true . }
  OPTIONAL { ?reference dbo:officeHolder true . }

  ?reference dbo:child dbr:William_I .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession (GROUP_CONCAT(?actor; separator="", "") AS ?actors) WHERE {
  # Query for Frédéric Bouraly's profession
  OPTIONAL { 
    dbr:Frédéric_Bouraly dbo:profession ?profession .
  }
  
  # Query for actors in Rustlers' Rhapsody
  OPTIONAL {
    dbr:Rustlers'_Rhapsody dbo:starring ?actor .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard""@en .
  
  OPTIONAL { 
    ?bandMemberRelation dbo:bandMember ?person .
    ?bandMemberRelation dbo:band dbr:Uncle_Murda .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:C._of_W%C3%BCrttemberg dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  dbr:Nick_Curran a dbo:MusicalArtist ;
                  dbo:associatedBand ?band .
  
  OPTIONAL { 
    ?band rdfs:label ""The Fabulous Thunderbirds""@en .
  }
  
  ?band dbo:member ?associatedArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Na'od dbo:child ?person .
  ?person dbo:parent ?father .
  
  FILTER EXISTS { ?father a dbo:Monarch . }
  FILTER EXISTS { ?father a dbo:OfficeHolder . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jamie T""@en .
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration WHERE {
  # Find Anxo Quintana's office in an event
  ?event a dbo:Event ;
         dbo:leader ?anxoQuintana .
  
  ?anxoQuintana foaf:name ""Anxo Quintana""@en ;
                dbo:office ?office .

  # Find the administration associated with PSOE
  ?administration a dbo:Government ;
                  dbo:party dbr:Spanish_Socialist_Workers'_Party .

  # Link the event to the administration
  ?event dbo:partOf ?administration .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  ?alumnus a dbo:Person ;
           dbo:alumnusOf dbr:Eton_College .
  
  ?child dbo:parent ?alumnus ;
         a dbo:Politician ;
         dbo:award dbr:Commander_of_the_Royal_Victorian_Order .

  ?father dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
    BIND(dbr:Glenn_Youngkin AS ?person)
  }
  UNION
  {
    # Assuming Vince Gilligan's awards are linked to him directly in DBpedia
    OPTIONAL { dbr:Vince_Gilligan dbo:award ?award . }
    OPTIONAL { ?award dbo:recipient dbr:Vince_Gilligan . }
    dbr:Vince_Gilligan dbo:birthPlace ?birthPlace .
    BIND(dbr:Vince_Gilligan AS ?person)
  }
  UNION
  {
    dbr:Cecily_Bell dbo:birthPlace ?birthPlace .
    BIND(dbr:Cecily_Bell AS ?person) # Cecily Bell is the author of ""El Deafo""
  }
}
```",5,5,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?office WHERE {
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .
  
  OPTIONAL { ?miguelMaura dbo:officeHolder ?office . }
  
  OPTIONAL { ?office dbo:positionTitle ?title .
             FILTER(CONTAINS(LCASE(?title), ""commander"") || CONTAINS(LCASE(?title), ""politician"")) }

  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?miguelMaura .

  ?manuelPinto daCosta a dbo:Person ;
                    foaf:name ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { ?conflict dbo:participant ?manuelPinto . }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:father ?parent .
  
  # Victor Stanley (Royal Navy officer)
  dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  dbr:Philip_I_of_Castile dbo:child ?child .
  
  FILTER EXISTS { 
    ?child rdf:type ?royalType .
    VALUES ?royalType { dbo:Monarch dbo:RoyalFamilyMember }
  }

  ?child dbo:parent ?father .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Saw_Shwe_Khet dbo:child ?child .
  ?child a dbo:Person ;
         dbo:royaltyTitle ?title .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find entities related to the Ottoman Empire
  ?entity dbo:relatedTo dbr:Ottoman_Empire .
  
  # Find entities related to the Order of the Medjidie
  ?entity dbo:relatedTo dbr:Order_of_the_Medjidie .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify Khlyst as a band
  dbr:Khlyst (dbo:bandMember) ?member .

  # Step 2: Ensure the member is also a musical artist
  ?member a dbo:MusicalArtist .

  # Step 3: Find associated musical artists of this member
  ?member dbo:associatedBand ?associatedArtist .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author ?spouse WHERE {
  # Find the author of ""Back to Work""
  ?book a dbo:Book ;
        foaf:name ""Back to Work""@en .
  
  ?book dbo:author ?author .

  # Find the spouse who is a politician and office holder
  OPTIONAL { 
    ?author dbo:spouse ?spouse .
    
    ?spouse a dbo:Person ;
            dbo:officeHolder ?office ;
            foaf:name ?name .
            
    FILTER EXISTS {
      ?invitation a dbo:Book ;
                  foaf:name ""An Invitation to the White House""@en .
      
      ?invitation dbo:author ?spouse .
    }
  }

  # Historical context for commander in war (disease and societal event)
  OPTIONAL { 
    ?commander a dbo:Person ;
               dbo:commanderOfMilitaryUnit ?unit .
    
    ?unit dbo:militaryBranch dbr:United_States_Navy ;
          dbo:participatedInWar ?war .

    FILTER EXISTS {
      ?war dbo:name ?eventName .
      
      # Assuming the war is related to a disease and societal event
      FILTER(CONTAINS(LCASE(?eventName), ""influenza"") || CONTAINS(LCASE(?eventName), ""pandemic""))
    }
  }

  # Linking commander with author if applicable
  OPTIONAL { 
    ?commander dbo:spouse ?author .
  }
}
```",5,9,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Johnny Doughboy""@en .
  OPTIONAL { ?actor dbo:work ?work . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Identify a work authored by Bill Clinton
  dbr:Bill_Clinton dbo:author ?work .
  FILTER(?work = dbr:My_Life)

  # Find an entity that is both a disease and a societal event, acting as a commander in a war related to the owner of USS Arcadia
  ?commander a dbo:Disease ;
             a dbo:SocietalEvent ;
             dbo:commanderInWar ?war .
  
  ?war dbo:relatedTo ?owner .

}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:An_Invitation_to_the_White_House dbo:author ?author .
  
  ?author a dbo:Politician ;
          dbo:officeHolder ?office .

}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?musicalArtist WHERE {
  # Find actor of The Campus Queen
  OPTIONAL { 
    dbr:The_Campus_Queen dbo:actor ?actor .
  }
  
  # Find musical artist associated with Cynthia Ikponmwenosa Morgan (Ciara)
  OPTIONAL {
    dbr:Ciara a dbo:MusicalArtist ;
               foaf:name ""Cynthia Ikponmwenosa Morgan""@en .
    ?ciara dbo:musicalArtist ?musicalArtist .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  ?siege a dbo:Event ;
         foaf:name ""Siege of Mukha""@en .
  
  ?siege dbo:commander ?commander .
  
  FILTER(?commander rdf:type dbo:Monarch) .

  ?commander dbo:parent ?parent .
  
  FILTER(?parent rdf:type dbo:Monarch)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?series WHERE {
  dbr:The_Golden_Master a dbo:TelevisionEpisode ;
                        dbo:partOfSeries ?series .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?alterEgo WHERE {
  # Find Baeda Maryam I and his child
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .
  
  ?child dbo:parent ?baedaMaryamI .

  # Find the father of this child who is royalty and an office holder
  ?father dbo:child ?child ;
          (dbo:royalty | dbo:officeHolder) ?role .

  # Identify The Shadow and its alter ego
  ?shadow a dbo:Person ;
          foaf:name ""The Shadow""@en .
  
  OPTIONAL { ?shadow foaf:name ?alterEgo . }

  # Ensure the father is the same as the alter ego of The Shadow
  FILTER(?father = ?shadow)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:positionHeld ?administration .
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:location dbr:Japan . }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?person a dbo:Person ;
          foaf:name ""Cora Sue Collins""@en .
  
  ?work dbo:author ?person ;
        rdf:type dbo:CreativeWork .

  OPTIONAL { 
    ?work dbo:producer ?producer .
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci""@en .
  ?person dbo:almaMater ?almaMater .
}
```",3,4,4,3,1,3,2,20,3,0,0,1.0,1.0,1.0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Koichirō""@en .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthday WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marty Pollio""@en .
  ?person dbo:birthday ?birthday .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Saw_Shwe_Khet dbo:child ?child .
  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfShweKhet ?childOfMinHla ?predecessor WHERE {
  # Find the spouse of Saw Shwe Khet
  ?shweKhet a dbo:Person ;
            foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?shweKhet dbo:spouse ?spouseOfShweKhet . }

  # Find the child of Saw Min Hla
  ?minHla a dbo:Person ;
          foaf:name ""Saw Min Hla""@en .
  OPTIONAL { ?minHla dbo:child ?childOfMinHla . }

  # Find the predecessor of the child of Saw Shwe Khet
  OPTIONAL {
    ?shweKhetChild dbo:child ?childOfShweKhet .
    ?childOfShweKhet dbo:predecessor ?predecessor .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?settlement WHERE {
  # Find the awardee of Gillmore Medal and their force
  ?awardee dbo:award dbr:Gillmore_Medal .
  OPTIONAL { ?awardee dbo:militaryUnit ?force . }

  # Find Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .

  # Filter for settlements in America
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States ;
              dbo:location ?birthPlace .
}
```",4,6,5,2,2,3,3,71,0,2,2,0.0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  # Cora Sue Collins' notable work and its producer
  ?collins a dbo:Person ;
           foaf:name ""Cora Sue Collins""@en .
  ?work dbo:performer ?collins ;
        dbo:producer ?producer .

  # A Star Is Born (1937 film) and its producer
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?starProducer .

  # Kent Allard's fictional character and its producer
  ?fictionalCharacter a dbo:FictionalCharacter ;
                     foaf:name ""Kent Allard""@en .
  ?fictionalWork dbo:character ?fictionalCharacter ;
                 dbo:producer ?fictionalProducer .

  # Ensure the producers match
  FILTER(?producer = ?starProducer)
  FILTER(?producer = ?fictionalProducer)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardee WHERE {
  ?fellowship a dbo:Award ;
              foaf:name ""Sangeet Natak Akademi Fellowship""@en .
  
  ?fellowship dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?recipientName WHERE {
  ?prize a dbo:NobelPrizeInPhysics .
  ?prize dbo:recipient ?recipient .
  ?recipient a dbo:Person ;
             foaf:name ?recipientName .
}
```",1,1,2,1,1,3,2,20,0,0,31,0,0.0,0
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbo:actor dbr:1,000_Dollars_a_Minute ;
          dbo:partyMember dbr:Republican_Party_(United_States) .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Alexander_of_Württemberg_(1804-1881) dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?native WHERE {
  ?shobhna a dbo:Person ;
           foaf:name ""Shobhna Samarth""@en .
  
  ?shobhna dbo:birthPlace ?birthplace .

  ?birthplace rdf:type dbo:Country .

  ?native dbo:nationality ?birthplace ;
          foaf:name ?name .
}
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?team WHERE {
  # Find the actor from ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?show dbo:title ""All or Nothing: Manchester City""@en .
  ?show dbo:castMember ?actor .
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Find Marcelo Sarmiento's birthdate and team information based on his roles as a soccer player and manager
  dbr:Marcelo_Sarmiento dbo:birthday ?birthdate ;
                        (dbo:soccerPlayerTeam|dbo:managerOf) ?team .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession (GROUP_CONCAT(?alterEgo; separator="", "") AS ?alterEgos) WHERE {
  # Query for Shatrughan Sinha's profession
  OPTIONAL { 
    dbr:Shatrughan_Sinha dbo:profession ?profession .
  }
  
  # Query for The Shadow video game's alter ego
  OPTIONAL {
    dbr:The_Shadow_(video_game) dbo:alterEgo ?alterEgo .
  }
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the ruling party in Central, Louisiana
  ?central a dbo:PopulatedPlace ;
           dbo:country dbr:United_States ;
           rdfs:label ""Central, Louisiana""@en .
  
  OPTIONAL { 
    ?government dbo:governingBodyOf ?central ;
                dbo:politicalParty ?rulingParty .
  }
  
  # Find the birth name of Ann Sothern
  ?annSothern a dbo:Person ;
              foaf:name ""Ann Sothern""@en ;
              dbo:birthName ?birthName .

  # Find party members with that birth name
  ?partyMember a dbo:Person ;
               dbo:politicalParty ?rulingParty ;
               dbo:birthName ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  { 
    ?georgeH a dbo:Person ;
             foaf:name ""George H. Cameron""@en .
    ?georgeH dbo:award ?entity .
  }
  UNION
  {
    ?dougBeattie a dbo:Person ;
                 foaf:name ""Doug Beattie""@en .
    ?dougBeattie dbp:residence ?entity .
  }
}
```",3,3,4,2,2,3,2,20,2,0,0,1.0,1.0,1.0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doug Beattie""@en .
  
  OPTIONAL { ?person dbo:country ?country . }
  FILTER(?country = dbr:United_Kingdom)
  
  OPTIONAL { ?person dbp:residence ?residence . }
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fictionalName WHERE {
  dbr:Lamont_Cranston dbo:fictionalName ?fictionalName .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:nativePlace dbr:Grand_Duchy_of_Finland .
  ?person dbo:nativePlace dbr:Russia .
}
```",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Identify Alexander II, Grand Duke of Finland
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:position dbr:Governor-General_of_Finland .

  # Find people who were native to the region under his administration (Finland)
  ?native dbo:birthPlace ?place .
  
  # Ensure that the birth place is within Finland
  ?place dbo:country dbr:Finland .

  # Optionally, ensure they are also associated with the Russian Empire context
  OPTIONAL { ?native dbo:nationality dbr:Russian_Empire . }
}
```",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Dawit_I dbo:child ?child .
  
  ?child dbo:parent dbr:Baeda_Maryam_I .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?album a dbo:Album ;
         foaf:name ""Sappy""@en .
  
  ?album dbo:writer ?writer .

  ?filthyFriends a dbo:Band ;
                 foaf:name ""Filthy Friends""@en .

  ?filthyFriends dbo:bandMember ?bandMember ;
                 dbo:associatedMusicalArtist ?writer .

}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?associatedArtistStuartTosh ?writerArtist WHERE {
  # Find band members of The Alan Parsons Project
  ?project a dbo:MusicalBand ;
           foaf:name ""The Alan Parsons Project""@en .
  OPTIONAL { ?project dbo:bandMember ?bandMember . }

  # Find associated musical artist(s) of Stuart Tosh
  ?stuartTosh a dbo:Person ;
              foaf:name ""Stuart Tosh""@en .
  OPTIONAL { ?stuartTosh dbo:associatedBand ?associatedArtistStuartTosh . }

  # Find writer who is both a musical artist and an artist for Wizards of Waverly Place soundtrack
  ?soundtrack a dbo:Soundtrack ;
              foaf:name ""Wizards of Waverly Place""@en .
  OPTIONAL { ?soundtrack dbo:writer ?writerArtist . }
  
  FILTER(?writerArtist a dbo:MusicalArtist && ?writerArtist a dbo:Artist)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:administration ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:Walter_B._Gibson dbo:creator ?creation .
  ?creation a dbo:FictionalCharacter ;
            dbo:alterEgo ?alterEgo .
  FILTER EXISTS { ?creation dbo:mediaType dbr:ComicBook . }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Florida .
}
```",1,1,2,1,1,3,3,71,970,0,1,1.0,0.9989701338825953,0.9994848016486347
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the player associated with the 2007–08 VfL Bochum season
  ?player dbo:memberOf dbr:VfL_Bochum ;
          dbo:playsFor ?club .

  # Ensure the club is a sports club, organisation, and soccer club
  ?club rdf:type dbo:SportsClub ;
        rdf:type dbo:Organisation ;
        rdf:type dbo:SoccerClub .

  # Find the manager of this player during that season
  ?player dbo:manager ?manager .

  # Theodor Heuss' country of origin
  dbr:Theodor_Heuss dbo:nationality ?country .

  # Ensure the manager is native to this country
  ?manager dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?country .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Person .
  OPTIONAL { ?entity dbo:birthPlace dbr:Athens . }
  OPTIONAL { ?entity dbo:location dbr:Athens . }
}
```",1,1,2,1,1,2,3,28,0,1048576,12,0.0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  ?band a dbo:Band ;
        dbo:location dbr:New_York_(state) .
  ?band dbo:award ?award .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?iliza .
  
  ?iliza foaf:name ""Iliza Shlesinger""@en .

  ?janusz a dbo:Person ;
          foaf:name ""Janusz Kamiński""@en .
  
  ?janusz dbo:spouse ?spouse .

  ?movie dbo:starring ?spouse .

  ?movie dbo:starring ?actor .
  
  FILTER(?iliza != ?actor)
}
```",3,5,4,2,2,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?entityInCharleston ?war WHERE {
  # Find Quincy Adams Gillmore's military force
  dbr:Quincy_Adams_Gillmore dbo:militaryUnit ?force .
  
  # Identify entities in Charleston, South Carolina related to the context
  ?entityInCharleston a dbo:Place ;
                     dbo:location dbr:Charleston,_South_Carolina .

  # Determine the war during which Gillmore was active and awards by Congress
  ?war a dbo:MilitaryConflict ;
      dbo:participant ?force .
  
  OPTIONAL {
    ?award a dbo:Award ;
           dbo:awardee dbr:Quincy_Adams_Gillmore ;
           dbo:givenBy dbr:United_States_Congress .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfAlbrecht ?grandChildOfCharlesLouis WHERE {
  # Find the child of Albrecht, Duke of Württemberg
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?childOfAlbrecht .

  # Find the grandchild (child's child) of Archduke Charles Louis who is royalty
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?childOfCharlesLouis .
  ?childOfCharlesLouis dbo:child ?grandChildOfCharlesLouis .
  
  # Ensure the grandchild holds a royal title
  ?grandChildOfCharlesLouis dbo:royaltyTitle ?title .

  # Find predecessor of Carl, Duke of Württemberg
  dbr:Claudia,_Duchess_of_W%C3%BCrttemberg dbo:predecessor ?predecessor .
  
  # Ensure the grandchild is also a predecessor of Carl, Duke of Württemberg
  FILTER(?grandChildOfCharlesLouis = ?predecessor)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  ?work a dbo:Song ;
        dbo:musicalWork ?musicalWork .
  
  ?musicalWork a dbo:MusicalWork .

  ?performance dbo:performer dbr:T.I. ;
               dbo:workPerformed ?work .
}
```",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?work WHERE {
  # Michał Kazimierz Pac's resource
  dbr:Micha%C5%82_Kazimierz_Pac a dbo:Person ;
                               dbo:commanderOf ?event .

  # The event is both an event and a military conflict
  ?event a dbo:Event, dbo:MilitaryConflict .

  # Successor who is a politician and office holder
  ?successor a dbo:Politician, dbo:OfficeHolder ;
             dbo:successorOf dbr:Micha%C5%82_Kazimierz_Pac .

  # Reference to the work of George Ducas
  ?work dbo:author dbr:George_Ducas .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?georgeSavage a dbo:Person ;
                foaf:name ""George Savage""@en .
  
  ?georgeSavage dbo:member ?party .
  
  ?party a dbo:PoliticalParty ;
         dbo:leader ?leader .

  ?leader foaf:based_near ?residence .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?successor WHERE {
  # Find VfL Bochum 2006-07 season
  dbr:VfL_Bochum_season_2006–07 a dbo:SoccerSeason ;
                                dbo:team dbr:VfL_Bochum .

  # Identify the manager of VfL Bochum during that season
  ?manager a dbo:Person ;
           dbo:nationality dbr:West_Germany ;
           dbo:managerOfTeam ?vflBochumSeason .
  
  FILTER(?vflBochumSeason = dbr:VfL_Bochum_season_2006–07)

  # Find the successor of this manager
  OPTIONAL { ?successor a dbo:Person ;
                       dbo:succeededBy ?manager . }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  # Find the death place of Christian Ditlev Ammentorp Hansen
  dbr:Christian_Ditlev_Ammenhorst_Hansen dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find territories administered from this settlement
  ?territory dbo:administeredBy ?mayor ;
             dbo:administrativeCenter ?deathPlace .

  # Link to the mayor of Duchy of Schleswig
  ?mayor dbo:officeHolder dbr:Duchy_of_Schleswig_mayors .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAmy ?parentOfChild ?actor WHERE {
  # Find the parent of Amy Arbus
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  OPTIONAL { ?amy dbo:parent ?parentOfAmy . }

  # Find the child of Allan Arbus and then that child's parent
  ?allan a dbo:Person ;
         foaf:name ""Allan Arbus""@en .
  OPTIONAL { ?allan dbo:child ?childOfAllan . }
  OPTIONAL { ?childOfAllan dbo:parent ?parentOfChild . }

  # Find an actor of the film Judgment: The Trial of Julius and Ethel Rosenberg
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:actor ?actor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?anthology dbo:author ?writer .
  FILTER(STRSTARTS(LCASE(?anthology), LCASE(""the live anthology"")))
  
  ?writer a dbo:Writer ;
          dbo:musicalArtist true .
}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?reference WHERE {
  ?person a dbo:Person ;
          foaf:name ""Afeez Oyetoro""@en .
  OPTIONAL { ?person owl:sameAs ?reference . }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:parent ?father .

  # Ensure the father is a commander in a war and involved in societal events, general events, and television shows
  ?father dbo:commanderInWar ?war .
  ?father dbo:societalEvent ?societalEvent .
  ?father dbo:event ?event .
  ?father dbo:televisionShow ?tvShow .

  # Find the child of this person who is linked to the 2nd Dragoon Regiment (France)
  ?child dbo:parent ?father .
  ?child dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  
  OPTIONAL { ?kimWilson dbo:band ?band . }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  dbr:Lamont_Cranston dbo:wikiPageRedirects ?reference .
  
  FILTER (
    regex(str(?reference), ""radio|film|television"", ""i"")
  )
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  dbr:French_Revolutionary_Wars dbo:commander ?commander .
  
  ?commander dbo:participatedInWar ?war .
}
```",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?war WHERE {
  # Henry Clay Lewis's birthplace that is a settlement in America
  ?henryClayLewis a dbo:Person ;
                  foaf:name ""Henry Clay Lewis""@en .
  ?henryClayLewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Amasa Tracy's war involvement
  ?amasaTracy a dbo:Person ;
              foaf:name ""Amasa Tracy""@en .
  ?amasaTracy dbo:servedIn ?war .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfWilliamII ?royalChild ?childOfRoyalChild WHERE {
  # Find William II of Sicily and his father
  dbr:William_II_of_Sicily dbo:father ?fatherOfWilliamII .

  # Find Constance of Burgundy's spouse and their child who is royalty
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  ?spouse dbo:child ?royalChild .
  FILTER (?royalChild rdf:type dbo:Monarch) .

  # Find the child of this royal child
  ?royalChild dbo:child ?childOfRoyalChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  # Find Elorm Kabu Amenyah by birth name
  ?elorm a dbo:Person ;
         foaf:name ""Elorm Kabu Amenyah""@en ;
         dbo:birthName ?birthName .

  # Identify artists from Central Region, Ghana
  ?person a dbo:Artist ;
          dbo:nativePlace dbr:Central_Region,_Ghana .

  # Find association with Elorm Kabu Amenyah
  OPTIONAL { ?elorm dbo:musicalArtist ?association . }
  OPTIONAL { ?association dbo:associatedMusicalArtist ?artist . }

  FILTER(?person = ?artist)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace WHERE {
  dbr:Plovdiv_University_of_Saint_Paisius_the_Hilandarian dbo:alumni ?alumnus .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  dbr:Burnt_by_the_Sun_(band) a dbo:MusicalArtist ;
                               dbo:genre ?genre .
  
  OPTIONAL { 
    ?relatedEntity dbo:associatedBand dbr:Burnt_by_the_Sun_(band) .
    ?relatedEntity a dbo:MusicalArtist ;
                   (dbo:band | dbo:musicalGroup | dbo:organization) ?type .
    
    FILTER(?type IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  }
  
  OPTIONAL {
    ?associatedArtist dbo:member dbr:Burnt_by_the_Sun_(band) .
    ?associatedArtist a dbo:MusicalArtist ;
                      (dbo:band | dbo:musicalGroup | dbo:organization) ?type .
    
    FILTER(?type IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  }
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Find the player associated with VfL Bochum in the 2007-08 season
  ?player dbo:memberOfTeam dbr:VfL_Bochum ;
          dbo:memberOfSeason dbr:2007–08_VfL_Bochum_season .

  # Identify the manager of this player during that season
  ?player dbo:manager ?manager .

  # Ensure the manager also managed SBV Vitesse in the 2020-21 season
  ?vitesseTeam a dbo:SoccerClub ;
               dbo:member dbr:SBV_Vitesse .
  ?vitesseSeason a dbo:SoccerSeason ;
                 dbo:team dbr:SBV_Vitesse ;
                 dbo:season ""2020–21""^^xsd:string .
  ?manager dbo:managedTeam ?vitesseTeam ;
           dbo:managedSeason ?vitesseSeason .

  # Find the leader of West Germany and their administration country
  ?leader a dbo:Leader ;
          dbo:country dbr:West_Germany .
  ?adminCountry dbo:administratedBy ?leader .

  # Ensure the manager is native to this administration country
  ?manager dbo:nationality ?adminCountry .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchild WHERE {
  # Find parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parentOfMargarete .

  # Find child (royalty) of the parent of Archduchess Margarete Sophie of Austria
  ?childOfParent a dbo:Royalty ;
                 dbo:parent ?parentOfMargarete .
  
  # Find grandchild (royalty) of the parent of Archduchess Margarete Sophie of Austria
  ?grandchild a dbo:Royalty ;
              dbo:parent ?childOfParent .

  # Find spouse of Archduchess Helena of Austria
  dbr:Helena_of_Austria dbo:spouse ?spouseOfHelena .

  # Find child (royalty) of the spouse of Archduchess Helena of Austria
  ?childOfSpouse a dbo:Royalty ;
                 dbo:parent ?spouseOfHelena .

  # Ensure grandchild is a predecessor of the child of the spouse of Archduchess Helena of Austria
  FILTER(?grandchild < ?childOfSpouse)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?recipient a dbo:Person ;
             dbo:award ""Medal of Honor"" .
  
  ?recipient dbo:participatedInWar ?war .

  OPTIONAL { 
    ?recipient dbo:location dbr:Charleston,_South_Carolina .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Siege_of_Mukha dbo:commander ?commander .
  ?commander a dbo:Person ;
             dbo:royalty true .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?myatHponePyo a dbo:Person ;
                 foaf:name ""Myat Hpone Pyo""@en .
  
  ?myatHponePyo dbo:parent ?father .

  FILTER EXISTS { ?father a dbo:Monarch }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:The_Miseducation_of_Lauryn_Hill dbo:writer ?writer .
  dbr:The_Miseducation_of_Lauryn_Hill dbo:artist ?writer .
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamAgüero ?teamAimar WHERE {
  dbr:Sergio_Ag%C3%BCero dbo:team ?teamAgüero .
  dbr:Pablo_Aimar dbo:team ?teamAimar .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child ?spouse ?predecessor WHERE {
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  OPTIONAL { ?sawMinHla dbo:child ?child . }
  
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  OPTIONAL { ?sawShweKhet dbo:spouse ?spouse . }
  
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  OPTIONAL {
    ?predecessor dbo:successor ?myatHponePyo .
  }

  FILTER(?child = ?spouse && ?spouse = ?predecessor)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film (IF(?film = dbr:The_Adventures_of_Tom_Sawyer_(1938_film), ""The Adventures of Tom Sawyer"", ""A Star Is Born"") AS ?filmName) ?producer WHERE {
  VALUES (?film ?filmLabel) {
    (dbr:The_Adventures_of_Tom_Sawyer_(1938_film) ""The Adventures of Tom Sawyer"")
    (dbr:A_Star_Is_Born_(1937_film) ""A Star Is Born"")
  }
  
  ?film dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    dbr:Toyotomi_Hidenaga 
    dbr:Hashiba_Hidekatsu 
  }
  
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  OPTIONAL { ?mariclare dbo:spouse ?spouse . }
  
  OPTIONAL { ?spouse dbo:child ?child . }
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:parent ?parent .
  FILTER(?parent a dbo:Monarch)
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Filthy_Friends dbo:associatedBand ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:memberOf dbr:Spanish_Socialist_Workers'_Party .
  ?person dbo:headOfStateOrGovernment dbr:Spain .
}
```",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfArthur ?parentOfChild WHERE {
  # Find Arthur Stanley's father
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley (politician)""@en .
  ?arthur dbo:father ?fatherOfArthur .

  # Find Edward Stanley, 17th Earl of Derby and his child's parent who is a politician and office holder
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  
  ?child dbo:parent ?edward .
  ?politicianParent dbo:child ?child ;
                    a dbo:Politician ;
                    dbo:officeHolder ?office .

  FILTER(?politicianParent = ?parentOfChild)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfStephenV ?spouseOfFatherPhilipI ?parentOfCharlesMartel WHERE {
  # Child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?childOfStephenV .

  # Father of Philip I, Prince of Taranto and his spouse
  OPTIONAL {
    dbr:Philip_I,_Prince_of_Taranto dbo:parent ?fatherOfPhilipI .
    ?fatherOfPhilipI dbo:spouse ?spouseOfFatherPhilipI .
  }

  # Parent of Charles Martel of Anjou
  OPTIONAL {
    dbr:Charles_Martel_of_Anjou dbo:child ?parentOfCharlesMartel .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eleonoresFather WHERE {
  # Eleonore of Austria, Queen of Poland
  dbr:Eleonora_of_Austria_Queen_of_Poland dbo:father ?eleonoresFather .

  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?ceciliaRenatasFather .

  # Cecilia Renata of Austria's grandfather (father's father)
  ?ceciliaRenatasFather dbo:father ?grandfather .

  # Eleonore's father is a child of Cecilia Renata's grandfather
  ?eleonoresFather dbo:parent ?grandfather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Find the child of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  ?child dbo:parent ?sawShweKhet .

  # Identify the father of Myat Hpone Pyo and his spouse
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  ?father dbo:child ?myatHponePyo .
  OPTIONAL { ?father dbo:spouse ?spouse . }

  # Check if the spouse is royalty
  FILTER EXISTS {
    ?spouse a dbo:Royalty .
  }

  # Find the predecessor of the identified entity (child of Saw Shwe Khet and spouse)
  ?predecessor dbo:successor ?child ;
               dbo:successor ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member (SAMPLE(?designer) AS ?designerOfAMR1)
WHERE {
  # Find members of 1. FC Magdeburg
  dbr:1._FC_Magdeburg dbo:member ?member .

  # Find designer of Aston Martin AMR1
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  ?show dbr:Ab_Kya_Hoga .
  
  ?show dbo:castMember ?actor .
  ?actor a dbo:Actor ;
         dbo:profession ?profession .

  FILTER(?profession = dbo:Politician)
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:residence dbr:Sofia . }
}
```",1,1,2,1,1,3,2,20,9,1048567,7,8.58306884765625e-06,0.5625,1.716587576483513e-05
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?bobbyShmurda a dbo:MusicalArtist ;
                 foaf:name ""Bobby Shmurda""@en .
  
  OPTIONAL { ?bobbyShmurda dbo:associatedMusicalArtist ?associatedArtist . }
  
  FILTER(?associatedArtist != ?bobbyShmurda)
}
```",1,2,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfDispatches ?alterEgoProfession ?shatrughanSinhaProfession WHERE {
  # Actor of ""Dispatches from Elsewhere""
  OPTIONAL { 
    dbr:Dispatches_from_Elsewhere dbo:actor ?actorOfDispatches .
  }
  
  # Professional in the alter ego of The Shadow
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
    ?shadowAlterEgo dbo:profession ?alterEgoProfession .
  }

  # Profession of Shatrughan Sinha
  OPTIONAL {
    dbr:Shatrughan_Sinha dbo:profession ?shatrughanSinhaProfession .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find Philip, Despot of Romania
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  # Find the parent of Philip
  ?parentOfPhilip dbo:child ?philip .

  # Ensure this parent is royalty
  OPTIONAL { ?parentOfPhilip dbo:title ?title1 }
  FILTER(?title1 != """")

  # Find the father of this royal parent
  ?fatherOfParentOfPhilip dbo:child ?parentOfPhilip .
  
  # Find the spouse of this paternal figure
  OPTIONAL { ?fatherOfParentOfPhilip dbo:spouse ?spouse }

  # Repeat similar steps for Charles I of Hungary
  ?charlesI a dbo:Person ;
            foaf:name ""Charles I of Hungary""@en .

  ?parentOfCharlesI dbo:child ?charlesI .
  
  OPTIONAL { ?parentOfCharlesI dbo:title ?title2 }
  FILTER(?title2 != """")

  ?fatherOfParentOfCharlesI dbo:child ?parentOfCharlesI .

  # Ensure the spouse is the same for both paths
  FILTER(?spouse = ?spouse)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Winston Chang""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Anxo_Quintana a dbo:Person ;
                   dbo:partyMember dbr:Spanish_Socialist_Workers'_Party .
  
  OPTIONAL { 
    ?administration dbo:country dbr:Spain ;
                    dbo:leader dbr:Anxo_Quintana .
    
    ?administration dbo:event ?event .
    
    ?office dbo:positionHeldBy dbr:Anxo_Quintana ;
            dbo:partOf ?administration .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?alterEgo WHERE {
  # Query for the father of Baeda Maryam I
  OPTIONAL {
    dbr:Baeda_Maryam_I dbo:father ?father .
  }
  
  # Query for the alter ego of Lamont Cranston
  OPTIONAL {
    dbr:Lamont_Cranston dbo:alterEgo ?alterEgo .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Find Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .

  # Find his child
  ?child dbo:child ?frederick .

  # Find the parent of this child who is also a politician
  ?parentOfChild dbo:parent ?child .
  FILTER EXISTS { ?parentOfChild dbo:politicalParty ?party } 

  # Ensure the alumnus of Eton College is linked in the chain
  ?alumnus a dbo:Person ;
           foaf:name ?alumnusName ;
           dbo:almaMater dbr:Eton_College .
  
  # Link the alumnus to the child or parent
  OPTIONAL { ?child foaf:name ?alumnusName }
  OPTIONAL { ?parentOfChild foaf:name ?alumnusName }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:R.E.M. a dbo:Band ;
              dbo:bandMember ?member .
  
  ?member a dbo:Artist ;
          foaf:name ?artistName .

  FILTER(LANG(?artistName) = ""en"")
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .
  
  ?film dbo:filmProducer ?natLevine .

  ?actor dbo:actorInFilm ?film .
  
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Paradise_(2013_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandparentOfDorothea ?spouseOfParent WHERE {
  dbr:Dorothea_of_Lorraine dbo:parent ?father .
  ?father dbo:parent ?grandparentOfDorothea .

  dbr:Francis_I,_Duke_of_Lorraine dbo:parent ?parentOfFrancis .
  FILTER (?parentOfFrancis rdf:type dbo:Royalty && ?parentOfFrancis rdf:type dbo:Noble)
  
  OPTIONAL { ?parentOfFrancis foaf:name ?spouseName }
  OPTIONAL { ?parentOfFrancis dbo:spouse ?spouseOfParent }

}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?finalChild WHERE {
  # Find predecessor of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Find child of the predecessor who is royalty
  ?child a dbo:RoyalFamily ;
         dbo:parent ?predecessor .

  # Find spouse of this child
  OPTIONAL { ?child dbo:spouse ?spouse . }

  # Find father of the spouse, ensuring he is royalty
  OPTIONAL { ?fatherOfSpouse a dbo:RoyalFamily ;
                           dbo:child ?spouse .
  }
  
  # Find parent (who must be royalty) of Philip, Despot of Romania
  dbr:Philip_Despot_of_Romania dbo:parent ?royaltyParent .

  # Ensure the father of the spouse is the same as this royalty parent
  FILTER(?fatherOfSpouse = ?royaltyParent)

  # Find child of this father (who is royalty)
  OPTIONAL { ?finalChild a dbo:RoyalFamily ;
                        dbo:parent ?fatherOfSpouse . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?albumActor ?songAlbumActor WHERE {
  # Find the album containing ""What You Know"" by T.I.
  dbr:Paper_Trail dbo:song dbr:What_You_Know_(T.I._song) .

  # Find movies associated with this album
  OPTIONAL { 
    dbr:Paper_Trail dbo:associatedBand ?movie .
    ?movie dbo:actor ?albumActor .
  }

  # Directly find any movie related to the song ""What You Know""
  OPTIONAL {
    dbr:What_You_Know_(T.I._song) dbo:relatedWork ?movie .
    ?movie dbo:actor ?songAlbumActor .
  }
}
```",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:The_Alan_Parsons_Project dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Vince Gilligan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find Philip I, Prince of Taranto's father
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  OPTIONAL { ?philip dbo:parent ?fatherOfPhilip . }
  
  # Find the spouse of Philip I's father
  OPTIONAL { ?fatherOfPhilip dbo:spouse ?spouseFather . }

  # Identify Maria of Bytom's spouse and their parent who is royalty
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  OPTIONAL { ?maria dbo:spouse ?spouseMaria . }
  
  OPTIONAL { ?spouseMaria dbo:parent ?parentOfSpouseMaria . }
  
  # Ensure the parent is royalty
  FILTER(?parentOfSpouseMaria a dbo:RoyalFamilyMember)
  
  # Find Stephen V of Hungary's child who matches Maria's spouse
  dbr:Stephen_V_of_Hungary dbo:child ?childStephV .
  
  FILTER(?spouseMaria = ?childStephV)

  # Ensure the spouse of Philip I's father is the same as the parent of Maria's spouse
  FILTER(?spouseFather = ?parentOfSpouseMaria)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?finalSpouse WHERE {
  ?antoinette a dbo:Person ;
              foaf:name ""Antoinette of Brunswick-Wolfenbüttel""@en .
  
  ?child dbo:parent ?antoinette ;
         a dbo:RoyalFamilyMember .

  ?firstSpouse dbo:spouse ?child .

  ?secondSpouse dbo:spouse ?firstSpouse .

  ?finalSpouse dbo:spouse ?secondSpouse .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  dbr:Nobel_Prize_in_Physics dbo:hostedBy ?host .
  ?host a dbo:EducationalInstitution ;
        dbo:event ?show .
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the professional linked to ""The Golden Master""
  OPTIONAL {
    ?goldenMasterSeries a dbo:TelevisionSeries ;
                        foaf:name ""The Golden Master""@en .
    ?role dbo:actor ?professional .
    ?role dbo:characterName ?goldenMasterCharacter .
    FILTER(?goldenMasterCharacter = ""The Golden Master"")
  }

  # Find the album by T.I. that includes both a song and a musical work
  OPTIONAL {
    dbr:T.I. dbo:album ?album .
    ?song dbo:partOfAlbum ?album ;
          rdf:type dbo:Songs .
    ?musicalWork dbo:partOfAlbum ?album ;
                 rdf:type dbo:MusicalWorks .
  }

  # Retrieve the professional associated with this album
  OPTIONAL {
    ?professional dbo:featuredIn ?album .
  }
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  dbr:Rod_Argent a dbo:Person ;
                 dbo:profession ?rodProfession .
  ?professional a dbo:Person ;
                dbo:profession ?rodProfession .
  FILTER(?professional != dbr:Rod_Argent)
}
```",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:2006–07_VfL_Bochum_season dbo:successor ?successor .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson""@en .
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  OPTIONAL { ?person dbo:band ?band . }
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Scott LaFaro""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  } UNION {
    ?person a dbo:Person ;
            foaf:name ""Bob Crewe""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?person a dbo:Person ;
          dbo:profession dbr:Actor ;
          dbo:actorIn ?film .
  
  ?film dbo:type dbr:Television_show ;
        dbo:castMember dbr:Richard_E._Grant .

  FILTER(?person != dbr:Richard_E._Grant)
}
```",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Tony Hollings' birthdate
  dbr:Tony_Hollings dbo:birthDate ?birthday .

  # Find a person with the specified roles and born on the same date
  ?player a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbo:birthDate ?sameBirthday .
  
  FILTER(?birthday = ?sameBirthday)
}
```",3,7,4,3,1,3,2,20,0,1,6,0.0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# No valid SPARQL query can be generated due to lack of specific information.
```",1,1,2,1,1,2,2,9,0,0,98447,0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?photographerParent ?doonArbusParent WHERE {
  # Find the parent of a professional photographer
  ?person dbo:profession dbo:Photographer .
  OPTIONAL { ?parentOfPhotographer dbo:child ?person . }

  # Find Doon Arbus and her parent
  dbr:Doon_Arbus dbo:parent ?doonArbusParent .

  # Bind the results to variables for output
  BIND(?parentOfPhotographer AS ?photographerParent)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ann Sothern""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order ;
           dbo:child ?child .

  # Father of Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:parent ?fatherOfArthur .
  
  # Parent of the child of Frederick Stanley, 16th Earl of Derby
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?childOfFrederick ;
                                            dbo:parent ?parent .

  # Match the common parent
  FILTER(?fatherOfArthur = ?parent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?settlement WHERE {
  # Amasa Tracy's involvement in a war
  dbr:Amasa_Tracy dbo:participatedIn ?war .

  # Person deceased on 1850-08-05 and their birthplace
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?settlement .
  
  # Ensure the settlement is a settlement and American
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Quincy Adams Gillmore's force
  dbr:Quincy_Adams_Gillmore dbo:militaryForce ?force .

  # Connect the war to the settlement through Amasa Tracy
  OPTIONAL { ?war dbo:place ?settlement }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person dbo:bandMember ?bandMember .
}
```",2,3,3,2,1,3,3,71,0,0,61,0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalChild WHERE {
  # Find Maria Anna of Bavaria
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthYear ""1574""^^xsd:gYear .

  # Identify her child
  ?child dbo:parent ?mariaAnna .

  # Determine the father (spouse) of that child
  ?father dbo:spouse ?mariaAnna .
  
  # Find children of this father who are royalty
  ?royalChild dbo:parent ?father ;
              a dbo:RoyalFamilyMember .
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAwardee ?politicianParent WHERE {
  # Find the award of Rodney Lees and its awardee's parent
  ?rodneyLees a dbo:Person ;
              foaf:name ""Rodney Lees""@en .
  
  OPTIONAL { ?rodneyLees dbo:award ?award . }
  OPTIONAL { ?award dbo:awardee ?awardee . }
  OPTIONAL { ?awardee dbo:parent ?parentOfAwardee . }

  # Find the parent of Edward Stanley, who is a politician and office holder
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .
  
  OPTIONAL {
    ?politicianParent a dbo:Person ;
                      foaf:name ?parentName .
    
    FILTER(?parent = ?politicianParent)
    
    # Ensure the parent is both a politician and an office holder
    ?politicianParent dbo:officeHolder ?office .
    ?politicianParent dbo:politicalParty ?party .
  }
  
  # Find the child of the politician parent, who is also a parent themselves
  OPTIONAL { ?parent dbo:child ?childOfPolitician . }
  OPTIONAL { ?childOfPolitician dbo:parent ?politicianParent . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather WHERE {
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .
  
  ?child dbo:parent ?baedaMaryamI .

  ?spouse dbo:spouse ?baedaMaryamI .
  ?child dbo:parent ?spouse .

  ?grandfather dbo:child ?spouse .
  FILTER (?grandfather a dbo:Monarch && ?grandfather a dbo:OfficeHolder)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?greatGrandchild WHERE {
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en .
  
  ?margareteSophie a dbo:Person ;
                   foaf:name ""Archduchess Margarete Sophie of Austria""@en .

  ?alexanderChild dbo:child ?commonChild .
  ?margareteSophieChild dbo:child ?commonChild .

  ?commonChild dbo:child ?grandchild1 .
  ?grandchild1 dbo:child ?greatGrandchild .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find military force involved in Battle of Vienna
  dbr:Battle_of_Vienna dbo:militaryForce ?militaryForce .

  # Find wars related to this military force
  ?war dbo:militaryConflict ?militaryForce ;
       a dbo:War .

  # Filter for wars that are also television shows and societal events
  OPTIONAL { ?war dbo:wikiPageWikiLink dbr:Category:Television_series_by_genre . }
  FILTER EXISTS {
    ?war dbo:wikiPageWikiLink dbr:Category:Societal_events .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Find Joey Badass by his birth name
  ?joeyB a dbo:Person ;
         dbp:birthName ""Jo-Vaughn Virginie Scott""@en .

  # Find professionals with the same profession as Rod Argent
  ?professional a dbo:Person ;
                dbo:profession ?profession .
  
  FILTER(?rodArgent != ?professional)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Paula Cole's associated artist
  ?paulaCole a dbo:Person ;
             foaf:name ""Paula Cole""@en .
  
  OPTIONAL { ?paulaCole dbo:musicalArtist ?associatedArtist . }
  
  # Rod Argent's profession (keyboardist)
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  
  ?rodArgent dbo:occupation ?profession .
  FILTER(?profession = dbo:Keyboardist)

  OPTIONAL { ?associatedArtist dbo:occupation ?sameProfession }
  FILTER(?sameProfession = dbo:Keyboardist)
  
  # Amakye Dede from Central Region, Ghana
  ?amakyeDede a dbo:Person ;
              foaf:name ""Amakye Dede""@en .
  
  ?amakyeDede dbo:nationality dbr:Ghana ;
              dbo:birthPlace ?centralRegion .
  
  FILTER(CONTAINS(LCASE(?centralRegion), ""central region""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  dbr:Aston_Martin_AMR1 dbo:designer ?designer .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Picketts_Charge dbo:partOf ?battle .
  ?battle dbo:participatedIn ?war .
  FILTER (dbo:SocietalEvent(?war)) .
  
  ?militaryForce dbo:commander ?commander ;
                 dbo:participatedIn ?battle .
}
```",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor WHERE {
  ?adaJaneLow a dbo:Person ;
              foaf:name ""Ada Jane Low""@en .
  
  ?adaJaneLow dbo:officeHolder ?positionHeld .

  OPTIONAL { ?positionHeld dbo:predecessor ?predecessor . }
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Herschel Bernardi""@en .
  
  ?film dbo:starring ?person ;
        a dbo:Film .

  BIND(?film AS ?movie)
}
```",1,2,2,1,1,3,3,71,7,1,6,0.875,0.5384615384615384,0.6666666666666667
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?settlement WHERE {
  # Find Quincy Adams Gillmore's award and its awardee
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
  ?award dbo:recipient ?awardee .

  # Get the force associated with the awardee
  ?awardee dbo:force ?force .

  # Find Henry Clay Lewis's birthplace that is a settlement in America
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  FILTER (?birthPlace rdf:type dbo:Settlement)
  FILTER EXISTS { ?birthPlace dbo:country dbr:United_States }

  # Ensure the birthplace is an American settlement
  BIND(?birthPlace AS ?settlement)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Cecily_Ann_Bell dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Find the commander of Siege of Mukha who is royalty
  ?siege a dbo:Event ;
         dbo:commander ?commander .
  
  FILTER(STRSTARTS(STR(?siege), ""http://dbpedia.org/resource/Siege_of_Mukha""))
  
  ?commander a dbo:Person ;
             dbo:royalty true .

  # Find the parent of this commander who is also royalty
  ?parent dbo:child ?commander .
  FILTER EXISTS { ?parent dbo:royalty true }

  # Finally, find the child of this royal parent
  ?parent dbo:child ?child .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Yamaza Enjirō's birth place
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Hashiba Hidekatsu's war involvement
  dbr:Hashiba_Hidekatsu dbo:participatedInWar ?war .

  # Find common entities between the birth place and the war
  {
    ?birthPlace ?p1 ?commonEntity .
  }
  UNION
  {
    ?war ?p2 ?commonEntity .
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalChild WHERE {
  # Béla IV of Hungary's child
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .

  # Child of Béla IV who is a royalty and has further children
  ?belasChild a dbo:Royal ;
              dbo:child ?royalChild .

  # Royal child must be the spouse of Philip I's father
  ?philipFather dbo:spouse ?royalChild .
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .

  # Royal child must also be a parent of Charles Martel of Anjou
  ?royalChild dbo:child dbr:Charles_Martel_of_Anjou .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Minye Kyawswa's child
  ?minyeChild dbo:parent dbr:Minye_Kyawswa ;
              a dbo:Person .

  # Parent of Minye Kyawswa's child (i.e., Minye Kyawswa)
  ?grandParent dbo:child ?minyeChild .
  
  # Myat Hpone Pyo's predecessor
  ?myatPredecessor dbo:succeededBy dbr:Myat_Hpone_Pyo ;
                   a dbo:Person .

  # Ensure the grandparent is the predecessor of Myat Hpone Pyo
  FILTER(?grandParent = ?myatPredecessor)

  # Father of Myat Hpone Pyo
  ?father dbo:child dbr:Myat_Hpone_Pyo ;
          a dbo:Person .

  # Spouse of the father who is royalty
  ?spouse dbo:spouse ?father ;
          a dbo:RoyalFamilyMember .

  # Child of the spouse (who is royalty)
  ?child dbo:parent ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?playerJuanCarlos ?actorPlayerAthlete ?soccerManagerTeam WHERE {
  # Player in Juan Carlos Molina (footballer)
  dbr:Juan_Carlos_Molina_(footballer) dbo:player ?team .
  ?team dbo:member ?playerJuanCarlos .

  # Actor in ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  dbr:All_or_Nothing:_Manchester_City dbo:actor ?actor .
  ?actor foaf:name ?actorName .
  OPTIONAL { ?actor dbo:soccerPlayer ?soccerPlayer . }
  OPTIONAL { ?actor dbo:athlete ?athlete . }
  FILTER EXISTS { ?actor dbo:soccerPlayer ?soccerPlayer } && EXISTS { ?actor dbo:athlete ?athlete }

  # Person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:soccerPlayer ?playerRole ;
          dbo:manager ?managerRole .
  ?team2 dbo:member ?soccerManagerTeam .

}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine a dbo:Person ;
                                foaf:name ""Antoine, Duke of Lorraine""@en .

  # Find his child who is royalty
  ?child dbo:parent dbr:Antoine,_Duke_of_Lorraine ;
         a dbo:Royalty .

  # Identify the parent of this child who is both royalty and noble
  ?parentOfChild dbo:child ?child ;
                 a dbo:Person, dbo:Royalty, dbo:Noble .

  # Get the spouse of this identified parent
  OPTIONAL { ?parentOfChild dbo:spouse ?spouse . }
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producerProfession WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  ?producer foaf:profession ?producerProfession .
}
```",3,3,4,3,1,3,3,71,0,0,46017,0,0.0,0
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Charles I of Hungary's father
  dbr:Charles_I_of_Hungary dbo:father ?father .

  # Father must be royalty
  ?father a dbo:RoyalFamilyMember .

  # Parent of the father (grandparent)
  ?father dbo:parent ?parentOfFather .

  # Philip I, Prince of Taranto's father
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .

  # The parent must be a spouse of Philip I's father
  ?parentOfFather dbo:spouse ?philipFather .

  # Béla IV of Hungary's child who is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?royalChild .
  ?royalChild a dbo:RoyalFamilyMember .

  # The parent must be a child of this royal child
  ?parentOfFather dbo:child ?royalChild .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?pacely a dbo:Person ;
          foaf:name ""Pacely""@en .
  
  ?pacely dbo:associatedMusicalArtist ?associatedArtist .

  ?person a dbo:Person ;
          foaf:name ""Joseph Benjamin""@en ;
          dbo:birthName ""Joseph Benjamin"" ;
          dbo:occupation dbo:Musician .

  FILTER(?pacely = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    # Cece Bell's birth place
    dbr:Cecil_Alice_Bell dbo:birthPlace ?birthPlace .
    BIND(dbr:Cecil_Alice_Bell AS ?person)
  }
  
  UNION
  
  { 
    # Awardee of Vince Gilligan's award (e.g., Emmy Award for Outstanding Drama Series)
    dbr:Vince_Gilligan dbo:award dbr:Emmy_Award_for_Outstanding_Drama_Series .
    ?awardee dbo:recipientOfAward dbr:Emmy_Award_for_Outstanding_Drama_Series .
    ?awardee dbo:birthPlace ?birthPlace .
    BIND(?awardee AS ?person)
  }
  
  UNION
  
  { 
    # Glenn Youngkin's birth place
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
    BIND(dbr:Glenn_Youngkin AS ?person)
  }
}
```",5,5,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  { 
    dbr:Back_to_Work_(book) dbo:author ?author .
  }
  UNION
  {
    ?event a dbo:Event ;
           foaf:name ""Third Taiwan Strait Crisis""@en .
    OPTIONAL { ?event dbo:commander ?commander . }
    BIND(?commander AS ?author)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo WHERE {
  ?author a dbo:Person ;
          foaf:name ""Kent Allard""@en .
  OPTIONAL { ?author dbo:penName ?alterEgo . }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?gilligan a dbo:Person ;
              foaf:name ""Vince Gilligan""@en .
    ?gilligan dbo:birthPlace ?birthPlace .
    BIND(""Vince Gilligan"" AS ?personName)
  }
  
  UNION
  
  { 
    ?youngkin a dbo:Person ;
              foaf:name ""Glenn Youngkin""@en .
    ?youngkin dbo:birthPlace ?birthPlace .
    BIND(""Glenn Youngkin"" AS ?personName)
  }
}
```",3,4,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?descendant WHERE {
  # Alexander of Württemberg's lineage
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en .
  
  ?child1 dbo:child ?alexander .
  ?child2 dbo:child ?child1 .
  ?grandchild dbo:child ?child2 .

  # Archduchess Margarete Sophie's lineage
  ?margarete a dbo:Person ;
             foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  
  ?parentMargarete dbo:parent ?margarete .
  ?royalChild dbo:child ?parentMargarete .

  # Ensure the descendant is royalty
  FILTER (?grandchild = ?descendant || ?royalChild = ?descendant)
  FILTER EXISTS { ?descendant rdf:type dbo:Monarch . }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find Alberto Ruiz-Gallardón as a person and office holder/politician
  ?person a dbo:Person ;
          foaf:name ""Alberto Ruiz-Gallardón""@en .
  
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?person dbo:residence ?residence . }

  # Filter for roles related to the Central African Republic Civil War
  ?role a dbo:Role ;
        dbo:relatedEvent dbr:Central_African_Republic_Civil_War_(2012–present) .
  
  FILTER EXISTS {
    ?office dbo:role ?role .
    ?residence dbo:role ?role .
  }

  # Find the tenant of his office or residence
  OPTIONAL { ?office dbo:tenant ?tenant . }
  OPTIONAL { ?residence dbo:tenant ?tenant . }

  # Ensure he is an office holder and politician
  FILTER EXISTS {
    ?person dbo:occupation dbr:Office_holder ;
            dbo:occupation dbr:Politician .
  }
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCharlesMartel ?grandchildOfBelaIV ?spouseOfCharlesII WHERE {
  # Find the parent of Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .

  # Find a child of Béla IV who is royalty, and then find that child's own child
  dbr:Béla_IV_of_Hungary dbo:child ?childOfBelaIV .
  FILTER(?childOfBelaIV a dbo:Royalty) .
  OPTIONAL { ?childOfBelaIV dbo:child ?grandchildOfBelaIV } .

  # Find the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ekaterina Zaharieva""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:workType dbo:TelevisionShow .
  
  ?movie dbo:author ?person .
  
  ?person rdf:type dbo:Artist, dbo:MusicalArtist .
  
  OPTIONAL { ?person dbo:dateOfDeath ?deathDate . }
  
  FILTER (?deathDate <= ""2020-06-18""^^xsd:date)
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut of Pyakaung""@en .
  
  ?minHlaHtut dbo:parent ?parent .

  ?parent dbo:child ?childOfParent .
}
```",2,2,3,2,1,3,3,71,5,0,0,1.0,1.0,1.0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?warMilitaryForce ?bayneMilitaryForce WHERE {
  # Find the commander of the 30th Regiment in a war
  dbr:30th_Cambridgeshire_Regiment_of_Foot dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict ;
      dbo:commander ?commander .

  # Identify the military force involved in that war
  ?warMilitaryForce dbo:participatedIn ?war .

  # Find the military force associated with William Bayne at the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_1805 dbo:participatedIn ?bayneWar .
  ?bayneMilitaryForce dbo:participatedIn ?bayneWar ;
                     foaf:name ""William Bayne""@en .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Cynthia Morgan""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?aimarTeam ?agüeroPlayer ?athlete WHERE {
  # Find the team of Pablo Aimar
  dbr:Pablo_Aimar dbo:team ?aimarTeam .

  # Find players in the same team as Sergio Agüero
  ?agüero a dbo:Person ;
          foaf:name ""Sergio Agüero""@en .
  OPTIONAL { ?agüero dbo:playsFor ?teamAgüero . }
  OPTIONAL {
    ?player a dbo:Person ;
            dbo:playsFor ?teamAgüero .
    FILTER(?player != ?agüero)
    BIND(?player AS ?agüeroPlayer)
  }

  # Find the athlete born on 1955-02-22
  ?athlete a dbo:Person ;
           foaf:name ?name ;
           dbo:birthDate ""1955-02-22""^^xsd:date .
  FILTER EXISTS { ?athlete dbo:occupation dbr:Athlete . }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfBaedaMaryam1 ?childOfRoyalParent WHERE {
  # Find Baeda Maryam I and his father
  ?baedaMaryam1 a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .
  OPTIONAL { ?baedaMaryam1 dbo:father ?fatherOfBaedaMaryam1 . }

  # Find the commander in Siege of Mukha who is royalty
  ?siege dbr:Siege_of_Mukha ;
         dbo:commander ?commander .
  FILTER(?commander != [] && (EXISTS { ?commander a dbo:Monarch } || EXISTS { ?commander a dbo:Noble }))

  # Find the parent of this commander who is royalty
  OPTIONAL { ?commander dbo:parent ?royalParent . }
  FILTER(EXISTS { ?royalParent a dbo:Monarch } || EXISTS { ?royalParent a dbo:Noble })

  # Find the child of this royal parent
  OPTIONAL { ?royalParent dbo:child ?childOfRoyalParent . }

  # Ensure we are linking the correct entities
  FILTER(?fatherOfBaedaMaryam1 != [] && ?childOfRoyalParent != [])
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?writer WHERE {
  dbr:Aleksandr_Filimonov dbo:author ?work .
  ?work dbo:author ?writer .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Reprulse dbo:commander ?commander .
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Jean Baptist, Comte d'Arco in the context of Russo-Polish War
  dbr:Russo-Polish_War_1654–1667 dbo:commander ?jeanBaptist .
  
  # Identify the successor who is a politician and office holder
  ?jeanBaptist dbo:successor ?successor .
  ?successor a dbo:Politician ;
             dbo:officeHolder true .

  # Find the commander in both a television show and societal event
  OPTIONAL { ?commander dbo:relatedTVShow ?tvShow . }
  OPTIONAL { ?commander dbo:societalEvent ?societalEvent . }

  FILTER(?jeanBaptist = dbr:Jean_Baptiste,_Comte_d'Arco)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find Mary Elphinstone and her parent(s)
  ?mary a dbo:Person ;
        foaf:name ""Mary Elphinstone, Lady Elphinstone""@en .
  
  OPTIONAL { ?mary dbo:parent ?parent . }
  
  # Find William Gayner's birthplace
  ?william a dbo:Person ;
           foaf:name ""William Gayner""@en .
  
  ?william dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region, dbo:Country .

  # Match parent of Mary Elphinstone with someone native to William Gayner's birthplace
  OPTIONAL { ?parent dbo:nativePlace ?birthPlace . }
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?election a dbo:Election ;
            dbo:electedOffice ?office .
  
  ?leader dbo:leaderOfElection ?election .
  
  FILTER(STRSTARTS(LCASE(?election), ""2009 galician regional election""))
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Nicholas_II_of_Russia a dbo:Monarch ;
                             dbo:ruledBy ?country .
  FILTER(?country instanceof dbo:Country)
}
```",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenant WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Ruiz-Gallardón""@en .
  
  ?person dbo:residence ?residence .

  ?residence dbo:tenant ?tenant .
}
```",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Birmingham .
  
  OPTIONAL { 
    ?song dbo:creator ?person .
    FILTER(STR(?song) = ""Boom Shack-A-Lak"")
  }
}
```",2,2,3,1,2,3,2,20,1,1530,0,0.0006531678641410843,1.0,0.0013054830287206266
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rod Argent""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?person WHERE {
  ?uncleMurda a dbo:MusicalArtist ;
              foaf:name ""Uncle Murda""@en .
  ?uncleMurda dbo:bandMember ?bandMember .

  ?nativePlace a dbo:Place ;
               dbo:country ""Florida""@en .
  ?person a dbo:MusicalArtist ;
          foaf:name ?birthName .
  ?person dbo:nativePlace ?nativePlace .
  FILTER(?birthName = ?nativePlaceLabel)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  # Part for Quincy Adams Gillmore
  dbr:Quincy_Adams_Gillmore dbo:award ?gillmoreAward .
  ?gillmoreAward dbo:awardee dbr:Quincy_Adams_Gillmore .
  OPTIONAL { ?gillmoreAward dbo:force ?force . }

  # Part for Medal of Honor awardee
  ?medalOfHonorAwardee dbo:award dbr:Medal_of_Honor .
  OPTIONAL { ?medalOfHonorAwardee dbo:participatedInWar ?war . }
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Grant Esterhuysen""@en .
  
  OPTIONAL { ?person foaf:alias ""Grant Heslov""@en . } # Alias for professional name
  
  ?person dbo:actor ?movie .
}
```",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Lahore .
}
```",1,1,2,1,1,2,2,9,881,0,0,1.0,1.0,1.0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?person a dbo:Person ;
          foaf:name ""The Triple X's""@en .
  
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?commander .

  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer (SAMPLE(?profession) AS ?professionalRole)
WHERE {
  # Producers of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer1 .
  
  # Producers of The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer2 .

  # Find common producer
  FILTER(?producer1 = ?producer2)

  # Assign the common producer to a variable
  BIND(?producer1 AS ?producer)

  # Get professional role of the producer
  OPTIONAL { ?producer foaf:profession ?profession . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceBirthPlace ?governorBirthPlace WHERE {
  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:birthPlace ?vinceBirthPlace .

  # Paulus Powell's birthplace as a region and administrative region
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
  ?paulusBirthPlace a dbo:Region ;
                    a dbo:AdministrativeRegion .

  # Governor of the region who is a politician
  ?governor a dbo:Politician ;
            dbo:governs ?paulusBirthPlace .
  
  # Birthplace of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Joe_Biden dbo:work ?work .
  
  ?work a dbo:Work ;
        a dbo:WrittenWork ;
        rdf:type dbo:Book .

  OPTIONAL { ?work dbo:country dbr:United_States . }
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?soccerPlayer WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Polio dbo:birthDate ?birthdate .

  # Find athletes born on the same date as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?birthdate .

  # Find films associated with Manuel Huerga
  dbr:Manuel_Huerga dbo:film ?film .
  
  # Find actors in those films who are also soccer players
  ?actor a dbo:Actor ;
         dbo:actedIn ?film .
  ?soccerPlayer a dbo:SoccerPlayer ;
                foaf:name ?actorName .
  FILTER(?actor = ?soccerPlayer)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?thunderbirds ?curranArtist ?wilsonBand WHERE {
  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalGroup ;
                               foaf:name ""The Fabulous Thunderbirds""@en .

  # Nicholas Michael Curran as a musical artist
  ?curran a dbo:Person ;
          foaf:name ""Nicholas Michael Curran""@en .
  OPTIONAL { ?curran dbo:musicalArtist ?curranArtist . }

  # Kim Wilson's band, which is The Fabulous Thunderbirds
  dbr:Kim_Wilson a dbo:Person ;
                 foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?wilsonBand a dbo:MusicalGroup ;
                        foaf:name ""The Fabulous Thunderbirds""@en ;
                        dbo:member dbr:Kim_Wilson . }
  
  # Linking Kim Wilson's band to The Fabulous Thunderbirds
  FILTER(?thunderbirds = ?wilsonBand)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse ?producer WHERE {
  # Find Linda Sue Cobb by birth name
  ?linda a dbo:Person ;
         foaf:name ""Linda Sue Cobb""@en ;
         dbo:birthName ""Linda Sue Cobb"" .

  # Get her spouse
  OPTIONAL { ?linda dbo:spouse ?spouse . }

  # Check if the spouse is associated with any movies and find their producer
  OPTIONAL {
    ?movie dbo:producer ?producer .
    ?spouse dbo:film ?movie .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?officeRajoy ?officeMaura WHERE {
  ?marianoRajoy a dbo:Person ;
                foaf:name ""Mariano Rajoy""@en .
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .

  ?marianoRajoy dbo:office ?officeRajoy .
  ?miguelMaura dbo:office ?officeMaura .

  OPTIONAL {
    ?office dbr:Madrid dbo:tenant .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?professionOfRobert ?producerProfession WHERE {
  # Find Robert Lamar Thompson and his band membership and profession
  ?robert a dbo:Person ;
          foaf:name ""Robert Lamar Thompson""@en .
  OPTIONAL { ?robert dbo:musicalArtist ?musicalArtist . }
  OPTIONAL { ?musicalArtist dbo:bandMember ?band . }
  OPTIONAL { ?robert dbo:profession ?professionOfRobert . }

  # Find the producer of Coke Studio Philippines and their profession
  ?cokeStudio a dbo:TelevisionShow ;
              foaf:name ""Coke_Studio_Philippines""@en .
  ?producer a dbo:Person ;
            dbo:producedBy ?cokeStudio .
  OPTIONAL { ?producer dbo:profession ?producerProfession . }

  # Match the profession of Robert Lamar Thompson with that of the producer
  FILTER(?professionOfRobert = ?producerProfession)
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Princess Sara bint Faisal""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musician WHERE {
  ?musician a dbo:MusicalArtist .
  OPTIONAL { ?musician foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,7072,118373,491,0.05637530391805173,0.9350786724844639,0.10633946830265847
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alterEgo ?childOfParentRoyalty ?childOfCommanderRoyalty WHERE {
  # Find The Shadow and its alter ego
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  OPTIONAL { ?shadow dbo:alterEgo ?alterEgo . }

  # Identify the parent who is royalty and their child
  ?parent a dbo:Person ;
          dbo:title ?royaltyTitle .
  FILTER EXISTS { ?royaltyTitle rdfs:label ?titleLabel }
  FILTER(CONTAINS(LCASE(?titleLabel), ""king"") || CONTAINS(LCASE(?titleLabel), ""queen""))
  
  OPTIONAL { ?child dbo:parent ?parent . }

  # Identify the commander in the Siege of Mukha who is royalty and their child
  ?commander a dbo:Person ;
             dbo:participatedInEvent ?siege .
  ?siege rdfs:label ""Siege of Mukha""@en .

  OPTIONAL { ?commanderTitle dbo:title ?royaltyCommanderTitle }
  FILTER EXISTS { ?royaltyCommanderTitle rdfs:label ?commanderTitleLabel }
  FILTER(CONTAINS(LCASE(?commanderTitleLabel), ""king"") || CONTAINS(LCASE(?commanderTitleLabel), ""queen""))

  OPTIONAL { ?childOfCommander dbo:parent ?commander . }

  # Return the alter ego and children of royalty
  FILTER(?alterEgo = ?childOfParentRoyalty)
  FILTER(?alterEgo = ?childOfCommanderRoyalty)
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI WHERE {
  # Find the child of Dawit I
  dbr:Dawit_I dbo:child ?childOfDawitI .

  # Find the child of Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:child ?childOfBaedaMaryamI .

  # Find the father (parent) of this child, then their father (grandfather)
  ?childOfBaedaMaryamI dbo:parent ?fatherOfChild .
  ?fatherOfChild dbo:parent ?grandfather .

  # Ensure grandfather is both a monarch and an office holder
  FILTER (?grandfather = ?childOfDawitI) .
  ?grandfather rdf:type dbo:Monarch ;
               rdf:type dbo:OfficeHolder .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria,_Queen_of_Portugal a dbo:Person ;
                                             dbo:child ?commanderChild .

  # Identify the commander in Siege of Padua and his child (Catherine)
  ?commander a dbo:Person ;
             dbo:child ?commanderChild ;
             dbo:participatedIn dbr:Siege_of_Padua .
  
  FILTER(?commanderChild = dbr:Catherine_of_Austria,_Queen_of_Portugal)

  # Find the father of Catherine
  ?father a dbo:Person ;
          dbo:parent ?catherine .

  FILTER(?catherine = dbr:Catherine_of_Austria,_Queen_of_Portugal)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete WHERE {
  # Get the birthday of Marty Pollio
  dbr:Marty_Polio dbo:birthday ?birthday .

  # Find athletes born on that date
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?birthDate .
  
  FILTER(?birthDate = ?birthday)

  # Ensure they are also players, including Sergio Agüero
  OPTIONAL { ?athlete dbo:playerOfTeam dbr:Sergio_Ag%C3%BCero }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor WHERE {
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  OPTIONAL { ?sawMinPhyu dbo:spouse ?spouse . }
  
  OPTIONAL { ?child dbo:parent ?spouse . }
  
  FILTER EXISTS { ?child dbo:title ?title . 
                 FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  OPTIONAL { ?predecessor dbo:successor ?child . }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeRegion ?bandMember WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro a dbo:MusicalGroup ;
        foaf:name ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  OPTIONAL { ?coro dbo:award ?award . }
  
  # Find the native region of the award, which is also an American state and settlement
  ?award dbo:nativeCountry ?nativeRegion ;
         a dbo:Award .
  
  FILTER(?nativeRegion a dbo:State )
  FILTER(?nativeRegion a dbo:Settlement)
  FILTER(CONTAINS(LCASE(STR(?nativeRegion)), ""united states""))

  # Find a band member associated with Bobby Shmurda
  ?bobbyShmurda a dbo:MusicalArtist ;
                foaf:name ""Bobby Shmurda""@en .
  
  OPTIONAL { ?bandMember dbo:memberOfBand ?bobbyShmurda . }
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# No valid SPARQL query can be generated due to incomplete question.
```",1,1,2,1,1,3,3,71,0,0,39790,0,0.0,0
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalWork WHERE {
  ?person a dbo:Person ;
          foaf:name ""Steven Kapur""@en .
  
  ?person dbo:work ?musicalWork .
  FILTER(?musicalWork a dbo:MusicalWork)
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?managerOfLetsch ?managerOfPlayer ?nativeCountry WHERE {
  # Thomas Letsch's manager during the 2007–08 VfL Bochum season
  ?teamSeason a dbo:SoccerClubSeason ;
              dbo:season ""2007–08""@en .
  ?teamSeason dbo:sportTeam dbr:VfL_Bochum .
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  OPTIONAL { ?letsch dbo:manager ?managerOfLetsch . }
  
  # Manager of the player in the same team season
  ?player a dbo:SoccerPlayer ;
          dbo:sportTeam dbr:VfL_Bochum ;
          dbo:season ""2007–08""@en .
  OPTIONAL { ?player dbo:manager ?managerOfPlayer . }

  # Theodor Heuss's native country
  ?heuss a dbo:Person ;
         foaf:name ""Theodor Heuss""@en .
  OPTIONAL { ?heuss foaf:nationality ?nativeCountry . }
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName ?birthPlace WHERE {
  { 
    dbr:Ekaterina_Zaharieva a dbo:Person ;
                            foaf:name ?personName .
    OPTIONAL { dbr:Ekaterina_Zaharieva dbo:birthPlace ?birthPlace . }
  } UNION {
    dbr:Reneta_Kamberova a dbo:Person ;
                         foaf:name ?personName .
    OPTIONAL { dbr:Reneta_Kamberova dbo:birthPlace ?birthPlace . }
  }
}
```",2,2,3,1,2,3,2,20,1,4,0,0.2,1.0,0.33333333333333337
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  # Find the leader of National Party of Greece
  ?leader a dbo:Person ;
          dbo:partyLeader dbr:National_Party_of_Greece .

  # Wars involving this leader
  ?war dbo:participant ?leader .

  # Antonios Varthalitis's death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Return wars involving both entities
  FILTER(?war = ?warInvolvingLeader)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?host WHERE {
  ?rainer a dbo:Person ;
          foaf:name ""Rainer Weiss""@en .
  
  ?award dbo:recipient ?rainer ;
         dbo:host ?host .

  FILTER(?host != ?rainer)

  OPTIONAL { ?host a dbo:EducationalOrganization }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Francis_I,_Duke_of_Lorraine dbo:parent ?parent .
  
  OPTIONAL { 
    ?renée a dbo:Person ;
           foaf:name ""Renée of Bourbon""@en .
    ?renée dbo:spouse ?parent .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Yeshaq I and his royal parent
  dbr:Yeshaq_I dbo:parent ?royalParent .
  
  # Ensure the parent is royalty
  ?royalParent a dbo:Monarch ;
               dbo:spouseOrPartner ?mother .

  # Find the child of this royal parent
  ?royalParent dbo:child ?child .

  # Reference to Baeda Maryam I and his father
  dbr:Baeda_Maryam_I dbo:father ?father .
  
  # Ensure the child is related to Baeda Maryam I's father
  FILTER(?child = ?father)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?campaign .
  ?campaign a dbo:MilitaryConflict ;
            foaf:name ""French campaign in Egypt and Syria""@en .

  OPTIONAL { dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryForce ?militaryForce . }
  
  FILTER(?campaign = dbr:French_campaign_in_Egypt_and_Syria)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","```sparql
# Hypothetical query structure (requires specific movie and profession)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Movie_Title dbo:starring ?actor .
  ?actor a dbo:Actor ;
         dbo:profession ""Specific_Profession""@en .
}
```",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?martyTeam ?marceloTeam WHERE {
  # Find Marty Pollio's birthdate and associated athlete team
  ?marty a dbo:Person ;
         foaf:name ""Marty Pollio""@en .
  ?marty dbo:birthday ?martyBirthday .

  ?athlete a dbo:Athlete ;
           dbo:birthday ?martyBirthday .
  OPTIONAL { ?athlete dbo:team ?martyTeam . }

  # Find Marcelo Sarmiento's birthdate and associated soccer player/manager team
  ?marcelo a dbo:Person ;
           foaf:name ""Marcelo Sarmiento""@en .
  ?marcelo dbo:birthday ?marceloBirthday .

  ?soccerPerson a dbo:SoccerPlayer, dbo:SoccerManager ;
                dbo:birthday ?marceloBirthday .
  OPTIONAL { ?soccerPerson dbo:team ?marceloTeam . }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenantOfSantiago ?tenantOfResidence WHERE {
  # Find tenant of Santiago de Compostela
  ?santiago a dbo:Person ;
            foaf:name ""Santiago de Compostela""@en .
  OPTIONAL { ?santiago dbo:residence ?tenantOfSantiago . }

  # Find Álvaro Quirós and his residence's tenant
  ?alvaro a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  ?alvaro dbo:residence ?residence .

  OPTIONAL {
    ?residence dbo:country ?country .
    ?tenantOfResidence dbo:resident ?residence .
  }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:givenName ""Cynthia"" ;
          foaf:surname ""Morgan"" .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:Person ;
          dbo:honour ""Knight Commander of the Order of the Bath"" .
  
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?person ;
            dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .

  ?person dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyRoyBarreras ?entityInCountryDanielGalán ?partyGustavoPetro WHERE {
  # Roy Barreras' party
  OPTIONAL { 
    ?royBarreras a dbo:Person ;
                 foaf:name ""Roy Barreras""@en .
    ?royBarreras dbo:party ?partyRoyBarreras .
  }

  # Entity in the country of Daniel Elahi Galán
  OPTIONAL {
    ?danielGalán a dbo:Person ;
                 foaf:name ""Daniel Elahi Galán""@en .
    ?danielGalán dbo:nationality ?countryGalán .
    ?entityInCountryDanielGalán dbo:location ?countryGalán .
  }

  # Gustavo Petro's party
  OPTIONAL {
    ?gustavoPetro a dbo:Person ;
                  foaf:name ""Gustavo Petro""@en .
    ?gustavoPetro dbo:party ?partyGustavoPetro .
  }
}
```",4,4,5,2,3,2,3,28,1,9,0,0.1,1.0,0.18181818181818182
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  # Find the person who died on 1850-08-05
  ?person dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Find Quincy Adams Gillmore's force
  dbr:Quincy_Adams_Gillmore dbo:militaryForce ?force .

  # Identify the war related to the Medal of Honor and link it with the awardee
  ?medalOfHonorAwardee dbo:award ""Medal_of_Honor"" ;
                      dbo:relatedWar ?war .
  
  # Link the force to the war
  ?force dbo:participatedIn ?war .

  # Ensure the person is linked through these relationships
  FILTER(?person = ?medalOfHonorAwardee)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Aladdin_(1958_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?awardee WHERE {
  dbr:Royal_Swedish_Academy_of_Sciences dbo:awardEvent ?show .
  ?show dbo:category dbr:Nobel_Prize_in_Physics .
  
  ?show dbo:recipient ?awardee .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doug Beattie""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist WHERE {
  ?cynthia a dbo:Person ;
           dbo:birthName ""Cynthia Morgan""@en .
  
  ?actor a dbo:Actor ;
         foaf:name ""The Campus Queen""@en .

  FILTER(?cynthia = ?actor)

  OPTIONAL { ?cynthia dbo:musicalArtist ?musicalArtist . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  {
    dbr:Shelby_Oaks dbo:actor ?actor .
  }
  UNION
  {
    dbr:ATL_(film) dbo:actor ?actor .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild ?photographerParent WHERE {
  # Part 1: Parent of the child of Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  ?child dbo:parent ?spouse .

  ?parentOfChild a dbo:Person ;
                 foaf:name ?spouseName .

  FILTER(?spouse = ?parentOfChild)

  # Part 2: Parent of the professional in Photographer
  ?photographer a dbo:Photographer .
  
  ?photographerParent dbo:child ?photographer ;
                      foaf:name ?photographerName .

  OPTIONAL { ?parentOfChild foaf:name ?spouseName }
  OPTIONAL { ?photographerParent foaf:name ?photographerName }

}
```",5,5,6,3,2,3,3,71,1,4,1,0.2,0.5,0.28571428571428575
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Find the child of this parent (i.e., grandchild of Archduke)
  ?parentChild a dbo:Person ;
               dbo:parent ?parent .
  
  # This person must be a commander in a war
  ?war a dbo:SocietalEvent, dbo:Event ;
       dbo:commander ?parentChild .

  # The war is also associated with a television show
  ?war dbo:depicts ?tvShow .

  # Find the father of this child (i.e., parent's sibling or cousin)
  ?parentChild dbo:father ?father .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalOrganization ;
                                      dbo:country dbr:Spain .
  
  OPTIONAL { 
    dbr:Spanish_Socialist_Workers'_Party dbo:headquarters ?tenant .
  }
}
```",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  dbr:Peter_IV_of_Aragon foaf:name ?realName .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resource WHERE {
  ?resource rdfs:label ""Order of the Medjidie""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war WHERE {
  ?gillmore a dbo:Person ;
            foaf:name ""Quincy Adams Gillmore""@en .
  
  ?award dbo:recipient ?gillmore ;
         dbo:awardingBody dbr:United_States_Congress .

  ?award dbo:relatedWar ?war .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Find Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:parent ?father .

  # Find the child of this person who is a commander in some war
  ?father dbo:child ?commander .
  
  # Link the commander to an event related to the Algerian War
  ?commander dbo:commanderOf ?militaryForce ;
             dbo:participatedIn ?event .

  # Ensure the event is linked to the Algerian War
  ?algerianWar dbr:Algerian_War .
  ?event dbo:relatedTo ?algerianWar .

  # Find societal events and television shows related to this military force
  ?societalEvent a dbo:Society ;
                 dbo:relatedTo ?militaryForce .
  
  ?tvShow a dbo:TelevisionShow ;
          dbo:relatedTo ?militaryForce .

  # Ensure the commander is linked to both types of events
  FILTER(?commander = ?child)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName ?associatedArtist WHERE {
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
                               foaf:name ?realName .

  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedBandMember ?artist .
    ?artist a dbo:MusicalArtist ;
            foaf:name ?associatedArtist .
  }
}
```",5,6,6,3,2,3,3,71,0,1,1,0.0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Elvira of Castile, Queen of Sicily's child
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?child .

  # This child is the father of William II of Sicily
  ?child dbo:parent dbr:William_II_of_Sicily .

  # This child is also a child of Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?child .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfBaedaMaryamI ?childOfRoyalParent WHERE {
  # Find Baeda Maryam I's father
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .
  ?baedaMaryamI dbo:father ?fatherOfBaedaMaryamI .

  # Find Yeshaq I's royal parent and their child
  ?yeshaqI a dbo:Person ;
           foaf:name ""Yeshaq I""@en .
  ?royalParent a dbo:Royal ;
               dbo:child ?yeshaqI .
  ?royalParent dbo:child ?childOfRoyalParent .

  # Reference to Lamont Cranston
  OPTIONAL { ?lamontCranston a dbo:Person ;
                            foaf:name ""Lamont Cranston""@en }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?awardAwardee WHERE {
  # Part 1: Henry Clay Lewis' birthplace that is an American settlement
  ?henry a dbo:Person ;
         foaf:name ""Henry Clay Lewis""@en .
  ?henry dbo:birthPlace ?birthPlace .
  
  FILTER(?birthPlace a dbo:Settlement)
  ?birthPlace dbo:country dbr:United_States .

  # Part 2: Awardee of an award given by the United States Congress
  ?award a dbo:Award ;
         foaf:name ?awardName .
  ?congressAward a dbo:CongressionalAwards ;
                 foaf:name ?awardName .
  ?congressAward dbo:awardee ?awardAwardee .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthName ""Bob Thompson""@en .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  dbr:Nat_Levine a dbo:Person ;
                 dbo:producer ?film .
  ?film a dbo:Film .
}
```",1,2,2,1,1,3,3,71,0,0,96,0,0.0,0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person rdf:type dbo:OfficeHolder ;
          rdf:type dbo:Politician ;
          dbo:birthName ""Bruno Daniel Marie Paul Retailleau""@en .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find films associated with Nat Levine
  ?film dbo:producer ?natLevine .
  
  # Identify Nat Levine's DBpedia resource by name
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .

  # Find actors in the film
  ?actor dbo:actedIn ?film .
  ?actor a dbo:Actor .

  # Identify Harriette Arlene Lake's DBpedia resource by birth name
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake""@en .

  # Find the spouse of any actor in these films
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the actor of ""1,000 Dollars a Minute""
  ?actor dbo:film dbr:_1000_Dollars_a_Minute ;
         foaf:name ?actorName .

  # Find the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  # Identify Tisha Sterling's parent and their birth name
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tisha ;
          foaf:birthday ?birthDate ;
          foaf:name ?birthName .

  # Match the spouse with the person having the same birth name as Tisha's parent
  FILTER(?spouse = ?personWithSameBirthName)

  OPTIONAL { ?personWithSameBirthName foaf:name ?birthName }

  # Ensure this individual is a member of the Republican Party (United States)
  ?partyMember dbo:member ?spouse ;
               dbo:politicalParty dbr:Republican_Party_(United_States) .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativePlace WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro a dbo:MusicalGroup ;
        foaf:name ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  OPTIONAL { ?coro dbo:award ?award . }
  
  # Find the native place of the award, which is also a region, American state, and settlement
  ?award dbo:nativePlace ?nativePlace ;
         a dbo:Award .

  FILTER(?nativePlace != null)
  
  # Ensure the native place is an American state and settlement
  ?nativePlace dbo:stateOrProvince ?state .
  ?nativePlace dbo:settlementType ?settlementType .
  
  FILTER((?state = ""United States of America"") && (?settlementType IN (""State"", ""Settlement"")))

  # Find Bobby Shmurda's birth name
  ?bobby a dbo:Person ;
         foaf:name ""Bobby Shmurda""@en ;
         foaf:nick ?birthName .
  
  FILTER(?birthName != null)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Charles Martel of Anjou""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the father of Cecilia Renata of Austria
  dbr:Cecilia_Renata_of_Austria dbo:parent ?fatherOfCecilia .
  
  # The same person is also the parent of another child (X)
  ?fatherOfCecilia dbo:child ?x .

  # X has a child who is the parent of Archduke Charles Joseph of Austria
  ?x dbo:child ?parentOfArchduke .
  ?parentOfArchduke dbo:parent dbr:Archduke_Charles_Joseph_of_Austria .

  # The query result should be the child of X, which is also the grandparent of Archduke Charles Joseph
  BIND(?x AS ?child)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Step 1: Identify Stephen V's predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # Step 2: Find Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfMartel .

  # Step 3: Ensure the predecessor is also the parent of Charles Martel
  FILTER(?predecessor = ?parentOfMartel)

  # Step 4: Find a child of this parent who is royalty
  ?child dbo:parent ?parentOfMartel ;
         a dbo:Royal .

  # Return the royal child
  BIND(?child AS ?royalChild)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en .
  OPTIONAL { ?person foaf:name ""Sam Concepcion""@en . }
  ?person dbo:band ?band .
  FILTER(BOUND(?band))
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:The_Live_Anthology dbo:creator ?writer .
  ?writer a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?siege a dbo:MilitaryConflict ;
         dbo:eventLocation dbr:Padua .
  
  ?commander dbo:commanded ?siege ;
             dbo:child ?child .

  ?child a dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity ?warEntity WHERE {
  # Yamaza Enjirō's birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  
  # Entity related to the birth place (e.g., city or region)
  ?birthPlaceEntity a dbo:City ;
                   dbo:name ?birthPlaceName .
  FILTER(?birthPlace = ?birthPlaceEntity)

  # Toyotomi Hidenaga's war
  dbr:Toyotomi_Hidenaga dbo:foughtInWar ?war .
  
  # Entity related to the war (e.g., battle or conflict)
  ?warEntity a dbo:Battle ;
             dbo:name ?warName .
  FILTER(?war = ?warEntity)
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?native WHERE {
  ?victor a dbo:Person ;
          foaf:name ""Victor Saville""@en .
  
  ?victor dbo:birthPlace ?birthPlace .

  ?native dbo:nativeOf ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,1531,0,0.0,0
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfMary ?parentOfChild WHERE {
  # Find Hon. Mary Frances Bowes-Lyon and her parent
  ?mary a dbo:Person ;
        foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .
  
  OPTIONAL { ?mary dbo:parent ?parentOfMary . }
  
  # Find Claude Bowes-Lyon, his child, and that child's parent
  dbr:Claude_Bowes-Lyon_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  OPTIONAL { ?child dbo:parent ?parentOfChild . }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bobby Shmurda""@en .
  
  OPTIONAL { 
    ?person foaf:givenName ?birthName .
    FILTER(?birthName = ""Rakim"" || ?birthName = ""Shawn"") # Assuming known birth names
  }
  
  OPTIONAL {
    ?band a dbo:Band ;
          dbo:name ""Uncle Murda""@en .
    ?membership dbo:member ?person ;
                dbo:group ?band .
  }

  OPTIONAL {
    ?place a dbo:Place ;
           foaf:name ""Florida""@en .
    ?person dbo:nativePlace ?place .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:successor ?successorSeason .

  # Ensure the successor is a football league season, sports team season, and sports season
  ?successorSeason a dbo:FootballLeagueSeason ;
                   a dbo:SportsTeamSeason ;
                   a dbo:SportsSeason .

  # Find the club associated with this successor season
  ?successorSeason dbo:team ?club .
  
  # Ensure the club is a sports club, organization, and soccer club
  ?club a dbo:SportsClub ;
        a dbo:Organization ;
        a dbo:SoccerClub .

  # Find players associated with this club in the successor season
  ?player dbo:playsFor ?club ;
          a dbo:Person .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?deathPlace WHERE {
  VALUES ?personName { ""Reed Howes"" ""Carolyn Jones"" ""Sal Mineo"" }
  
  ?person a dbo:Person ;
          foaf:name ?personName .
  
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:SBV_Vitesse_2020–21_season dbo:manager ?manager .
  ?manager dbo:nationality dbr:West_Germany .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  ?nothingToGein a dbo:Band ;
                 foaf:name ""Nothing to Gein""@en .
  
  ?nothingToGein dbo:producer ?producer .

  ?producer a (dbo:Organization|dbo:Group) .

  OPTIONAL { ?producer dbo:member ?bandMember . }
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joey B""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Eton_College .
  
  ?child a dbo:Politician ;
         dbo:parent ?alumnus ;
         dbo:parent ?awardee .

  ?awardee dbo:title ""Commander of the Royal Victorian Order"" ;
          dbo:parent ?child .

  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en ;
          dbo:parent ?child .

  ?father a dbo:Person ;
          dbo:child ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Bill_Clinton dbo:author ?work .
  ?work a dbo:WrittenWork ;
        dbo:book ?isBook .
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?author WHERE {
  ?person a dbo:Person ;
          dbo:residence dbr:Chappaqua,_New_York ;
          dbo:occupation [a dbo:Politician ; dbo:officeHolder true] .
  
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?person ;
       dbo:nation dbr:United_States_Navy .

  ?work dbo:author ?person ;
        a dbo:Book, dbo:WrittenWork .

  ?person foaf:name ?authorName .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?nationality ?birthPlace WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  
  ?awardee dbo:recipientOf ?award ;
           dbo:nationality dbr:Japan .

  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
  
  BIND(dbr:Japan AS ?nationality)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace WHERE {
  dbr:Akaler_Shandhaney dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,10,4,0,0.7142857142857143,1.0,0.8333333333333333
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:residence dbr:Sofia .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,9,27,5,0.25,0.6428571428571429,0.36
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  {
    ?governor a dbo:Politician ;
              dbo:governmentRole dbr:Governor_of_Virginia ;
              foaf:name ?name .
    ?governor dbo:birthPlace ?birthPlace .
  }

  UNION

  { 
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",4,5,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfCharlesMartel ?spouseOfGrandfather WHERE {
  # Find the parent of Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:child ?parentOfCharlesMartel .

  # Find Philip, Despot of Romania's parent
  dbr:Philip_Despot_of_Romania dbo:child ?philipParent .
  
  # Find the father of Philip's parent (grandfather)
  ?philipParent dbo:parent ?grandfather .

  # Ensure the grandfather is royalty and find his spouse
  FILTER(?grandfather a dbo:RoyalPerson)
  OPTIONAL { ?grandfather dbo:spouse ?spouseOfGrandfather }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  # Find the Gillmore Medal and its awardees
  dbr:Gillmore_Medal dbo:awardee ?person .
  
  # Check if Amasa Tracy is an awardee
  OPTIONAL { ?person foaf:name ""Amasa Tracy""@en }
  
  # Get the military force of the awardee
  ?person dbo:militaryForce ?force .

  # Find wars involving Amasa Tracy
  dbr:Amasa_Tracy dbo:participatedInWar ?war .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Thomas_Letsch a dbo:Person ;
                    dbo:manager ?team .
}
```",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfProfessional ?parentOfChild WHERE {
  # Find Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?eugeneProfession .

  # Find a professional with the same profession as Eugène Cattin and get their parent
  ?professional a dbo:Person ;
                dbo:profession ?eugeneProfession .
  ?parentOfProfessional dbo:child ?professional .

  # Find Allan Arbus's child and get that child's parent
  dbr:Allan_Arbus dbo:child ?allanChild .
  ?parentOfChild dbo:child ?allanChild .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfRogerII ?grandChildOfAlfonsoVI ?fatherOfRoyalChild WHERE {
  # Child of Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?childOfRogerII .

  # Grandchild of Alfonso VI of León and Castile
  OPTIONAL { 
    ?childOfAlfonsoVI dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
    ?grandChildOfAlfonsoVI dbo:parent ?childOfAlfonsoVI .
  }

  # Father of the child, that is royalty, of William I of Sicily
  OPTIONAL {
    ?royalChild dbo:parent ?fatherOfRoyalChild ;
                a dbo:Monarch .
    ?fatherOfRoyalChild dbo:child ?royalChild .
    ?royalChild dbo:parent dbr:William_I_of_Sicily .
  }
}
```",5,6,6,2,3,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entityName ?deathPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Reed Howes""@en .
    ?person dbo:deathPlace ?deathPlace .
    BIND(""Reed Howes"" AS ?entityName)
  }
  
  UNION
  
  {
    ?movie a dbo:Film ;
           foaf:name ""Color Me Dead""@en .
    ?movie dbo:starring ?actor .
    ?actor dbo:deathPlace ?deathPlace .
    ?actor foaf:name ?actorName .
    BIND(?actorName AS ?entityName)
  }
}
```",3,3,4,2,2,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?luiza a dbo:Person ;
         foaf:name ""Luiza Erundina""@en .
  
  ?luiza dbo:almaMater ?almaMater .

  FILTER(?almaMater != null)

  OPTIONAL { ?almaMater rdf:type dbo:University }
  OPTIONAL { ?almaMater rdf:type dbo:EducationalOrganization }

  FILTER((?almaMater rdf:type dbo:University) || (?almaMater rdf:type dbo:EducationalOrganization))
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:contributor ?artist .
  
  ?artist a dbo:MusicalArtist ;
          a dbo:Writer .
}
```",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify the commander of the 2nd Dragoon Regiment (France) in a war that is also a societal event, an event, and a television show
  ?war dbo:societalEvent true ;
       dbo:event true ;
       dbo:televisionShow true .
  
  ?regiment dbr:2nd_Dragoon_Regiment_(France) ;
            dbo:commander ?commander .

  # Ensure the commander is involved in this war
  ?regiment dbo:participatedInWar ?war .

  # The commander must be a child of Ferdinand II, Holy Roman Emperor
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?commander .

  # The commander must be the father of Eleonore of Austria, Queen of Poland
  ?commander dbo:parent dbr:Eleonore_of_Austria,_Queen_of_Poland .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  ?diseaseEvent a dbo:Disease ;
                dbo:societalEvent ?societalEvent .
  
  ?war a dbo:MilitaryConflict ;
       dbo:relatedDiseaseOrSocietalEvent ?diseaseEvent .

  ?commander dbo:commanderInWar ?war ;
             dbo:nationality dbr:United_States_Navy .

  ?author foaf:name ""Author of An Invitation to the White House""@en .
  
  ?author dbo:spouse ?spouse .
  
  ?spouse a dbo:Politician ;
          dbo:officeHolder ?office .

  FILTER(?commander = ?spouse)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantOfResidence ?tenantOfOffice ?tenantOfAdministration WHERE {
  # Álvaro Quirós's residence
  OPTIONAL {
    ?residence dbo:country ?country ;
               dbo:resident ?tenantOfResidence .
    ?person a dbo:Person ;
            foaf:name ""Álvaro Quirós""@en .
    FILTER(?tenantOfResidence = ?person)
  }

  # Alberto Núñez Feijóo's office
  OPTIONAL {
    ?office dbo:employee ?tenantOfOffice .
    ?feijoo a dbo:Person ;
            foaf:name ""Alberto Núñez Feijóo""@en .
    FILTER(?tenantOfOffice = ?feijoo)
  }

  # Administration related to PSOE
  OPTIONAL {
    ?administration dbo:member ?tenantOfAdministration ;
                    dbo:country dbr:Spain .
    ?psoe a dbo:PoliticalParty ;
          foaf:name ""Spanish Socialist Workers' Party""@en .
    FILTER(?administration = ?psoe)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  dbr:Knight_Commander_of_the_Order_of_the_Bath dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  dbr:William_II_of_Sicily dbo:father ?individual .
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?individual .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfMadrid ?office WHERE {
  # Find the tenant (likely an official residence) of Madrid
  ?residence a dbo:Residence ;
             dbo:location dbr:Madrid .
  
  OPTIONAL { ?residence dbo:resident ?tenantOfMadrid . }
  
  # Find the leader of the Conservative Republican Party who is a politician
  ?partyLeader a dbo:Politician ;
               dbo:leaderOf dbr:Conservative_Party_(Spain) .
  
  OPTIONAL { ?partyLeader dbo:office ?office . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard""@en ;
          dbo:nativePlace dbr:Florida .
  
  OPTIONAL { ?person dbo:birthName ""Ackquille Jean Pollard""@en . }
  
  ?bandMember dbo:member ?person .
  ?gs9Artist a dbo:MusicalArtist ;
             dbo:member ?bandMember .
  FILTER(STRSTARTS(LCASE(?gs9Artist), LCASE(""GS9"")))
  
  OPTIONAL { ?person a dbo:MusicalArtist . }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  dbr:Nat_Levine a dbo:Person ;
                 dbo:filmProduction ?film .
  
  ?film a dbo:Film .

  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,257,0,0.0,0
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Boom_Shack-A-Lak dbo:lyricist ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .
  ?parent dbo:nativePlace dbr:Middlesex .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfChild WHERE {
  # Archduke Charles Joseph of Austria
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharles .
  
  # Child of the parent of Archduke Charles Joseph of Austria
  ?childOfParent a dbo:Person ;
                 dbo:parent ?parentOfCharles .

  # Father of that child
  ?fatherOfChild a dbo:Person ;
                 foaf:name ?nameFather ;
                 dbo:child ?childOfParent .
  
  FILTER EXISTS { ?person dbo:royalTitle ?title . }
  
  # Maria Anna of Bavaria (born 1574)
  dbr:Maria_Anna_of_Bavaria_(1574) dbo:parent ?parentOfMariaAnna .

  # Child of the parent of Maria Anna
  ?childOfParentMaria a dbo:Person ;
                      dbo:parent ?parentOfMariaAnna .
  
  # Father of that child
  ?fatherOfChildMaria a dbo:Person ;
                      foaf:name ?nameFatherMaria ;
                      dbo:child ?childOfParentMaria .

  FILTER EXISTS { ?person dbo:royalTitle ?title . }

  # Ensure the person is royalty
  OPTIONAL { ?fatherOfChild dbo:royalTitle ?title }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Bobby Shmurda's associated musical artists
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  # Identify band members of these artists who are also musicians
  ?artist dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Ensure the band member is native to Florida
  ?bandMember dbo:nativePlace dbr:Florida .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow a dbo:Agent ;
                 dbo:alias ?alterEgo .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?team WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           dbo:occupation [ a dbo:SoccerManager ] .
  
  # Athlete born on 1955-02-22
  ?person2 dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:sport ?sport .

  # Sergio Agüero
  dbr:Sergio_Ag%C3%BCero dbo:sport dbr:Soccer .
  
  # Teams associated with the soccer player and manager
  ?person1 dbo:team ?team .
  
  # Check if the athlete played in any of these teams
  OPTIONAL { ?person2 dbo:team ?team . }
  
  # Check if Sergio Agüero played in any of these teams
  OPTIONAL { dbr:Sergio_Ag%C3%BCero dbo:team ?team . }

  FILTER(?person1 != ?person2)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find Maria I of Portugal
  dbr:Maria_I_of_Portugal a dbo:Person .

  # Identify commanders in her force
  ?commander dbo:commanderOf ?force .
  ?force dbo:participatedIn ?war .

  # Ensure the war is both a military conflict and a television show
  ?war a dbo:Battle ;
      dbo:wikiPageRedirects ?tvShowWar .
  
  FILTER EXISTS { ?tvShowWar a dbo:TelevisionProgram }
}
```",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Koichirō""@en .
  ?person dbo:birthPlace dbr:Japan .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Sue Cobb""@en .
  ?person dbo:producer dbr:12_Strong .

  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Khlyst_(band) dbo:member ?member .
  ?member a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?myatHponePyo a dbo:Person ;
                 foaf:name ""Myat Hpone Pyo""@en .
  
  ?myatHponePyo dbo:parent ?father .

  ?father a dbo:RoyalFamilyMember ; # Assuming 'dbo:RoyalFamilyMember' is the class for royalty
          foaf:name ?fatherName .

  OPTIONAL { ?father dbo:spouse ?spouse . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country ?party WHERE {
  # Find the country associated with Daniel Elahi Galán
  ?daniel a dbo:Person ;
          foaf:name ""Daniel Elahi Galán""@en .
  OPTIONAL { ?daniel dbo:nationality ?country . }

  # Find the political party of Roy Leonardo Barreras Montealegre
  ?roy a dbo:Politician ;
       foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?roy dbo:partyMember ?party . }
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mariano Rajoy""@en .
  OPTIONAL { ?person dbo:office ?office . }
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band ?profession ?fictionalCharacter WHERE {
  ?bob a dbo:MusicArtist ;
       foaf:name ""Bob Thompson""@en .
  
  OPTIONAL { ?bob dbo:musicBand ?band . }
  
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  
  OPTIONAL { ?sam foaf:profession ?profession . }
  
  ?walter a dbo:Writer ;
          foaf:name ""Walter B. Gibson""@en .
  
  OPTIONAL {
    ?fictionalCharacter dbo:fictionalWork ?work ;
                        dbo:creator ?walter ;
                        rdf:type dbo:FictionalCharacter ;
                        dbo:genre dbc:Comics .
  }
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorATL ?actorShelbyOaks WHERE {
  dbr:ATL_(film) dbo:starring ?actorATL .
  FILTER(lang(?actorATL) = 'en')

  dbr:Shelby_Oaks dbo:starring ?actorShelbyOaks .
  FILTER(lang(?actorShelbyOaks) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Cecilia_Renata_of_Austria dbo:parent ?father .
  
  ?father dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") && CONTAINS(LCASE(?occupation), ""thirty years war""))
  
  ?father dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",4,5,5,3,2,3,3,71,0,93,59,0.0,0.0,0
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonPlayer WHERE {
  # Entity born on 1955-02-22
  ?person1 a dbo:Person ;
           dbo:birthday ""1955-02-22""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           foaf:name ?name1 .
  
  # Entity associated with All or Nothing: Manchester City
  ?person1 dbo:actorIn dbr:All_or_Nothing:_Manchester_City .

  # Entity born on 1979-11-03
  ?person2 a dbo:Person ;
           dbo:birthday ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           foaf:name ?name2 .
  
  # Person2 is also a soccer manager
  ?person2 dbo:occupation dbr:Soccer_manager .

  # Find common player between person1 and person2
  ?commonPlayer dbo:playerIn ?team .
  ?team dbo:member ?person1 ;
        dbo:member ?person2 .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicianRole ?associatedArtist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Elorm Kabu Amenyah""@en .
  
  OPTIONAL { 
    ?person dbo:profession ?musicianRole .
    FILTER(?musicianRole = <http://dbpedia.org/ontology/Musician>)
  }
  
  OPTIONAL {
    ?person dbo:associatedBand ?band ;
            dbo:member ?artist .
    ?artist a dbo:MusicalArtist .
    BIND(?artist AS ?associatedArtist)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Producer of A Star Is Born (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Producer of The Adventures of Tom Sawyer (1938 film)
  OPTIONAL { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer . }

  # Professional associated with The Shadow
  OPTIONAL {
    ?shadow a dbo:Person ;
            foaf:name ""The Shadow""@en .
    ?shadow dbo:alterEgoOf ?person .
    FILTER(?person = ?producer)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?athlete WHERE {
  # Find Pablo Aimar's team
  dbr:Pablo_Aimar a dbo:SoccerPlayer ;
                  dbo:playsFor ?team .

  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        a dbo:Film .

  # Find athletes who are actors in those films and also soccer players
  ?athlete a dbo:SoccerPlayer, dbo:Actor ;
           foaf:name ?name .
  
  ?film dbo:starring ?athlete .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  OPTIONAL { ?person dbo:office ?office . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?series a dbo:ComicSeries ;
          foaf:name ""The Golden Master""@en .
  
  ?character dbo:partOfSeries ?series ;
             dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find the administration related to PSOE
  ?administration dbo:member dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:country dbr:Spain .

  # Find the office held by Alberto Núñez Feijóo
  ?officeHolder dbo:office ?office .
  ?officeHolder foaf:name ""Alberto Núñez Feijóo""@en .

  # Determine the tenant of this administration
  ?administration dbo:tenant ?tenant .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?office WHERE {
  # Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:memberOfParty ?party .
  
  # Find the leader of that political party and their office
  ?party dbo:leader ?leader .
  ?leader a dbo:Politician ;
          dbo:holdsOffice ?office .

  # Find the office holder from the 2003 Madrid City Council election
  OPTIONAL {
    dbr:2003_Madrid_City_Council_election dbo:electedOfficial ?electedOfficial .
    ?electedOfficial dbo:holdsOffice ?residence .
    
    # Ensure the leader's office is the same as the residence of the elected official
    FILTER(?office = ?residence)
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No query can be constructed due to incomplete input.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  dbr:Madrid dbo:resident ?resident .
}
```",1,1,2,1,1,3,3,71,0,0,259,0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Step 2: Find the spouse of an author who is a politician and office holder
  ?author a dbo:Author ;
          foaf:name ?authorName .
  FILTER(CONTAINS(?authorName, ""politician"") && CONTAINS(?authorName, ""office holder""))
  ?author dbo:spouse ?spouse .

  # Step 3: Determine the work by Hillary Clinton that is a book
  dbr:Hillary_Clinton dbo:work ?work .
  FILTER(STRSTARTS(STR(?work), ""http://dbpedia.org/resource/"") && 
         (CONTAINS(LCASE(STR(?work)), ""book"") || CONTAINS(LCASE(STR(?work)), ""written work"")))

  # Step 4: Find the commander associated with a war that is both a disease and a societal event
  ?war a dbo:Disease ;
      dbo:societalEvent .
  ?commander dbo:commandedDuringWar ?war .

  # Linking all entities together
  FILTER(?owner = ?spouse)
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Ethan_Iverson dbo:work ?work .
  ?work rdf:type dbo:MusicalArtist ;
        rdf:type dbo:Artist .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  dbr:Eric_Clapperton dbo:bandMember ?member .
  ?member dbo:band ?band .

  OPTIONAL { 
    ?band dbo:reference dbr:The_Fabulous_Thunderbirds .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find a writer who is also a musical artist associated with ""The Live Anthology""
  ?writer dbo:profession dbr:Writer ;
          dbo:musicalArtist true .
  ?anthology dbo:contributor ?writer .
  FILTER(STRSTARTS(LCASE(?anthology), LCASE(""the live anthology"")))

  # Find an artist from Central Region, Ghana
  ?artist a dbo:Person ;
          dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region,_Ghana .
  ?artist foaf:name ?birthName .

  # Match the profession of the writer with the artist's profession
  ?artist dbo:profession ?writerProfession .
  FILTER(?writerProfession = ?writer)

  # Bind the person to the artist if all conditions are met
  BIND(?artist AS ?person)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          dbo:officeHolder ""North Carolina Air National Guard""@en ;
          dbo:authorOf dbr:Promise_Me,_Dad ;
          foaf:nationality dbr:United_States .

  ?work dbo:author ?person ;
        rdf:type dbo:Book, dbo:WrittenWork .

  FILTER(?person != dbr:Unknown)
}
```",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party WHERE {
  # Find the commander of Pickett's Charge
  dbr:Picketts_Charge dbo:commander ?commander .

  # Ensure the commander is a person and has party membership
  ?commander a dbo:Person ;
             dbo:member ?party .

  # Filter for political parties that are organizations in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut ;
         rdf:type dbo:Organization .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Daniel Elahi Galán""@en .
  OPTIONAL { ?person dbo:nationality ?nationality . }
  OPTIONAL { ?nationality dbo:country ?country . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Robert_Calder a dbo:Person .
  
  ?calderEvent dbo:agent dbr:Robert_Calder ;
               a dbo:Event, dbo:SocietalEvent .

  FILTER(?calderEvent = ?event)
}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country WHERE {
  ?person dbo:nationality dbr:Poland ;
          dbo:birthPlace dbr:Łódź ;
          rdf:type dbo:Athlete .
  
  ?person dbo:residence ?residence .
  
  FILTER(STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/""))
  
  ?residence a dbo:Country .
  
  BIND(STRAFTER(STR(?residence), ""http://dbpedia.org/resource/"") AS ?country)
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthNamePacely ?musicalArtistPacely ?birthNameJoeyB ?musicalArtistJoeyB WHERE {
  # For Pacely (2Pac)
  ?pacely a dbo:Person ;
          foaf:name ""Tupac Shakur""@en .
  ?pacely dbo:birthName ?birthNamePacely .
  OPTIONAL { ?pacely dbo:musicalArtist ?musicalArtistPacely . }

  # For Joey B
  ?joeyb a dbo:Person ;
         foaf:name ""Joey B""@en .
  ?joeyb dbo:birthName ?birthNameJoeyB .
  OPTIONAL { ?joeyb dbo:musicalArtist ?musicalArtistJoeyB . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shirley Stoler""@en .
  OPTIONAL { ?person dbo:profession ?profession . }
  OPTIONAL { ?person dbo:nationality dbr:United_States ; 
             dbo:birthPlace dbr:New_York_City,_New_York }.
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?child .
  ?child a dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild WHERE {
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  
  OPTIONAL { ?child dbo:parent ?allanArbus . }
  
  OPTIONAL { ?parentOfChild dbo:parent ?child . }

  ?movie dbo:actor ?herchelBernardi ;
         foaf:name ?movieName .

  FILTER(?herchelBernardi = dbr:Herschel_Bernardi)

  ?photographer a dbo:Photographer .
  
  OPTIONAL { ?parentOfPhotographer dbo:parent ?photographer . }

  FILTER(?parentOfChild = ?parentOfPhotographer)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
       dbo:name ""Great Turkish War""@en .
  
  ?commander dbo:commanderOf ?war .

  OPTIONAL { 
    ?georgeDucas a dbo:Person ;
                 foaf:name ""George Ducas""@en .
    
    FILTER(?commander = ?georgeDucas)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .

  OPTIONAL { 
    ?shadowCharacter dbo:alterEgoOf dbr:Lamont_Cranston .
    ?actor dbo:starring ?shadowCharacter .
  }

  OPTIONAL {
    ?production dbo:starring ?actor ;
                (dbo:movie | dbo:televisionSeries) ?type .
    FILTER(?type IN (dbr:Movie, dbr:TelevisionShow))
  }

  OPTIONAL {
    ?richardGrant a dbo:Actor ;
                  foaf:name ""Richard E. Grant""@en .
    ?commonProduction dbo:starring ?actor, ?richardGrant .
  }
}
```",5,6,6,2,3,3,3,71,0,3557,9,0.0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedBand WHERE {
  ?person a dbo:Person ;
          foaf:name ""Stuart Tosh""@en .
  OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?workCountry WHERE {
  # Part 1: Birth place of Winston Chang
  ?winston a dbo:Person ;
           foaf:name ""Winston Chang""@en .
  ?winston dbo:birthPlace ?birthPlace .

  # Part 2: Country of work for the spouse (who is a writer) of Hu Jieqing
  ?hu a dbo:Person ;
      foaf:name ""Hu Jieqing""@en .
  OPTIONAL { ?hu dbo:spouse ?spouse . }
  
  FILTER EXISTS {
    ?spouse a dbo:Writer .
  }

  OPTIONAL { ?spouse dbo:workCountry ?workCountry . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?writer WHERE {
  dbr:George_Ducas dbo:work ?work .
  ?work dbo:author ?writer .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?rodneyLees a dbo:Person ;
              foaf:name ""Rodney Lees""@en .
  
  ?award dbo:recipient ?awardee ;
         dbo:associatedWith ?rodneyLees .

  ?arthurStanley a dbo:Person ;
                 foaf:name ""Arthur Stanley (politician)""@en .
  
  ?arthurStanley dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor1 (SAMPLE(?deathPlace1) AS ?deathPlaceOfActor1) 
       ?actor2 (SAMPLE(?deathPlace2) AS ?deathPlaceOfActor2)
WHERE {
  # Find the actor of ""The Sky Ranger"" (1928 film)
  dbr:The_Sky_Ranger_(film)_1928 dbo:starring ?actor1 .
  
  OPTIONAL { ?actor1 dbo:deathPlace ?deathPlace1 . }
  
  # Find the actor of ""Aladdin"" (1958 film)
  dbr:Aladdin_(1958_film) dbo:starring ?actor2 .

  OPTIONAL { ?actor2 dbo:deathPlace ?deathPlace2 . }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""George Savage""@en .
  OPTIONAL { ?person dbo:party ?party . }
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  ?eugene a dbo:Person ;
          foaf:name ""Eugène Cattin""@en .
  
  ?eugene dbo:profession ?profession .

  ?professional a dbo:Person ;
                dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,940,0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fabulousThunderbirds ?bandOfEricClapton ?associatedArtist WHERE {
  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
                               foaf:name ""The Fabulous Thunderbirds""@en .
  
  # Band of Eric Clapton
  OPTIONAL { 
    ?bandOfEricClapton a dbo:Band ;
                       dbo:member dbr:Eric_Clapton .
  }
  
  # Associated musical artist of Nick Curran
  OPTIONAL {
    dbr:Nick_Curran a dbo:MusicalArtist ;
                    foaf:name ""Nick Curran""@en .
    
    ?associatedArtist dbo:associatedMusicalArtist dbr:Nick_Curran .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?party WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Bruno Daniel Marie Paul Retailleau""@en .
    OPTIONAL { ?person dbo:party ?party . }
    BIND(""Bruno Daniel Marie Paul Retailleau"" AS ?personName)
  } UNION {
    ?person a dbo:Person ;
            foaf:name ""Guillaume Peltier""@en .
    OPTIONAL { ?person dbo:party ?party . }
    BIND(""Guillaume Peltier"" AS ?personName)
  }
}
```",3,5,4,2,2,2,2,9,1,6,0,0.14285714285714285,1.0,0.25
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?governor WHERE {
  ?paulusPowell a dbo:Person ;
                foaf:name ""Paulus Powell""@en .
  
  ?paulusPowell dbo:birthPlace ?birthPlace .

  ?birthPlace dbo:region ?region .
  ?region a dbo:AdministrativeRegion .

  ?governor a dbo:Politician ;
            dbo:governor ?region .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?childOfParent WHERE {
  # Part 1: Find spouse of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?sawShweKhet dbo:spouse ?spouse . }

  # Part 2: Find child of the parent of Min Hla Htut of Pyakaung
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en ;
              dbo:birthPlace dbr:Pyakaung .
  OPTIONAL { ?parentOfMinHlaHtut dbo:child ?minHlaHtut . }
  OPTIONAL { ?parentOfParent dbo:child ?parentOfMinHlaHtut . }
  OPTIONAL { ?parentOfParent dbo:child ?childOfParent . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfMember ?realNameOfKimWilsonBand WHERE {
  # Part 1: Eric Clapton's band members and their bands
  ?ericClapton a dbo:Person ;
               foaf:name ""Eric Clapton""@en .
  
  ?ericClapton dbo:bandMember ?claptonBand .
  
  ?memberOfClaptonBand a dbo:Person ;
                       dbo:bandMember ?claptonBand .
  
  ?memberOfClaptonBand dbo:bandMember ?bandOfMember .

  # Part 2: Kim Wilson's band real name
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  
  ?kimWilson dbo:bandMember ?kimWilsonBand .
  
  OPTIONAL { ?kimWilsonBand foaf:name ?realNameOfKimWilsonBand }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfAlbrecht WHERE {
  # Find Albrecht, Duke of Württemberg and his child
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?childOfAlbrecht .

  # Find Archduchess Helena's spouse and their child
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouseHelena .
  ?spouseHelena dbo:child ?childOfSpouse .

  # Ensure the child of the spouse is a royalty
  ?childOfSpouse rdf:type dbo:RoyalFamilyMember .

  # Find Archduchess Margarete Sophie and her child
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?childOfMargareteSophie .

  # Determine the predecessor relationship (assuming lineage or succession)
  FILTER(?childOfAlbrecht = ?childOfSpouse || ?childOfAlbrecht = ?childOfMargareteSophie)

  # Ensure all entities are royalty
  ?childOfAlbrecht rdf:type dbo:RoyalFamilyMember .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the 2nd Dragoon Regiment (France)
  ?regiment a dbo:MilitaryUnit ;
            foaf:name ""2nd Dragoon Regiment (France)""@en .
  
  OPTIONAL { ?regiment dbo:commander ?commander . }
  
  # Identify the war that is a societal event, an event, and a television show
  ?war a dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow ;
       dbo:participatedIn ?commander .
  
  # Find Eleonore of Austria, Queen of Poland's father
  dbr:Eleonore_of_Austria,_Queen_of_Poland dbo:father ?father .
  
  # Link the commander to Eleonore's father
  FILTER(?commander = ?father)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carolyn Jones""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  ?child dbo:parent ?father .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfProfessional ?parentOfChild WHERE {
  # Find Eugène Cattin's profession and a professional in that field
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  
  ?eugeneCattin dbo:profession ?profession .

  OPTIONAL { 
    ?professional a dbo:Person ;
                  dbo:profession ?profession .
    
    ?parentOfProfessional dbo:child ?professional .
  }

  # Find Mariclare Costello's spouse and their child
  ?mariclareCostello a dbo:Person ;
                     foaf:name ""Mariclare Costello""@en .

  OPTIONAL { 
    ?mariclareCostello dbo:spouse ?spouse .
    
    ?child dbo:parent ?spouse .
    
    ?parentOfChild dbo:child ?child .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Taipei .
}
```",1,1,2,1,1,3,2,20,220,0,0,1.0,1.0,1.0
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Author of Smartbomb
  ?smartbombAuthor a dbo:Writer ;
                   dbo:work ?smartbombBook .
  FILTER(STR(?smartbombBook) = ""Smartbomb (book)"")

  # Professional in the alter ego of The Shadow
  ?theShadowAlterEgo a dbo:Person ;
                     foaf:name ""The Shadow""@en .
  ?professional a dbo:Person ;
                dbo:profession ?theShadowAlterEgo .

  # Actor of ATL
  ?atlMovie dbr:ATL ;
            dbo:actor ?atlActor .

  # Find the actor who is connected to all three entities
  ?actor a dbo:Actor ;
         dbo:actedIn ?smartbombMovie ;
         dbo:actedIn ?theShadowMovie ;
         dbo:actedIn ?atlMovie .
  
  FILTER(?smartbombAuthor = ?actor)
  FILTER(?professional = ?actor)
  FILTER(?atlActor = ?actor)
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER EXISTS { 
    ?person dbo:birthName ""Harriette Arlene Lake"" .
    ?partyMembership dbo:member ?person ;
                    dbo:politicalParty dbr:Republican_Party_(United_States) .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Gillmore_Medal dbo:awardee ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the person associated with The Shadow as an alter ego or actor
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  
  OPTIONAL { ?shadow dbo:alterEgo ?person . }
  OPTIONAL { ?shadow dbo:actor ?person . }

  # Find the album, film, and work related to Lasso the Moon
  dbr:Lasso_the_Moon a dbo:Album ;
                     dbo:film ?lassoFilm .
  
  ?lassoWork a dbo:CreativeWork ;
             foaf:name ""Lasso the Moon""@en .

  # Link the person to both The Shadow and Lasso the Moon
  OPTIONAL { ?person dbo:actor ?lassoFilm . }
  OPTIONAL { ?person dbo:creator ?lassoWork . }

  FILTER(?shadow = ?person)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfCharlesII ?parentOfFather WHERE {
  # Step 1: Find the spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .

  # Step 2: Identify Maria of Bytom's spouse
  dbr:Maria_of_Bytom dbo:spouse ?spouseOfMaria .

  # Step 3: Find the father of Maria's spouse
  ?fatherOfSpouse a dbo:Person ;
                  dbo:parent ?spouseOfMaria .

  # Step 4: Identify the parent of this father who is royalty
  ?parentOfFather a dbo:Person ;
                  dbo:child ?fatherOfSpouse ;
                  rdf:type dbo:Monarch .
  
  FILTER(?spouseOfCharlesII = ?parentOfFather)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty WHERE {
  dbr:Westport,_Connecticut dbo:government ?government .
  ?government dbo:politicalParty ?rulingParty .
  FILTER(?rulingParty a dbo:PoliticalParty)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandName WHERE {
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  
  ?kimWilson dbo:band ?fabulousThunderbirds .
  ?fabulousThunderbirds foaf:name ?bandName .

  OPTIONAL {
    ?nickCurran a dbo:Person ;
                foaf:name ""Nick Curran""@en .
    
    ?collaboration dbo:musicalArtist ?nickCurran ;
                   dbo:associatedMusicalArtist ?kimWilson .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  {
    dbr:Juan_Carlos_Molina_(footballer) dbo:player ?team .
  }
  UNION
  {
    dbr:Sergio_Agüero dbo:player ?team .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  OPTIONAL { ?person foaf:nick ?stageName . }
  
  ?profession dbo:field dbr:Music .
  ?person dbo:occupation ?profession .

  ?association dbo:associatedMusicalArtist dbr:$pacely .
  ?person ?association ?musicalArtist .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Archduke Charles Louis of Austria
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?child .

  # Find the child of that child who is royalty
  ?child dbo:child ?grandchild .
  FILTER(?grandchild a dbo:Royalty) .

  # Ensure this grandchild is a predecessor of Carl, Duke of Württemberg
  OPTIONAL { 
    ?predecessor dbo:succeededBy dbr:C._Duke_of_W%C3%BCrttemberg .
    FILTER(?grandchild = ?predecessor)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?militaryForce WHERE {
  # Quincy Adams Gillmore and his award
  dbr:Quincy_Adams_Gillmore dbo:awardeeOf ?award .
  
  # Military force associated with the awardee
  ?award dbo:militaryForce ?militaryForce .

  # Amasa Tracy's involvement in a war related to Charleston, South Carolina
  OPTIONAL {
    dbr:Amasa_Tracy dbo:location dbr:Charleston,_South_Carolina ;
                    dbo:war ?war .
    
    # Check if the military force is connected to this context
    ?militaryForce dbo:participatedIn ?war .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find Allan Arbus' child and the parent of that child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  
  ?child dbo:parent ?allanArbus ;
         dbo:parent ?parentOfChild .

  # Identify the decedent at Los Angeles
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Los_Angeles,_California ;
            foaf:name ?name .
  
  # Link the decedent to a work (movie)
  ?work dbo:creator ?decedent ;
        rdf:type dbo:Film .

  # Find the actor of that movie
  ?actorRole dbo:characterName ?role ;
             dbo:actor ?actor ;
             dbo:film ?work .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Always_(1989_film) dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?show ?theme WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anumta Qureshi""@en .
  
  OPTIONAL { ?person dbo:nativePlace dbr:Lahore . }
  
  ?show dbo:actor ?person ;
        dbo:theme ?theme .

  OPTIONAL {
    ?nativePerson a dbo:Person ;
                  dbo:nativePlace dbr:Lahore .
    
    ?show dbo:actor ?nativePerson .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:established ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 12 && DAY(?date) = 2)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?war WHERE {
  {
    dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war .
  }
  UNION
  {
    dbr:Aleksandr_Lvovich_Davydov dbo:participatedIn ?war .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the professional associated with The Shadow
  ?shadow a dbo:Person ;
          foaf:name ""The Shadow""@en .
  
  OPTIONAL { ?shadow dbo:alterEgoOf ?professional . }
  
  # Find the actor of High Society Blues
  dbr:High_Society_Blues dbo:actor ?actor .
  
  # Determine the claim to fame (movie or work) for The Shadow
  ?claimToFame a dbo:Film ;
               dbo:producer ?producer .
  
  OPTIONAL { ?professional dbo:work ?claimToFame . }
  
  # Find the producer related to both entities
  ?actor dbo:producedBy ?producer .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mark Eitzel""@en .
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?child dbo:parent dbr:Roger_II_of_Sicily ;
         a dbo:Person ;
         dbo:royalty true ;
         dbo:officeHolder true .

  ?child dbo:father ?father .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Lasso_the_Moon a dbo:Film ;
                     dbo:workType ?type .
  
  FILTER(?type IN (dbo:SoundRecording, dbo:Film))
  
  OPTIONAL { dbr:Lasso_the_Moon dbo:actor ?actor . }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?artist WHERE {
  ?artist a dbo:Person ;
          dbo:musicalArtist true .
  
  ?artist dbo:birthPlace ?place .

  ?place rdf:type dbo:Settlement ;
         dbo:country dbr:England .
}
```",2,6,3,2,1,3,2,20,0,0,659,0,0.0,0
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?author a dbo:Person ;
          foaf:name ""Hillary Clinton""@en .
  
  ?work dbo:author ?author ;
        a dbo:Book .

  OPTIONAL { ?author dbo:spouse ?spouse . }
  
  FILTER EXISTS { ?spouse a dbo:Politician ; 
                  dbo:officeHolder true . }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo ?profession WHERE {
  # Find the series ""The Golden Master""
  dbr:The_Golden_Master dbo:seriesCharacter ?character .
  
  # Check if this character has an alter ego
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
  
  # Get the profession of the alter ego
  OPTIONAL { ?alterEgo dbo:profession ?profession . }
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .
  
  OPTIONAL { ?frederick dbo:child ?politicianChild . }
  
  FILTER EXISTS { 
    ?politicianChild a dbo:Politician ;
                     dbo:parent ?father .
  }

  OPTIONAL { ?politicianChild dbo:child ?victorStanley . }
  
  ?victorStanley a dbo:Person ;
                 foaf:name ""Victor Stanley (Royal Navy officer)""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?work dbo:author ?person .
  FILTER(STRSTARTS(LCASE(?work), ""george_ducas""))

  ?yuriiKhmelnytsky dbo:successor ?person .

  ?warCommander a dbo:MilitaryPerson ;
                dbo:commanded ?greatTurkishWar .
  FILTER(STRSTARTS(LCASE(?greatTurkishWar), ""great_turkish_war""))
  
  FILTER(?person = ?yuriiKhmelnytsky)
  FILTER(?person = ?warCommander)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonChild WHERE {
  # Find children of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:child ?childOfSophie .

  # Find children of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?childOfAlbrecht .

  # Check if there is a common child (predecessor)
  FILTER(?childOfSophie = ?commonChild)
  OPTIONAL { ?commonChild dbo:parent* ?childOfAlbrecht }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Leader of the 2003 Madrid City Council election
  ?leader a dbo:OfficeHolder ;
          dbo:electedAs dbr:Madrid_City_Council_election,_2003 .
  
  # Commander in a military conflict involving Manuel Pinto da Costa
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:inCommandOf ?conflict .
  ?conflict dbo:participantManuelPintoDaCosta dbr:Manuel_Pinto_da_Costa .

  # Find the residence of these office holders
  OPTIONAL { ?leader dbo:residence ?residenceLeader . }
  OPTIONAL { ?commander dbo:residence ?residenceCommander . }

  # Tenant of the residences
  OPTIONAL { ?residenceLeader foaf:tenant ?tenant . }
  OPTIONAL { ?residenceCommander foaf:tenant ?tenant . }
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party ?leaderName ?office WHERE {
  ?miguel a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  
  ?miguel dbo:member ?party .
  
  ?party a dbo:PoliticalParty ;
         dbo:leader ?leader .

  ?leader a dbo:Politician ;
          foaf:name ?leaderName .
  
  OPTIONAL { ?leader dbo:office ?office . }
  
  FILTER(CONTAINS(LCASE(?office), ""madrid""))
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  OPTIONAL { ?philip dbo:parent ?fatherOfPhilip . }
  
  OPTIONAL { ?charles a dbo:Person ;
                   foaf:name ""Charles I of Hungary""@en .
             ?charles dbo:child ?fatherOfCharles .
             ?fatherOfCharles dbo:parent ?grandfatherOfCharles .
             FILTER(STRSTARTS(STR(?grandfatherOfCharles), STR(dbo:Royal))) }
  
  OPTIONAL { ?grandfatherOfCharles dbo:spouse ?spouse . }
  
  FILTER(?fatherOfPhilip = ?grandfatherOfCharles)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby and his child Arthur Stanley (politician)
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?arthur .
  
  # Arthur Stanley's parent
  ?arthur dbo:parent ?parent .

  # Rodney Lees' award awardee
  ?rodneyAward dbr:Rodney_Lees dbo:awardRecipient ?awardee .
  
  # Check if the same person is a parent of both
  OPTIONAL { ?awardee dbo:parent ?parent }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Min Hla Htut of Pyakaung""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Béla IV of Hungary and his child who is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  FILTER EXISTS { ?child a dbo:RoyalFamily . }

  # The child's father, who is also royalty
  ?child dbo:parent ?father .
  FILTER EXISTS { ?father a dbo:RoyalFamily . }

  # The parent of the father (grandparent of the original child)
  ?father dbo:parent ?grandParent .

  # The grandparent's child who is royalty
  ?grandParent dbo:child ?childOfChild .
  FILTER EXISTS { ?childOfChild a dbo:RoyalFamily . }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyMember ?spouse WHERE {
  # Find the ruling party in Central, Louisiana
  ?location a dbo:Place ;
            foaf:name ""Central, Louisiana""@en .
  
  ?rulingParty dbo:country ?location ;
               dbo:member ?partyMember .

  # Find the actor of ""1,000 Dollars a Minute""
  ?actor a dbo:Actor ;
         foaf:name ""1,000 Dollars a Minute""@en .

  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfMember ?associatedArtist WHERE {
  # Find Eric Clapton and his band members
  dbr:Eric_Clapperton dbo:bandMember ?member .
  
  # Get the bands of these members
  ?member dbo:band ?bandOfMember .

  # Identify Nicholas Michael Curran as a musician
  ?curran a dbo:Person ;
          foaf:name ""Nicholas Michael Curran""@en ;
          dbo:birthPlace ?place .

  # Find associated musical artists related to Nicholas Michael Curran
  OPTIONAL { ?curran dbo:associatedMusicalArtist ?associatedArtist . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer WHERE {
  # Find the commander who was a politician and office holder during the Russo-Polish War
  ?commander a dbo:Person ;
             dbo:officeHolder true ;
             dbo:politicalAffiliation ?affiliation ;
             dbo:participatedInEvent dbr:Russo-Polish_War_(1654–1667) .

  # Find the successor of this commander
  ?successor dbo:succeededBy ?commander .

  # Reference to the writer of works by George Ducas
  ?work dbo:author dbr:George_Ducas ;
        dbo:subject ?writer .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional ?actorAlbum ?actorMovie WHERE {
  # Find professionals related to the album ""What You Know""
  dbr:What_You_Know_(T.I._song) dbo:album ?album .
  
  OPTIONAL { 
    ?album dbo:producer ?professional .
    FILTER(?professional != null)
  }
  
  OPTIONAL {
    ?album dbo:artist ?actorAlbum .
    FILTER(?actorAlbum != null)
  }

  # Placeholder for movie actor retrieval
  # Assuming a generic resource for demonstration purposes
  dbr:Generic_Movie dbo:starring ?actorMovie .
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing""@en .
  
  ?huJieqing dbo:spouse ?spouse .

  ?spouse a dbo:Person ;
          dbo:occupation ?occupation .

  FILTER(CONTAINS(LCASE(?occupation), ""writer""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  dbr:Ab_Kya_Hoga dbo:castMember ?actor .
  
  ?actor a dbo:Actor ;
         dbo:occupation ?occupation .

  FILTER EXISTS { 
    ?actor dbo:politicalParty ?party .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  {
    ?person a dbo:Person ;
            foaf:name ""$pacely""@en .
    OPTIONAL { ?person dbo:associatedBand ?associatedArtist . }
  } UNION {
    ?person a dbo:Person ;
            foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
    OPTIONAL { ?person dbo:associatedBand ?associatedArtist . }
  }
}
```",2,2,3,1,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandChild WHERE {
  ?philipp a dbo:Person ;
           foaf:name ""Duke Philipp of Württemberg""@en .
  
  ?child dbo:child ?philipp .
  
  ?carl a dbo:Person ;
        foaf:name ""Carl, Duke of Württemberg""@en .
  
  ?parentOfCarl dbo:child ?carl .
  
  ?margareteSophie a dbo:Person ;
                   foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  
  ?childOfMargareteSophie dbo:child ?margareteSophie .

  FILTER(?child = ?parentOfCarl)
  FILTER(?grandChild dbo:child ?child)

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team WHERE {
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  ?letsch dbo:manager ?team .

  ?team a dbo:SoccerClubSeason ;
        a dbo:SportsSeason ;
        a dbo:SportsTeamSeason .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?ghanaMusician WHERE {
  # Part 1: Find associated musical artists of Pacely
  ?pacely a dbo:MusicalArtist ;
          foaf:name ""Pacely""@en .
  
  OPTIONAL { ?pacely dbo:associatedMusicalArtist ?associatedArtist . }
  
  # Part 2: Identify a musician from Central Region, Ghana
  ?ghanaMusician a dbo:Person ;
                 dbo:nationality dbr:Ghana ;
                 foaf:name ?name ;
                 dbo:birthPlace dbr:Central_Region,_Ghana .
                 
  FILTER EXISTS { ?ghanaMusician dbo:profession dbr:Musician . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedBand WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shatta Wale""@en .
  
  OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
}
```",2,2,3,2,1,3,3,71,0,17,7,0.0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalChild WHERE {
  # Archduke Charles Louis of Austria and his child
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?firstChild .

  # Child of the first child who is a royalty
  ?firstChild dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild dbo:isRoyalMemberOf ?royalty }

  # Philipp Albrecht, Duke of Württemberg and his child (Albrecht, Duke of Württemberg)
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?albrechtChild .
  
  # Ensure the royal child is a predecessor to Albrecht, Duke of Württemberg
  FILTER EXISTS { 
    ?royalChild dbo:predecessorOf ?albrechtChild .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Palmer""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Elena Žalinkevičaitė-Petrauskienė""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childOfParent WHERE {
  # Roger II of Sicily's child
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  # Parent of that child, ensuring they are royalty
  ?parentOfChild dbo:parent ?child ;
                 rdf:type dbo:Monarch .

  # Constance of Burgundy's spouse and their child
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch }
  
  ?spouseChild dbo:child ?childOfSpouse .
  
  # Child of the child of that spouse
  ?grandchildOfSpouse dbo:child ?childOfSpouse .

  # We want the intersection of these two paths
  FILTER(?parentOfChild = ?grandchildOfSpouse)
  BIND(?parentOfChild AS ?childOfParent)
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander ?author ?spouse WHERE {
  # Find the commander of the Third Taiwan Strait Crisis
  ?crisis a dbo:MilitaryConflict ;
          dbo:name ""Third Taiwan Strait Crisis""@en .
  OPTIONAL { ?crisis dbo:commander ?commander . }

  # Find Bill Clinton's work, specifically ""An Invitation to the White House""
  dbr:Bill_Clinton dbo:work ?work .
  FILTER(CONTAINS(LCASE(?work), ""invitation to the white house""))

  # Identify the author of this book
  ?work dbo:author ?author .

  # Determine if the author has a spouse who is a politician
  OPTIONAL { ?author dbo:spouse ?spouse . }
  FILTER EXISTS { ?spouse a dbo:Politician ; dbo:officeHolder true . }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfWilliamII ?royaltyChild ?childOfAlfonsoVI WHERE {
  # Find the father of William II of Sicily
  dbr:William_II_of_Sicily dbo:father ?fatherOfWilliamII .

  # Find a royalty child of the parent of Roger II's child
  OPTIONAL {
    ?rogerChild dbo:parent ?parentOfRogerChild .
    ?parentOfRogerChild dbo:child ?royaltyChild .
    FILTER (?royaltyChild rdf:type dbo:Monarch)
  }

  # Find the child of Alfonso VI's child
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?alfonsoChild .
  OPTIONAL {
    ?alfonsoChild dbo:child ?childOfAlfonsoVI .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?work WHERE {
  # Find the cast member of ""High Society Blues""
  dbr:High_Society_Blues dbo:castMember ?actor .

  # Get notable works associated with this actor
  ?actor dbo:notableWork ?work .
  
  # Ensure the work is both a movie and another type (e.g., book)
  ?work a dbo:Film ;
        dbo:genre ?genre .
  
  OPTIONAL { 
    ?work dbo:wikiPageWikiLink ?otherType .
    FILTER(?otherType != dbr:Film) 
  }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:United_States_Navy dbo:participatedIn ?war .
  
  ?war a dbo:War ;
       dbo:relatedDisease ?disease ;
       dbo:societalEvent ?event .

  FILTER(?disease != [] && ?event != [])
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find Saw Shwe Khet and their child who is royalty
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?childOfSawShweKhet dbo:parent ?sawShweKhet ;
                     a dbo:RoyalFamilyMember .

  # Find the father of that child who is royalty
  ?fatherOfChild a dbo:Person ;
                 dbo:child ?childOfSawShweKhet ;
                 a dbo:RoyalFamilyMember .
  
  # Get the spouse of that father
  OPTIONAL { ?fatherOfChild dbo:spouse ?spouse . }

  # Find Saw Min Phyu and their spouse who is royalty
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  ?spouseOfSawMinPhyu dbo:spouse ?sawMinPhyu ;
                      a dbo:RoyalFamilyMember .

  # Find the child of that spouse and their predecessor
  ?childOfSpouse dbo:parent ?spouseOfSawMinPhyu ;
                a dbo:RoyalFamilyMember .
  
  OPTIONAL { ?predecessor dbo:succeededBy ?childOfSpouse . }

  FILTER(?fatherOfChild = ?predecessor)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Identify Hillary Clinton as an author of ""Back to Work""
  ?hillary a dbo:Person ;
           foaf:name ""Hillary Clinton""@en .
  
  ?work dbo:author ?hillary ;
        foaf:name ""Back to Work (book)""@en .

  # Find her spouse
  ?hillardbo:spouse ?spouse .

  # Ensure the spouse is an author, politician, and office holder
  ?spouse a dbo:Person ;
          dbo:occupation dbo:Author ;
          dbo:occupation dbo:Politician ;
          dbo:officeHolder true .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?managerOfLetsch ?successorClub ?playerManager WHERE {
  # Find the team managed by Thomas Letsch
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  OPTIONAL { 
    ?letsch dbo:positionTitle ?managerPosition .
    FILTER(CONTAINS(LCASE(?managerPosition), ""manager""))
    
    ?team a dbo:SoccerClub ;
          dbo:manager ?letsch .
    
    # Find the manager of Thomas Letsch
    ?managerOfLetsch a dbo:Person ;
                     foaf:name ?managerName .
    OPTIONAL { ?team dbo:manager ?managerOfLetsch . }
  }

  # Identify the successor of the 2006–07 VfL Bochum season
  dbr:2006%E2%80%9307_VfL_Bochum_season a dbo:SoccerClubSeason ;
                                        dbo:sportsTeam ?bochumTeam .
  
  OPTIONAL {
    ?successorClub a dbo:SoccerClub ;
                   dbo:season ?successorSeason .
    
    ?successorSeason dbo:follows dbr:2006%E2%80%9307_VfL_Bochum_season .
  }
  
  # Find the manager of a player in the successor club
  OPTIONAL {
    ?player a dbo:SoccerPlayer ;
            dbo:playsFor ?successorClub .
    
    ?playerManager a dbo:Person ;
                   foaf:name ?managerName2 .
    OPTIONAL { ?successorClub dbo:manager ?playerManager . }
  }
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?title ?director WHERE {
  ?film a dbo:Film ;
        foaf:name ""Наши парни""@ru .
  
  OPTIONAL { ?film foaf:name ?title . }
  OPTIONAL { ?film dbo:director ?director . }

  FILTER(lang(?title) = 'en' || lang(?title) = '')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  {
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Vince Gilligan"" AS ?personName)
  }
  UNION
  {
    ?person a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?personName)
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran""@en .
  
  OPTIONAL { ?nickCurran dbo:associatedBand ?associatedArtist . }
}
```",3,4,4,3,1,3,3,71,3,0,0,1.0,1.0,1.0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Béla IV of Hungary and his child who is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  FILTER EXISTS { ?child a dbo:RoyalFamily . }

  # The child's child (grandchild of Béla IV)
  ?child dbo:child ?childOfChild .

  # Maria of Bytom and her spouse
  dbr:Maria_of_Bytom dbo:spouse ?mariaSpouse .

  # Father of Maria's spouse who is royalty
  ?mariaSpouse dbo:parent ?father .
  FILTER EXISTS { ?father a dbo:RoyalFamily . }

  # Parent of the father (grandparent of Maria's spouse)
  ?father dbo:parent ?parentOfFather .

  # Linking grandchild of Béla IV to parent of father of Maria's spouse
  FILTER(?childOfChild = ?parentOfFather)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:deathPlace dbr:Taipei ;
          dbo:child ?child .
  
  ?child a dbo:Person ;
         (dbo:officeHolder|foaf:topic) ?politicalRole .

  FILTER EXISTS { ?politicalRole rdfs:label ?roleLabel . FILTER(CONTAINS(LCASE(?roleLabel), ""politician"")) }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?ceceBirthPlace ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Cece Bell's birthplace
  ?cece a dbo:Person ;
        foaf:name ""Cece Bell""@en .
  ?cece dbo:birthPlace ?ceceBirthPlace .

  # Paulus Powell's birthplace and governor of that region
  ?paulus a dbo:Person ;
          foaf:name ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?region .
  
  FILTER (dbo:Region ?region) # Ensure it is both a region and an administrative region

  OPTIONAL {
    ?governor a dbo:Politician ;
              dbo:governs ?region .
    ?governor dbo:birthPlace ?governorBirthPlace .
  }

  # Vince Gilligan's award and the awardee's birthplace
  ?vince a dbo:Person ;
         foaf:name ""Vince Gilligan""@en .

  OPTIONAL {
    ?award dbo:recipient ?vince .
    ?award dbo:awardee ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?work WHERE {
  ?veraLynn a dbo:Person ;
            foaf:name ""Vera Lynn""@en .
  
  ?work dbo:starring ?veraLynn ;
        a ?type .

  FILTER(?type IN (dbo:Film, dbo:TelevisionSeries))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Bayne""@en .
  
  OPTIONAL { 
    ?person dbo:participatedIn ?war .
    FILTER (isLiteral(?war) && contains(str(?war), ""War"") || isIRI(?war) && strstarts(str(?war), ""http://dbpedia.org/resource/Category:Wars"")))
  }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby a dbo:Person ;
                                         dbo:child ?arthur .

  # Arthur Stanley (politician)
  ?arthur foaf:name ""Arthur Stanley""@en .
  
  # Awardee of Commander of the Royal Victorian Order
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .

  # Parent of the awardee
  ?awardee dbo:parent ?parent .

  # Ensure both conditions are satisfied by the same parent
  FILTER(?arthur = ?awardee)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?resident a dbo:Politician ;
            dbo:residence dbr:Chappaqua,_New_York .
  
  ?work a dbo:Book ;
        dbo:author ?author .

  FILTER(?resident = ?author)
}
```",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Charles_Parsons_(British_Army_officer) dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalParent WHERE {
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?child .
  
  ?child dbo:parent ?parent .
  
  ?parent a dbo:Monarch ;
          foaf:name ?name .

  BIND(?parent AS ?royalParent)
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Identify members of GS9 who are also artists and musical artists
  ?member a dbo:MusicalArtist ;
          foaf:name ?name .
  
  ?gs9Group dbo:bandMember ?member .
  FILTER(?gs9Group = dbr:GS9)

  # Ensure the person is born with Bobby Shmurda's birth name
  ?person dbo:birthName ?birthName .

  # Ensure the person is recognized as both an artist and a musical artist
  ?person a dbo:Artist ;
          foaf:name ?name .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?leader dbo:leader dbr:West_Germany .
  ?leader dbo:nativePlace ?nativePlace .
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?actor a dbo:Actor ;
         dbo:actedIn dbr:High_Society_Blues ;
         foaf:name ?name .

  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow ;
                  dbo:professional ?actor .

  ?actor dbo:produced dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .

  ?work dbo:producer ?actor .
  
  OPTIONAL { ?work a dbo:Film . }
  
  ?producer dbo:producer ?work .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?doonParent ?amyParent WHERE {
  OPTIONAL { 
    ?doon a dbo:Person ;
          foaf:name ""Doon Arbus""@en .
    ?doon dbo:parent ?doonParent .
  }
  
  OPTIONAL { 
    ?amy a dbo:Person ;
         foaf:name ""Amy Arbus""@en .
    ?amy dbo:parent ?amyParent .
  }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonChild WHERE {
  # Path for Alexander of Württemberg's great-great-grandchild
  dbr:Aleksander_of_W%C3%BCrttemberg dbo:child ?grandchild1 ;
                                     dbo:child ?greatGrandchild1 ;
                                     dbo:child ?greatGreatGrandchild1 .
  
  # Path for Archduke Charles Louis of Austria's great-grandchild who is a royalty
  dbr:Charles_Louis_Archduke_of_Austria dbo:child ?grandchild2 ;
                                        dbo:child ?greatGrandchild2 ;
                                        dbo:child ?greatGreatGrandchild2 .

  FILTER (?greatGreatGrandchild1 = ?greatGreatGrandchild2)
  
  # Ensure the common child is a member of royalty
  ?commonChild rdfs:subClassOf* dbo:RoyalFamilyMember .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Lvovich Davydov""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerOfBochum ?teamManagedByPerson WHERE {
  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?managerOfBochum .

  # Identify the person born on 1968-08-26 who is a sports manager
  ?person a dbo:SportsManager ;
          foaf:birthday ""1968-08-26""^^xsd:date .
  
  # Find the team managed by this person
  OPTIONAL { ?person dbo:manager ?teamManagedByPerson . }
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?force ?war WHERE {
  # Henry Clay Lewis's birthplace that is a settlement in America
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  FILTER(?birthPlace != dbr:United_States) # Exclude the country itself
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Quincy Adams Gillmore's award and its force
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
  ?award dbo:force ?force .

  # Amasa Tracy's war
  dbr:Amasa_Tracy dbo:militaryConflict ?war .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Pacely""@en .
  
  OPTIONAL { ?person dbo:associatedBand ?band . }
  OPTIONAL { ?person dbo:memberOfBand ?band . }

  ?band a dbo:MusicalGroup ;
        foaf:name ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Min Hla Htut of Pyakaung's parent
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  ?parentOfMinHlaHtut dbo:child ?minHlaHtut .

  # Spouse of the father (parent) of Min Hla Htut's child
  ?childOfParent a dbo:Person ;
                 dbo:parent ?parentOfMinHlaHtut .
  OPTIONAL { ?parentOfMinHlaHtut dbo:spouse ?spouse . }

  # Ensure both the child and spouse are royalty
  FILTER(?childOfParent a dbo:Royalty)
  FILTER(?spouse a dbo:Royalty)

  # Saw Shwe Khet's child
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  ?childOfSawShweKhet dbo:parent ?sawShweKhet .

  # Ensure the child of Saw Shwe Khet is royalty
  FILTER(?childOfSawShweKhet a dbo:Royalty)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the writer of ""Always the Love Songs""
SELECT ?writer WHERE {
  dbr:Always_the_Love_Songs dbo:composer ?writer .
}

# Query to identify the commander in both wars and their successor
SELECT DISTINCT ?successor WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:participatedInMilitaryConflict [
               dbo:conflict dbr:Russo-Polish_War_(1654–1667) ;
                            dbo:conflict dbr:Great_Turkish_War
             ] .
  
  ?successor dbo:succeededBy ?commander ;
             a dbo:Politician ;
             dbo:officeHolder true .

}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:parent ?parent .
  
  FILTER EXISTS { ?parent a dbo:Monarch . }
  FILTER EXISTS { ?parent a dbo:Noble . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?royalChild WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Find the child of this parent
  ?child dbo:parent ?parent .

  # Find the child of that child who is a royalty
  ?royalChild dbo:parent ?child .
  
  FILTER EXISTS { ?royalChild rdf:type dbo:Monarch }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Identify the Algerian War resource
  dbr:Algerian_War a dbo:MilitaryConflict ;
                   dbo:militaryForce ?militaryForce .

  # Find wars related to this military force
  ?relatedWar dbo:militaryForce ?militaryForce ;
             a dbo:MilitaryConflict .

  # Ensure the war is also classified as a societal event, an event, and a television show
  ?relatedWar a dbo:SocietalEvent ;
              a dbo:Event ;
              a dbo:TelevisionShow .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?coro a dbo:MusicalGroup ;
        foaf:name ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  ?award dbo:recipient ?coro .

  ?native dbo:nativeRegion ?award ;
          rdf:type dbo:State ,
                   dbo:Settlement ,
                   dbo:AmericanPlace .

}
```",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional ?producer WHERE {
  ?shadow a dbo:Character ;
          foaf:name ""The Shadow""@en .
  
  ?professional dbo:alterEgo ?shadow .

  ?work dbo:claimToFame ?professional ;
        dbo:producer ?producer .

  ?actor a dbo:Actor ;
         foaf:name ""Johnny Doughboy""@en .

  ?actor dbo:claimToFame ?work .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            geo:elevation ?elevation .
  FILTER(?elevation = ""20.116800000000001347""^^xsd:float)

  # Find the person born as Ann Sothern
  ?person a dbo:Person ;
          foaf:name ""Ann Sothern""@en ;
          dbo:birthName ""Ann Sothern""@en .

  # Hypothetical connection to a party member (this part is speculative)
  OPTIONAL { ?landmark dbo:locatedIn ?location }
  OPTIONAL { ?location dbo:country ?country }
  OPTIONAL { ?person dbo:nationality ?nationality }
  FILTER(?country = ?nationality)

  # Find the ruling party in that country
  ?rulingParty a dbo:PoliticalParty ;
               dbo:country ?country .
  ?partyMember a dbo:Person ;
               dbo:memberOf ?rulingParty .

}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?movie WHERE {
  # Find Doon Arbus and her parent
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?doonArbus dbo:parent ?parent . }

  # Find movies where Herschel Bernardi acted
  ?movie a dbo:Film ; # Assuming we are looking for films, but can be generalized to dbo:Work
         dbo:actor dbr:Herschel_Bernardi .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor ?spouse WHERE {
  # Find predecessor of Myat Hpone Pyo
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  OPTIONAL { ?myatHponePyo dbo:predecessor ?predecessor . }

  # Identify children who are royalty and their fathers
  ?child a dbo:Person ;
         dbo:royalty true ;
         dbo:parent ?father .

  # Ensure the father is royalty
  ?father a dbo:Person ;
          dbo:royalty true .

  # Find spouse of such a father
  OPTIONAL { ?father dbo:spouse ?spouse . }

  # Link Saw Shwe Khet and Saw Min Hla through their children
  ?sawShweKhetChild a dbo:Person ;
                   dbo:parent ?sawShweKhet .
  ?sawMinHlaChild a dbo:Person ;
                  dbo:parent ?sawMinHla .

  # Ensure the child of Saw Shwe Khet is also a child of Saw Min Hla
  FILTER(?sawShweKhetChild = ?sawMinHlaChild)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Identify William I in DBpedia
  dbr:William_I_of_England a dbo:Person ;
                           (dbo:monarch|dbo:king) ?country .
  
  # Find individuals related to him who are royalty and office holders
  ?person a dbo:Person ;
          (dbo:monarch|dbo:king|dbo:officeHolder) ?role .

  # Ensure the person is connected to William I through these roles
  OPTIONAL { ?person dbo:successor dbr:William_I_of_England . }
  OPTIONAL { ?person dbo:predecessor dbr:William_I_of_England . }

  FILTER(?country = ?role)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .
}

# Assuming the birthplace is a notable entity, we can directly select it.
```",2,2,3,2,1,2,2,9,0,2,249,0.0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeWar ?baggovutWar WHERE {
  # Find the awardee of the Golden Sword for Bravery and their associated war
  ?person dbo:award ""Golden_Sword_for_Bravery"" ;
          dbo:participatedIn ?awardeeWar .

  # Find Karl Gustav von Baggovut and his associated wars
  dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?baggovutWar .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Middlesex .
}
```",1,1,2,1,1,2,3,28,935,0,0,1.0,1.0,1.0
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the landmark by elevation
  ?landmark a dbo:Landmark ;
            dbo:elevation ""20.116800000000001347""^^xsd:float .
  
  # Determine the country of this landmark
  ?landmark dbo:location ?country .

  # Get the ruling party member in that country
  ?office dbo:country ?country ;
          dbo:member ?partyMember .
  
  # Find Roger Pryor and his spouse
  ?roger a dbo:Person ;
         foaf:name ""Roger Pryor (actor)""@en .
  OPTIONAL { ?roger dbo:spouse ?spouse . }
  
  # Check if the ruling party member is also the spouse of Roger Pryor
  FILTER(?partyMember = ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfStephenV ?parentOfFather WHERE {
  # Find child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?childOfStephenV .

  # Identify the father (spouse) of that child and check if he is royalty
  ?childOfStephenV dbo:parent ?father .
  ?father rdf:type dbo:Royalty .

  # Find Charles I's father and his parent, ensuring they are royalty
  dbr:Charles_I_of_Hungary dbo:parent ?charlesIFather .
  ?charlesIFather dbo:parent ?parentOfFather .
  ?parentOfFather rdf:type dbo:Royalty .

  # Ensure the parent of the father is the same as the spouse of Stephen V
  FILTER(?father = ?parentOfFather)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify the successor season of 2006–07 VfL Bochum
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:successor ?successorSeason .

  # Find players in that successor season
  ?player a dbo:SoccerPlayer ;
          dbo:playsForTeam ?team .
  
  FILTER(?team = ?successorSeason)

  # Ensure the player is part of a sports club, organization, and soccer club
  ?team a dbo:SportsClub ;
        a dbo:Organization ;
        a dbo:SoccerClub .

  # Find the manager of that player
  ?player dbo:manager ?manager .

  # Identify the leader of West Germany and their administration (country)
  dbr:West_Germany dbo:leader ?leader .
  ?leader foaf:nationality ?nationality .
  ?nationality dbo:administrativeRegion ?administration .

  # Ensure the player's native country matches the administration
  ?player dbo:nationality ?nativeCountry .
  FILTER(?nativeCountry = ?administration)

}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?show ?theme WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anumta Qureshi""@en .
  
  ?person dbo:performerIn ?show .

  OPTIONAL { ?show dbo:theme ?theme . }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerOfFilm ?notableWork ?producerOfWork WHERE {
  # Query for the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerOfFilm .

  # Query for Cora Sue Collins' notable work and its producer
  OPTIONAL {
    ?coraSue a dbo:Person ;
             foaf:name ""Cora Sue Collins""@en .
    
    ?coraSue dbo:notableWork ?notableWork .
    ?notableWork dbo:producer ?producerOfWork .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party ?leader ?residence WHERE {
  ?savage a dbo:Person ;
          foaf:name ""George Savage""@en .
  
  ?savage dbo:member ?party .

  FILTER(?party rdf:type dbo:PoliticalParty && 
         ?party dbo:country dbr:United_Kingdom)

  ?party dbo:leader ?leader .

  OPTIONAL { ?leader foaf:based_near ?residence . }
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sam Concepcion""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,1,0,6,1.0,0.14285714285714285,0.25
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actress ?child WHERE {
  ?actress a dbo:Person ;
           dbo:profession dbr:Actress .
  OPTIONAL { ?actress dbo:child ?child . }
}
```",2,2,3,2,1,3,2,20,0,8,935,0.0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete information.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?charlesMartelParent .

  # Step 2: Find parent of Charles Martel of Anjou
  ?charlesMartelParent a dbo:Person ;
                      foaf:name ""Charles_Martel_of_Anjou""@en .
  
  # Step 3: Identify the father of this parent (grandparent)
  ?charlesMartelParent dbo:parent ?royalGrandparent .

  # Step 4: Check if grandparent is royalty
  ?royalGrandparent a dbo:Person ;
                    dbo:royalty true .

  # Step 5: Find spouse of the royal grandparent
  OPTIONAL { ?royalGrandparent dbo:spouse ?spouse . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?actorName ?actorDeathPlace WHERE {
  # Query for Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # Query for the actor of ""Color Me Dead""
  dbr:Color_Me_Dead dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
}
```",3,3,4,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  ?spouse dbo:spouse ?sawMinPhyu .
  
  ?child dbo:parent ?spouse ;
         a dbo:RoyalFamilyMember .

  ?minHlaHtutOfPyakaung a dbo:Person ;
                        foaf:name ""Min Hla Htut of Pyakaung""@en .
  
  ?parentOfMinHlaHtut dbo:child ?minHlaHtutOfPyakaung .
  
  ?predecessor dbo:successor ?child .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?childOfParent WHERE {
  # Part 1: Find spouse of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?sawShweKhet dbo:spouse ?spouse . }

  # Part 2: Trace lineage from Minye Kyawswa
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .

  ?childOfMinyeKyawswa dbo:child ?minyeKyawswa .
  ?parentOfChild dbo:parent ?childOfMinyeKyawswa .
  
  # Retrieve the child of the parent
  ?childOfParent dbo:child ?parentOfChild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Philip_Despot_of_Romania dbo:parent ?parent .
  FILTER EXISTS { ?parent a (dbo:Monarch|dbo:RoyalFamilyMember) }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?recipient ?war WHERE {
  dbr:Medal_of_Honor dbo:recipient ?recipient .
  ?recipient dbo:participatedIn ?war .
}
```",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow WHERE {
  dbr:Anita_Borg_Institute_Women_of_Vision_Awards 
    dbo:wikiPageWikiLink ?link .
  
  ?link a dbo:TelevisionShow .
  
  BIND(?link AS ?tvShow)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:What_You_Know_(T.I._song) dbo:album dbr:T.I.'s_I'm_A_Pimp .
  OPTIONAL { dbr:T.I.'s_I'm_A_Pimp dbo:artist ?artist . }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?tvShow a dbo:TelevisionSeries ;
          dbo:starring dbr:Richard_E._Grant .
  
  ?tvShow dbo:starring ?actor .
  
  FILTER(?actor != dbr:Richard_E._Grant)
  
  OPTIONAL { ?actor rdf:type dbo:Actor . }
}
```",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Find Stephen V's predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  # Find the child of this predecessor who is royalty
  ?predecessor dbo:child ?royalChild .
  FILTER(?royalChild rdf:type dbo:Monarch) .

  # Find Maria of Bytom's spouse and their royal father
  dbr:Maria_of_Bytom dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .
  FILTER(?royalFather rdf:type dbo:Monarch) .

  # Find the parent of this royal father
  ?royalFather dbo:parent ?parentOfRoyalFather .

  # Finally, find the child of the royal child who is royalty
  ?royalChild dbo:child ?childOfChild .
  FILTER(?childOfChild rdf:type dbo:Monarch) .

  # Ensure we are linking to the same lineage
  FILTER(?parentOfRoyalFather = ?predecessor)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Joey B's birth name
  ?joeyB a dbo:Person ;
         foaf:name ""Jo-Vaughn Virginie Scott""@en .
  
  # Find the associated musical artist of $pacely (ASAP Rocky)
  ?asapRocky a dbo:MusicalArtist ;
             foaf:name ""Rakim Mayers""@en ;
             dbo:associatedBandOrMusicalArtist ?joeyB .

  # Find the writer of ""The Live Anthology"" who is also a musical artist
  ?writer a dbo:Person, dbo:Writer ;
          dbo:wrote dbr:The_Live_Anthology ;
          dbo:profession dbo:Musician .
  
  # Ensure the person matches all criteria
  FILTER(?joeyB = ?writer)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  ?person dbo:office ?office .

  OPTIONAL { 
    ?administration dbo:member ?person .
    ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  }

  OPTIONAL {
    ?residence a dbo:Country ;
               foaf:name ""Spain""@en .
    
    ?person dbo:nationality ?residence .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Part 1: Parent of the awardee of Rodney Lees' award
  {
    ?award a dbo:Award ;
           dbo:recipient ?awardee .
    ?rodneyLees foaf:name ""Rodney Lees""@en .
    ?rodneyLees dbo:award ?award .
    ?awardee dbo:parent ?parent .
  }
  
  UNION
  
  # Part 2: Parent of Edward Stanley, 17th Earl of Derby
  {
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  # Find Tony Hollings' birthday
  ?tonyHollings a dbo:Person ;
                foaf:name ""Tony Hollings""@en .
  ?tonyHollings dbo:birthday ?birthday .

  # Find person with the same birthday and multiple roles
  ?person a dbo:Person ;
          dbo:birthday ?birthday ;
          rdf:type dbo:Athlete, dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .

  # Ensure connection to Lai Sun Cheung as a player
  ?laiSunCheung a dbo:Person ;
                foaf:name ""Lai Sun Cheung""@en .
  ?playerRelation dbo:player ?person ;
                  dbo:relatedTo ?laiSunCheung .
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Napoleon Zervas' participation in wars
  OPTIONAL { 
    dbr:Napoleon_S._Zervas dbo:participatedIn ?war .
  }
  
  # Awardee of the Medal of Honor in 1930 and their war involvement
  OPTIONAL {
    ?awardee dbo:award ""Medal_of_Honor"" ;
             dbo:dateAwarded ""1930""^^xsd:gYear .
    ?awardee dbo:participatedIn ?war .
  }
  
  # Entity in Athens related to wars
  OPTIONAL {
    ?athensEntity a dbo:Place ;
                  dbo:location dbr:Athens .
    ?athensEntity dbo:participatedIn ?war .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war WHERE {
  OPTIONAL {
    ?hashiba a dbo:Person ;
             foaf:name ""Hashiba Hidekatsu""@en .
    ?hashiba dbo:foughtIn ?war .
  }
  
  OPTIONAL {
    ?koichiro a dbo:Person ;
              foaf:birthday ?birthDate ;
              foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""koichirō""))
    ?koichiro dbo:foughtIn ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find children of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?fatherOfPhilip .
  
  # Identify the father of Philip I, Prince of Taranto
  ?fatherOfPhilip foaf:name ?name .
  OPTIONAL { ?fatherOfPhilip dbo:spouse ?spouse . }
  
  # Ensure this person is indeed the father of Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip_I,_Prince_of_Taranto""@en .
  ?philip dbo:parent ?fatherOfPhilip .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?birthPlace WHERE {
  # Find the parent of Patrick Bowes-Lyon
  dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parent .

  # Find William Gayner's birthplace that is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is classified as both a region and a country
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  dbr:French_campaign_in_Egypt_and_Syria a dbo:MilitaryConflict ;
                                          dbo:commander ?commander .
  
  OPTIONAL { 
    ?campaign dbo:militaryForce ?militaryForce .
  }
  
  FILTER(?commander = dbr:William_Bayne_(Royal_Navy_officer))
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fabulousThunderbirds ?ericClaptonBand ?nickCurranArtist WHERE {
  # Reference to The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalGroup ;
                               foaf:name ""The Fabulous Thunderbirds""@en .

  OPTIONAL {
    # Band of Eric Clapton that might be associated with The Fabulous Thunderbirds
    ?ericClaptonBand a dbo:MusicalGroup ;
                     dbo:bandMember dbr:Eric_Clapton .
    FILTER(?fabulousThunderbirds = ?ericClaptonBand)
  }

  OPTIONAL {
    # Associated musical artist of Nick Curran
    ?nickCurranArtist a dbo:MusicalArtist ;
                      dbo:associatedBandMember dbr:Nick_Curran .
    FILTER(?fabulousThunderbirds = ?nickCurranArtist)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardee WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  
  ?award dbo:recipient ?awardee .
  
  ?awardee foaf:nationality dbr:Japan .

  OPTIONAL { 
    ?awardee dbo:wikiPageRedirects ?televisionShow .
    FILTER EXISTS { ?televisionShow a dbo:TelevisionSeries }
  }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerMusicalArtist ?stuartAssociatedArtist WHERE {
  # Part 1: Associated Musical Artist of the Writer of ""Wizards of Waverly Place (soundtrack)""
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:writer ?writer .
  OPTIONAL { ?writer a dbo:MusicalArtist . }
  OPTIONAL { ?writer dbo:associatedMusicalArtist ?writerMusicalArtist . }

  # Part 2: Associated Musical Artist of Stuart Mcbeath Tosh
  dbr:Stuart_Mcbeath_Tosh a dbo:MusicalArtist .
  OPTIONAL { ?stuart dbr:Stuart_Mcbeath_Tosh dbo:associatedMusicalArtist ?stuartAssociatedArtist . }
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?birthName WHERE {
  # Find Tisha Sterling's parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tisha .

  # Find Nat Levine's film and its actor
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .

  ?film dbo:producer ?natLevine ;
        a dbo:Film .

  ?actor dbo:actorInFilm ?film .
  
  # Get the spouse of this actor
  ?spouse dbo:spouse ?actor .

  # Retrieve the birth name of the spouse
  ?spouse foaf:name ?birthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Reed Howes""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?victorParent ?edwardParent WHERE {
  dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?victorParent .
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?edwardParent .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?war WHERE {
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  
  ?child dbo:participatedInWar ?war .
  
  OPTIONAL { ?war dbo:location dbr:Japan . }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonActor WHERE {
  # Audrey Hepburn's movies
  ?movie1 a dbo:Film ;
          dbo:starring dbr:Audrey_Hepburn .

  # Actors of ""Paradise"" (2013)
  dbr:Paradise_(2013_film) dbo:starring ?paradiseActor .

  # Common movie between Audrey Hepburn and an actor from Paradise
  ?movie2 a dbo:Film ;
          dbo:starring ?commonActor .
  
  FILTER(?movie1 = ?movie2)
  FILTER(?commonActor != dbr:Audrey_Hepburn)

  OPTIONAL { ?paradiseActor ?p ?commonActor }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?tvShow WHERE {
  # Part 1: Successor of the commander in Russo-Polish War (1654–1667)
  ?war a dbo:MilitaryConflict ;
      dbo:name ""Russo-Polish War (1654–1667)""@en .
  
  ?commander dbo:commanderOf ?war ;
             a dbo:Person .

  OPTIONAL { 
    ?successor dbo:succeededBy ?commander ;
               a dbo:Politician, dbo:OfficeHolder .
  }

  # Part 2: Television show and societal event as commander in Battle of Vienna
  ?battle a dbo:MilitaryConflict ;
          dbo:name ""Battle of Vienna""@en .

  ?tvShow a dbo:TelevisionShow, dbo:SocietalEvent ;
          dbo:commanderOf ?battle .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Military force of the war involving William Bayne
  OPTIONAL {
    ?bayneEvent a dbo:MilitaryConflict ;
                dbo:participant ?bayne .
    ?bayne foaf:name ""William Bayne""@en .
    ?bayne dbo:militaryForce ?militaryForce .
  }

  # Military force in Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_1805 dbo:militaryForce ?militaryForce .
  }

  # Commander and military force in French campaign in Egypt and Syria
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria dbo:commander dbr:Napoleon_Bonaparte ;
                                            dbo:militaryForce ?militaryForce .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfMadrid ?officeOfCommander WHERE {
  dbr:Manuel_Pinto_da_Costa a dbo:Person ;
                            dbo:officeHolder ?office ;
                            dbo:politician ?politician .
  
  OPTIONAL { ?office dbo:location dbr:Madrid . }
  OPTIONAL { ?office dbo:commander ?officeOfCommander . }

  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              dbo:participant dbr:Manuel_Pinto_da_Costa .
  }

  FILTER EXISTS { ?office dbo:location dbr:Madrid }
  FILTER EXISTS { ?office dbo:commander ?officeOfCommander }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerCollins ?producerHighSociety WHERE {
  # Find producer of Cora Sue Collins' works
  ?collins a dbo:Person ;
           foaf:name ""Cora Sue Collins""@en .
  
  ?workCollins dbo:author ?collins ;
               a dbo:CreativeWork .

  OPTIONAL { ?workCollins dbo:producer ?producerCollins . }

  # Find actor of High Society Blues and producer of their movies
  dbr:High_Society_Blues dbo:actor ?actor .
  
  ?movieHighSociety dbo:actor ?actor ;
                    a dbo:Film .

  OPTIONAL { ?movieHighSociety dbo:producer ?producerHighSociety . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Find bands Nate Newton is a member of
  ?nateNewton a dbo:Musician ;
              foaf:name ""Nate Newton""@en .
  
  ?nateBand dbo:musicalArtist ?nateNewton ;
            a dbo:MusicalArtist .

  # For each band, find associated musical artist that is an organization and a band
  OPTIONAL { ?nateBand dbo:associatedMusicalArtist ?associatedArtist . }
  
  FILTER(?associatedArtist != ?nateBand)
  FILTER(BOUND(?associatedArtist))
  
  ?associatedArtist a dbo:Organization ;
                    a dbo:MusicalArtist .

  # Find members of the associated band
  ?member a dbo:Musician ;
          dbo:musicalArtist ?associatedArtist .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find grandchildren of Alfonso VI
  {
    dbr:Alfonso_VI_of_León_and_Castile dbo:child ?childOfAlfonso .
    ?childOfAlfonso dbo:child ?grandchild .
  }
  
  UNION
  
  # Find grandchildren of Roger II
  {
    dbr:Roger_II_of_Sicily dbo:child ?childOfRoger .
    ?childOfRoger dbo:child ?grandchild .
  }
}
```",3,3,4,2,2,3,3,71,3,9,0,0.25,1.0,0.4
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the alter ego in ""The Golden Master"" series
  ?character a dbo:Character ;
             dbo:series dbr:The_Golden_Master .
  
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
  
  # Find actors associated with T.I.'s album ""What You Know""
  ?album a dbo:Album ;
         foaf:name ""What You Know""@en ;
         dbo:artist dbr:T.I. .

  OPTIONAL { ?album dbo:actor ?actor . }

  # Link the alter ego's professional role to any actor from the album
  ?alterEgo dbo:profession ?professional .
  
  FILTER(?character = ?actor)
}
```",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfFather WHERE {
  ?renée a dbo:Person ;
         foaf:name ""Renée of Bourbon""@en .
  
  OPTIONAL { ?renée dbo:spouse ?spouse . }
  
  OPTIONAL { ?child dbo:parent ?spouse .
             ?child a dbo:RoyalFamilyMember ; # Assuming royalty is represented by this class
                    dbo:father ?father . }

  OPTIONAL { ?parentOfFather dbo:child ?father . }
}
```",4,5,5,3,2,3,2,20,1,31817,0,3.1428751021434405e-05,1.0,6.285552657217385e-05
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?movie a dbo:Film ;
         foaf:name ""Nothing to Gein""@en .
  
  ?movie dbo:productionCompany ?producer .

  ?producer rdf:type dbo:Organization, foaf:Group .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        foaf:name ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  
  ?film dbo:actor ?actor .

  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .

  ?parentOfDoon dbo:child ?doonArbus .
  ?parentOfAmy dbo:child ?amyArbus .

  FILTER(?actor = ?parentOfDoon && ?actor = ?parentOfAmy)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Jamsetji_Tata dbo:work ?work .
  ?work dbo:country dbr:India .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?parentOfChild ?photographerParent WHERE {
  # Find actor of the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .

  # Identify Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  OPTIONAL { ?mariclare dbo:spouse ?spouse . }

  # Find the child of this spouse and their parent
  OPTIONAL {
    ?child dbo:parent ?spouse .
    ?parentOfChild a dbo:Person ;
                   foaf:name ?spouseName .
    FILTER(?spouse = ?parentOfChild)
  }
  
  # Identify a professional in Photography and their parent
  OPTIONAL {
    ?photographer a dbo:Photographer .
    ?photographerParent dbo:child ?photographer ;
                        foaf:name ?photographerName .
  }

}
```",6,6,7,3,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace WHERE {
  # Find Paulus Powell's birth place
  ?paulusPowell a dbo:Person ;
                foaf:name ""Paulus Powell""@en .
  
  ?paulusPowell dbo:birthPlace ?birthPlace .

  # Ensure the birth place is both a region and an administrative region
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:AdministrativeRegion .

  # Find the governor of this region who is a politician
  ?governor a dbo:Politician ;
            dbo:governs ?birthPlace .
  
  # Get the birth place of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Identify the American author of ""El Deafo""
  ?elDeafo dbr:El_Deafo ;
           dbo:author ?author .
  
  ?author a dbo:Person ;
          foaf:nationality dbr:United_States ;
          foaf:name ?authorName .

  # Get the birth place of the author
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?artist WHERE {
  dbr:What_You_Know_(T.I._song) dbo:album ?album .
  ?album dbo:artist ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:A_Picture_of_Britain dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find producer of ""Nothing to Gein"" who is part of an organization or group
  ?album a dbo:Album ;
         dbo:title ""Nothing to Gein""@en .
  
  ?producer dbo:producedBy ?album ;
            (dbo:memberOf|a) ?organization .

  # Find band members of the producer's organization/group
  ?bandMember dbo:memberOf ?organization .

  # Find associated musical artist of ""Cavalera Conspiracy""
  dbr:Cavalera_Conspiracy dbo:associatedMusicalArtist ?artist .
  
  # Check if this band member is also part of the associated musical artist
  ?bandMember dbo:memberOf|dbo:member ?artist .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:sportTeamSeason ?season .
  
  ?season dbo:season ""2007–08""@en .

  OPTIONAL { ?season dbo:coach ?manager . }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelLeaderOffice ?marianoRajoyOffice WHERE {
  # Find the party of Miguel Maura
  dbr:Miguel_Maura dbo:member ?party .
  
  # Identify the leader of that party who is a politician
  ?party dbo:leader ?leader .
  FILTER(?leader != dbr:Miguel_Maura) # Ensure it's not Miguel himself
  ?leader a dbo:Politician .

  # Get the office held by this leader
  ?leader dbo:office ?miguelLeaderOffice .

  # Find the office of Mariano Rajoy directly
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Vince_Gilligan dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  OPTIONAL { ?person dbo:positionHeld ?office . }
  
  ?administration dbo:member ?person ;
                  dbo:country dbr:Spain ;
                  dbo:politicalParty dbr:Spanish_Socialist_Workers'_Party .

}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?startYear ?endYear WHERE {
  dbr:Christian_IX_of_Denmark dbo:reign ?reign .
  ?reign dbo:startYear ?startYear ;
         dbo:endYear ?endYear .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?movie WHERE {
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer""@en .
  
  OPTIONAL { ?linda dbo:spouse ?spouse . }
  
  OPTIONAL { ?linda dbo:producer ?movie . }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  
  ?award dbo:nativePlace ?nativePlace .
  
  FILTER EXISTS { ?nativePlace a dbo:City } # Ensures it's a settlement
  FILTER EXISTS { ?nativePlace dbo:country dbr:United_States } # Ensures it's American
}
```",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentOfMary ?parentOfPatrick WHERE {
  ?mary a dbo:Person ;
        foaf:name ""Mary Elphinstone, Lady Elphinstone""@en .
  OPTIONAL { ?mary dbo:parent ?parentOfMary . }

  ?patrick a dbo:Person ;
           foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  OPTIONAL { ?patrick dbo:parent ?parentOfPatrick . }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Eric_Claptom dbo:bandMember ?member .
  ?member dbo:band ?band .
  FILTER(LANG(?label) = 'en')
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Politician ;
          dbo:birthName ""Eleonora Menicucci""@en .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthday WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marcelo Sarmiento""@en .
  ?person dbo:birthday ?birthday .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?writer ?successor WHERE {
  # Find Michał Kazimierz Pac and his role in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Paszczyński dbo:participatedIn dbr:Great_Turkish_War .

  # Identify the commander associated with Michał Kazimierz Pac during this war
  ?commander dbo:commanderOf ?force .
  ?force dbo:participatedIn dbr:Great_Turkish_War .
  
  # Find the writer of ""Always the Love Songs""
  ?writer dbo:work dbr:Always_the_Love_Songs .

  # Identify the successor who is a politician and office holder
  ?successor dbo:successorOf ?commander ;
             a dbo:Politician ;
             dbo:officeHolder ?office .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace (SAMPLE(?japanEntity) AS ?entityInJSTRegion)
WHERE {
  # Query for Chieko Asakawa's birthplace
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .

  # Find an entity in Japan related to the region of Japan Standard Time
  ?japanEntity a dbo:AdministrativeDivision ;
               dbo:country dbr:Japan .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find the parent of awardees of Commander of the Royal Victorian Order
  ?person dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order ;
          dbo:parent ?parent .

  # Find the parent of Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?derbyParent .

  # Check if there is a common parent
  FILTER(?parent = ?derbyParent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchild WHERE {
  # Béla IV of Hungary's child (parent)
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  
  # Child of the child (grandchild) who is royalty
  ?belasChild dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch . }
  
  # Parent of the father (grandparent) of Charles I of Hungary, who is royalty
  dbr:Charles_I_of_Hungary dbo:father ?charlesIFather .
  ?charlesIFather dbo:parent ?parentOfFather .
  FILTER EXISTS { ?parentOfFather a dbo:Monarch . }
  
  # Spouse of Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharles2 .

  # Linking the grandchild to the parent of the father and spouse of Charles II of Naples
  FILTER (?grandchild = ?parentOfFather)
  FILTER (?grandchild = ?spouseOfCharles2)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?tvSeries a dbo:TelevisionShow ;
            dbo:starring [ 
              foaf:name ""Richard E. Grant""@en ;
              dbo:characterName ?characterGrant .
            ] ;
            dbo:starring [ 
              foaf:name ""Lamont Cranston""@en ;
              dbo:characterName ""The Shadow""@en .
            ] .

  ?tvSeries dbo:actor ?actor .
}
```",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthPlace WHERE {
  # Part 1: Birthplace of Cece Bell, author of ""El Deafo""
  {
    ?person a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Part 2: Birthplace of an awardee related to Vince Gilligan
  {
    ?award a dbo:Award ;
           dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?birthPlace .
    
    ?gilligan a dbo:Person ;
              foaf:name ""Vince Gilligan""@en .
    ?gilligan dbo:award ?award .
  }
}
```",5,6,6,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?father WHERE {
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  ?child dbo:parent ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?smartbombBook a dbo:Book ;
                 dbo:title ""Smartbomb""@en .
  ?authorOfSmartbomb dbo:author ?smartbombBook .

  # Find the actor of ""ATL""
  dbr:ATL dbo:actor ?atlActor .

  # Identify a movie that has both individuals associated with it
  ?movie dbo:starring ?authorOfSmartbomb ;
         dbo:starring ?atlActor .
  
  # Retrieve actors of such a movie
  ?movie dbo:starring ?actor .
}
```",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  {
    # Query for The Shadow's profession
    dbr:The_Shadow dbo:profession ?professional .
  }
  UNION
  {
    # Query for Singer's profession (assuming a specific singer, e.g., ""Adele"")
    dbr:Adele dbo:profession ?professional .
  }
}
```",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tisha .

  ?parent foaf:name ?birthName .
  ?parent dbp:partyAffiliation dbr:Republican_Party_(United_States) .

  ?rogerPryor a dbo:Person ;
              foaf:name ""Roger Pryor""@en .
  
  ?parent dbo:spouse ?rogerPryor .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  dbr:Japan dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's child
  ?childFrederick a dbo:Person ;
                  dbo:parent ?parentFrederick .
  
  # Victor Stanley (Royal Navy officer) and his parent
  dbr:Victor_Stanley_(Royal_Navy_officer) dbo:parent ?parentVictor .

  # The common parent of Frederick's child and Victor Stanley
  FILTER(?parentFrederick = ?parentVictor)

  # This person is an alumnus of Eton College
  ?parentEton a dbo:Person ;
              foaf:name ?name .
  ?parentEton dbo:almaMater dbr:Eton_College .

  # The child who is a politician
  ?politicianChild a dbo:Politician ;
                   dbo:child ?parentEton .

  # We need the father of this politician
  ?father a dbo:Person ;
          foaf:name ?fatherName .
  ?politicianChild dbo:parent ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?dorothea a dbo:Person ;
            foaf:name ""Dorothea of Denmark, Electress Palatine""@en .
  
  ?dorothea dbo:parent ?parent .

  ?parent dbo:parent ?grandparent .
  
  FILTER EXISTS { ?grandparent dbo:gender dbo:Male } .

  BIND(?grandparent AS ?father)
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vitesseManager ?bochumManager WHERE {
  # Manager of SBV Vitesse in the 2020–21 season
  OPTIONAL { 
    dbr:SBV_Vitesse dbo:manager ?vitesseManager .
    FILTER EXISTS { ?vitesseManager dbo:managedTeam dbr:SBV_Vitesse . }
    FILTER EXISTS { ?vitesseManager dbo:managementStartYear ?startYear .
                    ?vitesseManager dbo:managementEndYear ?endYear .
                    FILTER(?startYear <= 2020 && ?endYear >= 2021) }
  }

  # Manager of a player from VfL Bochum in the 2007–08 season
  OPTIONAL {
    dbr:VfL_Bochum dbo:manager ?bochumManager .
    FILTER EXISTS { ?bochumManager dbo:managedTeam dbr:VfL_Bochum . }
    FILTER EXISTS { ?bochumManager dbo:managementStartYear ?startYear .
                    ?bochumManager dbo:managementEndYear ?endYear .
                    FILTER(?startYear <= 2007 && ?endYear >= 2008) }
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Olaf_I_of_Denmark dbo:reign ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:nativePlace dbr:Florida .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",3,4,4,3,1,3,3,71,0,0,59,0,0.0,0
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName ?work WHERE {
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing""@en .
  
  ?huJieqing dbo:spouse ?spouse .

  ?spouse a dbo:Writer ;
          foaf:name ?spouseName .
  
  OPTIONAL { ?spouse dbo:work ?work . }
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAwardee ?fatherOfPolitician WHERE {
  # Find Rodney Lees and his associated awards
  ?rodneyLees a dbo:Person ;
              foaf:name ""Rodney Lees""@en .
  
  OPTIONAL { 
    ?award dbo:recipient ?awardee .
    ?award dbo:associatedWith ?rodneyLees .
    ?parentOfAwardee dbo:child ?awardee .
  }
  
  # Find alumnus of Eton College
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Eton_College .
  
  OPTIONAL {
    ?politicianChild dbo:parent ?alumnus ;
                     a dbo:Politician .
    
    ?fatherOfPolitician dbo:child ?politicianChild .
  }
}
```",6,7,7,3,2,3,3,71,1,25,0,0.038461538461538464,1.0,0.07407407407407407
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalChild WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parentOfSophie .

  # From that parent, find their child who is royalty
  ?childOfParent a dbo:Monarch ;
                 dbo:parent ?parentOfSophie .
  
  # Find the child of Duke Philipp of Württemberg
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?childOfPhilipp .

  # From that child, find their child who is royalty
  ?royalChild a dbo:Monarch ;
              dbo:parent ?childOfPhilipp .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedIn ?war .
  FILTER(?war a dbo:MilitaryConflict && ?war a dbo:Event)
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
  
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .

  ?actor dbo:profession ?actorProfession .
  FILTER(?actorProfession = ?sinhaProfession)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceOfReedHowes ?actorName ?actorDeathPlace WHERE {
  # Query for Reed Howes' death place
  OPTIONAL {
    dbr:Reed_Howes dbo:deathPlace ?deathPlaceOfReedHowes .
  }

  # Query for actors of Aladdin (1958 film) and their death places
  OPTIONAL {
    dbr:Aladdin_(film)_1958 dbo:starring ?actor .
    ?actor foaf:name ?actorName .
    OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shelby Oaks""@en .
  
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbo:actedIn ?movie . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Kim_Wilson a dbo:MusicalArtist ;
                 foaf:name ""Nicholas Michael Curran""@en .
  
  OPTIONAL { dbr:Kim_Wilson dbo:bandMember ?member . }
  OPTIONAL { ?member dbo:band dbr:The_Fabulous_Thunderbirds . }

  FILTER(?band = dbr:The_Fabulous_Thunderbirds)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  dbr:Bela_IV_of_Hungary dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?leader WHERE {
  dbr:Anxo_Quintana dbo:leader ?event .
  ?event a dbo:AdministrativeRegion ;
         dbo:leader ?leader .
}
```",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Find Eugène Cattin's profession
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  
  ?eugeneCattin dbo:profession ?profession .

  # Find an actor from the movie Judgment: The Trial of Julius and Ethel Rosenberg
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en ;
         dbo:actor ?actor .

  ?actor a dbo:Person ;
         foaf:name ?actorName .

  # Link the profession to the actor if they share the same profession
  OPTIONAL { ?actor dbo:profession ?sharedProfession }
  
  FILTER(?profession = ?sharedProfession)

  # Find the parent of this linked professional (actor)
  ?actor dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfFeijoo ?countryOfQuiros ?administrationOfPSOE WHERE {
  # Office of Alberto Núñez Feijóo
  OPTIONAL { 
    dbr:Alberto_Núñez_Feijóo dbo:office ?officeOfFeijoo .
  }

  # Country of residence of Álvaro Quirós
  OPTIONAL {
    dbr:Álvaro_Quirós dbo:residence ?residence .
    ?residence a dbo:Country ;
               rdfs:label ?countryLabel .
    BIND(STR(?residence) AS ?countryOfQuiros)
  }

  # Administration of Spanish Socialist Workers' Party
  OPTIONAL {
    dbr:Spanish_Socialist_Workers'_Party dbo:administration ?administrationOfPSOE .
    FILTER(LANG(?administrationOfPSOE) = ""es"")
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Victor Stanley""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorIliza ?actorAudrey WHERE {
  # Movies with Iliza Shlesinger
  ?movieIliza a dbo:Film ;
              dbo:starring dbr:Iliza_Shlesinger .
  
  ?movieIliza dbo:starring ?actorIliza .

  # Movies with Audrey Hepburn
  ?movieAudrey a dbo:Film ;
               dbo:starring dbr:Audrey_Hepburn .
  
  ?movieAudrey dbo:starring ?actorAudrey .
}
```",4,8,5,2,2,2,3,28,1,108,0,0.009174311926605505,1.0,0.018181818181818184
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Ye_Jia dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find the producer of ""Lotus (R.E.M. song)""
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Ensure the producer is an organization and a band/group
  ?producer a dbo:Organization ;
            dbo:bandOrGroup ?bandOrGroup .
  
  # Find associated musical artists of this producer
  ?bandOrGroup dbo:associatedMusicalArtist ?artist1 .
  ?artist1 dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is also an artist
  FILTER(?associatedArtist != ?artist1)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity ?profession WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Shatrughan Sinha""@en .
    ?person dbo:profession ?profession .
  }
  
  UNION
  
  {
    dbr:The_Shadow_(video_game) dbo:alterEgo ?character .
    ?character dbo:profession ?profession .
  }

  UNION

  {
    dbr:Dispatches_from_Elsewhere dbo:actor ?actor .
    ?actor foaf:name ?entity .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?author WHERE {
  # Find the parent of Kate Dimbleby
  OPTIONAL {
    ?kate a dbo:Person ;
          foaf:name ""Kate Dimbleby""@en .
    ?kate dbo:parent ?parent .
  }

  # Find the author of A Picture of Britain
  OPTIONAL {
    ?book a dbo:Book ;
          foaf:title ""A Picture of Britain""@en .
    ?book dbo:author ?author .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?musicalArtist WHERE {
  ?cynthia a dbo:Person ;
           foaf:name ""Cynthia Morgan""@en .
  
  OPTIONAL { ?cynthia foaf:givenName ?birthName . }
  
  OPTIONAL { ?cynthia dbo:musicalArtist ?musicalArtist . }
}
```",3,3,4,3,1,3,2,20,0,1,6,0.0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  dbr:Russo-Polish_War_(1654–1667) dbo:commander ?commander .
  
  ?commander a dbo:Person ;
             dbo:politician true ;
             dbo:officeHolder true .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?spouse ?author WHERE {
  # Find Hillary Clinton's spouse
  dbr:Hillary_Clinton dbo:spouse ?spouse .

  # Find the author of ""Back to Work""
  dbr:Back_to_Work_(book) dcterms:creator ?author .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Switzerland .
}
```",1,1,2,1,1,2,3,28,906,0,0,1.0,1.0,1.0
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?movie WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Dipankar De""@en .
  
  ?movie a dbo:Film ;
         dbo:starring ?actor ;
         dcterms:subject ?subject .

  FILTER(CONTAINS(LCASE(?subject), ""indian cinema""))
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Conservative Republican Party (Spain)""@en .
  
  ?leader dbo:leader ?party ;
          dbo:office ?office .

  OPTIONAL {
    ?residence dbo:tenant ?tenant .
    ?electionEvent dbo:electedOfficeHolder ?tenant ;
                   dbo:date ""2003""^^xsd:gYear .
    FILTER(?electionEvent = dbr:2003_Madrid_City_Council_election)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find the producer(s) of ""Lotus"" by R.E.M.
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Step 2: Ensure the producer is an organization and also a band or group
  ?producer a dbo:Organization ;
            (dbo:Band | dbo:MusicalGroup) .

  # Step 3: Find associated musical artists of these producers
  ?producer dbo:associatedMusicalArtist ?artist1 .

  # Step 4: From those artists, find another associated artist
  ?artist1 dbo:associatedMusicalArtist ?finalArtist .
}
```",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceAuthor ?birthPlaceAwardee ?birthPlaceGovernor WHERE {
  # Birth place of the author of ""El Deafo""
  dbr:El_Deafo dbo:author ?author .
  ?author dbo:birthPlace ?birthPlaceAuthor .

  # Birth place of an awardee related to Vince Gilligan
  dbr:Vince_Gilligan dbo:awardRecipient ?awardee .
  ?awardee dbo:birthPlace ?birthPlaceAwardee .

  # Birth place of the governor of Virginia who is a politician
  ?governor dbo:governorOf dbr:Virginia ;
            rdf:type dbo:Politician ;
            dbo:birthPlace ?birthPlaceGovernor .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edmund Hakewill-Smith""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  dbr:Janusz_Kamiński a dbo:Person ;
                      foaf:name ""Janusz Kamiński""@en .
  
  OPTIONAL { dbr:Janusz_Kamiński dbo:award ?award . }
  
  OPTIONAL { dbr:Janusz_Kamiński dbo:spouse ?spouse . }
}
```",2,2,3,2,1,2,3,28,1,0,0,1.0,1.0,1.0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?photographer WHERE {
  ?photographer a dbo:Photographer .
  OPTIONAL { ?photographer foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,31,523,906,0.05595667870036101,0.033084311632870865,0.04158283031522468
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?athlete ?teamPlayer WHERE {
  # Find Marty Pollio's birthday
  ?marty a dbo:Person ;
         foaf:name ""Marty Pollio""@en .
  ?marty dbo:birthday ?birthday .

  # Find athletes born on the same day as Marty Pollio
  ?person a dbo:Athlete ;
          dbo:birthday ?sameBirthday .
  FILTER(?birthday = ?sameBirthday)
  
  BIND(?person AS ?athlete)

  # Find Pablo Aimar's team
  ?pablo a dbo:Person ;
         foaf:name ""Pablo Aimar""@en .
  ?pablo dbo:team ?aimarTeam .

  # Find Sergio Agüero's team
  ?sergio a dbo:Person ;
          foaf:name ""Sergio Agüero""@en .
  ?sergio dbo:team ?agueroTeam .

  # Ensure teams are the same
  FILTER(?aimarTeam = ?agueroTeam)

  # Find players in that team
  ?player a dbo:Person ;
          dbo:team ?commonTeam .
  
  BIND(?player AS ?teamPlayer)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAmy ?parentOfChild ?actorName WHERE {
  # Find the parent of Amy Arbus
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  OPTIONAL { ?amy dbo:parent ?parentOfAmy . }

  # Find the child of Allan Arbus and then that child's parent
  ?allan a dbo:Person ;
         foaf:name ""Allan Arbus""@en .
  OPTIONAL { ?allan dbo:child ?childOfAllan . }
  OPTIONAL { ?childOfAllan dbo:parent ?parentOfChild . }

  # Find the actor of a movie who is a decedent at Los Angeles
  ?movie dbo:actor ?actor ;
         a dbo:Film .
  OPTIONAL { ?actor foaf:name ?actorName . }
  OPTIONAL { ?actor dbo:decedentLocation ?location . }
  
  FILTER(?location = ""Los Angeles""@en)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?realNameOfThunderbirds WHERE {
  # Find Nicholas Michael Curran and his associated musical artists
  ?curran a dbo:MusicalArtist ;
          foaf:name ""Nicholas Michael Curran""@en .
  
  OPTIONAL { 
    ?association dbo:associatedBandOrMusicArtist ?associatedArtist .
    FILTER(?curran = ?association)
  }
  
  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds foaf:name ?realNameOfThunderbirds .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  dbr:Madrid dbo:mayor ?tenant .
}

SELECT ?office WHERE {
  dbr:Mariano_Rajoy dbo:position ?office .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Cynthia_Morgan dbo:associatedBand ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:New_York_(state) dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthName WHERE {
  # Find Tisha Sterling's parent(s)
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tisha .

  # Identify the landmark with the specified elevation
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = 20.116800000000001347)

  # Find the ruling party at this landmark
  ?rulingParty dbp:rulingPartyAt ?landmark .

  # Check if the parent is a member of the ruling party
  ?parent dbo:partyMember ?rulingParty .

  # Retrieve the birth name of the person
  ?parent foaf:name ?birthName .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity ?property dbr:Ottoman_Empire .
}
```",1,1,2,1,1,2,2,9,247,24895,0,0.00982419855222337,1.0,0.019457245263696875
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?musicalArtist WHERE {
  # Find movies/shows featuring Afeez Oyetoro
  ?movie a dbo:Film ;
         dbo:starring ?afeez .
  
  ?afeez foaf:name ""Afeez Oyetoro""@en .

  # Get the actor of this movie/show
  ?actor dbo:actedIn ?movie .

  # Find Cynthia Morgan's associated musical artist
  ?cynthia a dbo:MusicalArtist ;
           foaf:name ""Cynthia Morgan""@en .
  
  ?musicalArtist dbo:associatedWith ?cynthia .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ?name .
  
  ?book dbo:author ?person .
  ?book rdfs:label ""An Invitation to the White House""@en .

  ?person dbo:officeHolder true .
  ?person dbo:politician true .

  ?crisis dbo:commander ?person .
  ?crisis rdfs:label ""Third Taiwan Strait Crisis""@en .

  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find the actor of the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .

  OPTIONAL {
    # Find Eugène Cattin's profession
    dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
    
    # Find a parent of someone with the same profession as Eugène Cattin
    ?parentOfEugeneProfession a dbo:Person ;
                             dbo:child ?personWithSameProfession .
    FILTER(?personWithSameProfession dbo:profession = ?eugeneProfession)
  }

  OPTIONAL {
    # Find Allan Arbus's child
    dbr:Allan_Arbus dbo:child ?allanChild .

    # Find a parent of Allan Arbus's child
    ?parentOfAllanChild a dbo:Person ;
                       dbo:child ?allanChild .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person dbo:birthName ""Robert Lamar Thompson""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:profession ?profession .
  
  FILTER (
    EXISTS { ?profession rdfs:label ?label . 
             FILTER (CONTAINS(LCASE(?label), ""singer"") || CONTAINS(LCASE(?label), ""band"")) }
  )
}
```",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the country of Nicholas II's native place
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?nativeCountry .

  # Find the country of Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?birthCountry .

  # Find a person who is a decedent (child) of someone from Nicholas II's native place and born in Sandro Bertaggia's birthplace
  ?person dbo:parent ?parentOfPerson ;
          dbo:birthPlace ?birthPlace .
  
  ?parentOfPerson dbo:nativePlace ?nativePlace .
}
```",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Conservative_Republican_Party_(Spain) dbo:leader ?leader .
  
  ?leader a dbo:Politician ;
          dbo:positionHeld ?office .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?birthplace WHERE {
  # Find the movie with Dipankar De and ensure it's Indian
  ?actor a dbo:Actor ;
         foaf:name ""Dipankar De""@en .
  
  ?actor dbo:actedIn ?movie .
  
  ?movie dbo:country dbr:India .

  # Get the birthplace of Ebrahim Alkazi
  OPTIONAL {
    dbr:Ebrahim_Alkazi dbo:birthPlace ?birthplace .
  }
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war ?entityInBirthplace WHERE {
  # Find Koichirō and his associated war
  ?koichiro a dbo:Person ;
            foaf:name ""Koichirō""@en .
  OPTIONAL { ?koichiro dbo:participatedIn ?war . }

  # Find Yamaza Enjirō's birthplace and entities related to it
  ?yamaza a dbo:Person ;
          foaf:name ""Yamaza Enjirō""@en .
  ?yamaza dbo:birthPlace ?birthPlace .

  OPTIONAL { ?entityInBirthplace a dbo:Entity ;
                               dbo:location ?birthPlace . }
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""pacely""))
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person foaf:givenName ?givenName . }

  FILTER(BOUND(?birthName) || BOUND(?givenName))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?organisation WHERE {
  ?organisation a dbo:Organization ;
                rdfs:label ""Hong Kong C""@en .
  FILTER EXISTS { ?organisation a dbo:SportsClub . }
  FILTER EXISTS { ?organisation a dbo:SportsTeam . }
  FILTER EXISTS { ?organisation a dbo:SoccerClub . }
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  dbr:Central,_Louisiana dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
  ?rulingParty dbo:member ?partyMember .
}
```",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work a dbo:Book ;
        dbo:author ?author .
  
  ?author dbo:residence dbr:Chappaqua,_New_York ;
          (dbo:officeHolder|a) dbo:Politician .

  ?war a dbo:Disease, dbo:SocietalEvent ;
       dbo:commander ?author .

  ?owner a dbo:Person ;
         dbo:owns dbr:USS_Arcadia_(ID-1605) .
  
  FILTER(?author = ?owner)
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?anxo a dbo:Person ;
        foaf:name ""Anxo Quintana""@en .
  
  ?administrationEvent a dbo:Event ;
                       dbo:leader ?anxo ;
                       dbo:positionHeld ?office .

  ?citizen a dbo:Person ;
           dbo:nationality dbr:Spain ;
           dbo:residenceCountry dbr:Spain .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?youngkinBirthPlace ?awardAwardeeBirthPlace WHERE {
  # Birth place of Glenn Youngkin
  dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .

  # A specific award received by Vince Gilligan (e.g., Emmy)
  OPTIONAL {
    ?gilliganAward a dbo:Award ;
                   dbo:recipient dbr:Vince_Gilligan .
    ?awardAwardee dbo:recipient ?gilliganAward .
    ?awardAwardee dbo:birthPlace ?awardAwardeeBirthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find Janet Gaynor's notable works where she was an actor
  ?work dbo:actor dbr:Janet_Gaynor ;
        dbo:productionCompany ?company .

  # Identify producers of those works
  ?work dbo:producer ?producer .

  # Check if the producer also produced ""The Adventures of Tom Sawyer (1938 film)""
  OPTIONAL { 
    dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royParty ?entityInColombia ?fatherName ?fatherParty WHERE {
  # Roy Barreras' party and related entity in Colombia
  ?roy a dbo:Person ;
       foaf:name ""Roy Barreras""@en .
  
  OPTIONAL { ?roy dbo:party ?royParty . }
  
  OPTIONAL { ?roy dbo:memberOf ?entityInColombia . 
             FILTER(STRSTARTS(STR(?entityInColombia), STR(dbr:))) } # Assuming entity is a DBpedia resource

  # Sofía Petro's father and his party
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  
  OPTIONAL { ?sofia dbo:parent ?father . 
             ?father foaf:name ?fatherName . }
  
  OPTIONAL { ?father dbo:party ?fatherParty . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?parent WHERE {
  dbr:A_Picture_of_Britain dbo:author ?author .

  ?person a dbo:Artist ;
          dbo:musicalArtist true ;
          foaf:nationality dbr:London .
  
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?actor WHERE {
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  # Find individuals with profession Actor
  ?person a dbo:Person ;
          dbo:profession dbr:Actor .
  BIND(?person AS ?actor)
}
```",3,3,4,2,2,3,3,71,0,0,4210,0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence WHERE {
  ?person a dbo:Person ;
          dbo:country dbr:Spain .
  
  ?person dbo:residence ?residence .
  
  FILTER(?residence != dbr:Spain) # Exclude Spain itself as the residence
  ?residence a dbo:Country .
}
```",2,4,3,2,1,3,3,71,0,6,5,0.0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  { 
    ?bob a dbo:Musician ;
         foaf:name ""Bob Thompson""@en .
    OPTIONAL { ?bob dbo:musicalBand ?band . }
  }

  UNION

  {
    ?person a dbo:Person ;
            foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""the shadow""))
    OPTIONAL { ?person dbo:profession ?profession . }
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfChild WHERE {
  # Ferdinand III, Holy Roman Emperor and his child
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child1 .
  
  # Cecilia Renata of Austria and her father's child
  dbr:Cecilia_Renata_of_Austria dbo:parent ?fatherOfCeciliaRenata .
  ?fatherOfCeciliaRenata dbo:child ?child2 .

  # The common child between Ferdinand III and the father of Cecilia Renata
  FILTER(?child1 = ?child2)

  # Find the father of this common child
  ?commonChild dbo:parent ?fatherOfChild .
  
  # Ensure that the commander in the Thirty Years' War is related as described
  OPTIONAL { ?commanderInWar dbo:commanderInWar dbr:Thirty_Years_War . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parent .
  
  ?parent dbo:child ?child .
  
  FILTER EXISTS { 
    ?child a dbo:RoyalFamilyMember . 
  }
  
  BIND(?child AS ?royalChild)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather WHERE {
  ?naod a dbo:Person ;
        foaf:name ""Na'od""@en .
  
  ?naod dbo:parent ?father .
  ?father dbo:parent ?grandfather .

  FILTER EXISTS { ?grandfather dbo:royalty . }
  FILTER EXISTS { ?grandfather dbo:officeHolder . }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?shadowProfession ?bobThompsonProfession ?producerProfession WHERE {
  # The Shadow's alter ego, Lamont Cranston
  ?lamont a dbo:Person ;
          foaf:name ""Lamont Cranston""@en .
  OPTIONAL { ?lamont dbo:profession ?shadowProfession . }

  # Bob Thompson (musician)
  ?bobThompson a dbo:MusicArtist ;
               foaf:name ""Bob Thompson""^^xsd:string .
  OPTIONAL { ?bobThompson dbo:profession ?bobThompsonProfession . }

  # Producer of Coke Studio Philippines
  ?producer a dbo:Person ;
            dbo:occupation ""Producer""@en ;
            dbo:workLocation dbr:Coke_Studio_Philippines .
  OPTIONAL { ?producer dbo:profession ?producerProfession . }
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER(?birthName = ""Linda Bruckheimer"")
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?warMilitaryForce WHERE {
  # Military force of the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryForce ?battleMilitaryForce .

  # Find a military conflict related to William Bayne
  ?bayneEvent a dbo:MilitaryConflict ;
              dbo:agent ?bayne .
  
  FILTER(CONTAINS(LCASE(?bayne), ""william bayne""))

  OPTIONAL { ?bayneEvent dbo:militaryForce ?warMilitaryForce }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfSantiago ?countryOfResidence ?officeOfFeijoo WHERE {
  # Tenant of Santiago de Compostela
  OPTIONAL { 
    dbr:Santiago_de_Compostela dbo:tenant ?tenantOfSantiago .
  }
  
  # Country of residence for Álvaro Quirós
  OPTIONAL {
    dbr:Álvaro_Quirós dbo:residenceLocation ?residence ;
                     dbo:country ?countryOfResidence .
  }

  # Office of Alberto Núñez Feijóo
  OPTIONAL {
    dbr:Alberto_Núñez_Feijóo dbo:office ?officeOfFeijoo .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child ?predecessor WHERE {
  {
    ?sawShweKhet a dbo:Person ;
                 foaf:name ""Saw Shwe Khet""@en .
    ?sawShweKhet dbo:child ?child .
    OPTIONAL { ?child dbo:predecessor ?predecessor . }
  } UNION {
    ?sawMinHla a dbo:Person ;
               foaf:name ""Saw Min Hla""@en .
    ?sawMinHla dbo:child ?child .
    OPTIONAL { ?child dbo:predecessor ?predecessor . }
  }
}
```",3,3,4,2,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity WHERE {
  ?yandamuri a dbo:Person ;
             foaf:name ""Yandamuri Veerendranath""@en .
  ?yandamuri dbo:birthPlace ?entity .

  ?chennupati a dbo:Person ;
              foaf:name ""Chennupati Jagadish""@en .
  ?chennupati dbo:almaMater ?entity .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerVitesse ?managerBochum ?nativeCountry WHERE {
  # Manager of SBV Vitesse for the 2020-21 season
  dbr:SBV_Vitesse dbo:manager ?managerVitesse .

  # Manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?managerBochum .

  # Leader of West Germany (Chancellor) and their native country
  {
    SELECT ?leader ?nativeCountry WHERE {
      ?leader a dbo:Politician ;
              dbo:country dbr:West_Germany ;
              dbo:nationality ?nationality .
      ?nationality foaf:name ?nativeCountry .
    }
  }

  # Ensure the manager of VfL Bochum is from the same country as the leader's native country
  FILTER(?managerBochum = ?leader)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?establishmentDate ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci""@en ;
          dbo:birthday ""1955-12-02""^^xsd:date .
  
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
  
  # Assuming establishment date is related to alma mater
  OPTIONAL { ?almaMater dbo:foundingDate ?establishmentDate . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # For Johnny Doughboy
  dbr:Johnny_Doughboy dbo:actor ?actor1 .
  
  OPTIONAL { 
    ?work1 dbo:creator ?actor1 ;
           dbo:producer ?producer1 .
  }
  
  # For High Society Blues
  dbr:High_Society_Blues dbo:actor ?actor2 .
  
  OPTIONAL {
    ?work2 dbo:creator ?actor2 ;
           dbo:producer ?producer2 .
  }

  # Find common producer if any
  FILTER(?producer1 = ?producer2)
  BIND(?producer1 AS ?producer)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war ?entity WHERE {
  ?ventiris a dbo:Person ;
            foaf:name ""Konstantinos Ventiris""@en .
  
  ?zervas a dbo:Person ;
          foaf:name ""Napoleon Zervas""@en .

  ?ventiris dbo:participatedIn ?war .
  ?zervas dbo:participatedIn ?war .

  OPTIONAL { ?entity dbo:location dbr:Athens . }
  OPTIONAL { ?entity dbo:participatedIn ?war . }

  FILTER(?entity != ?ventiris && ?entity != ?zervas)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Find bands associated with Eric Clapton's band members
  ?claptonBandMember dbo:bandMember ?ericClapton .
  ?ericClapton a dbo:Person ;
               foaf:name ""Eric Clapton""@en .

  ?claptonBandMember dbo:band ?band .

  # Find individuals with persona as Nick Curran who are musical artists
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran""@en .
  
  OPTIONAL { ?nickCurran dbo:birthPlace ?birthPlace . }

  # Find associated musical artists of these individuals
  ?nickCurran dbo:associatedMusicalArtist ?associatedArtist .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas""@en .
  
  ?georgeDucas dbo:commanderOf dbr:Great_Turkish_War .

  OPTIONAL { ?work dbo:author ?writer . }
  OPTIONAL { ?work dbo:subject ?georgeDucas . }

  FILTER(?georgeDucas = ?work)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparphil
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseOfGrandparent WHERE {
  # Step 1: Identify Philip, Despot of Romania's parent (father) who is royalty
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  OPTIONAL { ?philip dbo:child ?parentOfPhilip . }
  FILTER EXISTS { ?parentOfPhilip dbo:royaltyStatus ?royaltyStatus } # Ensure parent is royalty

  # Step 2: Identify the father's parent (grandparent) who is royalty
  OPTIONAL { ?parentOfPhilip dbo:child ?grandparentOfPhilip . }
  FILTER EXISTS { ?grandparentOfPhilip dbo:royaltyStatus ?royaltyGrandparentStatus }

  # Step 3: Get the spouse of this grandparent
  OPTIONAL { ?grandparentOfPhilip dbo:spouse ?spouseOfGrandparent . }

  # Step 4: Identify Maria of Bytom's spouse
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  OPTIONAL { ?maria dbo:spouse ?spouseOfMaria . }
  
  # Step 5: Find the spouse's parent (father) who is royalty
  OPTIONAL { ?spouseOfMaria dbo:child ?parentOfSpouse . }
  FILTER EXISTS { ?parentOfSpouse dbo:royaltyStatus ?royaltyStatus2 }

  # Step 6: Identify the father's parent (grandparent) who is royalty
  OPTIONAL { ?parentOfSpouse dbo:child ?grandparentOfSpouse . }
  FILTER EXISTS { ?grandparentOfSpouse dbo:royaltyStatus ?royaltyGrandparentStatus2 }

  # Step 7: Get the spouse of this grandparent
  OPTIONAL { ?grandparentOfSpouse dbo:spouse ?spouseOfGrandparent2 . }

  # Ensure both paths lead to the same individual
  FILTER(?spouseOfGrandparent = ?spouseOfGrandparent2)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Little Hat Jones""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",2,3,3,2,1,2,2,9,0,1,63421,0.0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Cat_Country dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  OPTIONAL { ?person dbo:birthName ""Linda Bruckheimer""@en . }
  OPTIONAL { ?person dbo:filmProduction dbr:12_Strong . }
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,4,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Amy Arbus""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?administration WHERE {
  dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
  OPTIONAL { ?mayor dbo:administration ?administration . }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?writer WHERE {
  # Part 1: Find the commander associated with Jean Baptist, Comte d'Arco in a war that is both a TV show and societal event
  ?person a dbo:Person ;
          foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  ?war a dbo:War ;
       dbo:hasPart ?tvShow ;
       dbo:hasPart ?societalEvent .

  ?tvShow a dbo:TelevisionSeries .
  ?societalEvent a dbo:SocietalEvent .

  ?person dbo:commanderOf ?war .
  ?war dbo:commander ?commander .

  # Part 2: Find the writer of the work related to George Ducas
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas""@en .

  ?work dbo:author ?writer ;
        dbo:creator ?georgeDucas .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?child .
  
  FILTER(?child a dbo:Royalty)
  
  ?child dbo:parent ?parent .
  
  FILTER(?parent a dbo:Royalty && ?parent a dbo:Noble)
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?helena a dbo:Person ;
          foaf:name ""Helena of Austria""@en .
  
  OPTIONAL { ?helena dbo:spouse ?spouse . }
  
  OPTIONAL { ?child dbo:parent ?spouse ;
                   a dbo:RoyalFamilyMember ; # Assuming royalty is represented by this class
                   dbo:title ?title . }

  OPTIONAL { ?predecessor dbo:successor ?child . }
}
```",4,5,5,3,2,3,3,71,1,244198,0,4.095020864131303e-06,1.0,8.19000819000819e-06
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find the child of Roger II and Elvira
  dbr:Roger_II_of_Sicily dbo:child ?child .
  dbr:Elvira_of_Castile_Queen_of_Sicily dbo:child ?child .

  # Identify the parent of this child
  ?child dbo:parent ?parentOfChild .

  # Ensure that this parent is a royalty
  ?parentOfChild a dbo:RoyalFamilyMember .

  # Find the child of this royal parent (the grandchild)
  ?parentOfChild dbo:child ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?professional WHERE {
  # Part 1: Actor of the album ""Urban Legend"" by T.I.
  OPTIONAL {
    dbr:Urban_Legend dbo:albumOfSong dbr:What_You_Know_(T.I._song) .
    dbr:Urban_Legend dbo:contributor ?actor .
  }

  # Part 2: Professional associated with the alter ego ""The Shadow""
  OPTIONAL {
    dbr:The_Shadow a dbo:FictionalCharacter ;
                   dbo:alterEgoOf ?professional .
  }
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bobby Shmurda""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  dbr:Baeda_Maryam_I dbo:father ?father .
}

UNION

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty WHERE {
  ?johnMcDermott a dbo:Artist ;
                  foaf:name ""John McDermott""@en .
  
  ?johnMcDermott dbo:deathPlace ?deathPlace .

  ?deathPlace a dbo:Settlement .

  ?settlementRulingParty dbp:rulingParty ?rulingParty .
  FILTER(?deathPlace = ?settlement)

  ?rulingParty a dbo:PoliticalParty ;
               a dbo:Organization .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?location WHERE {
  ?location a dbo:PopulatedPlace ;
            dbo:country dbr:United_Kingdom .
}
```",1,3,2,1,1,3,2,20,6,25803,0,0.0002324770428920144,1.0,0.0004648460197559558
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonPlayer ?pabloAimarTeam WHERE {
  # Find players associated with Juan Carlos Molina
  ?molina a dbo:Person ;
          foaf:name ""Juan Carlos Molina""@en .
  ?molina dbo:playsFor ?teamMolina .

  # Find players associated with Sergio Agüero
  ?aguero a dbo:Person ;
          foaf:name ""Sergio Agüero""@en .
  ?aguero dbo:playsFor ?teamAgüero .

  # Identify common player(s) between Molina and Agüero
  ?commonPlayer dbo:playsFor ?teamMolina ;
                dbo:playsFor ?teamAgüero .

  # Find the team of Pablo Aimar
  ?pabloAimar a dbo:Person ;
              foaf:name ""Pablo Aimar""@en .
  ?pabloAimar dbo:playsFor ?pabloAimarTeam .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?movie a dbo:Film ;
         dbo:actor dbr:Richard_E._Grant ;
         dbo:actor dbr:Shatrughan_Sinha .
  
  OPTIONAL { ?movie dbo:televisionSeries . }
}
```",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?deathPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Carolyn Jones""@en .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  } UNION
  { 
    ?film dbo:actor ?actor ;
          foaf:name ""Aladdin (1958 film)""@en .
    ?actor a dbo:Person ;
           foaf:name ""Tony Curtis""@en .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  } UNION
  {
    ?person a dbo:Person ;
            foaf:name ""Reed Howes""@en .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }
}
```",4,4,5,2,3,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frédéric Bouraly""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Retrieve Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthDate ?birthdate .

  # Find persons who are both soccer players and managers with the same birthdate
  ?person a dbo:SoccerPlayer ;
          dbo:soccerManager true ;
          dbo:birthDate ?birthdate .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hashiba Hidekatsu""@en .
  
  OPTIONAL { 
    ?person dbo:participatedIn ?war .
  }
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?resident WHERE {
  # Find regions using Eastern European Time
  ?region dbo:timeZone dbr:Eastern_European_Time .

  # Find settlements in these regions
  ?settlement a dbo:Settlement ;
              dbo:locatedIn ?region .

  # Get residents of these settlements
  ?resident dbo:residence ?settlement .
}
```",2,3,3,2,1,3,2,20,0,0,159,0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actress""))
}
```",1,1,2,1,1,3,2,20,0,0,19241,0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Renée of Bourbon""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?book WHERE {
  ?work a dbo:Book ;
        dbo:author dbr:Hillary_Clinton .
  
  OPTIONAL { ?work dbo:writtenWork ?writtenWork . }
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hillary Clinton""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?album a dbo:MusicalAlbum ;
         foaf:name ""The Live Anthology""@en .
  
  ?writer dbo:writerOf ?album ;
          a dbo:MusicalArtist .

  ?pacely a dbo:MusicalArtist ;
          foaf:name ""Pacely""@en .
  
  ?pacely dbo:associatedMusicalArtist ?associatedArtist .
  
  FILTER(?writer = ?associatedArtist)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Yeshaq_I dbo:parent ?parent .
  
  FILTER EXISTS { ?parent a dbo:RoyalFamily . }
  
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Emilia Yancheva Valeva""@en .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?herchel .
  
  ?herchel foaf:name ""Herschel Bernardi""@en .

  ?parent a dbo:Person ;
          foaf:name ?name ;
          dbo:child dbr:Doon_Arbus, dbr:Amy_Arbus .

  ?movie dbo:starring ?actor .
  
  FILTER(?actor != ?herchel)
}
```",4,5,5,2,3,3,3,71,0,46,1,0.0,0.0,0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?song a dbo:Songs ;
        foaf:name ""What You Know""@en ;
        dbo:artist dbr:T.I. .
  
  ?song dbo:album ?album .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfMary ?parentOfPatrick ?birthPlace WHERE {
  # Find the parent of Mary Elphinstone, Lady Elphinstone
  ?mary a dbo:Person ;
        foaf:name ""Mary Elphinstone""@en .
  ?mary dbo:parent ?parentOfMary .

  # Find the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  ?patrick a dbo:Person ;
           foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?patrick dbo:parent ?parentOfPatrick .

  # Find the birthplace of William Gayner that is both a region and a country
  ?william a dbo:Person ;
           foaf:name ""William Gayner""@en .
  ?william dbo:birthPlace ?birthPlace .
  
  FILTER(?birthPlace a dbo:Region && ?birthPlace a dbo:Country)
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  
  ?child dbo:child ?edward .
  
  ?parent dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Japan .
}
```",1,1,2,1,1,3,2,20,8916,0,0,1.0,1.0,1.0
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfHidenaga ?warOfChild WHERE {
  # Wars of Toyotomi Hidenaga
  dbr:Toyotomi_Hidenaga dbo:participatedIn ?warOfHidenaga .

  # Child of Toyotomi Hideyoshi
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  
  # Wars involving the child of Toyotomi Hideyoshi
  ?child dbo:participatedIn ?warOfChild .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Battle_of_Vienna dbo:participatedIn ?battle .
  ?battle dbo:participant ?force .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Rainer_Weiss dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?tracy a dbo:Person ;
         foaf:name ""Amasa Tracy""@en .
  
  ?tracy dbo:participatedIn ?war .

  OPTIONAL { 
    ?charleston a dbo:Place ;
                foaf:name ""Charleston, South Carolina""@en .
    
    ?war dbo:location ?charleston .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby and his children
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .
  
  # Check if the child is a politician or office holder
  OPTIONAL { ?child dbo:officeHolder ?office . }
  FILTER(?office != NULL)
  
  # Find the parent of this child
  ?child dbo:parent ?parent .

  # Identify Arthur Stanley and his father
  dbr:Arthur_Stanley_(politician) dbo:father ?arthurFather .
  
  # Check if the identified parent is also the father of Arthur Stanley
  FILTER(?parent = ?arthurFather)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?writer WHERE {
  ?apacheIndian a dbo:MusicalArtist ;
                foaf:name ""Apache Indian""@en .
  
  ?work dbo:musicalArtist ?apacheIndian ;
        a dbo:MusicalWork .

  OPTIONAL { ?work dbo:lyricist ?writer . }
  OPTIONAL { ?work dbo:composer ?writer . }

  FILTER(?writer != ?apacheIndian)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?spouse WHERE {
  # Find works by Bill Clinton that are books
  ?work dbo:author dbr:Bill_Clinton ;
        a dbo:Book .

  # Identify the specific work ""An Invitation to the White House"" and its author
  OPTIONAL { 
    ?invitation a dbo:Book ;
                foaf:name ""An Invitation to the White House""@en .
    ?invitation dbo:author ?author .
  }

  # Check if this author has a spouse who is both a politician and an office holder
  OPTIONAL {
    ?author dbo:spouse ?spouse .
    FILTER EXISTS { ?spouse a dbo:Politician . }
    FILTER EXISTS { ?spouse a dbo:OfficeHolder . }
  }
}
```",4,9,5,2,2,3,3,71,1,5140,0,0.00019451468585878233,1.0,0.0003889537145079735
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionOfShatrughanSinha ?movie WHERE {
  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?professionOfShatrughanSinha .

  # Find movies where both actors participated
  ?movie dbo:starring dbr:Shatrughan_Sinha ;
         dbo:starring dbr:Richard_E._Grant .

  # Filter for television shows
  ?movie dbo:genre dbr:Television_show .
}
```",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?finalChild WHERE {
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  
  OPTIONAL { ?constance dbo:spouse ?spouse . }
  
  OPTIONAL { ?royalChild dbo:child ?spouse . 
             FILTER(STRSTARTS(LCASE(?royalChild), ""http://dbpedia.org/resource/"") && 
                    EXISTS { ?royalChild a dbo:Monarch } ) }

  OPTIONAL { ?finalChild dbo:child ?royalChild .
             ?rogerII a dbo:Person ;
                      foaf:name ""Roger II of Sicily""@en .
             FILTER(?finalChild = ?rogerIIChild) }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Gustavo_Petro dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,6,0,0,1.0,1.0,1.0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?officeOfMarianoRajoy ?tenantOfAlbertoRuizGallardonResidence ?officeOfLeaderOfPartyOfMiguelMaura WHERE {
  # Mariano Rajoy's office
  ?marianoRajoy a dbo:Person ;
                foaf:name ""Mariano Rajoy""@en .
  OPTIONAL { ?marianoRajoy dbo:office ?officeOfMarianoRajoy . }

  # Tenant of Alberto Ruiz-Gallardón's residence
  ?albertoRuizGallardon a dbo:Person ;
                        foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?albertoRuizGallardon dbo:residence ?residenceOfAlberto . }
  OPTIONAL { ?tenant a dbo:resident ?residenceOfAlberto . }

  # Leader's office of the party associated with Miguel Maura
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .
  OPTIONAL { ?miguelMaura dbo:member ?party . }
  OPTIONAL { ?leader a dbo:leader ?party . }
  OPTIONAL { ?leader dbo:office ?officeOfLeaderOfPartyOfMiguelMaura . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childOfSawMinHla ?royalSpouse WHERE {
  ?sawMinHla a dbo:Person ;
             foaf:name ""Saw Min Hla""@en .
  
  ?sawMinHla dbo:child ?childOfSawMinHla .

  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .

  ?myatHponePyo dbo:parent ?fatherOfMyatHponePyo .
  
  OPTIONAL { ?fatherOfMyatHponePyo dbo:spouse ?royalSpouse }.
  
  FILTER(?royalSpouse a dbo:Monarch)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  {
    # Find Sam Concepcion's profession
    dbr:Sam_Concepcion dbo:profession ?professional .
  }
  UNION
  {
    # Find the alter ego of The Shadow and its associated professional
    dbr:The_Shadow dbo:alterEgo ?character .
    ?character dbo:profession ?professional .
  }
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Isabella_of_Austria dbo:parent ?father .
  ?father a dbo:Person .

  OPTIONAL { 
    dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?father .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  dbr:Alexander_of_W%C3%BCrttemberg dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?professionalRole ?singerRole ?bandRole WHERE {
  # Query for The Shadow's alter ego and its professional role
  dbr:The_Shadow dbo:pseudonym ?alterEgo .
  ?alterEgo a dbo:Person ;
            dbo:profession ?professionalRole .

  # Query for Bob Thompson (musician) as singer and band member
  dbr:Bob_Thompson_(musician) dbo:profession ?singerRole ;
                              dbo:singerInBand ?bandRole .
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfEdward ?fatherOfPoliticianChild WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?parentOfEdward .
  
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician .

  ?politicianChild dbo:parent ?fatherOfPoliticianChild .
  
  FILTER(?parentOfEdward = ?fatherOfPoliticianChild)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Aleksandr_Filimonov dbo:member ?team .
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Find child of Saw Shwe Khet
  ?childShweKhet dbo:parent dbr:Saw_Shwe_Khet ;
                 a dbo:Person .

  # Find child of Saw Min Hla
  ?childMinHla dbo:parent dbr:Saw_Min_Hla ;
               a dbo:Person .

  # Find father of Myat Hpone Pyo and their spouse who is royalty
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?fatherOfMyatHponePyo dbo:child ?myatHponePyo ;
                        a dbo:Person .

  OPTIONAL { ?spouseOfFather dbo:spouse ?fatherOfMyatHponePyo ;
                            a dbo:Royalty . }

  # Find predecessor of the spouse who is royalty
  OPTIONAL { ?predecessor dbo:successor ?spouseOfFather ;
                         a dbo:Royalty }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?militaryForce WHERE {
  # For William Bayne
  {
    ?bayne a dbo:Person ;
           foaf:name ""William Bayne""@en .
    ?war dbo:militaryConflictParticipant ?bayne ;
         a dbo:MilitaryConflict .
    ?war dbo:militaryForce ?militaryForce .
  }
  
  UNION
  
  # For Robert Calder
  {
    ?calder a dbo:Person ;
            foaf:name ""Robert Calder""@en .
    ?event dbo:eventParticipant ?calder ;
           a dbo:SocietalEvent .
    ?event dbo:militaryForce ?militaryForce .
  }
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Leader of the 2003 Madrid City Council election
  ?leader a dbo:Politician ;
          dbo:electedAsLeaderOf dbr:Madrid_City_Council_Election_2003 .
  
  OPTIONAL { 
    ?leader foaf:holdsOffice ?office1 .
    ?office1 dbo:tenant ?tenant .
  }
  
  # Commander in the Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:roleInEvent dbr:Central_African_Republic_Civil_War .
  
  OPTIONAL { 
    ?commander foaf:holdsOffice ?office2 .
    ?office2 dbo:tenant ?tenant .
  }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:givenName ""Linda""@en . }
  OPTIONAL { ?person dbo:birthName ""Linda Sue Cobb""@en . }
}
```",1,1,2,1,1,3,2,20,0,1048576,1,0.0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hashiba Hidekatsu""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfMargarete ?grandChildOfAlexander ?greatGrandChildOfAlexander WHERE {
  # Find child of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?childOfMargarete .

  # Trace three generations down from Alexander of Württemberg (1804-1881)
  dbr:Aleksander_W%C3%BCrttemberg_1804-1881 dbo:child ?childOfAlexander .
  ?childOfAlexander dbo:child ?grandChildOfAlexander .
  ?grandChildOfAlexander dbo:child ?greatGrandChildOfAlexander .

  # Find predecessor of Carl, Duke of Württemberg
  dbr:Carl,_Duke_of_W%C3%BCrttemberg dbo:predecessor ?predecessor .

  # Ensure the great-grandchild matches with the predecessor
  FILTER(?greatGrandChildOfAlexander = ?predecessor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?suvorov a dbo:MilitaryPerson ;
           foaf:name ""Alexander Suvorov""@en .
  
  ?suvorov dbo:participatedIn ?war .
  
  ?war dbo:location dbp:Poland .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  ?person a dbo:Person ;
          dbo:profession/dbo:Photographer ;
          dbo:profession/dbo:Actor .
  
  ?film dbo:starring ?person ;
        foaf:name ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .

  ?person dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query 1: Band members of Uncle Murda
SELECT ?bandMember WHERE {
  ?uncleMurda a dbo:MusicalArtist ;
              foaf:name ""Uncle Murda""@en .
  ?uncleMurda dbo:bandMember ?bandMember .
}

# Query 2: Person born in Florida with matching birth name and connection to Coro de la Pontificia Universidad Católica de Puerto Rico
SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:birthday ?birthday ;
          foaf:name ?name .
  
  ?floridaPerson a dbo:Person ;
                 foaf:birthPlace dbr:Florida ;
                 foaf:name ?name .
  
  ?coro a dbo:CulturalEvent ;
        dbo:location dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
        dbo:participant ?person .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Aleksandr_Suvorov a dbo:MilitaryPerson ;
                        dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?miguelOffice ?commanderOffice WHERE {
  # Find Miguel Maura's office
  ?miguel a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  OPTIONAL { ?miguel dbo:office ?miguelOffice . }

  # Find the commander related to Central African Republic Civil War
  ?commander a dbo:Person ;
             dbo:role ?warRole .
  FILTER(CONTAINS(LCASE(STR(?warRole)), ""central african republic civil war""))
  OPTIONAL { ?commander dbo:office ?commanderOffice . }

  # Ensure both are office holders and politicians
  ?miguel dbo:politician ?pol1 .
  ?commander dbo:politician ?pol2 .

  # Find the leader of the 2003 Madrid City Council election
  ?leader a dbo:Person ;
          dbo:electedAsLeaderOf ?madridElection .
  FILTER(STRSTARTS(STR(?madridElection), ""http://dbpedia.org/resource/2003_Madrid_City_Council_election""))

  # Find the tenant of the leader's residence
  ?leaderResidence a dbo:Residence ;
                   dbo:tenant ?tenant .
  OPTIONAL { ?tenant foaf:name ?tenantName . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  dbr:Philip_I,_Prince_of_Taranto dbo:parent ?father .
  ?father dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:National_Party_of_Greece dbo:leader ?leader .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor ?decedent WHERE {
  # Find the predecessor of Ada Watson
  ?ada a dbo:Person ;
       foaf:name ""Ada Watson""@en .
  OPTIONAL { ?ada dbo:predecessor ?predecessor . }

  # Find Mark Tournier's birthplace and ensure it is a settlement
  ?mark a dbo:Person ;
        foaf:name ""Mark Tournier""@en .
  ?mark dbo:birthPlace ?birthPlace .

  FILTER (?birthPlace rdf:type dbo:Settlement)

  # Identify a decedent at the birthplace of Mark Tournier
  OPTIONAL { ?decedent dbo:decedentAt ?birthPlace . }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?monarch ?office WHERE {
  # Find the current monarch of Spain
  ?country a dbo:Country ;
           foaf:name ""Spain""@en .
  
  OPTIONAL { 
    ?country dbo:monarch ?monarch . 
  }
  
  # Find the office held by Alberto Núñez Feijóo
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  OPTIONAL {
    ?person dbo:office ?office .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Color_Me_Dead dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Roger Pryor""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildFather WHERE {
  # Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Child of the spouse (first child)
  ?spouse dbo:child ?child .

  # Grandchild (child of the first child) who is royalty
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch . } 

  # Reference to William I who is royalty and an office holder
  dbr:William_I dbo:reference ?reference .
  FILTER EXISTS { 
    ?reference a dbo:Monarch ;
               dbo:officeHolder ?office .
  }

  # Child of the reference (second child) who is royalty
  ?reference dbo:child ?secondChild .
  FILTER EXISTS { ?secondChild a dbo:Monarch . }

  # Father of this second child
  ?secondChild dbo:parent ?grandchildFather .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:soccerManager true ;
          dbo:birthDate ""1979-11-03""^^xsd:date .
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?person .

  OPTIONAL { ?person dbo:team ?team . }
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?commanderRole WHERE {
  # Identify George Pickett as a person in DBpedia
  dbr:George_Pickett a dbo:Person .

  # Find his membership in the Republican Party (United States)
  OPTIONAL { 
    dbr:George_Pickett dbo:member ?partyMember .
    FILTER(?partyMember = dbr:Republican_Party_(United_States))
  }

  # Identify his role as a commander in a war
  OPTIONAL {
    dbr:George_Pickett dbo:commanderOf ?warEvent .
    ?warEvent a dbo:MilitaryConflict ;
              dbo:type dbr:Societal_event .
    BIND(?warEvent AS ?commanderRole)
  }
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find actors in the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .
  
  # Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  OPTIONAL { ?mariclare dbo:spouse ?spouse . }
  
  # Identify the child of this spouse
  ?child dbo:parent ?spouse .
  
  # Determine the parent of that child (should be the same as the spouse)
  ?parentOfChild a dbo:Person ;
                 foaf:name ?spouseName .
  FILTER(?spouse = ?parentOfChild)
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    dbr:Ebrahim_Alkazi a dbo:Person ;
                       dbo:birthPlace ?birthPlace .
    BIND(dbr:Ebrahim_Alkazi AS ?person)
  }
  UNION
  {
    dbr:Utpal_Dutt a dbo:Person ;
                   dbo:birthPlace ?birthPlace .
    BIND(dbr:Utpal_Dutt AS ?person)
  }
}
```",3,3,4,2,2,3,2,20,2,7,0,0.2222222222222222,1.0,0.3636363636363636
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?stuartArtist ?billyArtist WHERE {
  # Find band members of The Alan Parsons Project
  dbr:The_Alan_Parsons_Project dbo:bandMember ?bandMember .

  # Find associated musical artist for Stuart McBeath Tosh
  OPTIONAL {
    ?stuart a dbo:Person ;
            foaf:name ""Stuart McBeath Tosh""@en .
    ?stuart dbo:birthPlace ?birthPlace .
    ?artist dbr:MusicalArtist ; 
            dbo:associatedBandMember ?stuart .
    FILTER(?stuart = ?artist)
  }

  # Find associated musical artist for Billy Lyall
  OPTIONAL {
    ?billy a dbo:Person ;
           foaf:name ""Billy Lyall""@en .
    ?billy dbo:birthPlace ?birthPlace .
    ?artist dbr:MusicalArtist ; 
            dbo:associatedBandMember ?billy .
    FILTER(?billy = ?artist)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rulingParty WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevation ""20.1168""^^xsd:float .
  
  ?landmark dbo:locatedInCountry ?country .

  ?country dbo:rulingParty ?rulingParty .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInCharleston ?forceOfAwardee ?warOfAmasaTracy WHERE {
  # Entity in Charleston, South Carolina
  ?entityInCharleston dbo:location dbr:Charleston,_South_Carolina ;
                      a dbo:Place .

  # Awardee of Gillmore Medal and their force
  ?awardee dbo:award dbr:Gillmore_Medal ;
           dbo:militaryForce ?forceOfAwardee .

  # War associated with Amasa Tracy
  ?amasaTracy dbo:soldierInWar ?warOfAmasaTracy .
  FILTER(STR(?amasaTracy) = ""Amasa_Tracy""@en)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  OPTIONAL { 
    dbr:Golden_Sword_for_Bravery dbo:recipient ?recipient .
  }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Robert Lamar Thompson""@en .
  ?person dbo:musicalArtist true .
  OPTIONAL { ?person dbo:band ?band . }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:SoccerManager ;
          dbo:team dbr:Hong_Kong_C_Team .
  
  ?yeJia a dbo:Team ;
         foaf:name ""Ye Jia""@en .

  ?playerInYeJia a dbo:Player ;
                  dbo:playsFor ?yeJia ;
                  foaf:name ?personName .

  FILTER(?person = ?playerInYeJia)
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan_Standard_Time dbo:timeZone ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?profession WHERE {
  # Find the band associated with Robert Lamar Thompson (The Shadow)
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Robert Lamar Thompson""@en .
    ?person dbo:member ?band .
  }

  # Find the profession of Sam Concepcion
  OPTIONAL {
    ?sam a dbo:Person ;
         foaf:name ""Sam Concepcion""@en .
    ?sam dbo:profession ?profession .
  }
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?managerName ?team WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .
  
  ?person foaf:name ?managerName .

  ?person dbo:manager ?team .
  
  ?team a dbo:SoccerClub .
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?bandName WHERE {
  # Query for Nick Curran's associated musical artist
  ?nickCurran a dbo:Musician ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:associatedBand ?associatedArtist . }

  # Query for Kim Wilson's band real name
  ?kimWilson a dbo:Musician ;
             foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?kimWilson dbo:band ?bandResource . }
  OPTIONAL { ?bandResource foaf:name ?bandName . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:Uncle_Murda a dbo:MusicalArtist .
  OPTIONAL { dbr:Uncle_Murda dbo:bandMember ?bandMember . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find Lamont Cranston, the alter ego of The Shadow
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  
  ?lamontCranston dbo:alterEgoOf ?shadow ;
                  foaf:name ""Lamont Cranston""@en .

  # Find actors associated with Lamont Cranston
  ?actor a dbo:Actor ;
         dbo:actedIn ?lamontCranston .

  # Identify TV shows featuring Richard E. Grant
  ?tvShow dbo:starring ?richardEGrant .
  ?richardEGrant foaf:name ""Richard E. Grant""@en .
  
  FILTER(?tvShow dbo:type dbr:Television_Show)

  # Ensure the actor is in the same profession as Shatrughan Sinha
  ?shatrughanSinha a dbo:Actor ;
                  foaf:name ""Shatrughan Sinha""@en .

  FILTER(?actor = ?shatrughanSinha)
}
```",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?deathPlace WHERE {
  {
    ?salMineo a dbo:Person ;
              foaf:name ""Sal Mineo""@en .
    ?salMineo dbo:deathPlace ?deathPlace .
    BIND(""Sal Mineo"" AS ?personName)
  }
  UNION
  {
    ?carolynJones a dbo:Person ;
                  foaf:name ""Carolyn Jones""@en .
    ?carolynJones dbo:deathPlace ?deathPlace .
    BIND(""Carolyn Jones"" AS ?personName)
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Identify books written by Hillary Clinton
  ?work a dbo:Book ;
        dbo:author dbr:Hillary_Clinton .

  # Find her spouse who is also a politician and an office holder
  OPTIONAL { 
    ?clinton dbo:spouse ?spouse .
    FILTER EXISTS { ?spouse a dbo:Politician . }
    FILTER EXISTS { ?spouse a dbo:OfficeHolder . }
    
    # Check if this person was a commander during the Third Taiwan Strait Crisis
    OPTIONAL {
      ?commanderRole dbo:agent ?spouse ;
                     dbo:place dbr:Third_Taiwan_Strait_Crisis .
      FILTER EXISTS { ?commanderRole a dbo:MilitaryCommander . }
    }
  }
}
```",4,8,5,3,2,3,3,71,1,3057,0,0.0003270111183780249,1.0,0.0006538084341288004
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  dbr:Gillmore_Medal dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:militaryRank ?rank . }
  OPTIONAL { ?awardee dbo:memberOf ?force . }
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tisha .

  ?parent foaf:name ?birthName .
}
```",3,3,4,3,1,3,3,71,0,3,3,0.0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Human_Remains (dbo:bandMember|dbo:member) ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?dappyProfession ?fuseAssociatedArtist WHERE {
  # Dappy's professional role
  ?dappy a dbo:Person ;
         foaf:name ""Dappy""@en .
  OPTIONAL { ?dappy dbo:profession ?dappyProfession . }

  FILTER(?dappyProfession IN (dbo:Musician, dbo:Person))

  # Fuse ODG's associated musical artist
  ?fuse a dbo:Person ;
        foaf:name ""Fuse ODG""@en .
  OPTIONAL { ?fuse dbo:associatedMusicalArtist ?fuseAssociatedArtist . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the alter ego of The Shadow
  ?shadow a dbo:Person ;
          foaf:name ""The Shadow""@en .
  
  OPTIONAL { ?shadow dbo:alterEgo ?alterEgo . }
  
  # Find an album by T.I. that is both a song and a musical work
  dbr:T.I. dbo:album ?album .
  ?album a dbo:SongsAlbum ;
         dbo:title ?title .

  # Find actors from Shelby Oaks
  dbr:Shelby_Oaks dbo:actor ?shelbyActor .
  
  # Check if there's an actor common to all these entities
  OPTIONAL { ?alterEgo foaf:name ?actorName . }
  OPTIONAL { ?album dbo:performer ?performer . }
  FILTER(?alterEgo = ?performer)
  FILTER(?shelbyActor = ?performer)

  BIND(?performer AS ?actor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?nativePlace WHERE {
  # Find band members of Uncle Murda
  dbr:Uncle_Murda dbo:bandMember ?bandMember .

  # Identify the native place related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativePlace ?nativePlace .
  
  FILTER(?nativePlace IN (dbr:Puerto_Rico, dbr:San_Juan_(Puerto_Rico)))
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:George_Ducas dbo:work ?work .
  ?work dbo:author ?writer .
}
```",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Ducas""@en .
  OPTIONAL { ?person dbo:work ?work . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  ?person dbo:residence ?residence .
  FILTER(?residence a dbo:Country)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Find the commander in the Siege of Mukha who is royalty
  ?commander a dbo:Person ;
             dbo:memberOf ?siegeEvent ;
             dbo:title ?royaltyTitle .
  
  ?siegeEvent rdfs:label ""Siege of Mukha""@en .

  # Identify The Shadow's alter ego and his connection to Baeda Maryam I
  ?alterEgo a dbo:Person ;
            foaf:name ?shadowAlterEgoName ;
            dbo:child ?baedaMaryamI .
  
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .

  # Find the parent of this alter ego who is royalty
  ?parent a dbo:Person ;
          dbo:child ?alterEgo ;
          dbo:title ?royaltyTitle .

  # Retrieve the child of that royal parent
  ?parent dbo:child ?child .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Identify Grant Heslov
  dbr:Grant_Heslov a dbo:Actor ;
                   foaf:name ""Grant Heslov""@en .

  # Find the TV show ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga a dbo:TelevisionShow .

  # Find characters in ""Ab Kya Hoga"" who are politicians
  ?character dbo:partOf dbr:Ab_Kya_Hoga ;
             dbo:profession dbr:Politician .

  # Identify the actor of that character
  ?actor dbo:actor ?character .
  
  FILTER(?actor = dbr:Grant_Heslov)
}
```",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
    BIND(""Cece Bell"" AS ?name)
  }
  
  UNION
  
  {
    ?governor a dbo:Politician ;
              dbo:officeHolder dbr:Governor_of_Virginia .
    ?governor foaf:name ?name .
    ?governor dbo:birthPlace ?birthPlace .
  }
}
```",3,4,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  # Find the writer of Wizards of Waverly Place (soundtrack)
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:composer ?writer .

  # Ensure this person is a musical artist and an artist
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .

  # Check if the writer is also a member of The Alan Parsons Project
  OPTIONAL { ?writer dbo:member dbr:The_Alan_Parsons_Project . }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Maria_Anna_of_Bavary_(1574) dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?alumnus dbo:alumni dbr:Eton_College ;
           dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Politician }
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?band ?reference WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthdate ;
          dbo:associatedBandMember ?bandMember .
  
  ?bandMember foaf:name ""Nicholas Michael Curran""@en .

  FILTER(?birthdate = ""1945-03-30""^^xsd:date)

  ?person dbo:memberOfBand ?band .

  OPTIONAL {
    ?band dbr:The_Fabulous_Thunderbirds .
  }

  OPTIONAL {
    ?reference dbo:relatedBand ?band ;
               foaf:name ""The Fabulous Thunderbirds""@en .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme ?native WHERE {
  # Identify the city using its nicknames
  VALUES ?city { 
    dbr:Lahore 
  }
  
  ?city dbo:nickname ?nickname .
  FILTER(?nickname IN (""The Heart of Pakistan"", ""Paris of the East"", ""City of Gardens"", ""City of Literature""))
  
  # Find themes associated with the city
  OPTIONAL {
    ?theme a dbo:Theme ;
           dbo:associatedWith ?city ;
           rdfs:label ?themeLabel .
    FILTER(CONTAINS(LCASE(?themeLabel), ""dikhawa""))
  }
  
  # Identify notable natives from the city
  OPTIONAL {
    ?native dbo:nativePlace ?city ;
            a dbo:Person .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:SBV_Vitesse dbo:season ?season .
  FILTER(CONTAINS(LCASE(STR(?season)), ""2020–21""))
  ?season dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Find Manuel Pinto da Costa
  ?manuel a dbo:Person ;
          foaf:name ""Manuel Pinto da Costa""@en .

  # Identify the military conflict (force) he was involved in
  ?conflict a dbo:MilitaryConflict, dbo:SocietalEvent .
  
  # Link Manuel to the conflict
  ?manuel dbo:commanderOf ?conflict .

  # Find the commander who is an office holder and a politician
  ?commander a dbo:Person ;
             dbo:officeHolder true ;
             dbo:politician true .
             
  # Ensure this commander was involved in the same conflict
  ?commander dbo:commanderOf ?conflict .
}
```",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?office WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Conservative Republican Party (Spain)""@en .
  
  ?politician dbo:memberOf ?party ;
              dbo:holdsPublicOffice ?office .

  OPTIONAL { 
    ?ruizGallardon dbo:residence ?residence .
    ?office dbo:location ?residence .
  }

  OPTIONAL {
    ?marianoRajoy dbo:holdsPublicOffice ?rajoyOffice .
    FILTER(?office = ?rajoyOffice)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfPrincessSara ?parentOfRoyalChild WHERE {
  dbr:Princess_Sara_bint_Faisal dbo:parent ?parentOfPrincessSara .

  dbr:Prince_Faisal_bin_Hussein dbo:child ?royalChild .
  FILTER (?royalChild a dbo:Royalty) .

  ?royalChild dbo:parent ?parentOfRoyalChild .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?deathPlace WHERE {
  dbr:Color_Me_Dead dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country WHERE {
  ?dawid a dbo:Person ;
         foaf:name ""Dawid Olejniczak""@en .
  
  ?dawid dbo:residence ?location .
  
  ?location a dbo:Country ;
            foaf:name ?country .
}
```",2,3,3,2,1,3,2,20,0,0,108,0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?childParent WHERE {
  # Find The Shadow as alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Identify Yeshaq I and his child Baeda Maryam I
  dbr:Isaac_I_of_Abyssinia dbo:child ?baedaMaryamI .
  ?baedaMaryamI a dbo:Person ;
                dbo:parent dbr:Isaac_I_of_Abyssinia .

  # Find the parent of Baeda Maryam I who is royalty
  OPTIONAL { ?baedaMaryamI dbo:parent ?childParent }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOffice ?commanderOffice WHERE {
  # Leader of Conservative Republican Party (Spain)
  ?party a dbo:PoliticalParty ;
         foaf:name ""Conservative Republican Party (Spain)""@en .
  
  OPTIONAL { 
    ?leader a dbo:Politician ;
            dbo:office ?leaderOffice ;
            dbo:memberOf ?party .
  }
  
  # Tenant of the residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
  OPTIONAL { 
    ?tenant a dbo:Person ;
            dbo:residence ?residence ;
            ?leaderOffice ?office .
  }
  
  # Commander in Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:office ?commanderOffice ;
             dbo:militaryCommanderIn ?war .
             
  FILTER(?war = dbr:Civil_War_in_the_Central_African_Republic_(2012–present))
  
  # Ensure the leader is also the tenant
  FILTER(?leader = ?tenant)
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childOfChild WHERE {
  dbr:Béla_IV_of_Hungary dbo:child ?belasChild .
  
  ?belasChild a dbo:Monarch .

  ?belasChild dbo:child ?childOfChild .

  dbr:Charles_Martel_of_Anjou dbo:parent ?charlesParent .

  ?charlesParent a dbo:Monarch .

  dbr:Philip_Despot_of_Romania dbo:parent ?philipParent .
  
  ?philipParent a dbo:Monarch .

  ?philipParent dbo:father ?philipsFather .
  ?philipsFather dbo:spouse ?spouseOfPhilipsFather .

  FILTER(?childOfChild = ?charlesParent)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?alvaroQuirós a dbo:Person ;
                foaf:name ""Álvaro Quirós""@en .
  
  ?alvaroQuirós dbo:residenceLocation ?residence .
  ?residence a dbo:Country .

  OPTIONAL { 
    ?psoe a dbo:Organization ;
          foaf:name ""Spanish Socialist Workers' Party""@en .
    
    ?alvaroQuirós dbo:memberOfParty ?psoe .
    ?alvaroQuirós dbo:positionHeld ?position .
    FILTER(CONTAINS(LCASE(?position), ""administration""))
  }
}
```",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query to find a professional in any field
SELECT DISTINCT ?person ?profession WHERE {
  ?person a dbo:Person ;
          dbo:profession ?profession .
}

# Query to find professionals specifically identified as actors
SELECT DISTINCT ?actor WHERE {
  ?actor a dbo:Person ;
         dbo:profession dbr:Actor .
}
```",2,2,3,1,2,3,3,71,0,0,4210,0,0.0,0
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find the actor associated with ""1,000 Dollars a Minute""
  ?film dbo:title ""1,000 Dollars a Minute""@en .
  ?actor dbo:actedIn ?film ;
         foaf:name ?actorName .

  # Identify the landmark by its geographical coordinates
  ?landmark dbp:elevation ""20.116800000000001347""^^xsd:float ;
            geo:lat ?latitude ;
            geo:long ?longitude .
  
  # Find the ruling party in the location of the landmark
  ?location dbo:isPartOf ?country .
  ?party dbo:country ?country ;
         dbp:rulingParty ""true""^^xsd:boolean .

  # Check if the actor is a member of this ruling party
  ?actor foaf:mbox ?email .
  ?membership dbo:member ?actor ;
              dbo:organization ?party .

  # Find the spouse of the actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerArtist WHERE {
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:composer ?writerArtist .
  ?writerArtist a dbo:MusicalArtist .
}
```",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kim Wilson""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp-owl: <http://dbpedia.org/ontology/owl-s#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?nativeOfBirthplace ?nativeOfJamshedpur WHERE {
  # Find Shobhna Samarth's birthplace
  ?shobhna a dbo:Person ;
           foaf:name ""Shobhna Samarth""@en .
  
  ?shobhna dbo:birthPlace ?birthplace .

  # Check if the birthplace is a country
  ?birthplace rdf:type dbp-owl:Country .

  # Find native of the birthplace (country)
  ?nativeOfBirthplace dbo:nativeOf ?birthplace .

  # Find Jamshedpur's associated country
  dbr:Jamshedpur dbo:locatedIn ?jamshedpurCountry .
  
  # Check if the associated place is a country
  ?jamshedpurCountry rdf:type dbp-owl:Country .

  # Find native of Jamshedpur (country)
  ?nativeOfJamshedpur dbo:nativeOf ?jamshedpurCountry .
}
```",3,4,4,2,2,2,2,9,0,0,22,0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete information.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Grant Heslov""@en .
  
  ?movie rdf:type dbo:Film ;
         dbo:starring ?person .
  
  OPTIONAL { ?movie rdf:type dbo:TelevisionShow . }
}
```",5,6,6,3,3,3,3,71,0,6,9,0.0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Michał Kazimierz Pac's role in Battle of Vienna
  dbr:Micahel_Kazimierz_Pac dbo:commanderInMilitaryConflict dbr:Battle_of_Vienna .
  
  # Successor who is a politician and office holder
  OPTIONAL { ?successor dbo:successorOf dbr:Micahel_Kazimierz_Pac . }
  FILTER EXISTS { ?successor a dbo:Politician . }
  FILTER EXISTS { ?successor a dbo:OfficeHolder . }

  # Successor's role in another context described as both a television show and societal event
  OPTIONAL { ?successor dbo:commanderInMilitaryConflict ?warEvent . }
  FILTER EXISTS { ?warEvent a dbo:TelevisionShow . }
  FILTER EXISTS { ?warEvent a dbo:SocietalEvent . }
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandOfKimWilson ?associatedArtistOfNickCurran WHERE {
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  
  OPTIONAL { 
    ?kimWilson dbo:bandMember ?bandOfKimWilson .
    FILTER(?bandOfKimWilson = <http://dbpedia.org/resource/The_Fabulous_Thunderbirds>)
  }
  
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .

  OPTIONAL {
    ?nickCurran dbo:associatedBandMember ?associatedArtistOfNickCurran .
  }

}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?stuartToshBand ?billyLyallArtist WHERE {
  OPTIONAL {
    ?stuartTosh a dbo:Person ;
                foaf:name ""Stuart Tosh""@en .
    ?stuartTosh dbo:associatedBand ?stuartToshBand .
  }
  
  OPTIONAL {
    ?billyLyall a dbo:Person ;
                foaf:name ""Billy Lyall""@en .
    ?billyLyall dbo:associatedBand ?billyLyallArtist .
  }
}
```",3,3,4,1,3,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandfather WHERE {
  ?naod a dbo:Person ;
        foaf:name ""Na'od""@en .
  
  ?naod dbo:parent ?fatherOfNaod .
  
  ?fatherOfNaod a dbo:Royalty ;
                dbo:officeHolder ?office .

  ?commander a dbo:Person ;
             dbo:eventParticipation [dbo:event dbr:Siege_of_Mukha] ;
             foaf:name ?commanderName .
  
  ?parentOfCommander dbo:child ?commander ;
                     a dbo:Royalty .
  
  ?fatherOfNaod dbo:parent ?grandfather .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?member WHERE {
  dbr:Mudvayne dbo:bandMember ?member .
  ?member a dbo:Person ;
          foaf:name ?name .
}
```",1,1,2,1,1,3,2,20,1,3,4,0.25,0.2,0.22222222222222224
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Maria_I_of_Portugal dbo:associatedWith ?force .
  
  ?force a ?type1 .
  FILTER(?type1 IN (dbr:TelevisionShow, dbr:MilitaryConflict))
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # William I of Sicily and his child who is royalty
  dbr:William_I_of_Sicily dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch . }

  # Constance of Burgundy's spouse who is royalty
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse a dbo:Monarch . }

  # Child of the above-mentioned spouse (who is royalty)
  ?spouse dbo:child ?grandChild .

  # The father of this grand child
  ?grandChild dbo:parent ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Helena, Archduchess of Austria""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER EXISTS { ?spouse a ?royaltyType . 
                 VALUES ?royaltyType { 
                   dbo:Monarch 
                   dbo:RoyalFamilyMember
                 } 
               }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeRegion WHERE {
  ?person a dbo:Person ;
          foaf:name ""French Montana""@en ;
          dbo:birthName ""Ackquille Jean Pollard"" ;
          dbo:memberOfBand dbr:Uncle_Murda .

  ?award dbo:recipient ?person .
  
  ?award dbo:nativeRegion ?nativeRegion .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en .
  ?movie dbo:title ""1,000 Dollars a Minute""@en ;
         dbo:starring ?person .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?calderMilitaryForce ?bayneWar WHERE {
  # Find an event involving Robert Calder that is both a general and societal event
  ?event dbo:agent dbr:Robert_Calder ;
         rdf:type dbo:Event, dbo:SocietalEvent .
  
  # Determine the military force associated with this event for Robert Calder
  OPTIONAL { ?event dbo:militaryForce ?calderMilitaryForce . }
  
  # Find a war involving William Bayne during the French campaign in Egypt and Syria
  ?bayneWar dbo:agent dbr:William_Bayne ;
            rdf:type dbo:MilitaryConflict, dbo:Event .
  
  # Ensure this war is part of the French campaign in Egypt and Syria
  ?campaign dbo:participatedIn ?bayneWar ;
            rdfs:label ""French campaign in Egypt and Syria""@en .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:athlete true ;
          foaf:name ?name .
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?person .

  ?teamMember a dbo:SoccerPlayer ;
              foaf:name ""Juan Carlos Molina""@en .
  
  ?playerTeam dbo:member ?teamMember ;
              dbo:member ?person .

  ?manager a dbo:SoccerManager ;
           dbo:soccerPlayer true ;
           dbo:birthday ""1979-11-03""^^xsd:date ;
           foaf:name ?name .

  FILTER(?person = ?manager)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Ackquille Jean Pollard""@en .
  ?person dbo:nativePlace dbr:Florida .
  
  ?associatedArtist dbo:musicalArtist ?person .
  ?bobbyShmurda dbo:bandMember ?associatedArtist .
  dbr:Bobby_Shmurda a dbo:MusicalArtist .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?uncleMurda a dbo:MusicalArtist ;
              foaf:name ""Uncle Murda""@en .
  
  ?bandMember dbo:bandMemberOf ?uncleMurda ;
              dbo:nativePlace dbr:Florida ;
              a dbo:MusicalArtist .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find the actor in ""Rustlers' Rhapsody""
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .

  # Find the actor who played The Shadow
  ?shadowActor a dbo:Person ;
               foaf:name ?name .
  OPTIONAL { ?shadowActor dbo:alterEgo dbr:The_Shadow . }
  
  FILTER(?actor = ?shadowActor)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Cavalera_Conspiracy dbo:bandMember ?member .
}
```",2,3,3,2,1,3,2,20,1,1,88,0.5,0.011235955056179775,0.021978021978021976
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfShelbyOaks ?artistOfAlbum WHERE {
  # Find actors of Shelby Oaks
  dbr:Shelby_Oaks dbo:starring ?actorOfShelbyOaks .

  # Find the album associated with ""What You Know (T.I. song)""
  dbr:What_You_Know_(T.I._song) dbo:songInAlbum ?album .
  
  # Find artists of that album
  ?album dbo:artist ?artistOfAlbum .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Find Jean Baptist, Comte d'Arco
  ?jeanBaptist a dbo:Person ;
               foaf:name ""Jean Baptist, Comte d'Arco""@en .

  # Find Yurii Khmelnytsky and his successor
  ?yuriiKhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en .
  OPTIONAL { ?successor dbo:succeededBy ?yuriiKhmelnytsky . }

  # Find George Ducas and the writer of his work
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas""@en .
  OPTIONAL { ?work dbo:author ?writer .
             ?work dbo:subject ?georgeDucas . }

  # Commander in a television show and societal event related to Jean Baptist, Comte d'Arco
  OPTIONAL { ?jeanBaptist dbo:commanderIn ?tvShow ;
                          dbo:commanderIn ?societalEvent .
              FILTER(?tvShow != ?societalEvent) }

  # Link the commander with the successor of Yurii Khmelnytsky and the writer of George Ducas's work
  OPTIONAL { ?successor foaf:name ?commanderName }
  OPTIONAL { ?writer foaf:name ?commanderName }

  FILTER(?jeanBaptist != ?yuriiKhmelnytsky && ?jeanBaptist != ?georgeDucas)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:National_Party_of_Greece dbo:leader ?leader .
  ?leader foaf:name ""Ioannis Metaxas""@en .
  ?leader dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  
  ?edward dbo:child ?child .

  ?child dbo:alumnusOf dbr:Eton_College ;
         a dbo:Politician .

  ?parent dbo:child ?edward .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:12_Strong dbo:producer ?producer .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Janusz_Kamiński dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild ?predecessor ?childOfArchduchess WHERE {
  # Find the child of Duke Philipp of Württemberg
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?firstChild .
  
  # Find the child of that first child (i.e., the grandchild)
  ?firstChild dbo:child ?childOfChild .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?secondChild .
  
  # Find the predecessor (parent) of that second child
  ?predecessor dbo:child ?secondChild .

  # Find the child of Archduchess Margarete Sophie of Austria
  dbr:Archduchess_Margarete_Sophie_of_Austria dbo:child ?childOfArchduchess .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Commander for ""The Triple X's""
  OPTIONAL {
    ?tripleX a dbo:MilitaryUnit ;
             dbo:commander ?commander .
  }

  # Commander for the Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_1805 dbo:commander ?commander .
  }

  # War involving William Bayne and its commander
  OPTIONAL {
    ?bayne a dbo:MilitaryPerson ;
           foaf:name ""William Bayne""@en ;
           dbo:servedInMilitaryConflict ?war .
    ?war dbo:commander ?commander .
  }
}
```",6,10,7,3,3,3,3,71,0,1462,1,0.0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?athlete WHERE {
  # Find Marty Pollio's birthday
  ?marty a dbo:Person ;
         foaf:name ""Marty Pollio""@en .
  ?marty dbo:birthday ?birthday .

  # Find athletes with the same birthday as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthday ?birthday .

  # Find Pablo Aimar's team
  ?pablo a dbo:Person ;
         foaf:name ""Pablo Aimar""@en .
  ?pablo dbo:team ?team .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person ;
          dbo:country dbr:Spain ;
          foaf:nationality dbr:Spanish_people .
}
```",1,2,2,1,1,3,3,71,0,0,1550,0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .
  
  ?child dbo:parent ?spouse .
  
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Los_Angeles ;
            dbo:dateOfDeath ?dateOfDeath .
  
  ?decedent dbo:child ?child .
  
  ?movie a dbo:Film ;
         dbo:actor ?decedent .
  
  ?decedent foaf:name ?actorName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAwardee ?parentOfChild WHERE {
  # Find awards associated with Rodney Lees
  ?award dbo:recipient ?awardee .
  ?lees dbo:award ?award .
  FILTER(STRSTARTS(LCASE(?lees), ""rodney lees""))

  # Get the parent of the awardee
  ?awardee dbo:parent ?parentOfAwardee .

  # Find children of Frederick Stanley, 16th Earl of Derby
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  # Get the parent of the child
  ?child dbo:parent ?parentOfChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?otherPerson WHERE {
  ?frédéricBouraly a dbo:Person ;
                   foaf:name ""Frédéric Bouraly""@en .
  
  ?frédéricBouraly dbo:profession ?profession .

  ?otherPerson a dbo:Person ;
               foaf:name ?name ;
               dbo:profession ?profession .
  
  FILTER(?frédéricBouraly != ?otherPerson)
}
```",2,2,3,2,1,2,3,28,0,0,21580,0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?film a dbo:Film ;
        dbo:character ""The Shadow""@en .
  
  ?film dbo:actor ?actor .
  
  ?actor a dbo:Actor ;
         foaf:name ?name .
}
```",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Nashi_parni dbo:castMember ?actor .
  FILTER(CONTAINS(LCASE(?actorLabel), ""aleksandr filimonov""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Governor of Virginia
  ?governor a dbo:Politician ;
            dbo:officeHolder dbr:Governor_of_Virginia .
  OPTIONAL { ?governor dbo:birthPlace ?governorBirthPlace . }

  # Vince Gilligan's awards and nominations
  dbr:Vince_Gilligan dbo:award ?award .
  ?awardee dbo:recipientOf ?award ;
           dbo:birthPlace ?awardeeBirthPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfAwardee ?fatherOfPoliticianChild WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # Find children who are politicians
  ?child a dbo:Person ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))

  # Identify the father of these politician children (should be Frederick Stanley)
  ?fatherOfPoliticianChild dbo:child ?child .

  # Identify awardees of Commander of the Royal Victorian Order
  ?awardee a dbo:Person ;
           dbo:honorReceived dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Find parents of these awardees
  OPTIONAL { ?parentOfAwardee dbo:child ?awardee . }

  # Ensure the father of politician children is Frederick Stanley
  FILTER(?fatherOfPoliticianChild = dbr:Fredrick_Stanley,_16th_Earl_of_Derby)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Clinton""@en .
  
  OPTIONAL { 
    ?person dbo:spouse dbr:Hillary_Clinton . 
  }
  
  OPTIONAL { 
    ?person dbo:officeHolderOf dbr:Chappaqua,_New_York . 
  }
  
  OPTIONAL {
    ?person dbo:authorOfBook ?book .
  }

  OPTIONAL {
    ?crisis dbo:commander ?person ;
            foaf:name ""Third Taiwan Strait Crisis""@en .
  }
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Thirty_Years'_War dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:William_Bayne_(Royal_Navy_officer) dbo:participatedIn ?war .
  
  ?war a dbo:MilitaryConflict ;
       a dbo:Event .
}
```",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Charles_Parsons_(British_Army_officer) dbo:award ?award .
}
```",2,2,3,2,1,2,2,9,0,0,98450,0,0.0,0
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?emilia a dbo:Person ;
          foaf:name ""Emilia""@en .
  OPTIONAL { ?emilia dbo:bandMember ?bandMember . }
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfCharlesMartel ?spouseOfCharlesII WHERE {
  dbr:Charles_Martel_of_Anjou dbo:parent ?parentOfCharlesMartel .
  
  OPTIONAL { ?parentOfCharlesMartel foaf:name ?parentName . }
  
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .
  
  OPTIONAL { ?spouseOfCharlesII foaf:name ?spouseName . }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country WHERE {
  # Find the athlete from Łódź who is Polish
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź .

  # Get the residence of this athlete
  OPTIONAL { ?athlete dbo:residence ?residence . }

  # Find countries involved in Alexander Suvorov's wars
  ?suvorovWar dbo:commander dbr:Aleksandr_Suvorov ;
             dbo:location ?warLocation .

  # Get the country of the war location
  OPTIONAL { ?warLocation dbo:country ?country . }

  # Ensure the residence is in one of these countries
  FILTER(?residence = ?warLocation)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find the actor of the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg dbo:starring ?actor .
  
  # Ensure this actor is also a parent of Doon Arbus
  ?parentOfDoon a dbo:Person ;
                foaf:name ""Doon Arbus""@en .
  ?parentOfDoon dbo:parent ?actor .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeOfLeader ?officeOfCommander WHERE {
  # Part 1: Office of the Leader of the Party of Miguel Maura
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .
  
  ?miguelMaura dbo:party ?party .
  
  ?leader a dbo:Person ;
          dbo:office ?officeOfLeader ;
          dbo:leader ?party .

  # Part 2: Office of the Commander in the Central African Republic Civil War
  ?war a dbo:Event ;
      foaf:name ""Central African Republic Civil War""@en .
  
  ?commander a dbo:Person ;
             dbo:office ?officeOfCommander ;
             dbo:commander ?war .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?movie WHERE {
  ?doonArbus a dbo:Person ;
              foaf:name ""Doon Arbus""@en .
  
  ?doonArbus dbo:parent ?parent .

  ?actor a dbo:Actor ;
         dbo:actedIn ?movie .

  ?decedent a dbo:Deceased ;
            dbo:location ?location .

  FILTER(?location = <http://dbpedia.org/resource/Los_Angeles>)

  ?decedent foaf:name ?actorName .
  
  FILTER(STR(?actorName) = STR(?actor))

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?birthPlace WHERE {
  # Vince Gilligan's award awardee
  {
    ?award a dbo:Award ;
           dbo:recipient ?awardee .
    ?gilligan dbo:creatorOf ?work .
    FILTER(CONTAINS(LCASE(STR(?work)), ""breaking bad""))
    OPTIONAL { ?awardee dbo:birthPlace ?birthPlace }
  }

  # Author of El Deafo
  {
    dbr:C._E._Bell dbo:birthPlace ?birthPlace .
  }

  # Glenn Youngkin
  {
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?roger a dbo:Person ;
         foaf:name ""Roger Pryor""@en .
  
  OPTIONAL { ?roger dbo:spouse ?spouse . }
  
  ?spouse foaf:name ?name .
  
  FILTER(?name = ""Ann Sothern""@en)
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Afeez Oyetolo""@en .
  
  ?film a dbo:Film ;
        dbo:actor ?person .

  ?film rdfs:label ?movie .
  FILTER(LANG(?movie) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Residence of Alberto Ruiz-Gallardón
  ?person a dbo:Person ;
          foaf:name ""Alberto Ruiz-Gallardón""@en .
  
  OPTIONAL { ?person dbo:residence ?residence . }
  
  OPTIONAL { ?residence dbo:tenant ?tenant . }

  # Leader of the Conservative Republican Party (Spain)
  ?party a dbo:PoliticalParty ;
         foaf:name ""Conservative Republican Party (Spain)""@en .

  OPTIONAL { ?party dbo:leader ?leader . }
  
  FILTER(?leader a dbo:Politician)

  OPTIONAL { ?office dbo:location ?leaderOffice . }

  OPTIONAL { ?leaderOffice dbo:tenant ?tenant . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""$pacely""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
    BIND(""Vince Gilligan"" AS ?personName)
  } UNION
  { 
    ?author a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
    BIND(""Cece Bell"" AS ?personName)
  } UNION
  { 
    ?politician a dbo:Person ;
                foaf:name ""Glenn Youngkin""@en .
    OPTIONAL { ?politician dbo:birthPlace ?birthPlace . }
    BIND(""Glenn Youngkin"" AS ?personName)
  }
}
```",5,6,6,3,3,3,3,71,1,3,0,0.25,1.0,0.4
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Picketts_Charge dbo:participatedIn ?battle .
  ?battle dbo:militaryUnit ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # Ensure the native place of the award is an American settlement
  ?award dbo:nativePlace ?nativePlace .
  FILTER (STRSTARTS(STR(?nativePlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?nativePlace a dbo:PopulatedPlace } &&
          EXISTS { ?nativePlace dbo:country dbr:United_States })

  # Find the child of an Actress
  ?actress a dbo:Actress .
  ?child dbo:parent ?actress .

  # Ensure the native place is related to this child
  ?child dbo:nativePlace ?nativePlace .
}
```",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?decedent WHERE {
  ?sandro a dbo:Person ;
          foaf:name ""Sandro Bertaggia""@en .
  
  ?sandro dbo:birthPlace ?birthplace .

  ?birthplace a dbo:Country .

  ?decedent dbo:deathPlace ?birthplace .
}
```",2,3,3,2,1,2,3,28,0,0,906,0,0.0,0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify the child of Ferdinand II, Holy Roman Emperor
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?childOfFerdinand2 .

  # Find the commander related to the 2nd Dragoon Regiment (France)
  OPTIONAL { 
    ?commander a dbo:MilitaryPerson ;
               dbo:militaryUnit ?dragoonRegiment .
    ?dragoonRegiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
  }

  # Connect the commander to the child of Ferdinand II
  OPTIONAL {
    ?childOfFerdinand2 dbo:commander ?commander .
  }

  # Identify the father of the child of Ferdinand III, Holy Roman Emperor
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?childOfFerdinand3 .
  OPTIONAL { 
    ?fatherOfChildOfFerdinand3 a dbo:MilitaryPerson ;
                              dbo:parent ?childOfFerdinand3 .
  }

  # Ensure the commander is also the father of the child of Ferdinand III
  FILTER(?commander = ?fatherOfChildOfFerdinand3)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  { 
    # Query for Reneta Kamberova's birthplace
    dbr:Reneta_Kamberova dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  { 
    # Query for an alumnus of Plovdiv University ""Paisius of Hilendar"" and their birthplace
    ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_of_Hilendarski ;
             dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?grandchild WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Muna al-Hussein""@en .
  
  ?child dbo:parent ?princess ;
         rdf:type dbo:RoyalFamilyMember .

  ?grandchild dbo:parent ?child ;
              rdf:type dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  dbr:George_Hamilton_Cameron dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?war a dbo:War ;
       dbo:hasPart ?diseaseEvent .
  
  ?diseaseEvent rdf:type/rdfs:subClassOf* (dbo:Disease dbo:SocietalEvent) .

  ?war dbo:commander ?commander .
  ?commander dbo:nationality dbr:United_States_Navy .
}
```",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityName ?birthPlace WHERE {
  { 
    # Query for the author of ""El Deafo""
    dbr:Cecily_Ann_Bell dbo:birthPlace ?birthPlace .
    BIND(""Author of El Deafo"" AS ?entityName)
  }
  
  UNION
  
  { 
    # Query for the governor of Virginia
    ?governor a dbo:Politician ;
              dbo:governmentRole dbr:Governor_of_Virginia ;
              foaf:name ?name .
    OPTIONAL { ?governor dbo:birthPlace ?birthPlace . }
    BIND(?name AS ?entityName)
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  # Find the region or settlement associated with Eastern European Time
  dbr:Eastern_European_Time dbo:timeZoneForRegion [
    dbo:region ?settlement .
  ] .

  # Find a notable person from that settlement
  ?person dbo:residence ?settlement ;
          a dbo:Person .

  # Get the birthplace of that person
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,142,0,0.0,0
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?partyLeaderOffice WHERE {
  # Commander's office in the Central African Republic Civil War
  ?warEvent a dbo:Event ;
            dbo:location dbr:Central_African_Republic .
  
  ?person a dbo:Person ;
          dbo:officeHolder ?commanderOffice ;
          dbo:politician ? ;
          foaf:based_near dbr:Madrid .

  ?warEvent dbo:participant ?person .

  # Leader of the party associated with Miguel Maura
  ?party a dbo:PoliticalParty ;
         dbo:leader ?leaderPerson .
  
  ?leaderPerson a dbo:Politician ;
                dbo:officeHolder ?partyLeaderOffice ;
                dbo:memberOfParty ?party .

  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .
  
  ?miguelMaura dbo:memberOfParty ?party .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team ?playerInSeries WHERE {
  # Find the team of Pablo Aimar
  dbr:Pablo_Aimar dbo:playsFor ?team .

  # Find players in ""All or Nothing: Manchester City"" who are athletes (soccer players)
  ?playerInSeries a dbo:SoccerPlayer ;
                  dbo:featuredIn dbr:All_or_Nothing:_Manchester_City .
  
  OPTIONAL {
    # Check if Juan Carlos Molina is related to the player from the series
    dbr:Juan_Carlos_Molina dbo:playsFor ?team .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Part 1: Associated Musical Artist of Nick Curran
SELECT ?associatedArtist WHERE {
  ?nickCurran a dbo:Person ;
              foaf:name ""Nick Curran""@en .
  OPTIONAL { ?nickCurran dbo:associatedMusicalArtist ?associatedArtist . }
}

UNION

# Part 2: Real Name of The Fabulous Thunderbirds
SELECT ?memberName WHERE {
  dbr:The_Fabulous_Thunderbirds dbo:bandMember ?member .
  OPTIONAL { ?member foaf:name ?memberName . }
}

UNION

# Part 3: Band of a Band Member of Eric Clapton
SELECT ?band WHERE {
  ?claptonBandMember dbo:associatedBand ?band ;
                     dbo:associatedMusicalArtist dbr:Eric_Clapton .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Manager of VfL Bochum in the 2007–08 season
  dbr:VfL_Bochum dbo:season ""2007–08"" ;
                 dbo:manager ?manager .

  # Manager of SBV Vitesse in the 2020–21 season
  dbr:SBV_Vitesse dbo:season ""2020–21"" ;
                  dbo:manager ?manager .

  # Ensure manager is native of West Germany
  OPTIONAL { ?manager dbo:nationality dbr:West_Germany . }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find a decedent who died at this birthplace
  ?decedent dbo:deathPlace ?birthPlace ;
            foaf:nationality dbr:Grand_Duchy_of_Finland ;
            foaf:nationality dbr:Russian_Empire .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Michał Kazimierz Pac""@en .
  
  ?person dbo:participatedIn ?force .
  
  ?force rdf:type dbo:Event ;
         rdf:type dbo:MilitaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",3,3,4,3,1,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carrie Johnson""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  {
    # For Henry Clay Lewis
    ?henry a dbo:Person ;
           foaf:name ""Henry Clay Lewis""@en .
    ?henry dbo:birthPlace ?birthPlace .
    FILTER(?birthPlace != dbr:Unknown)
    ?birthPlace a dbo:Settlement ;
                dbo:country dbr:United_States .
  }
  UNION
  {
    # For Quincy Adams Gillmore
    ?quincy a dbo:Person ;
             foaf:name ""Quincy Adams Gillmore""@en .
    ?quincy dbo:birthPlace ?birthPlace .
    FILTER(?birthPlace != dbr:Unknown)
    ?birthPlace a dbo:Settlement ;
                dbo:country dbr:United_States .
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Central,_Louisiana dbo:government ?government .
  ?government dbo:politicalParty ?party .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInAthens WHERE {
  # Find the leader of the National Party of Greece
  ?party a dbo:PoliticalParty ;
         foaf:name ""National Party of Greece""@en .
  
  OPTIONAL { ?party dbo:leader ?leader . }
  
  # Find wars the leader participated in
  OPTIONAL { ?leader dbo:participatedIn ?war . }

  # Find entities related to Athens involved in these wars
  ?entityInAthens a dbo:Place ;
                  foaf:name ""Athens""@en .
  
  OPTIONAL { ?war dbo:location ?entityInAthens . }
}
```",3,3,4,2,2,2,3,28,0,272,1,0.0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of James Plotkin
  ?plotkin a dbo:Person ;
           foaf:name ""James Plotkin""@en .
  
  ?plotkin dbo:associatedMusicalArtist ?firstAssociatedArtist .

  # Step 2: Find another associated musical artist of the first artist
  ?firstAssociatedArtist dbo:associatedMusicalArtist ?secondAssociatedArtist .

  # Step 3: Ensure this second artist is a band member of a band that is also a group and an organization
  ?band dbr:Burnt_by_the_Sun_(band) .
  
  ?secondAssociatedArtist dbo:bandMember ?band ;
                         a dbo:Band, dbo:Group, dbo:Organization .

}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Allan_Arbus dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  ?letsch dbo:nationality dbr:West_Germany .

  ?letsch dbo:manager ?team .

  ?team a dbo:SoccerClub ;
        dbo:sportTeamSeason ?season .

  ?season a dbo:SportsSeason ;
          dbo:sportsTeamSeason ?sportsTeamSeason .
  
  ?sportsTeamSeason a dbo:SportsTeamSeason .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?party WHERE {
  { 
    ?person a dbo:Politician ;
            foaf:name ""Roy Leonardo Barreras Montealegre""@en .
    OPTIONAL { ?person dbo:party ?party . }
    BIND(""Roy Leonardo Barreras Montealegre"" AS ?personName)
  }

  UNION

  {
    ?sofia a dbo:Person ;
           foaf:name ""Sofía Petro""@en .
    ?sofia dbo:parent ?father .
    OPTIONAL { ?father dbo:party ?party . }
    BIND(""Father of Sofía Petro"" AS ?personName)
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en .
  
  OPTIONAL { 
    ?person dbo:memberOf ?party .
    FILTER(CONTAINS(LCASE(?party), ""central louisiana"") || CONTAINS(LCASE(?party), ""ruling party""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Bayne""@en .
  
  ?person dbo:participatedIn ?war .

  FILTER (?war rdf:type dbo:MilitaryConflict)
  FILTER (?war rdf:type dbo:Event)
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?tvShow ?work WHERE {
  # Find the commander of the Battle of Vienna
  dbr:Battle_of_Vienna dbo:commander ?commander .

  # Find a television show related to the Battle of Vienna
  ?tvShow a dbo:TelevisionSeries ;
          dbo:depicts dbr:Battle_of_Vienna .
  
  # Find works by George Ducas that reference the Battle of Vienna
  ?work dbo:author dbr:George_Ducas ;
        dbo:subject dbr:Battle_of_Vienna .

}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Caroline Louise Bevan Symonds""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Joey B's birth name
  ?joeyB a dbo:Person ;
         foaf:name ""Joey B""@en .
  ?joeyB dbo:birthName ?birthName .

  # Find the writer of The Live Anthology and check if they are a musical artist
  ?anthology dbr:The_Live_Anthology ;
             dbo:writer ?writer .
  ?writer a dbo:Person ;
          foaf:name ?writerName .
  ?writer dbo:musicalArtist ?isMusicalArtist .

  # Match the birth name of Joey B with the writer's profession
  FILTER(?birthName = ?writerName)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  FILTER EXISTS { 
    ?child a dbo:Politician .
  }
  
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Charles_Parsons_(British_Army_officer) dbo:award ?award .
  
  OPTIONAL {
    ?award dbo:country dbr:Ottoman_Empire .
  }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?producer WHERE {
  # Find The Shadow's alter ego and its professional role
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo a dbo:Person ;
            dbo:profession ?professionalRole .

  # Find Cora Sue Collins' work and its producer
  ?work dbo:creator dbr:Cora_Sue_Collins .
  ?work dbo:producer ?producer .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?university a dbo:University ;
              foaf:name ""Пловдивски университет „Паисий Хилендарски“""@bg .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:United_States .
}
```",1,1,2,1,1,2,2,9,63421,0,0,1.0,1.0,1.0
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:givenName ""Cynthia"" ;
          foaf:middleName ""Ikponmwenosa"" ;
          foaf:surname ""Morgan"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Politician ;
               foaf:name ""Miguel Maura""@en .
  
  ?party a dbo:PoliticalParty ;
         dbo:member ?miguelMaura .

  # Find the leader of that political party who is also a politician
  ?leader a dbo:Politician ;
          dbo:officeHolder ?office ;
          dbo:headOf ?party .

  # Find Alberto Ruiz-Gallardón's residence and its tenant
  ?albertoRuizGallardon a dbo:Person ;
                        foaf:name ""Alberto Ruiz-Gallardón""@en .
  
  ?residence dbo:tenant ?leader .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace WHERE {
  # Find regions associated with Eastern European Time
  ?region dbo:timeZone dbr:Eastern_European_Time .

  # Find settlements within this region
  ?settlement dbo:locatedInRegion ?region ;
              a dbo:Settlement .

  # Identify Ekaterina Zaharieva's birthplace
  ?ekaterina a dbo:Person ;
             foaf:name ""Ekaterina Zaharieva""@en .
  ?ekaterina dbo:birthPlace ?settlementBirth .

  FILTER(?settlement = ?settlementBirth)

  # Find the birthplace of a resident from this settlement
  ?resident a dbo:Person ;
            dbo:birthPlace ?residence .
  ?resident dbo:currentResidence ?settlement .

  BIND(?residence AS ?birthplace)
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?title WHERE {
  ?film a dbo:Film ;
        dbo:actor dbr:Richard_E._Grant ;
        rdfs:label ?title .
  
  ?film rdf:type dbo:TelevisionShow .
  
  FILTER(LANG(?title) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,53,0,0.0,0
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorParadise ?actorAlways ?spouseJanusz WHERE {
  # Actors of Paradise (2013 film)
  OPTIONAL { 
    dbr:Paradise_(2013_film) dbo:starring ?actorParadise .
  }
  
  # Actors of Always (1989 film)
  OPTIONAL { 
    dbr:Always_(film) dbo:starring ?actorAlways .
  }

  # Spouse of Janusz Kamiński
  OPTIONAL {
    dbr:Janusz_Kamiński dbo:spouse ?spouseJanusz .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?samProfession ?shadowProfessional ?bobBand WHERE {
  # Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  OPTIONAL { ?sam dbo:profession ?samProfession . }

  # The Shadow's alter ego professional
  ?shadow a dbo:Character ;
          foaf:name ""The Shadow""@en .
  OPTIONAL {
    ?alterEgo a dbo:Person ;
              dbo:alterEgo ?shadow .
    ?alterEgo dbo:profession ?shadowProfessional .
  }
  
  # Bob Thompson's band
  ?bob a dbo:Musician ;
       foaf:name ""Bob Thompson (musician)""@en .
  OPTIONAL { ?bob dbo:band ?bobBand . }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?medalOfHonorAwardee ?war WHERE {
  # Find Quincy Adams Gillmore's award related to Charleston, South Carolina
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore""@en .
  
  ?award dbo:recipient ?gillmore ;
         dbo:location dbr:Charleston,_South_Carolina .

  # Find the force associated with this award
  ?force dbo:militaryUnitOf ?gillmore .

  # Find Medal of Honor awardees and their wars
  ?medalOfHonorAwardee a dbo:MilitaryPerson ;
                      dbo:award ""Medal_of_Honor""@en .
  
  ?serviceRecord dbo:awardedBy ?medalOfHonorAwardee ;
                 dbo:conflict ?war .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  ?decedent a dbo:Person ;
            dbo:placeOfDeath dbr:Los_Angeles .
}
```",1,1,2,1,1,3,3,71,0,0,2883,0,0.0,0
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName ?child WHERE {
  dbr:Peter_IV_of_Aragon a dbo:Person ;
                         foaf:name ?realName .
  
  OPTIONAL { 
    dbr:Peter_IV_of_Aragon dbo:child ?child .
    
    FILTER EXISTS { ?child a dbo:Monarch }
  }
}
```",4,5,5,2,2,3,2,20,0,1,1,0.0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Thirty_Years'_War dbo:commander ?commander .
  
  OPTIONAL {
    dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
    ?child dbo:parent ?father .
    
    FILTER(?father = ?commander)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Find Yeshaq I's parent who is royalty
  ?yeshaqI a dbo:Person ;
           foaf:name ""Yeshaq I""@en .
  
  OPTIONAL { 
    ?yeshaqIParent dbo:parentOf ?yeshaqI ;
                   a dbo:Royalty .
    
    # Find Na'od's grandfather who is royalty and an office holder
    ?naod a dbo:Person ;
          foaf:name ""Na'od""@en .

    OPTIONAL {
      ?naodFather dbo:child ?naod ;
                  a dbo:Person .

      OPTIONAL {
        ?naodGrandfather dbo:parentOf ?naodFather ;
                         a dbo:Royalty ;
                         dbo:officeHolder ?office .
        
        # Ensure the parent of Yeshaq I is the same as Na'od's grandfather
        FILTER(?yeshaqIParent = ?naodGrandfather)
      }
    }

    # Find the child of this royal parent
    OPTIONAL {
      ?child dbo:parentOf ?yeshaqIParent .
    }
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Shelby_Oaks dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actor of ""The Golden Master"" series
  ?goldenMasterSeries dbo:actor ?actor .
  FILTER(STRSTARTS(STR(?goldenMasterSeries), STR(dbr:The_Golden_Master)))

  # Actor of the film ""ATL""
  dbr:ATL (dbo:actor) ?actor .

  # Actor of ""Shelby Oaks""
  dbr:Shelby_Oaks dbo:actor ?actor .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?father WHERE {
  ?reference a dbo:Monarch ;
             dbo:officeHolder ?office .
  ?office dbo:holder ?reference .
  ?office dbo:relatedTo dbr:William_I_of_Germany .

  ?child dbo:parent ?reference ;
         a dbo:Monarch .

  ?child dbo:father ?father .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resource WHERE {
  ?resource rdfs:label ""The Fabulous Thunderbirds""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # USS Arcadia (ID-1605) owner
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Author of ""An Invitation to the White House""
  dbr:An_Invitation_to_the_White_House dbo:author ?author .
  
  # Spouse of the author
  ?author foaf:name ?authorName .
  OPTIONAL { ?author dbo:spouse ?spouse . }

  # Disease and societal event that is a commander in a war
  dbr:Cholera a dbo:Disease ;
              rdfs:label ""Cholera""@en ;
              dbo:commanderInWar ?commander .

  FILTER(?owner = ?spouse)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  dbr:Plovdiv_University_Paisii_Hilendarski dbo:alumni ?alumnus .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  # Find band members of this artist who are also musical artists
  ?member dbo:memberOf ?artist ;
          a dbo:MusicalArtist .

  # Filter for those native to Puerto Rico
  ?member dbo:nativePlace dbr:Puerto_Rico .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:givenName ""Harriette""@en .
  ?person foaf:familyName ""Lake""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchild WHERE {
  ?albrecht a dbo:Person ;
            foaf:name ""Albrecht, Duke of Württemberg""@en .
  
  ?albrechtChild dbo:child ?albrecht .

  ?grandchild dbo:parent ?albrechtChild ;
              a dbo:RoyalFamilyMember .

  OPTIONAL { ?charlesLouis a dbo:Person ;
                          foaf:name ""Archduke Charles Louis of Austria""@en . }

  OPTIONAL { ?charlesLouisChild dbo:child ?charlesLouis .
             FILTER(?grandchild = ?charlesLouisChild) }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Emilia Yancheva Valeva""@en .
  OPTIONAL { ?person dbo:bandMember ?band . }
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chieko Asakawa""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author a dbo:Person ;
          dbo:book ?invitationBook .
  
  ?invitationBook foaf:name ""An Invitation to the White House""@en .

  ?author dbo:politician true .
  ?author dbo:officeHolder true .

  OPTIONAL { ?author dbo:spouse ?spouse . }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake""@en .
  
  ?harriette dbo:member dbr:Republican_Party_(United_States) .

  ?film dbo:producer dbr:Nat_Levine ;
        dbo:actor ?actor .

  ?harriette dbo:spouse ?spouse .
  
  FILTER(?spouse = ?actor)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eugène Cattin""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?myatHponePyo a dbo:Person ;
                 foaf:name ""Myat Hpone Pyo""@en .
  
  OPTIONAL { ?myatHponePyo dbo:parent ?father . }
  
  FILTER(?father a dbo:RoyalFamilyMember)
  
  OPTIONAL { ?father dbo:spouse ?spouse . }

  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut of Pyakaung""@en .
  
  OPTIONAL { ?minHlaHtut dbo:parent ?parentOfMinHlaHtut . }
  
  OPTIONAL { ?parentOfMinHlaHtut dbo:child ?child . }

  FILTER(?father = ?child)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonProfession WHERE {
  # Find the actor associated with ""Ab Kya Hoga""
  ?abKyaHogaFilm a dbo:Film ;
                 dbo:title ""Ab Kya Hoga""@en .
  
  ?actor dbo:actedIn ?abKyaHogaFilm ;
         a dbo:Actor .

  # Check if this actor is also a politician
  OPTIONAL { ?actor dbo:occupation dbo:Politician . }

  # Find the professional alter ego of The Shadow
  ?theShadowCharacter dbo:title ""The Shadow""@en .
  
  ?alterEgo dbo:alterEgoOf ?theShadowCharacter ;
            a dbo:Detective .

  # Find common profession between actor and alter ego
  ?actor dbo:occupation ?commonProfession .
  ?alterEgo dbo:occupation ?commonProfession .
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war ?birthPlace WHERE {
  # Quincy Adams Gillmore's military command
  dbr:Quincy_Adams_Gillmore dbo:militaryCommand ?force .

  # War related to an award from the U.S. Congress
  ?awardRecipient dbo:recipientOfAward ?congressAward .
  ?congressAward dbo:awardedBy dbr:United_States_Congress .
  ?war dbo:relatedTo ?congressAward .

  # Birthplace of Henry Clay Lewis
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/"") && 
         (STR(?birthPlace) CONTAINS ""Settlement"" || STR(?birthPlace) CONTAINS ""City""))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Roger III and his parent
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRoger .

  # The child of the parent of Roger III is Roger III himself
  ?parentOfRoger dbo:child ?roger .

  # Check if this person (Roger III) is a child of someone who is a child of Alfonso VI
  ?intermediaryChild dbo:child ?roger .
  ?intermediaryChild dbo:parent dbr:Alfonso_VI_of_León_and_Castile .
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandparent WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Aisha bint Faisal""@en .
  
  OPTIONAL { 
    ?princess dbo:childOf ?parent .
    FILTER EXISTS { ?parent a dbo:RoyalFamilyMember }
    
    OPTIONAL { 
      ?royalChild dbo:childOf ?parent .
      FILTER EXISTS { ?royalChild a dbo:RoyalFamilyMember }
      
      OPTIONAL {
        ?grandparent dbo:parentOf ?royalChild .
        FILTER EXISTS { ?grandparent a dbo:RoyalFamilyMember }
      }
    }
  }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?parent .
  
  OPTIONAL { ?parent dbo:child ?child . }
  
  FILTER EXISTS { 
    ?child a dbo:Politician ;
           dbo:officeHolder ?office .
  }

  OPTIONAL { ?child dbo:parent ?parentOfChild . }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?athlete WHERE {
  ?marty a dbo:Person ;
         foaf:name ""Marty Pollio""@en .
  ?marty dbo:birthDate ?birthdate .

  ?athlete a dbo:Athlete ;
           dbo:birthDate ?birthdate .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Always_the_Love_Songs dbo:writer ?writer .
}
```",2,2,3,2,1,3,3,71,2,0,98448,1.0,2.031488065007618e-05,4.062893592816804e-05
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Identify Edward Stanley's child
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Step 2: Find the parent of that child (which is Edward Stanley)
  OPTIONAL { ?child dbo:parent ?parentOfChild . }

  # Step 3: Check if this parent is a politician and an office holder
  FILTER(?parentOfChild = dbr:Edward_Stanley,_17th_Earl_of_Derby) .
  ?parentOfChild a dbo:Politician ;
                 dbo:officeHolder true .

  # Step 4: Identify the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .

  # Step 5: Find the parent of this awardee
  OPTIONAL { ?awardee dbo:parent ?parentOfAwardee . }

  # Step 6: Identify the common parent between these two chains
  ?commonParent = ?parentOfChild ;
                 = ?parentOfAwardee .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commanderOffice ?partyLeader WHERE {
  # Part for Manuel Pinto da Costa
  OPTIONAL {
    ?manuel a dbo:Person ;
            foaf:name ""Manuel Pinto da Costa""@en .
    ?manuel dbo:office ?commanderOffice .
    ?conflict a dbo:MilitaryConflict ;
              dbo:participant ?manuel .
  }

  # Part for Conservative Republican Party (Spain)
  OPTIONAL {
    dbr:Conservative_Republican_Party_(Spain) dbo:leader ?partyLeader .
  }
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:George_Hamilton_Cameron dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Johnny_Doughboy dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,10,0,4,1.0,0.7142857142857143,0.8333333333333333
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:2009_Galician_regional_election dbo:leader ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ?name .
  
  # Ensure the person is an author of ""An Invitation to the White House""
  ?person dbo:authorOf dbr:An_Invitation_to_the_White_House .

  # Ensure the person is also an author of ""Back to Work (book)""
  ?person dbo:authorOf dbr:Back_to_Work_(book) .
  
  # Ensure the person is a politician
  ?person dbo:politicalParty ?party .
  
  # Ensure the person is an office holder
  ?person dbo:officeHolder ?office .

  # Ensure the person was a commander during the Third Taiwan Strait Crisis
  ?person dbo:commanderOf dbr:Third_Taiwan_Strait_Crisis .

  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?author a dbo:Person ;
          foaf:name ?name .
  
  ?author dbo:book ?invitationBook .
  ?invitationBook foaf:title ""An Invitation to the White House""@en .

  ?author dbo:book ?backToWorkBook .
  ?backToWorkBook foaf:title ""Back to Work (book)""@en .

  ?author a dbo:Politician ;
          dbo:officeHolder ?office .

  ?war a dbo:MilitaryConflict ;
      dbo:commander ?author ;
      dbo:disease ?disease ;
      dbo:societalEvent ?event .

  ?owner dbo:ownsUSSArcadia ?arcadia .
  ?arcadia foaf:name ""USS Arcadia (ID-1605)""@en .

  FILTER(?war = ?disease && ?war = ?event)

  OPTIONAL { ?author dbo:spouse ?spouse . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?singer ?band WHERE {
  # Find fictional character created by Walter B. Gibson who is also a comics character
  ?fictionalCharacter dbo:creator dbr:Walter_B._Gibson ;
                     rdf:type dbo:FictionalCharacter ;
                     dbo:genre dbr:Comics .

  # Find professional in Singer related to this fictional character's alter ego
  ?singer dbo:profession dbr:Singer ;
          dbo:alterEgo ?fictionalCharacter .

  # Find band associated with Robert Lamar Thompson
  ?robertLamar a foaf:Person ;
               foaf:name ""Robert Lamar Thompson""@en .
  
  ?robertLamar dbo:member ?band .
}
```",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?attacker ?defender WHERE {
  dbr:Battle_of_Fort_Royal dbo:attacker ?attacker .
  dbr:Battle_of_Fort_Royal dbo:defender ?defender .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  OPTIONAL { ?philip dbo:parent ?parent . }
  
  OPTIONAL { ?parent dbo:parent ?grandparent . }
  
  FILTER(?grandparent a dbo:Monarch) # Ensure the grandparent is royalty
  
  OPTIONAL { ?grandparent dbo:father ?greatGrandparent . }
  
  OPTIONAL { ?greatGrandparent dbo:spouse ?spouse . }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?childOfChild WHERE {
  # Find parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parent .

  # Find child of this parent, then find that child's own child who is royalty
  ?parentChild dbo:child ?grandchild .
  ?grandchild a dbo:RoyalFamilyMember ;
              dbo:child ?childOfChild .

  # Find the child of Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippChild .

  # Ensure the ""child of the child"" is a predecessor to the child of Philipp Albrecht
  FILTER(?childOfChild < ?philippChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?gibson a dbo:Writer ;
          foaf:name ""Walter B. Gibson""@en .
  
  ?character dbo:creator ?gibson ;
             a dbo:FictionalCharacter, dbo:ComicsCharacter .

  OPTIONAL { 
    ?character dbo:profession dbr:Singing .
  }
}
```",5,7,6,3,2,3,3,71,0,1,39640,0.0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  OPTIONAL { 
    ?person dbo:profession ?profession .
    FILTER (
      ?profession IN (dbo:Writer, dbo:MusicalArtist)
    )
  }
  
  OPTIONAL {
    ?work dbo:title ""The Live Anthology""@en ;
          dbo:author ?person .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # Find the residence of Alberto Ruiz-Gallardón and its tenant
  ?alberto a dbo:Person ;
           foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?alberto dbo:residence ?residence . }
  OPTIONAL { ?residence dbo:tenant ?tenant . }

  # Find the office of Mariano Rajoy and its tenant
  ?mariano a dbo:Person ;
           foaf:name ""Mariano Rajoy""@en .
  OPTIONAL { ?mariano foaf:workplaceHomepage ?office . }
  OPTIONAL { ?office dbo:tenant ?tenant . }
}
```",3,3,4,2,2,3,3,71,0,17260,2,0.0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  # Find Jamie McCunnie's manager
  ?player dbo:name ""Jamie McCunnie""@en ;
          dbo:manager ?manager .

  # Ensure the manager is a native of Bristol
  ?manager dbo:birthPlace dbr:Bristol .

  # Check if the manager is associated with an organization that is both a sports club and a soccer club
  OPTIONAL { ?organization dbo:type dbr:Soccer_club ;
                           dbo:sportTeam ?manager . }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  {
    ?work rdf:type dbo:Work ;
          rdf:type dbo:WrittenWork ;
          rdf:type dbo:Book ;
          dbo:author dbr:Joe_Biden ;
          dbo:American true .
  }
  UNION
  {
    ?work rdf:type dbo:WrittenWork ;
          rdf:type dbo:Work ;
          dbo:author dbr:Joe_Biden .
  }
}
```",4,10,5,2,2,3,2,20,0,2,1,0.0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?club WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jamie McCunnie""@en .
  
  ?person dbo:player ?club .

  ?club rdf:type dbo:SoccerClub .
  ?club rdf:type dbo:SportsTeam .
}
```",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  dbr:Lai_Sun_Cheung dbo:member ?player .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Ferdinand II's child who is a commander in war
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  
  OPTIONAL { ?child dbo:commander ?warCommand . }
  
  # Societal event, event, and television show related to the child
  OPTIONAL { ?child dbo:societalEvent ?societalEvent . }
  OPTIONAL { ?child dbo:event ?event . }
  OPTIONAL { ?child dbo:televisionShow ?tvShow . }
  
  # Involvement with 2nd Dragoon Regiment (France)
  OPTIONAL { ?dragoon dbr:2nd_Dragoon_Regiment_(France) dbo:commander ?child . }
  
  # Father of the child of the parent of Archduke Charles Joseph
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
  OPTIONAL { ?parent dbo:child ?grandChild . }
  OPTIONAL { ?grandChild dbo:father ?fatherOfGrandChild . }
  
  # Linking all conditions
  FILTER(?child = ?warCommand && ?child = ?societalEvent && ?child = ?event && ?child = ?tvShow)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rodney Lees""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?georgeDucas a dbo:Person ;
               foaf:name ""George Ducas""@en .
  
  ?war a dbo:MilitaryConflict ;
       dbo:title ""Russo-Polish War (1654–1667)""@en .

  ?commander a dbo:Person ;
             dbo:involvedInMilitaryConflicts ?war ;
             dbo:successor ?successor .

  ?successor a dbo:Politician, dbo:OfficeHolder .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?ceceBirthPlace ?paulusBirthPlace ?governor WHERE {
  # Find Cece Bell's birthplace
  ?cece a dbo:Person ;
        foaf:name ""Cece Bell""@en .
  ?cece dbo:birthPlace ?ceceBirthPlace .

  # Find Paulus Powell's birthplace and ensure it is both a region and an administrative region
  ?paulus a dbo:Person ;
          foaf:name ""Paulus Powell""@en .
  ?paulus dbo:birthPlace ?paulusBirthPlace .
  ?paulusBirthPlace rdf:type dbo:Region, dbo:AdministrativeRegion .

  # Find the governor of Paulus Powell's birthplace
  OPTIONAL { ?governor a dbo:Politician ;
                      dbo:governs ?paulusBirthPlace . }
}
```",4,7,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?authorBirthPlace ?gilliganBirthPlace WHERE {
  OPTIONAL {
    ?ceceBell a dbo:Person ;
              foaf:name ""Cece Bell""@en .
    ?ceceBell dbo:birthPlace ?authorBirthPlace .
  }
  
  OPTIONAL {
    ?vinceGilligan a dbo:Person ;
                   foaf:name ""Vince Gilligan""@en .
    ?vinceGilligan dbo:birthPlace ?gilliganBirthPlace .
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?entity WHERE {
  ?daniel a dbo:Person ;
          foaf:name ""Daniel Elahi Galán""@en .
  
  ?daniel dbo:country ?country .

  ?entity a dbo:Person ;
          dbo:country ?country .
  
  FILTER(?daniel != ?entity)
}
```",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team ?person WHERE {
  # Find Sergio Agüero's team at birth or early career
  dbr:Sergio_Ag%C3%BCero dbo:birthPlace ?place .
  ?place dbo:locatedIn ?team .

  # Find Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbo:birthday ?birthday .

  # Find a person who is both a soccer player and manager with the same birthday
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:birthday ?sameBirthday .
  
  FILTER(?birthday = ?sameBirthday)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?band WHERE {
  # Query for The Shadow's profession
  OPTIONAL {
    dbr:The_Shadow a dbo:Agent ;
                   dbo:occupation ?profession .
  }
  
  # Query for Robert Lamar Thompson's band
  OPTIONAL {
    ?person foaf:name ""Robert Lamar Thompson""@en ;
            a dbo:MusicalArtist .
    ?person dbo:bandMember ?band .
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Third_Taiwan_Strait_Crisis dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,18,0,0,1.0,1.0,1.0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query for The Fabulous Thunderbirds reference
SELECT ?band WHERE {
  ?band a dbo:Band ;
        foaf:name ""The Fabulous Thunderbirds""@en .
}

# Query to find the band of Kim Wilson and ensure it's The Fabulous Thunderbirds
SELECT DISTINCT ?band WHERE {
  ?kimWilson a dbo:Person ;
             foaf:name ""Kim Wilson""@en .
  
  ?kimWilson dbo:band ?band .

  ?band foaf:name ""The Fabulous Thunderbirds""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successorParty WHERE {
  ?patrice a dbo:Person ;
           foaf:name ""Patrice Martin-Lalande""@en .
  
  ?patrice dbo:succeededBy ?successor .
  
  ?successor a dbo:Politician ;
             dbo:nationality dbr:France .

  ?successor dbo:partyAffiliation ?successorParty .
}
```",2,4,3,2,1,2,2,9,0,0,6,0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  } UNION {
    ?person a dbo:Person ;
            foaf:name ""Glenn Youngkin""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfRogerII ?grandChildOfSpouse ?fatherOfChildOfWilliamI WHERE {
  # Find child of Roger II of Sicily who is royalty
  dbr:Roger_II_of_Sicily dbo:child ?childOfRogerII .
  FILTER(?childOfRogerII a dbo:Monarch)

  # Find spouse of Constance of Burgundy and their child, then that child's child (grandchild)
  dbr:Constance_of_Burgundy dbo:spouse ?spouseOfConstance .
  OPTIONAL { ?spouseOfConstance dbo:child ?childOfSpouse . }
  OPTIONAL { ?childOfSpouse dbo:child ?grandChildOfSpouse . }
  FILTER(?grandChildOfSpouse a dbo:Monarch)

  # Find child of William I of Sicily who is royalty and their father
  dbr:William_I_of_Sicily dbo:child ?childOfWilliamI .
  FILTER(?childOfWilliamI a dbo:Monarch)
  OPTIONAL { ?childOfWilliamI dbo:parent ?fatherOfChildOfWilliamI . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent WHERE {
  # Charles I of Hungary's father
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  # Father's parent (Grandparent)
  ?father dbo:parent ?grandparent .

  # Grandparent must be royalty
  ?grandparent a dbo:Monarch .

  # Grandparent is spouse of Charles II of Naples
  ?grandparent dbo:spouse dbr:Charles_II_of_Naples .

  # Grandparent is child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?grandparent .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Pablo_Aimar a dbo:Person ;
                  dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Dispatches_from_Elsewhere dbo:actor ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź .
}
```",1,3,2,1,1,3,2,20,0,10,4,0.0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Theodor_Heuss dbo:office ?office .
  ?office dbo:country ?country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?nativePlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""2 Chainz""@en .
  
  OPTIONAL { ?person foaf:name ?birthName . }
  
  ?person dbo:nationality dbr:United_States ;
          dbp:placeOfBirth ?nativePlace .

  FILTER(CONTAINS(LCASE(STR(?nativePlace)), ""puerto rico""))
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfCharlesII ?grandchildOfPredecessor ?parentOfFatherOfCharlesI
WHERE {
  # Charles II of Naples and his spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .

  # Predecessor of Stephen V of Hungary
  OPTIONAL { 
    dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
    
    # Child of the predecessor who is royalty
    ?childOfPredecessor dbo:child ?predecessor ;
                       rdf:type dbo:Monarch .
    
    # Grandchild of the predecessor (child's child)
    ?grandchildOfPredecessor dbo:parent ?childOfPredecessor ;
                            rdf:type dbo:Monarch .
  }

  # Charles I of Hungary and his father
  OPTIONAL {
    dbr:Charles_I_of_Hungary dbo:father ?fatherOfCharlesI .

    # Parent of the father who is royalty
    ?parentOfFatherOfCharlesI dbo:child ?fatherOfCharlesI ;
                             rdf:type dbo:Monarch .
  }
}
```",6,8,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?manager WHERE {
  ?person a dbo:Person ;
          dbo:birthday ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .

  ?player a dbo:Player ;
          dbo:team dbr:2007–08_VfL_Bochum_season .

  ?season a dbo:SportsSeason ;
          dbo:sportTeam dbr:VfL_Bochum ;
          dbo:member ?player .

  ?manager a dbo:SportsManager ;
           foaf:name ?personName ;
           dbo:manages ?player .

  FILTER(?person = ?manager)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?book WHERE {
  # Find the spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse ?spouse .

  # Find a book authored by Bill Clinton
  ?book a dbo:Book ;
        dbo:author dbr:Bill_Clinton .
}
```",3,6,4,2,2,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royParty ?fatherParty WHERE {
  # Find Roy Barreras's party
  ?roy a dbo:Person ;
       foaf:name ""Roy Barreras""@en .
  OPTIONAL { ?roy dbo:party ?royParty . }

  # Find Sofía Petro's father and his party
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  ?sofia dbo:parent ?father .
  OPTIONAL { ?father dbo:party ?fatherParty . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Smita Patil""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeaderSpain ?officeCommanderCAR WHERE {
  # Part 1: Office of the leader of Conservative Republican Party (Spain)
  OPTIONAL {
    dbr:Conservative_and_Rural_Party_of_Spain dbo:leader ?leader .
    ?leader a dbo:Politician ;
            dbo:officeHolder ?officeLeaderSpain .
    FILTER EXISTS { ?leader dbo:location dbr:Madrid }
  }

  # Part 2: Office of the commander in Central African Republic Civil War
  OPTIONAL {
    ?commander a dbo:OfficeHolder, dbo:Politician ;
               dbo:position ?officeCommanderCAR .
    ?warEvent dbo:participant ?commander ;
              rdfs:label ""Central_African_Republic_Civil_War""@en .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Michał_Kazimierz_Pac a dbo:Person ;
                           dbo:commander ?militaryConflict .
  
  OPTIONAL { 
    ?militaryConflict dbo:commander ?successor .
    FILTER(?successor != dbr:Michał_Kazimierz_Pac)
  }
}
```",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?child WHERE {
  # Find The Shadow's alter ego
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  OPTIONAL { ?shadow dbo:alterEgo ?alterEgo . }

  # Identify Yeshaq I and his royal parent
  dbr:Yeshaq_I_of_Ethiopia dbo:child ?yeshaqChild .
  ?royalParent a dbo:Person ;
               dbo:parentOf ?yeshaqChild ;
               dbo:title ?title .

  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Find the child of Yeshaq I's royal parent
  OPTIONAL { ?royalParent dbo:child ?child . }
}
```",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?royalChild WHERE {
  ?aisha a dbo:Person ;
         foaf:name ""Aisha bint Faisal""@en .
  
  ?parent dbo:child ?aisha ;
          a dbo:RoyalFamilyMember .

  ?royalParent dbo:child ?parent ;
               a dbo:RoyalFamilyMember .

  ?royalChild dbo:parent ?royalParent ;
              a dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?character ?alterEgoProfession WHERE {
  # Find fictional character created by Walter B. Gibson
  ?gibson a dbo:Writer ;
          foaf:name ""Walter B. Gibson""@en .
  
  ?fictionalCharacter dbo:creator ?gibson ;
                      a dbo:FictionalCharacter ;
                      dbo:genre/dbo:subClassOf* dbo:ComicBook .

  # Find alter ego and its profession
  OPTIONAL { ?fictionalCharacter dbo:alterEgo ?alterEgo . }
  OPTIONAL { ?alterEgo foaf:profession ?alterEgoProfession . }

  # Find the producer of Coke Studio Philippines and their profession
  ?producer a dbo:Person ;
            foaf:name ?producerName .
  
  ?cokeStudioProducerRole dbo:producer ?producer ;
                          dbo:title ""Coke_Studio_Philippines""@en .

  OPTIONAL { ?producer foaf:profession ?producerProfession . }

  # Match the professions
  FILTER(?alterEgoProfession = ?producerProfession)
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Bobby Shmurda's birth name and associated musical artist
  dbr:Bobby_Shmurda dbo:birthName ?bobbyBirthName .
  dbr:Bobby_Shmurda dbo:musicalArtist ?associatedArtist .

  # Find a band member of the associated musical artist who is also a musical artist
  ?bandMember dbo:memberOf ?associatedArtist ;
              a dbo:MusicalArtist .

  # Ensure this person was born with Bobby Shmurda's birth name
  ?person foaf:name ?bobbyBirthName .
  FILTER(?bandMember = ?person)

  # Find the region and state related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:nativeRegion ?region ;
                                                                dbo:nativeState ?state .

  # Ensure this person is native to the identified region and state
  ?person dbo:nativePlace ?settlement .
  FILTER(?settlement IN (dbr:Puerto_Rico, dbr:Ciudad_de_Ponce)) # Assuming Puerto Rico and Ponce as possible settlements

  # Additional filters for American nationality
  ?person dbo:nationality dbr:United_States .

}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Find children of Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  # Ensure the child is royalty (e.g., a Monarch)
  ?child a dbo:Monarch .

  # Find father of this child who is also related to William I of Sicily
  ?father dbo:spouse ?mother . 
  ?mother dbo:parent ?child .
  
  OPTIONAL { ?father dbo:child dbr:William_I_of_Sicily }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personName ?associatedArtist WHERE {
  {
    ?stuart a dbo:Person ;
            foaf:name ""Stuart Mcbeath Tosh""@en .
    OPTIONAL { ?stuart dbo:associatedBand ?associatedArtist . }
    BIND(""Stuart Mcbeath Tosh"" AS ?personName)
  } UNION {
    ?billy a dbo:Person ;
           foaf:name ""Billy Lyall""@en .
    OPTIONAL { ?billy dbo:associatedBand ?associatedArtist . }
    BIND(""Billy Lyall"" AS ?personName)
  }
}
```",3,4,4,2,2,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify VfL Bochum's manager during the 2007–08 season
  dbr:VfL_Bochum dbo:manager ?manager .
  
  # Filter for managers who were native to West Germany
  ?manager dbo:nationality dbr:West_Germany .

  # Ensure that VfL Bochum is recognized as a sports club, organization, and soccer club
  dbr:VfL_Bochum a dbo:SportsClub ;
                 a dbo:Organization ;
                 a dbo:SoccerClub .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfFather WHERE {
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  ?maria dbo:spouse ?spouse .

  ?fatherOfSpouse dbo:child ?spouse .
  FILTER(?fatherOfSpouse rdf:type dbo:RoyalFamilyMember) # Assuming royalty is represented by this class

  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .

  ?philip dbo:parent ?fatherOfPhilip .

  ?spouseOfFatherOfPhilip dbo:child ?fatherOfPhilip .
  
  FILTER(?fatherOfSpouse = ?spouseOfFatherOfPhilip)

  ?parentOfFather dbo:spouse ?fatherOfSpouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:ATL dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard""@en .
  
  OPTIONAL { ?person dbo:birthPlace dbr:Florida . }
  
  OPTIONAL { 
    ?band a dbo:Band ;
          dbo:member ?person .
    FILTER(STRSTARTS(LCASE(?band), LCASE(""uncle murda"")))
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthDate ""1979-11-03""^^xsd:date ;
           a dbo:SoccerPlayer, dbo:SoccerManager .

  # Find Marty Pollio's birthday
  dbr:Marty_Pollio dbo:birthDate ?martyBirthday .

  # Find another athlete born on the same day as Marty Pollio
  ?person2 dbo:birthDate ?martyBirthday ;
           a dbo:Athlete .

  # Check if both individuals played in the same team
  ?person1 dbo:team ?team .
  ?person2 dbo:team ?team .
}
```",5,8,6,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?decedent WHERE {
  ?sandro a dbo:Person ;
          foaf:name ""Sandro Bertaggia""@en .
  
  ?sandro dbo:birthPlace ?birthplace .
  
  ?birthplace a dbo:Country .

  ?person a dbo:Person ;
          dbo:deathPlace ?birthplace .
  
  ?administration dbo:nativeOf ?person .
  ?administration foaf:name ""Alexander II, Grand Duke of Finland""@en .
  
  BIND(?person AS ?decedent)
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?resource WHERE {
  ?resource a dbo:Person ;
            foaf:name ""George Ducas""@en .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthday WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tony Hollings""@en .
  ?person dbo:birthday ?birthday .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Algerian War entity
  dbr:Algerian_War a dbo:Event ;
                   dbo:commander ?commander .

  # Commander is also a societal event and television show
  ?commander a dbo:SocietalEvent ;
             a dbo:TelevisionShow .

  # Ferdinand III, Holy Roman Emperor's child
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?child .
  
  # Father of the child is the commander
  ?child dbo:parent ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseOfCharlesII ?parentOfFather ?royalChild WHERE {
  # Charles II of Naples and his spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouseOfCharlesII .

  # Maria of Bytom's spouse and the parent of her spouse's father who is royalty
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  ?maria dbo:spouse ?spouseOfMaria .
  ?fatherOfSpouse dbo:parent ?spouseOfMaria .
  ?grandParentOfFather dbo:parent ?fatherOfSpouse .
  FILTER (?grandParentOfFather rdf:type dbo:Royalty) .

  # Béla IV of Hungary and a royal child
  dbr:Béla_IV_of_Hungary dbo:child ?royalChild .
  FILTER (?royalChild rdf:type dbo:Royalty)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?authorName ?work WHERE {
  ?commander a dbo:OfficeHolder ;
             dbo:officeTitle ?title .
  
  ?koreanConflict dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(?title), ""commander"") && CONTAINS(LCASE(STR(?koreanConflict)), ""korean conflict""))

  ?work dbo:author ?commander ;
        a dbo:WrittenWork, dbo:Work .

  ?commander foaf:name ?authorName .
}
```",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find the author of Smartbomb
  ?smartbombBook a dbo:Book ;
                 foaf:name ""Smartbomb""@en .
  ?author dbo:author ?smartbombBook .

  # Identify the alter ego of The Shadow and associated professionals
  ?shadowCharacter a dbo:FictionalCharacter ;
                   foaf:name ""The Shadow""@en .
  ?alterEgo foaf:name ?shadowAlterEgoName .
  FILTER(?shadowAlterEgoName = ""Lamont Cranston"" || ?shadowAlterEgoName = ""Kent Allard"") # Known alter egos
  ?professional a dbo:Actor ;
                 dbo:profession ?alterEgo .

  # Find a movie involving both the author and the professional
  ?movie dbo:film .
  ?author dbo:actor ?movie .
  ?professional dbo:actor ?movie .
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:deathDate ?date .
  FILTER (STR(?date) = ""1850-08-05""^^xsd:date)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Phantomsmasher and its associated musical artist
  ?phantomsmasher a dbo:MusicalArtist ;
                  foaf:name ""Phantomsmasher""@en .
  
  OPTIONAL { ?phantomsmasher dbo:associatedBand ?band . }
  
  # Ensure the band is also a group, organization, etc.
  FILTER(?band != null)
  ?band a (dbo:Band|dbo:MusicalGroup|dbo:Organization) .

  # Find members of this band
  ?bandMember dbo:member ?band .
  
  # Check if there's any reference to ""Burnt by the Sun"" as a group or organization
  OPTIONAL { ?reference dbr:Burnt_by_the_Sun dbo:group ?band . }
}
```",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson (musician)""@en .
  
  OPTIONAL { ?person foaf:birthName ?birthName . }
  
  OPTIONAL { ?person dbo:member ?band . }
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Duke Anthony Ulrich of Brunswick's parent (spouse)
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:parent ?parent1 .
  
  # Prince Augustus William of Prussia's spouse
  dbr:Prince_Augustus_William_of_Prussia dbo:spouse ?parent2 .

  # Ensure the parent is royalty and common to both individuals
  FILTER(?parent1 = ?parent2)
  FILTER(BOUND(?parent1))
  ?parent1 a dbo:Royal .
  
  # Retrieve the child of this royal parent
  ?parent1 dbo:child ?child .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
  # Find territories ruled by Christian IX of Denmark
  OPTIONAL { 
    dbr:Christian_IX_of_Denmark dbo:ruledTerritory ?territory .
  }
  
  # Find territories administered from Copenhagen
  OPTIONAL {
    ?territory dbo:capital dbr:Copenhagen .
  }
}
```",2,2,3,1,2,2,3,28,1,3,0,0.25,1.0,0.4
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
  # Find death place of Christian Ditlev Ammentorp Hansen that is a settlement
  ?hansen a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen""@en .
  ?hansen dbo:deathPlace ?deathPlace .
  FILTER(STRSTARTS(STR(?deathPlace), STR(dbo:Settlement)))

  # Find territories administered by Christian IX of Denmark from that death place
  dbr:Christian_IX_of_Denmark dbo:administers ?territory ;
                              dbo:residence ?deathPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?club WHERE {
  ?person a dbo:Person ;
          foaf:name ""Denis Kolodin""@en .
  OPTIONAL { ?person dbo:playerFor ?club . }
}
```",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname WHERE {
  ?denis a dbo:Person ;
         foaf:name ""Denis Kolodin""@en .
  
  OPTIONAL { ?denis dbo:nickname ?nickname . }
  
  ?club a dbo:SoccerClub ;
        foaf:name ?nickname .
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?charge a dbo:MilitaryOperation ;
          dbo:commander ?commander .
  
  ?commander foaf:name ""George Pickett""@en .

  OPTIONAL { 
    ?commander dbo:partyMember dbr:Republican_Party_(United_States) .
  }

  FILTER EXISTS { ?charge rdfs:label ""Pickett's Charge""@en }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the child of Philipp Albrecht who is also a child of Albrecht
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_Württemberg ;
         dbo:parent dbr:Albrecht,_Duke_of_Württemberg .

  # Find the predecessor of this child in terms of titles or positions
  ?title a dbo:Title ;
         dbo:holder ?child .
  
  ?predecessor a dbo:Title ;
               dbo:holder ?previousHolder .
  
  FILTER(?title = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Vince_Gilligan dbo:award ?award .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# No query can be generated due to lack of specified entities.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?deathPlace WHERE {
  # Wars involving Napoleon and Zervas
  { 
    ?person1 a dbo:Person ;
             foaf:name ""Napoleon""@en .
    ?person1 dbo:participatedIn ?war .
  }
  UNION
  {
    ?person2 a dbo:Person ;
             foaf:name ""Nikolaos Zervas""@el .
    ?person2 dbo:participatedIn ?war .
  }

  # Death place of Antonios Varthalitis
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor WHERE {
  ?yuriiKhmelnytsky a dbo:Person ;
                    foaf:name ""Yurii Khmelnytsky""@en .
  
  OPTIONAL { ?yuriiKhmelnytsky dbo:successor ?successor . }
  
  OPTIONAL { 
    ?georgeDucas a dbo:Person ;
                 foaf:name ""George Ducas""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenant WHERE {
  # For Alberto Ruiz-Gallardón's residence
  OPTIONAL {
    ?alberto a dbo:Person ;
             foaf:name ""Alberto Ruiz-Gallardón""@en .
    ?residence dbo:resident ?alberto ;
               dbo:tenant ?tenant .
  }
  
  # For Miguel Maura's office
  OPTIONAL {
    ?miguel a dbo:Person ;
            foaf:name ""Miguel Maura""@en .
    ?office dbo:employee ?miguel ;
            dbo:location ?officeLocation .
    ?officeLocation dbo:tenant ?tenant .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?tenant WHERE {
  # Find Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:positionHeld ?office .

  # Find the leader from the 2003 Madrid City Council election and their residence
  ?leader a dbo:OfficeHolder ;
          dbo:electedDuring <http://dbpedia.org/resource/2003_Madrid_City_Council_election> .
  
  OPTIONAL { ?leader dbo:residence ?residence . }
  OPTIONAL { ?residence dbo:tenant ?tenant . }

  # Ensure the leader is related to Mariano Rajoy's office context
  FILTER(?office = ?leader)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?award WHERE {
  # Find the show related to Royal Swedish Academy of Sciences
  OPTIONAL {
    dbr:Royal_Swedish_Academy_of_Sciences dbo:prize ?show .
  }
  
  # Find the award received by Max Born
  OPTIONAL {
    dbr:Max_Born dbo:award ?award .
  }
}
```",2,2,3,1,2,3,2,20,1,3,0,0.25,1.0,0.4
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movieActor ?albumActor WHERE {
  # Part for the movie actor
  OPTIONAL {
    dbr:T.I. dbo:performerIn ?movie .
    ?movie dbo:actor ?movieActor .
  }

  # Part for the album actor (featured artist)
  OPTIONAL {
    dbr:T.I. dbo:album ?album .
    ?song dbo:lyricist dbr:T.I. ;
          a dbo:Songs .
    ?album dbo:song ?song .
    ?album dbo:artist ?albumActor .
  }
}
```",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?war a dbo:MilitaryConflict ;
       dbo:name ""Russo-Polish War (1654–1667)""@en .
  
  ?commander a dbo:Commander ;
             dbo:participatedInMilitaryConflicts ?war ;
             dbo:isPolitician true ;
             dbo:officeHolder true .

  ?successor dbo:succeededBy ?commander .

  OPTIONAL { ?georgeDucas a dbo:Person ;
                        foaf:name ""George Ducas""@en ;
                        dbo:role ""Commander""@en ;
                        dbo:participatedInMilitaryConflicts ?war . }

  OPTIONAL { ?jeanBaptist a dbo:Person ;
                         foaf:name ""Jean Baptist, Comte d'Arco""@en ;
                         dbo:role ?role .
                FILTER(?role IN (""Television Show"", ""Societal Event"")) }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?calder a dbo:Person ;
          foaf:name ""Robert Calder""@en .
  
  OPTIONAL { ?calder dbo:militaryCommanderOf ?war . }
  
  OPTIONAL { ?force a dbo:MilitaryForce ;
                  dbo:member ?calder ;
                  foaf:name ""The Triple X's""@en . }

  FILTER(?calder = ?commander)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""Der Blau""@en .
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?renée a dbo:Person ;
         foaf:name ""Renée of Bourbon""@en .
  
  OPTIONAL { ?renée dbo:spouse ?spouse . }
  
  ?dorothea a dbo:Person ;
            foaf:name ""Dorothea of Lorraine""@en .
  
  ?father dbo:parent ?dorothea .
  
  ?grandparent dbo:parent ?father .
  
  FILTER(?spouse = ?grandparent)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?battleForce WHERE {
  # Part 1: Commander in French campaign in Egypt and Syria
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
  }

  # Part 2: Military force of Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedIn ?battleForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Grant Esterhuysen""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  ?ian a dbo:Person ;
       foaf:name ""Ian Gregson""@en .
  
  ?award dbo:recipient ?ian .

  ?movie dbo:awardsReceived ?award ;
         dbo:producer ?producer .

  ?producer foaf:mbox ?email ; # Assuming mbox is used for identifying individuals
             dbo:spouse ?spouse .

  ?spouse foaf:name ""Linda Bruckheimer""@en .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Konstantinos Ventiris
  ?ventiris a dbo:Person ;
            foaf:name ""Konstantinos Ventiris""@en .
  OPTIONAL { ?ventiris dbo:participatedIn ?war . }

  UNION

  # Wars involving the leader of National Party of Greece
  ?leader a dbo:Person ;
          foaf:name ?leaderName .
  ?party a dbo:PoliticalParty ;
         foaf:name ""National Party of Greece""@en .
  ?party dbo:leader ?leader .

  OPTIONAL { ?leader dbo:participatedIn ?war . }

  UNION

  # Wars involving an entity in Athens
  ?entity a dbo:Person ;
          dbo:location dbr:Athens .
  OPTIONAL { ?entity dbo:participatedIn ?war . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfSawShweKhet ?childOfParentMinHlaHtut WHERE {
  # Find the spouse of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?sawShweKhet dbo:spouse ?spouseOfSawShweKhet . }

  # Find the parent of Min Hla Htut of Pyakaung
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut of Pyakaung""@en .
  OPTIONAL { ?minHlaHtut dbo:parent ?parentOfMinHlaHtut . }

  # Find the child of that parent
  OPTIONAL { ?parentOfMinHlaHtut dbo:child ?childOfParentMinHlaHtut . }

  # Find Myat Hpone Pyo's predecessor
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  OPTIONAL { ?predecessor dbo:successor ?myatHponePyo . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild ?parentOfAmy WHERE {
  # Find Allan Arbus and his child's parent
  ?allan a dbo:Person ;
         foaf:name ""Allan Arbus""@en .
  
  OPTIONAL { 
    ?child dbo:parent ?allan .
    ?childParent dbo:parent ?child .
    BIND(?childParent AS ?parentOfChild)
  }
  
  # Find Amy Arbus and her parent
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  
  OPTIONAL { 
    ?parentOfAmy dbo:parent ?amy .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Constance_of_Burgundy a dbo:Person ;
                            dbo:spouse ?spouse .
  
  FILTER(?spouse a dbo:Monarch)
  
  ?spouse dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Nick_Curran dbo:associatedBand ?band .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work a dbo:Work ;
        dbo:genre ""Book"" ;
        dbo:country dbr:United_States .
  
  ?work dbo:author ?author .

  ?author a dbo:Person ;
          dbo:officeHolder true ;
          dbo:politician true ;
          dbo:militaryService [ 
            dbo:branch dbr:North_Carolina_Air_National_Guard ;
            dbo:rank ""Commander"" ] .
}
```",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Na'od's father
  ?naodFather a dbo:Person ;
              dbo:child dbr:Na'od_of_Ethiopia .

  # Na'od's grandfather (father of his father)
  ?grandfather a dbo:Person ;
               dbo:child ?naodFather .

  # Ensure the person is royalty and an office holder
  ?grandfather dbo:Monarch ?monarchy .
  OPTIONAL { ?grandfather foaf:holdsAccount ?office } .

  # Placeholder for connection to ""The Shadow""
  # This part might require additional context or creative interpretation
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  dbr:Peter_IV_of_Aragon dbo:father ?father .
  ?father dbo:child ?royalChild .
  FILTER(?royalChild a dbo:Royalty)
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .

  # Ferdinand III, Holy Roman Emperor's child and commander in the war
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?ferdinandChild .
  
  OPTIONAL { ?commander a dbo:Person ;
                     dbo:role ""Commander""@en ;
                     dbo:memberOf ?dragoonRegiment . }
  
  # Linking commander to the dragoon regiment
  dbr:2nd_Dragoon_Regiment_(France) dbo:member ?commander .
  
  # Societal event, event, and television show association
  OPTIONAL { ?event a dbo:SocietalEvent ;
                 dbo:associatedWith ?dragoonRegiment . }
  OPTIONAL { ?tvShow a dbo:TelevisionShow ;
                  dbo:relatedTo ?dragoonRegiment . }

  # Connecting the father of Cecilia Renata to Ferdinand III's child
  FILTER(?father = ?ferdinandChild)

  # Ensuring the commander is related to both societal events and television shows
  FILTER(?commander = ?child)
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Back_to_Work_(book) dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    dbr:Cece_Bell dbo:birthPlace ?birthPlace .
    BIND(dbr:Cece_Bell AS ?person)
  }
  UNION
  { 
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
    BIND(dbr:Glenn_Youngkin AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?playerRole WHERE {
  dbr:Juan_Carlos_Molina_(footballer) a dbo:Person ;
                                      dbo:birthday ""1979-11-03""^^xsd:date .
  
  OPTIONAL { dbr:Juan_Carlos_Molina_(footballer) dbo:team ?team . }
  
  OPTIONAL { 
    {
      dbr:Juan_Carlos_Molina_(footballer) dbo:sportTeam ?team ;
                                            a dbo:SoccerPlayer .
    } UNION {
      dbr:Juan_Carlos_Molina_(footballer) dbo:managerTeam ?team ;
                                            a dbo:SoccerManager .
    }
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bruno Daniel Marie Paul Retailleau""@en .
  
  OPTIONAL { ?person dbo:party ?party . }
  
  FILTER EXISTS { ?person dbo:officeHolder ?office } # Ensures he is an office holder
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  ?leader dbo:leader ?party ;
          dbo:nationality dbr:Spain .

}
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ceceBellBirthPlace ?awardeeBirthPlace WHERE {
  dbr:Cece_Bell dbo:birthPlace ?ceceBellBirthPlace .
  
  dbr:Vince_Gilligan dbo:award ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fabulousThunderbirds ?nickCurran ?person WHERE {
  # Find The Fabulous Thunderbirds reference
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
                               foaf:name ""The Fabulous Thunderbirds""@en .

  # Find Nick Curran's association with The Fabulous Thunderbirds
  OPTIONAL { 
    ?nickCurran a dbo:MusicalArtist ;
                foaf:name ""Nick Curran""@en .
    ?association dbo:associatedBand ?fabulousThunderbirds ;
                 dbo:associatedMusician ?nickCurran .
  }

  # Find the person born on 1945-03-30 who is a musical artist and band member
  OPTIONAL {
    ?person a dbo:MusicalArtist ;
            foaf:birthday ""1945-03-30""^^xsd:date ;
            dbo:memberOfBand ?band .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  ?actor dbo:film ?movie .
  ?movie foaf:name ""High Society Blues""@en .

  OPTIONAL { 
    ?movie dbo:producer ?producer .
  }

  FILTER EXISTS { ?actor dbo:profession dbr:Actor . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find the child of Saw Shwe Khet who is a royalty
  ?child dbo:parent dbr:Saw_Shwe_Khet ;
         a dbo:Royalty .

  # Find the father of that child, ensuring he is also a royalty
  ?child dbo:parent ?father .
  FILTER(?father != dbr:Saw_Shwe_Khet) # Ensure it's not Saw Shwe Khet himself
  FILTER EXISTS { ?father a dbo:Royalty }
}
```",2,4,3,2,1,3,3,71,0,1,1,0.0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:actor ?herberson .
  
  ?herberson foaf:name ""Herschel Bernardi""@en .

  OPTIONAL { 
    ?eugene a dbo:Person ;
            foaf:name ""Eugène Cattin""@en .
    
    ?profession dbo:professional ?eugene .
    ?parentOfProfession dbo:child ?profession .
    
    ?actor dbo:actor ?movie .
    FILTER(?parentOfProfession = ?herberson)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:child ?parent .
  ?parent a dbo:Person ;
          dbo:parent ?grandParent .
  ?grandParent a dbo:Person ;
               dbo:parent ?father .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?originalName WHERE {
  dbr:The_Fabulous_Thunderbirds dbo:originalName ?originalName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?birthName ?associatedArtist WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Find Joey B's birth name
  ?joeyB a dbo:Person ;
         foaf:name ""Joey B""@en .
  OPTIONAL { ?joeyB foaf:name ?birthName . }

  # Find Stonebwoy's associated musical artist
  ?stonebwoy a dbo:MusicalArtist ;
             foaf:name ""Stonebwoy""@en .
  OPTIONAL { ?stonebwoy dbo:associatedMusicalArtist ?associatedArtist . }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild ?parentOfPhotographer WHERE {
  # Part 1: Parent of Allan Arbus's child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  
  ?child dbo:parent ?allanArbus .
  ?parentOfChild a dbo:Person ;
                 foaf:name ?parentName .
  FILTER(?child dbo:parent ?parentOfChild)

  # Part 2: Parent of the professional in Photographer
  ?photographer a dbo:Photographer ;
                foaf:name ?photographerName .
  
  ?parentOfPhotographer a dbo:Person ;
                        foaf:name ?parentPhotographerName .
  FILTER(?photographer dbo:child ?parentOfPhotographer)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandparent WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Muna al-Hussein""@en .
  
  ?child dbo:childOf ?princess ;
         a dbo:Royalty .

  ?grandchild dbo:childOf ?child ;
              a dbo:Royalty .

  ?grandparent dbo:parentOf ?grandchild .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Apache Indian""@en .
  OPTIONAL { ?person dbo:musicalWork ?work . }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerOfJohnnyDoughboy ?producerOfJanetGaynorMovie WHERE {
  # Find the producer of ""Johnny Doughboy""
  dbr:Johnny_Doughboy dbo:producer ?producerOfJohnnyDoughboy .

  # Find a movie associated with Janet Gaynor as both actor and producer
  ?movie dbo:actor dbr:Janet_Gaynor ;
         dbo:producer dbr:Janet_Gaynor .
  
  # Retrieve the producer of that movie
  ?movie dbo:producer ?producerOfJanetGaynorMovie .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?tvShow a dbo:TelevisionSeries ;
          dbo:starring ?richardGrant .
  
  ?richardGrant foaf:name ""Richard E. Grant""@en .

  ?tvShow dbo:character ?mainCharacter .
  
  ?mainCharacter dbo:alterEgo ?comicAlterEgo .
  
  ?comicAlterEgo dbo:relatedTo dbr:The_Shadow_(video_game) ;
                 a dbo:ComicBook .
  
  ?actor foaf:name ?actorName .
  ?tvShow dbo:starring ?actor .

  FILTER(?richardGrant != ?actor)
}
```",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?label ?reference WHERE {
  dbr:Nobel_Prize_in_Physics 
    rdfs:label ?label ;
    dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,0,57,1,0.0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Part 1: Player related to Juan Carlos Molina and an actor from ""All or Nothing: Manchester City""
  
  # Find Juan Carlos Molina
  ?molina a dbo:FootballPlayer ;
          foaf:name ""Juan Carlos Molina""@en .
  
  # Find actors in ""All or Nothing: Manchester City""
  ?actor a dbo:Actor ;
         dbo:workFeaturedIn dbr:All_or_Nothing:_Manchester_City .
  
  # Find common player
  OPTIONAL { ?molina dbo:teamMember ?player . }
  OPTIONAL { ?actor dbo:plays ?player . }

  FILTER(?player != NULL)

  # Part 2: Team related to someone born on Marcelo Sarmiento's birthday who is a soccer player and manager
  
  # Find Marcelo Sarmiento
  ?sarmiento a dbo:Person ;
             foaf:name ""Marcelo Sarmiento""@en .
  
  # Get his birthdate
  ?sarmiento dbo:birthday ?birthdate .

  # Find person born on the same date who is both a soccer player and manager
  ?person a dbo:Person ;
          dbo:birthday ?birthdate ;
          (dbo:SoccerPlayer|dbo:SoccerManager) ?role .
  
  OPTIONAL { ?person dbo:teamMember ?team . }
}

```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForceEgyptSyria ?conflict ?militaryForceBayne WHERE {
  # French campaign in Egypt and Syria
  dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
  OPTIONAL { ?commander dbo:militaryForce ?militaryForceEgyptSyria . }
  
  # Military conflict involving William Bayne
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?bayne .
  dbr:William_Bayne_(Royal_Navy_officer) ?bayne .
  OPTIONAL { ?bayne dbo:militaryForce ?militaryForceBayne . }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember WHERE {
  OPTIONAL {
    ?alias a dbo:MusicalArtist ;
           foaf:name ""Phantomsmasher""@en .
    ?alias dbo:associatedBand ?artistResource .
    ?artistResource foaf:name ?associatedArtist .
  }
  
  dbr:Human_Remains_(band) dbo:member ?bandMember .
}
```",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?resource WHERE {
  ?resource rdfs:label ""Peter IV""@en .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of the Battle of Vienna
  dbr:Battle_of_Vienna dbo:commander ?commander .

  # Check if this person is depicted in a television show or related to a societal event
  OPTIONAL { ?commander dbo:depicts ?tvShow . }
  OPTIONAL { ?commander dbo:societalEvent ?event . }

  FILTER(?tvShow != UNDEF || ?event != UNDEF)
}
```",3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard""@en .
  
  OPTIONAL { 
    ?person dbo:birthPlace dbr:Florida .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?royalChild WHERE {
  dbr:Maria_Anna_of_Bavaria (dbo:child) ?royalChild .
  
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  ?royalChild dbo:parent ?fatherOfRoyalChild .

  dbr:Ferdinand_III,_Holy_Roman_Emperor (dbo:child) ?childOfFerdinand .
  
  ?fatherOfRoyalChild dbo:parent ?childOfFerdinand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?otherProfessional WHERE {
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  
  ?sam dbo:profession ?profession .

  ?otherProfessional a dbo:Person ;
                     foaf:name ?name ;
                     dbo:profession ?sameProfession .

  FILTER(?profession = ?sameProfession)
  FILTER(?sam != ?otherProfessional) # Exclude Sam himself
}
```",2,2,3,2,1,3,3,71,0,0,45131,0,0.0,0
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenantOfSantiago ?countryOfSpanishCitizen WHERE {
  # Find tenant of Santiago de Compostela
  dbr:Santiago_de_Compostela dbo:city ?santiago .
  OPTIONAL { ?santiago dbo:tenant ?tenantOfSantiago . }

  # Find country of a Spanish citizen
  ?spanishPerson foaf:nationality dbr:Spain .
  OPTIONAL { ?spanishPerson dbo:residenceCountry ?countryOfSpanishCitizen . }
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgoPerson ?actor WHERE {
  ?character a dbo:FictionalCharacter ;
             foaf:name ""The Shadow""@en .
  
  OPTIONAL { ?character dbo:alterEgo ?alterEgoPerson . }
  
  OPTIONAL { 
    ?alterEgoPerson dbo:profession ?actor .
    FILTER(?actor = dbo:Actor)
  }
}
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?institution WHERE {
  dbr:Brian_Kemp a dbo:Person .
  
  OPTIONAL { 
    ?position dbo:agent dbr:Brian_Kemp ;
              dbo:organization ?institution .
  }
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Faisal_bin_Hussein dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:Royalty . }
  
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:child ?individual .

  # Ensure this individual is a predecessor (in terms of lineage) to Carl, Duke of Württemberg
  ?individual dbo:parent* dbr:Carl,_Duke_of_W%C3%BCrttemberg .

  # Find the child of Albrecht, Duke of Württemberg
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?individual .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?afeez a dbo:Person ;
         foaf:name ""Afeez Oyetoro""@en .
  
  ?movie dbo:film ;
         dbo:actor ?afeez .

  ?movie dbo:actor ?actor .
}
```",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  dbr:Stephen_V_of_Hungary dbo:child ?individual .
  ?individual dbo:parent dbr:Charles_Martel_of_Anjou .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?show dbo:title ""All or Nothing: Manchester City""@en .
  ?actor dbo:actorIn ?show ;
         a dbo:SoccerPlayer ;
         dbo:athlete true .

  # Find players associated with Pablo Aimar
  ?pabloAimar a dbo:SoccerPlayer ;
              foaf:name ""Pablo Aimar""@en .
  OPTIONAL { ?team dbo:member ?pabloAimar . }
  OPTIONAL { ?player dbo:member ?team }

  # Filter by birthdate of Marty Pollio
  ?martyPollio a dbo:Person ;
               foaf:birthday ?birthday .
  FILTER(STR(?birthday) = ""1975-09-25""^^xsd:date) # Assuming Marty Pollio's birthday is known

  OPTIONAL { ?player foaf:birthday ?birthday }

  # Ensure the player is an athlete
  ?player a dbo:Person ;
          dbo:athlete true .

  FILTER (?actor = ?player)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:Florida .
  ?bandMemberRelation a dbo:Band ;
                      dbo:name ""Uncle Murda""@en .
  ?bandMemberRelation dbo:member ?person .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?royaltyChild WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  ?child dbo:parent ?grandParent .

  ?grandParent dbo:child ?royaltyChild .
  
  FILTER (?royaltyChild rdf:type dbo:Royalty)
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?band WHERE {
  # Get Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  ?sam dbo:profession ?profession .

  # Get Bob Thompson's birth name
  ?bob a dbo:Person ;
       foaf:name ""Bob Thompson (musician)""@en .
  ?bob foaf:givenName ?birthName .

  # Find any musical artist with the same birth name and get their band
  ?artist a dbo:MusicalArtist ;
          foaf:givenName ?birthName .
  OPTIONAL { ?artist dbo:band ?band . }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the alter ego of The Shadow and its actor
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:actor ?actor .

  # Ensure the actor is in a movie that is also a television show
  ?movie dbo:starring ?actor ;
         rdf:type dbo:Film ;
         dbo:basedOnSource dbr:The_Shadow .
  FILTER EXISTS { ?tvShow dbo:basedOnSource dbr:The_Shadow . }

  # Find Richard Grant Esterhuysen's birth name and any professional connection
  dbr:Richard_Grant_Esterhuysen foaf:name ""Richard Grant Esterhuysen""@en ;
                                foaf:birthday ?birthDate .
  
  OPTIONAL { ?actor dbo:profession ?profession . }
}
```",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedBand WHERE {
  ?person a dbo:Person ;
          foaf:name ""Billy Lyall""@en .
  OPTIONAL { ?person dbo:associatedBand ?associatedBand . }
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find the children of Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  # Find the parents of those children
  ?child dbo:parent ?parent .

  # Find individuals who have been awarded Commander of the Royal Victorian Order
  ?awardee a dbo:Person ;
           dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .

  # Find the parents of these awardees
  ?awardee dbo:child ?awardeeChild .
  ?awardeeChild dbo:parent ?awardeeParent .

  # Match the parent from both groups
  FILTER(?parent = ?awardeeParent)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?movie WHERE {
  ?movie a dbo:Film ;
         dbo:workType/dbo:subClassOf* dbo:TelevisionShow .
  
  ?artist a dbo:Artist, dbo:MusicalArtist ;
          dbo:dateOfDeath ?deathDate .

  FILTER(xsd:date(?deathDate) = ""2020-06-18""^^xsd:date)

  ?movie dbo:starring|dbo:director ?artist .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?manager WHERE {
  ?player a dbo:Person ;
          foaf:name ""Jamie McCunnie""@en .
  
  ?club dbo:sportsTeam true ;
        dbo:member ?player ;
        dbo:teamManager ?manager .

  FILTER EXISTS { 
    ?club dbo:type dbr:Soccer_club .
  }
}
```",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardEntity WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Hamilton Cameron""@en .
  
  ?person dbo:award ?award .

  OPTIONAL { ?award dbo:awardingBody ?awardEntity . }
  OPTIONAL { ?award dbo:recipient ?awardEntity . }
}
```",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?film WHERE {
  ?person a dbo:Person ;
          foaf:name ""Manuel Huerga""@en .
  
  ?film a dbo:Film ;
        dbo:director ?person .

}
```",1,2,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenantOffice ?leaderOfficeEvent WHERE {
  ?anxo a dbo:Person ;
        foaf:name ""Anxo Quintana""@en .
  
  OPTIONAL { 
    ?anxo dbo:officeHolder ?tenantOffice .
    ?tenantOffice dbo:headquarterLocation dbr:Santiago_de_Compostela .
  }
  
  OPTIONAL {
    ?leaderOffice a dbo:PoliticalParty ;
                  dbo:leader ?anxo .
    ?event a dbo:Event ;
           dbo:location ?leaderOffice .
    FILTER(?event != """")
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Antoine,_Duke_of_Lorraine dbo:child ?child .
  FILTER(?child rdf:type dbo:Monarch)
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist .
  
  ?associatedArtist dbo:bandMember ?bandMember .
  
  FILTER EXISTS { ?bandMember a dbo:MusicalArtist . }
}
```",2,3,3,2,1,3,3,71,1,1,6,0.5,0.14285714285714285,0.22222222222222224
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Birth places of Paulus Powell, Vince Gilligan, and Cece Bell
  VALUES (?person) { 
    dbr:Paulus_Powell 
    dbr:Vince_Gilligan 
    dbr:Cecilie_Bell 
  }
  
  ?person dbo:birthPlace ?region .
  
  # Ensure the birth place is a region and an administrative region
  ?region rdf:type dbo:Region ;
          rdf:type dbo:AdministrativeRegion .

  # Find governors who are politicians for these regions
  ?governor a dbo:Person, dbo:Politician ;
            dbo:governmentRole dbo:Governor ;
            dbo:birthPlace ?governorBirthPlace .
  
  # Link the governor to the region
  ?region dbo:country ?country .
  ?governor dbo:officeLocation ?country .

}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?award WHERE {
  dbr:Nobel_Prize_in_Physics dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:award ?award . }
}
```",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Find spouse of Archduchess Helena of Austria
  ?helena a dbo:Person ;
          foaf:name ""Helena, Archduchess of Austria""@en .
  
  ?spouse dbo:spouse ?helena .

  # Identify child of this spouse who is also a royalty and child of Margarete Sophie
  ?child dbo:parent ?spouse ;
         dbo:royalty ?royalTitle ;
         dbo:parent ?margareteSophie .
  
  ?margareteSophie a dbo:Person ;
                   foaf:name ""Margarete Sophie, Archduchess of Austria""@en .

  # Find predecessor of this royal child
  ?predecessor dbo:successor ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to get Jamsetji Tata's birthplace (native of India)
SELECT ?birthPlace WHERE {
  dbr:Jamsetji_Tata dbo:birthPlace ?birthPlace .
}

# Query to find the origin of the Tata Group
SELECT ?origin WHERE {
  dbr:Tata_Group dbo:foundingLocation ?origin ;
                 dbo:foundedBy dbr:Jamsetji_Tata .
}
```",3,4,4,2,2,2,2,9,0,0,21,0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childName WHERE {
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  OPTIONAL { 
    ?child foaf:name ?childName .
  }
  
  FILTER EXISTS {
    ?child dbo:occupation ?occupation .
    ?occupation rdfs:label ""politician""@en .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthday ""1955-02-22""^^xsd:date .
  
  OPTIONAL { 
    ?person dbo:sportTeam dbr:Manchester_City_F.C. . # Assuming the person is linked to Manchester City as an athlete
  }
  
  OPTIONAL {
    ?tvShow dbo:actor ?person ;
            rdfs:label ""All or Nothing: Manchester City""@en .
  }

  FILTER EXISTS { 
    ?person dbo:sportTeam dbr:Manchester_City_F.C. . # Ensures the person is linked to Manchester City as an athlete
  }
  
  FILTER EXISTS {
    ?tvShow dbo:actor ?person ;
            rdfs:label ""All or Nothing: Manchester City""@en .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Stuart Mcbeath Tosh's birth details
  OPTIONAL { 
    dbr:Stuart_Mcbeath_Tosh dbo:birthday ?birthDate .
    dbr:Stuart_Mcbeath_Tosh dbo:birthPlace ?birthPlace .
  }

  # Match persons with the same birth date and place, who are musical artists
  ?person a dbo:MusicalArtist ;
          dbo:birthday ?matchedBirthDate ;
          dbo:birthPlace ?matchedBirthPlace .

  FILTER (?birthDate = ?matchedBirthDate && ?birthPlace = ?matchedBirthPlace)
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonChild WHERE {
  # Find children of Ferdinand II
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?childOfFerdinand2 .
  
  # For each child of Ferdinand III, find their parent
  dbr:Ferdinand_III,_Holy_Roman_Empire dbo:child ?childOfFerdinand3 .
  ?parentOfChildOfFerdinand3 dbo:child ?childOfFerdinand3 .

  # Match the common individual who is both a child of Ferdinand II and a parent of one of Ferdinand III's children
  FILTER(?childOfFerdinand2 = ?parentOfChildOfFerdinand3)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Miller""@en .
  FILTER(CONTAINS(LCASE(STR(?person)), ""linda miller actress""))
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?singerRole ?alterEgo ?band WHERE {
  # Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Profession as a singer
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbo:profession ?singerRole .
    FILTER(CONTAINS(LCASE(STR(?singerRole)), ""singer""))
  }

  # Alter ego of The Shadow
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?alterEgo .
    ?alterEgo dbo:associatedWith dbr:Bob_Thompson_(musician) .
  }

  # Band association
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:band ?band .
  }
}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfAnxo ?countryOfAlvaro WHERE {
  # Find Anxo Quintana's office in an administration event
  ?anxo a dbo:Person ;
        foaf:name ""Anxo Quintana""@en .
  
  OPTIONAL { 
    ?administrationEvent dbo:leader ?anxo ;
                         a dbo:Event .
    
    ?administrationEvent dbo:office ?officeOfAnxo .
  }
  
  # Find Álvaro Quirós's country as tenant of Santiago de Compostela
  ?alvaro a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .

  OPTIONAL {
    ?residence dbr:Santiago_de_Compostela ;
               dbo:tenant ?alvaro .
    
    ?country dbo:resident ?alvaro ;
             a dbo:Country .
    
    BIND(?country AS ?countryOfAlvaro)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfShweKhet ?predecessor WHERE {
  # Find the spouse of Saw Shwe Khet
  ?shweKhet a dbo:Person ;
            foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?shweKhet dbo:spouse ?spouseOfShweKhet . }

  # Find the royal child of Saw Min Phyu's spouse and their predecessor
  ?minPhyu a dbo:Person ;
           foaf:name ""Saw Min Phyu""@en .
  OPTIONAL { ?minPhyu dbo:spouse ?spouseOfMinPhyu . }
  
  OPTIONAL { ?spouseOfMinPhyu dbo:child ?royalChild . }
  FILTER(?royalChild a dbo:Royalty)
  
  OPTIONAL { ?royalChild dbo:predecessor ?predecessor . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  
  FILTER EXISTS { ?award dbo:country dbr:United_States }
  FILTER EXISTS { ?award a dbo:Settlement }
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country WHERE {
  ?person dbo:nationality dbr:Spain ;
          dbo:residence ?santiagoResidence .
  
  ?santiagoResidence dbo:location dbr:Santiago_de_Compostela .

  ?office dbo:head dbr:Alberto_Núñez_Feijóo ;
          dbo:member ?person .

  ?country dbo:country ?santiagoResidence .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerMolina ?playerAgüero ?person ?team WHERE {
  # Get player associated with Juan Carlos Molina
  dbr:Juan_Carlos_Molina_(footballer) dbo:playsFor ?team .
  OPTIONAL { ?team dbo:member ?playerMolina . FILTER(?playerMolina != dbr:Juan_Carlos_Molina_(footballer)) }

  # Get player associated with Sergio Agüero
  dbr:Sergio_Agüero dbo:playsFor ?agüeroTeam .
  OPTIONAL { ?agüeroTeam dbo:member ?playerAgüero . FILTER(?playerAgüero != dbr:Sergio_Agüero) }

  # Get birthdate of Marcelo Sarmiento
  dbr:Marcelo_Sarmiento dbo:birthday ?birthdate .

  # Find a person who is both a soccer player and manager born on the same date as Marcelo Sarmiento
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?sameBirthdate ;
          dbo:managerOf ?team .
  FILTER(?sameBirthdate = ?birthdate)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?parentBirthName WHERE {
  # Part 1: Find the spouse of Roger Pryor (actor)
  ?roger a dbo:Actor ;
         foaf:name ""Roger Pryor""@en .
  OPTIONAL { ?roger dbo:spouse ?spouse . }

  # Part 2: Find the birth name of Tisha Sterling's parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  ?parent dbo:child ?tisha .
  OPTIONAL { ?parent foaf:name ?parentBirthName }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player WHERE {
  ?series a dbo:TelevisionSeries ;
          foaf:name ""All or Nothing: Manchester City""@en .
  
  ?player dbo:actorIn ?series ;
          dbo:soccerPlayer true ;
          dbo:athlete true .

}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Find the father of Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:father ?catherineFather .

  # Find Dorothea's parent (likely her father)
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:parent ?dorotheaParent .

  # Ensure the common ancestor is both Catherine's father and Dorothea's grandparent
  ?catherineFather = ?commonAncestor .
  ?dorotheaParent dbo:child ?dorotheaGrandparent .
  ?commonAncestor = ?dorotheaGrandparent .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  {
    dbr:Shelby_Oaks dbo:portrayedBy ?actor .
  }
  UNION
  {
    dbr:The_Shadow dbo:portrayedBy ?actor .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child WHERE {
  # Find Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  
  # Find the child of this spouse who is royalty
  ?spouseChild dbo:parent ?spouse ;
               a dbo:Person ;
               (dbo:royalTitle|foaf:name) ?childName .

  # Ensure the child is royalty
  FILTER EXISTS { ?spouseChild dbo:royalTitle ?title . }

  # Find Roger III, Duke of Apulia and his parent
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?rogerParent .
  
  # Find the child of this parent
  ?child dbo:parent ?rogerParent .

  # Ensure we are looking at the same person in both contexts
  FILTER(?spouseChild = ?child)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Cecilia Renata of Austria's parent
  dbr:Cecilia_Renata_of_Austria dbo:parent ?father .
  
  # Find Eleonore of Austria, Queen of Poland's parent
  dbr:Eleonore_of_Austria_Queen_of_Poland dbo:parent ?father .

  # Find the child of this father
  ?father dbo:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfFlorida ?birthName WHERE {
  # Get Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?bobbyBirthName .

  # Find individuals native to Florida with the same birth name as Bobby Shmurda
  ?person a dbo:Person ;
          dbp:nativePlace dbr:Florida ;
          foaf:name ?name ;
          dbo:birthName ?birthName .
  
  FILTER(?birthName = ?bobbyBirthName)

  # Ensure they are musical artists and band members of any musical artist
  ?person dbo:musicalArtist true .
  OPTIONAL { ?bandMemberRelation dbo:bandMemberOf ?musicalArtist . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor ?professional WHERE {
  dbr:ATL_(film) dbo:starring ?actor .

  OPTIONAL {
    ?series rdfs:label ""The Golden Master""@en .
    ?professional dbo:alterEgo ?series .
  }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  dbr:Margarete_Sophie_of_Austria dbo:parent ?parentOfSophie .

  # Identify their child who is also a child of Albrecht, Duke of Württemberg
  ?childOfParent dbo:child ?parentOfSophie ;
                 dbo:child dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Find the child of this individual who is royalty
  ?royalChild dbo:child ?childOfParent ;
              rdf:type dbo:Royalty .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Manuel_Pinto_da_Costa dbo:participatedIn ?event .
  
  FILTER EXISTS { ?event a dbo:MilitaryConflict . }
  FILTER EXISTS { ?event a dbo:SocietalEvent . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Find Hillary Clinton's spouse
  ?hillary a dbo:Person ;
           foaf:name ""Hillary Clinton""@en .
  
  OPTIONAL { ?hillary dbo:spouse ?spouse . }
  
  # Check if the spouse was a commander in a war that is both a disease and societal event
  ?war a dbo:MilitaryConflict ;
      dbo:hasParticipant ?commander ;
      dbo:participatingMilitaryForce dbr:United_States_Navy .
  
  ?commander dbo:spouse ?spouse .
  
  # Filter wars described as diseases and societal events
  ?war dbo:description ?description .
  FILTER(CONTAINS(LCASE(?description), ""disease"") && CONTAINS(LCASE(?description), ""societal event""))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandGrandchildOfAlexander ?predecessorChildOfPhilipp WHERE {
  # Find Alexander of Württemberg
  dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) dbo:child ?child1 .
  ?child1 dbo:child ?child2 .
  ?child2 dbo:child ?grandGrandchildOfAlexander .

  # Find Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?childOfPhilipp .

  # Find the predecessor in generational terms
  OPTIONAL {
    ?predecessorChildOfPhilipp dbo:parent ?childOfPhilipp .
    FILTER(?grandGrandchildOfAlexander != ?predecessorChildOfPhilipp)
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  ?eugene a dbo:Person ;
          foaf:name ""Eugène Cattin""@en .
  
  OPTIONAL { 
    ?professional dbo:profession ?profession .
    ?eugene dbo:relatedTo ?professional .
    
    ?professional dbo:parent ?parent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?show WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Afeez Oyetolo""@en .
  
  ?show a dbo:Film ; # Assuming films are also considered shows
        dbo:starring ?actor .

  OPTIONAL { ?show dbo:genre ?genre . }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find Philip, Despot of Romania and his parent who is royalty
  dbr:Philip_Despot_of_Romania dbo:child ?philipParent .
  
  FILTER EXISTS { ?philipParent a dbo:RoyalFamily . }
  
  # Identify the father of this royal parent
  ?philipParentParent dbo:parent ?philipParent .
  
  # Find the spouse of this father
  OPTIONAL { ?philipParentParent dbo:spouse ?spouse . }

  # Find Béla IV of Hungary and his child who is royalty
  dbr:Béla_IV_of_Hungary dbo:child ?belaChild .

  FILTER EXISTS { ?belaChild a dbo:RoyalFamily . }
  
  # Identify the child of this royal child
  ?belaGrandchild dbo:parent ?belaChild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?miguelMauraOffice WHERE {
  # Part 1: Office of the Commander in Central African Republic Civil War
  {
    ?war a dbo:MilitaryConflict ;
        dbo:location dbr:Central_African_Republic .
    
    ?person dbo:office ?commanderOffice ;
            dbo:politicalPartyMember ?party ;
            rdf:type dbo:Politician ;
            dbo:role ?role .
    
    FILTER(?role = ""Commander"")
  }
  
  # Part 2: Office of Miguel Maura
  {
    dbr:Miguel_Maura dbo:office ?miguelMauraOffice ;
                     rdf:type dbo:Politician .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  ?helena a dbo:Person ;
          foaf:name ""Archduchess Helena of Austria""@en .
  
  OPTIONAL { ?helena dbo:spouse ?spouse . }
  
  FILTER EXISTS { ?spouse a dbo:Royalty } # Ensure the spouse is royalty
  
  OPTIONAL { ?child dbo:parent ?spouse . }
  
  OPTIONAL { ?predecessor dbo:successor ?child . }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfStephenV ?grandparentRoyalty ?spouseOfGrandparent WHERE {
  # Find child of Stephen V of Hungary
  dbr:Stephen_V_of_Hungary dbo:child ?childOfStephenV .

  # Find grandparent who is royalty
  ?childOfStephenV dbo:parent ?parentOfChild .
  ?parentOfChild dbo:parent ?grandparentRoyalty .
  FILTER(?grandparentRoyalty a dbo:Monarch)

  # Find spouse of the grandparent
  OPTIONAL { ?grandparentRoyalty dbo:spouse ?spouseOfGrandparent }

  # Repeat similar logic for Charles I of Hungary to ensure consistency
  dbr:Charles_I_of_Hungary dbo:child ?childOfCharlesI .
  ?childOfCharlesI dbo:parent ?parentOfChild2 .
  ?parentOfChild2 dbo:parent ?grandparentRoyalty2 .
  FILTER(?grandparentRoyalty2 a dbo:Monarch)
  
  # Ensure the grandparent royalty is consistent
  FILTER(?grandparentRoyalty = ?grandparentRoyalty2)

  OPTIONAL { ?grandparentRoyalty2 dbo:spouse ?spouseOfGrandparent }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find Philip I of Castile's children who are royalty
  dbr:Philip_I_of_Castile dbo:child ?royalChild .
  
  # Ensure the child is a royalty
  ?royalChild a dbo:Monarch .

  # Identify Dorothea of Denmark, Electress Palatine's parent
  dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?dorotheasParent .
  
  # Find the father of that parent
  ?dorotheasParent dbo:father ?father .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ""William Gayner""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  FILTER (?birthPlace rdf:type dbo:Region && 
          ?birthPlace rdf:type dbo:Country)
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?actor WHERE {
  dbr:The_Shadow_(video_game) dbo:basedOn dbr:The_Shadow .
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  OPTIONAL { ?alterEgo a dbo:Actor . }
}
```",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Anita Borg Institute Women of Vision Awards""@en .
  
  ?award dbo:recipient ?awardee .

  ?awardee foaf:nationality dbr:Japan .

  OPTIONAL { ?awardee dbo:birthPlace ?birthPlace . }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer WHERE {
  # Find the birthplace of Victor Saville
  dbr:Victor_Saville dbo:nationality ?nationality .
  ?birthPlace dbo:nationality ?nationality .

  # Find Apache Indian's musical works and their writers
  ?work dbo:composer ?writer ;
        dbo:genre ""Musical"" ;
        dbo:artist dbr:Apache_Indian .

  # Ensure the writer is native to Victor Saville's birthplace
  ?writer dbo:nativePlace ?birthPlace .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .
  ?person dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?fortRoyalMilitaryForce ?capeFinisterreMilitaryForce WHERE {
  # Commander in French campaign in Egypt and Syria
  dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .

  # Military force of Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:militaryForce ?fortRoyalMilitaryForce .

  # Military force of Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryForce ?capeFinisterreMilitaryForce .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild ?parentOfAmy WHERE {
  # Find Mariclare Costello and her spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  # Find the child of the spouse
  ?child dbo:parent ?spouse .

  # Find the parent of this child
  ?parentOfChild a dbo:Person ;
                 foaf:name ?spouseName .
  
  FILTER(?spouse = ?parentOfChild)

  OPTIONAL { ?parentOfChild foaf:name ?spouseName }

  # Find Amy Arbus and her parent
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .

  ?amy dbo:parent ?parentOfAmy .
  
  OPTIONAL { ?parentOfAmy foaf:name ?amyParentName }
}
```",4,4,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Great_Turkish_War dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,40,0,0,1.0,1.0,1.0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo a dbo:Person ;
            dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the child of Albrecht, Duke of Württemberg
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?albrechtChild .

  # Find the predecessor (parent) of the child of Philipp Albrecht, Duke of Württemberg
  OPTIONAL {
    dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?philippChild .
    ?philippChild dbo:parent ?predecessor .
  }

  # Find the parent of Archduchess Margarete Sophie of Austria and her grandchild who is royalty
  OPTIONAL {
    dbr:Margarete_Sophie,_Archduchess_of_Austria dbo:parent ?margareteParent .
    ?margareteParent dbo:child ?grandChild .
    ?grandChild a dbo:Royalty .
  }

  # Ensure the child of Albrecht is the predecessor of the child of Philipp and also matches the grandchild condition
  FILTER(?albrechtChild = ?predecessor && ?albrechtChild = ?grandChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?team WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ?birthDate .
  
  FILTER(xsd:date(?birthDate) = ""1968-08-26""^^xsd:date)
  
  OPTIONAL { ?person dbo:managerOf ?team . }
  
  ?team a dbo:SoccerClubSeason ;
        a dbo:SportsSeason ;
        a dbo:SportsTeamSeason .
}
```",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  ?award a dbo:Award ;
         dbo:date ""1930""^^xsd:gYear .
  
  ?award dbo:recipient ?awardee .

  OPTIONAL { 
    ?awardee dbo:birthPlace dbr:Athens .
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:William_I_of_Sicily dbo:child ?child .
  OPTIONAL { ?child dbo:royalty ?isRoyalty . }
  FILTER(?isRoyalty != null)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?work ?professional ?producer WHERE {
  ?janet a dbo:Person ;
         foaf:name ""Janet Gaynor""@en .
  
  ?janet dbo:filmography ?work .

  OPTIONAL { ?work dbo:director ?professional . }
  OPTIONAL { ?work dbo:producer ?producer . }

}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  dbr:Maria_Anna_of_Bavary_(1574) dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  FILTER EXISTS { ?grandchild a dbo:Royalty . }
  FILTER EXISTS { ?grandchild dbo:commanderInWar <http://dbpedia.org/resource/Thirty_Years'_War> . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player WHERE {
  ?player a dbo:Athlete ;
          dbo:SoccerPlayer ;
          dbo:SportsManager ;
          dbo:SoccerManager ;
          dbo:birthDate ""1981-12-01""^^xsd:date .
}
```",2,6,3,2,1,3,2,20,0,0,6,0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  ?event dbo:agent ?person ;
         a dbo:MilitaryEvent, dbo:SocietalEvent .

  ?event dbo:militaryForce ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  ?band a dbo:Band ;
        dbo:hometown dbr:New_York_City ;
        dbo:award ?award .

  ?award dbo:nativePlace ?nativePlace .
  
  ?nativePlace a dbo:Region ;
               dbo:country dbr:United_States ;
               (dbo:state|dbo:settlement) ?placeType .
}
```",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac as a commander in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pac dbo:commanderInMilitaryConflict dbr:Great_Turkish_War .

  # Successor of Michał Kazimierz Pac
  ?successor dbo:successorOf dbr:Mikołaj_Kazimierz_Pac ;
            a dbo:Person ;
            dbo:officeHolder true ;
            dbo:politician true .

  # Ensure the successor is also involved in the Great Turkish War
  ?successor dbo:commanderInMilitaryConflict dbr:Great_Turkish_War .
  
  OPTIONAL {
    # Reference to George Ducas for additional context
    ?georgeDucas a dbo:Person ;
                 foaf:name ""George Ducas""@en .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Q-Tip's details
  dbr:Q-Tip a dbo:MusicalArtist ;
            foaf:name ""Ackquille Jean Pollard""@en .

  # Bobby Shmurda's associated musical artist (A$AP Mob)
  dbr:Bobby_Shmurda dbo:associatedBandMember ?bshMob .
  ?bshMob dbo:associatedMusicalArtist dbr:A$AP_Mob .

  # A$AP Mob is a band from New York
  dbr:A$AP_Mob dbo:originPlace dbr:New_York_City ;
               dbo:genre dbr:Hip_hop_music .

  # Find the band member of A$AP Mob who is also a musical artist
  ?bandMember dbo:associatedBandMember ?bshMob .
  ?bandMember a dbo:MusicalArtist .

  # Ensure the awardee is a band from New York (state)
  ?award dbr:Award ;
         dbo:recipient ?awardee .
  ?awardee a dbo:Band ;
           dbo:originPlace dbr:New_York_City ;
           dbo:country dbr:United_States .

  # Link the awardee to New York (state)
  FILTER(?bshMob = ?bandMember && ?awardee = dbr:A$AP_Mob)
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?manager WHERE {
  # Find Thomas Letsch's soccer club season
  ?letschSeason a dbo:SoccerClubSeason ;
                dbo:manager ?letschManager .
  
  ?letschManager foaf:name ""Thomas Letsch""@en .

  # Find Theodor Heuss's country of administration
  dbr:Theodor_Heuss dbo:nationality ?country ;
                    dbo:officeHolderOf ?office .
  
  ?office a dbo:Office ;
          dbo:location ?country .

  # Get the manager of the team that fits both criteria
  ?teamSeason a dbo:SoccerClubSeason ;
              dbo:manager ?manager .
  
  FILTER(?letschManager = ?manager)
}
```",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?militaryForceWar ?militaryForceEvent WHERE {
  # Part 1: Military force of wars involving William Bayne
  ?war a dbo:MilitaryConflict ;
       dbo:eventParticipant ?bayne .
  
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne""@en .

  OPTIONAL { ?war dbo:militaryForce ?militaryForceWar . }

  # Part 2: Military force of events involving Knight Commander of the Order of the Bath
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .

  ?event a dbo:Event, dbo:SocietalEvent ;
         dbo:eventParticipant ?awardee .
  
  OPTIONAL { ?event dbo:militaryForce ?militaryForceEvent . }
}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorAlways ?actorParadise ?spouseAwardee WHERE {
  # Actor of Always (1989 film)
  dbr:Always_(film) dbo:starring ?actorAlways .

  # Actor of Paradise (2013 film)
  dbr:Paradise_(2013_film) dbo:starring ?actorParadise .

  # Awardee from Janusz Kamiński's list of awards and nominations
  OPTIONAL {
    ?award a dbo:Award ;
          dbo:recipient ?awardee .
    FILTER(CONTAINS(LCASE(?awardee), ""janusz kamiński""))
    
    ?awardee dbo:spouse ?spouseAwardee .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Commander of the Royal Victorian Order""@en .
  
  ?recipient dbo:recipient ?award ;
             a dbo:Person .

  OPTIONAL { ?recipient foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  ?child dbo:parent ?parent .
  
  FILTER EXISTS { 
    ?parent a dbo:Politician .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?audrey .
  
  ?audrey foaf:name ""Audrey Hepburn""@en .

  ?movie dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,62,11,0,0.8493150684931506,1.0,0.9185185185185185
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfDoon ?movie ?actor ?profession ?professional WHERE {
  # Find the parent of Doon Arbus
  ?doon a dbo:Person ;
        foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?doon dbo:parent ?parentOfDoon . }

  # Find the movie with Herschel Bernardi as an actor
  ?movie a dbo:Film ;
         dbo:actor ?herchelBernardi .
  ?herchelBernardi foaf:name ""Herschel Bernardi""@en .

  # Find Eugène Cattin's profession and a professional in that field
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  OPTIONAL { ?eugeneCattin dbo:profession ?profession . }
  
  OPTIONAL {
    ?professional a dbo:Person ;
                  dbo:profession ?profession .
  }

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify the child of Roger II who is royalty
  dbr:Roger_II_of_Sicily dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:Monarch . }

  # Step 2: Find the parent of this royal child (who must also be royalty)
  OPTIONAL { ?parentOfRoyalChild dbo:child ?royalChild . }
  FILTER EXISTS { ?parentOfRoyalChild a dbo:Monarch . }

  # Step 3: Identify William I and his royal child
  dbr:William_I_of_Sicily dbo:child ?williamRoyalChild .
  FILTER EXISTS { ?williamRoyalChild a dbo:Monarch . }

  # Ensure this child is also a child of Elvira of Castile
  OPTIONAL { ?elviraChild dbo:parent dbr:Elvira_of_Castile_Queen_of_Sicily . }
  FILTER (?williamRoyalChild = ?elviraChild)

  # Step 4: Find the father of this royal child (who is also royalty)
  OPTIONAL { ?fatherOfWillChild dbo:child ?williamRoyalChild . }
  FILTER EXISTS { ?fatherOfWillChild a dbo:Monarch . }

  # Final condition to match the parent from step 2 with the father from step 4
  FILTER (?parentOfRoyalChild = ?fatherOfWillChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?bandRealName WHERE {
  # Find the musical artist associated with Nicholas Michael Curran
  ?curran a dbo:MusicalArtist ;
          foaf:name ""Nicholas Michael Curran""@en .
  
  OPTIONAL { ?curran foaf:name ?associatedArtist . }
  
  # Find the band associated with Kim Wilson and its real name
  ?kimWilson a dbo:Musician ;
             foaf:name ""Kim Wilson""@en .
  
  ?band dbo:musicalArtist ?kimWilson ;
        foaf:name ?bandName .
  
  OPTIONAL { ?band rdfs:label ?bandRealName FILTER (lang(?bandRealName) = 'en') }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:profession ?profession .

  # Movies where both actors have roles
  ?movie dbo:starring dbr:Shatrughan_Sinha ;
         dbo:starring dbr:Richard_E._Grant .

  # Ensure the movie is also a television show
  ?movie rdf:type dbo:TelevisionShow .
}
```",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  
  ?member dbo:bandMember ?band ;
          dbo:associatedBandMember ?person .

  OPTIONAL { 
    ?nickCurran foaf:name ""Nick Curran""@en ;
                dbo:alias ?person .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Christian Ditlev Ammentorp Hansen""@en .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbp:Settlement .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .
  
  # Identify actors in these films
  ?film dbo:castMember ?actor .

  # Ensure the actor is also a soccer player and an athlete
  ?actor a dbo:SoccerPlayer, dbo:Athlete .
}
```",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativePlace ?countryOfAdministration ?soccerClubSeason WHERE {
  # Theodor Heuss's native place and country of administration
  dbr:Theodor_Heuss dbo:nativePlace ?nativePlace .
  OPTIONAL { dbr:Theodor_Heuss dbo:countryForAdministrativeDivision ?countryOfAdministration . }

  # Sports manager born on 1968-08-26
  ?manager a dbo:SportsManager ;
           foaf:birthday ""1968-08-26""^^xsd:date .

  # Soccer club season managed by the sports manager
  ?manager dbo:managerOfTeam ?team .
  ?team a dbo:SoccerClubSeason ;
        dbo:sportsTeam ?soccerTeam .
  
  BIND(?team AS ?soccerClubSeason)
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  {
    ?person a dbo:Person ;
            foaf:name ""Mariano Rajoy""@en .
    ?person dbo:office ?office .
  }
  UNION
  {
    ?party a dbo:PoliticalParty ;
           foaf:name ""Partido Popular (Spain)""@en .
    ?leader a dbo:Politician ;
             dbo:memberOf ?party ;
             dbo:positionHeld ?leadershipRole .
    ?leadershipRole dbo:office ?office .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find Quincy Adams Gillmore and his award
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .
  
  # Find the awardee of that award
  ?awardee dbo:awardReceived ?award .

  # Find Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:servedIn ?war .

  # Connect the force of the awardee to the war involving Amasa Tracy
  ?force dbo:militaryUnitOf ?awardee .
  FILTER(?war = ?war)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Smartbomb dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:workExample ?work .
  
  ?person dbo:deathPlace dbr:Los_Angeles ;
          dbo:child ?photographer .

  ?photographer a dbo:Photographer .

  ?movie dbo:starring ?actor .

  OPTIONAL { ?person foaf:name ?name }
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?native WHERE {
  ?williamGayner a dbo:Person ;
                 foaf:name ""William Gayner""@en .
  
  ?williamGayner dbo:birthPlace ?birthplace .

  ?birthplace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  ?native dbo:nativeOf ?birthplace .
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Get Tony Hollings' birthdate
  dbr:Tony_Hollings dbo:birthday ?birthDate .

  # Find a person with the same birthdate and roles
  ?person dbo:birthday ?sameBirthDate ;
          rdf:type dbo:Athlete, dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .
  
  FILTER(?birthDate = ?sameBirthDate)
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Paulus Powell""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  FILTER (?birthPlace rdf:type dbo:Region && 
          ?birthPlace rdf:type dbo:AdministrativeRegion)
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?force WHERE {
  ?award a dbo:Award ;
         dbo:awardee ?congressAwardee .
  
  OPTIONAL { ?congressAwardee dbo:placeOfBirth ?charlestonEntity . }
  FILTER(?charlestonEntity = dbr:Charleston,_South_Carolina)

  OPTIONAL { ?congressAwardee dbo:participatedIn ?war . }

  ?gillmoreAward a dbo:Award ;
                 dbo:name ""Gillmore Medal"" .
  
  ?gillmoreAward dbo:awardee ?gillmoreAwardee .

  OPTIONAL { ?gillmoreAwardee dbo:militaryForce ?force }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child ?father WHERE {
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile, Queen of Sicily""@en .
  
  ?elvira dbo:child ?child .

  OPTIONAL { 
    ?child dbo:parent ?father .
    FILTER (?father != ?elvira)
    
    ?father a dbo:Royalty ;
            dbo:officeHolder ?office .
    
    ?williamI a dbo:Person ;
              foaf:name ""William I""@en .
    
    ?williamI dbo:relatedTo ?father .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find associated artist of Filthy Friends
  dbr:Filthy_Friends dbo:associatedBand ?band .
  
  # Find the writer or producer of ""No Alternative""
  dbr:No_Alternative dbo:producerOrWriter ?writer .

  # Find a band member who is also an associated artist with Filthy Friends
  ?artist dbo:bandMember ?band ;
          dbo:associatedBand dbr:Filthy_Friends .
  
  OPTIONAL { ?writer dbo:bandMember ?band }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoProfession WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?alterEgoProfession .
}

UNION

SELECT ?sinhaProfession WHERE {
  dbr:Shatrughan_Sinha dbo:occupation ?sinhaProfession .
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?person dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:award dbr:Medal_of_Honor .
  
  ?person dbo:birthPlace ?place .

  ?place a dbo:Settlement ;
         dbo:country dbr:United_States_of_America .

  ?entity a dbo:Entity ;
          dbo:location ?place .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?entity WHERE {
  ?entity (dbo:country|dcterms:isPartOf) dbr:Japan .
}
```",1,1,2,1,1,2,3,28,0,8916,104,0.0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?thirdLevelArtist WHERE {
  # Step 1: Find R.E.M.'s associated musical artist
  dbr:R.E.M. dbo:associatedBand ?firstLevelArtist .

  # Ensure the first level artist is a musical artist
  ?firstLevelArtist a dbo:MusicalArtist .

  # Step 2: Find the associated musical artist of the first level artist
  ?firstLevelArtist dbo:associatedBand ?secondLevelArtist .

  # Ensure the second level artist is a musical artist
  ?secondLevelArtist a dbo:MusicalArtist .

  # Step 3: Find the associated musical artist of the second level artist
  ?secondLevelArtist dbo:associatedBand ?thirdLevelArtist .
}
```",2,3,3,2,1,3,2,20,0,0,28,0,0.0,0
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?bandMemberBand WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nicholas Michael Curran""@en ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  
  OPTIONAL { 
    ?person dbo:musicalArtist ?associatedArtist . 
  }
  
  OPTIONAL {
    ?bandMember dbo:bandMember ?person .
    ?bandMember dbo:memberOfBand ?bandMemberBand .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentAmy ?parentDoon ?actor WHERE {
  # Find parents of Amy Arbus
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  ?amy dbo:parent ?parentAmy .

  # Find parents of Doon Arbus
  ?doon a dbo:Person ;
        foaf:name ""Doon Arbus""@en .
  ?doon dbo:parent ?parentDoon .

  # Find an actor of a movie associated with a person who died in Los Angeles
  ?movie a dbo:Film ;
         dbo:actor ?actor .
  
  ?person a dbo:Person ;
          dbo:deathPlace ?place .
  FILTER(CONTAINS(LCASE(?place), ""los angeles""))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    # Query for Bob Crewe's birthplace
    dbr:Bob_Crewe a dbo:Person ;
                  dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  { 
    # Query for Ethan Iverson's birthplace and his work's place of origin
    dbr:Ethan_Iverson a dbo:Person ;
                      dbo:birthPlace ?iversonBirthPlace .
    
    OPTIONAL {
      ?work dbo:artist dbr:Ethan_Iverson ;
            dbo:placeOrigin ?workBirthPlace .
      
      # Return either Ethan Iverson's birthplace or the work's place of origin
      VALUES ?person {dbr:Ethan_Iverson ?work}
      VALUES ?birthPlace {?iversonBirthPlace ?workBirthPlace}
    }
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:French_campaign_in_Egypt_and_Syria a dbo:MilitaryConflict ;
                                         dbo:commander ?commander .
  
  OPTIONAL { ?commander foaf:name ""William Bayne""@en . }
  
  ?campaign dbo:militaryForce ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the ruling party in Central, Louisiana
  ?central a dbo:Place ;
           foaf:name ""Central, Louisiana""@en .
  
  OPTIONAL { 
    ?central dbo:government ?government .
    ?government dbo:rulingParty ?rulingParty .
    
    # Find a member of this ruling party
    ?partyMember dbo:memberOfPoliticalParty ?rulingParty .
  }
  
  # Identify films produced by Nat Levine
  dbr:Nat_Levine dbo:filmProduction ?film .
  
  OPTIONAL {
    ?film dbo:actor ?actor .
    
    # Find the spouse of this actor
    ?actor dbo:spouse ?spouse .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  # Find works by Hillary Clinton
  ?workHillary a dbo:Book ;
               dbo:author ?author ;
               dbo:subject dbr:Hillary_Clinton .

  # Find works by Bill Clinton
  ?workBill a dbo:Book ;
            dbo:author ?author ;
            dbo:subject dbr:Bill_Clinton .

  # Ensure the author is also a politician or office holder
  OPTIONAL { ?author dbo:officeHolderOf ?office . }
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard""@en ;
          foaf:nick ""Uncle Murda""@en .
  
  OPTIONAL { ?person foaf:name ?birthName . }
  OPTIONAL { ?person dbo:memberOfBand ?band ; 
              ?band foaf:name ""Uncle Murda""@en . }

  FILTER EXISTS {
    ?region a dbo:Region ;
            dbo:country dbr:United_States ;
            dbo:state dbr:Puerto_Rico ;
            dbo:settlement dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  }
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Robert_Calder a dbo:Person .
  
  ?event dbo:participatedIn ?militaryForce ;
         a dbo:Event, dbo:SocietalEvent .

  ?robertCalder dbo:participatedIn ?event .
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?billClinton a dbo:Person ;
               foaf:name ""Bill Clinton""@en ;
               dbo:authorOf dbr:An_Invitation_to_the_White_House ;
               dbo:officeHolder true .
  
  OPTIONAL { ?billClinton dbo:spouse ?spouse . }
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfRussia ?nativeOfFinland WHERE {
  # For Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:country dbr:Russian_Empire .
  OPTIONAL { dbr:Russian_Empire dbo:nativePlace ?nativeOfRussia . }

  # For Alexander II, Grand Duke of Finland
  dbr:Aleksandr_II_(Grand_Duke_of_Finland) dbo:country dbr:Finland .
  OPTIONAL { dbr:Finland dbo:nativePlace ?nativeOfFinland . }
}
```",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Poland ;
          dbo:birthPlace dbr:Łódź .
  OPTIONAL { ?person dbo:sport ?sport . }
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joey B""@en .
  OPTIONAL { ?person foaf:name ?birthName . }
  FILTER EXISTS { ?person dbo:profession dbo:Musician . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Duke Philipp of Württemberg's lineage
  dbr:Duke_Philipp_of_W%C3%BCrttemberg dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # Archduke Charles Louis of Austria's lineage
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?child2 .
  ?child2 dbo:child ?grandchildA .

  # Ensure the grandchild is royalty
  FILTER(?grandchild = ?grandchildA)
  OPTIONAL { ?grandchild a dbo:RoyalFamilyMember . }
  OPTIONAL { ?grandchild a dbo:Monarch . }

}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherOfPoliticianChild WHERE {
  # Frederick Stanley, 16th Earl of Derby's child who is a politician
  ?childFrederick a dbo:Person ;
                  dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby ;
                  foaf:name ?nameFrederick .
  
  OPTIONAL { ?childFrederick dbo:occupation ?occupationFrederick . }
  FILTER(CONTAINS(LCASE(?occupationFrederick), ""politician""))

  # Edward Stanley, 17th Earl of Derby's child who is a politician and office holder
  ?childEdward a dbo:Person ;
               dbo:parent dbr:Edward_Stanley,_17th_Earl_of_Derby ;
               foaf:name ?nameEdward .
  
  OPTIONAL { ?childEdward dbo:occupation ?occupationEdward . }
  FILTER(CONTAINS(LCASE(?occupationEdward), ""politician"") && CONTAINS(LCASE(?occupationEdward), ""office holder""))

  # Victor Stanley's parent
  ?parentVictor a dbo:Person ;
                foaf:name ""Victor Stanley""@en ;
                dbo:child dbr:Royal_Navy_officer_Victor_Stanley .

  # Linking the two chains together
  ?childEdward dbo:parent ?parentVictor .
  
  # Finding the father of Frederick's politician child
  ?fatherOfPoliticianChild a dbo:Person ;
                          foaf:name ?nameFather ;
                          dbo:child ?childFrederick .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:1._FC_Magdeburg dbo:member ?member .
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Identify films associated with Nat Levine
  dbr:Nat_Levine dbo:filmProduction ?film .
  
  # Find actors in these films
  ?film dbo:actor ?actor .

  # Check if the actor is a member of the Republican Party
  ?actor dbp:partyMemberOf dbr:Republican_Party_(United_States) .

  # Retrieve the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war ?settlement WHERE {
  # Quincy Adams Gillmore's force
  dbr:Quincy_Adams_Gillmore dbo:militaryCommand ?force .

  # Amasa Tracy's war
  dbr:Amasa_Tracy dbo:militaryConflict ?war .

  # Henry Clay Lewis' birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?settlement .
  
  FILTER EXISTS { 
    ?settlement a dbo:Settlement ;
                dbo:country dbr:United_States .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?force ?war WHERE {
  {
    # Gillmore Medal awardees
    ?gillmoreAwardee dbo:awardedBy dbr:Gillmore_Medal .
    OPTIONAL { ?gillmoreAwardee dbo:militaryForce ?force . }
    OPTIONAL { ?gillmoreAwardee dbo:participatedIn ?war . }
    BIND(""Gillmore Medal"" AS ?award)
  } UNION {
    # Medal of Honor awardees
    ?medalOfHonorAwardee dbo:awardedBy dbr:Medal_of_Honor .
    OPTIONAL { ?medalOfHonorAwardee dbo:militaryForce ?force . }
    OPTIONAL { ?medalOfHonorAwardee dbo:participatedIn ?war . }
    BIND(""Medal of Honor"" AS ?award)
  }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?father WHERE {
  dbr:Baeda_Maryam_I dbo:child ?child .
  
  ?child dbo:parent ?father .
  
  FILTER EXISTS { ?father rdf:type dbo:Monarch . }
  FILTER EXISTS { ?father rdf:type dbo:OfficeHolder . }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalRole ?associatedArtist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  ?person dbo:profession ?professionalRole .
  FILTER(?professionalRole IN (dbo:Musician, dbo:Person))
  
  OPTIONAL { 
    ?association dbo:associatedMusicalArtist ?artist .
    ?artist foaf:name ""$pacely""@en .
    BIND(?artist AS ?associatedArtist)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player ?manager WHERE {
  ?yeJia a dbo:Person ;
         foaf:name ""Ye Jia""@en .
  
  ?yeJia dbo:player ?team .

  ?team a dbo:SoccerClub ;
        dbo:sportTeam dbr:Hong_Kong_C.

  OPTIONAL { ?team dbo:manager ?manager . }
  
  FILTER(?yeJia = ?player)
}
```",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgoProfession ?producer WHERE {
  # Find Kent Allard's fictional character and any related profession
  ?kentAllard a dbo:FictionalCharacter ;
              foaf:name ""Kent Allard (print)""@en .
  
  OPTIONAL { ?kentAllard dbo:profession ?alterEgoProfession . }
  
  # Find the work associated with Cora Sue Collins
  ?coraSueCollins a dbo:Person ;
                  foaf:name ""Cora Sue Collins""@en .
  
  ?work dbo:creator ?coraSueCollins .
  
  # Identify the producer of that work
  OPTIONAL { ?work dbo:producer ?producer . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find the TV show resource for ""All or Nothing: Manchester City""
  dbr:All_or_Nothing:_Manchester_City dbo:actor ?actor .
  
  # Ensure the actor is also a soccer player
  ?actor a dbo:SoccerPlayer .

  # Find Pablo Aimar's team
  dbr:Pablo_Aimar dbo:team ?team .

  # The player must be part of the same team as Pablo Aimar
  ?player dbo:team ?team .
  
  # Ensure the player is also an actor in the TV show
  ?player dbo:actor ?actor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  dbr:Aleksandr_Filimonov dbo:work ?work .
  ?work dbo:writer ?writer .
  ?writer dbo:work ?writtenWork .
  ?writtenWork dbo:playerIn ?player .
}
```",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?charge a dbo:MilitaryEngagement ;
          dbo:partOf dbr:American_Civil_War .
  
  ?charge dbo:commander ?commander .

  ?pickettCharge a dbo:MilitaryEngagement ;
                 foaf:name ""Pickett's Charge""@en ;
                 dbo:partOf dbr:American_Civil_War .

  ?pickettCharge dbo:commander ?commander .

  OPTIONAL {
    ?commander dbo:partyMember dbr:Republican_Party_(United_States) .
  }
}
```",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
}

UNION

SELECT ?profession WHERE {
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow""@en .
  
  OPTIONAL { ?alterEgo dbo:alterEgo ?shadow . }
  
  ?alterEgo dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?movie ?producer WHERE {
  # Retrieve the profession of Kent Allard (print)
  dbr:Kent_Allard_(print) dbo:profession ?profession .

  # Find a movie or work associated with Janet Gaynor
  dbr:Janet_Gaynor dbo:film ?movie .
  
  # Identify the producer of that movie or work
  ?movie dbo:producer ?producer .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  # Find works authored by Bill Clinton that are books
  ?work a dbo:Book ;
        dbo:author dbr:Bill_Clinton .

  # Ensure Bill Clinton was involved in wars as a commander
  OPTIONAL { 
    ?war dbo:commander dbr:Bill_Clinton .
    FILTER(?war IN (dbr:Cold_War, dbr:Gulf_War)) # Example wars; adjust based on DBpedia data
  }

  # Confirm Bill Clinton is the spouse of Hillary Clinton
  OPTIONAL {
    dbr:Hillary_Clinton dbo:spouse dbr:Bill_Clinton .
  }
}
```",5,10,6,2,3,3,3,71,0,7,1,0.0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  OPTIONAL { 
    dbr:Quincy_Adams_Gillmore a dbo:Person .
    dbr:Quincy_Adams_Gillmore dbo:commander ?force .
  }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerJanetGaynor ?producerTomSawyer ?fictionalCharacter WHERE {
  # Find Janet Gaynor's notable work and its producer
  ?janetGaynor a dbo:Film ;
               foaf:name ""Seventh Heaven""@en .
  OPTIONAL { ?janetGaynor dbo:producer ?producerJanetGaynor . }

  # Find the producer of The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Identify the fictional character associated with Kent Allard
  ?fictionalCharacter a dbo:FictionalCharacter ;
                     foaf:name ""Kent Allard""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?birthPlace WHERE {
  ?vince a dbo:Person ;
         foaf:name ""Vince Gilligan""@en .
  
  ?award dbo:recipient ?vince .

  ?award dbo:awardee ?awardee .

  ?awardee dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?bandMember WHERE {
  # Part 1: Find associated musical artists of Nick Curran
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran""@en .
  
  OPTIONAL { ?nickCurran dbo:associatedMusicalArtist ?associatedArtist . }
  
  # Part 2: Identify the person born on 1945-03-30 who is a musical artist
  ?person a dbo:MusicalArtist ;
          foaf:birthday ""1945-03-30""^^xsd:date .
  
  OPTIONAL { ?person dbo:bandMember ?bandMember . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?child WHERE {
  # Find the alter ego of Lamont Cranston (The Shadow)
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Get the resource for The Shadow
  dbr:The_Shadow ?p ?alterEgo .

  # Find Dawit I and his child
  dbr:Dawid_I_of_Scotland dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:SoccerManager ;
          dbo:birthDate ""1979-11-03""^^xsd:date .
  
  OPTIONAL { ?person dbo:team ?team . }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember WHERE {
  # Find Phantomsmasher's associated musical artist
  dbr:Phantomsmasher dbo:associatedBand ?artist .
  
  # Ensure the artist is a band, group, and organization
  ?artist a dbo:MusicalArtist ;
          dbo:genre ?genre .

  FILTER EXISTS { ?genre rdfs:subClassOf* dbo:Band }
  FILTER EXISTS { ?genre rdfs:subClassOf* dbo:Group }
  FILTER EXISTS { ?genre rdfs:subClassOf* dbo:Organization }

  # Find a band member of the associated artist who is also in ""Burnt by the Sun""
  ?artist dbo:bandMember ?member .
  
  # Ensure this member is part of ""Burnt by the Sun"" and it's classified as a band, group, and organization
  ?member dbo:associatedBand dbr:Burnt_by_the_Sun ;
          dbo:genre ?burntGenre .

  FILTER EXISTS { ?burntGenre rdfs:subClassOf* dbo:Band }
  FILTER EXISTS { ?burntGenre rdfs:subClassOf* dbo:Group }
  FILTER EXISTS { ?burntGenre rdfs:subClassOf* dbo:Organization }

  # Return the associated artist and band member
  BIND(?artist AS ?associatedArtist)
}
```",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry ?manager1 ?manager2 WHERE {
  # Theodor Heuss' native place and country
  dbr:Theodor_Heuss dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?nativeCountry .

  # Manager of VfL Bochum in the successor season of 2006–07
  OPTIONAL {
    dbr:VfL_Bochum dbo:manager ?manager1 ;
                  dbo:sportsTeamSeason ?season2007 .
    ?season2007 dbo:successor ?successorSeason .
    ?successorSeason dbo:manager ?manager1 .
  }

  # Manager of SBV Vitesse in the 2020–21 season
  OPTIONAL {
    dbr:SBV_Vitesse dbo:manager ?manager2 ;
                   dbo:sportsTeamSeason ?season2021 .
    FILTER(?season2021 = dbr:2020–21_SBV_Vitesse_season)
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    # Awardee of Sangeet Natak Akademi Fellowship
    ?person dbo:award ""Sangeet_Natak_Akademi_Fellowship""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  { 
    # Actor of the film ""Akaler Shandhaney""
    dbr:Akaler_Shandhaney dbo:actor ?actor .
    ?actor dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find the war involving William Bayne
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne (Royal Navy officer)""@en .
  
  OPTIONAL { 
    ?war dbo:militaryForce ?militaryForce ;
         dbo:participant ?bayne .
  }
  
  # Find the commander of the war involving the 30th Regiment
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot a dbo:MilitaryUnit ;
                                             dbo:commander ?commander .
  
  OPTIONAL { 
    ?war2 dbo:commander ?commander ;
          dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  }
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Chennupati Jagadish""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",2,2,3,1,2,2,2,9,2,2,0,0.5,1.0,0.6666666666666666
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ada Jane Low""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1955-02-22""^^xsd:date ;
          dbo:athlete true .
  
  OPTIONAL { ?person dbo:soccerPlayer true . }
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:workType dbr:Soccer_Film .

  ?actor a dbo:Person ;
         dbo:actorInFilm ?film ;
         dbo:teamMember dbr:Pablo_Aimar .
  
  FILTER(?person = ?actor)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?producer WHERE {
  ?film dbo:actor dbr:George_Raft .
  ?film dbo:producer ?producer .
  FILTER(?producer = dbr:David_O._Selznick)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Boxer""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?elDeafo rdfs:label ""El Deafo""@en .
  ?elDeafo a dbo:Book .
  OPTIONAL { ?elDeafo dbo:reference ?reference . }
  FILTER EXISTS { ?reference dbo:country dbr:United_States . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?childBirthPlace WHERE {
  # Find the country of Lao She's work
  dbr:Lao_She dbo:workCountry ?country .

  # Identify Chiang Ching-kuo and his child who is a politician
  dbr:Chiang_Ching-kuo dbo:child ?child .
  
  # Ensure the child is a politician
  ?child dbo:occupation dbr:Politician .

  # Get the birthplace of this child
  ?child dbo:birthPlace ?childBirthPlace .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Faisal_bin_Hussein dbo:child ?child .
  
  OPTIONAL { ?child dbo:royaltyTitle ?title . }
  
  FILTER EXISTS { ?child dbo:royaltyTitle ?title } # Ensure the child is royalty
  
  ?child dbo:parent ?parent .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .
}
```",2,2,3,2,1,2,2,9,0,0,2255,0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?birthDate .

  # Find films directed by Manuel Huerga
  ?film dbo:filmDirector dbr:Manuel_Huerga ;
        dbo:actor ?actor .

  # Ensure the actor is a soccer player and an athlete
  ?actor a dbo:SoccerPlayer, dbo:Athlete .

  # Filter actors born on Marcelo Sarmiento's birthday
  ?actor dbo:birthday ?actorBirthDate .
  FILTER(?birthDate = ?actorBirthDate)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Ann Sothern's birth name and spouse
  ?annSothern a dbo:Person ;
              foaf:name ""Ann Sothern""@en .
  
  OPTIONAL { ?annSothern foaf:birthday ?birthDate . }
  OPTIONAL { ?annSothern foaf:name ?birthName . }
  OPTIONAL { ?annSothern dbo:spouse ?spouse . }

  # Find the actor of ""1,000 Dollars a Minute"" and their spouse
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?actor dbo:starringIn ?movie ;
         foaf:name ?actorName .

  OPTIONAL { ?actor dbo:spouse ?actorSpouse . }

  # Filter to find the person who is both Ann Sothern's spouse and the actor's spouse
  FILTER(?spouse = ?actorSpouse)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?child .
  dbr:Roger_II_of_Sicily dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional ?comicsCharacter WHERE {
  # Find Richard Grant Esterhuysen and his professional role
  ?person a dbo:Person ;
          foaf:name ""Richard Grant Esterhuysen""@en .
  
  OPTIONAL { ?person dbo:actor ?professional . }
  
  # Identify the television show/movie he acted in
  ?film a dbo:Film ;
        dbo:starring ?professional .
  
  # Find the comics character associated with The Shadow video game series
  ?videoGame a dbo:VideoGame ;
             foaf:name ""The Shadow (video game)""@en .
  
  OPTIONAL { ?videoGame dbo:basedOn ?comicsCharacter . }
}
```",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoProfession ?producer WHERE {
  # Find the alter ego of The Shadow and its professional role
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  OPTIONAL { ?alterEgo dbo:profession ?alterEgoProfession . }

  # Find the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child ?father WHERE {
  ?roger a dbo:Person ;
         foaf:name ""Roger II of Sicily""@en .
  
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile, Queen of Sicily""@en .

  ?william a dbo:Monarch ;
           foaf:name ""William I of Sicily""@en .

  ?child dbo:parent ?roger ;
         dbo:parent ?elvira ;
         a dbo:Monarch .
  
  OPTIONAL { ?child dbo:father ?father . }
  
  FILTER(?father IN (?roger, ?elvira))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  dbr:Eastern_European_Time dbo:country ?country .
  ?country dbo:administrativeRegion ?region .
}
```",1,2,2,1,1,3,2,20,0,0,20665,0,0.0,0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:birthPlace ?birthplace .
  
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States .

  ?award dbo:awardee ?person ;
         dbo:givenBy dbr:United_States_Congress .

  ?war dbo:associatedAward ?award .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Algerian War and its commander
  dbr:Algerian_War dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .

  # Eleonore of Austria, Queen of Poland and her father
  dbr:Eleonore_of_Austria,_Queen_of_Poland dbo:father ?father .
  
  # Ensure the commander is also the father
  FILTER(?commander = ?father)

  # Commander's involvement in a societal event, another event, and a television show
  OPTIONAL { ?commander dbo:societalEvent ?societalEvent . }
  OPTIONAL { ?commander dbo:event ?event . }
  OPTIONAL { ?commander dbo:televisionShow ?tvShow . }

  FILTER(BOUND(?societalEvent) && BOUND(?event) && BOUND(?tvShow))
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent ?spouse WHERE {
  dbr:Francis_I,_Duke_of_Lorraine dbo:parent ?parent .
  
  ?parent rdf:type dbo:Royalty ;
          rdf:type dbo:Noble .

  OPTIONAL { ?parent dbo:spouse ?spouse . }
  
  FILTER EXISTS { ?spouse rdf:type dbo:Royalty } .
  FILTER EXISTS { ?spouse rdf:type dbo:Noble } .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Aleksandr_Lvovich_Davydov dbo:participatedIn ?war .
  
  OPTIONAL { 
    ?war dbo:location dbr:Russian_Empire .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Baeda_Maryam_I dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?gustavoParty ?royParty WHERE {
  ?gustavo a dbo:Politician ;
           foaf:name ""Gustavo Petro""@en .
  OPTIONAL { ?gustavo dbo:party ?gustavoParty . }

  ?roy a dbo:Politician ;
       foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?roy dbo:party ?royParty . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  ?maria dbo:spouse ?spouse .

  ?spouse dbo:child ?parentOfSpouse .
  
  ?parentOfSpouse rdf:type dbo:Monarch ;
                  foaf:name ?fatherName .

  BIND(?parentOfSpouse AS ?father)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?biden a dbo:Person ;
         foaf:name ""Joe Biden""@en .
  
  ?work rdf:type dbo:WrittenWork, dbo:Work ;
        dbo:author ?biden .

}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film, dbo:Work ;
         dbo:starringActor ?iliza .
  
  ?iliza foaf:name ""Iliza Shlesinger""@en .

  ?movie dbo:starringActor ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find wars related to the awardee of 30
  OPTIONAL {
    ?awardee dbo:awardYear ""30"" ;
            dbo:participatedInWar ?war .
  }
  
  # Find wars related to the leader of National Party of Greece
  OPTIONAL {
    ?leader foaf:name ?name ;
            dbo:partyLeader dbr:National_Party_of_Greece ;
            dbo:participatedInWar ?war .
  }
}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?child WHERE {
  # Baeda Maryam I's father
  ?baedaMaryamI a dbo:Person ;
                foaf:name ""Baeda Maryam I""@en .
  
  ?father a dbo:Person ;
          dbo:parent ?baedaMaryamI .

  # Commander in the Siege of Mukha who is royalty and Baeda Maryam I's father
  ?commander a dbo:Person ;
             dbo:participatedIn dbr:Siege_of_Mukha ;
             foaf:name ?fatherName .
  
  FILTER(?father = ?commander)

  # Parent of the commander, who is also royalty
  ?parent a dbo:Person ;
          dbo:child ?commander ;
          rdf:type dbo:Royalty .

  BIND(STR(?parent) AS ?reference)
  
  OPTIONAL { ?parent dbo:child ?child . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
  ?parent dbo:child ?child .
  ?child dbo:father ?grandfather .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucasRef ?commanderRole WHERE {
  # Find the reference for George I of Trebizond (George Ducas)
  dbr:George_I_of_Trebizond a dbo:Person ;
                            rdfs:label ""George Ducas""@en .
  
  # Find any military command roles associated with Jean Baptiste Jules Bernadotte
  OPTIONAL {
    dbr:Jean_Baptiste_Jules_Bernadotte dbo:militaryCommander ?commanderRole .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  dbr:1._FC_Magdeburg dbo:member ?player .
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Amasa Tracy""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?royalChild .
  
  FILTER(?royalChild rdf:type dbo:Royalty) .

  ?royalChild dbo:parent ?parentOfRoyalChild .

  ?parentOfRoyalChild dbo:child ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?janetGaynor .
  
  ?janetGaynor foaf:name ""Janet Gaynor""@en .

  OPTIONAL { ?movie dbo:producer ?producer . }
}
```",4,6,5,2,2,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?foundingDate WHERE {
  # Alma mater of Eleonora Menicucci
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .

  # Founding date of Federal University of Paraíba
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",3,3,4,2,2,3,2,20,1,3,0,0.25,1.0,0.4
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?residence WHERE {
  # Query for the award of George H. Cameron
  OPTIONAL {
    dbr:George_H._Cameron dbo:award ?award .
  }
  
  # Query for the residence of the leader of Ulster Unionist Party
  OPTIONAL {
    ?leader a dbo:Person ;
            dbo:position ""Leader""@en ;
            dbo:party dbr:Ulster_Unionist_Party .
    ?leader dbo:residence ?residence .
  }
}
```",4,4,5,2,2,3,2,20,0,2,2,0.0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  dbr:Burnt_by_the_Sun dbo:musicalArtist ?artist .
  
  ?artist a dbo:Band ;
          a dbo:Group ;
          a dbo:Organization .

  ?member dbo:memberOf ?artist .
  ?member a dbo:Person .
}
```",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ?name .

  OPTIONAL { 
    ?shadowCharacter dbo:alterEgo ?person .
    ?shadowCharacter foaf:name ""The Shadow""@en .
  }

  OPTIONAL {
    ?film dbo:actor ?person .
    ?film foaf:name ""ATL (2006 film)""@en .
  }
}
```",3,3,4,2,2,3,3,71,1,785041,3,1.273817197041687e-06,0.25,2.5476214132675028e-06
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?ciara a dbo:MusicalArtist ;
         foaf:name ""Ciara""@en .
  
  OPTIONAL { ?ciara dbo:associatedMusicalArtist ?associatedArtist . }
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  ?grandchild dbo:father ?williamII .
  FILTER(?williamII = dbr:William_II_of_Sicily)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  dbr:Alfonso_VI_of_León_and_Castile dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,6,0,2,1.0,0.75,0.8571428571428571
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Yeshaq I and his parent who is royalty
  dbr:Yeshaq_I dbo:parent ?yeshaqParent .
  ?yeshaqParent a dbo:Person ;
                dbo:royalty true .

  # Child of Yeshaq I's parent (who is royalty)
  ?yeshaqParentChild dbo:child ?child .
  ?child a dbo:Person ;
         dbo:royalty true .

  # Na'od and his father who is royalty and an office holder
  dbr:Na'od dbo:parent ?naodFather .
  ?naodFather a dbo:Person ;
              dbo:royalty true ;
              dbo:officeHolder true .

  # Father of Na'od's father (who is royalty)
  ?naodGrandfather dbo:child ?naodFather .
  ?naodGrandfather a dbo:Person ;
                   dbo:royalty true .

  # Ensure the child from Yeshaq I's parent lineage matches the grandfather of Na'od
  FILTER(?child = ?naodGrandfather)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:United_Kingdom .
}
```",1,1,2,1,1,3,2,20,42999,0,0,1.0,1.0,1.0
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Picketts_Charge dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Algerian_War dbo:participatingMilitaryUnit ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?award WHERE {
  dbr:Nobel_Prize_in_Physics dbo:awardingBody dbr:Royal_Swedish_Academy_of_Sciences .
  
  ?show a dbo:Event ;
        dbo:subject dbr:Nobel_Prize_in_Physics ;
        dbo:organizer dbr:Royal_Swedish_Academy_of_Sciences .

  ?award a dbo:Award ;
         dbo:recipient ?awardee ;
         dbo:relatedEvent ?show .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  ?child dbo:parent ?spouse .

  ?parent dbo:parent ?child .

  ?film a dbo:Film ;
        foaf:name ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .

  ?parent dbo:actor ?film .

  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  
  ?parent dbo:parent ?amyArbus .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  dbr:Christian_Ditlev_Ammenorp_Hansen dbo:deathPlace ?deathPlace .
  
  FILTER( EXISTS { ?deathPlace a dbo:Settlement } )
  
  OPTIONAL { ?deathPlace dbo:administers ?territory . }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?person a dbo:Person ;
            foaf:name ""Glenn Youngkin""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfPrinceOmar ?royalChildParent ?royalGrandchildParent WHERE {
  # Find the parent of Prince Omar bin Faisal
  ?princeOmar a dbo:Person ;
              foaf:name ""Prince Omar bin Faisal""@en .
  OPTIONAL { ?princeOmar dbo:parent ?parentOfPrinceOmar . }

  # Find Princess Aisha bint Faisal's royal parent
  ?princessAisha a dbo:Person ;
                 foaf:name ""Princess Aisha bint Faisal""@en .
  OPTIONAL { ?princessAishaParent dbo:parent ?princessAisha . }
  FILTER(?princessAishaParent a dbo:Royalty)

  # Find the royal child of Princess Aisha's parent
  OPTIONAL { ?royalChildParent dbo:child ?princessAishaParent . }
  FILTER(?royalChildParent a dbo:Royalty)

  # Find the parent of this royal child
  OPTIONAL { ?royalGrandchildParent dbo:parent ?royalChildParent . }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePlace WHERE {
  dbr:Theodor_Heuss dbo:nativePlace ?nativePlace .
  
  dbr:2020%E2%80%9321_SBV_Vitesse_season dbp:manager ?manager .
  
  OPTIONAL { ?manager dbo:nationality ?nationality . }
  
  FILTER(?nativePlace = ?nationality)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ann Sothern""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER EXISTS { ?person dbo:memberOfParty dbr:Republican_Party_(United_States) }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  {
    dbr:Stone_Sour dbo:bandMember ?member .
  }
  UNION
  {
    dbr:Mudvayne dbo:bandMember ?member .
  }
}
```",2,2,3,1,2,3,2,20,0,4,1,0.0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country ?party WHERE {
  ?daniel a dbo:Person ;
          foaf:name ""Daniel Elahi Galán""@en .
  ?daniel dbo:country ?country .

  ?gustavo a dbo:Person ;
           foaf:name ""Gustavo Petro""@en .
  ?gustavo dbo:party ?party .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson (musician)""@en .
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  OPTIONAL { ?person dbo:alias ""The Shadow""@en . }

  OPTIONAL { ?person dbo:band ?band . }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?charlestonEntity ?war WHERE {
  # Find Quincy Adams Gillmore's resource
  ?gillmore a dbo:Person ;
            foaf:name ""Quincy Adams Gillmore""@en .
  
  # Retrieve forces commanded by Quincy Adams Gillmore
  OPTIONAL { ?gillmore dbo:militaryCommanderOf ?force . }
  
  # Identify entities related to Charleston, South Carolina during his time
  OPTIONAL {
    ?charlestonEvent a dbo:Event ;
                     dbo:location dbr:Charleston,_South_Carolina ;
                     dbo:participant ?gillmore .
    ?charlestonEvent dbo:name ?charlestonEntity .
  }
  
  # Determine the war associated with a Medal of Honor recipient
  OPTIONAL {
    ?medalRecipient a dbo:Person ;
                    dbo:award dbr:Medal_of_Honor .
    ?medalRecipient dbo:participatedInWar ?war .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  OPTIONAL { ?tisha dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  # Cora Sue Collins' claim to fame as a producer
  {
    ?collins a dbo:Person ;
             foaf:name ""Cora Sue Collins""@en .
    OPTIONAL { ?work dbo:producer ?collins . }
    FILTER EXISTS { ?work a dbo:Film } # Assuming the work is a film
    BIND(?collins AS ?producer)
  }

  UNION

  # Janet Gaynor's claim to fame as a producer of a movie
  {
    ?gaynor a dbo:Person ;
            foaf:name ""Janet Gaynor""@en .
    OPTIONAL { ?movie dbo:producer ?gaynor . }
    FILTER EXISTS { ?movie a dbo:Film } # Assuming the work is a film
    BIND(?gaynor AS ?producer)
  }

  UNION

  # Professional associated with The Shadow
  {
    ?shadow a dbo:Person ;
            foaf:name ""The Shadow""@en .
    OPTIONAL { ?professional dbo:alterEgo ?shadow . }
    FILTER EXISTS { ?professional a dbo:Actor } # Assuming the professional is an actor
    BIND(?professional AS ?producer)
  }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?birthplace ?war WHERE {
  # Quincy Adams Gillmore's force
  dbr:Quincy_Adams_Gillmore dbo:militaryUnit ?force .

  # Henry Clay Lewis' birthplace that is a settlement and American
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
              dbp:country ""United States"" .

  # Medal of Honor awardee's war
  ?medalAwardee dbo:award ""Medal_of_Honor"" ;
               dbo:militaryConflict ?war .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find the TV show ""Dispatches from Elsewhere""
  dbr:Dispatches_from_Elsewhere dbo:castMember ?actor .
  
  # Ensure the actor is a person
  ?actor a dbo:Person .

  # Check if the actor has a profession of Actor, similar to Shatrughan Sinha
  OPTIONAL { ?actor dbo:profession dbr:Actor . }
  
  # Find Shatrughan Sinha's profession and ensure it matches
  dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .
  FILTER(?sinhaProfession = dbr:Actor)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the date of birth for Roy Leonardo Barreras Montealegre
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:birthday ?dob .

  # Find other politicians with the same birthday
  ?person a dbo:Politician ;
          dbo:birthday ?dob .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?harriette a dbo:Person ;
             foaf:name ""Harriette Arlene Lake""@en .
  
  OPTIONAL { ?harriette dbo:birthName ""Harriette Arlene Lake""@en . }
  
  ?roger a dbo:Person ;
         foaf:name ""Roger Pryor (actor)""@en ;
         dbo:occupation dbr:Actor .

  ?harriette dbo:spouse ?roger .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor ?spouse WHERE {
  ?myatHponePyo a dbo:Person ;
                 foaf:name ""Myat Hpone Pyo""@en .
  
  OPTIONAL { 
    ?myatHponePyo dbo:predecessor ?predecessor . 
  }
  
  ?father dbo:child ?myatHponePyo .
  ?father dbo:spouse ?spouse .
  
  FILTER EXISTS {
    ?spouse a dbo:Monarch .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Yurii_Khmelnytsky dbo:successor ?successor .
}

UNION

SELECT ?writer WHERE {
  dbr:Always_the_Love_Songs dbo:author ?writer .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace WHERE {
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthplace .
  ?birthplace a dbo:PopulatedPlace .
  OPTIONAL { ?birthplace dbo:country dbr:United_States . }
}
```",2,4,3,2,1,3,3,71,0,2,12,0.0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query for Vince Gilligan's awardee birth place
SELECT ?awardeeBirthPlace WHERE {
  dbr:Vince_Gilligan dbo:award dbr:Emmy_Award .
  ?awardee dbo:recipientOf dbr:Emmy_Award ;
           dbo:birthPlace ?awardeeBirthPlace .
}

UNION

# Query for Cece Bell's birth place
SELECT ?ceceBellBirthPlace WHERE {
  dbr:Cecilie_Bell_Larsen dbo:birthPlace ?ceceBellBirthPlace .
}

UNION

# Query for the current governor of Virginia's birth place
SELECT ?governorBirthPlace WHERE {
  ?governor a dbo:Politician ;
            foaf:name ?name ;
            dbo:governmentRole dbr:Governor_of_Virginia ;
            dbo:birthPlace ?governorBirthPlace .
  FILTER(YEAR(NOW()) - YEAR(?governor dbo:beganAtTime) < 5)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify the Algerian War resource
  dbr:Algerian_War a dbo:Event ;
                   dbo:participatingMilitaryForce ?militaryForce .

  # Find commanders associated with the military force in the context of the war
  ?militaryForce dbo:commander ?commander .

  OPTIONAL {
    # Check if the commander is also depicted as part of a television show or societal event
    ?commander dbo:depictedIn ?tvShow .
    FILTER EXISTS { ?tvShow a dbo:TelevisionSeries }
  }

  OPTIONAL {
    ?commander dbo:participatedInSocietalEvent ?societalEvent .
    FILTER EXISTS { ?societalEvent a dbo:SocietalEvent }
  }
}
```",3,6,4,3,1,3,3,71,0,0,124,0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Find Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Check if the child is a politician and an office holder
  OPTIONAL { ?child dbo:occupation dbo:Politician . }
  OPTIONAL { ?child dbo:officeHolder ?office . }

  # Find the parent of this child (Edward Stanley himself)
  ?parentOfChild dbo:child ?child .

  # Find alumnus of Eton College who is a politician
  ?alumnus dbo:almaMater dbr:Eton_College ;
           dbo:occupation dbo:Politician .
  
  # Find the child of this alumnus who is also a politician
  ?alumnusChild dbo:child ?alumnus .
  OPTIONAL { ?alumnusChild dbo:occupation dbo:Politician . }

  # The parent of the child of the parent (Edward Stanley)
  FILTER(?parentOfChild = dbr:Edward_Stanley,_17th_Earl_of_Derby)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resource ?description WHERE {
  ?resource rdfs:label ""Sangeet Natak Akademi Fellowship""@en .
  OPTIONAL { ?resource dbo:description ?description . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Russian_Empire .
}
```",1,1,2,1,1,2,3,28,5474,0,1,1.0,0.9998173515981735,0.9999086674582154
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Birmingham .
}
```",1,1,2,1,1,3,2,20,1531,0,0,1.0,1.0,1.0
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?miguelOffice ?tenantOfAlbertoResidence ?officeHolderOffice WHERE {
  # Find the office of Miguel Maura
  ?miguel a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  OPTIONAL { ?miguel dbo:positionHeld ?miguelOffice . }

  # Find the tenant of Alberto Ruiz-Gallardón's residence
  ?alberto a dbo:Person ;
           foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?residence dbo:tenant ?tenantOfAlbertoResidence .
             ?alberto dbo:residence ?residence . }

  # Find the office holder who is a politician in the Central African Republic Civil War
  ?officeHolder a dbo:Person ;
                dbo:occupation dbo:Politician ;
                dbo:memberOf ?warEvent .
  OPTIONAL { ?warEvent dbo:name ""Central African Republic Civil War""@en }
  OPTIONAL { ?officeHolder dbo:positionHeld ?officeHolderOffice . }

  # Ensure the office holder is distinct and matches the criteria
  FILTER(?officeHolder != ?miguel && ?officeHolder != ?alberto)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?show WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anumta Qureshi""@en .
  
  OPTIONAL { 
    ?person dbo:performerIn ?show .
  }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Find Bill Clinton, spouse of Hillary Clinton
  dbr:Bill_Clinton dbo:spouse dbr:Hillary_Clinton .

  # Identify a war that is both a disease and a societal event (e.g., World War I)
  dbr:World_War_I dbo:hasPart ?event .
  ?event rdf:type dbo:Disease ;
         dbo:societalEvent true .

  # Find the commander of this war
  ?commander dbo:commanded ?war .
  FILTER(?war = dbr:World_War_I)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  ?band dbo:location dbr:New_York_(state) .
  ?band a dbo:Band .

  ?band dbo:awardReceived ?award .

  ?award a dbo:Award ;
         dbo:country dbr:United_States ;
         rdf:type [ 
           rdf:type dbo:Region ;
           rdf:type dbo:State ;
           rdf:type dbo:Settlement
         ] .
}
```",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Query for wars involving Napoleon Zervas
  OPTIONAL { 
    dbr:Napoleon_Zervas dbo:participatedIn ?war .
  }
  
  # Placeholder for the awardee of 30, assuming a known entity or award
  OPTIONAL {
    ?awardee dbo:awardReceived ?award ;
             dbo:participatedIn ?war .
    FILTER(YEAR(?award) = 30)
  }
}
```",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthPlace dbr:Florida .
  
  ?award a dbo:Award ;
         dbo:location dbr:New_York_(state) .

  ?band a dbo:Band ;
        dbo:location dbr:New_York_(state) ;
        dbo:award ?award .

  FILTER(?person = ?band)
}
```",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?plotkin a dbo:Person ;
           foaf:name ""James Plotkin""@en .
  
  ?plotkin dbo:associatedMusicalArtist ?firstLevelArtist .
  
  ?firstLevelArtist dbo:associatedMusicalArtist ?secondLevelArtist .
  
  ?member a dbo:BandMember ;
          dbp:band dbr:Human_Remains ;
          foaf:name ?name .
  
  FILTER(?secondLevelArtist = ?member)
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Yamaza Enjirō's birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Wars involving Toyotomi Hidenaga
  OPTIONAL { 
    dbr:Toyotomi_Hidenaga dbo:participatedIn ?war1 .
    ?war1 dbo:location ?entity .
  }

  # Wars involving Hashiba Hidekatsu
  OPTIONAL {
    dbr:Hashiba_Hidekatsu dbo:participatedIn ?war2 .
    ?war2 dbo:location ?entity .
  }
  
  # Ensure the entity is either a birthplace or a war location
  FILTER(?birthPlace = ?entity || ?entity != ?birthPlace)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military unit or group known as ""The Triple X's""
  ?unit a dbo:MilitaryUnit ;
        foaf:name ""The Triple X's""@en .
  
  # Find the event of the Battle of Fort Royal
  dbr:Battle_of_Fort_Royal a dbo:MilitaryConflict .

  # Find the commander for both the unit and the battle
  ?unit dbo:commander ?commander .
  dbr:Battle_of_Fort_Royal dbo:commander ?commander .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?teamOfPlayerManager WHERE {
  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?birthdate .

  # Find a soccer player and manager with the same birthdate
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:birthday ?birthdate .

  # Get the team of this person
  OPTIONAL { ?person dbo:team ?teamOfPlayerManager . }

  # Identify Sergio Agüero's team
  dbr:Sergio_Agüero dbo:team ?sergioTeam .

  # Find an athlete born on 1955-02-22
  ?athlete a dbo:Athlete ;
           dbo:birthday ""1955-02-22""^^xsd:date .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?reign WHERE {
  { 
    dbr:Christian_IX_of_Denmark dbo:reign ?reign .
    BIND(dbr:Christian_IX_of_Denmark AS ?person)
  }
  UNION
  { 
    dbr:Olaf_I_of_Denmark dbo:reign ?reign .
    BIND(dbr:Olaf_I_of_Denmark AS ?person)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Picketts_Charge dbo:participatedIn ?war .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Doon_Arbus a dbo:Person ;
                 dbo:profession dbr:Photographer ;
                 dbo:film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .
  
  OPTIONAL { dbr:Doon_Arbus dbo:parent ?parent . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?herchel .
  
  ?herchel a dbo:Person ;
           foaf:name ""Herschel Bernardi""@en .

  ?parent a dbo:Person ;
          foaf:name ?actorName ;
          dbo:child dbr:Amy_Arbus .

  FILTER(?herchel = ?parent)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father ?royalChild WHERE {
  # Find Isabella of Austria and her father
  ?isabella a dbo:Person ;
            foaf:name ""Isabella of Austria""@en .
  ?isabella dbo:parent ?father .

  # Identify the commander of the Siege of Padua
  ?siege dbo:eventParticipant ?commander .
  ?siege rdfs:label ""Siege of Padua""@en .
  
  # Find the child of the commander who is royalty
  ?commander dbo:child ?royalChild .
  ?royalChild a dbo:RoyalFamilyMember .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?war WHERE {
  # Find Henry Clay Lewis and his birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
              geo:location ?geoLocation .
  ?geoLocation geo:lat ?lat ; geo:long ?long .
  FILTER(?lat > 24 && ?lat < 49) # Rough latitude range for the contiguous US
  FILTER(?long > -125 && ?long < -66) # Rough longitude range for the contiguous US
  
  # Find Medal of Honor awardee related to Henry Clay Lewis (if any)
  OPTIONAL { dbr:Henry_Clay_Lewis dbo:award ?medalOfHonorAwardee . }
  
  # Determine the war associated with this awardee
  ?medalOfHonorAwardee dbo:awardedFor ?war .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfGrandchild WHERE {
  # Find children of Princess Muna al-Hussein who are royalty
  ?childMuna a dbo:Person ;
             dbo:child ?muna ;
             foaf:name ?childName .
  
  ?muna foaf:name ""Princess Muna al-Hussein""@en .

  # Ensure the child is royalty (assuming a property like dbo:royalty exists)
  OPTIONAL { ?childMuna dbo:royalty ?isRoyalty }

  # Find grandchildren of Princess Muna who are royalty
  ?grandchild a dbo:Person ;
              dbo:child ?childMuna ;
              foaf:name ?grandchildName .

  OPTIONAL { ?grandchild dbo:royalty ?isGrandchildRoyalty }

  # Find the parent of this grandchild (who is royalty)
  ?parentOfGrandchild a dbo:Person ;
                      dbo:child ?grandchild ;
                      foaf:name ?parentName .
  
  # Ensure the child of Princess Sara bint Faisal
  ?saraChild a dbo:Person ;
             dbo:child ?sara ;
             foaf:name ?saraChildName .

  ?sara foaf:name ""Princess Sara bint Faisal""@en .

  FILTER(?parentOfGrandchild = ?saraChild)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?snoopProfession ?shaggyProfession ?associatedArtist WHERE {
  # Snoop Dogg (birth name: Calvin Cordozar Broadus Jr.)
  dbr:Snoop_Dogg dbo:birthName ""Calvin Cordozar Broadus Jr.""@en ;
                  dbo:profession ?snoopProfession .

  # Shaggy (birth name: Darryl Paa Kwesi Bannerman-Martin)
  dbr:Shaggy dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en ;
             dbo:profession ?shaggyProfession .

  OPTIONAL {
    ?snoopArtist dbo:associatedBand dbr:Snoop_Dogg .
    ?shaggyArtist dbo:associatedBand dbr:Shaggy .
    BIND(CONCAT(STR(?snoopArtist), "" & "", STR(?shaggyArtist)) AS ?associatedArtist)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?film WHERE {
  dbr:Audrey_Hepburn dbo:starring ?film .
  ?film a dbo:Film ;
        a dbo:Work .
}
```",1,3,2,1,1,2,3,28,0,0,15,0,0.0,0
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyMember WHERE {
  # Find ruling party in Central, Louisiana
  ?central a dbo:Place ;
           foaf:name ""Central, Louisiana""@en .
  
  ?rulingParty dbo:location ?central ;
               dbo:member ?partyMember .

  # Identify Tisha Sterling's parent and their birth name
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling""@en .
  
  ?parentOfTisha dbo:child ?tishaSterling .
  ?parentOfTisha foaf:birthday ?birthDate .
  ?parentOfTisha foaf:name ?birthName .

  # Find Roger Pryor's spouse
  ?rogerPryor a dbo:Person ;
              foaf:name ""Roger Pryor (actor)""@en .
  
  OPTIONAL { ?rogerPryor dbo:spouse ?spouse . }

  # Link the entities to find the party member
  FILTER(?partyMember = ?parentOfTisha)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producerOfCoraWork ?producerOfActorWork WHERE {
  # Find Cora Sue Collins and her film works' producers
  ?cora a dbo:Person ;
        foaf:name ""Cora Sue Collins""@en .
  
  ?filmWork dbo:performer ?cora ;
            a dbo:Film .
  
  OPTIONAL { ?filmWork dbo:producer ?producerOfCoraWork . }
  
  # Find actors in High Society Blues and their notable works' producers
  ?highSocietyBlues a dbo:Film ;
                    foaf:name ""High Society Blues""@en .
  
  ?actorInHSB dbo:performer ?highSocietyBlues ;
              a dbo:Person .
  
  OPTIONAL {
    ?notableWork dbo:performer ?actorInHSB ;
                 a dbo:Film .
    
    OPTIONAL { ?notableWork dbo:producer ?producerOfActorWork . }
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Nat Levine's films
  ?film dbo:producer dbr:Nat_Levine .
  
  # Find Ann Sothern's birth name
  ?annSothern a dbo:Person ;
              foaf:name ""Ann Sothern""@en ;
              foaf:birthday ?birthDate .

  ?annSothern foaf:givenName ?birthGivenName .
  
  # Identify the person born as Ann Sothern's birth name
  ?person a dbo:Person ;
          foaf:givenName ?birthGivenName ;
          foaf:name ?fullName .

  # Find the actor of the film
  ?film dbo:actor ?actor .

  # Retrieve the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?author a dbo:Person ;
          dbo:work ?invitationWork, ?backToWorkBook ;
          dbo:Politician ;
          dbo:OfficeHolder .
  
  ?invitationWork rdfs:label ""An Invitation to the White House""@en .
  ?backToWorkBook rdfs:label ""Back to Work (book)""@en .

  OPTIONAL { ?author dbo:spouse ?spouse . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional ?alterEgo ?author ?movie ?actor WHERE {
  # Find the professional in ""The Golden Master""
  ?series dbo:title ""The Golden Master""@en .
  ?series dbo:professionals ?professional .

  # Get alter ego of the professional
  OPTIONAL { ?professional foaf:name ?alterEgo . }

  # Find the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .

  # Find movies by this author and their actors
  ?movie dbo:writer ?author .
  ?movie dbo:actor ?actor .
}
```",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfArthur ?parentOfChild WHERE {
  # Find Arthur Stanley's father
  dbr:Arthur_Stanley_(politician) dbo:father ?fatherOfArthur .

  # Find Frederick Stanley's child and that child's parent
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  ?child dbo:parent ?parentOfChild .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  OPTIONAL { ?sawMinPhyu dbo:spouse ?spouse . }
  
  OPTIONAL { ?spouse dbo:child ?child . }
  
  FILTER EXISTS { ?child a dbo:RoyalFamilyMember } 
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:RoyalFamily . }
  
  OPTIONAL { ?child dbo:spouse ?spouse . }
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthName ""Robert Lamar Thompson""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete information.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Philip_I_of_Castile dbo:child ?child .
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace WHERE {
  # Antonios Varthalitis death place that is a settlement
  ?antoniosVarthalitis a dbo:Person ;
                      foaf:name ""Antonios Varthalitis""@en .
  ?antoniosVarthalitis dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace instanceof dbo:Settlement)

  # Konstantinos Ventiris wars
  ?konstantinosVentiris a dbo:Person ;
                        foaf:name ""Konstantinos Ventiris""@en .
  ?war dbo:participatedIn ?konstantinosVentiris .

  # Find common settlements related to both individuals
  OPTIONAL { ?deathPlace dbo:location ?war }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find players in ""All or Nothing: Manchester City""
  ?series a dbo:TelevisionSeries ;
          foaf:name ""All or Nothing: Manchester City""@en .
  
  ?episode dbo:partOfSeries ?series ;
           dbo:actor ?player .

  # Ensure the player is an athlete and soccer player
  ?player a dbo:SoccerPlayer, dbo:Athlete .

  # Find teams that include Pablo Aimar
  ?team dbo:member ?pabloAimar .
  dbr:Pablo_Aimar dbo:member ?team .

  # Ensure the player is part of this team
  ?team dbo:member ?player .

  # Filter by birth date
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:birthDate ""1955-02-22""^^xsd:date .
  
  FILTER(?player = ?person)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tenantOfMadrid WHERE {
  ?madrid a dbo:City ;
          foaf:name ""Madrid""@en .
  
  ?officeHolder a dbo:OfficeHolder, dbo:Politician ;
                dbo:residence ?madrid .

  ?conflict a dbo:MilitaryConflict, dbo:SocietalEvent ;
            dbo:participant ?pintoDaCosta, ?miguelMaura .

  ?pintoDaCosta foaf:name ""Manuel Pinto da Costa""@en .
  ?miguelMaura foaf:name ""Miguel Maura""@en .

  OPTIONAL { ?officeHolder dbo:position ?commanderPosition . }
  
  FILTER(?officeHolder = ?tenantOfMadrid)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the associated band of Stuart Tosh
  ?stuartTosh a dbo:Person ;
              foaf:name ""Stuart Tosh""@en .
  ?stuartBand dbo:associatedBand ?stuartTosh .

  # Find the associated band of David Paton
  ?davidPaton a dbo:Person ;
              foaf:name ""David Paton""@en .
  ?patonBand dbo:associatedBand ?davidPaton .

  # Find members of the band associated with David Paton
  ?bandMember dbo:bandMember ?patonBand .

  # Ensure that this member is also linked to Stuart Tosh's associated band
  OPTIONAL { ?stuartTosh dbo:associatedBand ?bandMember }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Roy_Barreras dbo:partyMember ?party .
  OPTIONAL { 
    ?party dbo:country dbr:Colombia .
  }
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  ?patrick a dbo:Person ;
           foaf:name ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
  ?patrick dbo:parent ?parent .

  ?mary a dbo:Person ;
        foaf:name ""Hon. Mary Frances Bowes-Lyon""@en .
  ?mary dbo:parent ?parent .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist ?bandMemberBand WHERE {
  # Find Nicholas Michael Curran as a musical artist
  ?curran a dbo:MusicalArtist ;
          foaf:name ""Nicholas Michael Curran""@en .
  
  # Find associated musical artists of Nicholas Michael Curran
  OPTIONAL { ?curran dbo:associatedMusicalArtist ?associatedArtist . }
  
  # Identify The Fabulous Thunderbirds and their band members
  ?fabulousThunderbirds a dbo:Band ;
                       foaf:name ""The Fabulous Thunderbirds""@en .
  
  ?bandMember dbo:memberOfBand ?fabulousThunderbirds ;
              a dbo:MusicalArtist .

  # Find the connection to Eric Clapton
  ?clapton a dbo:MusicalArtist ;
           foaf:name ""Eric Clapton""@en .
  
  OPTIONAL { ?bandMember dbo:associatedMusicalArtist ?clapton . }
  
  # Get the band of the band member connected to Eric Clapton
  OPTIONAL { ?bandMember dbo:memberOfBand ?bandMemberBand . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?person .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthday ?birthday .
  
  FILTER (YEAR(?birthday) = 1981 && MONTH(?birthday) = 12 && DAY(?birthday) = 01)
  
  ?person dbo:athlete ?athlete .
  ?person dbo:soccerPlayer ?soccerPlayer .
  ?person dbo:sportsManager ?sportsManager .
  ?person dbo:soccerManager ?soccerManager .

  ?team dbr:Hong_Kong_C_Team ;
        dbo:manager ?person .
}
```",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:hasMember ?party ;
                  dbo:head ?leader .

  ?leader dbo:nationality dbr:Spain ;
          dbo:office ?office .

  FILTER EXISTS { 
    ?election dbo:electionDate ?date .
    ?election foaf:name ""2009 Galician regional election""@en .
    FILTER(?date >= ""2009-01-01""^^xsd:date && ?date <= ""2009-12-31""^^xsd:date)
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:The_First_Glove dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleForce ?bayneConflict ?bayneForce WHERE {
  # Military force involved in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedIn ?battle .
  OPTIONAL { ?battle dbo:militaryUnit ?battleForce . }

  # William Bayne's involvement in a military conflict
  dbr:William_Bayne_(Royal_Navy_officer) dbo:participatedIn ?bayneConflict .
  FILTER(?bayneConflict a dbo:MilitaryConflict)
  OPTIONAL { ?bayneConflict dbo:militaryUnit ?bayneForce . }
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?name WHERE {
  # Find Shatrughan Sinha's profession
  ?shatrughan a dbo:Person ;
              foaf:name ""Shatrughan Sinha""@en .
  ?shatrughan dbo:profession ?profession .

  # Find other persons with the same profession
  ?person a dbo:Person ;
          dbo:profession ?profession ;
          foaf:name ?name .
  
  FILTER(?person != ?shatrughan) # Exclude Shatrughan Sinha himself from results
}
```",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardeeBirthPlace ?smitaPatilBirthPlace WHERE {
  # Find the birthplace of awardees of Sangeet Natak Akademi Fellowship
  ?person a dbo:Person ;
          dbo:honor ""Sangeet_Natak_Akademi_Fellowship""@en .
  ?person dbo:birthPlace ?awardeeBirthPlace .

  # Find the birthplace of Smita Patil
  ?smitaPatil a dbo:Person ;
              foaf:name ""Smita Patil""@en .
  ?smitaPatil dbo:birthPlace ?smitaPatilBirthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?team WHERE {
  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthDate .

  # Find a person who is both a soccer player and manager, sharing the same birthday
  ?person a dbo:SoccerPlayer ;
          a dbo:Manager ;
          dbo:birthday ?birthDate .
  
  FILTER(?birthDate = ?marceloSarmientoBirthDate)

  # Get the team associated with this person
  OPTIONAL { ?person dbo:team ?team . }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:birthPlace dbr:London .
}
```",1,3,2,1,1,3,2,20,657,0,0,1.0,1.0,1.0
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranArtist ?bandMemberBand WHERE {
  # Part 1: Associated musical artist of Nick Curran
  OPTIONAL {
    dbr:Nick_Curran a dbo:Musician ;
                    dbo:associatedBand ?nickCurranArtist .
  }

  # Part 2: Band of the band member of Eric Clapton
  OPTIONAL {
    ?bandMember dbo:bandMember dbr:Eric_Claptom ;
                dbo:associatedBand ?bandMemberBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party ?country WHERE {
  # Find Sofía Petro and her father's party affiliation
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro""@en .
  
  OPTIONAL { 
    ?sofia dbo:parent ?father .
    ?father dbo:party ?party .
  }
  
  # Find Daniel Elahi Galán and his country of association
  ?daniel a dbo:Person ;
          foaf:name ""Daniel Elahi Galán""@en .
  
  OPTIONAL {
    ?daniel dbo:nationality ?country .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Iliza Shlesinger
  ?movie a dbo:Film ;
         dbo:starring dbr:Iliza_Shlesinger .

  # Ensure the movie is also considered a work
  ?movie a dbo:CreativeWork .

  # Identify Janusz Kamiński's spouse and check for awards
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
  
  OPTIONAL {
    ?awardList dbo:recipient ?spouse .
  }

  # Find the actor of these movies
  ?movie dbo:starring ?actor .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bayneMilitaryForce ?calderMilitaryForce WHERE {
  # Military force of the war involving William Bayne
  ?war a dbo:MilitaryConflict ;
      dbo:participant ?bayne .
  ?bayne foaf:name ""William Bayne""@en ;
         dbo:militaryUnit ?bayneMilitaryForce .

  # Military force of the event and societal event involving Robert Calder
  ?event a dbo:Event, dbo:SocietalEvent ;
         dbo:agent ?calder .
  ?calder foaf:name ""Robert Calder""@en ;
          dbo:militaryUnit ?calderMilitaryForce .
}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  {
    dbr:Konstantinos_Ventiris dbo:participatedIn ?war .
  }
  UNION
  {
    dbr:Napoleon_Zervas dbo:participatedIn ?war .
  }
}
```",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:Politician . }
  
  OPTIONAL { 
    ?awardee dbo:award ""Commander of the Royal Victorian Order"" ;
             dbo:parent ?parent .
    
    FILTER(?child = ?awardee)
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?tvShow a dbo:TelevisionSeries ;
          dbo:actor ?person .
  
  OPTIONAL { ?person foaf:name ""Richard E. Grant""@en . }
  
  ?actor a dbo:Person ;
         dbo:actor ?tvShow .
  
  OPTIONAL { 
    ?actor dbo:profession ?politicianRole .
    ?politicianRole rdfs:label ?roleLabel .
    FILTER(CONTAINS(LCASE(?roleLabel), ""politician""))
    
    ?abKyaHoga a dbo:TelevisionSeries ;
               foaf:name ""Ab Kya Hoga""@en .
    
    OPTIONAL { 
      ?actor dbo:actor ?abKyaHoga .
    }
  }
}
```",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration WHERE {
  # Query for Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  OPTIONAL {
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:positionHeld ?administration .
    BIND(dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck AS ?person)
  }
  
  # Query for the mayor of Duchy of Schleswig
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:officeHolderOf dbr:Duchy_of_Schleswig .
    ?mayor dbo:positionHeld ?administration .
    BIND(?mayor AS ?person)
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Archduke Charles Joseph of Austria and his parent
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharles .

  # Ferdinand II, Holy Roman Emperor and his child
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?childOfFerdinand .

  # The child of the parent of Archduke Charles Joseph who is also a child of Ferdinand II
  FILTER(?parentOfCharles = ?childOfFerdinand)

  # Find the father of this identified child
  ?childOfFerdinand dbo:father ?father .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Isabella_of_Austria dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en ;
          dbo:occupation dbo:Politician .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}

SELECT ?foundingDate WHERE {
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  {
    ?person a dbo:Person ;
            dbo:birthPlace dbr:Jamshedpur .
  }
  UNION
  {
    ?person a dbo:Person ;
            dbo:birthPlace dbr:India .
  }
}
```",2,2,3,1,2,2,2,9,21,9003,0,0.002327127659574468,1.0,0.004643449419568822
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  dbr:Emilia_(Bulgarian_singer) dbo:bandMember ?bandMember .

  dbr:Jamie_T dbo:profession ?jamieTProfession .

  ?bandMember dbo:profession ?bandMemberProfession .
  
  FILTER(?bandMemberProfession = ?jamieTProfession)
}
```",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?entity WHERE {
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore""@en .
  
  ?gillmore dbo:commander ?force .

  OPTIONAL { 
    ?event dbp:location ?charleston ;
           dbp:place ?entity .
    
    FILTER(CONTAINS(LCASE(?entity), ""charleston, south carolina""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  ?plotkin a dbo:Person ;
           foaf:name ""James Plotkin""@en .
  
  ?plotkin dbo:associatedMusicalArtist ?firstLevelArtist .

  ?firstLevelArtist dbo:associatedMusicalArtist ?secondLevelArtist .
}
```",2,2,3,2,1,3,2,20,13,0,0,1.0,1.0,1.0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?team WHERE {
  ?person1 a dbo:SoccerPlayer ;
           dbo:sportManager ?managerRole ;
           dbo:birthday ""1979-11-03""^^xsd:date .
  
  ?person2 a dbo:Athlete ;
           dbo:birthday ""1955-02-22""^^xsd:date .

  ?team dbo:player ?person1 .
  ?team dbo:player ?person2 .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?series a dbo:TelevisionSeries ;
          foaf:name ""All or Nothing: Manchester City""@en .
  
  ?castMember dbo:castMemberOf ?series ;
              a dbo:Person .

  ?actor a dbo:Actor ;
         foaf:name ?name .
  
  FILTER(?castMember = ?actor)

  OPTIONAL { ?actor dbo:sportTeamMember ?team . }
  OPTIONAL { ?actor dbo:athlete ?sportActivity . }

  FILTER EXISTS { ?actor dbo:sportTeamMember ?team }
  FILTER EXISTS { ?actor dbo:athlete ?sportActivity }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?recipient WHERE {
  dbr:Rodney_Lees a dbo:Person .
  OPTIONAL { dbr:Rodney_Lees dbo:award ?award . }
  OPTIONAL { ?award dbo:recipient ?recipient . }
}
```",2,2,3,2,1,3,3,71,0,1,14,0.0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Cora Sue Collins""@en .
  OPTIONAL { ?person dbo:work ?work . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Roger_II_of_Sicily dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father ?peterIV WHERE {
  dbr:Peter_IV_of_Aragon dbo:father ?father .
  ?father a dbo:Monarch .

  OPTIONAL { ?father dbo:child ?child . }

  FILTER(?father != dbr:Peter_IV_of_Aragon) # Ensure the father is not Peter IV himself

  BIND(dbr:Peter_IV_of_Aragon AS ?peterIV)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer""@en .
  OPTIONAL { ?linda dbo:spouse ?spouse . }
}

UNION

SELECT ?producer WHERE {
  dbr:12_Strong dbo:producer ?producer .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  dbr:Béla_IV_of_Hungary dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthPlace WHERE {
  {
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  } UNION {
    ?author a dbo:Person ;
            dbo:work ?elDeafo .
    ?elDeafo rdfs:label ""El Deafo""@en .
    OPTIONAL { ?author foaf:name ?name .
               FILTER(CONTAINS(LCASE(?name), ""cece bell"")) }
    OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
  } UNION {
    ?person a dbo:Person ;
            foaf:name ""Glenn Youngkin""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  }
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Identify the alter ego of The Golden Master series
  ?goldenMasterSeries a dbo:TelevisionShow ;
                      foaf:name ""The Golden Master""@en .
  
  OPTIONAL { ?goldenMasterSeries dbo:alterEgo ?alterEgo . }
  
  # Find actors of ATL (film)
  dbr:ATL_(film) dbo:actor ?atlActor .

  # Check if any actor from ATL also acted in another movie
  ?otherMovie a dbo:Film ;
              dbo:actor ?commonActor .
  
  FILTER(?atlActor = ?commonActor)

  # Find the professional role of this common actor
  OPTIONAL { ?commonActor dbo:profession ?professional . }
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme ?native WHERE {
  # Part for the theme of Dikhawa
  OPTIONAL { 
    dbr:Dikhawa dbo:theme ?theme .
  }
  
  # Part for natives of Lahore
  OPTIONAL {
    ?person a dbo:Person ;
            dbo:nativePlace dbr:Lahore .
    ?native foaf:name ?name .
    FILTER(?person = ?native)
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  dbr:Kiyosu dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .
  FILTER(?region = ?birthPlace)
  BIND(?region AS ?entity)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?calder a dbo:Person ;
          foaf:name ""Robert Calder""@en .
  
  ?campaign a dbo:MilitaryConflict ;
            foaf:name ""French campaign in Egypt and Syria""@en .

  ?calder dbo:commander ?campaign .
  
  OPTIONAL { ?calder dbo:militaryForce ?militaryForce . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Konstantinos Ventiris
  {
    ?person a dbo:Person ;
            foaf:name ""Konstantinos Ventiris""@en .
    ?person dbo:participatedIn ?war .
  }
  
  UNION
  
  # Wars involving the leader of National Party of Greece
  {
    ?party a dbo:PoliticalParty ;
           foaf:name ""National Party (Greece)""@en .
    
    ?leader dbo:leader ?party ;
            dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:The_Alan_Parsons_Project dbo:bandMember ?bandMember .
}

UNION

SELECT ?associatedArtist WHERE {
  dbr:Stuart_Tosh dbo:associatedBand ?associatedArtist .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the child of Ferdinand II who is also a father to Eleonore of Austria
  ?child a dbo:Person ;
         dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor ;
         dbo:child ?eleonore .
  
  # Ensure this person is the father of Eleonore of Austria, Queen of Poland
  ?eleonore foaf:name ""Eleonore of Austria (1618–1675)""@en ;
            dbo:parent ?commander .

  # Check if this person was a commander in the Thirty Years' War
  OPTIONAL { ?commander dbo:commander dbr:Thirty_Years'_War . }
  
  FILTER(?child = ?commander)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?party WHERE {
  VALUES ?name { ""Roy Leonardo Barreras Montealegre"" ""Gustavo Petro"" }
  
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:birthPlace ?place .
  
  OPTIONAL { ?person dbo:party ?party . }

  FILTER EXISTS { 
    ?colombia a dbo:Country ;
              foaf:name ""Colombia""@en .
    ?place rdfs:label ?countryLabel .
    FILTER(?countryLabel = ""Colombia"" || ?place = ?colombia)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceFortRoyal ?commanderEgyptSyria ?calderEventMilitaryForce WHERE {
  # Military force involved in the Battle of Fort Royal
  OPTIONAL { 
    dbr:Battle_of_Fort_Royal dbo:militaryForce ?militaryForceFortRoyal .
  }

  # Commander of the French campaign in Egypt and Syria
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commanderEgyptSyria .
  }
  
  # Event involving Robert Calder that is also a societal event, and its military force
  OPTIONAL {
    ?calderEvent dbo:participatedIn ?militaryForceCalder ;
                 dbo:agent dbr:Robert_Calder .
    FILTER(STRSTARTS(STR(?calderEvent), ""http://dbpedia.org/resource/"") && 
           (STR(?calderEvent) CONTAINS ""societal event""))
    ?militaryForceCalder dbo:militaryForce ?calderEventMilitaryForce .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  
  ?predecessor dbo:child ?parent .
  
  FILTER (?parent rdf:type dbo:Monarch) .

  ?parent dbo:child ?royalChild .
  
  ?royalChild dbo:child ?grandchild .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  ?album a dbo:Album ;
         foaf:name ""Sappy""@en .
  
  ?album dbo:composer ?writer .

  ?band a dbo:Band ;
        dbo:member ?bandMember ;
        dbo:member ?writer .

}
```",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    OPTIONAL { 
      dbr:Scott_LaFaro dbo:birthPlace ?birthPlace .
      BIND(dbr:Scott LaFaro AS ?person)
    }
  } UNION {
    OPTIONAL { 
      dbr:Lauryn_Hill dbo:birthPlace ?birthPlace .
      BIND(dbr:Lauryn Hill AS ?person)
    }
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?event WHERE {
  # Find William Tennant's role in relation to the sinking event
  dbr:William_Tennant_(Royal_Navy_officer) dbo:commander ?ship .
  
  # Link the ship to the Sinking of Prince of Wales and Repulse
  OPTIONAL { ?ship dbo:participatedIn dbr:Sinking_of_Prince_of_Wales_and_Repulse . }
  
  # Find societal events or military conflicts associated with Tennant
  OPTIONAL { dbr:William_Tennant_(Royal_Navy_officer) dbo:participatedIn ?event .
              FILTER(?event != dbr:Sinking_of_Prince_of_Wales_and_Repulse)
            }

  # Return the force (ship/command role) and any associated events
  BIND(?ship AS ?force)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Cece Bell""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find works authored by Hillary Clinton
  ?work dbo:author dbr:Hillary_Clinton ;
        a dbo:Book .

  # Identify her spouse from these works
  OPTIONAL { ?work dbo:author ?spouse . }

  # Ensure the spouse is also an author, politician, and office holder
  FILTER(?spouse != dbr:Hillary_Clinton)
  ?spouse a dbo:Person ;
          foaf:name ?name .
  
  OPTIONAL { ?spouse dbo:officeHolder ?office . }
  OPTIONAL { ?spouse dbo:politicalPartyMember ?party . }

  # Commander in the war related to United States Navy
  OPTIONAL {
    ?war dbo:commander ?spouse ;
         dbo:participatingMilitaryUnit dbr:United_States_Navy .
  }
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?actorName .
}
```",2,2,3,1,2,2,3,28,0,3591,4210,0.0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?birthName ?nativeRegion ?awardeeBand WHERE {
  # Uncle Murda's band membership
  OPTIONAL { 
    dbr:Uncle_Murda dbo:memberOf ?band .
    ?band a dbo:MusicalGroup ;
          foaf:name ?bandMember .
  }

  # Bobby Shmurda's birth name
  OPTIONAL {
    dbr:Bobby_Shmurda foaf:name ?birthName .
    FILTER(?birthName = ""Ackquille Jean Pollard""@en)
  }

  # Award related to New York and its awardee band
  OPTIONAL {
    ?award dbo:location dbr:New_York_(state) ;
           a dbo:Award .
    ?awardeeBand dbo:recipientOfAward ?award ;
                 a dbo:MusicalGroup .
    ?region dbo:partOf dbr:New_York_(state) ;
            a dbo:Region .
    FILTER(?nativeRegion = ?region)
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?relatedWar WHERE {
  ?award a dbo:Award ;
         dbo:givenBy dbr:United_States_Congress .
  
  ?show dbo:recipient ?awardee ;
        dbo:award ?award .

  OPTIONAL { ?awardee dbo:participatedIn ?war . }
}
```",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military conflict involving both the regiment and Battle of Fort Royal
  ?conflict a dbo:MilitaryConflict ;
            dbo:militaryForce [dbo:member dbr:30th_(Cambridgeshire)_Regiment_of_Foot] ;
            dbo:militaryForce [dbo:event dbr:Battle_of_Fort_Royal] .

  # Find the commander of this conflict
  ?conflict dbo:commander ?commander .

  # Ensure the same military force is involved in an event related to Robert Calder
  ?calderEvent a dbo:Event ;
               dbo:militaryForce [dbo:event dbr:Robert_Calder] .
  
  FILTER(?conflict = ?calderEvent)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Caroline Louise Bevan Symonds""@en .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?authorSpouse WHERE {
  # Find the commander of the Third Taiwan Strait Crisis
  ?crisis a dbo:MilitaryConflict ;
          dbo:commander ?commander .
  FILTER(STR(?crisis) = ""Third_Taiwan_Strait_Crisis"")

  # Find works authored by Bill Clinton that are books
  ?work a dbo:Book ;
        dbo:author dbr:Bill_Clinton .

  # Find the spouse of Bill Clinton who is a politician and office holder
  OPTIONAL {
    ?billClinton a dbo:Person ;
                 foaf:name ""Bill Clinton""@en .
    ?billClinton dbo:spouse ?authorSpouse .
    FILTER EXISTS { ?authorSpouse a dbo:Politician }
    FILTER EXISTS { ?authorSpouse dbo:officeHolder true }
  }

  # Find works authored by Hillary Clinton that are books
  OPTIONAL {
    ?hclintonWork a dbo:Book ;
                  dbo:author dbr:Hillary_Clinton .
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Margarete_Sophie_of_Austria dbo:child ?person .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ann Sothern""@en .
  OPTIONAL { ?person foaf:mbox ?email . }
  OPTIONAL { ?person foaf:givenName ?firstName . }
  OPTIONAL { ?person foaf:familyName ?lastName . }
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame ?role WHERE {
  dbr:George_Cukor dbo:actor dbr:Johnny_Doughboy ;
                   dbo:producer dbr:A_Star_Is_Born_(1937_film) .
  
  OPTIONAL { dbr:George_Cukor dbo:claimToFame ?claimToFame . }
  
  OPTIONAL {
    ?work dbo:actor dbr:George_Cukor ;
          a dbo:Film .
    BIND(""actor"" AS ?role)
  }

  OPTIONAL {
    ?work dbo:producer dbr:George_Cukor ;
          a dbo:Film .
    BIND(""producer"" AS ?role)
  }
  
  FILTER(?claimToFame = ?work)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  dbr:Walter_B._Gibson dbo:creator ?character .
  
  ?character a dbo:FictionalCharacter ;
             dbo:genre dbr:Comics .

  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
}
```",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  } UNION
  { 
    ?person a dbo:Person ;
            foaf:name ""Glenn Youngkin""@en .
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  }
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find the resource for Hon. Mary Frances Bowes-Lyon
  dbr:Mary_Frances_Bowes-Lyon a dbo:Person ;
                              dbo:child ?parent .

  # Filter parents who are natives of Middlesex
  ?parent dbo:birthPlace dbr:Middlesex .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find William Bayne and his related military conflict
  dbr:William_Bayne_(Royal_Navy_officer) a dbo:Person ;
    dbo:militaryConflict ?war .

  # Identify the award associated with him
  OPTIONAL { 
    dbr:William_Bayne_(Royal_Navy_officer) dbo:award ?award .
    FILTER(?award = dbr:Knight_Commander_of_the_Order_of_the_Bath)
  }

  # Retrieve the military force related to the war he was involved in
  ?war dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?decedent a dbo:Person ;
            dbo:decedentLocation dbr:Melbourne .
  
  ?predecessor a dbo:Person ;
               dbo:predecessor ?adaWatson .

  ?adaWatson foaf:name ""Ada Watson""@en .

  FILTER(?decedent = ?predecessor)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?father WHERE {
  dbr:Francis_I,_Duke_of_Lorraine dbo:child ?child .
  
  FILTER EXISTS { 
    ?child rdf:type ?royaltyType .
    VALUES ?royaltyType { dbo:Monarch dbo:RoyalFamilyMember }
  }

  ?child dbo:parent ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .

  # Find a soccer player and manager born on the same date as Marcelo Sarmiento
  ?soccerPerson a dbo:SoccerPlayer, dbo:SoccerManager ;
                dbo:birthday ?marceloSarmientoBirthday .

  # Find the athlete born on 1955-02-22 and their team
  ?athlete a dbo:Person ;
           dbo:birthday ""1955-02-22""^^xsd:date ;
           dbo:team ?team .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:militaryCommander ?commandRole .
    FILTER(CONTAINS(LCASE(STR(?commandRole)), ""thirty years war""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?siege dbr:Siege_of_Padua ;
         dbo:commander ?commander .
  
  ?commander a dbo:RoyalFamilyMember ;
             dbo:parent ?child .

  FILTER EXISTS { 
    ?catherine a dbo:Person ;
               foaf:name ""Catherine of Austria, Queen of Portugal""@en ;
               dbo:parent ?commander .
  }

  FILTER EXISTS {
    ?isabella a dbo:Person ;
              foaf:name ""Isabella of Austria""@en ;
              dbo:parent ?commander .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  OPTIONAL { ?person dbo:office ?office . }
  
  ?person dbo:residence dbr:Santiago_de_Compostela .
  ?person dbo:residence dbr:Spain .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?force ?war WHERE {
  # Henry Clay Lewis's birthplace that is a settlement and American
  ?henryClayLewis a dbo:Person ;
                  foaf:name ""Henry Clay Lewis""@en .
  ?henryClayLewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Gillmore Medal awardee and their associated force and war
  ?gillmoreMedalAwardee dbo:awardReceived dbr:Gillmore_Medal ;
                       dbo:militaryUnit ?force .
  ?force dbo:participatedIn ?war .

  # Amasa Tracy's war involvement
  ?amasaTracy a dbo:Person ;
              foaf:name ""Amasa Tracy""@en .
  ?amasaTracy dbo:participatedIn ?tracyWar .
  
  FILTER(?war = ?tracyWar)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?awardee dbo:honour ""Knight Commander of the Order of the Bath"" .
  
  ?awardee dbo:militaryForce ?militaryForce .

  ?battle a dbo:MilitaryConflict ;
          foaf:name ""Battle of Fort Royal""@en .
  
  ?battle dbo:participatingMilitaryUnit ?militaryForce .

  FILTER(?militaryForce != null)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?bobbyShmurda a dbo:MusicalArtist ;
                 foaf:name ""Bobby Shmurda""@en ;
                 dbo:birthName ""Shmurda"" .
  
  ?gs9 a dbo:Band ;
       dbo:member ?bobbyShmurda .

  ?bandMember dbo:bandMember ?gs9 ;
              a dbo:MusicalArtist, dbo:Artist ;
              dbo:nativePlace ?florida .

  ?florida rdfs:label ""Florida""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actor associated with the album of What You Know (T.I. song)
  OPTIONAL {
    dbr:What_You_Know_(song) dbo:album ?album .
    ?album dbo:artist/producers ?person .
    ?person a dbo:Person ;
            dbo:profession/disco:Actor ?actor .
  }

  # Find actor of Shelby Oaks
  OPTIONAL {
    dbr:Shelby_Oaks dbo:actor ?actor .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?miguelOffice ?marianoOffice ?tenant WHERE {
  ?miguel a dbo:Person ;
          foaf:name ""Miguel Maura""@en .
  OPTIONAL { ?miguel dbo:office ?miguelOffice . }

  ?mariano a dbo:Person ;
           foaf:name ""Mariano Rajoy""@en .
  OPTIONAL { ?mariano dbo:office ?marianoOffice . }

  ?alberto a dbo:Person ;
           foaf:name ""Alberto Ruiz-Gallardón""@en .
  ?residence dbo:resident ?alberto .
  OPTIONAL { ?residence dbo:tenant ?tenant . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?actor WHERE {
  # Find Marty Pollio's birthday
  ?marty a dbo:Person ;
         foaf:name ""Marty Pollio""@en .
  ?marty dbo:birthday ?birthday .

  # Find athletes born on that date
  ?person a dbo:Athlete ;
          dbo:birthDate ?birthday .
  BIND(?person AS ?athlete)

  # Find actors in All or Nothing: Manchester City who are soccer players and athletes
  ?actor a dbo:Actor ;
         foaf:name ?actorName ;
         dbo:workFeaturedIn dbr:All_or_Nothing:_Manchester_City .
  ?actor rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:Athlete .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:name ""Central African Republic Civil War""@en .
  
  ?commander dbo:role ""Commander"" ;
             dbo:participatedInMilitaryConflicts ?war ;
             dbo:officeHolder ?office ;
             dbo:politician ?politics .

}
```",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Movie ;
         dbo:country dbr:India .
  
  ?movie dbo:starring dbr:Dipankar_De .

  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Dipankar_De)
}
```",2,4,3,2,1,3,2,20,0,0,17,0,0.0,0
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?actorOfParadise ?spouseOfJanuszKaminski ?movieWithAudreyHepburn ?actorInMovie WHERE {
  # Find the actor of ""Paradise (2013 film)""
  dbr:Paradise_(2013_film) dbo:starring ?actorOfParadise .
  
  # Identify spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouseOfJanuszKaminski .

  # Find movies with Audrey Hepburn and identify actors in those films
  ?movieWithAudreyHepburn rdf:type dbo:Film ;
                          dbo:starring dbr:Audrey_Hepburn .
  
  ?movieWithAudreyHepburn dbo:starring ?actorInMovie .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorAlways ?filmWithIliza ?actorFilmWithIliza WHERE {
  # Actors of ""Always"" (1989)
  dbr:Always_(1989_film) dbo:starring ?actorAlways .

  # Movies with Iliza Shlesinger that are both a work and a film
  ?filmWithIliza a dbo:Film, dbo:Work ;
                 dbo:starring dbr:Iliza_Shlesinger .
  
  # Actors of those films
  ?filmWithIliza dbo:starring ?actorFilmWithIliza .

}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfElvira ?fatherOfChild ?royaltyChild WHERE {
  # Elvira of Castile, Queen of Sicily's child
  dbr:Elvira_of_Castile,_Queen_of_Sicily dbo:child ?childOfElvira .

  # Father of the child (who is a royalty)
  OPTIONAL { ?childOfElvira dbo:parent ?fatherOfChild .
             FILTER EXISTS { ?fatherOfChild a dbo:RoyalFamily . } }

  # William I of Sicily's child who is royalty
  dbr:William_I_of_Sicily dbo:child ?royaltyChild .
  FILTER EXISTS { ?royaltyChild a dbo:RoyalFamily . }

  # Parent of Roger III, Duke of Apulia
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRoger .

  # Linking the royalty child to be also a child of Roger's parent
  FILTER (?royaltyChild = ?childOfElvira)
  FILTER (?fatherOfChild = ?parentOfRoger)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation .
  FILTER(?elevation >= 20.1168 && ?elevation <= 20.117)
  
  ?landmark dbo:locatedInCountry ?country .

  ?country dbo:rulingParty ?rulingParty .

  ?partyMember dbo:memberOf ?rulingParty ;
               a dbo:Person .
}
```",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?profession WHERE {
  dbr:The_Live_Anthology dbo:writer ?writer .
  
  ?writer a dbo:MusicalArtist ;
          rdf:type ?type .
  
  OPTIONAL { ?writer rdf:type ?profession . }
}
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nick Curran""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation .
  FILTER(?elevation = ""20.116800000000001347""^^xsd:decimal)
}
```",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war WHERE {
  ?tracy a dbo:Person ;
         foaf:name ""Amasa Tracy""@en ;
         dbo:dateOfDeath ""1850-08-05""^^xsd:date .

  ?tracy dbo:birthPlace ?birthplace .
  
  ?birthplace a dbo:Settlement ;
              dbo:civilization dbr:United_States .

  OPTIONAL { ?tracy dbo:participatedInWar ?war . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?childParent WHERE {
  # Find The Shadow as alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alterEgo ?alterEgo .

  # Find the entity that is a child of Dawit I and parent of Baeda Maryam I
  dbr:Dawit_I dbo:child ?childParent .
  ?childParent dbo:parent dbr:Baeda_Maryam_I .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName ?deathPlace WHERE {
  {
    # For ""Color Me Dead""
    dbr:Color_Me_Dead dbo:starring ?actor .
    ?actor foaf:name ?actorName .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  } UNION {
    # For ""The Sky Ranger (1928 film)""
    dbr:The_Sky_Ranger_(1928_film) dbo:starring ?actor .
    ?actor foaf:name ?actorName .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the professional associated with The Shadow
  ?shadow a dbo:AlterEgo ;
          foaf:name ""The Shadow""@en .
  OPTIONAL { ?shadow dbo:alterEgoOf ?professional . }

  # Find the movie related to T.I.'s song ""What You Know""
  dbr:What_You_Know_(T.I._song) dbo:songInAlbum ?album ;
                                dbo:lyricsBy dbr:T.I. .
  
  OPTIONAL { ?movie dbo:actor ?professional . }
  FILTER EXISTS {
    ?album a dbo:MusicAlbum .
    ?movie dbo:title ?title .
    ?title foaf:name ?movieTitle .
  }

  # Ensure the professional is common across these entities
}
```",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?association WHERE {
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran""@en .
  
  ?fabulousThunderbirds a dbo:Band ;
                        foaf:name ""The Fabulous Thunderbirds""@en .

  OPTIONAL { 
    ?nickCurran dbo:associatedBand ?association .
    FILTER(?association = ?fabulousThunderbirds)
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationChristianIX ?administrationOlafI ?territoryAdministered FROM {
  # Administration of Christian IX of Denmark
  OPTIONAL { 
    dbr:Christian_IX_of_Denmark dbo:monarch ?administrationChristianIX .
  }
  
  # Administration of Olaf I of Denmark
  OPTIONAL { 
    dbr:Olaf_I_of_Denmark dbo:monarch ?administrationOlafI .
  }

  # Death place of Christian Ditlev Ammentorp Hansen and ensure it's a settlement
  OPTIONAL {
    dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .
    FILTER(STRSTARTS(STR(?deathPlace), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?deathPlace a dbo:Settlement . })
    
    # Territories administered from the death place
    OPTIONAL {
      ?administration dbr:Christian_Ditlev_Ammertorp_Hansen dbo:ruledTerritory ?territoryAdministered .
      FILTER(?deathPlace = ?administration)
    }
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  OPTIONAL { ?person dbo:profession ?profession . }
  FILTER(?profession = dbpedia:Musician)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ada Watson""@en .
  OPTIONAL { ?person dbo:predecessor ?predecessor . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?person dbo:deathPlace dbr:Los_Angeles .
  ?movie a dbo:Film ;
         dbo:actor|dbo:director ?person .
}
```",2,3,3,2,1,3,3,71,482,2641,5993,0.154338776817163,0.07444015444015444,0.100437591164826
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Antonios Varthalitis""@en .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbp:Settlement .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Identify Michael Stipe as a member of R.E.M.
  dbr:R.E.M. dbo:bandMember ?stipe .
  
  # Find band members associated with Michael Stipe
  ?stipe dbo:bandMember ?bandMember .

  # Find associated musical artists of these band members
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is also an artist
  ?associatedArtist a dbo:Artist .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Archduke Charles Louis of Austria and his child's child (grandchild)
  dbr:Archduke_Charles_Louis_of_Austria dbo:child ?child .
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Archduchess Helena of Austria and her spouse's child (step-grandchild)
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .
  ?spouse dbo:child ?stepGrandchild .

  # Ensure the spouse is royalty and a child of Albrecht, Duke of Württemberg
  ?spouse a dbo:Monarch ;
          dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure step-grandchild is royalty
  ?stepGrandchild a dbo:Monarch .

  # The grandchild must be a predecessor of the step-grandchild
  FILTER(?grandchild < ?stepGrandchild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?campaignMilitaryForce ?battleMilitaryForce WHERE {
  # Find the commander of the French campaign in Egypt and Syria
  dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
  
  # Ensure it is a military conflict/event
  FILTER(?campaignMilitaryForce = dbr:French_campaign_in_Egypt_and_Syria)
  FILTER(BOUND(?campaignMilitaryForce))
  
  # Find the military force involved in the campaign
  OPTIONAL { ?campaignMilitaryForce dbo:participatingMilitaryUnit ?unit . }
  
  # Find William Bayne's involvement in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_1805 dbo:commander ?bayneCommand .
  FILTER(?bayneCommand = dbr:William_Bayne_(Royal_Navy_officer))
  
  # Find the military force involved in the battle
  OPTIONAL { ?battleMilitaryForce dbo:participatingMilitaryUnit ?unit . }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Find Jean Baptist, Comte d'Arco and his role as a commander
  dbr:Jean_Baptist_Comte_d'Arco a dbo:Person ;
                               dbo:role ?commanderRole .

  # Find Yurii Khmelnytsky and his successor
  dbr:Yurii_Khmelnytsky a dbo:Person ;
                        dbo:successor ?successor .

  # Ensure the successor is also a commander in the same context
  ?successor a dbo:Person ;
             dbo:role ?commanderRole .

  # Find the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:writer ?writer .
  
  # Link the successor to the writer if applicable (hypothetical connection)
  OPTIONAL { ?successor foaf:name ?writerName }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfShelbyOaks ?actorOfAlbum ?professionalAlterEgo WHERE {
  # Actor of Shelby Oaks
  dbr:Shelby_Oaks dbo:actor ?actorOfShelbyOaks .

  # Album of What You Know (T.I. song)
  dbr:What_You_Know_(T.I._song) dbo:album ?album .
  
  # Actors associated with the album
  ?album dbo:actor ?actorOfAlbum .

  # Professional alter ego of The Shadow
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo a dbo:Person ;
            dbo:profession ?professionalAlterEgo .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?child dbo:parent dbr:William_I_of_Sicily ;
         dbo:parent dbr:Elvira_of_Castile ;
         a dbo:Monarch .
  
  ?child dbo:parent ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?decedent WHERE {
  ?markTournier a dbo:Person ;
                foaf:name ""Mark Tournier""@en .
  
  ?markTournier dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  ?decedent dbo:decedent ?markTournier ;
            dbo:placeOfBirth ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,0,809,0,0.0,0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  OPTIONAL { ?constance dbo:spouse ?spouse . }
  FILTER(?spouse != null)
  ?spouse a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfChildWilliamI ?parentOfChildRogerII WHERE {
  # Find a royal child of William I of Sicily
  dbr:William_I_of_Sicily dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Royalty .

  # Get the father of this royal child
  ?royalChild dbo:parent ?fatherOfChildWilliamI .

  # Find a royal child of Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?anotherRoyalChild .
  ?anotherRoyalChild rdf:type dbo:Royalty .

  # Get the parent of this royal child
  ?anotherRoyalChild dbo:parent ?parentOfChildRogerII .
}
```",5,7,6,3,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war ?commander WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jean Baptist, Comte d'Arco""@en .
  
  ?person dbo:commanderOf ?war .
  
  ?war a dbo:War ;
       dbo:mediaType ?mediaType ;
       dbo:socialEvent ?socialEvent .

  FILTER(?mediaType = dbo:TelevisionShow && ?socialEvent = true)

  ?war dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?governor a dbo:Politician ;
            dbo:officeHolder dbr:Governor_of_Virginia .
  ?governor dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?film a dbo:Film ;
        dbo:director dbr:Manuel_Huerga .
  
  ?film dbo:starring ?actor .

  ?actor a dbo:Person ;
         dbo:soccerPlayer _:soccer ;
         dbo:athlete _:athlete .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?letschManager ?bochumManager WHERE {
  # Find the manager of Thomas Letsch's team
  OPTIONAL {
    ?team a dbo:SoccerClubSeason ;
          dbo:manager ?letschManager .
    ?letschManager foaf:name ""Thomas Letsch""@en .
  }
  
  # Find the manager of VfL Bochum
  OPTIONAL {
    dbr:VfL_Bochum a dbo:SoccerClubSeason ;
                   dbo:manager ?bochumManager .
  }
}
```",3,6,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs""@en .
  ?work dbo:author ?person .

  # Find the commander in the Great Turkish War
  ?war dbo:name ""Great Turkish War""@en ;
       dbo:commander ?person .

  # Find the successor of Yurii Khmelnytsky
  dbr:Yurii_Khmelnytsky dbo:successor ?person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  dbr:Khlyst (band) dbo:member ?member .
  
  ?member a dbo:MusicalArtist ;
          dbo:musicalArtist ?artist .

  OPTIONAL { ?artist dbo:associatedBand ?associatedArtist . }
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerInMolina ?actorSoccerAthlete WHERE {
  # Find the team or club of Juan Carlos Molina
  dbr:Juan_Carlos_Molina_(footballer) dbo:playsFor ?team .
  ?team dbo:member ?playerInMolina .

  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        a dbo:Film .

  # Find actors in those films who are also soccer players and athletes
  ?actor foaf:name ?actorName .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:soccerPlayer ?soccerRole . }
  OPTIONAL { ?actor dbo:athlete ?athleteRole . }

  FILTER(?soccerRole != '' && ?athleteRole != '')
  
  BIND(?actor AS ?actorSoccerAthlete)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?politician WHERE {
  ?show dbo:title ""Ab Kya Hoga""@en .
  
  ?actor dbo:performerIn ?show ;
         a dbo:Actor .

  ?actor dbo:profession ?actorProfession .

  ?politician a dbo:Politician ;
              dbo:profession ?actorProfession .
}
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify the VfL Bochum club and its seasons
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:sportsTeamSeason ?season2006 .

  # Find the successor season (2007–08)
  ?season2006 dbo:successor ?season2007 .
  
  # Ensure the successor is a football league season
  ?season2007 a dbo:FootballLeagueSeason .

  # Identify the manager of the club during this season
  ?season2007 dbo:manager ?manager .
}
```",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writtenWork WHERE {
  ?commander a dbo:OfficeHolder ;
             dbo:officeLocation dbr:Korean_War .
  
  ?commander dbo:work ?work .
  
  FILTER EXISTS { ?work a dbo:WrittenWork }
  
  ?work foaf:name ?writtenWorkName .
}
```",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?birthPlace WHERE {
  { 
    ?person a dbo:Person ;
            foaf:name ""Vince Gilligan""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?person a dbo:Person ;
            foaf:name ""Cece Bell""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?entity WHERE {
  dbr:Maria_I_of_Portugal dbo:commander ?commander .
  
  ?commander dbo:participatedIn ?war .
  ?commander dbo:participatedIn ?tvShow .

  FILTER((?war a dbo:War) && (?tvShow a dbo:TelevisionSeries))
  
  ?entity (dbo:location dbr:Poland || dbo:participatedIn ?war || dbo:participatedIn ?tvShow) .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity WHERE {
  { 
    ?e dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?entity .
  }
  UNION
  {
    ?a dbr:Alexander_Lvovich_Davydov dbo:participatedInWar ?entity .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .
  
  FILTER EXISTS { ?award a dbo:Award . }
  FILTER EXISTS { ?award dbo:country dbr:United_States . }
  FILTER EXISTS { ?award dbo:region ?region . 
                 ?region a (dbo:Region | dbo:State | dbo:Settlement) . }
}
```",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?associatedBand WHERE {
  VALUES ?individual { dbr:Stuart_Tosh dbr:Billy_Lyall }
  
  ?individual a dbo:Person ;
              foaf:name ?name .
  
  OPTIONAL { ?individual dbo:associatedBand ?associatedBand . }
}
```",2,2,3,1,2,2,3,28,2,3,0,0.4,1.0,0.5714285714285715
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Find Myat Hpone Pyo and his parent
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?parentOfMyatHponePyo dbo:child ?myatHponePyo .

  # Ensure the parent is royalty
  ?parentOfMyatHponePyo a dbo:Monarch .

  # Find the spouse of this royal parent
  OPTIONAL { ?parentOfMyatHponePyo dbo:spouse ?spouse . }

  # Find Minye Kyawswa and his child, then the parent of that child
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .

  ?childOfMinyeKyawswa dbo:parent ?minyeKyawswa .
  
  ?grandParentOfChild dbo:child ?childOfMinyeKyawswa .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  {
    dbr:Ye_Jia dbo:member ?player .
  }
  UNION
  {
    dbr:Lai_Sun_Cheung dbo:member ?player .
  }
}
```",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:member dbr:Republican_Party_(United_States) .
  OPTIONAL { ?person foaf:name ""Ann Sothern""@en . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:El_Deafo dbo:author ?author .
  ?author dbo:nationality dbr:United_States .
  ?author dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parent .
  ?parent dbo:child ?childOfParent .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Find Saw Min Phyu and their spouse
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  ?spouseOfSawMinPhyu dbo:spouse ?sawMinPhyu .

  # Find the child of that spouse
  ?childOfSpouse dbo:parent ?spouseOfSawMinPhyu .

  # Ensure the predecessor is royalty
  ?predecessor dbo:successor ?childOfSpouse .
  ?predecessor a dbo:Monarch .

  # Find Minye Kyawswa and their child's parent
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .

  ?childOfMinyeKyawswa dbo:parent ?minyeKyawswa .
  
  ?parentOfChildOfMinyeKyawswa dbo:child ?childOfMinyeKyawswa .

  # Ensure the child of the parent matches
  FILTER(?childOfSpouse = ?childOfMinyeKyawswa)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Duke_Philipp_of_Württemberg dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Burnt_by_the_Sun_(band) a dbo:Band ;
                               dbo:bandMember ?member .
}
```",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession (GROUP_CONCAT(?associatedArtist; separator="", "") AS ?musicalArtists) WHERE {
  # Part 1: Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent""@en .
  ?rodArgent dbo:profession ?profession .

  # Part 2: Find the associated musical artist of the person born as Pacely
  ?pacely a dbo:Person ;
          foaf:birthday ?birthDate ;
          foaf:name ""Pacely""@en .
  OPTIONAL { ?pacely dbo:associatedBandMember ?band . }
  OPTIONAL { ?band dbo:member ?associatedArtist . }

} GROUP BY ?profession
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?awardee dbo:awardReceived dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:participatedInWar ?war .
  
  OPTIONAL { 
    ?war dbo:place dbr:Russian_Empire .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Identify Roger III, Duke of Apulia and his parent
  dbr:Roger_III,_Duke_of_Apulia dbo:parent ?parentOfRoger .

  # Find children of this parent who are related to William I
  ?child dbo:parent ?parentOfRoger ;
         dbo:childOf ?williamI .
  
  # Ensure the child is royalty and an office holder
  ?child a dbo:Royalty ;
         dbo:officeHolder ?office .

  # Identify the father of this child
  ?child dbo:father ?father .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandparent WHERE {
  dbr:Charles_I_of_Hungary dbo:father ?father .
  ?father dbo:father ?grandparent .
  FILTER (?grandparent a dbo:Monarch)
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity ?birthPlace WHERE {
  { 
    ?governor a dbo:Politician ;
              dbo:governorOf dbr:Virginia .
    ?governor dbo:birthPlace ?birthPlace .
    BIND(?governor AS ?entity)
  }
  UNION
  {
    ?award a dbo:Award ;
           dbo:recipient ?awardee .
    ?vinceGilligan dbo:creatorOf ?work .
    ?work dbo:relatedAward ?award .
    ?awardee dbo:birthPlace ?birthPlace .
    BIND(?awardee AS ?entity)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify the 2nd Dragoon Regiment (France)
  dbr:2nd_Dragoon_Regiment_(France) a dbo:MilitaryUnit ;
                                    dbo:participatedIn ?war .

  # Ensure the war is a societal event, an event, and has a television show
  ?war a dbo:SocietalEvent ;
       a dbo:Event .
  
  OPTIONAL { 
    ?tvShow dbo:subject ?war ;
            a dbo:TelevisionProgram .
  }

  # Find the commander of the regiment during this war
  dbr:2nd_Dragoon_Regiment_(France) dbo:commander ?commander .
}
```",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vitesseManager ?bochumManager WHERE {
  # Manager of SBV Vitesse (current manager)
  OPTIONAL { 
    dbr:SBV_Vitesse dbo:manager ?vitesseManager .
  }
  
  # Manager of VfL Bochum
  OPTIONAL { 
    dbr:VfL_Bochum dbo:manager ?bochumManager .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor ?spouse ?childOfParent WHERE {
  # Find the predecessor of Myat Hpone Pyo
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  OPTIONAL { ?myatHponePyo dbo:predecessor ?predecessor . }

  # Find the spouse of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?sawShweKhet dbo:spouse ?spouse . }

  # Find the child of the parent of the child of Minye Kyawswa
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .
  OPTIONAL { ?minyeKyawswa dbo:child ?child1 . }
  OPTIONAL { ?child1 dbo:parent ?parentOfChild1 . }
  OPTIONAL { ?parentOfChild1 dbo:child ?childOfParent . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  ?child a dbo:Politician ;
         dbo:parent ?father .

  OPTIONAL { ?child foaf:name ?childName . }
  
  FILTER EXISTS { 
    ?victorChild dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby .
    ?victorChild a dbo:Person ;
                foaf:name ""Victor Stanley""@en .
  }

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
